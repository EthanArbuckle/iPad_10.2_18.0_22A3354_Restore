void **sub_23BB1DA60(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void **, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  void **v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v17 = *a1;
      *a1 = *a2;

      v18 = *(int *)(v4 + 48);
      v19 = (char *)a1 + v18;
      a2 = (void **)((char *)a2 + v18);
      v20 = sub_23BB8884C();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
      v23 = v22(v19, 1, v20);
      v24 = v22((char *)a2, 1, v20);
      if (v23)
      {
        if (!v24)
        {
          (*(void (**)(char *, void **, uint64_t))(v21 + 32))(v19, a2, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
          return a1;
        }
      }
      else
      {
        if (!v24)
        {
          (*(void (**)(char *, void **, uint64_t))(v21 + 40))(v19, a2, v20);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
      }
      v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8) - 8) + 64);
      v16 = (void **)v19;
      goto LABEL_8;
    }
    sub_23B989D60((uint64_t)a1, &qword_256A629F0);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0) - 8) + 64);
    v16 = a1;
LABEL_8:
    memcpy(v16, a2, v15);
    return a1;
  }
  if (v8)
    goto LABEL_7;
  *a1 = *a2;
  v9 = *(int *)(v4 + 48);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23BB8884C();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_23BB1DC8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB1DC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23BB1DCD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB1DCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CustomMapStyleSelector.MapAttribution(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A62A58);
}

void sub_23BB1DD3C()
{
  unint64_t v0;

  sub_23BB1F5DC(319, qword_256A62A68, &qword_256A629F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23BB1DDBC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  void **v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *__dst;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
    v8 = a3[5];
    v9 = (void **)(a1 + v8);
    v10 = (void **)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      v15 = *(int *)(v11 + 48);
      v42 = (char *)v10 + v15;
      __dst = (char *)v9 + v15;
      v16 = sub_23BB8884C();
      v41 = *(_QWORD *)(v16 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      v18 = v14;
      if (v17(v42, 1, v16))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
        memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dst, v42, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
    *(void **)((char *)v9 + *(int *)(v20 + 28)) = *(void **)((char *)v10 + *(int *)(v20 + 28));
    v21 = a3[6];
    v22 = a3[7];
    v23 = a1 + v21;
    v24 = (__int128 *)((char *)a2 + v21);
    *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
    v25 = v24[2];
    v26 = *v24;
    *(_OWORD *)(v23 + 16) = v24[1];
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)v23 = v26;
    v27 = (_QWORD *)(a1 + v22);
    v28 = (uint64_t *)((char *)a2 + v22);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_23BB894A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v30 = a3[8];
    v31 = (_QWORD *)(a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v33 = sub_23BB89A10();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E8);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
    }
    else
    {
      *v31 = *v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v36 = a3[9];
    v37 = a1 + v36;
    v38 = (uint64_t)a2 + v36;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t sub_23BB1E124(uint64_t a1, int *a2)
{
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  swift_release();
  v4 = (id *)(a1 + a2[5]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {

    v6 = (char *)v4 + *(int *)(v5 + 48);
    v7 = sub_23BB8884C();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  swift_release();
  v9 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB894A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_23BB89A10();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v14 = a1 + a2[9];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

uint64_t sub_23BB1E2D8(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *__dst;
  int *v43;

  v3 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v7 = a3[5];
  v8 = (void **)(a1 + v7);
  v9 = (void **)(a2 + v7);
  swift_retain();
  swift_retain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    v14 = *(int *)(v10 + 48);
    __dst = (char *)v8 + v14;
    v43 = v3;
    v41 = (char *)v9 + v14;
    v15 = sub_23BB8884C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v13;
    if (v17(v41, 1, v15))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
      memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v41, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    v3 = v43;
  }
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  *(void **)((char *)v8 + *(int *)(v20 + 28)) = *(void **)((char *)v9 + *(int *)(v20 + 28));
  v21 = v3[6];
  v22 = v3[7];
  v23 = a1 + v21;
  v24 = (__int128 *)(a2 + v21);
  *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
  v25 = v24[2];
  v26 = *v24;
  *(_OWORD *)(v23 + 16) = v24[1];
  *(_OWORD *)(v23 + 32) = v25;
  *(_OWORD *)v23 = v26;
  v27 = (_QWORD *)(a1 + v22);
  v28 = (_QWORD *)(a2 + v22);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = sub_23BB894A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v30 = v3[8];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v33 = sub_23BB89A10();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  else
  {
    *v31 = *v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v36 = v3[9];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

uint64_t sub_23BB1E618(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void **, uint64_t, uint64_t);
  int v12;
  int v13;
  void *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  size_t v21;
  void **v22;
  void **v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void **v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void **, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *__dst;
  void **__dsta;
  int *v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = a3[5];
  v7 = (void **)(a1 + v6);
  v8 = (void **)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v24 = *v8;
      v25 = *v7;
      *v7 = *v8;
      v26 = v24;

      v27 = *(int *)(v9 + 48);
      v28 = (void **)((char *)v7 + v27);
      v29 = (char *)v8 + v27;
      v30 = sub_23BB8884C();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v31 + 48);
      __dsta = v28;
      LODWORD(v28) = v32(v28, 1, v30);
      v33 = v32((void **)v29, 1, v30);
      if ((_DWORD)v28)
      {
        if (!v33)
        {
          (*(void (**)(void **, char *, uint64_t))(v31 + 16))(__dsta, v29, v30);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dsta, 0, 1, v30);
          goto LABEL_14;
        }
        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8) - 8) + 64);
        v22 = __dsta;
        v23 = (void **)v29;
      }
      else
      {
        if (!v33)
        {
          (*(void (**)(void **, char *, uint64_t))(v31 + 24))(__dsta, v29, v30);
          goto LABEL_14;
        }
        (*(void (**)(void **, uint64_t))(v31 + 8))(__dsta, v30);
        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8) - 8) + 64);
        v22 = __dsta;
        v23 = (void **)v29;
      }
LABEL_8:
      memcpy(v22, v23, v21);
      goto LABEL_14;
    }
    sub_23B989D60((uint64_t)v7, &qword_256A629F0);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0) - 8) + 64);
    v22 = v7;
    v23 = v8;
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  v56 = a3;
  v14 = *v8;
  *v7 = *v8;
  v15 = *(int *)(v9 + 48);
  __dst = (char *)v7 + v15;
  v16 = (char *)v8 + v15;
  v17 = sub_23BB8884C();
  v53 = *(_QWORD *)(v17 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v19 = v14;
  if (v18(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
    memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(__dst, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v17);
  }
  a3 = v56;
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  *(void **)((char *)v7 + *(int *)(v34 + 28)) = *(void **)((char *)v8 + *(int *)(v34 + 28));
  swift_retain();
  swift_release();
  v35 = a3[6];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v36[2] = v37[2];
  v36[3] = v37[3];
  v36[4] = v37[4];
  v36[5] = v37[5];
  v36[6] = v37[6];
  if (a1 != a2)
  {
    v38 = a3[7];
    v39 = (_QWORD *)(a1 + v38);
    v40 = (_QWORD *)(a2 + v38);
    sub_23B989D60(a1 + v38, &qword_256A5A1A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = sub_23BB894A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    }
    else
    {
      *v39 = *v40;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v42 = a3[8];
    v43 = (_QWORD *)(a1 + v42);
    v44 = (_QWORD *)(a2 + v42);
    sub_23B989D60(a1 + v42, &qword_256A5D5D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v45 = sub_23BB89A10();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E8);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
    }
    else
    {
      *v43 = *v44;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v48 = a3[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
  return a1;
}

uint64_t sub_23BB1EB04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 48);
    __dst = (char *)v7 + v12;
    v13 = (char *)v8 + v12;
    v14 = sub_23BB8884C();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  *(_QWORD *)((char *)v7 + *(int *)(v17 + 28)) = *(_QWORD *)((char *)v8 + *(int *)(v17 + 28));
  v18 = a3[6];
  v19 = a3[7];
  v20 = a1 + v18;
  v21 = (__int128 *)(a2 + v18);
  *(_QWORD *)(v20 + 48) = *((_QWORD *)v21 + 6);
  v22 = v21[2];
  v23 = *v21;
  *(_OWORD *)(v20 + 16) = v21[1];
  *(_OWORD *)(v20 + 32) = v22;
  *(_OWORD *)v20 = v23;
  v24 = (void *)(a1 + v19);
  v25 = (const void *)(a2 + v19);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_23BB894A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = a3[8];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_23BB89A10();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E8);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v29, v30, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  v35 = a3[9];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t sub_23BB1EE18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void **, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void **v20;
  const void *v21;
  void *v22;
  uint64_t v23;
  void **v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void **, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v52;
  char *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = a3[5];
  v7 = (void **)(a1 + v6);
  v8 = (void **)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v22 = *v7;
      *v7 = *v8;

      v23 = *(int *)(v9 + 48);
      v24 = (void **)((char *)v7 + v23);
      v25 = (char *)v8 + v23;
      v26 = sub_23BB8884C();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
      v52 = v24;
      LODWORD(v24) = v28(v24, 1, v26);
      v29 = v28((void **)v25, 1, v26);
      if ((_DWORD)v24)
      {
        if (!v29)
        {
          (*(void (**)(void **, char *, uint64_t))(v27 + 32))(v52, v25, v26);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v52, 0, 1, v26);
          goto LABEL_14;
        }
        v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8) - 8) + 64);
        v20 = v52;
        v21 = v25;
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void **, char *, uint64_t))(v27 + 40))(v52, v25, v26);
          goto LABEL_14;
        }
        (*(void (**)(void **, uint64_t))(v27 + 8))(v52, v26);
        v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8) - 8) + 64);
        v20 = v52;
        v21 = v25;
      }
LABEL_8:
      memcpy(v20, v21, v19);
      goto LABEL_14;
    }
    sub_23B989D60((uint64_t)v7, &qword_256A629F0);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0) - 8) + 64);
    v20 = v7;
    v21 = v8;
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  *v7 = *v8;
  v14 = *(int *)(v9 + 48);
  __dst = (char *)v7 + v14;
  v15 = (char *)v8 + v14;
  v16 = sub_23BB8884C();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  *(void **)((char *)v7 + *(int *)(v30 + 28)) = *(void **)((char *)v8 + *(int *)(v30 + 28));
  swift_release();
  v31 = a3[6];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 48) = *(_QWORD *)(v33 + 48);
  if (a1 != a2)
  {
    v35 = a3[7];
    v36 = (void *)(a1 + v35);
    v37 = (const void *)(a2 + v35);
    sub_23B989D60(a1 + v35, &qword_256A5A1A0);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v39 = sub_23BB894A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    v40 = a3[8];
    v41 = (void *)(a1 + v40);
    v42 = (const void *)(a2 + v40);
    sub_23B989D60(a1 + v40, &qword_256A5D5D0);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = sub_23BB89A10();
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E8);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v41, v42, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
  }
  v47 = a3[9];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t sub_23BB1F2AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB1F2B8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256A603D8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256A62AA0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[8];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_23BB1F3B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB1F3BC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256A603D8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256A62AA0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[8];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CustomMapStyleSelector(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A62B00);
}

void sub_23BB1F4C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23BB0B520(319, &qword_256A62B10, type metadata accessor for CustomMapStyleSelector.MapAttribution, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
  {
    sub_23BB0B520(319, (unint64_t *)&qword_256A60460, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_23BB1F5DC(319, qword_256A62B18, &qword_256A5D5E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_23BABF660();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_23BB1F5DC(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23BB1F634()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB1F644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB18864(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BB1F64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB18CE0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BB1F654()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62BA0;
  if (!qword_256A62BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B98);
    v2[0] = sub_23B996E1C(&qword_256A62BA8, &qword_256A62BB0, MEMORY[0x24BDEB188]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62BA0);
  }
  return result;
}

uint64_t sub_23BB1F6DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB18EA4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BB1F6E4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BB1C0A4(a1, a2);
}

uint64_t sub_23BB1F700()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomMapStyleSelector.MapAttribution(0) - 8) + 80);
  v2 = (id *)(v0 + ((v1 + 16) & ~v1));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {

    v4 = (char *)v2 + *(int *)(v3 + 48);
    v5 = sub_23BB8884C();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return swift_deallocObject();
}

void sub_23BB1F7D0()
{
  type metadata accessor for CustomMapStyleSelector.MapAttribution(0);
  sub_23BB1C838();
}

uint64_t sub_23BB1F808@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23BB1CC0C(*(void ***)(v1 + 16), a1);
}

unint64_t sub_23BB1F810()
{
  unint64_t result;

  result = qword_256A62C18;
  if (!qword_256A62C18)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB95FDC, &type metadata for CustomMapStyleSelector.CustomAttributedText);
    atomic_store(result, (unint64_t *)&qword_256A62C18);
  }
  return result;
}

uint64_t sub_23BB1F85C()
{
  return swift_deallocObject();
}

uint64_t sub_23BB1F86C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for CustomMapStyleSelector(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 17) & ~v2);
  swift_release();
  swift_release();
  v4 = (id *)(v3 + v1[5]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {

    v6 = (char *)v4 + *(int *)(v5 + 48);
    v7 = sub_23BB8884C();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  swift_release();
  v9 = v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB894A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_23BB89A10();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v14 = v3 + v1[9];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return swift_deallocObject();
}

uint64_t sub_23BB1FA64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomMapStyleSelector(0) - 8) + 80);
  return sub_23BB1A4C4(*(_BYTE *)(v0 + 16), v0 + ((v1 + 17) & ~v1));
}

uint64_t sub_23BB1FA94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB1A6FC(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_23BB1FA9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62CB0;
  if (!qword_256A62CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62CA8);
    v2[0] = sub_23B9C63A8();
    v2[1] = sub_23B97D0C8(&qword_256A62CB8, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62CB0);
  }
  return result;
}

unint64_t sub_23BB1FB20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62CE0;
  if (!qword_256A62CE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62C80);
    v2[0] = sub_23B996E1C(&qword_256A62CD8, &qword_256A62C78, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23B97D0C8(&qword_256A62CB8, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62CE0);
  }
  return result;
}

uint64_t sub_23BB1FBBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23BB89650();
  *a1 = v3;
  return result;
}

uint64_t sub_23BB1FBE4()
{
  return sub_23BB8965C();
}

uint64_t sub_23BB1FC10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB1B6B0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BB1FC18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A62D80;
  if (!qword_256A62D80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62D70);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AD18);
    v2[3] = swift_getOpaqueTypeConformance2();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62D80);
  }
  return result;
}

unint64_t sub_23BB1FCF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62D90;
  if (!qword_256A62D90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62D68);
    v2[0] = sub_23B996E1C(&qword_256A62D98, &qword_256A62D60, MEMORY[0x24BDF1A70]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62D90);
  }
  return result;
}

uint64_t sub_23BB1FD80()
{
  return sub_23BB1FFAC((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23BB1BC18);
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for CustomMapStyleSelector(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  swift_release();
  v4 = (id *)(v3 + v1[5]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {

    v6 = (char *)v4 + *(int *)(v5 + 48);
    v7 = sub_23BB8884C();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  swift_release();
  v9 = v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB894A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  v11 = v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_23BB89A10();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  v14 = v3 + v1[9];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return swift_deallocObject();
}

uint64_t sub_23BB1FF90(uint64_t a1)
{
  return sub_23BB2000C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_23BB1BC7C);
}

uint64_t sub_23BB1FFA0()
{
  return sub_23BB1FFAC((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23BB1BD60);
}

uint64_t sub_23BB1FFAC(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomMapStyleSelector(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_23BB20000(uint64_t a1)
{
  return sub_23BB2000C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_23BB1BDC4);
}

uint64_t sub_23BB2000C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomMapStyleSelector(0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v4 + 32) & ~v4));
}

ValueMetadata *type metadata accessor for CustomMapStyleSelector.CustomAttributedText()
{
  return &type metadata for CustomMapStyleSelector.CustomAttributedText;
}

uint64_t getEnumTagSinglePayload for CustomMapStyleSelector.Style(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CustomMapStyleSelector.Style(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CustomMapStyleSelector.Style()
{
  return &type metadata for CustomMapStyleSelector.Style;
}

uint64_t sub_23BB200D4()
{
  return sub_23B996E1C(&qword_256A62DC0, &qword_256A62DC8, MEMORY[0x24BDED358]);
}

unint64_t sub_23BB20104()
{
  unint64_t result;

  result = qword_256A62DD0;
  if (!qword_256A62DD0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB95F4C, &type metadata for CustomMapStyleSelector.CustomAttributedText);
    atomic_store(result, (unint64_t *)&qword_256A62DD0);
  }
  return result;
}

uint64_t PeopleLocationsProvider.Subscription.Identifier.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(result + 8);
  v3 = *(_BYTE *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v3;
  return result;
}

uint64_t PeopleLocationsProvider.Subscription.init(identifier:priority:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;

  v3 = *(_QWORD *)(result + 8);
  v4 = *(_BYTE *)(result + 16);
  v5 = *a2;
  *(_QWORD *)a3 = *(_QWORD *)result;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = v4;
  *(_BYTE *)(a3 + 17) = v5;
  return result;
}

__n128 PeopleLocationsProvider.LocationState.init(isLoading:location:)@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _BYTE v9[128];
  _OWORD v10[8];
  uint64_t v11;

  sub_23BACABCC(a2, (uint64_t)v9);
  LOBYTE(v10[0]) = a1;
  sub_23BACABCC((uint64_t)v9, (uint64_t)v10 + 8);
  v5 = v10[7];
  *(_OWORD *)(a3 + 96) = v10[6];
  *(_OWORD *)(a3 + 112) = v5;
  *(_QWORD *)(a3 + 128) = v11;
  v6 = v10[3];
  *(_OWORD *)(a3 + 32) = v10[2];
  *(_OWORD *)(a3 + 48) = v6;
  v7 = v10[5];
  *(_OWORD *)(a3 + 64) = v10[4];
  *(_OWORD *)(a3 + 80) = v7;
  result = (__n128)v10[1];
  *(_OWORD *)a3 = v10[0];
  *(__n128 *)(a3 + 16) = result;
  return result;
}

BOOL static PeopleLocationsProvider.Subscription.Identifier.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  return (v4 || (sub_23BB8B1A4() & 1) != 0) && v2 == v3;
}

uint64_t PeopleLocationsProvider.Subscription.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void PeopleLocationsProvider.Subscription.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

BOOL static PeopleLocationsProvider.Subscription.Priority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PeopleLocationsProvider.Subscription.Priority.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t PeopleLocationsProvider.Subscription.Priority.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t PeopleLocationsProvider.Subscription.Identifier.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t PeopleLocationsProvider.Subscription.Identifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  return swift_bridgeObjectRelease();
}

uint64_t PeopleLocationsProvider.Subscription.Identifier.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t PeopleLocationsProvider.Subscription.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  return sub_23BB8B24C();
}

uint64_t PeopleLocationsProvider.Subscription.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BB204D4()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BB2055C()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  return sub_23BB8B24C();
}

uint64_t sub_23BB205C8()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t PeopleLocationsProvider.LocationState.isLoading.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PeopleLocationsProvider.LocationState.isLoading.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PeopleLocationsProvider.LocationState.isLoading.modify())()
{
  return nullsub_1;
}

_QWORD *PeopleLocationsProvider.LocationState.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_23BACABCC(v1 + 8, (uint64_t)v4);
  sub_23BACABCC((uint64_t)v4, a1);
  return sub_23B9CAF00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
}

uint64_t PeopleLocationsProvider.LocationState.location.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[128];
  _QWORD v4[17];

  sub_23BACABCC(a1, (uint64_t)v3);
  sub_23BACABCC(v1 + 8, (uint64_t)v4);
  sub_23B9CAF00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
  return sub_23BACABCC((uint64_t)v3, v1 + 8);
}

uint64_t (*PeopleLocationsProvider.LocationState.location.modify())()
{
  return nullsub_1;
}

uint64_t PeopleLocationsProvider.LocationStreamValue.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

_QWORD *PeopleLocationsProvider.LocationStreamValue.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_23BACABCC(v1 + 24, (uint64_t)v4);
  sub_23BACABCC((uint64_t)v4, a1);
  return sub_23B9CAF00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
}

uint64_t PeopleLocationsProvider.LocationStreamValue.location.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[128];
  _QWORD v4[17];

  sub_23BACABCC(a1, (uint64_t)v3);
  sub_23BACABCC(v1 + 24, (uint64_t)v4);
  sub_23B9CAF00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
  return sub_23BACABCC((uint64_t)v3, v1 + 24);
}

uint64_t (*PeopleLocationsProvider.LocationStreamValue.location.modify())()
{
  return nullsub_1;
}

BOOL _s12FindMyUICore23PeopleLocationsProviderC12SubscriptionV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  char v7;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v4)
      return 0;
    return v3 == v5;
  }
  v7 = sub_23BB8B1A4();
  result = 0;
  if ((v7 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

BOOL _s12FindMyUICore23PeopleLocationsProviderC13LocationStateV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3;
  int v4;
  char MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0;
  _OWORD v7[8];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16[16];
  _OWORD v17[8];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26[16];
  uint64_t v27;
  uint64_t v28[16];
  _QWORD v29[16];
  _QWORD v30[16];

  v3 = *a1;
  sub_23BACABCC((uint64_t)(a1 + 8), (uint64_t)v29);
  v4 = *a2;
  sub_23BACABCC((uint64_t)(a2 + 8), (uint64_t)v30);
  if (v3 != v4)
    return 0;
  sub_23BACABCC((uint64_t)v29, (uint64_t)v28);
  if (sub_23B9B20A4(v28) != 1)
  {
    sub_23BACABCC((uint64_t)v29, (uint64_t)&v18);
    sub_23BACABCC((uint64_t)v30, (uint64_t)v26);
    if (sub_23B9B20A4(v26) != 1)
    {
      sub_23BACABCC((uint64_t)v30, (uint64_t)&v8);
      v7[4] = v12;
      v7[5] = v13;
      v7[6] = v14;
      v7[7] = v15;
      v7[0] = v8;
      v7[1] = v9;
      v7[2] = v10;
      v7[3] = v11;
      sub_23BACABCC((uint64_t)v29, (uint64_t)v16);
      sub_23B9CAF00(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      sub_23BAB9DD4(v16);
      MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0 = _s12FindMyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0((uint64_t)&v18, (uint64_t)v7);
      v17[4] = v22;
      v17[5] = v23;
      v17[6] = v24;
      v17[7] = v25;
      v17[0] = v18;
      v17[1] = v19;
      v17[2] = v20;
      v17[3] = v21;
      sub_23BB21B30((id *)v17);
      sub_23B9CAF00(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
      return (MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0 & 1) != 0;
    }
    v12 = v22;
    v13 = v23;
    v14 = v24;
    v15 = v25;
    v8 = v18;
    v9 = v19;
    v10 = v20;
    v11 = v21;
    sub_23BACABCC((uint64_t)v29, (uint64_t)v16);
    sub_23BACABCC((uint64_t)v29, (uint64_t)v17);
    sub_23BAB9DD4((void **)v17);
    sub_23BAB9DD4(v16);
    sub_23BB21B30((id *)&v8);
LABEL_8:
    sub_23BACABCC((uint64_t)v29, (uint64_t)v26);
    sub_23BACABCC((uint64_t)v30, (uint64_t)&v27);
    sub_23B9CAF00(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
    sub_23BB21A50((uint64_t)v26);
    return 0;
  }
  sub_23BACABCC((uint64_t)v30, (uint64_t)v26);
  if (sub_23B9B20A4(v26) != 1)
    goto LABEL_8;
  return 1;
}

BOOL _s12FindMyUICore23PeopleLocationsProviderC19LocationStreamValueV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v11;
  _BOOL8 result;
  char MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0;
  _OWORD v14[8];
  _OWORD v15[8];
  _OWORD v16[8];
  _OWORD v17[8];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26[16];
  uint64_t v27;
  uint64_t v28[16];
  _QWORD v29[16];
  _QWORD v30[16];

  v3 = *a1;
  v4 = a1[1];
  v5 = *((unsigned __int8 *)a1 + 16);
  sub_23BACABCC((uint64_t)(a1 + 3), (uint64_t)v29);
  v6 = *a2;
  v7 = a2[1];
  v8 = (uint64_t)(a2 + 3);
  v9 = *((unsigned __int8 *)a2 + 16);
  sub_23BACABCC(v8, (uint64_t)v30);
  if (v3 == v6 && v4 == v7)
  {
    if (v5 != v9)
      return 0;
    goto LABEL_9;
  }
  v11 = sub_23BB8B1A4();
  result = 0;
  if ((v11 & 1) != 0 && v5 == v9)
  {
LABEL_9:
    sub_23BACABCC((uint64_t)v29, (uint64_t)v28);
    if (sub_23B9B20A4(v28) == 1)
    {
      sub_23BACABCC((uint64_t)v30, (uint64_t)v26);
      if (sub_23B9B20A4(v26) == 1)
        return 1;
      goto LABEL_14;
    }
    sub_23BACABCC((uint64_t)v29, (uint64_t)&v18);
    sub_23BACABCC((uint64_t)v30, (uint64_t)v26);
    if (sub_23B9B20A4(v26) == 1)
    {
      v16[4] = v22;
      v16[5] = v23;
      v16[6] = v24;
      v16[7] = v25;
      v16[0] = v18;
      v16[1] = v19;
      v16[2] = v20;
      v16[3] = v21;
      sub_23BACABCC((uint64_t)v29, (uint64_t)v17);
      sub_23BAB9DD4((void **)v17);
      sub_23BAB9DD4((void **)v17);
      sub_23BB21B30((id *)v16);
LABEL_14:
      sub_23BACABCC((uint64_t)v29, (uint64_t)v26);
      sub_23BACABCC((uint64_t)v30, (uint64_t)&v27);
      sub_23B9CAF00(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      sub_23BB21A50((uint64_t)v26);
      return 0;
    }
    sub_23BACABCC((uint64_t)v30, (uint64_t)v15);
    v14[4] = v15[4];
    v14[5] = v15[5];
    v14[6] = v15[6];
    v14[7] = v15[7];
    v14[0] = v15[0];
    v14[1] = v15[1];
    v14[2] = v15[2];
    v14[3] = v15[3];
    sub_23BACABCC((uint64_t)v29, (uint64_t)v16);
    sub_23B9CAF00(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
    sub_23BAB9DD4((void **)v16);
    MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0 = _s12FindMyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0((uint64_t)&v18, (uint64_t)v14);
    v17[4] = v22;
    v17[5] = v23;
    v17[6] = v24;
    v17[7] = v25;
    v17[0] = v18;
    v17[1] = v19;
    v17[2] = v20;
    v17[3] = v21;
    sub_23BB21B30((id *)v17);
    sub_23B9CAF00(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
    return (MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0 & 1) != 0;
  }
  return result;
}

unint64_t sub_23BB20C98()
{
  unint64_t result;

  result = qword_256A62DD8;
  if (!qword_256A62DD8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleLocationsProvider.Subscription.Priority, &type metadata for PeopleLocationsProvider.Subscription.Priority);
    atomic_store(result, (unint64_t *)&qword_256A62DD8);
  }
  return result;
}

unint64_t sub_23BB20CE0()
{
  unint64_t result;

  result = qword_256A62DE0;
  if (!qword_256A62DE0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleLocationsProvider.Subscription.Identifier, &type metadata for PeopleLocationsProvider.Subscription.Identifier);
    atomic_store(result, (unint64_t *)&qword_256A62DE0);
  }
  return result;
}

unint64_t sub_23BB20D28()
{
  unint64_t result;

  result = qword_256A62DE8;
  if (!qword_256A62DE8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleLocationsProvider.Subscription, &type metadata for PeopleLocationsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A62DE8);
  }
  return result;
}

uint64_t _s12SubscriptionVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.Subscription()
{
  return &type metadata for PeopleLocationsProvider.Subscription;
}

uint64_t _s12SubscriptionV8PriorityOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BB20E04 + 4 * byte_23BB96035[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BB20E38 + 4 * byte_23BB96030[v4]))();
}

uint64_t sub_23BB20E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB20E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB20E48);
  return result;
}

uint64_t sub_23BB20E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB20E5CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BB20E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB20E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.Subscription.Priority()
{
  return &type metadata for PeopleLocationsProvider.Subscription.Priority;
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.Subscription.Identifier()
{
  return &type metadata for PeopleLocationsProvider.Subscription.Identifier;
}

uint64_t _s13LocationStateVwxx(uint64_t result)
{
  void *v1;

  v1 = *(void **)(result + 8);
  if (v1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13LocationStateVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  if (v3)
  {
    *(_QWORD *)(a1 + 8) = v3;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v4;
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v10;
    v11 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v12;
    v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    v15 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v15;
  }
  return a1;
}

uint64_t _s13LocationStateVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  void *v5;
  void *v6;
  __int128 *v7;
  id v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 8);
  v7 = (__int128 *)(a2 + 8);
  v6 = *(void **)(a2 + 8);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 8) = v6;
      v8 = v6;

      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B9C1AF8((id *)(a1 + 8));
      v10 = v7[3];
      v12 = *v7;
      v11 = v7[1];
      v4[2] = v7[2];
      v4[3] = v10;
      *v4 = v12;
      v4[1] = v11;
      v13 = v7[7];
      v15 = v7[4];
      v14 = v7[5];
      v4[6] = v7[6];
      v4[7] = v13;
      v4[4] = v15;
      v4[5] = v14;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v9 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *v7;
    v17 = *(_OWORD *)(a2 + 24);
    v18 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v18;
    *v4 = v16;
    *(_OWORD *)(a1 + 24) = v17;
    v19 = *(_OWORD *)(a2 + 72);
    v20 = *(_OWORD *)(a2 + 88);
    v21 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v21;
    *(_OWORD *)(a1 + 72) = v19;
    *(_OWORD *)(a1 + 88) = v20;
  }
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s13LocationStateVwta(uint64_t a1, uint64_t a2)
{
  void *v3;
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v3)
    goto LABEL_5;
  if (!v5)
  {
    sub_23B9C1AF8((id *)(a1 + 8));
LABEL_5:
    v15 = v6[5];
    v4[4] = v6[4];
    v4[5] = v15;
    v16 = v6[7];
    v4[6] = v6[6];
    v4[7] = v16;
    v17 = v6[1];
    *v4 = *v6;
    v4[1] = v17;
    v18 = v6[3];
    v4[2] = v6[2];
    v4[3] = v18;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13LocationStateVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13LocationStateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.LocationState()
{
  return &type metadata for PeopleLocationsProvider.LocationState;
}

uint64_t _s19LocationStreamValueVwxx(uint64_t a1)
{
  uint64_t result;
  void *v3;

  result = swift_bridgeObjectRelease();
  v3 = *(void **)(a1 + 24);
  if (v3)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19LocationStreamValueVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(void **)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v9;
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v10;
    v11 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v11;
    v12 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v12;
    v13 = *(_QWORD *)(a2 + 136);
    v14 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v13;
    *(_QWORD *)(a1 + 144) = v14;
    v15 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = v5[5];
    *(_OWORD *)(a1 + 88) = v5[4];
    *(_OWORD *)(a1 + 104) = v16;
    v17 = v5[7];
    *(_OWORD *)(a1 + 120) = v5[6];
    *(_OWORD *)(a1 + 136) = v17;
    v18 = v5[1];
    *(_OWORD *)(a1 + 24) = *v5;
    *(_OWORD *)(a1 + 40) = v18;
    v19 = v5[3];
    *(_OWORD *)(a1 + 56) = v5[2];
    *(_OWORD *)(a1 + 72) = v19;
  }
  return a1;
}

uint64_t _s19LocationStreamValueVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  void *v5;
  void *v6;
  __int128 *v7;
  id v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = *(void **)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (__int128 *)(a2 + 24);
  v6 = *(void **)(a2 + 24);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = v6;
      v8 = v6;

      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B9C1AF8((id *)(a1 + 24));
      v10 = *(_OWORD *)(a2 + 72);
      v12 = *v7;
      v11 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v10;
      *v4 = v12;
      *(_OWORD *)(a1 + 40) = v11;
      v13 = *(_OWORD *)(a2 + 136);
      v15 = *(_OWORD *)(a2 + 88);
      v14 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v13;
      *(_OWORD *)(a1 + 88) = v15;
      *(_OWORD *)(a1 + 104) = v14;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    v9 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *v7;
    v17 = *(_OWORD *)(a2 + 40);
    v18 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v18;
    *v4 = v16;
    *(_OWORD *)(a1 + 40) = v17;
    v19 = *(_OWORD *)(a2 + 88);
    v20 = *(_OWORD *)(a2 + 104);
    v21 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v21;
    *(_OWORD *)(a1 + 88) = v19;
    *(_OWORD *)(a1 + 104) = v20;
  }
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s19LocationStreamValueVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(void **)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_23B9C1AF8((id *)(a1 + 24));
LABEL_5:
    v14 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v14;
    v15 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v15;
    v16 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v16;
    v17 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v17;
    return a1;
  }
  *(_QWORD *)(a1 + 24) = v5;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19LocationStreamValueVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s19LocationStreamValueVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.LocationStreamValue()
{
  return &type metadata for PeopleLocationsProvider.LocationStreamValue;
}

uint64_t sub_23BB21A50(uint64_t a1)
{
  void *v3;

  v3 = *(void **)(a1 + 128);
  sub_23B990B20(*(void **)a1);
  sub_23B990B20(v3);
  return a1;
}

id *sub_23BB21B30(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for UIPeopleModule()
{
  return objc_opt_self();
}

uint64_t View.previewGroupForDynamicSizes(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v16 = v9;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62E88);
  v14 = a2;
  v15 = a3;
  MEMORY[0x24260D864](0, &v14, MEMORY[0x24BDF27E8], 0);
  sub_23BB21F00();
  sub_23BB21F4C();
  v14 = a2;
  v15 = a3;
  swift_getOpaqueTypeConformance2();
  return sub_23BB8A1FC();
}

uint64_t sub_23BB21D5C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v6 = MEMORY[0x24260D864](0, &v17, MEMORY[0x24BDF27E8], 0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v17 - v13;
  sub_23BB89DE8();
  v17 = a1;
  v18 = a2;
  swift_getOpaqueTypeConformance2();
  sub_23BAC5FD8((uint64_t)v10, v6, (uint64_t)v14);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  sub_23BAC2FCC((uint64_t)v14, v6, a3);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v6);
}

uint64_t sub_23BB21E8C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_23BB21EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB21D5C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23BB21F00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A62E90;
  if (!qword_256A62E90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62E88);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_256A62E90);
  }
  return result;
}

unint64_t sub_23BB21F4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A62E98;
  if (!qword_256A62E98)
  {
    v1 = sub_23BB894A0();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDECF68], v1);
    atomic_store(result, (unint64_t *)&qword_256A62E98);
  }
  return result;
}

uint64_t sub_23BB21F94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62E88);
  v4 = sub_23BB894A0();
  v11 = v1;
  v12 = v2;
  v5 = MEMORY[0x24260D864](255, &v11, MEMORY[0x24BDF27E8], 0);
  v6 = sub_23BB21F00();
  v7 = sub_23BB21F4C();
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v8 = sub_23BB8A214();
  v11 = v1;
  v12 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  return MEMORY[0x24260D8DC](MEMORY[0x24BDF4A08], v8, &OpaqueTypeConformance2);
}

uint64_t ContactsProvider.Subscription.hash(into:)()
{
  uint64_t v0;

  if (*(char *)(v0 + 16) < 0)
  {
    sub_23BB8B24C();
    return sub_23BB8A808();
  }
  else
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23B9894DC();
    return sub_23BB8B24C();
  }
}

uint64_t ContactsProvider.Subscription.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(char *)(v0 + 16);
  sub_23BB8B240();
  sub_23BB8B24C();
  if (v1 < 0)
  {
    sub_23BB8A808();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23B9894DC();
    sub_23BB8B24C();
  }
  return sub_23BB8B270();
}

uint64_t sub_23BB221B8()
{
  uint64_t v0;
  int v1;

  v1 = *(char *)(v0 + 16);
  sub_23BB8B240();
  sub_23BB8B24C();
  if (v1 < 0)
  {
    sub_23BB8A808();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23B9894DC();
    sub_23BB8B24C();
  }
  return sub_23BB8B270();
}

uint64_t sub_23BB22264()
{
  uint64_t v0;

  if (*(char *)(v0 + 16) < 0)
  {
    sub_23BB8B24C();
    return sub_23BB8A808();
  }
  else
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23B9894DC();
    return sub_23BB8B24C();
  }
}

uint64_t sub_23BB22308()
{
  uint64_t v0;
  int v1;

  v1 = *(char *)(v0 + 16);
  sub_23BB8B240();
  sub_23BB8B24C();
  if (v1 < 0)
  {
    sub_23BB8A808();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23B9894DC();
    sub_23BB8B24C();
  }
  return sub_23BB8B270();
}

uint64_t ContactsProvider.Subscription.debugDescription.getter()
{
  uint64_t v0;

  if (*(char *)(v0 + 16) < 0)
  {
    sub_23BB8AE08();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23BB8AE08();
    swift_bridgeObjectRelease();
    sub_23BB8A7D8();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    swift_bridgeObjectRetain();
    sub_23BB8A82C();
    sub_23B9894DC();
    sub_23BB8A82C();
    sub_23B9894DC();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
  }
  sub_23BB8A82C();
  return 0x746361746E6F632ELL;
}

uint64_t _s12FindMyUICore16ContactsProviderC12SubscriptionO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  char v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *((char *)a1 + 16);
  v6 = *a2;
  v5 = a2[1];
  v7 = *((char *)a2 + 16);
  if ((v4 & 0x80000000) == 0)
  {
    if ((v7 & 0x80000000) == 0)
    {
      v8 = v3 == v6 && v2 == v5;
      if (v8 || (sub_23BB8B1A4() & 1) != 0)
      {
        sub_23B9894D4();
        sub_23B9894D4();
        sub_23B9894DC();
        sub_23B9894DC();
        if (v4 == v7)
        {
          v9 = 1;
          return v9 & 1;
        }
LABEL_12:
        v9 = 0;
        return v9 & 1;
      }
    }
LABEL_11:
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    goto LABEL_12;
  }
  if ((v7 & 0x80000000) == 0)
    goto LABEL_11;
  if (v3 == v6 && v2 == v5)
    v9 = 1;
  else
    v9 = sub_23BB8B1A4();
  sub_23B9894D4();
  sub_23B9894D4();
  sub_23B9894DC();
  sub_23B9894DC();
  return v9 & 1;
}

unint64_t sub_23BB226AC()
{
  unint64_t result;

  result = qword_256A62EA0;
  if (!qword_256A62EA0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ContactsProvider.Subscription, &type metadata for ContactsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A62EA0);
  }
  return result;
}

uint64_t _s12SubscriptionOwxx_0()
{
  return sub_23B9894DC();
}

uint64_t _s12SubscriptionOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23B9894D4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s12SubscriptionOwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23B9894D4();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23B9894DC();
  return a1;
}

uint64_t _s12SubscriptionOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23B9894DC();
  return a1;
}

uint64_t _s12SubscriptionOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3F && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 63);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x3E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s12SubscriptionOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 63;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_23BB2288C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_23BB22898(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_23BB228A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for ContactsProvider.Subscription()
{
  return &type metadata for ContactsProvider.Subscription;
}

uint64_t Location.distance(from:)(_QWORD *a1)
{
  id *v1;
  id v2;

  objc_msgSend(*v1, sel_distanceFromLocation_, *a1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_meters);
  sub_23B9C60B4(0, (unint64_t *)&qword_256A58F00);
  return sub_23BB88678();
}

FindMyUICore::Location __swiftcall Location.init(clLocation:)(FindMyUICore::Location clLocation)
{
  Class *v1;

  *v1 = clLocation.clLocation.super.isa;
  return clLocation;
}

uint64_t static Location.== infix(_:_:)()
{
  sub_23B9C60B4(0, (unint64_t *)&qword_256A60AE0);
  return sub_23BB8AC70() & 1;
}

id Location.coordinate.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_coordinate);
}

id Location.horizontalAccuracy.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_horizontalAccuracy);
}

void Location.timestamp.getter()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_timestamp);
  sub_23BB8896C();

}

void Location.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_23BB8AC7C();

}

uint64_t Location.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_23BB8B240();
  v2 = v1;
  sub_23BB8AC7C();

  return sub_23BB8B270();
}

uint64_t sub_23BB22AB0()
{
  sub_23B9C60B4(0, (unint64_t *)&qword_256A60AE0);
  return sub_23BB8AC70() & 1;
}

uint64_t sub_23BB22B00()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_23BB8B240();
  v2 = v1;
  sub_23BB8AC7C();

  return sub_23BB8B270();
}

void sub_23BB22B4C()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_23BB8AC7C();

}

uint64_t sub_23BB22B90()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_23BB8B240();
  v2 = v1;
  sub_23BB8AC7C();

  return sub_23BB8B270();
}

unint64_t sub_23BB22BDC()
{
  unint64_t result;

  result = qword_256A62EA8;
  if (!qword_256A62EA8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Location, &type metadata for Location);
    atomic_store(result, (unint64_t *)&qword_256A62EA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Location()
{
  return &type metadata for Location;
}

uint64_t type metadata accessor for InteractiveMapModule()
{
  return objc_opt_self();
}

uint64_t sub_23BB22C50(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  void *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v9 = (int *)type metadata accessor for Annotation();
    v10 = v9[7];
    __dst = (void *)(v4 + v10);
    v11 = (char *)a2 + v10;
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(_QWORD *)(v4 + v9[8]) = *(uint64_t *)((char *)a2 + v9[8]);
    v17 = v9[9];
    v18 = v4 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = *(id *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_BYTE *)(v19 + 32);
    sub_23B9A618C(*(id *)v19, v21, v22, v23, v24);
    *(_QWORD *)v18 = v20;
    *(_QWORD *)(v18 + 8) = v21;
    *(_QWORD *)(v18 + 16) = v22;
    *(_QWORD *)(v18 + 24) = v23;
    *(_BYTE *)(v18 + 32) = v24;
    v25 = v9[10];
    v26 = (_QWORD *)(v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    if (v28)
    {
      *v26 = *v27;
      v26[1] = v28;
      v29 = v27[3];
      v26[2] = v27[2];
      v26[3] = v29;
      v26[4] = v27[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v30 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v30;
      v26[4] = v27[4];
    }
    v31 = a3[5];
    v32 = a3[6];
    v33 = v4 + v31;
    v34 = (uint64_t)a2 + v31;
    v35 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v35;
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
    *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
    v36 = v4 + v32;
    v37 = (uint64_t)a2 + v32;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
    v38 = *(_QWORD *)(v37 + 24);
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
    *(_QWORD *)(v36 + 24) = v38;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
    *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
    v39 = a3[8];
    *(_BYTE *)(v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_BYTE *)(v4 + v39) = *((_BYTE *)a2 + v39);
    v40 = a3[9];
    v41 = a3[10];
    v42 = v4 + v40;
    v43 = (uint64_t)a2 + v40;
    *(_BYTE *)v42 = *(_BYTE *)v43;
    *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
    v44 = (_QWORD *)(v4 + v41);
    v45 = (uint64_t *)((char *)a2 + v41);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BB22EE4(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Annotation();
  v3 = a1 + v2[7];
  v4 = sub_23BB88984();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = a1 + v2[9];
  sub_23B9A6310(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_BYTE *)(v6 + 32));
  if (*(_QWORD *)(a1 + v2[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BB22FF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = (int *)type metadata accessor for Annotation();
  v9 = v8[7];
  __dst = (void *)(a1 + v9);
  v10 = (const void *)(a2 + v9);
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v15 = v8[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(id *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  v21 = *(_QWORD *)(v17 + 24);
  v22 = *(_BYTE *)(v17 + 32);
  sub_23B9A618C(*(id *)v17, v19, v20, v21, v22);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v21;
  *(_BYTE *)(v16 + 32) = v22;
  v23 = v8[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  if (v26)
  {
    *v24 = *v25;
    v24[1] = v26;
    v27 = v25[3];
    v24[2] = v25[2];
    v24[3] = v27;
    v24[4] = v25[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    v24[4] = v25[4];
  }
  v29 = a3[5];
  v30 = a3[6];
  v31 = a1 + v29;
  v32 = a2 + v29;
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
  v34 = a1 + v30;
  v35 = a2 + v30;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  v36 = *(_QWORD *)(v35 + 24);
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v35 + 16);
  *(_QWORD *)(v34 + 24) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_OWORD *)(v34 + 40) = *(_OWORD *)(v35 + 40);
  v37 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  v38 = a3[9];
  v39 = a3[10];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  v42 = (_QWORD *)(a1 + v39);
  v43 = (_QWORD *)(a2 + v39);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23BB2325C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  v6 = (int *)type metadata accessor for Annotation();
  v7 = v6[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  v16 = v6[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(id *)v18;
  v20 = *((_QWORD *)v18 + 1);
  v21 = *((_QWORD *)v18 + 2);
  v22 = *((_QWORD *)v18 + 3);
  v23 = v18[32];
  sub_23B9A618C(*(id *)v18, v20, v21, v22, v23);
  v24 = *(void **)v17;
  v25 = *((_QWORD *)v17 + 1);
  v26 = *((_QWORD *)v17 + 2);
  v27 = *((_QWORD *)v17 + 3);
  *(_QWORD *)v17 = v19;
  *((_QWORD *)v17 + 1) = v20;
  *((_QWORD *)v17 + 2) = v21;
  *((_QWORD *)v17 + 3) = v22;
  v28 = v17[32];
  v17[32] = v23;
  sub_23B9A6310(v24, v25, v26, v27, v28);
  v29 = v6[10];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v32 = *(_QWORD *)((char *)a1 + v29 + 8);
  v33 = *(_QWORD *)((char *)a2 + v29 + 8);
  if (v32)
  {
    if (v33)
    {
      *v30 = *v31;
      v30[1] = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30[2] = v31[2];
      v30[3] = v31[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30[4] = v31[4];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_23B9A6BDC((uint64_t)v30);
      v34 = v31[4];
      v35 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v35;
      v30[4] = v34;
    }
  }
  else if (v33)
  {
    *v30 = *v31;
    v30[1] = v31[1];
    v30[2] = v31[2];
    v30[3] = v31[3];
    v30[4] = v31[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v36 = *(_OWORD *)v31;
    v37 = *((_OWORD *)v31 + 1);
    v30[4] = v31[4];
    *(_OWORD *)v30 = v36;
    *((_OWORD *)v30 + 1) = v37;
  }
  v38 = a3[5];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  v39[2] = v40[2];
  v39[3] = v40[3];
  v39[4] = v40[4];
  v39[5] = v40[5];
  v39[6] = v40[6];
  v41 = a3[6];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  *(_QWORD *)((char *)a1 + v41) = *(_QWORD *)((char *)a2 + v41);
  swift_retain();
  swift_release();
  v42[8] = v43[8];
  *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
  swift_retain();
  swift_release();
  *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  swift_retain();
  swift_release();
  *((_QWORD *)v42 + 5) = *((_QWORD *)v43 + 5);
  *((_QWORD *)v42 + 6) = *((_QWORD *)v43 + 6);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v44 = a3[9];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *v45 = *v46;
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  swift_retain();
  swift_release();
  v47 = a3[10];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  *(_QWORD *)((char *)a1 + v47) = *(_QWORD *)((char *)a2 + v47);
  swift_retain();
  swift_release();
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23BB2363C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = (int *)type metadata accessor for Annotation();
  v8 = v7[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
  v14 = v7[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  v18 = v7[10];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = a3[5];
  v23 = a3[6];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
  v27 = (char *)a1 + v23;
  v28 = (char *)a2 + v23;
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
  v30 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  v31 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v31) = *(_OWORD *)((char *)a2 + v31);
  return a1;
}

uint64_t sub_23BB237CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = (int *)type metadata accessor for Annotation();
  v9 = v8[7];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_23BB88984();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v18 = v8[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_BYTE *)(v20 + 32);
  v22 = *(void **)v19;
  v23 = *(_QWORD *)(v19 + 8);
  v24 = *(_QWORD *)(v19 + 16);
  v25 = *(_QWORD *)(v19 + 24);
  v26 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v26;
  v27 = *(_BYTE *)(v19 + 32);
  *(_BYTE *)(v19 + 32) = v21;
  sub_23B9A6310(v22, v23, v24, v25, v27);
  v28 = v8[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (!*(_QWORD *)(a1 + v28 + 8))
  {
LABEL_11:
    v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
    goto LABEL_12;
  }
  v31 = *(_QWORD *)(v30 + 8);
  if (!v31)
  {
    sub_23B9A6BDC(v29);
    goto LABEL_11;
  }
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  swift_release();
LABEL_12:
  v34 = a3[5];
  v35 = a3[6];
  v36 = a1 + v34;
  v37 = a2 + v34;
  v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
  v39 = a1 + v35;
  v40 = a2 + v35;
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  swift_release();
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
  swift_release();
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
  swift_release();
  *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
  v41 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  v42 = a3[9];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_BYTE *)v43 = *(_BYTE *)v44;
  *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
  swift_release();
  v45 = a3[10];
  v46 = a1 + v45;
  v47 = (_QWORD *)(a2 + v45);
  *(_QWORD *)(a1 + v45) = *v47;
  swift_release();
  *(_QWORD *)(v46 + 8) = v47[1];
  swift_release();
  return a1;
}

uint64_t sub_23BB23A84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB23A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Annotation();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BB23B0C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB23B18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Annotation();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AnnotationView()
{
  uint64_t result;

  result = qword_256A62FA0;
  if (!qword_256A62FA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB23BCC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Annotation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BB23C60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB23C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double (*v42)@<D0>(uint64_t@<X8>);
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  _OWORD v71[3];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _OWORD v78[3];
  __int128 v79;

  v62 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63060);
  MEMORY[0x24BDAC7A8](v61, v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Annotation();
  v5 = v1 + *(int *)(v60 + 36);
  v7 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)&v55 = *(_QWORD *)v5;
  v6 = (void *)v55;
  *((_QWORD *)&v55 + 1) = v7;
  v8 = *(_QWORD *)(v5 + 24);
  v56 = *(_QWORD *)(v5 + 16);
  v9 = v56;
  v10 = *(_BYTE *)(v5 + 32);
  v53 = v10;
  v11 = type metadata accessor for AnnotationView();
  v13 = *(int *)(v11 + 20);
  v12 = *(int *)(v11 + 24);
  v52 = v1;
  v14 = (uint64_t *)(v1 + v12);
  v15 = *v14;
  v57 = *((unsigned __int8 *)v14 + 8);
  v16 = v14[2];
  v58 = v14[3];
  v17 = v14[5];
  v54 = v14[4];
  v18 = v14[6];
  *(_QWORD *)&v59 = v17;
  *((_QWORD *)&v59 + 1) = v18;
  v51 = *(_QWORD *)(v1 + v13);
  sub_23B9A618C(v6, v7, v9, v8, v10);
  swift_retain();
  v19 = v15;
  swift_retain();
  swift_retain();
  sub_23BB8A2F8();
  sub_23BB8938C();
  v20 = v63;
  v21 = v65;
  v50 = v68;
  v51 = v67;
  v70 = v64;
  v69 = v66;
  v22 = sub_23BB8A2F8();
  v24 = v23;
  v25 = v52;
  sub_23BB2406C(v52, (uint64_t)v71);
  v26 = *(_QWORD *)&v71[0];
  v27 = *((_QWORD *)&v71[2] + 1);
  v28 = *(_OWORD *)((char *)v71 + 8);
  v29 = *(_OWORD *)((char *)&v71[1] + 8);
  v71[0] = v55;
  *(_QWORD *)&v71[1] = v56;
  *((_QWORD *)&v71[1] + 1) = v8;
  LOBYTE(v71[2]) = v53;
  *((_QWORD *)&v71[2] + 1) = v19;
  LOBYTE(v72) = v57;
  *((_QWORD *)&v72 + 1) = v16;
  *(_QWORD *)&v73 = v58;
  *((_QWORD *)&v73 + 1) = v54;
  v74 = v59;
  *(_QWORD *)&v75 = v20;
  BYTE8(v75) = v70;
  *(_QWORD *)&v76 = v21;
  BYTE8(v76) = v69;
  *(_QWORD *)&v77 = v51;
  *((_QWORD *)&v77 + 1) = v50;
  *(_QWORD *)&v78[0] = v26;
  *(_OWORD *)((char *)v78 + 8) = v28;
  *(_OWORD *)((char *)&v78[1] + 8) = v29;
  *((_QWORD *)&v78[2] + 1) = v27;
  *(_QWORD *)&v79 = v22;
  *((_QWORD *)&v79 + 1) = v24;
  v30 = (uint64_t *)(v25 + *(int *)(v60 + 40));
  v32 = *v30;
  v31 = v30[1];
  v33 = v30[2];
  v34 = v30[3];
  v35 = v30[4];
  sub_23BA2F17C(*v30, v31);
  if (qword_256A58D18 != -1)
    swift_once();
  v36 = qword_256A60D80;
  v37 = sub_23BB89C8C();
  v38 = sub_23BB8A2D4();
  v40 = v39;
  v60 = v37;
  if (v31)
  {
    *((_QWORD *)&v59 + 1) = v38;
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v32;
    *(_QWORD *)(v41 + 24) = v31;
    *(_QWORD *)(v41 + 32) = v33;
    *(_QWORD *)(v41 + 40) = v34;
    *(_QWORD *)(v41 + 48) = v35;
    *(_QWORD *)(v41 + 56) = v37;
    *(_WORD *)(v41 + 64) = 0;
    *(_QWORD *)(v41 + 72) = v36;
    swift_retain();
    v38 = *((_QWORD *)&v59 + 1);
    v42 = sub_23BAC5F88;
  }
  else
  {
    v42 = 0;
    v41 = 0;
  }
  v43 = v78[2];
  *((_OWORD *)v4 + 10) = v78[1];
  *((_OWORD *)v4 + 11) = v43;
  *((_OWORD *)v4 + 12) = v79;
  v44 = v76;
  *((_OWORD *)v4 + 6) = v75;
  *((_OWORD *)v4 + 7) = v44;
  v45 = v78[0];
  *((_OWORD *)v4 + 8) = v77;
  *((_OWORD *)v4 + 9) = v45;
  v46 = v72;
  *((_OWORD *)v4 + 2) = v71[2];
  *((_OWORD *)v4 + 3) = v46;
  v47 = v74;
  *((_OWORD *)v4 + 4) = v73;
  *((_OWORD *)v4 + 5) = v47;
  v48 = v71[1];
  *(_OWORD *)v4 = v71[0];
  *((_OWORD *)v4 + 1) = v48;
  *((_QWORD *)v4 + 26) = v42;
  *((_QWORD *)v4 + 27) = v41;
  *((_QWORD *)v4 + 28) = v38;
  *((_QWORD *)v4 + 29) = v40;
  swift_storeEnumTagMultiPayload();
  sub_23BA2F17C(v32, v31);
  sub_23BB259A4((uint64_t)v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A63068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A63070);
  sub_23BB25A18();
  sub_23BB25B20();
  sub_23BB89944();
  swift_release();
  sub_23B9A1464(v32, v31);
  return sub_23BB25C28((uint64_t)v71);
}

double sub_23BB2406C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  char v15;

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  v5 = MEMORY[0x24260BF80](v4);
  v6 = type metadata accessor for AnnotationView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  v7 = 24;
  if (v15)
    v7 = 32;
  v8 = *(_QWORD *)(a1 + *(int *)(v6 + 20) + v7);
  sub_23BB8A37C();
  v10 = v9;
  v12 = v11;
  sub_23BB8A0D0();
  v13 = 8;
  if (v15)
    v13 = 16;
  result = *(double *)(a1 + *(int *)(v6 + 20) + v13);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v12;
  *(double *)(a2 + 40) = result;
  return result;
}

uint64_t sub_23BB24198()
{
  uint64_t result;

  sub_23BB258C0();
  result = sub_23BB89794();
  qword_256A73DC8 = result;
  return result;
}

uint64_t sub_23BB241C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v2 = v1;
  v34 = a1;
  v3 = type metadata accessor for AnnotationView();
  v32 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v3, v5);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v33, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62FF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62FF8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63000);
  v30 = *(_QWORD *)(v17 - 8);
  v31 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = sub_23BB8983C();
  *((_QWORD *)v12 + 1) = 0x4018000000000000;
  v12[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63008);
  sub_23BB24500(v2, (uint64_t)&v12[*(int *)(v21 + 44)]);
  sub_23BB8983C();
  if (qword_256A58DA0 != -1)
    swift_once();
  sub_23BB8938C();
  sub_23B989EFC((uint64_t)v12, (uint64_t)v16, &qword_256A62FF0);
  v22 = &v16[*(int *)(v13 + 36)];
  v23 = v36;
  *(_OWORD *)v22 = v35;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v37;
  sub_23B989D60((uint64_t)v12, &qword_256A62FF0);
  if (*(_BYTE *)(v2 + *(int *)(v3 + 28)) == 1)
  {
    v24 = type metadata accessor for Annotation();
    sub_23B989EFC(v2 + *(int *)(v24 + 28), (uint64_t)v8, (uint64_t *)&unk_256A5E6B0);
  }
  else
  {
    v25 = sub_23BB88984();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
  }
  sub_23BB2530C(v2, (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v27 = swift_allocObject();
  sub_23BB25354((uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26);
  sub_23BB253E4();
  sub_23BB25468();
  sub_23BB89F14();
  swift_release();
  sub_23B989D60((uint64_t)v8, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60((uint64_t)v16, &qword_256A62FF8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v34, v20, v31);
}

uint64_t sub_23BB24500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63048);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63050);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v36 - v13;
  sub_23BB23C70((uint64_t)v6);
  sub_23B989EFC((uint64_t)v6, (uint64_t)v10, &qword_256A63048);
  *(_QWORD *)&v10[*(int *)(v7 + 36)] = 0x3FF0000000000000;
  sub_23B989D60((uint64_t)v6, &qword_256A63048);
  v15 = (uint64_t)v10;
  v41 = v14;
  sub_23BB25904((uint64_t)v10, (uint64_t)v14);
  v16 = type metadata accessor for AnnotationView();
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  if (*(_BYTE *)(a1 + *(int *)(v16 + 32)) == 1)
  {
    v17 = *(_QWORD *)(a1 + *(int *)(v16 + 24) + 16);
    if (!v17)
    {
      v42 = sub_23BB89FA4();
      v17 = sub_23BB89398();
    }
    swift_retain();
    sub_23BB8A2F8();
    sub_23BB8938C();
    v19 = v42;
    v20 = v43;
    v21 = v44;
    v22 = v45;
    v23 = v46;
    v24 = v47;
    if (qword_256A58DA0 != -1)
      swift_once();
    v25 = qword_256A73DC8;
    v26 = sub_23B9C6B90;
    v18 = 256;
  }
  v37 = v23;
  v38 = v24;
  v27 = v15;
  v39 = v15;
  v28 = v15;
  v29 = v25;
  v30 = v26;
  sub_23B989EFC((uint64_t)v41, v28, &qword_256A63050);
  v31 = v27;
  v32 = v40;
  sub_23B989EFC(v31, v40, &qword_256A63050);
  v33 = (uint64_t *)(v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A63058) + 48));
  *v33 = v17;
  v33[1] = v18;
  v33[2] = v19;
  v33[3] = v20;
  v33[4] = v21;
  v33[5] = v22;
  v34 = v38;
  v33[6] = v37;
  v33[7] = v34;
  v33[8] = v29;
  v33[9] = (uint64_t)v30;
  v33[10] = 0;
  sub_23BB2594C(v17);
  sub_23B989D60((uint64_t)v41, &qword_256A63050);
  sub_23BB25978(v17);
  return sub_23B989D60(v39, &qword_256A63050);
}

uint64_t sub_23BB2480C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v26)(unint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(unint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;

  v5 = type metadata accessor for AnnotationView();
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v42 = v7;
  v43 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BB88984();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16, v19);
  v20 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v36 - v23;
  v39 = *(int *)(v5 + 40);
  v44 = *(_OWORD *)(a3 + v39);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63028);
  sub_23BB8A0D0();
  if (v45)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    sub_23BB8AA78();
    swift_release();
  }
  sub_23B989EFC(a2, (uint64_t)v15, (uint64_t *)&unk_256A5E6B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    return sub_23B989D60((uint64_t)v15, (uint64_t *)&unk_256A5E6B0);
  v26 = *(void (**)(unint64_t, char *, uint64_t))(v17 + 32);
  v37 = a3;
  v38 = v26;
  v26((unint64_t)v24, v15, v16);
  v27 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 1, 1, v27);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v24, v16);
  v28 = a3;
  v29 = v43;
  sub_23BB2530C(v28, v43);
  sub_23BB8A9F4();
  v30 = sub_23BB8A9E8();
  v31 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v32 = (v18 + *(unsigned __int8 *)(v41 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v33 = swift_allocObject();
  v34 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v33 + 16) = v30;
  *(_QWORD *)(v33 + 24) = v34;
  v38(v33 + v31, v20, v16);
  sub_23BB25354(v29, v33 + v32);
  v35 = sub_23BB6BAC0((uint64_t)v11, (uint64_t)&unk_256A63038, v33);
  v44 = *(_OWORD *)(v37 + v39);
  v45 = v35;
  sub_23BB8A0DC();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
}

uint64_t sub_23BB24B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[7] = a4;
  v5[8] = a5;
  v6 = sub_23BB89A94();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v7 = type metadata accessor for AnnotationView();
  v5[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[13] = v8;
  v5[14] = *(_QWORD *)(v8 + 64);
  v5[15] = swift_task_alloc();
  v9 = sub_23BB8AF04();
  v5[16] = v9;
  v5[17] = *(_QWORD *)(v9 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v10 = sub_23BB8AF1C();
  v5[20] = v10;
  v5[21] = *(_QWORD *)(v10 - 8);
  v5[22] = swift_task_alloc();
  v11 = sub_23BB88984();
  v5[23] = v11;
  v5[24] = *(_QWORD *)(v11 - 8);
  v5[25] = swift_task_alloc();
  sub_23BB8A9F4();
  v5[26] = sub_23BB8A9E8();
  v5[27] = sub_23BB8A988();
  v5[28] = v12;
  return swift_task_switch();
}

uint64_t sub_23BB24C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  sub_23BB88978();
  v4 = sub_23BB888E8();
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 232) = v5;
  v5(v1, v3);
  if ((v4 & 1) != 0)
  {
    *(_DWORD *)(v0 + 36) = *(_DWORD *)(*(_QWORD *)(v0 + 96) + 20);
    v6 = sub_23BB8B384();
    v8 = v7;
    sub_23BB8AF10();
    *(_QWORD *)(v0 + 40) = v6;
    *(_QWORD *)(v0 + 48) = v8;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB24DA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[16];
  sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23BB8B1EC();
  sub_23B97D0C8((unint64_t *)&unk_256A5E9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23BB8AF28();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[30] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[31] = v5;
  *v5 = v0;
  v5[1] = sub_23BB24EAC;
  return sub_23BB8B1F8();
}

uint64_t sub_23BB24EAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 240))(*(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 128));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 168);
    v3 = *(_QWORD *)(v2 + 176);
    v5 = *(_QWORD *)(v2 + 160);
    (*(void (**)(_QWORD, _QWORD))(v2 + 240))(*(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 128));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_23BB24F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 184);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 72);
  sub_23BB8A31C();
  *(_QWORD *)(swift_task_alloc() + 16) = v5;
  sub_23BB2530C(v5, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_23BB25354(v2, v7 + v6);
  sub_23BB89A88();
  sub_23BB893EC();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v13);
  swift_task_dealloc();
  sub_23BB88978();
  LOBYTE(v5) = sub_23BB888E8();
  v15(v1, v14);
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(v0 + 36) = *(_DWORD *)(*(_QWORD *)(v0 + 96) + 20);
    v8 = sub_23BB8B384();
    v10 = v9;
    sub_23BB8AF10();
    *(_QWORD *)(v0 + 40) = v8;
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB25170()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[22], v0[20]);
  return swift_task_switch();
}

uint64_t sub_23BB251B0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB25234()
{
  type metadata accessor for AnnotationView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

uint64_t sub_23BB252A4()
{
  type metadata accessor for AnnotationView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

uint64_t sub_23BB2530C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnnotationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB25354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnnotationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB25398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnnotationView() - 8) + 80);
  return sub_23BB2480C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_23BB253E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63010;
  if (!qword_256A63010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62FF8);
    v2[0] = sub_23B996E1C(&qword_256A63018, &qword_256A62FF0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63010);
  }
  return result;
}

unint64_t sub_23BB25468()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A63020;
  if (!qword_256A63020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A5E6B0);
    v2 = sub_23B97D0C8(&qword_256A5DE00, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A63020);
  }
  return result;
}

uint64_t sub_23BB254E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;

  v1 = sub_23BB88984();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(type metadata accessor for AnnotationView() - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  v8 = v0 + v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for Annotation();
  v10 = v0 + v6 + v9[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v8 + v9[7], 1, v1))
    v7(v10, v1);
  v11 = v8 + v9[9];
  sub_23B9A6310(*(void **)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_BYTE *)(v11 + 32));
  if (*(_QWORD *)(v8 + v9[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB25674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_23BB88984() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnnotationView() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B97C964;
  return sub_23BB24B2C(a1, v9, v10, v11, v12);
}

uint64_t sub_23BB25728()
{
  return sub_23BB25234();
}

uint64_t objectdestroyTm_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnnotationView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = (int *)type metadata accessor for Annotation();
  v4 = v2 + v3[7];
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v2 + v3[9];
  sub_23B9A6310(*(void **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 32));
  if (*(_QWORD *)(v2 + v3[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB25894()
{
  type metadata accessor for AnnotationView();
  return sub_23BB252A4();
}

unint64_t sub_23BB258C0()
{
  unint64_t result;

  result = qword_256A63040;
  if (!qword_256A63040)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9649C, &type metadata for AnnotationView.CustomVerticalCenter);
    atomic_store(result, (unint64_t *)&qword_256A63040);
  }
  return result;
}

uint64_t sub_23BB25904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB2594C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23BB25978(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BB259A4(uint64_t a1)
{
  sub_23B9A618C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_23BB25A18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63078;
  if (!qword_256A63078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63068);
    v2[0] = sub_23BB25A9C();
    v2[1] = sub_23B996E1C(&qword_256A60E20, &qword_256A60DF0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63078);
  }
  return result;
}

unint64_t sub_23BB25A9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63080;
  if (!qword_256A63080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63088);
    v2[0] = sub_23B9C76C4();
    v2[1] = sub_23B996E1C(&qword_256A63090, &qword_256A63098, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63080);
  }
  return result;
}

unint64_t sub_23BB25B20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A630A0;
  if (!qword_256A630A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63070);
    v2[0] = sub_23BB25BA4();
    v2[1] = sub_23B996E1C(&qword_256A60E20, &qword_256A60DF0, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A630A0);
  }
  return result;
}

unint64_t sub_23BB25BA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A630A8;
  if (!qword_256A630A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630B0);
    v2[0] = sub_23BB25A9C();
    v2[1] = sub_23B996E1C(&qword_256A60E28, &qword_256A60DE8, MEMORY[0x24BDEF828]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A630A8);
  }
  return result;
}

uint64_t sub_23BB25C28(uint64_t a1)
{
  sub_23B9A6310(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_23BB25C9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for AnnotationView.CustomVerticalCenter()
{
  return &type metadata for AnnotationView.CustomVerticalCenter;
}

ValueMetadata *type metadata accessor for AnnotationView.Style()
{
  return &type metadata for AnnotationView.Style;
}

uint64_t sub_23BB25CF8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62FF8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A5E6B0);
  sub_23BB253E4();
  sub_23BB25468();
  return swift_getOpaqueTypeConformance2();
}

uint64_t InteractiveMap.init(annotations:focusOnUserLocation:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[4];

  v6 = sub_23BB88F9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CustomMapCameraPosition();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 16) = 0;
  v15 = (int *)type metadata accessor for InteractiveMap();
  v16 = (_QWORD *)(a3 + v15[8]);
  v21[1] = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BB8A0C4();
  v17 = v21[3];
  *v16 = v21[2];
  v16[1] = v17;
  v18 = a3 + v15[9];
  *(_QWORD *)v18 = sub_23BB25F68;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2;
  sub_23BB88F90();
  if ((a2 & 1) != 0)
  {
    sub_23BB88F48();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3 + v15[7];
  sub_23B989CA4((uint64_t)v14, v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  *(_QWORD *)(v19 + *(int *)(result + 28)) = 0;
  return result;
}

uint64_t type metadata accessor for InteractiveMap()
{
  uint64_t result;

  result = qword_256A631B0;
  if (!qword_256A631B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB25F40(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  return a3(*a1, *a2);
}

uint64_t sub_23BB25F68()
{
  type metadata accessor for CustomMapStyleLoader();
  swift_allocObject();
  return sub_23BB6DBF8();
}

uint64_t InteractiveMap.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v2 = type metadata accessor for InteractiveMap();
  v39 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v39 + 64);
  MEMORY[0x24BDAC7A8](v2, v4);
  v38 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A630B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A630C0);
  v37 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB26250((uint64_t)v9);
  v14 = sub_23BB8A2E0();
  v35 = v15;
  v36 = v14;
  v41 = 0;
  sub_23BB8A0C4();
  v16 = v42;
  v17 = v43;
  v18 = sub_23BB89BB4();
  sub_23BB892A8();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v9, v5);
  v27 = &v13[*(int *)(v10 + 36)];
  *(_QWORD *)v27 = sub_23B994A30;
  *((_QWORD *)v27 + 1) = 0;
  v27[16] = 0;
  v27[24] = v16;
  *((_QWORD *)v27 + 4) = v17;
  v27[40] = v18;
  *((_QWORD *)v27 + 6) = v20;
  *((_QWORD *)v27 + 7) = v22;
  *((_QWORD *)v27 + 8) = v24;
  *((_QWORD *)v27 + 9) = v26;
  v27[80] = 0;
  v28 = v35;
  *((_QWORD *)v27 + 11) = v36;
  *((_QWORD *)v27 + 12) = v28;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v42 = *v1;
  v29 = v38;
  sub_23B989CE8((uint64_t)v1, v38, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v30 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v31 = swift_allocObject();
  sub_23B989CA4(v29, v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23BB26894;
  *(_QWORD *)(v32 + 24) = v31;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BB26930();
  sub_23BA22410();
  sub_23BB89F14();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23B989D60((uint64_t)v13, &qword_256A630C0);
}

uint64_t sub_23BB26250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v77 = a1;
  v2 = sub_23BB8AA18();
  v75 = *(_QWORD *)(v2 - 8);
  v76 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v74 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for InteractiveMap();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v6;
  MEMORY[0x24BDAC7A8](v5, v7);
  v69 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23BB89068();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63100);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A630F8);
  v63 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63200);
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v19);
  v59 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A630F0);
  MEMORY[0x24BDAC7A8](v64, v21);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A630D8);
  MEMORY[0x24BDAC7A8](v65, v24);
  v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A630D0);
  v28 = *(_QWORD *)(v27 - 8);
  v72 = v27;
  v73 = v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v67 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v1;
  sub_23BB26D34((uint64_t)v15);
  type metadata accessor for CustomMapStyleLoader();
  sub_23B97D0C8(&qword_256A63208, (uint64_t (*)(uint64_t))type metadata accessor for CustomMapStyleLoader, (uint64_t)&unk_23BB986DC);
  sub_23BB89308();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  swift_release();
  if (BYTE2(v80))
    v31 = 0x10000;
  else
    v31 = 0;
  if (BYTE1(v80))
    v32 = 256;
  else
    v32 = 0;
  sub_23BB6CD94(v32 | v80 | v31, (uint64_t)v11);
  v33 = sub_23BB26BA8();
  sub_23BB89D64();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
  sub_23B989D60((uint64_t)v15, &qword_256A63100);
  v34 = v58;
  v79 = v58;
  sub_23BB89110();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFBEF0];
  v80 = v12;
  v81 = v33;
  swift_getOpaqueTypeConformance2();
  sub_23B97D0C8(&qword_256A63130, v35, MEMORY[0x24BDFBEE0]);
  v36 = v59;
  v37 = v62;
  sub_23BB89D40();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v18, v37);
  v38 = v69;
  sub_23B989CE8(v34, v69, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v39 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v40 = swift_allocObject();
  sub_23B989CA4(v38, v40 + v39, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v41 = v74;
  sub_23BB8AA00();
  v42 = &v23[*(int *)(v64 + 36)];
  v43 = sub_23BB893E0();
  v45 = v75;
  v44 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(&v42[*(int *)(v43 + 20)], v41, v76);
  *(_QWORD *)v42 = &unk_256A63218;
  *((_QWORD *)v42 + 1) = v40;
  v46 = v66;
  v47 = v68;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v23, v36, v68);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v44);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v47);
  v78 = v34;
  v48 = sub_23BB8A2C8();
  v50 = v49;
  v51 = v65;
  v52 = (uint64_t)&v26[*(int *)(v65 + 36)];
  sub_23BB2933C((void (*)(void))sub_23BB29334, v52);
  v53 = (uint64_t *)(v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A63140) + 36));
  *v53 = v48;
  v53[1] = v50;
  sub_23B989EFC((uint64_t)v23, (uint64_t)v26, &qword_256A630F0);
  sub_23B989D60((uint64_t)v23, &qword_256A630F0);
  v54 = sub_23BB26A0C();
  v55 = v67;
  sub_23BB89D4C();
  sub_23B989D60((uint64_t)v26, &qword_256A630D8);
  sub_23BB8A358();
  v80 = v51;
  v81 = v54;
  swift_getOpaqueTypeConformance2();
  v56 = v72;
  sub_23BB89D58();
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v55, v56);
}

uint64_t sub_23BB26894(uint64_t a1, uint64_t a2)
{
  type metadata accessor for InteractiveMap();
  return sub_23BB26C54(a1, a2);
}

uint64_t sub_23BB268E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB26908(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

unint64_t sub_23BB26930()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_256A630C8;
  if (!qword_256A630C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630C0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630D8);
    sub_23BB26A0C();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_23B996E1C(&qword_256A63148, &qword_256A63150, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A630C8);
  }
  return result;
}

unint64_t sub_23BB26A0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A630E0;
  if (!qword_256A630E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630D8);
    v2[0] = sub_23BB26A90();
    v2[1] = sub_23B996E1C(&qword_256A63138, &qword_256A63140, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A630E0);
  }
  return result;
}

unint64_t sub_23BB26A90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_256A630E8;
  if (!qword_256A630E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630F0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630F8);
    v3 = sub_23BB89110();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFBEF0];
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63100);
    sub_23BB26BA8();
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = swift_getOpaqueTypeConformance2();
    v5[5] = sub_23B97D0C8(&qword_256A63130, v4, MEMORY[0x24BDFBEE0]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_23B97D0C8((unint64_t *)&qword_256A5A208, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256A630E8);
  }
  return result;
}

unint64_t sub_23BB26BA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63108;
  if (!qword_256A63108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63100);
    v2[0] = sub_23B996E1C(&qword_256A63110, &qword_256A63118, MEMORY[0x24BDFBC78]);
    v2[1] = sub_23B996E1C(&qword_256A63120, &qword_256A63128, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63108);
  }
  return result;
}

uint64_t sub_23BB26C44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB26C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(a1 + 16) && *(_QWORD *)(a2 + 16))
  {
    v2 = sub_23BB8A31C();
    MEMORY[0x24BDAC7A8](v2, v3);
    sub_23BB893F8();
    return swift_release();
  }
  else
  {
    type metadata accessor for InteractiveMap();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
    return sub_23BB8A0DC();
  }
}

uint64_t sub_23BB26D34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a1;
  v2 = type metadata accessor for InteractiveMap();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63260);
  MEMORY[0x24BDAC7A8](v42, v7);
  v9 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_23BB88FCC();
  MEMORY[0x24BDAC7A8](v37, v10);
  v39 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v38 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23BB88F9C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63118);
  MEMORY[0x24BDAC7A8](v41, v22);
  v40 = v1;
  if (*(_BYTE *)(v1 + 8) == 1)
  {
    v36 = v24;
    v25 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_23BB88F90();
    sub_23BB88F48();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    v26 = sub_23BB88F3C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v38, 1, 1, v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2E0);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23BB8C510;
    sub_23BB88FA8();
    v44 = v27;
    sub_23B97D0C8((unint64_t *)&qword_256A5D0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFBD48], MEMORY[0x24BDFBD58]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
    sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
    sub_23BB8AD84();
    v28 = sub_23BB8A358();
    MEMORY[0x24BDAC7A8](v28, v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A63268);
    sub_23B996E1C(&qword_256A63270, &qword_256A63268, MEMORY[0x24BDFBC20]);
    sub_23BB88EE8();
    v30 = v36;
    v31 = v41;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>), char *, uint64_t))(v36 + 16))(v9, v25, v41);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A63128);
    sub_23B996E1C(&qword_256A63110, &qword_256A63118, MEMORY[0x24BDFBC78]);
    sub_23B996E1C(&qword_256A63120, &qword_256A63128, MEMORY[0x24BDEC6F8]);
    sub_23BB89944();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v25, v31);
  }
  else
  {
    sub_23B989CE8(v40, (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
    v33 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v34 = swift_allocObject();
    sub_23B989CA4((uint64_t)v6, v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
    *v9 = sub_23BB29714;
    v9[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v34;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A63128);
    sub_23B996E1C(&qword_256A63110, &qword_256A63118, MEMORY[0x24BDFBC78]);
    sub_23B996E1C(&qword_256A63120, &qword_256A63128, MEMORY[0x24BDEC6F8]);
    return sub_23BB89944();
  }
}

uint64_t sub_23BB2721C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v43 = a2;
  v46 = a1;
  v53 = a3;
  v52 = sub_23BB88FCC();
  v47 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v5);
  v50 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB893D4();
  v11 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10, v13);
  v14 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for InteractiveMap();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  v19 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F280);
  MEMORY[0x24BDAC7A8](v20, v21);
  v44 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63118);
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v23);
  v48 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  sub_23BB8A9F4();
  v25 = sub_23BB8A9E8();
  v26 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v27 = (v26 + v17 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v28 = swift_allocObject();
  v29 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v28 + 16) = v25;
  *(_QWORD *)(v28 + 24) = v29;
  sub_23B989CA4((uint64_t)v19, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v14, v42);
  v30 = v43;
  sub_23B989CE8(v43, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v31 = sub_23BB8A9E8();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 24) = MEMORY[0x24BEE6930];
  sub_23B989CA4((uint64_t)v19, v32 + v26, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  sub_23BB88F9C();
  sub_23BB8A1B4();
  v33 = sub_23BB88F3C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v45, 1, 1, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2E0);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_23BB8C510;
  sub_23BB88FA8();
  *(_QWORD *)&v55 = v34;
  sub_23B97D0C8((unint64_t *)&qword_256A5D0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFBD48], MEMORY[0x24BDFBD58]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
  sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
  sub_23BB8AD84();
  sub_23BB8A358();
  v54 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A63268);
  sub_23B996E1C(&qword_256A63270, &qword_256A63268, MEMORY[0x24BDFBC20]);
  v35 = v48;
  sub_23BB88F00();
  sub_23BB893C8();
  sub_23BB893C8();
  sub_23BB8A2F8();
  sub_23BB8938C();
  v36 = v49;
  v37 = v53;
  v38 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v53, v35, v51);
  v39 = (_OWORD *)(v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A63290) + 36));
  v40 = v56;
  *v39 = v55;
  v39[1] = v40;
  v39[2] = v57;
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v38);
}

uint64_t sub_23BB276F4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  _QWORD v17[4];

  v4 = type metadata accessor for CustomMapCameraPosition();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for InteractiveMap();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  sub_23BB8A0D0();
  v9 = (uint64_t *)(a1 + *(int *)(v8 + 32));
  v11 = *v9;
  v10 = v9[1];
  v17[1] = v11;
  v17[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  sub_23BB8A0D0();
  v12 = v17[3];
  sub_23BB893C8();
  sub_23BB893BC();
  sub_23BB2A1B0(v12, a2, v13, v14, v15);
  swift_bridgeObjectRelease();
  return sub_23B989D9C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
}

uint64_t sub_23BB27830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for CustomMapCameraPosition();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v12 - v8;
  v10 = sub_23BB88F9C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for InteractiveMap();
  sub_23B989CE8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  sub_23BB8A0DC();
  return sub_23B989D9C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
}

uint64_t sub_23BB27934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v45 = a3;
  v46 = a4;
  v41 = a2;
  v5 = type metadata accessor for InteractiveMap();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63278);
  v44 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v9);
  v43 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v41 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v41 - v21;
  sub_23BB89128();
  v23 = (uint64_t *)(a1 + *(int *)(v5 + 32));
  v25 = *v23;
  v24 = v23[1];
  v48 = v25;
  v49 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  sub_23BB8A0D0();
  sub_23B989CE8(a1, (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v26 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v27 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A63280);
  sub_23B996E1C(&qword_256A5D160, &qword_256A5A1B8, MEMORY[0x24BEE12D8]);
  v28 = type metadata accessor for AnnotationContent();
  v29 = sub_23B97D0C8(&qword_256A5D168, (uint64_t (*)(uint64_t))type metadata accessor for AnnotationContent, (uint64_t)&unk_23BB924F0);
  v48 = v28;
  v49 = MEMORY[0x24BEE0D00];
  v50 = v29;
  v51 = MEMORY[0x24BEE0D10];
  swift_getOpaqueTypeConformance2();
  sub_23B97D0C8(&qword_256A5D170, (uint64_t (*)(uint64_t))type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
  sub_23BB8A1F0();
  v30 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v31 = v22;
  v30(v18, v22, v15);
  v32 = v43;
  v33 = v44;
  v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v35 = v42;
  v34(v43, v14, v42);
  v36 = v46;
  v30(v46, v18, v15);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63288);
  v34(&v36[*(int *)(v37 + 48)], v32, v35);
  v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  v38(v14, v35);
  v39 = *(void (**)(char *, uint64_t))(v47 + 8);
  v39(v31, v15);
  v38(v32, v35);
  return ((uint64_t (*)(char *, uint64_t))v39)(v18, v15);
}

uint64_t sub_23BB27C78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a3;
  v5 = type metadata accessor for Annotation();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AnnotationContent();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63280);
  v27 = *(_QWORD *)(v13 - 8);
  v28 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8((uint64_t)a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  v17 = (uint64_t *)(a2 + *(int *)(type metadata accessor for InteractiveMap() + 32));
  v18 = v17[1];
  v30 = *v17;
  v19 = v30;
  v31 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  sub_23BB8A0D0();
  v20 = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRelease();
  v21 = v20 < 2;
  v30 = v19;
  v31 = v18;
  sub_23BB8A0D0();
  v22 = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRelease();
  sub_23B989CA4((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  v12[v9[5]] = v21;
  v12[v9[6]] = v22 < 2;
  v12[v9[7]] = 0;
  v23 = v9[8];
  sub_23BB89F98();
  v24 = sub_23BB8A004();
  swift_release();
  *(_QWORD *)&v12[v23] = v24;
  v25 = a1[1];
  v30 = *a1;
  v31 = v25;
  sub_23B97D0C8(&qword_256A5D168, (uint64_t (*)(uint64_t))type metadata accessor for AnnotationContent, (uint64_t)&unk_23BB924F0);
  sub_23BB890F8();
  sub_23B989D9C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for AnnotationContent);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v16, v28);
}

uint64_t sub_23BB27EB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = sub_23BB8AF1C();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for CustomMapCameraPosition();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[9] = sub_23BB8A9E8();
  v1[10] = sub_23BB8A988();
  v1[11] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB27F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  char *v6;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(type metadata accessor for InteractiveMap() + 28);
  *(_QWORD *)(v0 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  sub_23BB8A0D0();
  sub_23BB88F90();
  swift_storeEnumTagMultiPayload();
  v3 = sub_23BB2A72C(v1, v2);
  sub_23B989D9C(v2, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  sub_23B989D9C(v1, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  if ((v3 & 1) != 0)
  {
    sub_23BB8AF10();
    v6 = (char *)&dword_256A5AFD0 + dword_256A5AFD0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_23BB280D0;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v6)(10000000000000000, 0, 0, 0, 1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB280D0()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[4];
  v3 = v2[5];
  v5 = v2[3];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[5], v2[3]);
  }
  return swift_task_switch();
}

uint64_t sub_23BB28170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_storeEnumTagMultiPayload();
  sub_23B989CE8(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  sub_23BB8A0DC();
  sub_23B989D9C(v1, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB28220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;

  v60 = a1;
  v59 = sub_23BB890B0();
  v66 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59, v1);
  v58 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v65 = (char *)&v50 - v5;
  v57 = sub_23BB88F24();
  v64 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v6);
  v56 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v62 = (char *)&v50 - v10;
  v55 = sub_23BB88FE4();
  v53 = *(_QWORD *)(v55 - 8);
  v11 = v53;
  MEMORY[0x24BDAC7A8](v55, v12);
  v63 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v61 = (char *)&v50 - v16;
  v17 = type metadata accessor for CustomMapStyleToggle();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v50 - v23;
  type metadata accessor for InteractiveMap();
  type metadata accessor for CustomMapStyleLoader();
  sub_23B97D0C8(&qword_256A63208, (uint64_t (*)(uint64_t))type metadata accessor for CustomMapStyleLoader, (uint64_t)&unk_23BB986DC);
  sub_23BB89314();
  swift_getKeyPath();
  sub_23BB89410();
  swift_release();
  swift_release();
  v25 = v71;
  v26 = v72;
  v27 = v73;
  v28 = v74;
  *(_QWORD *)v20 = v70;
  *((_QWORD *)v20 + 1) = v25;
  v20[16] = v26;
  v20[17] = v27;
  v20[18] = v28;
  v67 = 0;
  sub_23BB8A0C4();
  v29 = v69;
  v20[24] = v68;
  *((_QWORD *)v20 + 4) = v29;
  v30 = (uint64_t *)&v20[*(int *)(v17 + 24)];
  *v30 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
  swift_storeEnumTagMultiPayload();
  v31 = (uint64_t)v24;
  v54 = v24;
  sub_23B989CA4((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapStyleToggle);
  sub_23BB8A358();
  v32 = v61;
  sub_23BB88FD8();
  sub_23BB8A358();
  v33 = v62;
  sub_23BB88F18();
  sub_23BB8A358();
  v34 = v65;
  sub_23BB890A4();
  sub_23B989CE8(v31, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapStyleToggle);
  v35 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v36 = v63;
  v37 = v55;
  v35(v63, v32, v55);
  v51 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v39 = v56;
  v38 = v57;
  v51(v56, v33, v57);
  v52 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v41 = v58;
  v40 = v59;
  v52(v58, v34, v59);
  v42 = v60;
  sub_23B989CE8((uint64_t)v20, v60, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapStyleToggle);
  v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A63258);
  v44 = v36;
  v45 = v37;
  v35((char *)(v42 + v43[12]), v44, v37);
  v51((char *)(v42 + v43[16]), v39, v38);
  v52((char *)(v42 + v43[20]), v41, v40);
  v46 = *(void (**)(char *, uint64_t))(v66 + 8);
  v46(v65, v40);
  v47 = *(void (**)(char *, uint64_t))(v64 + 8);
  v47(v62, v38);
  v48 = *(void (**)(char *, uint64_t))(v53 + 8);
  v48(v61, v45);
  sub_23B989D9C((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapStyleToggle);
  v46(v41, v40);
  v47(v39, v38);
  v48(v63, v45);
  return sub_23B989D9C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapStyleToggle);
}

uint64_t sub_23BB286B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;
  char v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_23BB28744()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23BB8923C();
}

uint64_t sub_23BB287CC()
{
  type metadata accessor for InteractiveMap();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  return sub_23BB8A0DC();
}

uint64_t initializeBufferWithCopyOfBuffer for InteractiveMap(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v8 = a3[7];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for CustomMapCameraPosition();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = sub_23BB88F9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = v10[1];
      *v9 = *v10;
      v9[1] = v13;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
    *(_QWORD *)((char *)v9 + *(int *)(v15 + 28)) = *(_QWORD *)((char *)v10 + *(int *)(v15 + 28));
    v16 = a3[8];
    v17 = a3[9];
    v18 = (_QWORD *)(v7 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v7 + v17;
    v22 = (uint64_t)a2 + v17;
    v23 = *(uint64_t *)((char *)a2 + v17);
    v24 = *(_QWORD *)(v22 + 8);
    v25 = *(_BYTE *)(v22 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23B9B7C48();
    *(_QWORD *)v21 = v23;
    *(_QWORD *)(v21 + 8) = v24;
    *(_BYTE *)(v21 + 16) = v25;
  }
  return v7;
}

uint64_t destroy for InteractiveMap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for CustomMapCameraPosition();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v6 = sub_23BB88F9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_23B9B7C98();
}

uint64_t initializeWithCopy for InteractiveMap(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for CustomMapCameraPosition();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v12 = sub_23BB88F9C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  *(_QWORD *)((char *)v7 + *(int *)(v13 + 28)) = *(_QWORD *)((char *)v8 + *(int *)(v13 + 28));
  v14 = a3[8];
  v15 = a3[9];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a1 + v15;
  v20 = a2 + v15;
  v21 = *(_QWORD *)(a2 + v15);
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_BYTE *)(v20 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B9B7C48();
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = v23;
  return a1;
}

uint64_t assignWithCopy for InteractiveMap(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  if (a1 != a2)
  {
    sub_23B989D9C(a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
    v9 = type metadata accessor for CustomMapCameraPosition();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_23BB88F9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  *(_QWORD *)((char *)v7 + *(int *)(v12 + 28)) = *(_QWORD *)((char *)v8 + *(int *)(v12 + 28));
  swift_retain();
  swift_release();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_retain();
  swift_release();
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  v21 = *((_BYTE *)v18 + 16);
  sub_23B9B7C48();
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_BYTE *)(v17 + 16) = v21;
  sub_23B9B7C98();
  return a1;
}

uint64_t initializeWithTake for InteractiveMap(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for CustomMapCameraPosition();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB88F9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  *(_QWORD *)&v7[*(int *)(v11 + 28)] = *(_QWORD *)&v8[*(int *)(v11 + 28)];
  v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  return a1;
}

uint64_t assignWithTake for InteractiveMap(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  if (a1 != a2)
  {
    sub_23B989D9C(a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
    v9 = type metadata accessor for CustomMapCameraPosition();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_23BB88F9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  *(_QWORD *)&v7[*(int *)(v11 + 28)] = *(_QWORD *)&v8[*(int *)(v11 + 28)];
  swift_release();
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_release();
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_BYTE *)(v16 + 16) = v18;
  sub_23B9B7C98();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveMap()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB29008(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for InteractiveMap()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23BB29094(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_23BB2910C()
{
  unint64_t v0;

  sub_23BB291B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23BB291B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A631C0)
  {
    type metadata accessor for CustomMapCameraPosition();
    v0 = sub_23BB8A0F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A631C0);
  }
}

uint64_t sub_23BB29204()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A630C0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A1B8);
  sub_23BB26930();
  sub_23BA22410();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB29274()
{
  return sub_23BB287CC();
}

uint64_t sub_23BB29294()
{
  sub_23BB8A358();
  return sub_23BB89104();
}

uint64_t sub_23BB292D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractiveMap() - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B97C964;
  return sub_23BB27EB8(v3);
}

uint64_t sub_23BB29334@<X0>(uint64_t a1@<X8>)
{
  return sub_23BB28220(a1);
}

uint64_t sub_23BB2933C@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t KeyPath;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a2;
  v3 = sub_23BB89578();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB89830();
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63220);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63228);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63230);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = sub_23BB8983C();
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A63238);
  a1();
  sub_23BB89824();
  sub_23B996E1C(&qword_256A63240, &qword_256A63220, MEMORY[0x24BDF4700]);
  sub_23B97D0C8(&qword_256A63248, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEDC8], MEMORY[0x24BDEEDB8]);
  sub_23BB89D94();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v7);
  sub_23B989D60((uint64_t)v14, &qword_256A63220);
  sub_23BB89554();
  KeyPath = swift_getKeyPath();
  v23 = (uint64_t *)&v21[*(int *)(v18 + 36)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7C8);
  v26 = v43;
  v25 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v23 + *(int *)(v24 + 28), v6, v44);
  *v23 = KeyPath;
  v27 = v40;
  v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v21, v17, v42);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v25);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v28);
  LOBYTE(v28) = sub_23BB89BA8();
  sub_23BB892A8();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = v45;
  sub_23B989EFC((uint64_t)v21, v45, &qword_256A63230);
  v38 = v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A63250) + 36);
  *(_BYTE *)v38 = v28;
  *(_QWORD *)(v38 + 8) = v30;
  *(_QWORD *)(v38 + 16) = v32;
  *(_QWORD *)(v38 + 24) = v34;
  *(_QWORD *)(v38 + 32) = v36;
  *(_BYTE *)(v38 + 40) = 0;
  return sub_23B989D60((uint64_t)v21, &qword_256A63230);
}

uint64_t sub_23BB29668(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_23BB892F0();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))(v6, a1, v4);
  return MEMORY[0x24260B4F4](v6);
}

uint64_t sub_23BB296EC()
{
  return sub_23BB8959C();
}

uint64_t sub_23BB29714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractiveMap() - 8) + 80);
  return sub_23BB2721C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_23BB29760@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23BB27934(*(_QWORD *)(v1 + 16), (uint64_t)&unk_250CB4BD8, (uint64_t)sub_23BB2978C, a1);
}

uint64_t sub_23BB29790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for InteractiveMap();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  v4 = sub_23BB893D4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + *(int *)(v1 + 28);
  type metadata accessor for CustomMapCameraPosition();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = sub_23BB88F9C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9B7C98();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v11 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_23BB298EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for InteractiveMap();
  v4 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_23BB893D4();
  return sub_23BB276F4(v1 + v4, a1);
}

uint64_t sub_23BB29958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;

  v1 = type metadata accessor for InteractiveMap();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2) + *(int *)(v1 + 28);
  type metadata accessor for CustomMapCameraPosition();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_23BB88F9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9B7C98();
  return swift_deallocObject();
}

uint64_t sub_23BB29A64(uint64_t a1)
{
  type metadata accessor for InteractiveMap();
  return sub_23BB27830(a1);
}

uint64_t sub_23BB29AA4@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23BB27934(*(_QWORD *)(v1 + 16), (uint64_t)&unk_250CB4C50, (uint64_t)sub_23BB2978C, a1);
}

uint64_t objectdestroyTm_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;

  v1 = type metadata accessor for InteractiveMap();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 28);
  type metadata accessor for CustomMapCameraPosition();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_23BB88F9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9B7C98();
  return swift_deallocObject();
}

uint64_t sub_23BB29BD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractiveMap() - 8) + 80);
  return sub_23BB27C78(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t *sub_23BB29C28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23BB88F9C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23BB29D00(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23BB88F9C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (!(_DWORD)result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23BB29D60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23BB88F9C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_23BB29E10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_23BB88F9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for CustomMapCameraPosition()
{
  uint64_t result;

  result = qword_256A63308;
  if (!qword_256A63308)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_23BB29F1C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23BB88F9C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23BB29FA8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23BB88F9C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23BB2A04C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88F9C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23BB2A0BC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23BB00658(0, v1, 0);
    v2 = v12;
    v4 = *(_QWORD *)(type metadata accessor for Annotation() - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (__int128 *)(a1
                    + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                    + 32);
    do
    {
      v7 = *v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
      {
        v11 = *v6;
        sub_23BB00658(v8 > 1, v9 + 1, 1);
        v7 = v11;
      }
      *(_QWORD *)(v12 + 16) = v9 + 1;
      *(_OWORD *)(v12 + 16 * v9 + 32) = v7;
      v6 = (__int128 *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23BB2A1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D3>, double a4@<D4>, double a5@<D5>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t (*v35)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[32];
  char v67;

  v6 = v5;
  v63 = a1;
  v64 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63348);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Annotation();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (uint64_t *)((char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v60 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63350);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v60 - v29;
  v31 = type metadata accessor for CustomMapCameraPosition();
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (uint64_t *)((char *)&v60 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23B989CE8(v6, (uint64_t)v34, v35);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v37 = sub_23BB88F9C();
      return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v64, v34, v37);
    }
    v46 = sub_23BB2A0BC(v63);
    sub_23BA2C47C(v46, (uint64_t)&v65, a3, a4, a5);
    sub_23BB2A9E8((uint64_t)&v65, (uint64_t)v66);
    v47 = v64;
    if ((v67 & 1) != 0)
    {
      v48 = sub_23BB88F9C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v30, 1, 1, v48);
    }
    else
    {
      sub_23BB88F6C();
      v49 = sub_23BB88F9C();
      v50 = *(_QWORD *)(v49 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v30, 0, 1, v49);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v30, 1, v49) != 1)
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(v47, v30, v49);
    }
    sub_23BB88F90();
    v51 = (uint64_t)v30;
    return sub_23B989D60(v51, &qword_256A63350);
  }
  v61 = v26;
  v62 = v22;
  v39 = v34[1];
  v40 = *(_QWORD *)(v63 + 16);
  if (v40)
  {
    v41 = *v34;
    v42 = v63 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v43 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23B989CE8(v42, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      v44 = *v18 == v41 && v18[1] == v39;
      if (v44 || (sub_23BB8B1A4() & 1) != 0)
        break;
      sub_23B989D9C((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      v42 += v43;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        v45 = 1;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    sub_23BA2F0F8((uint64_t)v18, (uint64_t)v13);
    v45 = 0;
LABEL_18:
    v52 = v64;
    v53 = (uint64_t)v62;
  }
  else
  {
    v45 = 1;
    v53 = (uint64_t)v62;
    v52 = v64;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v45, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_23B989D60((uint64_t)v13, &qword_256A63348);
    return sub_23BB88F90();
  }
  sub_23BA2F0F8((uint64_t)v13, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F88);
  v54 = swift_allocObject();
  v55 = *(_OWORD *)(v53 + 32);
  *(_OWORD *)(v54 + 16) = xmmword_23BB8C510;
  *(_OWORD *)(v54 + 32) = v55;
  sub_23BA2C47C(v54, (uint64_t)&v65, a3, a4, a5);
  sub_23BB2A9E8((uint64_t)&v65, (uint64_t)v66);
  if ((v67 & 1) != 0)
  {
    v56 = sub_23BB88F9C();
    v57 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v61, 1, 1, v56);
LABEL_26:
    sub_23BB88F90();
    sub_23B989D9C(v53, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
    v51 = v57;
    return sub_23B989D60(v51, &qword_256A63350);
  }
  v57 = (uint64_t)v61;
  sub_23BB88F6C();
  v58 = sub_23BB88F9C();
  v59 = *(_QWORD *)(v58 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v57, 0, 1, v58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58) == 1)
    goto LABEL_26;
  sub_23B989D9C(v53, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v52, v57, v58);
}

uint64_t sub_23BB2A72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v32;
  uint64_t v33;

  v33 = sub_23BB88F9C();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CustomMapCameraPosition();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (uint64_t *)((char *)&v32 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63340);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v19[*(int *)(v20 + 48)];
  sub_23B989CE8(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  sub_23B989CE8(a2, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23B989CE8((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
    v28 = *v15;
    v27 = v15[1];
    if (!swift_getEnumCaseMultiPayload())
    {
      if (v28 == *(_QWORD *)v21 && v27 == *((_QWORD *)v21 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v30 = sub_23BB8B1A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
          sub_23B989D9C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
          goto LABEL_11;
        }
      }
LABEL_19:
      sub_23B989D9C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
      v25 = 1;
      return v25 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23B989D60((uint64_t)v19, &qword_256A63340);
LABEL_11:
    v25 = 0;
    return v25 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      goto LABEL_19;
    goto LABEL_10;
  }
  sub_23B989CE8((uint64_t)v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v33);
    goto LABEL_10;
  }
  v23 = v21;
  v24 = v33;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v23, v33);
  v25 = sub_23BB88F60();
  v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26(v7, v24);
  v26(v11, v24);
  sub_23B989D9C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  return v25 & 1;
}

uint64_t sub_23BB2A9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256A63358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB2AA30(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_23BB00520(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_23BB00520(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23BB2AB04(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint8_t *v31;
  NSObject *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  NSObject *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char *v60;

  LODWORD(v3) = a3;
  v6 = sub_23BB8884C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v54 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)v48 - v17;
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)v48 - v20;
  v22 = sub_23BB8878C();
  v55 = *(_QWORD *)(v22 - 8);
  v56 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88780();
  sub_23BB88768();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v21, 1, 1, v6);
  if ((_BYTE)v3)
  {
    if (v3 == 1)
    {
      if (qword_256A58E00 != -1)
        swift_once();
      v26 = sub_23BB891C4();
      __swift_project_value_buffer(v26, (uint64_t)qword_256A73E80);
      swift_bridgeObjectRetain_n();
      v27 = sub_23BB891AC();
      v28 = sub_23BB8ABEC();
      v53 = v27;
      LODWORD(v51) = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v49 = swift_slowAlloc();
        v57 = v49;
        v52 = v3;
        *(_DWORD *)v29 = 136315138;
        v48[1] = v29 + 4;
        v50 = v25;
        v30 = a1;
        v31 = v29;
        swift_bridgeObjectRetain();
        v60 = (char *)sub_23BB7B69C(v30, a2, &v57);
        sub_23BB8ACB8();
        sub_23BB2B27C(v30, a2, 1u);
        sub_23BB2B27C(v30, a2, 1u);
        swift_bridgeObjectRelease();
        v32 = v53;
        _os_log_impl(&dword_23B979000, v53, (os_log_type_t)v51, "URLHandler: %s", v31, 0xCu);
        v3 = v49;
        swift_arrayDestroy();
        v33 = v3;
        LOBYTE(v3) = v52;
        MEMORY[0x24260D9B4](v33, -1, -1);
        v34 = v31;
        a1 = v30;
        v25 = v50;
        MEMORY[0x24260D9B4](v34, -1, -1);

      }
      else
      {
        sub_23BB2B27C(a1, a2, 1u);
        sub_23BB2B27C(a1, a2, 1u);

      }
      v57 = 0;
      v58 = 0xE000000000000000;
      sub_23BB8AE08();
      swift_bridgeObjectRelease();
      v57 = 0xD00000000000001ALL;
      v58 = 0x800000023BB9CB60;
      sub_23BB8A82C();
      sub_23BB88840();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23BB88750();
      sub_23BB88744();
    }
  }
  else
  {
    sub_23BB88750();
    if (a1 && *(_QWORD *)(a1 + 16) == 1)
    {
      v52 = v3;
      v53 = sub_23BB2AA30(a1);
      v57 = (uint64_t)v53;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
      sub_23BB16F34();
      v51 = sub_23BB8A730();
      swift_bridgeObjectRelease();
      v57 = 47;
      v58 = 0xE100000000000000;
      sub_23BB8A82C();
      LOBYTE(v3) = v52;
      swift_bridgeObjectRelease();
      sub_23BB8875C();
    }
    sub_23BB88744();
  }
  sub_23BA86FBC((uint64_t)v21);
  sub_23BB2B298((uint64_t)v18, (uint64_t)v21);
  sub_23BB2B2E0((uint64_t)v21, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
  {
    sub_23BA86FBC((uint64_t)v14);
    if (qword_256A58E00 != -1)
      swift_once();
    v35 = sub_23BB891C4();
    __swift_project_value_buffer(v35, (uint64_t)qword_256A73E80);
    sub_23BB2B328(a1, a2, v3);
    sub_23BB2B328(a1, a2, v3);
    v36 = sub_23BB891AC();
    v37 = sub_23BB8ABD4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v54 = (char *)swift_slowAlloc();
      v60 = v54;
      *(_DWORD *)v38 = 136315394;
      v57 = sub_23BB7B69C(0xD000000000000012, 0x800000023BB9CB80, (uint64_t *)&v60);
      sub_23BB8ACB8();
      *(_WORD *)(v38 + 12) = 2080;
      v57 = a1;
      v58 = a2;
      v59 = v3;
      sub_23BB2B328(a1, a2, v3);
      v39 = sub_23BB8A7D8();
      v57 = sub_23BB7B69C(v39, v40, (uint64_t *)&v60);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23BB2B27C(a1, a2, v3);
      sub_23BB2B27C(a1, a2, v3);
      _os_log_impl(&dword_23B979000, v36, v37, "URLHandler: %s - No URL for %s", (uint8_t *)v38, 0x16u);
      v41 = v54;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v41, -1, -1);
      MEMORY[0x24260D9B4](v38, -1, -1);

    }
    else
    {

      sub_23BB2B27C(a1, a2, v3);
      sub_23BB2B27C(a1, a2, v3);
    }
  }
  else
  {
    v42 = v54;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v54, v14, v6);
    v43 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v43)
    {
      v44 = v43;
      v45 = (void *)sub_23BB88828();
      v46 = (void *)sub_23BB8A6B8();
      objc_msgSend(v44, sel_openSensitiveURL_withOptions_, v45, v46);

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v6);
  }
  sub_23BA86FBC((uint64_t)v21);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v25, v56);
}

uint64_t sub_23BB2B27C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23BB2B298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB2B2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB2B328(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for FindMyDestination(uint64_t a1)
{
  return sub_23BB2B27C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12FindMyUICore17FindMyDestinationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BB2B328(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FindMyDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BB2B328(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23BB2B27C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FindMyDestination(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23BB2B27C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FindMyDestination()
{
  return &type metadata for FindMyDestination;
}

uint64_t sub_23BB2B448@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _OWORD *v27;
  char *v28;
  void (*v29)(char *);
  void (*v30)(char *);
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *);
  uint64_t v39;
  uint64_t *boxed_opaque_existential_1;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *);
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  int *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t *v86;
  _QWORD *v87;
  uint64_t v88;
  unsigned int v89;
  char *v90;
  uint64_t v91;
  unsigned int v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101[3];
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[40];
  char v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;

  v87 = a1;
  v1 = sub_23BB8A334();
  v83 = *(_QWORD *)(v1 - 8);
  v2 = v83;
  MEMORY[0x24BDAC7A8](v1, v3);
  v90 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23BB89F80();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99, v5);
  v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for CustomControlStyle(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v91 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v80 - v13;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v80 - v17;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (uint64_t *)((char *)&v80 - v21);
  v23 = sub_23BB89FE0();
  v24 = MEMORY[0x24BDF3E18];
  v22[3] = MEMORY[0x24BDF3E48];
  v22[4] = v24;
  *v22 = v23;
  sub_23BB89C08();
  sub_23BB89C20();
  v25 = sub_23BB89C50();
  swift_release();
  v26 = (char *)v22 + v8[7];
  *((_QWORD *)v26 + 3) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ABC0);
  *((_QWORD *)v26 + 4) = sub_23B996E1C(&qword_256A5ABC8, &qword_256A5ABC0, MEMORY[0x24BDF0F90]);
  *(_QWORD *)v26 = 2;
  v26[40] = 0;
  v27 = (_OWORD *)((char *)v22 + v8[8]);
  v100 = xmmword_23BB966B0;
  *v27 = xmmword_23BB966B0;
  v97 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v28 = (char *)v22 + v8[6];
  v96 = *MEMORY[0x24BDF50D0];
  v29 = *(void (**)(char *))(v2 + 104);
  v29(v28);
  v30 = v29;
  v86 = v22;
  v22[5] = v25;
  *((_BYTE *)v22 + v8[9]) = 1;
  *((_BYTE *)v22 + v8[10]) = 1;
  v31 = (char *)v22 + v8[11];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 104);
  v92 = *MEMORY[0x24BDF3C28];
  v32 = v92;
  v34 = v99;
  v33(v7, v92, v99);
  v93 = v33;
  v35 = MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
  v108 = MEMORY[0x24BDF3E18];
  v107 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v106 = v35;
  sub_23BB89C08();
  sub_23BB89C20();
  v82 = sub_23BB89C50();
  swift_release();
  v33(v7, v32, v34);
  MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
  v36 = sub_23BB8A004();
  swift_release();
  v89 = *MEMORY[0x24BDF5080];
  v37 = v90;
  v30(v90);
  v38 = v30;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C528);
  v39 = v102;
  v88 = v102;
  v94 = sub_23B996E1C(qword_256A5F3D8, &qword_256A5C528, MEMORY[0x24BDEF780]);
  v103 = v94;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v101);
  v41 = (char *)boxed_opaque_existential_1 + *(int *)(v39 + 36);
  v42 = v83;
  v95 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v95(v41, v37, v1);
  *boxed_opaque_existential_1 = v36;
  v98 = *(_QWORD *)(v42 + 8);
  v43 = v37;
  ((void (*)(char *, uint64_t))v98)(v37, v1);
  sub_23B9A193C((uint64_t)v101, (uint64_t)v104);
  v105 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  *(_OWORD *)&v18[v8[8]] = v100;
  swift_storeEnumTagMultiPayload();
  ((void (*)(char *, _QWORD, uint64_t))v38)(&v18[v8[6]], v96, v1);
  sub_23B9A1980(&v106, (uint64_t)v18);
  *((_QWORD *)v18 + 5) = v82;
  sub_23B990D24((uint64_t)v104, (uint64_t)&v18[v8[7]], qword_256A59CC0);
  v44 = v8[9];
  v85 = v18;
  v18[v44] = 1;
  v18[v8[10]] = 1;
  v45 = &v18[v8[11]];
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  v46 = v92;
  v47 = v99;
  v48 = v93;
  v93(v7, v92, v99);
  v49 = MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
  v108 = MEMORY[0x24BDF3E18];
  v107 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v106 = v49;
  sub_23BB89C08();
  sub_23BB89C20();
  v83 = sub_23BB89C50();
  swift_release();
  v48(v7, v46, v47);
  MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
  v50 = sub_23BB8A004();
  swift_release();
  v51 = v89;
  v52 = v38;
  v81 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
  ((void (*)(char *, _QWORD, uint64_t))v38)(v43, v89, v1);
  v53 = v88;
  v102 = v88;
  v103 = v94;
  v54 = __swift_allocate_boxed_opaque_existential_1(v101);
  v95((char *)v54 + *(int *)(v53 + 36), v43, v1);
  *v54 = v50;
  ((void (*)(char *, uint64_t))v98)(v43, v1);
  sub_23B9A193C((uint64_t)v101, (uint64_t)v104);
  v105 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  *(_OWORD *)&v14[v8[8]] = v100;
  swift_storeEnumTagMultiPayload();
  v55 = v96;
  ((void (*)(char *, _QWORD, uint64_t))v52)(&v14[v8[6]], v96, v1);
  sub_23B9A1980(&v106, (uint64_t)v14);
  *((_QWORD *)v14 + 5) = v83;
  sub_23B990D24((uint64_t)v104, (uint64_t)&v14[v8[7]], qword_256A59CC0);
  v56 = v8[9];
  v84 = v14;
  v14[v56] = 1;
  v14[v8[10]] = 1;
  v57 = &v14[v8[11]];
  *(_QWORD *)v57 = 0;
  v57[8] = 1;
  v58 = v92;
  v59 = v99;
  v60 = v93;
  v93(v7, v92, v99);
  v61 = MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
  v108 = MEMORY[0x24BDF3E18];
  v107 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v106 = v61;
  sub_23BB89C08();
  sub_23BB89C20();
  v83 = sub_23BB89C50();
  swift_release();
  v60(v7, v58, v59);
  MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
  v62 = sub_23BB8A004();
  swift_release();
  v63 = v90;
  v64 = v81;
  v81((uint64_t)v90, v51, v1);
  v65 = v88;
  v102 = v88;
  v103 = v94;
  v66 = __swift_allocate_boxed_opaque_existential_1(v101);
  v95((char *)v66 + *(int *)(v65 + 36), v63, v1);
  *v66 = v62;
  ((void (*)(char *, uint64_t))v98)(v63, v1);
  sub_23B9A193C((uint64_t)v101, (uint64_t)v104);
  v105 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  v67 = v91;
  *(_OWORD *)(v91 + v8[8]) = v100;
  swift_storeEnumTagMultiPayload();
  v64(v67 + v8[6], v55, v1);
  sub_23B9A1980(&v106, v67);
  *(_QWORD *)(v67 + 40) = v83;
  sub_23B990D24((uint64_t)v104, v67 + v8[7], qword_256A59CC0);
  *(_BYTE *)(v67 + v8[9]) = 1;
  *(_BYTE *)(v67 + v8[10]) = 1;
  v68 = v67 + v8[11];
  *(_QWORD *)v68 = 0;
  *(_BYTE *)(v68 + 8) = 1;
  v69 = v92;
  v70 = v99;
  v71 = v93;
  v93(v7, v92, v99);
  v72 = MEMORY[0x24260BF74](v7, 0.953, 0.427, 0.427, 1.0);
  v108 = MEMORY[0x24BDF3E18];
  v107 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v106 = v72;
  sub_23BB89C08();
  sub_23BB89C20();
  v83 = sub_23BB89C50();
  swift_release();
  v71(v7, v69, v70);
  MEMORY[0x24260BF74](v7, 0.953, 0.427, 0.427, 1.0);
  v73 = sub_23BB8A004();
  swift_release();
  v64((uint64_t)v63, v89, v1);
  v102 = v65;
  v103 = v94;
  v74 = __swift_allocate_boxed_opaque_existential_1(v101);
  v95((char *)v74 + *(int *)(v65 + 36), v63, v1);
  *v74 = v73;
  ((void (*)(char *, uint64_t))v98)(v63, v1);
  sub_23B9A193C((uint64_t)v101, (uint64_t)v104);
  v105 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  v75 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v76 = v87;
  v77 = (uint64_t)v87 + v75[9];
  *(_OWORD *)(v77 + v8[8]) = v100;
  swift_storeEnumTagMultiPayload();
  v64(v77 + v8[6], v96, v1);
  sub_23B9A1980(&v106, v77);
  *(_QWORD *)(v77 + 40) = v83;
  sub_23B990D24((uint64_t)v104, v77 + v8[7], qword_256A59CC0);
  *(_BYTE *)(v77 + v8[9]) = 1;
  *(_BYTE *)(v77 + v8[10]) = 1;
  v78 = v77 + v8[11];
  *(_QWORD *)v78 = 0;
  *(_BYTE *)(v78 + 8) = 1;
  *v76 = 0x402C000000000000;
  sub_23B989CA4((uint64_t)v86, (uint64_t)v76 + v75[5], type metadata accessor for CustomControlStyle);
  sub_23B989CA4((uint64_t)v85, (uint64_t)v76 + v75[6], type metadata accessor for CustomControlStyle);
  sub_23B989CA4((uint64_t)v84, (uint64_t)v76 + v75[7], type metadata accessor for CustomControlStyle);
  return sub_23B989CA4(v91, (uint64_t)v76 + v75[8], type metadata accessor for CustomControlStyle);
}

uint64_t type metadata accessor for DetailsAppViewActionsModule.Style(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A633B8);
}

char *sub_23BB2BF84(char *a1, char *a2, int *a3)
{
  char *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void (*v114)(char *, char *, uint64_t);

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)v3 = *(_QWORD *)a2;
    v3 = (char *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v5 = a3[5];
    v6 = &a1[v5];
    v7 = &a2[v5];
    v8 = *(_OWORD *)&a2[v5 + 24];
    *(_OWORD *)&a1[v5 + 24] = v8;
    (**(void (***)(char *, char *))(v8 - 8))(&a1[v5], &a2[v5]);
    *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
    v9 = (int *)type metadata accessor for CustomControlStyle(0);
    v10 = v9[6];
    v11 = &v6[v10];
    v12 = &v7[v10];
    v13 = sub_23BB8A334();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    v114 = v14;
    v14(v11, v12, v13);
    v15 = v9[7];
    v16 = &v6[v15];
    v17 = &v7[v15];
    v18 = v7[v15 + 40];
    if ((v18 & 1) != 0)
    {
      v19 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v19;
      swift_retain();
    }
    else
    {
      v21 = *(_OWORD *)(v17 + 24);
      *(_OWORD *)(v16 + 24) = v21;
      (**(void (***)(char *))(v21 - 8))(v16);
    }
    v16[40] = v18;
    v22 = v9[8];
    v23 = &v6[v22];
    v24 = &v7[v22];
    v25 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v23, v24, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v6[v9[9]] = v7[v9[9]];
    v6[v9[10]] = v7[v9[10]];
    v28 = v9[11];
    v29 = &v6[v28];
    v30 = &v7[v28];
    v29[8] = v30[8];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v31 = a3[6];
    v32 = &v3[v31];
    v33 = &a2[v31];
    v34 = *(_OWORD *)&a2[v31 + 24];
    *(_OWORD *)&v3[v31 + 24] = v34;
    (**(void (***)(char *, char *))(v34 - 8))(&v3[v31], &a2[v31]);
    *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
    v35 = v9[6];
    v36 = &v32[v35];
    v37 = &v33[v35];
    swift_retain();
    v114(v36, v37, v13);
    v38 = v9[7];
    v39 = &v32[v38];
    v40 = &v33[v38];
    v41 = v33[v38 + 40];
    if ((v41 & 1) != 0)
    {
      v42 = *((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = v42;
      swift_retain();
    }
    else
    {
      v43 = *(_OWORD *)(v40 + 24);
      *(_OWORD *)(v39 + 24) = v43;
      (**(void (***)(char *))(v43 - 8))(v39);
    }
    v39[40] = v41;
    v44 = v9[8];
    v45 = &v32[v44];
    v46 = &v33[v44];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v47 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v32[v9[9]] = v33[v9[9]];
    v32[v9[10]] = v33[v9[10]];
    v48 = v9[11];
    v49 = &v32[v48];
    v50 = &v33[v48];
    v49[8] = v50[8];
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v51 = a3[7];
    v52 = &v3[v51];
    v53 = &a2[v51];
    v54 = *(_OWORD *)&a2[v51 + 24];
    *(_OWORD *)&v3[v51 + 24] = v54;
    (**(void (***)(char *, char *))(v54 - 8))(&v3[v51], &a2[v51]);
    *((_QWORD *)v52 + 5) = *((_QWORD *)v53 + 5);
    v55 = v9[6];
    v56 = &v52[v55];
    v57 = &v53[v55];
    swift_retain();
    v114(v56, v57, v13);
    v58 = v9[7];
    v59 = &v52[v58];
    v60 = &v53[v58];
    v61 = v53[v58 + 40];
    if ((v61 & 1) != 0)
    {
      v62 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v62;
      swift_retain();
    }
    else
    {
      v63 = *(_OWORD *)(v60 + 24);
      *(_OWORD *)(v59 + 24) = v63;
      (**(void (***)(char *))(v63 - 8))(v59);
    }
    v59[40] = v61;
    v64 = v9[8];
    v65 = &v52[v64];
    v66 = &v53[v64];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v67 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v52[v9[9]] = v53[v9[9]];
    v52[v9[10]] = v53[v9[10]];
    v68 = v9[11];
    v69 = &v52[v68];
    v70 = &v53[v68];
    v69[8] = v70[8];
    *(_QWORD *)v69 = *(_QWORD *)v70;
    v71 = a3[8];
    v72 = &v3[v71];
    v73 = &a2[v71];
    v74 = *(_OWORD *)&a2[v71 + 24];
    *(_OWORD *)&v3[v71 + 24] = v74;
    (**(void (***)(char *, char *))(v74 - 8))(&v3[v71], &a2[v71]);
    *((_QWORD *)v72 + 5) = *((_QWORD *)v73 + 5);
    v75 = v9[6];
    v76 = &v72[v75];
    v77 = &v73[v75];
    swift_retain();
    v114(v76, v77, v13);
    v78 = v9[7];
    v79 = &v72[v78];
    v80 = &v73[v78];
    v81 = v73[v78 + 40];
    if ((v81 & 1) != 0)
    {
      v82 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v82;
      swift_retain();
    }
    else
    {
      v83 = *(_OWORD *)(v80 + 24);
      *(_OWORD *)(v79 + 24) = v83;
      (**(void (***)(char *))(v83 - 8))(v79);
    }
    v79[40] = v81;
    v84 = v9[8];
    v85 = &v72[v84];
    v86 = &v73[v84];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v87 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v72[v9[9]] = v73[v9[9]];
    v72[v9[10]] = v73[v9[10]];
    v88 = v9[11];
    v89 = &v72[v88];
    v90 = &v73[v88];
    v89[8] = v90[8];
    *(_QWORD *)v89 = *(_QWORD *)v90;
    v91 = a3[9];
    v92 = &v3[v91];
    v93 = &a2[v91];
    v94 = *(_OWORD *)&a2[v91 + 24];
    *(_OWORD *)&v3[v91 + 24] = v94;
    (**(void (***)(char *, char *))(v94 - 8))(&v3[v91], &a2[v91]);
    *((_QWORD *)v92 + 5) = *((_QWORD *)v93 + 5);
    v95 = v9[6];
    v96 = &v92[v95];
    v97 = &v93[v95];
    swift_retain();
    v114(v96, v97, v26);
    v98 = v9[7];
    v99 = &v92[v98];
    v100 = &v93[v98];
    v101 = v93[v98 + 40];
    if ((v101 & 1) != 0)
    {
      v102 = *((_QWORD *)v100 + 1);
      *(_QWORD *)v99 = *(_QWORD *)v100;
      *((_QWORD *)v99 + 1) = v102;
      swift_retain();
    }
    else
    {
      v103 = *(_OWORD *)(v100 + 24);
      *(_OWORD *)(v99 + 24) = v103;
      (**(void (***)(char *))(v103 - 8))(v99);
    }
    v99[40] = v101;
    v104 = v9[8];
    v105 = &v92[v104];
    v106 = &v93[v104];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v107 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    v92[v9[9]] = v93[v9[9]];
    v92[v9[10]] = v93[v9[10]];
    v108 = v9[11];
    v109 = &v92[v108];
    v110 = &v93[v108];
    v109[8] = v110[8];
    *(_QWORD *)v109 = *(_QWORD *)v110;
  }
  return v3;
}

uint64_t sub_23BB2C658(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;

  v4 = a1 + a2[5];
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  v5 = (int *)type metadata accessor for CustomControlStyle(0);
  v6 = v4 + v5[6];
  v7 = sub_23BB8A334();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v4 + v5[7];
  if ((*(_BYTE *)(v9 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = v4 + v5[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[6];
  __swift_destroy_boxed_opaque_existential_1(v12);
  swift_release();
  v8(v12 + v5[6], v7);
  v13 = v12 + v5[7];
  if ((*(_BYTE *)(v13 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v12 + v5[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + a2[7];
  __swift_destroy_boxed_opaque_existential_1(v16);
  swift_release();
  v8(v16 + v5[6], v7);
  v17 = v16 + v5[7];
  if ((*(_BYTE *)(v17 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v17);
  v18 = v16 + v5[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + a2[8];
  __swift_destroy_boxed_opaque_existential_1(v20);
  swift_release();
  v8(v20 + v5[6], v7);
  v21 = v20 + v5[7];
  if ((*(_BYTE *)(v21 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v21);
  v22 = v20 + v5[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  }
  v24 = a1 + a2[9];
  __swift_destroy_boxed_opaque_existential_1(v24);
  swift_release();
  v8(v24 + v5[6], v7);
  v25 = v24 + v5[7];
  if ((*(_BYTE *)(v25 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v25);
  v26 = v24 + v5[8];
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v28 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
  }
  return result;
}

char *sub_23BB2C954(char *a1, char *a2, int *a3)
{
  uint64_t v4;
  char *v6;
  char *v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void (*v113)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a3[5];
  v6 = &a1[v4];
  v7 = &a2[v4];
  v8 = *(_OWORD *)&a2[v4 + 24];
  *(_OWORD *)&a1[v4 + 24] = v8;
  (**(void (***)(char *, char *))(v8 - 8))(&a1[v4], &a2[v4]);
  *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_23BB8A334();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain();
  v113 = v14;
  v14(v11, v12, v13);
  v15 = v9[7];
  v16 = &v6[v15];
  v17 = &v7[v15];
  v18 = v7[v15 + 40];
  if ((v18 & 1) != 0)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v19;
    swift_retain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 24);
    *(_OWORD *)(v16 + 24) = v20;
    (**(void (***)(char *))(v20 - 8))(v16);
  }
  v16[40] = v18;
  v21 = v9[8];
  v22 = &v6[v21];
  v23 = &v7[v21];
  v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  v25 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v23, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v27 = a1;
  v6[v9[9]] = v7[v9[9]];
  v6[v9[10]] = v7[v9[10]];
  v28 = v9[11];
  v29 = &v6[v28];
  v30 = &v7[v28];
  v29[8] = v30[8];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v31 = v25[6];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *(_OWORD *)&a2[v31 + 24];
  *(_OWORD *)(v32 + 24) = v34;
  (**(void (***)(char *, char *))(v34 - 8))(&a1[v31], &a2[v31]);
  *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
  v35 = v9[6];
  v36 = &v32[v35];
  v37 = &v33[v35];
  swift_retain();
  v113(v36, v37, v13);
  v38 = v9[7];
  v39 = &v32[v38];
  v40 = &v33[v38];
  v41 = v33[v38 + 40];
  if ((v41 & 1) != 0)
  {
    v42 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v42;
    swift_retain();
  }
  else
  {
    v43 = *(_OWORD *)(v40 + 24);
    *(_OWORD *)(v39 + 24) = v43;
    (**(void (***)(char *))(v43 - 8))(v39);
  }
  v39[40] = v41;
  v44 = v9[8];
  v45 = &v32[v44];
  v46 = &v33[v44];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v47 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v32[v9[9]] = v33[v9[9]];
  v32[v9[10]] = v33[v9[10]];
  v48 = v9[11];
  v49 = &v32[v48];
  v50 = &v33[v48];
  v49[8] = v50[8];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v51 = v25[7];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = *(_OWORD *)&a2[v51 + 24];
  *(_OWORD *)&a1[v51 + 24] = v54;
  (**(void (***)(char *, char *))(v54 - 8))(&a1[v51], &a2[v51]);
  *((_QWORD *)v52 + 5) = *((_QWORD *)v53 + 5);
  v55 = v9[6];
  v56 = &v52[v55];
  v57 = &v53[v55];
  swift_retain();
  v113(v56, v57, v13);
  v58 = v9[7];
  v59 = &v52[v58];
  v60 = &v53[v58];
  v61 = v53[v58 + 40];
  if ((v61 & 1) != 0)
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v62;
    swift_retain();
  }
  else
  {
    v63 = *(_OWORD *)(v60 + 24);
    *(_OWORD *)(v59 + 24) = v63;
    (**(void (***)(char *))(v63 - 8))(v59);
  }
  v59[40] = v61;
  v64 = v9[8];
  v65 = &v52[v64];
  v66 = &v53[v64];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v67 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v52[v9[9]] = v53[v9[9]];
  v52[v9[10]] = v53[v9[10]];
  v68 = v9[11];
  v69 = &v52[v68];
  v70 = &v53[v68];
  v69[8] = v70[8];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v71 = v25[8];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(_OWORD *)&a2[v71 + 24];
  *(_OWORD *)&a1[v71 + 24] = v74;
  (**(void (***)(char *, char *))(v74 - 8))(&a1[v71], &a2[v71]);
  *((_QWORD *)v72 + 5) = *((_QWORD *)v73 + 5);
  v75 = v9[6];
  v76 = &v72[v75];
  v77 = &v73[v75];
  swift_retain();
  v113(v76, v77, v13);
  v78 = v9[7];
  v79 = &v72[v78];
  v80 = &v73[v78];
  v81 = v73[v78 + 40];
  if ((v81 & 1) != 0)
  {
    v82 = *((_QWORD *)v80 + 1);
    *(_QWORD *)v79 = *(_QWORD *)v80;
    *((_QWORD *)v79 + 1) = v82;
    swift_retain();
  }
  else
  {
    v83 = *(_OWORD *)(v80 + 24);
    *(_OWORD *)(v79 + 24) = v83;
    (**(void (***)(char *))(v83 - 8))(v79);
  }
  v79[40] = v81;
  v84 = v9[8];
  v85 = &v72[v84];
  v86 = &v73[v84];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v72[v9[9]] = v73[v9[9]];
  v72[v9[10]] = v73[v9[10]];
  v88 = v9[11];
  v89 = &v72[v88];
  v90 = &v73[v88];
  v89[8] = v90[8];
  *(_QWORD *)v89 = *(_QWORD *)v90;
  v91 = v25[9];
  v92 = &a1[v91];
  v93 = &a2[v91];
  v94 = *(_OWORD *)&a2[v91 + 24];
  *(_OWORD *)&v27[v91 + 24] = v94;
  (**(void (***)(char *, char *))(v94 - 8))(&v27[v91], &a2[v91]);
  *((_QWORD *)v92 + 5) = *((_QWORD *)v93 + 5);
  v95 = v9[6];
  v96 = &v92[v95];
  v97 = &v93[v95];
  swift_retain();
  v113(v96, v97, v13);
  v98 = v9[7];
  v99 = &v92[v98];
  v100 = &v93[v98];
  v101 = v93[v98 + 40];
  if ((v101 & 1) != 0)
  {
    v102 = *((_QWORD *)v100 + 1);
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *((_QWORD *)v99 + 1) = v102;
    swift_retain();
  }
  else
  {
    v103 = *(_OWORD *)(v100 + 24);
    *(_OWORD *)(v99 + 24) = v103;
    (**(void (***)(char *))(v103 - 8))(v99);
  }
  v99[40] = v101;
  v104 = v9[8];
  v105 = &v92[v104];
  v106 = &v93[v104];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v107 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v92[v9[9]] = v93[v9[9]];
  v92[v9[10]] = v93[v9[10]];
  v108 = v9[11];
  v109 = &v92[v108];
  v110 = &v93[v108];
  v109[8] = v110[8];
  *(_QWORD *)v109 = *(_QWORD *)v110;
  return v27;
}

_QWORD *sub_23BB2D000(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int *v97;
  void (*v98)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v6), (_QWORD *)((char *)a2 + v6));
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  swift_retain();
  swift_release();
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_23BB8A334();
  v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v98(v11, v12, v13);
  if (a1 == a2)
  {
    v97 = v9 + 8;
  }
  else
  {
    v14 = v9[7];
    v15 = &v7[v14];
    v16 = &v8[v14];
    sub_23B989D60((uint64_t)&v7[v14], qword_256A59CC0);
    if ((v16[40] & 1) != 0)
    {
      v17 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      v15[40] = 1;
      swift_retain();
    }
    else
    {
      v18 = *((_QWORD *)v16 + 3);
      *((_QWORD *)v15 + 3) = v18;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      (**(void (***)(char *, char *))(v18 - 8))(v15, v16);
      v15[40] = 0;
    }
    v19 = v9[8];
    v97 = v9 + 8;
    v20 = &v7[v19];
    v21 = &v8[v19];
    sub_23B989D9C((uint64_t)&v7[v19], type metadata accessor for CustomControlStyle.BackgroundSize);
    v22 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v24 = v9[11];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = a3[6];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v28), (_QWORD *)((char *)a2 + v28));
  *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
  swift_retain();
  swift_release();
  v98(&v29[v9[6]], &v30[v9[6]], v13);
  if (a1 != a2)
  {
    v31 = v9[7];
    v32 = &v29[v31];
    v33 = &v30[v31];
    sub_23B989D60((uint64_t)&v29[v31], qword_256A59CC0);
    if ((v33[40] & 1) != 0)
    {
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      v32[40] = 1;
      swift_retain();
    }
    else
    {
      v35 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 3) = v35;
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      (**(void (***)(char *, char *))(v35 - 8))(v32, v33);
      v32[40] = 0;
    }
    v36 = *v97;
    v37 = &v29[v36];
    v38 = &v30[v36];
    sub_23B989D9C((uint64_t)&v29[v36], type metadata accessor for CustomControlStyle.BackgroundSize);
    v39 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v40 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v37, v38, v40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
  }
  v29[v9[9]] = v30[v9[9]];
  v29[v9[10]] = v30[v9[10]];
  v41 = v9[11];
  v42 = &v29[v41];
  v43 = &v30[v41];
  v44 = *(_QWORD *)v43;
  v42[8] = v43[8];
  *(_QWORD *)v42 = v44;
  v45 = a3[7];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v45), (_QWORD *)((char *)a2 + v45));
  *((_QWORD *)v46 + 5) = *((_QWORD *)v47 + 5);
  swift_retain();
  swift_release();
  v98(&v46[v9[6]], &v47[v9[6]], v13);
  if (a1 != a2)
  {
    v48 = v9[7];
    v49 = &v46[v48];
    v50 = &v47[v48];
    sub_23B989D60((uint64_t)&v46[v48], qword_256A59CC0);
    if ((v50[40] & 1) != 0)
    {
      v51 = *((_QWORD *)v50 + 1);
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *((_QWORD *)v49 + 1) = v51;
      v49[40] = 1;
      swift_retain();
    }
    else
    {
      v52 = *((_QWORD *)v50 + 3);
      *((_QWORD *)v49 + 3) = v52;
      *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
      (**(void (***)(char *, char *))(v52 - 8))(v49, v50);
      v49[40] = 0;
    }
    v53 = *v97;
    v54 = &v46[v53];
    v55 = &v47[v53];
    sub_23B989D9C((uint64_t)&v46[v53], type metadata accessor for CustomControlStyle.BackgroundSize);
    v56 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v57 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v54, v55, v57);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
  }
  v46[v9[9]] = v47[v9[9]];
  v46[v9[10]] = v47[v9[10]];
  v58 = v9[11];
  v59 = &v46[v58];
  v60 = &v47[v58];
  v61 = *(_QWORD *)v60;
  v59[8] = v60[8];
  *(_QWORD *)v59 = v61;
  v62 = a3[8];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v62), (_QWORD *)((char *)a2 + v62));
  *((_QWORD *)v63 + 5) = *((_QWORD *)v64 + 5);
  swift_retain();
  swift_release();
  v98(&v63[v9[6]], &v64[v9[6]], v13);
  if (a1 != a2)
  {
    v65 = v9[7];
    v66 = &v63[v65];
    v67 = &v64[v65];
    sub_23B989D60((uint64_t)&v63[v65], qword_256A59CC0);
    if ((v67[40] & 1) != 0)
    {
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v68;
      v66[40] = 1;
      swift_retain();
    }
    else
    {
      v69 = *((_QWORD *)v67 + 3);
      *((_QWORD *)v66 + 3) = v69;
      *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
      (**(void (***)(char *, char *))(v69 - 8))(v66, v67);
      v66[40] = 0;
    }
    v70 = *v97;
    v71 = &v63[v70];
    v72 = &v64[v70];
    sub_23B989D9C((uint64_t)&v63[v70], type metadata accessor for CustomControlStyle.BackgroundSize);
    v73 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v74 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v71, v72, v74);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
  }
  v63[v9[9]] = v64[v9[9]];
  v63[v9[10]] = v64[v9[10]];
  v75 = v9[11];
  v76 = &v63[v75];
  v77 = &v64[v75];
  v78 = *(_QWORD *)v77;
  v76[8] = v77[8];
  *(_QWORD *)v76 = v78;
  v79 = a3[9];
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v79), (_QWORD *)((char *)a2 + v79));
  *((_QWORD *)v80 + 5) = *((_QWORD *)v81 + 5);
  swift_retain();
  swift_release();
  v98(&v80[v9[6]], &v81[v9[6]], v13);
  if (a1 != a2)
  {
    v82 = v9[7];
    v83 = &v80[v82];
    v84 = &v81[v82];
    sub_23B989D60((uint64_t)&v80[v82], qword_256A59CC0);
    if ((v84[40] & 1) != 0)
    {
      v85 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v85;
      v83[40] = 1;
      swift_retain();
    }
    else
    {
      v86 = *((_QWORD *)v84 + 3);
      *((_QWORD *)v83 + 3) = v86;
      *((_QWORD *)v83 + 4) = *((_QWORD *)v84 + 4);
      (**(void (***)(char *, char *))(v86 - 8))(v83, v84);
      v83[40] = 0;
    }
    v87 = *v97;
    v88 = &v80[v87];
    v89 = &v81[v87];
    sub_23B989D9C((uint64_t)&v80[v87], type metadata accessor for CustomControlStyle.BackgroundSize);
    v90 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v91 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v88, v89, v91);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
  }
  v80[v9[9]] = v81[v9[9]];
  v80[v9[10]] = v81[v9[10]];
  v92 = v9[11];
  v93 = &v80[v92];
  v94 = &v81[v92];
  v95 = *(_QWORD *)v94;
  v93[8] = v94[8];
  *(_QWORD *)v93 = v95;
  return a1;
}

char *sub_23BB2D7C0(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a3[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = *(_OWORD *)&a2[v5 + 16];
  *(_OWORD *)v6 = *(_OWORD *)&a2[v5];
  *((_OWORD *)v6 + 1) = v8;
  v9 = *(_QWORD *)&a2[v5 + 40];
  *((_QWORD *)v6 + 4) = *(_QWORD *)&a2[v5 + 32];
  *((_QWORD *)v6 + 5) = v9;
  v10 = (int *)type metadata accessor for CustomControlStyle(0);
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = sub_23BB8A334();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v16 = v10[7];
  v17 = &v6[v16];
  v18 = &v7[v16];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_OWORD *)(v17 + 25) = *(_OWORD *)(v18 + 25);
  v20 = v10[8];
  v21 = &v6[v20];
  v22 = &v7[v20];
  v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  v25 = v10[11];
  v26 = &v6[v25];
  v27 = &v7[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = a3[6];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_OWORD *)&a2[v28 + 16];
  *(_OWORD *)v29 = *(_OWORD *)&a2[v28];
  *((_OWORD *)v29 + 1) = v31;
  v32 = *(_QWORD *)&a2[v28 + 40];
  *((_QWORD *)v29 + 4) = *(_QWORD *)&a2[v28 + 32];
  *((_QWORD *)v29 + 5) = v32;
  v15(&a1[v28 + v10[6]], &a2[v28 + v10[6]], v14);
  v33 = v10[7];
  v34 = &v29[v33];
  v35 = &v30[v33];
  v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  *(_OWORD *)(v34 + 25) = *(_OWORD *)(v35 + 25);
  v37 = v10[8];
  v38 = &v29[v37];
  v39 = &v30[v37];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v29[v10[9]] = v30[v10[9]];
  v29[v10[10]] = v30[v10[10]];
  v41 = v10[11];
  v42 = &v29[v41];
  v43 = &v30[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v43[8];
  v44 = a3[7];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *(_OWORD *)&a2[v44 + 16];
  *(_OWORD *)v45 = *(_OWORD *)&a2[v44];
  *((_OWORD *)v45 + 1) = v47;
  v48 = *(_QWORD *)&a2[v44 + 40];
  *((_QWORD *)v45 + 4) = *(_QWORD *)&a2[v44 + 32];
  *((_QWORD *)v45 + 5) = v48;
  v15(&a1[v44 + v10[6]], &a2[v44 + v10[6]], v14);
  v49 = v10[7];
  v50 = &v45[v49];
  v51 = &v46[v49];
  v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  *(_OWORD *)(v50 + 25) = *(_OWORD *)(v51 + 25);
  v53 = v10[8];
  v54 = &v45[v53];
  v55 = &v46[v53];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v56 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v45[v10[9]] = v46[v10[9]];
  v45[v10[10]] = v46[v10[10]];
  v57 = v10[11];
  v58 = &v45[v57];
  v59 = &v46[v57];
  *(_QWORD *)v58 = *(_QWORD *)v59;
  v58[8] = v59[8];
  v60 = a3[8];
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = *(_OWORD *)&a2[v60 + 16];
  *(_OWORD *)v61 = *(_OWORD *)&a2[v60];
  *((_OWORD *)v61 + 1) = v63;
  v64 = *(_QWORD *)&a2[v60 + 40];
  *((_QWORD *)v61 + 4) = *(_QWORD *)&a2[v60 + 32];
  *((_QWORD *)v61 + 5) = v64;
  v15(&a1[v60 + v10[6]], &a2[v60 + v10[6]], v14);
  v65 = v10[7];
  v66 = &v61[v65];
  v67 = &v62[v65];
  v68 = *((_OWORD *)v67 + 1);
  *(_OWORD *)v66 = *(_OWORD *)v67;
  *((_OWORD *)v66 + 1) = v68;
  *(_OWORD *)(v66 + 25) = *(_OWORD *)(v67 + 25);
  v69 = v10[8];
  v70 = &v61[v69];
  v71 = &v62[v69];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v72 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v70, v71, v72);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v61[v10[9]] = v62[v10[9]];
  v61[v10[10]] = v62[v10[10]];
  v73 = v10[11];
  v74 = &v61[v73];
  v75 = &v62[v73];
  *(_QWORD *)v74 = *(_QWORD *)v75;
  v74[8] = v75[8];
  v76 = a3[9];
  v77 = &a1[v76];
  v78 = &a2[v76];
  v79 = *(_OWORD *)&a2[v76 + 16];
  *(_OWORD *)v77 = *(_OWORD *)&a2[v76];
  *((_OWORD *)v77 + 1) = v79;
  v80 = *(_QWORD *)&a2[v76 + 40];
  *((_QWORD *)v77 + 4) = *(_QWORD *)&a2[v76 + 32];
  *((_QWORD *)v77 + 5) = v80;
  v15(&a1[v76 + v10[6]], &a2[v76 + v10[6]], v14);
  v81 = v10[7];
  v82 = &v77[v81];
  v83 = &v78[v81];
  v84 = *((_OWORD *)v83 + 1);
  *(_OWORD *)v82 = *(_OWORD *)v83;
  *((_OWORD *)v82 + 1) = v84;
  *(_OWORD *)(v82 + 25) = *(_OWORD *)(v83 + 25);
  v85 = v10[8];
  v86 = &v77[v85];
  v87 = &v78[v85];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v88 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v77[v10[9]] = v78[v10[9]];
  v77[v10[10]] = v78[v10[10]];
  v89 = v10[11];
  v90 = &v77[v89];
  v91 = &v78[v89];
  v90[8] = v91[8];
  *(_QWORD *)v90 = *(_QWORD *)v91;
  return a1;
}

_QWORD *sub_23BB2DCE4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;

  *a1 = *a2;
  v5 = a3[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v5);
  v8 = *((_OWORD *)v7 + 1);
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *((_OWORD *)v6 + 1) = v8;
  v9 = *((_QWORD *)v7 + 5);
  *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
  *((_QWORD *)v6 + 5) = v9;
  swift_release();
  v10 = (int *)type metadata accessor for CustomControlStyle(0);
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = sub_23BB8A334();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  if (a1 != a2)
  {
    v16 = v10[7];
    v17 = &v7[v16];
    v18 = &v6[v16];
    sub_23B989D60((uint64_t)&v6[v16], qword_256A59CC0);
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
    v20 = v10[8];
    v21 = &v6[v20];
    v22 = &v7[v20];
    sub_23B989D9C((uint64_t)&v6[v20], type metadata accessor for CustomControlStyle.BackgroundSize);
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  v25 = v10[11];
  v26 = &v6[v25];
  v27 = &v7[v25];
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = a3[6];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v28);
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  v32 = *((_QWORD *)v30 + 5);
  *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  *((_QWORD *)v29 + 5) = v32;
  swift_release();
  v15(&v29[v10[6]], &v30[v10[6]], v14);
  if (a1 != a2)
  {
    v33 = v10[7];
    v34 = &v30[v33];
    v35 = &v29[v33];
    sub_23B989D60((uint64_t)&v29[v33], qword_256A59CC0);
    v36 = *((_OWORD *)v34 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v34;
    *((_OWORD *)v35 + 1) = v36;
    *(_OWORD *)(v35 + 25) = *(_OWORD *)(v34 + 25);
    v37 = v10[8];
    v38 = &v29[v37];
    v39 = &v30[v37];
    sub_23B989D9C((uint64_t)&v29[v37], type metadata accessor for CustomControlStyle.BackgroundSize);
    v40 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
  }
  v29[v10[9]] = v30[v10[9]];
  v29[v10[10]] = v30[v10[10]];
  v42 = v10[11];
  v43 = &v29[v42];
  v44 = &v30[v42];
  v43[8] = v44[8];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = a3[7];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v45);
  v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  v49 = *((_QWORD *)v47 + 5);
  *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
  *((_QWORD *)v46 + 5) = v49;
  swift_release();
  v15(&v46[v10[6]], &v47[v10[6]], v14);
  if (a1 != a2)
  {
    v50 = v10[7];
    v51 = &v47[v50];
    v52 = &v46[v50];
    sub_23B989D60((uint64_t)&v46[v50], qword_256A59CC0);
    v53 = *((_OWORD *)v51 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v51;
    *((_OWORD *)v52 + 1) = v53;
    *(_OWORD *)(v52 + 25) = *(_OWORD *)(v51 + 25);
    v54 = v10[8];
    v55 = &v46[v54];
    v56 = &v47[v54];
    sub_23B989D9C((uint64_t)&v46[v54], type metadata accessor for CustomControlStyle.BackgroundSize);
    v57 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v58 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v55, v56, v58);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
  }
  v46[v10[9]] = v47[v10[9]];
  v46[v10[10]] = v47[v10[10]];
  v59 = v10[11];
  v60 = &v46[v59];
  v61 = &v47[v59];
  v60[8] = v61[8];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v62 = a3[8];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v62);
  v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  v66 = *((_QWORD *)v64 + 5);
  *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
  *((_QWORD *)v63 + 5) = v66;
  swift_release();
  v15(&v63[v10[6]], &v64[v10[6]], v14);
  if (a1 != a2)
  {
    v67 = v10[7];
    v68 = &v64[v67];
    v69 = &v63[v67];
    sub_23B989D60((uint64_t)&v63[v67], qword_256A59CC0);
    v70 = *((_OWORD *)v68 + 1);
    *(_OWORD *)v69 = *(_OWORD *)v68;
    *((_OWORD *)v69 + 1) = v70;
    *(_OWORD *)(v69 + 25) = *(_OWORD *)(v68 + 25);
    v71 = v10[8];
    v72 = &v63[v71];
    v73 = &v64[v71];
    sub_23B989D9C((uint64_t)&v63[v71], type metadata accessor for CustomControlStyle.BackgroundSize);
    v74 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v75 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v72, v73, v75);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
  }
  v63[v10[9]] = v64[v10[9]];
  v63[v10[10]] = v64[v10[10]];
  v76 = v10[11];
  v77 = &v63[v76];
  v78 = &v64[v76];
  v77[8] = v78[8];
  *(_QWORD *)v77 = *(_QWORD *)v78;
  v79 = a3[9];
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v79);
  v82 = *((_OWORD *)v81 + 1);
  *(_OWORD *)v80 = *(_OWORD *)v81;
  *((_OWORD *)v80 + 1) = v82;
  v83 = *((_QWORD *)v81 + 5);
  *((_QWORD *)v80 + 4) = *((_QWORD *)v81 + 4);
  *((_QWORD *)v80 + 5) = v83;
  swift_release();
  v15(&v80[v10[6]], &v81[v10[6]], v14);
  if (a1 != a2)
  {
    v84 = v10[7];
    v85 = &v81[v84];
    v86 = &v80[v84];
    sub_23B989D60((uint64_t)&v80[v84], qword_256A59CC0);
    v87 = *((_OWORD *)v85 + 1);
    *(_OWORD *)v86 = *(_OWORD *)v85;
    *((_OWORD *)v86 + 1) = v87;
    *(_OWORD *)(v86 + 25) = *(_OWORD *)(v85 + 25);
    v88 = v10[8];
    v89 = &v80[v88];
    v90 = &v81[v88];
    sub_23B989D9C((uint64_t)&v80[v88], type metadata accessor for CustomControlStyle.BackgroundSize);
    v91 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v92 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v89, v90, v92);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
  }
  v80[v10[9]] = v81[v10[9]];
  v80[v10[10]] = v81[v10[10]];
  v93 = v10[11];
  v94 = &v80[v93];
  v95 = &v81[v93];
  v94[8] = v95[8];
  *(_QWORD *)v94 = *(_QWORD *)v95;
  return a1;
}

uint64_t sub_23BB2E350()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB2E35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t sub_23BB2E3A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB2E3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t sub_23BB2E404()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CustomControlStyle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23BB2E484(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t Action;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  int *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  __int128 v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t *v146;
  void (*v147)(char *, char *, uint64_t);
  int *v148;
  char *v149;
  char *v150;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for DirectionsState();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v12 = *(int *)(v7 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
    v16 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23BB88984();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = a3;
    v24 = a3[8];
    v146 = a1;
    v25 = (char *)a1 + v24;
    v26 = a2;
    v27 = (char *)a2 + v24;
    *(_QWORD *)v25 = *(uint64_t *)((char *)a2 + v24);
    v148 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
    v28 = v148[5];
    v150 = v25;
    v29 = &v25[v28];
    v149 = v27;
    v30 = &v27[v28];
    v31 = *(_OWORD *)&v27[v28 + 24];
    *(_OWORD *)&v25[v28 + 24] = v31;
    (**(void (***)(char *, char *))(v31 - 8))(&v25[v28], &v27[v28]);
    *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
    v32 = (int *)type metadata accessor for CustomControlStyle(0);
    v33 = v32[6];
    v34 = &v29[v33];
    v35 = &v30[v33];
    v36 = sub_23BB8A334();
    v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v36 - 8) + 16);
    swift_retain();
    v147 = (void (*)(char *, char *, uint64_t))v37;
    v37(v34, v35, v36);
    v38 = v32[7];
    v39 = &v29[v38];
    v40 = &v30[v38];
    v41 = v30[v38 + 40];
    if ((v41 & 1) != 0)
    {
      v42 = *((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = v42;
      swift_retain();
    }
    else
    {
      v43 = *(_OWORD *)(v40 + 24);
      *(_OWORD *)(v39 + 24) = v43;
      (**(void (***)(char *))(v43 - 8))(v39);
    }
    v44 = v23;
    v45 = v36;
    v46 = v26;
    v11 = v146;
    v39[40] = v41;
    v47 = v32[8];
    v48 = &v29[v47];
    v49 = &v30[v47];
    v50 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v51 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v29[v32[9]] = v30[v32[9]];
    v29[v32[10]] = v30[v32[10]];
    v52 = v32[11];
    v53 = &v29[v52];
    v54 = &v30[v52];
    v53[8] = v54[8];
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v55 = v148[6];
    v56 = &v150[v55];
    v57 = &v149[v55];
    v58 = *(_OWORD *)&v149[v55 + 24];
    *(_OWORD *)&v150[v55 + 24] = v58;
    (**(void (***)(char *, char *))(v58 - 8))(&v150[v55], &v149[v55]);
    *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
    v59 = v32[6];
    v60 = &v56[v59];
    v61 = &v57[v59];
    swift_retain();
    v147(v60, v61, v45);
    v62 = v32[7];
    v63 = &v56[v62];
    v64 = &v57[v62];
    v65 = v57[v62 + 40];
    if ((v65 & 1) != 0)
    {
      v66 = *((_QWORD *)v64 + 1);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v66;
      swift_retain();
    }
    else
    {
      v67 = *(_OWORD *)(v64 + 24);
      *(_OWORD *)(v63 + 24) = v67;
      (**(void (***)(char *))(v67 - 8))(v63);
    }
    v63[40] = v65;
    v68 = v32[8];
    v69 = &v56[v68];
    v70 = &v57[v68];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v71 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v56[v32[9]] = v57[v32[9]];
    v56[v32[10]] = v57[v32[10]];
    v72 = v32[11];
    v73 = &v56[v72];
    v74 = &v57[v72];
    v73[8] = v74[8];
    *(_QWORD *)v73 = *(_QWORD *)v74;
    v75 = v148[7];
    v76 = &v150[v75];
    v77 = &v149[v75];
    v78 = *(_OWORD *)&v149[v75 + 24];
    *(_OWORD *)&v150[v75 + 24] = v78;
    (**(void (***)(char *, char *))(v78 - 8))(&v150[v75], &v149[v75]);
    *((_QWORD *)v76 + 5) = *((_QWORD *)v77 + 5);
    v79 = v32[6];
    v80 = &v76[v79];
    v81 = &v77[v79];
    swift_retain();
    v147(v80, v81, v45);
    v82 = v32[7];
    v83 = &v76[v82];
    v84 = &v77[v82];
    v85 = v77[v82 + 40];
    if ((v85 & 1) != 0)
    {
      v86 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v86;
      swift_retain();
    }
    else
    {
      v87 = *(_OWORD *)(v84 + 24);
      *(_OWORD *)(v83 + 24) = v87;
      (**(void (***)(char *))(v87 - 8))(v83);
    }
    v83[40] = v85;
    v88 = v32[8];
    v89 = &v76[v88];
    v90 = &v77[v88];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v91 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v89, v90, v91);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v76[v32[9]] = v77[v32[9]];
    v76[v32[10]] = v77[v32[10]];
    v92 = v32[11];
    v93 = &v76[v92];
    v94 = &v77[v92];
    v93[8] = v94[8];
    *(_QWORD *)v93 = *(_QWORD *)v94;
    v95 = v148[8];
    v96 = &v150[v95];
    v97 = &v149[v95];
    v98 = *(_OWORD *)&v149[v95 + 24];
    *(_OWORD *)&v150[v95 + 24] = v98;
    (**(void (***)(char *, char *))(v98 - 8))(&v150[v95], &v149[v95]);
    *((_QWORD *)v96 + 5) = *((_QWORD *)v97 + 5);
    v99 = v32[6];
    v100 = &v96[v99];
    v101 = &v97[v99];
    swift_retain();
    v147(v100, v101, v45);
    v102 = v32[7];
    v103 = &v96[v102];
    v104 = &v97[v102];
    v105 = v97[v102 + 40];
    if ((v105 & 1) != 0)
    {
      v106 = *((_QWORD *)v104 + 1);
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = v106;
      swift_retain();
    }
    else
    {
      v107 = *(_OWORD *)(v104 + 24);
      *(_OWORD *)(v103 + 24) = v107;
      (**(void (***)(char *))(v107 - 8))(v103);
    }
    v103[40] = v105;
    v108 = v32[8];
    v109 = &v96[v108];
    v110 = &v97[v108];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v111 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v109, v110, v111);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v96[v32[9]] = v97[v32[9]];
    v96[v32[10]] = v97[v32[10]];
    v112 = v32[11];
    v113 = &v96[v112];
    v114 = &v97[v112];
    v113[8] = v114[8];
    *(_QWORD *)v113 = *(_QWORD *)v114;
    v115 = v148[9];
    v116 = &v150[v115];
    v117 = &v149[v115];
    v118 = *(_OWORD *)&v149[v115 + 24];
    *(_OWORD *)&v150[v115 + 24] = v118;
    (**(void (***)(char *, char *))(v118 - 8))(&v150[v115], &v149[v115]);
    *((_QWORD *)v116 + 5) = *((_QWORD *)v117 + 5);
    v119 = v32[6];
    v120 = &v116[v119];
    v121 = &v117[v119];
    swift_retain();
    v147(v120, v121, v45);
    v122 = v32[7];
    v123 = &v116[v122];
    v124 = &v117[v122];
    v125 = v117[v122 + 40];
    if ((v125 & 1) != 0)
    {
      v126 = *((_QWORD *)v124 + 1);
      *(_QWORD *)v123 = *(_QWORD *)v124;
      *((_QWORD *)v123 + 1) = v126;
      swift_retain();
    }
    else
    {
      v127 = *(_OWORD *)(v124 + 24);
      *(_OWORD *)(v123 + 24) = v127;
      (**(void (***)(char *))(v127 - 8))(v123);
    }
    v123[40] = v125;
    v128 = v32[8];
    v129 = &v116[v128];
    v130 = &v117[v128];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v131 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v116[v32[9]] = v117[v32[9]];
    v116[v32[10]] = v117[v32[10]];
    v132 = v32[11];
    v133 = &v116[v132];
    v134 = &v117[v132];
    v133[8] = v134[8];
    *(_QWORD *)v133 = *(_QWORD *)v134;
    v135 = v44[9];
    v136 = v44[10];
    v137 = (char *)v146 + v135;
    v138 = (uint64_t)v46 + v135;
    *(_QWORD *)v137 = *(_QWORD *)v138;
    *(_OWORD *)(v137 + 8) = *(_OWORD *)(v138 + 8);
    *(_OWORD *)(v137 + 24) = *(_OWORD *)(v138 + 24);
    *(_OWORD *)(v137 + 40) = *(_OWORD *)(v138 + 40);
    *(_OWORD *)(v137 + 56) = *(_OWORD *)(v138 + 56);
    *(_OWORD *)(v137 + 72) = *(_OWORD *)(v138 + 72);
    *(_OWORD *)(v137 + 88) = *(_OWORD *)(v138 + 88);
    *(_OWORD *)(v137 + 104) = *(_OWORD *)(v138 + 104);
    v139 = *(_QWORD *)(v138 + 136);
    *(_OWORD *)(v137 + 120) = *(_OWORD *)(v138 + 120);
    *((_QWORD *)v137 + 17) = v139;
    v140 = (char *)v146 + v136;
    v141 = (char *)v46 + v136;
    *v140 = *v141;
    *((_QWORD *)v140 + 1) = *((_QWORD *)v141 + 1);
    v142 = v44[11];
    v143 = (char *)v146 + v142;
    v144 = (char *)v46 + v142;
    *v143 = *v144;
    *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_23BB2EE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 2, v4))
  {
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + *(int *)(a2 + 32);
  v11 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v12 = v10 + v11[5];
  __swift_destroy_boxed_opaque_existential_1(v12);
  swift_release();
  v13 = (int *)type metadata accessor for CustomControlStyle(0);
  v14 = v12 + v13[6];
  v15 = sub_23BB8A334();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v17 = v12 + v13[7];
  if ((*(_BYTE *)(v17 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v17);
  v18 = v12 + v13[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = v10 + v11[6];
  __swift_destroy_boxed_opaque_existential_1(v20);
  swift_release();
  v16(v20 + v13[6], v15);
  v21 = v20 + v13[7];
  if ((*(_BYTE *)(v21 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v21);
  v22 = v20 + v13[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  }
  v24 = v10 + v11[7];
  __swift_destroy_boxed_opaque_existential_1(v24);
  swift_release();
  v16(v24 + v13[6], v15);
  v25 = v24 + v13[7];
  if ((*(_BYTE *)(v25 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v25);
  v26 = v24 + v13[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  v28 = v10 + v11[8];
  __swift_destroy_boxed_opaque_existential_1(v28);
  swift_release();
  v16(v28 + v13[6], v15);
  v29 = v28 + v13[7];
  if ((*(_BYTE *)(v29 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v29);
  v30 = v28 + v13[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  }
  v32 = v10 + v11[9];
  __swift_destroy_boxed_opaque_existential_1(v32);
  swift_release();
  v16(v32 + v13[6], v15);
  v33 = v32 + v13[7];
  if ((*(_BYTE *)(v33 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v33);
  v34 = v32 + v13[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v35 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_BYTE *sub_23BB2F214(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Action;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  __int128 v28;
  int *v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  char v38;
  uint64_t v39;
  __int128 v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  __int128 v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  char v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  __int128 v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  __int128 v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE *v100;
  char v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  _BYTE *v112;
  _BYTE *v113;
  __int128 v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  char v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v142;
  int *v143;
  void (*v144)(_BYTE *, _BYTE *, uint64_t);
  int *v145;
  _BYTE *v146;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v9 = *(int *)(v6 + 24);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v13 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v13] = a2[v13];
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23BB88984();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v143 = a3;
  v20 = a3[8];
  v21 = a1;
  v22 = &a1[v20];
  v142 = a2;
  v23 = &a2[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v145 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v24 = v145[5];
  v25 = v22;
  v26 = &v22[v24];
  v146 = v23;
  v27 = &v23[v24];
  v28 = *(_OWORD *)&v23[v24 + 24];
  *(_OWORD *)&v22[v24 + 24] = v28;
  (**(void (***)(_BYTE *, _BYTE *))(v28 - 8))(&v22[v24], &v23[v24]);
  *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
  v29 = (int *)type metadata accessor for CustomControlStyle(0);
  v30 = v29[6];
  v31 = &v26[v30];
  v32 = &v27[v30];
  v33 = sub_23BB8A334();
  v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_retain();
  v144 = v34;
  v34(v31, v32, v33);
  v35 = v29[7];
  v36 = &v26[v35];
  v37 = &v27[v35];
  v38 = v27[v35 + 40];
  if ((v38 & 1) != 0)
  {
    v39 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v39;
    swift_retain();
  }
  else
  {
    v40 = *(_OWORD *)(v37 + 24);
    *(_OWORD *)(v36 + 24) = v40;
    (**(void (***)(_BYTE *))(v40 - 8))(v36);
  }
  v41 = v25;
  v42 = v21;
  v36[40] = v38;
  v43 = v29[8];
  v44 = &v26[v43];
  v45 = &v27[v43];
  v46 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v47 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  v26[v29[9]] = v27[v29[9]];
  v26[v29[10]] = v27[v29[10]];
  v48 = v29[11];
  v49 = &v26[v48];
  v50 = &v27[v48];
  v49[8] = v50[8];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v51 = v145[6];
  v52 = &v41[v51];
  v53 = &v146[v51];
  v54 = *(_OWORD *)&v146[v51 + 24];
  *(_OWORD *)&v41[v51 + 24] = v54;
  (**(void (***)(uint64_t, _BYTE *))(v54 - 8))((uint64_t)&v41[v51], &v146[v51]);
  *((_QWORD *)v52 + 5) = *((_QWORD *)v53 + 5);
  v55 = v29[6];
  v56 = &v52[v55];
  v57 = &v53[v55];
  swift_retain();
  v144(v56, v57, v33);
  v58 = v29[7];
  v59 = &v52[v58];
  v60 = &v53[v58];
  v61 = v53[v58 + 40];
  if ((v61 & 1) != 0)
  {
    v62 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v62;
    swift_retain();
  }
  else
  {
    v63 = *(_OWORD *)(v60 + 24);
    *(_OWORD *)(v59 + 24) = v63;
    (**(void (***)(uint64_t))(v63 - 8))((uint64_t)v59);
  }
  v59[40] = v61;
  v64 = v29[8];
  v65 = &v52[v64];
  v66 = &v53[v64];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v67 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  v52[v29[9]] = v53[v29[9]];
  v52[v29[10]] = v53[v29[10]];
  v68 = v29[11];
  v69 = &v52[v68];
  v70 = &v53[v68];
  v69[8] = v70[8];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v71 = v145[7];
  v72 = &v41[v71];
  v73 = &v146[v71];
  v74 = *(_OWORD *)&v146[v71 + 24];
  *(_OWORD *)&v41[v71 + 24] = v74;
  (**(void (***)(uint64_t, _BYTE *))(v74 - 8))((uint64_t)&v41[v71], &v146[v71]);
  *((_QWORD *)v72 + 5) = *((_QWORD *)v73 + 5);
  v75 = v29[6];
  v76 = &v72[v75];
  v77 = &v73[v75];
  swift_retain();
  v144(v76, v77, v33);
  v78 = v29[7];
  v79 = &v72[v78];
  v80 = &v73[v78];
  v81 = v73[v78 + 40];
  if ((v81 & 1) != 0)
  {
    v82 = *((_QWORD *)v80 + 1);
    *(_QWORD *)v79 = *(_QWORD *)v80;
    *((_QWORD *)v79 + 1) = v82;
    swift_retain();
  }
  else
  {
    v83 = *(_OWORD *)(v80 + 24);
    *(_OWORD *)(v79 + 24) = v83;
    (**(void (***)(uint64_t))(v83 - 8))((uint64_t)v79);
  }
  v79[40] = v81;
  v84 = v29[8];
  v85 = &v72[v84];
  v86 = &v73[v84];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v87 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  v72[v29[9]] = v73[v29[9]];
  v72[v29[10]] = v73[v29[10]];
  v88 = v29[11];
  v89 = &v72[v88];
  v90 = &v73[v88];
  v89[8] = v90[8];
  *(_QWORD *)v89 = *(_QWORD *)v90;
  v91 = v145[8];
  v92 = &v41[v91];
  v93 = &v146[v91];
  v94 = *(_OWORD *)&v146[v91 + 24];
  *(_OWORD *)&v41[v91 + 24] = v94;
  (**(void (***)(uint64_t, _BYTE *))(v94 - 8))((uint64_t)&v41[v91], &v146[v91]);
  *((_QWORD *)v92 + 5) = *((_QWORD *)v93 + 5);
  v95 = v29[6];
  v96 = &v92[v95];
  v97 = &v93[v95];
  swift_retain();
  v144(v96, v97, v33);
  v98 = v29[7];
  v99 = &v92[v98];
  v100 = &v93[v98];
  v101 = v93[v98 + 40];
  if ((v101 & 1) != 0)
  {
    v102 = *((_QWORD *)v100 + 1);
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *((_QWORD *)v99 + 1) = v102;
    swift_retain();
  }
  else
  {
    v103 = *(_OWORD *)(v100 + 24);
    *(_OWORD *)(v99 + 24) = v103;
    (**(void (***)(uint64_t))(v103 - 8))((uint64_t)v99);
  }
  v99[40] = v101;
  v104 = v29[8];
  v105 = &v92[v104];
  v106 = &v93[v104];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v107 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  v92[v29[9]] = v93[v29[9]];
  v92[v29[10]] = v93[v29[10]];
  v108 = v29[11];
  v109 = &v92[v108];
  v110 = &v93[v108];
  v109[8] = v110[8];
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v111 = v145[9];
  v112 = &v41[v111];
  v113 = &v146[v111];
  v114 = *(_OWORD *)&v146[v111 + 24];
  *(_OWORD *)(v112 + 24) = v114;
  (**(void (***)(uint64_t, _BYTE *))(v114 - 8))((uint64_t)v112, &v146[v111]);
  *((_QWORD *)v112 + 5) = *((_QWORD *)v113 + 5);
  v115 = v29[6];
  v116 = &v112[v115];
  v117 = &v113[v115];
  swift_retain();
  v144(v116, v117, v33);
  v118 = v29[7];
  v119 = &v112[v118];
  v120 = &v113[v118];
  v121 = v113[v118 + 40];
  if ((v121 & 1) != 0)
  {
    v122 = *((_QWORD *)v120 + 1);
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *((_QWORD *)v119 + 1) = v122;
    swift_retain();
  }
  else
  {
    v123 = *(_OWORD *)(v120 + 24);
    *(_OWORD *)(v119 + 24) = v123;
    (**(void (***)(uint64_t))(v123 - 8))((uint64_t)v119);
  }
  v119[40] = v121;
  v124 = v29[8];
  v125 = &v112[v124];
  v126 = &v113[v124];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v127 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  v112[v29[9]] = v113[v29[9]];
  v112[v29[10]] = v113[v29[10]];
  v128 = v29[11];
  v129 = &v112[v128];
  v130 = &v113[v128];
  v129[8] = v130[8];
  *(_QWORD *)v129 = *(_QWORD *)v130;
  v131 = v143[9];
  v132 = v143[10];
  v133 = &v42[v131];
  v134 = &v142[v131];
  *(_QWORD *)v133 = *(_QWORD *)v134;
  *(_OWORD *)(v133 + 8) = *(_OWORD *)(v134 + 8);
  *(_OWORD *)(v133 + 24) = *(_OWORD *)(v134 + 24);
  *(_OWORD *)(v133 + 40) = *(_OWORD *)(v134 + 40);
  *(_OWORD *)(v133 + 56) = *(_OWORD *)(v134 + 56);
  *(_OWORD *)(v133 + 72) = *(_OWORD *)(v134 + 72);
  *(_OWORD *)(v133 + 88) = *(_OWORD *)(v134 + 88);
  *(_OWORD *)(v133 + 104) = *(_OWORD *)(v134 + 104);
  v135 = *((_QWORD *)v134 + 17);
  *(_OWORD *)(v133 + 120) = *(_OWORD *)(v134 + 120);
  *((_QWORD *)v133 + 17) = v135;
  v136 = &v42[v132];
  v137 = &v142[v132];
  *v136 = *v137;
  *((_QWORD *)v136 + 1) = *((_QWORD *)v137 + 1);
  v138 = v143[11];
  v139 = &v42[v138];
  v140 = &v142[v138];
  *v139 = *v140;
  *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v42;
}

uint64_t sub_23BB2FB74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  int v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Action;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  const void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  const void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int *v143;
  void (*v145)(uint64_t, uint64_t, uint64_t);
  int *v146;

  v5 = type metadata accessor for DirectionsState();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 2, v5);
  v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (!v9)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = v10;
      v11 = *(int *)(v5 + 24);
      v12 = a1 + v11;
      v13 = a2 + v11;
      v14 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_23B989D9C(a1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_6:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v137 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v137;
  v138 = *(int *)(v5 + 24);
  v139 = a1 + v138;
  v140 = a2 + v138;
  v141 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 24))(v139, v140, v141);
LABEL_7:
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_23BB88984();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_13:
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v146 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v28 = v146[5];
  v29 = v26 + v28;
  v30 = v27 + v28;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v26 + v28), (uint64_t *)(v27 + v28));
  *(_QWORD *)(v29 + 40) = *(_QWORD *)(v30 + 40);
  swift_retain();
  swift_release();
  v31 = (int *)type metadata accessor for CustomControlStyle(0);
  v32 = v31[6];
  v33 = v29 + v32;
  v34 = v30 + v32;
  v35 = sub_23BB8A334();
  v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 24);
  v145(v33, v34, v35);
  v142 = v27;
  if (a1 == a2)
  {
    v143 = v31 + 8;
  }
  else
  {
    v36 = v31[7];
    v37 = v29 + v36;
    v38 = v30 + v36;
    sub_23B989D60(v29 + v36, qword_256A59CC0);
    if ((*(_BYTE *)(v38 + 40) & 1) != 0)
    {
      v39 = *(_QWORD *)(v38 + 8);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *(_QWORD *)(v37 + 8) = v39;
      *(_BYTE *)(v37 + 40) = 1;
      swift_retain();
    }
    else
    {
      v40 = *(_QWORD *)(v38 + 24);
      *(_QWORD *)(v37 + 24) = v40;
      *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
      (**(void (***)(uint64_t, uint64_t))(v40 - 8))(v37, v38);
      *(_BYTE *)(v37 + 40) = 0;
    }
    v41 = v31[8];
    v143 = v31 + 8;
    v42 = (void *)(v29 + v41);
    v43 = (const void *)(v30 + v41);
    sub_23B989D9C(v29 + v41, type metadata accessor for CustomControlStyle.BackgroundSize);
    v44 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v45 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    v27 = v142;
  }
  *(_BYTE *)(v29 + v31[9]) = *(_BYTE *)(v30 + v31[9]);
  *(_BYTE *)(v29 + v31[10]) = *(_BYTE *)(v30 + v31[10]);
  v46 = v31[11];
  v47 = v29 + v46;
  v48 = (uint64_t *)(v30 + v46);
  v49 = *v48;
  *(_BYTE *)(v47 + 8) = *((_BYTE *)v48 + 8);
  *(_QWORD *)v47 = v49;
  v50 = v146[6];
  v51 = v26 + v50;
  v52 = v27 + v50;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v26 + v50), (uint64_t *)(v27 + v50));
  *(_QWORD *)(v51 + 40) = *(_QWORD *)(v52 + 40);
  swift_retain();
  swift_release();
  v145(v51 + v31[6], v52 + v31[6], v35);
  if (a1 != a2)
  {
    v53 = v31[7];
    v54 = v51 + v53;
    v55 = v52 + v53;
    sub_23B989D60(v51 + v53, qword_256A59CC0);
    if ((*(_BYTE *)(v55 + 40) & 1) != 0)
    {
      v56 = *(_QWORD *)(v55 + 8);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = v56;
      *(_BYTE *)(v54 + 40) = 1;
      swift_retain();
    }
    else
    {
      v57 = *(_QWORD *)(v55 + 24);
      *(_QWORD *)(v54 + 24) = v57;
      *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
      (**(void (***)(uint64_t, uint64_t))(v57 - 8))(v54, v55);
      *(_BYTE *)(v54 + 40) = 0;
    }
    v58 = *v143;
    v59 = (void *)(v51 + v58);
    v60 = (const void *)(v52 + v58);
    sub_23B989D9C(v51 + v58, type metadata accessor for CustomControlStyle.BackgroundSize);
    v61 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v62 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v59, v60, v62);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    v27 = v142;
  }
  *(_BYTE *)(v51 + v31[9]) = *(_BYTE *)(v52 + v31[9]);
  *(_BYTE *)(v51 + v31[10]) = *(_BYTE *)(v52 + v31[10]);
  v63 = v31[11];
  v64 = v51 + v63;
  v65 = (uint64_t *)(v52 + v63);
  v66 = *v65;
  *(_BYTE *)(v64 + 8) = *((_BYTE *)v65 + 8);
  *(_QWORD *)v64 = v66;
  v67 = v146[7];
  v68 = v26 + v67;
  v69 = v27 + v67;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v26 + v67), (uint64_t *)(v27 + v67));
  *(_QWORD *)(v68 + 40) = *(_QWORD *)(v69 + 40);
  swift_retain();
  swift_release();
  v145(v68 + v31[6], v69 + v31[6], v35);
  if (a1 != a2)
  {
    v70 = v31[7];
    v71 = v68 + v70;
    v72 = v69 + v70;
    sub_23B989D60(v68 + v70, qword_256A59CC0);
    if ((*(_BYTE *)(v72 + 40) & 1) != 0)
    {
      v73 = *(_QWORD *)(v72 + 8);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *(_QWORD *)(v71 + 8) = v73;
      *(_BYTE *)(v71 + 40) = 1;
      swift_retain();
    }
    else
    {
      v74 = *(_QWORD *)(v72 + 24);
      *(_QWORD *)(v71 + 24) = v74;
      *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
      (**(void (***)(uint64_t, uint64_t))(v74 - 8))(v71, v72);
      *(_BYTE *)(v71 + 40) = 0;
    }
    v75 = *v143;
    v76 = (void *)(v68 + v75);
    v77 = (const void *)(v69 + v75);
    sub_23B989D9C(v68 + v75, type metadata accessor for CustomControlStyle.BackgroundSize);
    v78 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v79 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v76, v77, v79);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    v27 = v142;
  }
  *(_BYTE *)(v68 + v31[9]) = *(_BYTE *)(v69 + v31[9]);
  *(_BYTE *)(v68 + v31[10]) = *(_BYTE *)(v69 + v31[10]);
  v80 = v31[11];
  v81 = v68 + v80;
  v82 = (uint64_t *)(v69 + v80);
  v83 = *v82;
  *(_BYTE *)(v81 + 8) = *((_BYTE *)v82 + 8);
  *(_QWORD *)v81 = v83;
  v84 = v146[8];
  v85 = v26 + v84;
  v86 = v27 + v84;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v26 + v84), (uint64_t *)(v27 + v84));
  *(_QWORD *)(v85 + 40) = *(_QWORD *)(v86 + 40);
  swift_retain();
  swift_release();
  v145(v85 + v31[6], v86 + v31[6], v35);
  if (a1 != a2)
  {
    v87 = v31[7];
    v88 = v85 + v87;
    v89 = v86 + v87;
    sub_23B989D60(v85 + v87, qword_256A59CC0);
    if ((*(_BYTE *)(v89 + 40) & 1) != 0)
    {
      v90 = *(_QWORD *)(v89 + 8);
      *(_QWORD *)v88 = *(_QWORD *)v89;
      *(_QWORD *)(v88 + 8) = v90;
      *(_BYTE *)(v88 + 40) = 1;
      swift_retain();
    }
    else
    {
      v91 = *(_QWORD *)(v89 + 24);
      *(_QWORD *)(v88 + 24) = v91;
      *(_QWORD *)(v88 + 32) = *(_QWORD *)(v89 + 32);
      (**(void (***)(uint64_t, uint64_t))(v91 - 8))(v88, v89);
      *(_BYTE *)(v88 + 40) = 0;
    }
    v92 = *v143;
    v93 = (void *)(v85 + v92);
    v94 = (const void *)(v86 + v92);
    sub_23B989D9C(v85 + v92, type metadata accessor for CustomControlStyle.BackgroundSize);
    v95 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v96 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v93, v94, v96);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    v27 = v142;
  }
  *(_BYTE *)(v85 + v31[9]) = *(_BYTE *)(v86 + v31[9]);
  *(_BYTE *)(v85 + v31[10]) = *(_BYTE *)(v86 + v31[10]);
  v97 = v31[11];
  v98 = v85 + v97;
  v99 = (uint64_t *)(v86 + v97);
  v100 = *v99;
  *(_BYTE *)(v98 + 8) = *((_BYTE *)v99 + 8);
  *(_QWORD *)v98 = v100;
  v101 = v146[9];
  v102 = (uint64_t *)(v26 + v101);
  v103 = v27 + v101;
  __swift_assign_boxed_opaque_existential_1(v102, (uint64_t *)(v27 + v101));
  v102[5] = *(_QWORD *)(v103 + 40);
  swift_retain();
  swift_release();
  v145((uint64_t)v102 + v31[6], v103 + v31[6], v35);
  if (a1 != a2)
  {
    v104 = v31[7];
    v105 = (char *)v102 + v104;
    v106 = v103 + v104;
    sub_23B989D60((uint64_t)v102 + v104, qword_256A59CC0);
    if ((*(_BYTE *)(v106 + 40) & 1) != 0)
    {
      v107 = *(_QWORD *)(v106 + 8);
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *((_QWORD *)v105 + 1) = v107;
      v105[40] = 1;
      swift_retain();
    }
    else
    {
      v108 = *(_QWORD *)(v106 + 24);
      *((_QWORD *)v105 + 3) = v108;
      *((_QWORD *)v105 + 4) = *(_QWORD *)(v106 + 32);
      (**(void (***)(char *, uint64_t))(v108 - 8))(v105, v106);
      v105[40] = 0;
    }
    v109 = *v143;
    v110 = (char *)v102 + v109;
    v111 = (const void *)(v103 + v109);
    sub_23B989D9C((uint64_t)v102 + v109, type metadata accessor for CustomControlStyle.BackgroundSize);
    v112 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v113 = sub_23BB892F0();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v110, v111, v113);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    }
  }
  *((_BYTE *)v102 + v31[9]) = *(_BYTE *)(v103 + v31[9]);
  *((_BYTE *)v102 + v31[10]) = *(_BYTE *)(v103 + v31[10]);
  v114 = v31[11];
  v115 = (char *)v102 + v114;
  v116 = (uint64_t *)(v103 + v114);
  v117 = *v116;
  v115[8] = *((_BYTE *)v116 + 8);
  *(_QWORD *)v115 = v117;
  v118 = a3[9];
  v119 = (_QWORD *)(a1 + v118);
  v120 = (_QWORD *)(a2 + v118);
  v121 = *(_QWORD *)(a2 + v118 + 8);
  *v119 = *(_QWORD *)(a2 + v118);
  v119[1] = v121;
  swift_retain();
  swift_release();
  v122 = v120[3];
  v119[2] = v120[2];
  v119[3] = v122;
  swift_retain();
  swift_release();
  v123 = v120[5];
  v119[4] = v120[4];
  v119[5] = v123;
  swift_retain();
  swift_release();
  v124 = v120[7];
  v119[6] = v120[6];
  v119[7] = v124;
  swift_retain();
  swift_release();
  v125 = v120[9];
  v119[8] = v120[8];
  v119[9] = v125;
  swift_retain();
  swift_release();
  v126 = v120[11];
  v119[10] = v120[10];
  v119[11] = v126;
  swift_retain();
  swift_release();
  v127 = v120[13];
  v119[12] = v120[12];
  v119[13] = v127;
  swift_retain();
  swift_release();
  v128 = v120[15];
  v119[14] = v120[14];
  v119[15] = v128;
  swift_retain();
  swift_release();
  v129 = v120[17];
  v119[16] = v120[16];
  v119[17] = v129;
  swift_retain();
  swift_release();
  v130 = a3[10];
  v131 = a1 + v130;
  v132 = a2 + v130;
  *(_BYTE *)v131 = *(_BYTE *)v132;
  *(_QWORD *)(v131 + 8) = *(_QWORD *)(v132 + 8);
  swift_retain();
  swift_release();
  v133 = a3[11];
  v134 = a1 + v133;
  v135 = a2 + v133;
  *(_BYTE *)v134 = *(_BYTE *)v135;
  *(_QWORD *)(v134 + 8) = *(_QWORD *)(v135 + 8);
  swift_retain();
  swift_release();
  return a1;
}

_BYTE *sub_23BB306B0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Action;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  __int128 v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  _OWORD *v68;
  __int128 v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  _OWORD *v84;
  __int128 v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  _OWORD *v100;
  __int128 v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _BYTE *v119;
  int *v120;
  void (*v121)(_BYTE *, _BYTE *, uint64_t);
  int *v122;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v9 = *(int *)(v6 + 24);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v13 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v13] = a2[v13];
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23BB88984();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v119 = a2;
  v120 = a3;
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v122 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v23 = v122[5];
  v24 = &v21[v23];
  v25 = &v22[v23];
  v26 = *(_OWORD *)&v22[v23 + 16];
  *(_OWORD *)v24 = *(_OWORD *)&v22[v23];
  *((_OWORD *)v24 + 1) = v26;
  v27 = *(_QWORD *)&v22[v23 + 40];
  *((_QWORD *)v24 + 4) = *(_QWORD *)&v22[v23 + 32];
  *((_QWORD *)v24 + 5) = v27;
  v28 = (int *)type metadata accessor for CustomControlStyle(0);
  v29 = v28[6];
  v30 = &v24[v29];
  v31 = &v25[v29];
  v32 = sub_23BB8A334();
  v121 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
  v121(v30, v31, v32);
  v33 = v28[7];
  v34 = &v24[v33];
  v35 = &v25[v33];
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  *(_OWORD *)((char *)v34 + 25) = *(_OWORD *)((char *)v35 + 25);
  v37 = v28[8];
  v38 = &v24[v37];
  v39 = &v25[v37];
  v40 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v24[v28[9]] = v25[v28[9]];
  v24[v28[10]] = v25[v28[10]];
  v42 = v28[11];
  v43 = &v24[v42];
  v44 = &v25[v42];
  v43[8] = v44[8];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = v122[6];
  v46 = &v21[v45];
  v47 = &v22[v45];
  v48 = *(_OWORD *)&v22[v45 + 16];
  *(_OWORD *)v46 = *(_OWORD *)&v22[v45];
  *((_OWORD *)v46 + 1) = v48;
  v49 = *(_QWORD *)&v22[v45 + 40];
  *((_QWORD *)v46 + 4) = *(_QWORD *)&v22[v45 + 32];
  *((_QWORD *)v46 + 5) = v49;
  v121(&v21[v45 + v28[6]], &v22[v45 + v28[6]], v32);
  v50 = v28[7];
  v51 = &v46[v50];
  v52 = &v47[v50];
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  *(_OWORD *)((char *)v51 + 25) = *(_OWORD *)((char *)v52 + 25);
  v54 = v28[8];
  v55 = &v46[v54];
  v56 = &v47[v54];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v57 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v46[v28[9]] = v47[v28[9]];
  v46[v28[10]] = v47[v28[10]];
  v58 = v28[11];
  v59 = &v46[v58];
  v60 = &v47[v58];
  v59[8] = v60[8];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v61 = v122[7];
  v62 = &v21[v61];
  v63 = &v22[v61];
  v64 = *(_OWORD *)&v22[v61 + 16];
  *(_OWORD *)v62 = *(_OWORD *)&v22[v61];
  *((_OWORD *)v62 + 1) = v64;
  v65 = *(_QWORD *)&v22[v61 + 40];
  *((_QWORD *)v62 + 4) = *(_QWORD *)&v22[v61 + 32];
  *((_QWORD *)v62 + 5) = v65;
  v121(&v21[v61 + v28[6]], &v22[v61 + v28[6]], v32);
  v66 = v28[7];
  v67 = &v62[v66];
  v68 = &v63[v66];
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  *(_OWORD *)((char *)v67 + 25) = *(_OWORD *)((char *)v68 + 25);
  v70 = v28[8];
  v71 = &v62[v70];
  v72 = &v63[v70];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v73 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v62[v28[9]] = v63[v28[9]];
  v62[v28[10]] = v63[v28[10]];
  v74 = v28[11];
  v75 = &v62[v74];
  v76 = &v63[v74];
  v75[8] = v76[8];
  *(_QWORD *)v75 = *(_QWORD *)v76;
  v77 = v122[8];
  v78 = &v21[v77];
  v79 = &v22[v77];
  v80 = *(_OWORD *)&v22[v77 + 16];
  *(_OWORD *)v78 = *(_OWORD *)&v22[v77];
  *((_OWORD *)v78 + 1) = v80;
  v81 = *(_QWORD *)&v22[v77 + 40];
  *((_QWORD *)v78 + 4) = *(_QWORD *)&v22[v77 + 32];
  *((_QWORD *)v78 + 5) = v81;
  v121(&v21[v77 + v28[6]], &v22[v77 + v28[6]], v32);
  v82 = v28[7];
  v83 = &v78[v82];
  v84 = &v79[v82];
  v85 = v84[1];
  *v83 = *v84;
  v83[1] = v85;
  *(_OWORD *)((char *)v83 + 25) = *(_OWORD *)((char *)v84 + 25);
  v86 = v28[8];
  v87 = &v78[v86];
  v88 = &v79[v86];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v89 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v78[v28[9]] = v79[v28[9]];
  v78[v28[10]] = v79[v28[10]];
  v90 = v28[11];
  v91 = &v78[v90];
  v92 = &v79[v90];
  v91[8] = v92[8];
  *(_QWORD *)v91 = *(_QWORD *)v92;
  v93 = v122[9];
  v94 = &v21[v93];
  v95 = &v22[v93];
  v96 = *(_OWORD *)&v22[v93 + 16];
  *(_OWORD *)v94 = *(_OWORD *)&v22[v93];
  *((_OWORD *)v94 + 1) = v96;
  v97 = *(_QWORD *)&v22[v93 + 40];
  *((_QWORD *)v94 + 4) = *(_QWORD *)&v22[v93 + 32];
  *((_QWORD *)v94 + 5) = v97;
  v121(&v94[v28[6]], &v22[v93 + v28[6]], v32);
  v98 = v28[7];
  v99 = &v94[v98];
  v100 = &v95[v98];
  v101 = v100[1];
  *v99 = *v100;
  v99[1] = v101;
  *(_OWORD *)((char *)v99 + 25) = *(_OWORD *)((char *)v100 + 25);
  v102 = v28[8];
  v103 = &v94[v102];
  v104 = &v95[v102];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v105 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v94[v28[9]] = v95[v28[9]];
  v94[v28[10]] = v95[v28[10]];
  v106 = v28[11];
  v107 = &v94[v106];
  v108 = &v95[v106];
  v107[8] = v108[8];
  *(_QWORD *)v107 = *(_QWORD *)v108;
  v109 = v120[9];
  v110 = v120[10];
  v111 = &a1[v109];
  v112 = &v119[v109];
  v113 = v112[3];
  v111[2] = v112[2];
  v111[3] = v113;
  v114 = v112[1];
  *v111 = *v112;
  v111[1] = v114;
  v115 = v112[8];
  v116 = v112[6];
  v111[7] = v112[7];
  v111[8] = v115;
  v117 = v112[5];
  v111[4] = v112[4];
  v111[5] = v117;
  v111[6] = v116;
  *(_OWORD *)&a1[v110] = *(_OWORD *)&v119[v110];
  *(_OWORD *)&a1[v120[11]] = *(_OWORD *)&v119[v120[11]];
  return a1;
}

uint64_t sub_23BB30D8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Action;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  __int128 v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  _OWORD *v75;
  __int128 v76;
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  _OWORD *v92;
  __int128 v93;
  uint64_t v94;
  void *v95;
  const void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD *v108;
  _OWORD *v109;
  __int128 v110;
  uint64_t v111;
  void *v112;
  const void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _OWORD *v120;
  _OWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  int *v136;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v11 = *(int *)(v6 + 24);
      v12 = a1 + v11;
      v13 = a2 + v11;
      v14 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23B989D9C(a1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_6:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v129 = *(int *)(v6 + 24);
  v130 = a1 + v129;
  v131 = a2 + v129;
  v132 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 40))(v130, v131, v132);
LABEL_7:
  v16 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[7];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_23BB88984();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  v133 = a3;
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v136 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v29 = v136[5];
  v30 = v27 + v29;
  v31 = v28 + v29;
  __swift_destroy_boxed_opaque_existential_1(v27 + v29);
  v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  v33 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  swift_release();
  v34 = (int *)type metadata accessor for CustomControlStyle(0);
  v35 = v34[6];
  v36 = v30 + v35;
  v37 = v31 + v35;
  v38 = sub_23BB8A334();
  v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40);
  v135(v36, v37, v38);
  v134 = v28;
  if (a1 != a2)
  {
    v39 = v34[7];
    v40 = (_OWORD *)(v31 + v39);
    v41 = (_OWORD *)(v30 + v39);
    sub_23B989D60(v30 + v39, qword_256A59CC0);
    v42 = v40[1];
    *v41 = *v40;
    v41[1] = v42;
    *(_OWORD *)((char *)v41 + 25) = *(_OWORD *)((char *)v40 + 25);
    v43 = v34[8];
    v44 = (void *)(v30 + v43);
    v45 = (const void *)(v31 + v43);
    sub_23B989D9C(v30 + v43, type metadata accessor for CustomControlStyle.BackgroundSize);
    v46 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v47 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    v28 = v134;
  }
  *(_BYTE *)(v30 + v34[9]) = *(_BYTE *)(v31 + v34[9]);
  *(_BYTE *)(v30 + v34[10]) = *(_BYTE *)(v31 + v34[10]);
  v48 = v34[11];
  v49 = v30 + v48;
  v50 = v31 + v48;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v51 = v136[6];
  v52 = v27 + v51;
  v53 = v28 + v51;
  __swift_destroy_boxed_opaque_existential_1(v27 + v51);
  v54 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *(_OWORD *)(v52 + 16) = v54;
  v55 = *(_QWORD *)(v53 + 40);
  *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
  *(_QWORD *)(v52 + 40) = v55;
  swift_release();
  v135(v52 + v34[6], v53 + v34[6], v38);
  if (a1 != a2)
  {
    v56 = v34[7];
    v57 = (_OWORD *)(v53 + v56);
    v58 = (_OWORD *)(v52 + v56);
    sub_23B989D60(v52 + v56, qword_256A59CC0);
    v59 = v57[1];
    *v58 = *v57;
    v58[1] = v59;
    *(_OWORD *)((char *)v58 + 25) = *(_OWORD *)((char *)v57 + 25);
    v60 = v34[8];
    v61 = (void *)(v52 + v60);
    v62 = (const void *)(v53 + v60);
    sub_23B989D9C(v52 + v60, type metadata accessor for CustomControlStyle.BackgroundSize);
    v63 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v64 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v61, v62, v64);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    v28 = v134;
  }
  *(_BYTE *)(v52 + v34[9]) = *(_BYTE *)(v53 + v34[9]);
  *(_BYTE *)(v52 + v34[10]) = *(_BYTE *)(v53 + v34[10]);
  v65 = v34[11];
  v66 = v52 + v65;
  v67 = v53 + v65;
  *(_BYTE *)(v66 + 8) = *(_BYTE *)(v67 + 8);
  *(_QWORD *)v66 = *(_QWORD *)v67;
  v68 = v136[7];
  v69 = v27 + v68;
  v70 = v28 + v68;
  __swift_destroy_boxed_opaque_existential_1(v27 + v68);
  v71 = *(_OWORD *)(v70 + 16);
  *(_OWORD *)v69 = *(_OWORD *)v70;
  *(_OWORD *)(v69 + 16) = v71;
  v72 = *(_QWORD *)(v70 + 40);
  *(_QWORD *)(v69 + 32) = *(_QWORD *)(v70 + 32);
  *(_QWORD *)(v69 + 40) = v72;
  swift_release();
  v135(v69 + v34[6], v70 + v34[6], v38);
  if (a1 != a2)
  {
    v73 = v34[7];
    v74 = (_OWORD *)(v70 + v73);
    v75 = (_OWORD *)(v69 + v73);
    sub_23B989D60(v69 + v73, qword_256A59CC0);
    v76 = v74[1];
    *v75 = *v74;
    v75[1] = v76;
    *(_OWORD *)((char *)v75 + 25) = *(_OWORD *)((char *)v74 + 25);
    v77 = v34[8];
    v78 = (void *)(v69 + v77);
    v79 = (const void *)(v70 + v77);
    sub_23B989D9C(v69 + v77, type metadata accessor for CustomControlStyle.BackgroundSize);
    v80 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v81 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v78, v79, v81);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    v28 = v134;
  }
  *(_BYTE *)(v69 + v34[9]) = *(_BYTE *)(v70 + v34[9]);
  *(_BYTE *)(v69 + v34[10]) = *(_BYTE *)(v70 + v34[10]);
  v82 = v34[11];
  v83 = v69 + v82;
  v84 = v70 + v82;
  *(_BYTE *)(v83 + 8) = *(_BYTE *)(v84 + 8);
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v85 = v136[8];
  v86 = v27 + v85;
  v87 = v28 + v85;
  __swift_destroy_boxed_opaque_existential_1(v27 + v85);
  v88 = *(_OWORD *)(v87 + 16);
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_OWORD *)(v86 + 16) = v88;
  v89 = *(_QWORD *)(v87 + 40);
  *(_QWORD *)(v86 + 32) = *(_QWORD *)(v87 + 32);
  *(_QWORD *)(v86 + 40) = v89;
  swift_release();
  v135(v86 + v34[6], v87 + v34[6], v38);
  if (a1 != a2)
  {
    v90 = v34[7];
    v91 = (_OWORD *)(v87 + v90);
    v92 = (_OWORD *)(v86 + v90);
    sub_23B989D60(v86 + v90, qword_256A59CC0);
    v93 = v91[1];
    *v92 = *v91;
    v92[1] = v93;
    *(_OWORD *)((char *)v92 + 25) = *(_OWORD *)((char *)v91 + 25);
    v94 = v34[8];
    v95 = (void *)(v86 + v94);
    v96 = (const void *)(v87 + v94);
    sub_23B989D9C(v86 + v94, type metadata accessor for CustomControlStyle.BackgroundSize);
    v97 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v98 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v95, v96, v98);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    v28 = v134;
  }
  *(_BYTE *)(v86 + v34[9]) = *(_BYTE *)(v87 + v34[9]);
  *(_BYTE *)(v86 + v34[10]) = *(_BYTE *)(v87 + v34[10]);
  v99 = v34[11];
  v100 = v86 + v99;
  v101 = v87 + v99;
  *(_BYTE *)(v100 + 8) = *(_BYTE *)(v101 + 8);
  *(_QWORD *)v100 = *(_QWORD *)v101;
  v102 = v136[9];
  v103 = v27 + v102;
  v104 = v28 + v102;
  __swift_destroy_boxed_opaque_existential_1(v103);
  v105 = *(_OWORD *)(v104 + 16);
  *(_OWORD *)v103 = *(_OWORD *)v104;
  *(_OWORD *)(v103 + 16) = v105;
  v106 = *(_QWORD *)(v104 + 40);
  *(_QWORD *)(v103 + 32) = *(_QWORD *)(v104 + 32);
  *(_QWORD *)(v103 + 40) = v106;
  swift_release();
  v135(v103 + v34[6], v104 + v34[6], v38);
  if (a1 != a2)
  {
    v107 = v34[7];
    v108 = (_OWORD *)(v104 + v107);
    v109 = (_OWORD *)(v103 + v107);
    sub_23B989D60(v103 + v107, qword_256A59CC0);
    v110 = v108[1];
    *v109 = *v108;
    v109[1] = v110;
    *(_OWORD *)((char *)v109 + 25) = *(_OWORD *)((char *)v108 + 25);
    v111 = v34[8];
    v112 = (void *)(v103 + v111);
    v113 = (const void *)(v104 + v111);
    sub_23B989D9C(v103 + v111, type metadata accessor for CustomControlStyle.BackgroundSize);
    v114 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v115 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v112, v113, v115);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
  }
  *(_BYTE *)(v103 + v34[9]) = *(_BYTE *)(v104 + v34[9]);
  *(_BYTE *)(v103 + v34[10]) = *(_BYTE *)(v104 + v34[10]);
  v116 = v34[11];
  v117 = v103 + v116;
  v118 = v104 + v116;
  *(_BYTE *)(v117 + 8) = *(_BYTE *)(v118 + 8);
  *(_QWORD *)v117 = *(_QWORD *)v118;
  v119 = v133[9];
  v120 = (_OWORD *)(a1 + v119);
  v121 = (_OWORD *)(a2 + v119);
  *(_OWORD *)(a1 + v119) = *(_OWORD *)(a2 + v119);
  swift_release();
  v120[1] = v121[1];
  swift_release();
  v120[2] = v121[2];
  swift_release();
  v120[3] = v121[3];
  swift_release();
  v120[4] = v121[4];
  swift_release();
  v120[5] = v121[5];
  swift_release();
  v120[6] = v121[6];
  swift_release();
  v120[7] = v121[7];
  swift_release();
  v120[8] = v121[8];
  swift_release();
  v122 = v133[10];
  v123 = a1 + v122;
  v124 = a2 + v122;
  *(_BYTE *)v123 = *(_BYTE *)v124;
  *(_QWORD *)(v123 + 8) = *(_QWORD *)(v124 + 8);
  swift_release();
  v125 = v133[11];
  v126 = a1 + v125;
  v127 = a2 + v125;
  *(_BYTE *)v126 = *(_BYTE *)v127;
  *(_QWORD *)(v126 + 8) = *(_QWORD *)(v127 + 8);
  swift_release();
  return a1;
}

uint64_t sub_23BB31718()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB31724(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t Action;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  Action = type metadata accessor for LocateAction();
  v7 = *(_QWORD *)(Action - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = Action;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[7];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[8];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_23BB317F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB31800(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t Action;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  Action = type metadata accessor for LocateAction();
  v9 = *(_QWORD *)(Action - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = Action;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[7];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for DetailsAppViewActionsModule(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A63458);
}

void sub_23BB318E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for LocateAction();
  if (v0 <= 0x3F)
  {
    sub_23BA19EA8();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DetailsAppViewActionsModule.Style(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_23BB319A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB319B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t result;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ObjCClassFromMetadata;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;

  v2 = v1;
  v94 = a1;
  v3 = sub_23BB8AA18();
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v89 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DetailsAppViewActionsModule(0);
  v85 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v86 = v8;
  v87 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v83, v9);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634A8);
  MEMORY[0x24BDAC7A8](v97, v12);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634B0);
  v15 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98, v16);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634B8);
  MEMORY[0x24BDAC7A8](v96, v19);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634C0);
  MEMORY[0x24BDAC7A8](v95, v22);
  v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634C8);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82, v25);
  v80 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634D0);
  MEMORY[0x24BDAC7A8](v77, v27);
  v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634D8);
  MEMORY[0x24BDAC7A8](v78, v30);
  v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634E0);
  MEMORY[0x24BDAC7A8](v79, v33);
  v84 = (uint64_t)&v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A634E8);
  MEMORY[0x24BDAC7A8](v99, v35);
  v88 = (char *)&v77 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v6;
  v37 = *(_QWORD *)(v2 + *(int *)(v6 + 32));
  *(_QWORD *)v14 = sub_23BB89788();
  *((_QWORD *)v14 + 1) = v37;
  v14[16] = 0;
  v38 = (uint64_t)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A634F0) + 44)];
  v93 = v2;
  sub_23BB3225C(v38);
  sub_23B996E1C(&qword_256A634F8, &qword_256A634A8, MEMORY[0x24BDF4498]);
  sub_23B9B99E0();
  sub_23BB89D88();
  sub_23B989D60((uint64_t)v14, &qword_256A634A8);
  KeyPath = swift_getKeyPath();
  v40 = v98;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v18, v98);
  v41 = &v21[*(int *)(v96 + 36)];
  *(_QWORD *)v41 = KeyPath;
  *((_QWORD *)v41 + 1) = 2;
  v41[16] = 0;
  v42 = *(void (**)(char *, uint64_t))(v15 + 8);
  v43 = v95;
  v42(v18, v40);
  sub_23B989EFC((uint64_t)v21, (uint64_t)v24, &qword_256A634B8);
  *(_WORD *)&v24[*(int *)(v43 + 36)] = 256;
  sub_23B989D60((uint64_t)v21, &qword_256A634B8);
  v44 = *MEMORY[0x24BDECEA0];
  v45 = sub_23BB894A0();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v11, v44, v45);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v46, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23B9B9770(&qword_256A63500, &qword_256A634C0, (uint64_t (*)(void))sub_23BB351FC, MEMORY[0x24BDEDB80]);
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v48 = v80;
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v11, &qword_256A599C0);
    sub_23B989D60((uint64_t)v24, &qword_256A634C0);
    v49 = sub_23BB8A328();
    v50 = (uint64_t *)&v29[*(int *)(v77 + 36)];
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A680);
    v52 = v93;
    sub_23B989CE8(v93, (uint64_t)v50 + *(int *)(v51 + 36), (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
    *v50 = v49;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v29, v48, v82);
    v53 = sub_23BB8A328();
    v54 = v92;
    LOBYTE(v50) = *(_BYTE *)(v52 + *(int *)(v92 + 20));
    sub_23B989EFC((uint64_t)v29, (uint64_t)v32, &qword_256A634D0);
    v55 = &v32[*(int *)(v78 + 36)];
    *(_QWORD *)v55 = v53;
    v55[8] = (char)v50;
    sub_23B989D60((uint64_t)v29, &qword_256A634D0);
    v56 = sub_23BB8A328();
    LOBYTE(v50) = *(_BYTE *)(v52 + *(int *)(v54 + 24));
    v57 = v84;
    sub_23B989EFC((uint64_t)v32, v84, &qword_256A634D8);
    v58 = v57 + *(int *)(v79 + 36);
    *(_QWORD *)v58 = v56;
    *(_BYTE *)(v58 + 8) = (_BYTE)v50;
    sub_23B989D60((uint64_t)v32, &qword_256A634D8);
    v59 = v87;
    sub_23B989CE8(v52, v87, type metadata accessor for DetailsAppViewActionsModule);
    v60 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    v61 = swift_allocObject();
    sub_23B989CA4(v59, v61 + v60, type metadata accessor for DetailsAppViewActionsModule);
    v62 = v89;
    sub_23BB8AA00();
    v63 = (uint64_t)v88;
    v64 = &v88[*(int *)(v99 + 36)];
    v65 = sub_23BB893E0();
    v67 = v90;
    v66 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(&v64[*(int *)(v65 + 20)], v62, v91);
    *(_QWORD *)v64 = &unk_256A63518;
    *((_QWORD *)v64 + 1) = v61;
    sub_23B989EFC(v57, v63, &qword_256A634E0);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v66);
    sub_23B989D60(v57, &qword_256A634E0);
    sub_23BB897D0();
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v69 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v70 = sub_23BB89D1C();
    v72 = v71;
    v73 = v52 + *(int *)(v54 + 40);
    v74 = *(_BYTE *)v73;
    v75 = *(_QWORD *)(v73 + 8);
    LOBYTE(ObjCClassFromMetadata) = v76 & 1;
    v100 = v74;
    v101 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
    sub_23BB8A0E8();
    sub_23BB35344();
    sub_23BB89E9C();
    swift_release();
    swift_release();
    sub_23B9967D0(v70, v72, ObjCClassFromMetadata);
    swift_bridgeObjectRelease();
    return sub_23B989D60(v63, &qword_256A634E8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BB3225C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D670);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D678);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v32 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D680);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D688);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v32 - v23;
  sub_23BB32540((uint64_t)v16);
  v25 = sub_23BB8A2F8();
  sub_23BA2A2C8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v25, v26);
  sub_23B989D60((uint64_t)v16, &qword_256A5D680);
  sub_23B990D24((uint64_t)v20, (uint64_t)v24, &qword_256A5D688);
  sub_23BB335D8((uint64_t)v4);
  v27 = sub_23BB8A2F8();
  sub_23BA2A320(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1, v27, v28);
  sub_23B989D60((uint64_t)v4, &qword_256A5D670);
  sub_23B990D24((uint64_t)v8, (uint64_t)v12, &qword_256A5D678);
  sub_23B989EFC((uint64_t)v24, (uint64_t)v20, &qword_256A5D688);
  sub_23B989EFC((uint64_t)v12, (uint64_t)v8, &qword_256A5D678);
  v29 = v33;
  sub_23B989EFC((uint64_t)v20, v33, &qword_256A5D688);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63540);
  sub_23B989EFC((uint64_t)v8, v29 + *(int *)(v30 + 48), &qword_256A5D678);
  sub_23B989D60((uint64_t)v12, &qword_256A5D678);
  sub_23B989D60((uint64_t)v24, &qword_256A5D688);
  sub_23B989D60((uint64_t)v8, &qword_256A5D678);
  return sub_23B989D60((uint64_t)v20, &qword_256A5D688);
}

uint64_t sub_23BB32540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  double (**v61)@<D0>(uint64_t@<X8>);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char v78;
  uint64_t v79;
  char v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t (**v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t (**v125)(uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  int *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;

  v166 = a1;
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635D0);
  MEMORY[0x24BDAC7A8](v142, v2);
  v143 = (uint64_t *)((char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635D8);
  MEMORY[0x24BDAC7A8](v165, v4);
  v146 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  MEMORY[0x24BDAC7A8](v159, v6);
  v145 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E08);
  v148 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164, v8);
  v144 = (char *)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v147 = (char *)&v137 - v12;
  v150 = type metadata accessor for DirectionsState();
  v153 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150, v13);
  v140 = (uint64_t)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = v14;
  MEMORY[0x24BDAC7A8](v15, v16);
  v141 = (uint64_t)&v137 - v17;
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635E0);
  MEMORY[0x24BDAC7A8](v161, v18);
  v163 = (uint64_t)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635E8);
  MEMORY[0x24BDAC7A8](v154, v20);
  v156 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635F0);
  MEMORY[0x24BDAC7A8](v162, v22);
  v157 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v160, v24);
  v158 = (uint64_t)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DetailsAppViewActionsModule(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  MEMORY[0x24BDAC7A8](v26, v29);
  v30 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v137 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5B8);
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v137 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C728);
  v152 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155, v39);
  v149 = (char *)&v137 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v42);
  v151 = (int *)((char *)&v137 - v43);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6F8);
  MEMORY[0x24BDAC7A8](v44, v45);
  v47 = (char *)&v137 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(unsigned __int8 *)(v1 + *(int *)(v26 + 20));
  v50 = (uint64_t)&v47[*(int *)(v49 + 48)];
  *v47 = v48;
  v51 = v1;
  v167 = v50;
  sub_23B989CE8(v1, v50, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  if (v48 == 1)
  {
    v52 = sub_23BB8929C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v34, 1, 1, v52);
    v138 = v1;
    sub_23B989CE8(v1, (uint64_t)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DetailsAppViewActionsModule);
    v53 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v54 = swift_allocObject();
    sub_23B989CA4((uint64_t)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v54 + v53, type metadata accessor for DetailsAppViewActionsModule);
    v55 = &v38[v35[12]];
    LOBYTE(v168) = 0;
    sub_23BB8A0C4();
    v56 = v173;
    *v55 = (char)v172;
    *((_QWORD *)v55 + 1) = v56;
    v57 = &v38[v35[13]];
    LOBYTE(v168) = 0;
    sub_23BB8A0C4();
    v58 = v173;
    *v57 = (char)v172;
    *((_QWORD *)v57 + 1) = v58;
    sub_23B990D24((uint64_t)v34, (uint64_t)v38, &qword_256A599A0);
    v59 = &v38[v35[9]];
    *(_QWORD *)v59 = &unk_256A63630;
    *((_QWORD *)v59 + 1) = v54;
    v60 = swift_allocObject();
    *(_QWORD *)(v60 + 16) = sub_23BA0C9B8;
    *(_QWORD *)(v60 + 24) = 0;
    v61 = (double (**)@<D0>(uint64_t@<X8>))&v38[v35[10]];
    *v61 = sub_23BA0D20C;
    v61[1] = (double (*)@<D0>(uint64_t@<X8>))v60;
    v38[v35[11]] = 1;
    v62 = v138 + *(int *)(v26 + 32);
    v63 = v62 + *(int *)(type metadata accessor for DetailsAppViewActionsModule.Style(0) + 20);
    v64 = v158;
    sub_23B989CE8(v63, v158, type metadata accessor for CustomControlStyle);
    v65 = sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v66 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v67 = v149;
    v68 = v160;
    sub_23BB89D94();
    sub_23B989D9C(v64, type metadata accessor for CustomButtonStyle);
    sub_23B989D60((uint64_t)v38, &qword_256A5A5B8);
    v69 = v152;
    v70 = (char *)v151;
    v71 = v155;
    (*(void (**)(int *, char *, uint64_t))(v152 + 32))(v151, v67, v155);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v156, v70, v71);
    swift_storeEnumTagMultiPayload();
    v172 = (char *)v35;
    v173 = v68;
    v174 = v65;
    v175 = v66;
    swift_getOpaqueTypeConformance2();
    v72 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v172 = (char *)v159;
    v173 = v68;
    v174 = v72;
    v175 = v66;
    swift_getOpaqueTypeConformance2();
    v73 = (uint64_t)v157;
    sub_23BB89944();
    sub_23B989EFC(v73, v163, &qword_256A635F0);
    swift_storeEnumTagMultiPayload();
    sub_23BB35D64();
    sub_23BB35EA4();
    sub_23BB89944();
    sub_23B989D60(v73, &qword_256A635F0);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
    return sub_23B989D9C(v167, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  }
  else
  {
    v152 = v26;
    v151 = v35;
    v75 = v1;
    v76 = v167;
    v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v167, 2, v150);
    if (v77)
    {
      if (v77 == 1)
      {
        sub_23BB8A2F8();
        sub_23BB8938C();
        v78 = v173;
        v79 = v174;
        v80 = v175;
        v81 = v143;
        *v143 = v172;
        *((_BYTE *)v81 + 8) = v78;
        v81[2] = v79;
        *((_BYTE *)v81 + 24) = v80;
        *((_OWORD *)v81 + 2) = v176;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
        v82 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
        v83 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
        v168 = v159;
        v169 = v160;
        v170 = v82;
        v171 = v83;
        swift_getOpaqueTypeConformance2();
        sub_23B9B96E4();
        v84 = (uint64_t)v146;
        sub_23BB89944();
        sub_23B989EFC(v84, v163, &qword_256A635D8);
        swift_storeEnumTagMultiPayload();
        sub_23BB35D64();
        sub_23BB35EA4();
        sub_23BB89944();
        return sub_23B989D60(v84, &qword_256A635D8);
      }
      else
      {
        v114 = sub_23BB8929C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v34, 1, 1, v114);
        sub_23B989CE8(v75, (uint64_t)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DetailsAppViewActionsModule);
        v115 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
        v116 = swift_allocObject();
        sub_23B989CA4((uint64_t)v30, v116 + v115, type metadata accessor for DetailsAppViewActionsModule);
        v117 = (int *)v159;
        v118 = (uint64_t)v145;
        v119 = &v145[*(int *)(v159 + 48)];
        LOBYTE(v168) = 0;
        sub_23BB8A0C4();
        v120 = v173;
        *v119 = (char)v172;
        *((_QWORD *)v119 + 1) = v120;
        v121 = v118 + v117[13];
        LOBYTE(v168) = 0;
        sub_23BB8A0C4();
        v122 = v173;
        *(_BYTE *)v121 = (_BYTE)v172;
        *(_QWORD *)(v121 + 8) = v122;
        sub_23B990D24((uint64_t)v34, v118, &qword_256A599A0);
        v123 = (_QWORD *)(v118 + v117[9]);
        *v123 = &unk_256A63610;
        v123[1] = v116;
        v124 = swift_allocObject();
        *(_QWORD *)(v124 + 16) = sub_23BB34630;
        *(_QWORD *)(v124 + 24) = 0;
        v125 = (uint64_t (**)(uint64_t))(v118 + v117[10]);
        *v125 = sub_23B9A5A3C;
        v125[1] = (uint64_t (*)(uint64_t))v124;
        *(_BYTE *)(v118 + v117[11]) = 1;
        v126 = v75 + *(int *)(v152 + 32);
        v127 = type metadata accessor for DetailsAppViewActionsModule.Style(0);
        v128 = v158;
        sub_23B989CE8(v126 + *(int *)(v127 + 28), v158, type metadata accessor for CustomControlStyle);
        v129 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
        v130 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
        v131 = v144;
        v132 = v160;
        sub_23BB89D94();
        sub_23B989D9C(v128, type metadata accessor for CustomButtonStyle);
        sub_23B989D60(v118, &qword_256A59E00);
        v133 = v148;
        v134 = v147;
        v135 = v164;
        (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v147, v131, v164);
        (*(void (**)(_QWORD *, char *, uint64_t))(v133 + 16))(v143, v134, v135);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
        v172 = (char *)v117;
        v173 = v132;
        v174 = v129;
        v175 = v130;
        swift_getOpaqueTypeConformance2();
        sub_23B9B96E4();
        v136 = (uint64_t)v146;
        sub_23BB89944();
        sub_23B989EFC(v136, v163, &qword_256A635D8);
        swift_storeEnumTagMultiPayload();
        sub_23BB35D64();
        sub_23BB35EA4();
        sub_23BB89944();
        sub_23B989D60(v136, &qword_256A635D8);
        return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v134, v135);
      }
    }
    else
    {
      v85 = v141;
      sub_23B989CA4(v76, v141, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v86 = sub_23BB8929C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v34, 1, 1, v86);
      sub_23B989CE8(v51, (uint64_t)v30, type metadata accessor for DetailsAppViewActionsModule);
      v87 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v88 = swift_allocObject();
      sub_23B989CA4((uint64_t)v30, v88 + v87, type metadata accessor for DetailsAppViewActionsModule);
      v89 = v140;
      sub_23B989CE8(v85, v140, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v90 = (*(unsigned __int8 *)(v153 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
      v91 = swift_allocObject();
      sub_23B989CA4(v89, v91 + v90, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v92 = (int *)v159;
      v93 = (uint64_t)v145;
      v94 = &v145[*(int *)(v159 + 48)];
      LOBYTE(v168) = 0;
      sub_23BB8A0C4();
      v95 = v173;
      *v94 = (char)v172;
      *((_QWORD *)v94 + 1) = v95;
      v96 = v93 + v92[13];
      LOBYTE(v168) = 0;
      sub_23BB8A0C4();
      v97 = v173;
      *(_BYTE *)v96 = (_BYTE)v172;
      *(_QWORD *)(v96 + 8) = v97;
      sub_23B990D24((uint64_t)v34, v93, &qword_256A599A0);
      v98 = (_QWORD *)(v93 + v92[9]);
      *v98 = &unk_256A63620;
      v98[1] = v88;
      v99 = swift_allocObject();
      *(_QWORD *)(v99 + 16) = sub_23BB360DC;
      *(_QWORD *)(v99 + 24) = v91;
      v100 = (uint64_t (**)(uint64_t))(v93 + v92[10]);
      *v100 = sub_23B9BA300;
      v100[1] = (uint64_t (*)(uint64_t))v99;
      *(_BYTE *)(v93 + v92[11]) = 1;
      v101 = v75 + *(int *)(v152 + 32);
      v102 = v101 + *(int *)(type metadata accessor for DetailsAppViewActionsModule.Style(0) + 24);
      v103 = v158;
      sub_23B989CE8(v102, v158, type metadata accessor for CustomControlStyle);
      v104 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v105 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v106 = v144;
      v107 = v160;
      sub_23BB89D94();
      sub_23B989D9C(v103, type metadata accessor for CustomButtonStyle);
      sub_23B989D60(v93, &qword_256A59E00);
      v108 = v148;
      v109 = v147;
      v110 = v106;
      v111 = v164;
      (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v147, v110, v164);
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v156, v109, v111);
      swift_storeEnumTagMultiPayload();
      v112 = sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v172 = (char *)v151;
      v173 = v107;
      v174 = v112;
      v175 = v105;
      swift_getOpaqueTypeConformance2();
      v172 = (char *)v92;
      v173 = v107;
      v174 = v104;
      v175 = v105;
      swift_getOpaqueTypeConformance2();
      v113 = (uint64_t)v157;
      sub_23BB89944();
      sub_23B989EFC(v113, v163, &qword_256A635F0);
      swift_storeEnumTagMultiPayload();
      sub_23BB35D64();
      sub_23BB35EA4();
      sub_23BB89944();
      sub_23B989D60(v113, &qword_256A635F0);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v111);
      return sub_23B989D9C(v141, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    }
  }
}

uint64_t sub_23BB335D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(char *, char *, uint64_t);
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t (**v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (**v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void (**v105)(char *, char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;

  v2 = v1;
  v116 = a1;
  v114 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v114, v3);
  v104 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v99 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63548);
  MEMORY[0x24BDAC7A8](v113, v8);
  v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63550);
  v105 = *(void (***)(char *, char *, uint64_t))(v115 - 8);
  MEMORY[0x24BDAC7A8](v115, v11);
  v102 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v103 = (char *)&v98 - v15;
  v108 = type metadata accessor for CustomMenuStyle(0);
  MEMORY[0x24BDAC7A8](v108, v16);
  v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DetailsAppViewActionsModule(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19, v22);
  v23 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v98 - v26;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624B0);
  v101 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v28);
  v30 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v100 = (char *)&v98 - v33;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63558);
  MEMORY[0x24BDAC7A8](v110, v34);
  v112 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63560);
  MEMORY[0x24BDAC7A8](v106, v36);
  v38 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63568);
  MEMORY[0x24BDAC7A8](v111, v39);
  v41 = (void (**)(char *, char *, uint64_t))((char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = v19;
  v42 = *(unsigned __int8 *)(v2 + *(int *)(v19 + 24));
  if (*(_BYTE *)(v2 + *(int *)(v19 + 24)))
  {
    v43 = v2;
    if (v42 == 1)
    {
      v105 = v41;
      v44 = v2;
      sub_23B989CE8(v2, (uint64_t)v27, type metadata accessor for DetailsAppViewActionsModule);
      v45 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v46 = swift_allocObject();
      sub_23B989CA4((uint64_t)v27, v46 + v45, type metadata accessor for DetailsAppViewActionsModule);
      v47 = sub_23BB897D0();
      v49 = v48;
      v104 = v48;
      v51 = v50;
      v53 = v52;
      v54 = v44 + *(int *)(v107 + 32);
      v55 = v54 + *(int *)(type metadata accessor for DetailsAppViewActionsModule.Style(0) + 32);
      v121 = &unk_256A63598;
      v122 = v46;
      v123 = v47;
      v124 = v49;
      LOBYTE(v125) = v51 & 1;
      *((_QWORD *)&v125 + 1) = v53;
      sub_23B989CE8(v55, (uint64_t)v18, type metadata accessor for CustomControlStyle);
      v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624F8);
      v56 = sub_23B996E1C(&qword_256A62500, &qword_256A624F8, (uint64_t)&unk_23BB94700);
      v57 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
      v58 = v108;
      sub_23BB89F5C();
      sub_23B989D9C((uint64_t)v18, type metadata accessor for CustomMenuStyle);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = v101;
      v60 = v100;
      v61 = v109;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v30, v109);
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v38, v60, v61);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
      sub_23B9B96E4();
      v121 = (void *)v107;
      v122 = v58;
      v123 = v56;
      v124 = v57;
      swift_getOpaqueTypeConformance2();
      v62 = (uint64_t)v105;
      sub_23BB89944();
      sub_23B989EFC(v62, (uint64_t)v112, &qword_256A63568);
      swift_storeEnumTagMultiPayload();
      sub_23BB35AE8();
      v63 = sub_23B996E1C(&qword_256A63580, &qword_256A63548, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v64 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v121 = (void *)v113;
      v122 = v114;
      v123 = v63;
      v124 = v64;
      swift_getOpaqueTypeConformance2();
      sub_23BB89944();
      sub_23B989D60(v62, &qword_256A63568);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    }
    else
    {
      v75 = sub_23BB8929C();
      v76 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v99, 1, 1, v75);
      sub_23B989CE8(v43, (uint64_t)v27, type metadata accessor for DetailsAppViewActionsModule);
      v77 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v78 = swift_allocObject();
      sub_23B989CA4((uint64_t)v27, v78 + v77, type metadata accessor for DetailsAppViewActionsModule);
      sub_23B989CE8(v43, (uint64_t)v23, type metadata accessor for DetailsAppViewActionsModule);
      v79 = swift_allocObject();
      sub_23B989CA4((uint64_t)v23, v79 + v77, type metadata accessor for DetailsAppViewActionsModule);
      v80 = (int *)v113;
      v81 = &v10[*(int *)(v113 + 48)];
      LOBYTE(v117) = 0;
      sub_23BB8A0C4();
      v82 = v122;
      *v81 = (char)v121;
      *((_QWORD *)v81 + 1) = v82;
      v83 = &v10[v80[13]];
      LOBYTE(v117) = 0;
      sub_23BB8A0C4();
      v84 = v122;
      *v83 = (char)v121;
      *((_QWORD *)v83 + 1) = v84;
      sub_23B990D24(v76, (uint64_t)v10, &qword_256A599A0);
      v85 = &v10[v80[9]];
      *(_QWORD *)v85 = &unk_256A63578;
      *((_QWORD *)v85 + 1) = v78;
      v86 = swift_allocObject();
      *(_QWORD *)(v86 + 16) = sub_23BB35AB0;
      *(_QWORD *)(v86 + 24) = v79;
      v87 = (uint64_t (**)(uint64_t))&v10[v80[10]];
      *v87 = sub_23BA7D26C;
      v87[1] = (uint64_t (*)(uint64_t))v86;
      v10[v80[11]] = 0;
      v88 = v43 + *(int *)(v107 + 32);
      v89 = type metadata accessor for DetailsAppViewActionsModule.Style(0);
      v90 = v104;
      sub_23B989CE8(v88 + *(int *)(v89 + 36), v104, type metadata accessor for CustomControlStyle);
      v91 = sub_23B996E1C(&qword_256A63580, &qword_256A63548, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v92 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v93 = v102;
      v94 = v114;
      sub_23BB89D94();
      sub_23B989D9C(v90, type metadata accessor for CustomButtonStyle);
      sub_23B989D60((uint64_t)v10, &qword_256A63548);
      v95 = v105;
      v96 = v103;
      v97 = v115;
      v105[4](v103, v93, v115);
      v95[2](v112, v96, v97);
      swift_storeEnumTagMultiPayload();
      sub_23BB35AE8();
      v121 = v80;
      v122 = v94;
      v123 = v91;
      v124 = v92;
      swift_getOpaqueTypeConformance2();
      sub_23BB89944();
      return ((uint64_t (*)(char *, uint64_t))v95[1])(v96, v97);
    }
  }
  else
  {
    v66 = (uint64_t)v41;
    sub_23BB8A2F8();
    sub_23BB8938C();
    v67 = v122;
    v68 = v123;
    v69 = v124;
    *(_QWORD *)v38 = v121;
    v38[8] = v67;
    *((_QWORD *)v38 + 2) = v68;
    v38[24] = v69;
    *((_OWORD *)v38 + 2) = v125;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
    sub_23B9B96E4();
    v70 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A624F8);
    v71 = sub_23B996E1C(&qword_256A62500, &qword_256A624F8, (uint64_t)&unk_23BB94700);
    v72 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
    v117 = v70;
    v118 = v108;
    v119 = v71;
    v120 = v72;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    sub_23B989EFC(v66, (uint64_t)v112, &qword_256A63568);
    swift_storeEnumTagMultiPayload();
    sub_23BB35AE8();
    v73 = sub_23B996E1C(&qword_256A63580, &qword_256A63548, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v74 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v117 = v113;
    v118 = v114;
    v119 = v73;
    v120 = v74;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    return sub_23B989D60(v66, &qword_256A63568);
  }
}

uint64_t sub_23BB34098(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = sub_23BB8AF1C();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[6] = sub_23BB8A9E8();
  v1[7] = sub_23BB8A988();
  v1[8] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB3412C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23BB341AC;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BB341AC()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  v4 = v2[4];
  v3 = v2[5];
  v5 = v2[3];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[5], v2[3]);
  }
  return swift_task_switch();
}

uint64_t sub_23BB34250()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  if ((sub_23BB8AA90() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 16);
    sub_23BB8A328();
    *(_QWORD *)(swift_task_alloc() + 16) = v1;
    sub_23BB893F8();
    swift_release();
    swift_task_dealloc();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB342F0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  if ((sub_23BB8AA90() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 16);
    sub_23BB8A328();
    *(_QWORD *)(swift_task_alloc() + 16) = v1;
    sub_23BB893F8();
    swift_release();
    swift_task_dealloc();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB34388()
{
  type metadata accessor for DetailsAppViewActionsModule(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

uint64_t sub_23BB343F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v1[4] = sub_23BB8A988();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23BB34460()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (_QWORD *)(v1 + *(int *)(type metadata accessor for DetailsAppViewActionsModule(0) + 36));
  v5 = (uint64_t (*)(void))(*(int *)*v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_23BA0CAA8;
  return v5();
}

uint64_t sub_23BB344C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB34534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for DetailsAppViewActionsModule(0) + 36);
  (*(void (**)(void))(v2 + 32))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB3457C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB345E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for DetailsAppViewActionsModule(0) + 36);
  (*(void (**)(void))(v2 + 64))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB34630()
{
  return sub_23BB8A0AC();
}

uint64_t sub_23BB3466C@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23BB34690(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB346FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD);

  v1 = v0[3];
  v2 = v1 + *(int *)(type metadata accessor for DetailsAppViewActionsModule(0) + 36);
  v5 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v2 + 80) + *(_QWORD *)(v2 + 80));
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23B9A559C;
  return v5(v0[2], 0);
}

uint64_t sub_23BB34770(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[4] = a1;
  sub_23BB8A9F4();
  v1[5] = sub_23BB8A9E8();
  v1[6] = sub_23BB8A988();
  v1[7] = v2;
  return swift_task_switch();
}

uint64_t sub_23BB347DC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);

  sub_23BB88D8C();
  if ((sub_23BB88D44() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 32);
    swift_release();
    v2 = (char *)(v1 + *(int *)(type metadata accessor for DetailsAppViewActionsModule(0) + 40));
    v3 = *v2;
    v4 = *((_QWORD *)v2 + 1);
    *(_BYTE *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 24) = v4;
    *(_BYTE *)(v0 + 72) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
    sub_23BB8A0DC();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 32);
    v7 = v6 + *(int *)(type metadata accessor for DetailsAppViewActionsModule(0) + 36);
    v9 = (uint64_t (*)(void))(**(int **)(v7 + 112) + *(_QWORD *)(v7 + 112));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v8;
    *v8 = v0;
    v8[1] = sub_23BB348C4;
    return v9();
  }
}

uint64_t sub_23BB348C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB34910()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB34940()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A635A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A635A8);
  sub_23BB35C58();
  sub_23BB35CDC();
  return sub_23BB8A0AC();
}

uint64_t sub_23BB349D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t (**v23)();
  uint64_t ObjCClassFromMetadata;
  id v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;

  v32 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635C8);
  MEMORY[0x24BDAC7A8](v31, v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CountDownTimerText(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB88984();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DetailsAppViewActionsModule(0);
  sub_23B989EFC(a1 + *(int *)(v19 + 28), (uint64_t)v13, (uint64_t *)&unk_256A5E6B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_23B989D60((uint64_t)v13, (uint64_t *)&unk_256A5E6B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
    v20 = (char *)(a1 + *(int *)(v19 + 44));
    v21 = *v20;
    v22 = *((_QWORD *)v20 + 1);
    v33 = v21;
    v34 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
    sub_23BB8A0D0();
    if (v35 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v18, v14);
      v9[*(int *)(v6 + 20)] = 0;
      v23 = (uint64_t (**)())&v9[*(int *)(v6 + 24)];
      *v23 = sub_23BB34D5C;
      v23[1] = 0;
      sub_23B989CE8((uint64_t)v9, (uint64_t)v5, type metadata accessor for CountDownTimerText);
      swift_storeEnumTagMultiPayload();
      sub_23B97D0C8(&qword_256A60A60, type metadata accessor for CountDownTimerText, (uint64_t)&protocol conformance descriptor for CountDownTimerText);
      sub_23BB89944();
      sub_23B989D9C((uint64_t)v9, type metadata accessor for CountDownTimerText);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v26 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  *(_QWORD *)v5 = sub_23BB89D1C();
  *((_QWORD *)v5 + 1) = v27;
  v5[16] = v28 & 1;
  *((_QWORD *)v5 + 3) = v29;
  swift_storeEnumTagMultiPayload();
  sub_23B97D0C8(&qword_256A60A60, type metadata accessor for CountDownTimerText, (uint64_t)&protocol conformance descriptor for CountDownTimerText);
  return sub_23BB89944();
}

uint64_t sub_23BB34D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  v0 = sub_23BB897C4();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23BB897B8();
  sub_23BB897AC();
  sub_23BB897A0();
  sub_23BB897AC();
  sub_23BB897DC();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return sub_23BB89D1C();
}

uint64_t sub_23BB34EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a2;
  v3 = sub_23BB8944C();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD18);
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v32 - v13;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A635C0);
  MEMORY[0x24BDAC7A8](v35, v15);
  v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DetailsAppViewActionsModule(0);
  sub_23B989EFC(a1 + *(int *)(v22 + 28), (uint64_t)v21, (uint64_t *)&unk_256A5E6B0);
  v23 = sub_23BB88984();
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23);
  sub_23B989D60((uint64_t)v21, (uint64_t *)&unk_256A5E6B0);
  if (v24 == 1
    || (v25 = (char *)(a1 + *(int *)(v22 + 44)),
        v26 = *v25,
        v27 = *((_QWORD *)v25 + 1),
        LOBYTE(v38) = v26,
        v39 = v27,
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970),
        sub_23BB8A0D0(),
        v37 != 1))
  {
    v38 = sub_23BB8A064();
    sub_23BB89434();
    v29 = MEMORY[0x24BDF4108];
    v30 = MEMORY[0x24BDF40E8];
    sub_23BB89DC4();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
    swift_release();
    v31 = v34;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v14, v10, v7);
    (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 16))(v17, v14, v7);
    swift_storeEnumTagMultiPayload();
    v38 = v29;
    v39 = v30;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v7);
  }
  else
  {
    *v17 = sub_23BB8A07C();
    swift_storeEnumTagMultiPayload();
    v38 = MEMORY[0x24BDF4108];
    v39 = MEMORY[0x24BDF40E8];
    swift_getOpaqueTypeConformance2();
    return sub_23BB89944();
  }
}

unint64_t sub_23BB351FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A63508;
  if (!qword_256A63508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634B8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634A8);
    v2[3] = &type metadata for CustomLabelAndIconLabelStyle;
    v2[4] = sub_23B996E1C(&qword_256A634F8, &qword_256A634A8, MEMORY[0x24BDF4498]);
    v2[5] = sub_23B9B99E0();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A59A30, &qword_256A59A38, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, &qword_256A63508);
  }
  return result;
}

uint64_t sub_23BB352E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppViewActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BB34098(v3);
}

unint64_t sub_23BB35344()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63520;
  if (!qword_256A63520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634E8);
    v2[0] = sub_23BB353C8();
    v2[1] = sub_23B97D0C8((unint64_t *)&qword_256A5A208, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63520);
  }
  return result;
}

unint64_t sub_23BB353C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63528;
  if (!qword_256A63528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634E0);
    v2[0] = sub_23BB3544C();
    v2[1] = sub_23B996E1C(&qword_256A5A6B8, &qword_256A5A6C0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63528);
  }
  return result;
}

unint64_t sub_23BB3544C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63530;
  if (!qword_256A63530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634D8);
    v2[0] = sub_23BB354D0();
    v2[1] = sub_23B996E1C(&qword_256A5A6A8, &qword_256A5A6B0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63530);
  }
  return result;
}

unint64_t sub_23BB354D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A63538;
  if (!qword_256A63538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634D0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634C0);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
    v2[4] = sub_23B9B9770(&qword_256A63500, &qword_256A634C0, (uint64_t (*)(void))sub_23BB351FC, MEMORY[0x24BDEDB80]);
    v2[5] = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A5A6A0, &qword_256A5A680, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63538);
  }
  return result;
}

uint64_t sub_23BB355E0()
{
  return sub_23BB34388();
}

uint64_t objectdestroyTm_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = type metadata accessor for DetailsAppViewActionsModule(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 2, v3))
  {
    v4 = v2 + *(int *)(v3 + 24);
    v5 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  v6 = v2 + *(int *)(v1 + 28);
  v7 = sub_23BB88984();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v2 + *(int *)(v1 + 32);
  v10 = (int *)type metadata accessor for DetailsAppViewActionsModule.Style(0);
  v11 = v9 + v10[5];
  __swift_destroy_boxed_opaque_existential_1(v11);
  swift_release();
  v12 = (int *)type metadata accessor for CustomControlStyle(0);
  v13 = v11 + v12[6];
  v14 = sub_23BB8A334();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
  v15(v13, v14);
  v16 = v11 + v12[7];
  if ((*(_BYTE *)(v16 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v16);
  v17 = v11 + v12[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  v19 = v9 + v10[6];
  __swift_destroy_boxed_opaque_existential_1(v19);
  swift_release();
  v15(v19 + v12[6], v14);
  v20 = v19 + v12[7];
  if ((*(_BYTE *)(v20 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v20);
  v21 = v19 + v12[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  }
  v23 = v9 + v10[7];
  __swift_destroy_boxed_opaque_existential_1(v23);
  swift_release();
  v15(v23 + v12[6], v14);
  v24 = v23 + v12[7];
  if ((*(_BYTE *)(v24 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v24);
  v25 = v23 + v12[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  }
  v27 = v9 + v10[8];
  __swift_destroy_boxed_opaque_existential_1(v27);
  swift_release();
  v15(v27 + v12[6], v14);
  v28 = v27 + v12[7];
  if ((*(_BYTE *)(v28 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v28);
  v29 = v27 + v12[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
  }
  v31 = v9 + v10[9];
  __swift_destroy_boxed_opaque_existential_1(v31);
  swift_release();
  v15(v31 + v12[6], v14);
  v32 = v31 + v12[7];
  if ((*(_BYTE *)(v32 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v32);
  v33 = v31 + v12[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v34 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB35A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppViewActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BB34770(v3);
}

uint64_t sub_23BB35AB0()
{
  return sub_23BB360F0(type metadata accessor for DetailsAppViewActionsModule, (uint64_t (*)(uint64_t))sub_23BB34940);
}

uint64_t sub_23BB35AC4()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23BB35AE8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = qword_256A63588;
  if (!qword_256A63588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63568);
    v2 = sub_23B9B96E4();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A624F8);
    v3[3] = type metadata accessor for CustomMenuStyle(255);
    v3[4] = sub_23B996E1C(&qword_256A62500, &qword_256A624F8, (uint64_t)&unk_23BB94700);
    v3[5] = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, &qword_256A63588);
  }
  return result;
}

uint64_t sub_23BB35BDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppViewActionsModule(0) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B990D68;
  return sub_23BB34690(a1, v5);
}

uint64_t sub_23BB35C48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB349D0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BB35C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB34EA4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BB35C58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A635B0;
  if (!qword_256A635B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A635A0);
    v2[0] = sub_23B97D0C8(&qword_256A60A60, type metadata accessor for CountDownTimerText, (uint64_t)&protocol conformance descriptor for CountDownTimerText);
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A635B0);
  }
  return result;
}

unint64_t sub_23BB35CDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A635B8;
  if (!qword_256A635B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A635A8);
    v2[2] = MEMORY[0x24BDF4108];
    v2[3] = MEMORY[0x24BDF40E8];
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A635B8);
  }
  return result;
}

unint64_t sub_23BB35D64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  _QWORD v5[6];

  result = qword_256A635F8;
  if (!qword_256A635F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A635F0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5B8);
    v2 = type metadata accessor for CustomButtonStyle(255);
    sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v3 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E00);
    v5[3] = v2;
    v5[4] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v5[5] = v3;
    v5[0] = OpaqueTypeConformance2;
    v5[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256A635F8);
  }
  return result;
}

unint64_t sub_23BB35EA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A63600;
  if (!qword_256A63600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A635D8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E00);
    v2[3] = type metadata accessor for CustomButtonStyle(255);
    v2[4] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[5] = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B9B96E4();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, &qword_256A63600);
  }
  return result;
}

uint64_t sub_23BB35F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppViewActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B97C964;
  return sub_23BB3457C(v3);
}

uint64_t sub_23BB36000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppViewActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BB344C8(v3);
}

uint64_t sub_23BB36064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DirectionsState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 24) + ((v2 + 16) & ~v2);
  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_23BB360DC()
{
  return sub_23BB360F0((uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t (*)(uint64_t))sub_23B9B46C0);
}

uint64_t sub_23BB360F0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_23BB36144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppViewActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BB343F4(v3);
}

uint64_t sub_23BB361A8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A634E8);
  sub_23BB35344();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB36214(unsigned __int8 a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  if (!(a1 >> 6))
  {
    if (qword_256A58DA8 != -1)
      swift_once();
    v1 = (void *)qword_256A73DE0;
    if (qword_256A73DE0)
      goto LABEL_19;
    goto LABEL_20;
  }
  if (a1 >> 6 != 1)
  {
    if ((a1 & 1) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_19;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_19;
    }
LABEL_20:
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v3 = objc_msgSend(v4, sel_mainBundle);
    v2 = 0;
    goto LABEL_21;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v1 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_20;
LABEL_19:
  swift_bridgeObjectRetain();
  v2 = v1;
  v3 = v2;
LABEL_21:
  v5 = v2;
  v6 = (void *)sub_23BB8A784();
  v7 = (void *)sub_23BB8A784();
  v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  v9 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_23BB36564(unsigned __int8 a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  if (!(a1 >> 6))
  {
    if ((a1 & 1) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_29;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_29;
    }
    goto LABEL_30;
  }
  if (a1 >> 6 != 1)
  {
    if ((a1 & 1) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_29;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_29;
    }
    goto LABEL_30;
  }
  if ((a1 & 1) != 0)
  {
    if (qword_256A58DA8 != -1)
      swift_once();
    v1 = (void *)qword_256A73DE0;
    if (qword_256A73DE0)
      goto LABEL_29;
LABEL_30:
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v3 = objc_msgSend(v4, sel_mainBundle);
    v2 = 0;
    goto LABEL_31;
  }
  if (qword_256A58DB0 != -1)
    swift_once();
  v1 = (void *)qword_256A73DF8;
  if (!qword_256A73DF8)
    goto LABEL_30;
LABEL_29:
  swift_bridgeObjectRetain();
  v2 = v1;
  v3 = v2;
LABEL_31:
  v5 = v2;
  v6 = (void *)sub_23BB8A784();
  v7 = (void *)sub_23BB8A784();
  v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  v9 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t storeEnumTagSinglePayload for AccessoryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB36A58 + 4 * byte_23BB967C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB36A8C + 4 * byte_23BB967C0[v4]))();
}

uint64_t sub_23BB36A8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB36A94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB36A9CLL);
  return result;
}

uint64_t sub_23BB36AA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB36AB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB36AB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB36ABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryType()
{
  return &type metadata for AccessoryType;
}

unint64_t sub_23BB36ADC()
{
  unint64_t result;

  result = qword_256A63638;
  if (!qword_256A63638)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96830, &type metadata for AccessoryType);
    atomic_store(result, (unint64_t *)&qword_256A63638);
  }
  return result;
}

uint64_t sub_23BB36B20()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BB36B74()
{
  sub_23BB8B24C();
  return sub_23BB8B24C();
}

uint64_t sub_23BB36BB4()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

void sub_23BB36C04(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

BOOL sub_23BB36C10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23BB36E44(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for OnboardingBulletPoint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 130 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 130) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 130;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 130;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 130;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for OnboardingBulletPoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_23BB36D08 + 4 * byte_23BB967CF[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_23BB36D3C + 4 * byte_23BB967CA[v4]))();
}

uint64_t sub_23BB36D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB36D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB36D4CLL);
  return result;
}

uint64_t sub_23BB36D64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB36D6CLL);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_23BB36D70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB36D78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB36D84(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

_BYTE *sub_23BB36D90(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for OnboardingBulletPoint()
{
  return &type metadata for OnboardingBulletPoint;
}

unint64_t sub_23BB36DB8()
{
  unint64_t result;

  result = qword_256A63640;
  if (!qword_256A63640)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96878, &type metadata for OnboardingBulletPoint);
    atomic_store(result, (unint64_t *)&qword_256A63640);
  }
  return result;
}

unint64_t sub_23BB36E00()
{
  unint64_t result;

  result = qword_256A63648;
  if (!qword_256A63648)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB968A0, &type metadata for OnboardingBulletPoint);
    atomic_store(result, (unint64_t *)&qword_256A63648);
  }
  return result;
}

BOOL sub_23BB36E44(unsigned __int8 a1, unsigned __int8 a2)
{
  char v2;
  _BOOL4 v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = a2 ^ a1;
  v3 = ((a2 ^ a1) & 1) == 0;
  if (a2 >= 0x40u)
    v3 = 0;
  v4 = a2 & 0xC0;
  v5 = (v2 & 1) == 0;
  if (v4 != 64)
    v5 = 0;
  v6 = (v2 & 1) == 0;
  if (v4 != 128)
    v6 = 0;
  if (a1 >> 6 == 1)
    v6 = v5;
  if (a1 >> 6)
    return v6;
  else
    return v3;
}

uint64_t FindMyRelativeDate.RecencyKey.localizedString(for:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_23BB38F44(a1);
  swift_bridgeObjectRetain();
  return v1;
}

void static FindMyRelativeDate.RecencyKey.live(recencyDuration:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  if (qword_256A58D30 != -1)
    swift_once();
  v4 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v5 = v4;
    v6 = v5;
  }
  else
  {
    v7 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v7, sel_mainBundle);
    v5 = 0;
  }
  v8 = v5;
  v9 = (void *)sub_23BB8A784();
  v10 = (void *)sub_23BB8A784();
  v11 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v9, 0, v10);

  v12 = sub_23BB8A7B4();
  v60 = v13;
  v61 = v12;

  swift_bridgeObjectRelease();
  v14 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v15 = v14;
    v16 = v15;
  }
  else
  {
    v17 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v17, sel_mainBundle);
    v15 = 0;
  }
  v18 = v15;
  v19 = (void *)sub_23BB8A784();
  v20 = (void *)sub_23BB8A784();
  v21 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v19, 0, v20);

  v22 = sub_23BB8A7B4();
  v58 = v23;
  v59 = v22;

  swift_bridgeObjectRelease();
  v24 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v25 = v24;
    v26 = v25;
  }
  else
  {
    v27 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v26 = objc_msgSend(v27, sel_mainBundle);
    v25 = 0;
  }
  v28 = v25;
  v29 = (void *)sub_23BB8A784();
  v30 = (void *)sub_23BB8A784();
  v31 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v29, 0, v30);

  v32 = sub_23BB8A7B4();
  v56 = v33;
  v57 = v32;

  swift_bridgeObjectRelease();
  v34 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v35 = v34;
    v36 = v35;
  }
  else
  {
    v37 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v36 = objc_msgSend(v37, sel_mainBundle);
    v35 = 0;
  }
  v38 = v35;
  v39 = (void *)sub_23BB8A784();
  v40 = (void *)sub_23BB8A784();
  v41 = objc_msgSend(v36, sel_localizedStringForKey_value_table_, v39, 0, v40);

  v42 = sub_23BB8A7B4();
  v44 = v43;

  swift_bridgeObjectRelease();
  v45 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v46 = v45;
    v47 = v46;
  }
  else
  {
    v48 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v47 = objc_msgSend(v48, sel_mainBundle);
    v46 = 0;
  }
  v49 = v46;
  v50 = (void *)sub_23BB8A784();
  v51 = (void *)sub_23BB8A784();
  v52 = objc_msgSend(v47, sel_localizedStringForKey_value_table_, v50, 0, v51);

  v53 = sub_23BB8A7B4();
  v55 = v54;

  swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v61;
  a3[3] = v60;
  a3[4] = v59;
  a3[5] = v58;
  a3[6] = v57;
  a3[7] = v56;
  a3[8] = v42;
  a3[9] = v44;
  a3[10] = v53;
  a3[11] = v55;
}

__n128 FindMyRelativeDate.init(date:recencyKey:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v14 = *a2;
  v12 = a2[2];
  v13 = a2[1];
  v10 = (__n128)a2[4];
  v11 = a2[3];
  v5 = *((_QWORD *)a2 + 10);
  v6 = *((_QWORD *)a2 + 11);
  v7 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  v8 = a3 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  *(_OWORD *)v8 = v14;
  *(_OWORD *)(v8 + 16) = v13;
  *(_OWORD *)(v8 + 32) = v12;
  *(_OWORD *)(v8 + 48) = v11;
  result = v10;
  *(__n128 *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 80) = v5;
  *(_QWORD *)(v8 + 88) = v6;
  return result;
}

void static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  if (qword_256A58D30 != -1)
    swift_once();
  v4 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v5 = v4;
    v6 = v5;
  }
  else
  {
    v7 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v7, sel_mainBundle);
    v5 = 0;
  }
  v8 = v5;
  v9 = (void *)sub_23BB8A784();
  v10 = (void *)sub_23BB8A784();
  v11 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v9, 0, v10);

  v12 = sub_23BB8A7B4();
  v60 = v13;
  v61 = v12;

  swift_bridgeObjectRelease();
  v14 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v15 = v14;
    v16 = v15;
  }
  else
  {
    v17 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v17, sel_mainBundle);
    v15 = 0;
  }
  v18 = v15;
  v19 = (void *)sub_23BB8A784();
  v20 = (void *)sub_23BB8A784();
  v21 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v19, 0, v20);

  v22 = sub_23BB8A7B4();
  v58 = v23;
  v59 = v22;

  swift_bridgeObjectRelease();
  v24 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v25 = v24;
    v26 = v25;
  }
  else
  {
    v27 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v26 = objc_msgSend(v27, sel_mainBundle);
    v25 = 0;
  }
  v28 = v25;
  v29 = (void *)sub_23BB8A784();
  v30 = (void *)sub_23BB8A784();
  v31 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v29, 0, v30);

  v32 = sub_23BB8A7B4();
  v56 = v33;
  v57 = v32;

  swift_bridgeObjectRelease();
  v34 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v35 = v34;
    v36 = v35;
  }
  else
  {
    v37 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v36 = objc_msgSend(v37, sel_mainBundle);
    v35 = 0;
  }
  v38 = v35;
  v39 = (void *)sub_23BB8A784();
  v40 = (void *)sub_23BB8A784();
  v41 = objc_msgSend(v36, sel_localizedStringForKey_value_table_, v39, 0, v40);

  v42 = sub_23BB8A7B4();
  v44 = v43;

  swift_bridgeObjectRelease();
  v45 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v46 = v45;
    v47 = v46;
  }
  else
  {
    v48 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v47 = objc_msgSend(v48, sel_mainBundle);
    v46 = 0;
  }
  v49 = v46;
  v50 = (void *)sub_23BB8A784();
  v51 = (void *)sub_23BB8A784();
  v52 = objc_msgSend(v47, sel_localizedStringForKey_value_table_, v50, 0, v51);

  v53 = sub_23BB8A7B4();
  v55 = v54;

  swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v61;
  a3[3] = v60;
  a3[4] = v59;
  a3[5] = v58;
  a3[6] = v57;
  a3[7] = v56;
  a3[8] = v42;
  a3[9] = v44;
  a3[10] = v53;
  a3[11] = v55;
}

uint64_t FindMyRelativeDate.forcePastDatesOnly(now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA9F904(v2, a2);
  if ((sub_23BB888E8() & 1) != 0)
    v10 = a2;
  else
    v10 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(a2, v9, v5);
}

uint64_t FindMyRelativeDate.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23BB88984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FindMyRelativeDate.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23BB88984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*FindMyRelativeDate.date.modify())()
{
  return nullsub_1;
}

uint64_t FindMyRelativeDate.recencyKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  v8 = *(_QWORD *)(v3 + 48);
  v9 = *(_QWORD *)(v3 + 56);
  v10 = *(_QWORD *)(v3 + 64);
  v11 = *(_QWORD *)(v3 + 72);
  v12 = *(_QWORD *)(v3 + 80);
  v13 = *(_QWORD *)(v3 + 88);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 FindMyRelativeDate.recencyKey.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v7 = a1[3];
  v8 = a1[2];
  v6 = (__n128)a1[4];
  v2 = *((_QWORD *)a1 + 10);
  v3 = *((_QWORD *)a1 + 11);
  v4 = v1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v7;
  result = v6;
  *(__n128 *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 80) = v2;
  *(_QWORD *)(v4 + 88) = v3;
  return result;
}

uint64_t (*FindMyRelativeDate.recencyKey.modify())(_QWORD)
{
  type metadata accessor for FindMyRelativeDate();
  return nullsub_1;
}

__n128 FindMyRelativeDate.forceNowRecencyKey()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[5];
  uint64_t v13;
  uint64_t v14;

  sub_23BA9F904(v1, a1);
  v3 = a1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), v12);
  v10 = v12[1];
  v11 = v12[0];
  v8 = v12[3];
  v9 = v12[2];
  v7 = (__n128)v12[4];
  v4 = v13;
  v5 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)v3 = v11;
  *(_OWORD *)(v3 + 16) = v10;
  *(_OWORD *)(v3 + 32) = v9;
  *(_OWORD *)(v3 + 48) = v8;
  result = v7;
  *(__n128 *)(v3 + 64) = v7;
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = v5;
  return result;
}

void FindMyRelativeDate.RecencyKey.forceNowLabels()(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(*v1, v1[1], a1);
}

uint64_t FindMyRelativeDate.RecencyKey.hash(into:)()
{
  sub_23BB8B378();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB37E24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23BB37E64 + 4 * byte_23BB96920[a1]))(0x4479636E65636572, 0xEF6E6F6974617275);
}

uint64_t sub_23BB37E64()
{
  return 0x4C6E776F6E6B6E75;
}

uint64_t sub_23BB37E84()
{
  return 0x6F6C61646E617473;
}

uint64_t sub_23BB37EA8()
{
  return 0x6D6574497473696CLL;
}

unint64_t sub_23BB37ECC()
{
  return 0xD000000000000018;
}

unint64_t sub_23BB37EEC()
{
  return 0xD000000000000015;
}

uint64_t sub_23BB37F08()
{
  unsigned __int8 *v0;

  return sub_23BB37E24(*v0);
}

uint64_t sub_23BB37F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BB39C1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BB37F34(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23BB37F40()
{
  sub_23BB391C0();
  return sub_23BB8B390();
}

uint64_t sub_23BB37F68()
{
  sub_23BB391C0();
  return sub_23BB8B39C();
}

uint64_t FindMyRelativeDate.RecencyKey.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[12];
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63650);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v17[9] = v1[3];
  v17[10] = v10;
  v11 = v1[4];
  v17[7] = v1[5];
  v17[8] = v11;
  v12 = v1[6];
  v17[5] = v1[7];
  v17[6] = v12;
  v13 = v1[9];
  v17[3] = v1[8];
  v17[4] = v13;
  v14 = v1[10];
  v17[1] = v1[11];
  v17[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BB391C0();
  sub_23BB8B294();
  v18 = v8;
  v19 = v9;
  v20 = 0;
  v15 = v17[11];
  sub_23BB8B0F0();
  if (!v15)
  {
    LOBYTE(v18) = 1;
    sub_23BB8B0CC();
    LOBYTE(v18) = 2;
    sub_23BB8B0CC();
    LOBYTE(v18) = 3;
    sub_23BB8B0CC();
    LOBYTE(v18) = 4;
    sub_23BB8B0CC();
    LOBYTE(v18) = 5;
    sub_23BB8B0CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t FindMyRelativeDate.RecencyKey.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B378();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t FindMyRelativeDate.RecencyKey.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63660);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BB391C0();
  sub_23BB8B288();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (uint64_t)a2;
  }
  else
  {
    v44 = 0;
    sub_23BB8B090();
    v10 = v42;
    v11 = v43;
    LOBYTE(v42) = 1;
    v12 = sub_23BB8B06C();
    v39 = v11;
    v40 = v10;
    v38 = v12;
    LOBYTE(v42) = 2;
    v15 = v14;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8B06C();
    v41 = v15;
    v17 = v16;
    LOBYTE(v42) = 3;
    v19 = v18;
    swift_bridgeObjectRetain();
    v36 = sub_23BB8B06C();
    v37 = v17;
    v20 = v19;
    LOBYTE(v42) = 4;
    v22 = v21;
    swift_bridgeObjectRetain();
    v33 = sub_23BB8B06C();
    v34 = v23;
    v35 = v22;
    LOBYTE(v42) = 5;
    swift_bridgeObjectRetain();
    v24 = sub_23BB8B06C();
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32 = v24;
    v27(v9, v5);
    v28 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v39;
    *a2 = v40;
    a2[1] = v30;
    a2[2] = v38;
    a2[3] = v28;
    a2[4] = v37;
    a2[5] = v20;
    a2[6] = v36;
    a2[7] = v29;
    v31 = v34;
    a2[8] = v33;
    a2[9] = v31;
    a2[10] = v32;
    a2[11] = v26;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23BB386CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FindMyRelativeDate.RecencyKey.init(from:)(a1, a2);
}

uint64_t sub_23BB386E0(_QWORD *a1)
{
  return FindMyRelativeDate.RecencyKey.encode(to:)(a1);
}

uint64_t sub_23BB386FC()
{
  sub_23BB8B240();
  sub_23BB8B378();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t FindMyRelativeDate.hash(into:)()
{
  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BB8A718();
  type metadata accessor for FindMyRelativeDate();
  sub_23BB8B378();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t static FindMyRelativeDate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t MyRelativeDate;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0;
  _OWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[5];
  uint64_t v25;
  uint64_t v26;

  if ((sub_23BB88960() & 1) != 0)
  {
    MyRelativeDate = type metadata accessor for FindMyRelativeDate();
    v5 = a1 + *(int *)(MyRelativeDate + 20);
    v6 = *(_OWORD *)(v5 + 32);
    v7 = *(_OWORD *)(v5 + 48);
    v8 = *(_OWORD *)(v5 + 64);
    v9 = *(_QWORD *)(v5 + 80);
    v10 = *(_QWORD *)(v5 + 88);
    v11 = *(_OWORD *)(v5 + 16);
    v24[0] = *(_OWORD *)v5;
    v24[1] = v11;
    v24[2] = v6;
    v24[3] = v7;
    v24[4] = v8;
    v25 = v9;
    v26 = v10;
    v12 = a2 + *(int *)(MyRelativeDate + 20);
    v13 = *(_OWORD *)(v12 + 32);
    v14 = *(_OWORD *)(v12 + 48);
    v15 = *(_OWORD *)(v12 + 64);
    v16 = *(_QWORD *)(v12 + 80);
    v17 = *(_QWORD *)(v12 + 88);
    v18 = *(_OWORD *)(v12 + 16);
    v21[0] = *(_OWORD *)v12;
    v21[1] = v18;
    v21[2] = v13;
    v21[3] = v14;
    v21[4] = v15;
    v22 = v16;
    v23 = v17;
    MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = _s12FindMyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(v24, v21);
  }
  else
  {
    MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = 0;
  }
  return MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 & 1;
}

uint64_t FindMyRelativeDate.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BB8A718();
  type metadata accessor for FindMyRelativeDate();
  sub_23BB8B378();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t sub_23BB38B70()
{
  sub_23BB8B240();
  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BB8A718();
  sub_23BB8B378();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t sub_23BB38CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0;
  _OWORD v22[5];
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[5];
  uint64_t v26;
  uint64_t v27;

  if ((sub_23BB88960() & 1) != 0)
  {
    v6 = *(int *)(a3 + 20);
    v7 = *(_OWORD *)(a1 + v6 + 32);
    v8 = *(_OWORD *)(a1 + v6 + 48);
    v9 = *(_OWORD *)(a1 + v6 + 64);
    v10 = *(_QWORD *)(a1 + v6 + 80);
    v11 = *(_QWORD *)(a1 + v6 + 88);
    v12 = *(_OWORD *)(a1 + v6 + 16);
    v25[0] = *(_OWORD *)(a1 + v6);
    v25[1] = v12;
    v25[2] = v7;
    v25[3] = v8;
    v25[4] = v9;
    v26 = v10;
    v27 = v11;
    v13 = a2 + v6;
    v14 = *(_OWORD *)(v13 + 32);
    v15 = *(_OWORD *)(v13 + 48);
    v16 = *(_OWORD *)(v13 + 64);
    v17 = *(_QWORD *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 88);
    v19 = *(_OWORD *)(v13 + 16);
    v22[0] = *(_OWORD *)v13;
    v22[1] = v19;
    v22[2] = v14;
    v22[3] = v15;
    v22[4] = v16;
    v23 = v17;
    v24 = v18;
    MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = _s12FindMyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(v25, v22);
  }
  else
  {
    MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = 0;
  }
  return MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 & 1;
}

uint64_t _s12FindMyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = a1[2];
  v25 = a1[4];
  v26 = a1[3];
  v23 = a1[6];
  v24 = a1[5];
  v19 = a1[8];
  v18 = a1[9];
  v3 = a1[11];
  v17 = a1[10];
  v4 = a2[2];
  v21 = a2[3];
  v22 = a1[7];
  v5 = a2[5];
  v20 = a2[4];
  v6 = a2[6];
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[10];
  v11 = a2[11];
  if ((sub_23BB8B36C() & 1) == 0)
    return 0;
  if (v2 == v4 && v26 == v21 || (v12 = sub_23BB8B1A4(), result = 0, (v12 & 1) != 0))
  {
    if (v25 == v20 && v24 == v5 || (v14 = sub_23BB8B1A4(), result = 0, (v14 & 1) != 0))
    {
      if (v23 == v6 && v22 == v7 || (v15 = sub_23BB8B1A4(), result = 0, (v15 & 1) != 0))
      {
        if (v19 == v8 && v18 == v9 || (v16 = sub_23BB8B1A4(), result = 0, (v16 & 1) != 0))
        {
          if (v17 == v10 && v3 == v11)
            return 1;
          else
            return sub_23BB8B1A4();
        }
      }
    }
  }
  return result;
}

uint64_t sub_23BB38F44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  char v19;
  char v20;
  char v21;
  char v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_23BB8881C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD6D8];
  v5 = *(_QWORD *)(v3 - 8);
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v24 - v11;
  v13 = v1[2];
  v14 = v1[4];
  v29 = v1[6];
  v30 = v14;
  v15 = v1[7];
  v16 = v1[8];
  v24[1] = v1[9];
  v25 = v16;
  v26 = v1[10];
  v27 = v1[11];
  v28 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v24 - v11, a1, v3);
  sub_23BB88804();
  sub_23B97D0C8(&qword_256A63720, v4, MEMORY[0x24BDCD6F8]);
  v17 = sub_23BB8A760();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v9, v3);
  if ((v17 & 1) != 0)
  {
    v18(v12, v3);
  }
  else
  {
    sub_23BB887D4();
    v19 = sub_23BB8A760();
    v18(v9, v3);
    if ((v19 & 1) != 0)
    {
      v18(v12, v3);
      return v30;
    }
    else
    {
      sub_23BB88810();
      v20 = sub_23BB8A760();
      v18(v9, v3);
      if ((v20 & 1) != 0)
      {
        v18(v12, v3);
        return v29;
      }
      else
      {
        sub_23BB887EC();
        v21 = sub_23BB8A760();
        v18(v9, v3);
        if ((v21 & 1) != 0)
        {
          v18(v12, v3);
          return v25;
        }
        else
        {
          sub_23BB887E0();
          v22 = sub_23BB8A760();
          v18(v9, v3);
          v18(v12, v3);
          if ((v22 & 1) != 0)
            return v26;
        }
      }
    }
  }
  return v13;
}

unint64_t sub_23BB391C0()
{
  unint64_t result;

  result = qword_256A63658;
  if (!qword_256A63658)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96B70, &type metadata for FindMyRelativeDate.RecencyKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A63658);
  }
  return result;
}

unint64_t sub_23BB39208()
{
  unint64_t result;

  result = qword_256A63668;
  if (!qword_256A63668)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDate.RecencyKey, &type metadata for FindMyRelativeDate.RecencyKey);
    atomic_store(result, (unint64_t *)&qword_256A63668);
  }
  return result;
}

uint64_t sub_23BB3924C()
{
  return sub_23B97D0C8(&qword_256A63670, (uint64_t (*)(uint64_t))type metadata accessor for FindMyRelativeDate, (uint64_t)&protocol conformance descriptor for FindMyRelativeDate);
}

uint64_t *initializeBufferWithCopyOfBuffer for FindMyRelativeDate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BB88984();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v11 = *((_QWORD *)v10 + 3);
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 3) = v11;
    v12 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v12;
    v13 = *((_QWORD *)v10 + 7);
    *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
    *((_QWORD *)v9 + 7) = v13;
    v14 = *((_QWORD *)v10 + 9);
    *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
    *((_QWORD *)v9 + 9) = v14;
    v15 = *((_QWORD *)v10 + 11);
    *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
    *((_QWORD *)v9 + 11) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FindMyRelativeDate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  v12 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = v12;
  v13 = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = v13;
  v14 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  v8[7] = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[8] = v9[8];
  v8[9] = v9[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[10] = v9[10];
  v8[11] = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  v12 = v9[1];
  *v8 = *v9;
  v8[1] = v12;
  return a1;
}

uint64_t assignWithTake for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 88) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23BB396B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BB88984();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BB39730(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BB88984();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t destroy for FindMyRelativeDate.RecencyKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FindMyRelativeDate.RecencyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FindMyRelativeDate.RecencyKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FindMyRelativeDate.RecencyKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyRelativeDate.RecencyKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDate.RecencyKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDate.RecencyKey()
{
  return &type metadata for FindMyRelativeDate.RecencyKey;
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDate.RecencyKey.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BB39AC4 + 4 * byte_23BB9692B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BB39AF8 + 4 * byte_23BB96926[v4]))();
}

uint64_t sub_23BB39AF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB39B00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB39B08);
  return result;
}

uint64_t sub_23BB39B14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB39B1CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BB39B20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB39B28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDate.RecencyKey.CodingKeys()
{
  return &type metadata for FindMyRelativeDate.RecencyKey.CodingKeys;
}

unint64_t sub_23BB39B48()
{
  unint64_t result;

  result = qword_256A63708;
  if (!qword_256A63708)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96B48, &type metadata for FindMyRelativeDate.RecencyKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A63708);
  }
  return result;
}

unint64_t sub_23BB39B90()
{
  unint64_t result;

  result = qword_256A63710;
  if (!qword_256A63710)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96AB8, &type metadata for FindMyRelativeDate.RecencyKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A63710);
  }
  return result;
}

unint64_t sub_23BB39BD8()
{
  unint64_t result;

  result = qword_256A63718;
  if (!qword_256A63718)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96AE0, &type metadata for FindMyRelativeDate.RecencyKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A63718);
  }
  return result;
}

uint64_t sub_23BB39C1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4479636E65636572 && a2 == 0xEF6E6F6974617275;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C6E776F6E6B6E75 && a2 == 0xEC0000006C656261 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C61646E617473 && a2 == 0xEF6C6562614C656ELL || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6574497473696CLL && a2 == 0xED00006C6562614CLL || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023BB9CF80 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BB9CFA0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t static UserLocationProvider.Subscription.== infix(_:_:)()
{
  return 1;
}

uint64_t UserLocationProvider.Subscription.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t UserLocationProvider.Subscription.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

unint64_t sub_23BB39F88()
{
  unint64_t result;

  result = qword_256A63728;
  if (!qword_256A63728)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for UserLocationProvider.Subscription, &type metadata for UserLocationProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A63728);
  }
  return result;
}

uint64_t _s14descr250CB5389O12SubscriptionOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BB3A00C + 4 * byte_23BB96BC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BB3A02C + 4 * byte_23BB96BC5[v4]))();
}

_BYTE *sub_23BB3A00C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BB3A02C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB3A034(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB3A03C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB3A044(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB3A04C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UserLocationProvider.Subscription()
{
  return &type metadata for UserLocationProvider.Subscription;
}

uint64_t String.nilIfEmpty.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

double sub_23BB3A0B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  double result;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for CompositeAppViewInitialInfo();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v7 + 16) == 1)
  {
    v8 = *(_QWORD *)(v7 + 32);
    v9 = *(_QWORD *)(v7 + 56);
    v10 = *(unsigned __int8 *)(v7 + 64);
    v12 = *(_QWORD *)(v7 + 72);
    v22 = *(id *)(v7 + 80);
    v11 = v22;
    *(_QWORD *)a1 = v8;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v7 + 40);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v22;
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v15 = sub_23BB891C4();
    __swift_project_value_buffer(v15, (uint64_t)qword_256A73E80);
    sub_23B989CE8(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    v16 = sub_23BB891AC();
    v17 = sub_23BB8ABEC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136315394;
      v23 = sub_23BB7B69C(0xD000000000000015, 0x800000023BB9CFC0, &v24);
      sub_23BB8ACB8();
      *(_WORD *)(v18 + 12) = 2048;
      v20 = *(_QWORD *)(*((_QWORD *)v6 + 5) + 16);
      sub_23B989D9C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
      v23 = v20;
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v16, v17, "CompositeAppViewInitialInfo: %s - count: %ld", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v19, -1, -1);
      MEMORY[0x24260D9B4](v18, -1, -1);
    }
    else
    {
      sub_23B989D9C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    }

    *(_QWORD *)(a1 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t CompositeAppViewInitialInfo.init(callerHandle:groupName:friends:state:areFindMyFeaturesDisable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t result;

  v10 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_BYTE *)(a7 + 16) = v10;
  *(_QWORD *)(a7 + 24) = a2;
  *(_QWORD *)(a7 + 32) = a3;
  *(_QWORD *)(a7 + 40) = a4;
  v11 = type metadata accessor for CompositeAppViewInitialInfo();
  result = sub_23B989CA4(a5, a7 + *(int *)(v11 + 28), type metadata accessor for CompositeAppViewState);
  *(_BYTE *)(a7 + *(int *)(v11 + 32)) = a6;
  return result;
}

uint64_t type metadata accessor for CompositeAppViewInitialInfo()
{
  uint64_t result;

  result = qword_256A63788;
  if (!qword_256A63788)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BB3A3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = type metadata accessor for CompositeAppViewState(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CompositeAppViewInitialInfo();
  sub_23B989CE8(v0 + *(int *)(v7 + 28), (uint64_t)v6, type metadata accessor for CompositeAppViewState);
  v8 = (char *)&loc_23BB3A4D4 + *((int *)qword_23BB3BD28 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BB3A4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  BOOL v60;
  int v61;
  id v62;
  char v63;
  uint64_t v64;

  v4 = *v2;
  *(_QWORD *)(v3 - 88) = v1;
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v3 - 192) = v4;
  *(_QWORD *)(v3 - 184) = v5;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = (_OWORD *)(v5 + 72);
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v9 = *((_BYTE *)v7 - 8);
      v11 = *((_QWORD *)v7 - 3);
      v10 = *((_QWORD *)v7 - 2);
      *(_OWORD *)(v3 - 160) = *(_OWORD *)((char *)v7 - 40);
      *(_QWORD *)(v3 - 144) = v11;
      *(_QWORD *)(v3 - 136) = v10;
      *(_BYTE *)(v3 - 128) = v9;
      *(_OWORD *)(v3 - 120) = *v7;
      sub_23BB3CBB8((__int128 *)(v3 - 160), (uint64_t *)(v3 - 168));
      v12 = *(_QWORD *)(v3 - 168);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v8[2];
      v15 = v14 + v13;
      if (__OFADD__(v14, v13))
      {
        __break(1u);
        JUMPOUT(0x23BB3BC34);
      }
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v15 <= v8[3] >> 1)
      {
        if (*(_QWORD *)(v12 + 16))
          goto LABEL_14;
      }
      else
      {
        if (v14 <= v15)
          v17 = v14 + v13;
        else
          v17 = v14;
        v8 = sub_23BB64488(isUniquelyReferenced_nonNull_native, v17, 1, v8);
        if (*(_QWORD *)(v12 + 16))
        {
LABEL_14:
          v18 = v8[2];
          if ((v8[3] >> 1) - v18 < v13)
          {
            __break(1u);
            JUMPOUT(0x23BB3BC5CLL);
          }
          v19 = (unint64_t)&v8[3 * v18 + 4];
          if (v12 + 32 < v19 + 24 * v13 && v19 < v12 + 32 + 24 * v13)
          {
LABEL_74:
            sub_23BB8B00C();
            __break(1u);
            JUMPOUT(0x23BB3BD28);
          }
          swift_arrayInitWithCopy();
          if (v13)
          {
            v21 = v8[2];
            v22 = __OFADD__(v21, v13);
            v23 = v21 + v13;
            if (v22)
            {
              __break(1u);
              JUMPOUT(0x23BB3BC70);
            }
            v8[2] = v23;
          }
          goto LABEL_4;
        }
      }
      if (v13)
      {
        __break(1u);
        JUMPOUT(0x23BB3BC40);
      }
LABEL_4:
      swift_bridgeObjectRelease();
      v7 = (_OWORD *)((char *)v7 + 56);
      if (!--v6)
      {
        v5 = *(_QWORD *)(v3 - 184);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
  }
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_25:
  v24 = sub_23BAE6AB0((uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_23BAABB58(v24);
  v25 = *(_QWORD *)(v5 + 16);
  if (!v25)
  {
    v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  v26 = (_OWORD *)(v5 + 72);
  v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v28 = *((_BYTE *)v26 - 8);
    v30 = *((_QWORD *)v26 - 3);
    v29 = *((_QWORD *)v26 - 2);
    *(_OWORD *)(v3 - 160) = *(_OWORD *)((char *)v26 - 40);
    *(_QWORD *)(v3 - 144) = v30;
    *(_QWORD *)(v3 - 136) = v29;
    *(_BYTE *)(v3 - 128) = v28;
    *(_OWORD *)(v3 - 120) = *v26;
    sub_23BB3CD7C((__int128 *)(v3 - 160), 1, (uint64_t *)(v3 - 168));
    v31 = *(_QWORD *)(v3 - 168);
    v32 = *(_QWORD *)(v31 + 16);
    v33 = v27[2];
    v34 = v33 + v32;
    if (__OFADD__(v33, v32))
    {
      __break(1u);
      JUMPOUT(0x23BB3BC4CLL);
    }
    v35 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)v35 && v34 <= v27[3] >> 1)
    {
      if (!*(_QWORD *)(v31 + 16))
        goto LABEL_27;
    }
    else
    {
      if (v33 <= v34)
        v36 = v33 + v32;
      else
        v36 = v33;
      v27 = sub_23BB64488(v35, v36, 1, v27);
      if (!*(_QWORD *)(v31 + 16))
      {
LABEL_27:
        if (v32)
        {
          __break(1u);
          JUMPOUT(0x23BB3BC54);
        }
        goto LABEL_28;
      }
    }
    v37 = v27[2];
    if ((v27[3] >> 1) - v37 < v32)
    {
      __break(1u);
      JUMPOUT(0x23BB3BC68);
    }
    v38 = (unint64_t)&v27[3 * v37 + 4];
    if (v31 + 32 < v38 + 24 * v32 && v38 < v31 + 32 + 24 * v32)
      goto LABEL_74;
    swift_arrayInitWithCopy();
    if (v32)
    {
      v40 = v27[2];
      v22 = __OFADD__(v40, v32);
      v41 = v40 + v32;
      if (v22)
      {
        __break(1u);
        JUMPOUT(0x23BB3BC7CLL);
      }
      v27[2] = v41;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v26 = (_OWORD *)((char *)v26 + 56);
    --v25;
  }
  while (v25);
  v5 = *(_QWORD *)(v3 - 184);
  swift_bridgeObjectRelease();
LABEL_49:
  v42 = sub_23BAE6AB0((uint64_t)v27);
  swift_bridgeObjectRelease();
  sub_23BAABB58(v42);
  if ((*(_QWORD *)(v3 - 192) & 8) != 0 && *(_QWORD *)(v5 + 16) == 1)
  {
    v43 = *(_QWORD *)(v5 + 32);
    v44 = *(_QWORD *)(v5 + 40);
    v46 = *(_QWORD *)(v5 + 48);
    v45 = *(_QWORD *)(v5 + 56);
    *(_DWORD *)(v3 - 192) = *(unsigned __int8 *)(v5 + 64);
    v47 = *(_QWORD *)(v5 + 72);
    v48 = *(void **)(v5 + 80);
    v49 = *(_QWORD *)(v3 - 88);
    sub_23BB8B240();
    sub_23BB8B24C();
    v50 = sub_23BB8B270();
    v51 = -1 << *(_BYTE *)(v49 + 32);
    v52 = v50 & ~v51;
    if (((*(_QWORD *)(v49 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8)) >> v52) & 1) != 0)
    {
      *(_QWORD *)(v3 - 216) = v46;
      *(_QWORD *)(v3 - 208) = v43;
      v53 = ~v51;
      *(_QWORD *)(v3 - 184) = v44;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v3 - 200) = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54 = v48;
      swift_bridgeObjectRetain();
      do
      {
        v55 = *(_QWORD *)(v49 + 48) + 24 * v52;
        v56 = *(_QWORD *)v55;
        v57 = *(_QWORD *)(v55 + 8);
        v58 = *(unsigned __int16 *)(v55 + 16);
        v59 = v57 | *(_QWORD *)v55;
        v60 = v58 >= 0xC000 && v59 == 0;
        if (v60 && v58 == 49152)
        {
          sub_23B9906D4(0, 0, 0xC000u);
          sub_23B9906D4(0, 0, 0xC000u);
          swift_bridgeObjectRelease();
          v44 = *(_QWORD *)(v3 - 184);
          v43 = *(_QWORD *)(v3 - 208);
          v45 = *(_QWORD *)(v3 - 200);
          v46 = *(_QWORD *)(v3 - 216);
          v61 = *(_DWORD *)(v3 - 192);
          goto LABEL_64;
        }
        sub_23B9906EC(v56, v57, v58);
        sub_23B9906D4(v56, v57, v58);
        sub_23B9906D4(0, 0, 0xC000u);
        v52 = (v52 + 1) & v53;
      }
      while (((*(_QWORD *)(v49 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8)) >> v52) & 1) != 0);
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v3 - 184);
      v43 = *(_QWORD *)(v3 - 208);
      v45 = *(_QWORD *)(v3 - 200);
      v46 = *(_QWORD *)(v3 - 216);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v62 = v48;
    }
    v61 = *(_DWORD *)(v3 - 192);
    v63 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v3 - 160) = v49;
    sub_23BAD8578(0, 0, 49152, v52, v63);
    *(_QWORD *)(v3 - 88) = *(_QWORD *)(v3 - 160);
    swift_bridgeObjectRelease();
LABEL_64:
    *(_QWORD *)(v3 - 160) = v43;
    *(_QWORD *)(v3 - 152) = v44;
    *(_QWORD *)(v3 - 144) = v46;
    *(_QWORD *)(v3 - 136) = v45;
    *(_BYTE *)(v3 - 128) = v61;
    *(_QWORD *)(v3 - 120) = v47;
    *(_QWORD *)(v3 - 112) = v48;
    v64 = sub_23BB3CF58((__int128 *)(v3 - 160));
    sub_23BAABB58(v64);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return *(_QWORD *)(v3 - 88);
}

uint64_t CompositeAppViewInitialInfo.callerHandle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t CompositeAppViewInitialInfo.groupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompositeAppViewInitialInfo.friends.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompositeAppViewInitialInfo.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CompositeAppViewInitialInfo();
  return sub_23B989CE8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for CompositeAppViewState);
}

uint64_t CompositeAppViewInitialInfo.areFindMyFeaturesDisable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CompositeAppViewInitialInfo() + 32));
}

_QWORD *initializeBufferWithCopyOfBuffer for CompositeAppViewInitialInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  void *v30;
  uint64_t v31;
  char *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 40) = a2[5];
    v12 = type metadata accessor for CompositeAppViewState(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = v11[1];
      *v10 = *v11;
      v10[1] = v13;
      v14 = v11[3];
      v10[2] = v11[2];
      v10[3] = v14;
      v15 = v11[5];
      v10[4] = v11[4];
      v10[5] = v15;
      v16 = v11[7];
      v10[6] = v11[6];
      v10[7] = v16;
      *((_BYTE *)v10 + 64) = *((_BYTE *)v11 + 64);
      v30 = (void *)v11[10];
      v10[9] = v11[9];
      v10[10] = v30;
      v10[11] = v11[11];
      *((_BYTE *)v10 + 96) = *((_BYTE *)v11 + 96);
      *((_BYTE *)v10 + 97) = *((_BYTE *)v11 + 97);
      v10[13] = v11[13];
      *((_WORD *)v10 + 56) = *((_WORD *)v11 + 56);
      v17 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      v18 = *(int *)(v17 + 44);
      v31 = v17;
      __dst = (char *)v10 + v18;
      v19 = (char *)v11 + v18;
      v20 = sub_23BB88984();
      v28 = *(_QWORD *)(v20 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v30;
      swift_bridgeObjectRetain();
      if (v29(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v20);
      }
      v24 = *(int *)(v31 + 48);
      v25 = *(void **)((char *)v11 + v24);
      *(_QWORD *)((char *)v10 + v24) = v25;
      *((_BYTE *)v10 + *(int *)(v31 + 52)) = *((_BYTE *)v11 + *(int *)(v31 + 52));
      v26 = v25;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    *((_BYTE *)v4 + *(int *)(a3 + 32)) = *((_BYTE *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

void destroy for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for CompositeAppViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v5 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v6 = v4 + *(int *)(v5 + 44);
    v7 = sub_23BB88984();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

  }
}

uint64_t initializeWithCopy for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  void *v28;
  char *__dst;
  uint64_t v30;
  uint64_t v31;

  v3 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = type metadata accessor for CompositeAppViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = v3;
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
    v13 = v10[3];
    v9[2] = v10[2];
    v9[3] = v13;
    v14 = v10[5];
    v9[4] = v10[4];
    v9[5] = v14;
    v15 = v10[7];
    v9[6] = v10[6];
    v9[7] = v15;
    *((_BYTE *)v9 + 64) = *((_BYTE *)v10 + 64);
    v28 = (void *)v10[10];
    v9[9] = v10[9];
    v9[10] = v28;
    v9[11] = v10[11];
    *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
    *((_BYTE *)v9 + 97) = *((_BYTE *)v10 + 97);
    v9[13] = v10[13];
    *((_WORD *)v9 + 56) = *((_WORD *)v10 + 56);
    v16 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v17 = *(int *)(v16 + 44);
    __dst = (char *)v9 + v17;
    v30 = v16;
    v18 = (char *)v10 + v17;
    v19 = sub_23BB88984();
    v26 = *(_QWORD *)(v19 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v28;
    swift_bridgeObjectRetain();
    if (v27(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v19);
    }
    v22 = *(int *)(v30 + 48);
    v23 = *(void **)((char *)v10 + v22);
    *(_QWORD *)((char *)v9 + v22) = v23;
    *((_BYTE *)v9 + *(int *)(v30 + 52)) = *((_BYTE *)v10 + *(int *)(v30 + 52));
    v24 = v23;
    swift_storeEnumTagMultiPayload();
    v3 = v31;
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_BYTE *)(a1 + *(int *)(v3 + 32)) = *(_BYTE *)(a2 + *(int *)(v3 + 32));
  return a1;
}

uint64_t assignWithCopy for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void *v23;
  char *__dst;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_23B989D9C(a1 + v6, type metadata accessor for CompositeAppViewState);
    v9 = type metadata accessor for CompositeAppViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      v7[6] = v8[6];
      v7[7] = v8[7];
      *((_BYTE *)v7 + 64) = *((_BYTE *)v8 + 64);
      v7[9] = v8[9];
      v23 = (void *)v8[10];
      v7[10] = v23;
      v7[11] = v8[11];
      *((_BYTE *)v7 + 96) = *((_BYTE *)v8 + 96);
      *((_BYTE *)v7 + 97) = *((_BYTE *)v8 + 97);
      v10 = v8[13];
      *((_WORD *)v7 + 56) = *((_WORD *)v8 + 56);
      v7[13] = v10;
      v11 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      v12 = *(int *)(v11 + 44);
      __dst = (char *)v7 + v12;
      v25 = v11;
      v13 = (char *)v8 + v12;
      v14 = sub_23BB88984();
      v21 = *(_QWORD *)(v14 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = v23;
      swift_bridgeObjectRetain();
      if (v22(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v14);
      }
      v17 = *(int *)(v25 + 48);
      v18 = *(void **)((char *)v8 + v17);
      *(_QWORD *)((char *)v7 + v17) = v18;
      *((_BYTE *)v7 + *(int *)(v25 + 52)) = *((_BYTE *)v8 + *(int *)(v25 + 52));
      v19 = v18;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 32)) = *(_BYTE *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t initializeWithTake for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 28);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = type metadata accessor for CompositeAppViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = v8[1];
    *v7 = *v8;
    v7[1] = v10;
    v11 = v8[3];
    v7[2] = v8[2];
    v7[3] = v11;
    v7[4] = v8[4];
    v12 = *((_QWORD *)v8 + 11);
    *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
    *((_QWORD *)v7 + 11) = v12;
    *((_BYTE *)v7 + 96) = *((_BYTE *)v8 + 96);
    *((_BYTE *)v7 + 97) = *((_BYTE *)v8 + 97);
    *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
    *((_WORD *)v7 + 56) = *((_WORD *)v8 + 56);
    v13 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v14 = v13[11];
    __dst = (char *)v7 + v14;
    v15 = (char *)v8 + v14;
    v16 = sub_23BB88984();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    *(_QWORD *)((char *)v7 + v13[12]) = *(_QWORD *)((char *)v8 + v13[12]);
    *((_BYTE *)v7 + v13[13]) = *((_BYTE *)v8 + v13[13]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 32)) = *(_BYTE *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t assignWithTake for CompositeAppViewInitialInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)(a2 + v8);
    sub_23B989D9C(a1 + v8, type metadata accessor for CompositeAppViewState);
    v11 = type metadata accessor for CompositeAppViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = v10[1];
      *v9 = *v10;
      v9[1] = v12;
      v13 = v10[3];
      v9[2] = v10[2];
      v9[3] = v13;
      v9[4] = v10[4];
      v14 = *((_QWORD *)v10 + 11);
      *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
      *((_QWORD *)v9 + 11) = v14;
      *((_BYTE *)v9 + 96) = *((_BYTE *)v10 + 96);
      *((_BYTE *)v9 + 97) = *((_BYTE *)v10 + 97);
      *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
      *((_WORD *)v9 + 56) = *((_WORD *)v10 + 56);
      v15 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      v16 = v15[11];
      __dst = (char *)v9 + v16;
      v17 = (char *)v10 + v16;
      v18 = sub_23BB88984();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      *(_QWORD *)((char *)v9 + v15[12]) = *(_QWORD *)((char *)v10 + v15[12]);
      *((_BYTE *)v9 + v15[13]) = *((_BYTE *)v10 + v15[13]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 32)) = *(_BYTE *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewInitialInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB3CA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CompositeAppViewState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewInitialInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB3CAB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for CompositeAppViewState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23BB3CB24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CompositeAppViewState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BB3CBB8@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 v3;
  uint64_t inited;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  uint64_t v26;

  v3 = a1[1];
  v20 = *a1;
  v21 = v3;
  v22 = a1[2];
  v23 = *((_QWORD *)a1 + 6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  v5 = v22;
  v25 = v22;
  v24 = v21;
  *(_OWORD *)(inited + 32) = v21;
  *(_BYTE *)(inited + 48) = v5;
  sub_23B9A14A0((uint64_t)&v20);
  sub_23B9A14A0((uint64_t)&v20);
  sub_23B9A14EC((uint64_t)&v24);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23BA7CF04(v6, (uint64_t)&v20);
  sub_23B9A1514((uint64_t)&v20);
  swift_bridgeObjectRelease();
  v26 = inited;
  sub_23BA78CA0(v7);
  sub_23B9A1514((uint64_t)&v20);
  v8 = v26;
  v9 = *(_QWORD *)(v26 + 16);
  if (v9)
  {
    v19 = a2;
    v26 = MEMORY[0x24BEE4AF8];
    sub_23BB0067C(0, v9, 0);
    v10 = v26;
    v11 = (unsigned __int8 *)(v8 + 48);
    do
    {
      v12 = *((_QWORD *)v11 - 2);
      v13 = *((_QWORD *)v11 - 1);
      v14 = *v11;
      v26 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v16 >= v15 >> 1)
      {
        sub_23BB0067C(v15 > 1, v16 + 1, 1);
        v10 = v26;
      }
      v11 += 24;
      *(_QWORD *)(v10 + 16) = v16 + 1;
      v17 = v10 + 24 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v13;
      *(_WORD *)(v17 + 48) = v14;
      --v9;
    }
    while (v9);
    result = swift_bridgeObjectRelease();
    a2 = v19;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
  }
  *a2 = v10;
  return result;
}

uint64_t sub_23BB3CD7C@<X0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  __int128 v5;
  uint64_t inited;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  __int16 v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v5 = a1[1];
  v23 = *a1;
  v24 = v5;
  v25 = a1[2];
  v26 = *((_QWORD *)a1 + 6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  v7 = v25;
  v28 = v25;
  v27 = v24;
  *(_OWORD *)(inited + 32) = v24;
  *(_BYTE *)(inited + 48) = v7;
  sub_23B9A14A0((uint64_t)&v23);
  sub_23B9A14A0((uint64_t)&v23);
  sub_23B9A14EC((uint64_t)&v27);
  v8 = swift_bridgeObjectRetain();
  v9 = sub_23BA7CF04(v8, (uint64_t)&v23);
  sub_23B9A1514((uint64_t)&v23);
  swift_bridgeObjectRelease();
  v29 = inited;
  sub_23BA78CA0(v9);
  sub_23B9A1514((uint64_t)&v23);
  v10 = v29;
  v11 = *(_QWORD *)(v29 + 16);
  if (v11)
  {
    v22 = a3;
    v29 = MEMORY[0x24BEE4AF8];
    sub_23BB0067C(0, v11, 0);
    v12 = v29;
    if ((a2 & 1) != 0)
      v13 = -32512;
    else
      v13 = 0x8000;
    v14 = (unsigned __int8 *)(v10 + 48);
    do
    {
      v15 = *((_QWORD *)v14 - 2);
      v16 = *((_QWORD *)v14 - 1);
      v17 = *v14;
      v29 = v12;
      v18 = *(_QWORD *)(v12 + 16);
      v19 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v18 >= v19 >> 1)
      {
        sub_23BB0067C(v19 > 1, v18 + 1, 1);
        v12 = v29;
      }
      v14 += 24;
      *(_QWORD *)(v12 + 16) = v18 + 1;
      v20 = v12 + 24 * v18;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v16;
      *(_WORD *)(v20 + 48) = v13 | v17;
      --v11;
    }
    while (v11);
    result = swift_bridgeObjectRelease();
    a3 = v22;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
  }
  *a3 = v12;
  return result;
}

uint64_t sub_23BB3CF58(__int128 *a1)
{
  __int128 v1;
  uint64_t inited;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  char v23;

  v1 = a1[1];
  v18 = *a1;
  v19 = v1;
  v20 = a1[2];
  v21 = *((_QWORD *)a1 + 6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  v3 = v20;
  v23 = v20;
  v22 = v19;
  *(_OWORD *)(inited + 32) = v19;
  *(_BYTE *)(inited + 48) = v3;
  sub_23B9A14A0((uint64_t)&v18);
  sub_23B9A14A0((uint64_t)&v18);
  sub_23B9A14EC((uint64_t)&v22);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23BA7CF04(v4, (uint64_t)&v18);
  sub_23B9A1514((uint64_t)&v18);
  swift_bridgeObjectRelease();
  sub_23BA78CA0(v5);
  sub_23B9A1514((uint64_t)&v18);
  v6 = *(_QWORD *)(inited + 16);
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23BB0067C(0, v6, 0);
    v7 = v17;
    v8 = (unsigned __int8 *)(inited + 48);
    do
    {
      v10 = *((_QWORD *)v8 - 2);
      v9 = *((_QWORD *)v8 - 1);
      v11 = *v8;
      v13 = *(_QWORD *)(v17 + 16);
      v12 = *(_QWORD *)(v17 + 24);
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1)
        sub_23BB0067C(v12 > 1, v13 + 1, 1);
      v8 += 24;
      *(_QWORD *)(v17 + 16) = v13 + 1;
      v14 = v17 + 24 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v9;
      *(_WORD *)(v14 + 48) = v11 | 0x4000;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v15 = sub_23BAE6AB0(v7);
  swift_bridgeObjectRelease();
  return v15;
}

id sub_23BB3D120()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for AccessoryOnboardingModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_256A73DD0 = 0xD000000000000013;
  *(_QWORD *)algn_256A73DD8 = 0x800000023BB9BE90;
  qword_256A73DE0 = (uint64_t)result;
  return result;
}

id sub_23BB3D194()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for AccessoryOnboardingModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_256A73DE8 = 0xD000000000000018;
  unk_256A73DF0 = 0x800000023BB9CFE0;
  qword_256A73DF8 = (uint64_t)result;
  return result;
}

uint64_t *sub_23BB3D208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23BB892F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_23BB3D2BC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_23BB3D308(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23BB3D394(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23BB3D430((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23BB3D430(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CustomControlStyle.BackgroundSize(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A63840);
}

void *sub_23BB3D480(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23BB3D50C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23BB3D430((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23BB3D5A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB892F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_23BB3D618(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    v8 = a3[6];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23BB8A334();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = (char *)v4 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = *((_BYTE *)a2 + v13 + 40);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(v15 + 8);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v17;
      swift_retain();
    }
    else
    {
      v19 = *(_OWORD *)(v15 + 24);
      *(_OWORD *)(v14 + 24) = v19;
      (**(void (***)(char *))(v19 - 8))(v14);
    }
    v14[40] = v16;
    v20 = a3[8];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    v25 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v25) = *((_BYTE *)a2 + v25);
    v26 = a3[11];
    v27 = (char *)v4 + v26;
    v28 = (uint64_t)a2 + v26;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = *(_BYTE *)(v28 + 8);
  }
  return v4;
}

uint64_t sub_23BB3D7CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  v4 = a1 + a2[6];
  v5 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  if ((*(_BYTE *)(v6 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v6);
  v7 = a1 + a2[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v9 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  return result;
}

uint64_t sub_23BB3D890(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8A334();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(a2 + v12 + 40);
  if ((v15 & 1) != 0)
  {
    v16 = *(_QWORD *)(v14 + 8);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *(_QWORD *)(v13 + 8) = v16;
    swift_retain();
  }
  else
  {
    v17 = *(_OWORD *)(v14 + 24);
    *(_OWORD *)(v13 + 24) = v17;
    (**(void (***)(uint64_t))(v17 - 8))(v13);
  }
  *(_BYTE *)(v13 + 40) = v15;
  v18 = a3[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  return a1;
}

uint64_t *sub_23BB3DA10(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_23B989D60((uint64_t)a1 + v10, qword_256A59CC0);
    if ((v12[40] & 1) != 0)
    {
      v13 = *((_QWORD *)v12 + 1);
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *((_QWORD *)v11 + 1) = v13;
      v11[40] = 1;
      swift_retain();
    }
    else
    {
      v14 = *((_QWORD *)v12 + 3);
      *((_QWORD *)v11 + 3) = v14;
      *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
      (**(void (***)(char *, char *))(v14 - 8))(v11, v12);
      v11[40] = 0;
    }
    v15 = a3[8];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    sub_23BB3D430((uint64_t)a1 + v15);
    v18 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v20 = a3[11];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  return a1;
}

uint64_t sub_23BB3DBAC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_OWORD *)(a1 + v12);
  v15 = (_OWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_OWORD *)((char *)v14 + 25) = *(_OWORD *)((char *)v15 + 25);
  v17 = (void *)(a1 + v13);
  v18 = (const void *)(a2 + v13);
  v19 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  return a1;
}

uint64_t sub_23BB3DCDC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = a3[7];
    v13 = (_OWORD *)(a2 + v12);
    v14 = (_OWORD *)(a1 + v12);
    sub_23B989D60(a1 + v12, qword_256A59CC0);
    v15 = v13[1];
    *v14 = *v13;
    v14[1] = v15;
    *(_OWORD *)((char *)v14 + 25) = *(_OWORD *)((char *)v13 + 25);
    v16 = a3[8];
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_23BB3D430(a1 + v16);
    v19 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v21 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  return a1;
}

uint64_t sub_23BB3DE3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB3DE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23BB8A334();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_23BB3DEE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB3DEF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_23BB8A334();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CustomControlStyle(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A638D0);
}

uint64_t sub_23BB3DFA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23BB8A334();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CustomControlStyle.BackgroundSize(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23BB3E07C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB3E08C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for CustomButtonStyle(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A63978);
}

uint64_t sub_23BB3E0B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB3E0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t *__return_ptr, uint64_t);
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t *v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  __int128 v94[2];
  char v95;

  v73 = a2;
  v85 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A50);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A58);
  MEMORY[0x24BDAC7A8](v83, v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A60);
  v11 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84, v12);
  v75 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v72 - v16;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A68);
  MEMORY[0x24BDAC7A8](v80, v18);
  v82 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_23BB89AAC();
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v20);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A70);
  MEMORY[0x24BDAC7A8](v78, v23);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A78);
  v74 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81, v26);
  v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v72 - v31;
  sub_23B989EFC(a1, (uint64_t)v94, qword_256A59CC0);
  if ((v95 & 1) != 0)
  {
    v72 = v17;
    v74 = *((_QWORD *)&v94[0] + 1);
    v33 = *(void (**)(uint64_t *__return_ptr, uint64_t))&v94[0];
    v34 = sub_23BB89FC8();
    KeyPath = swift_getKeyPath();
    sub_23B989EFC(v76, (uint64_t)v7, &qword_256A63A20);
    v36 = (uint64_t *)&v7[*(int *)(v4 + 36)];
    *v36 = KeyPath;
    v36[1] = v34;
    v33(&v90, v73);
    v37 = __swift_project_boxed_opaque_existential_1(&v90, v93);
    v38 = MEMORY[0x24BDAC7A8](v37, v37);
    (*(void (**)(char *, __n128))(v40 + 16))((char *)&v72 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), v38);
    v41 = sub_23BB8A184();
    v42 = sub_23BB8A2F8();
    v44 = v43;
    sub_23B989EFC((uint64_t)v7, (uint64_t)v10, &qword_256A63A50);
    v45 = v83;
    v46 = (uint64_t *)&v10[*(int *)(v83 + 36)];
    *v46 = v41;
    v46[1] = v42;
    v46[2] = v44;
    sub_23B989D60((uint64_t)v7, &qword_256A63A50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    sub_23BB89AA0();
    v47 = sub_23BB40FC8();
    v48 = sub_23B97D0C8((unint64_t *)&qword_256A5ED88, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
    v49 = v75;
    v50 = v79;
    sub_23BB89D94();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v22, v50);
    sub_23B989D60((uint64_t)v10, &qword_256A63A58);
    v51 = v72;
    v52 = v49;
    v53 = v84;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v52, v84);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v82, v51, v53);
    swift_storeEnumTagMultiPayload();
    v54 = sub_23BB41210();
    v90 = v78;
    v91 = v50;
    v92 = v54;
    v93 = v48;
    swift_getOpaqueTypeConformance2();
    v90 = v45;
    v91 = v50;
    v92 = v47;
    v93 = v48;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v51, v53);
  }
  else
  {
    sub_23B9A1980(v94, (uint64_t)&v90);
    v56 = __swift_project_boxed_opaque_existential_1(&v90, v93);
    v57 = MEMORY[0x24BDAC7A8](v56, v56);
    (*(void (**)(char *, __n128))(v59 + 16))((char *)&v72 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0), v57);
    v60 = sub_23BB89398();
    v61 = swift_getKeyPath();
    v86 = v60;
    swift_retain();
    v62 = sub_23BB89398();
    sub_23B989EFC(v76, (uint64_t)v25, &qword_256A63A20);
    swift_release();
    v63 = v78;
    v64 = (uint64_t *)&v25[*(int *)(v78 + 36)];
    *v64 = v61;
    v64[1] = v62;
    sub_23BB89AA0();
    v65 = sub_23BB41210();
    v66 = sub_23B97D0C8((unint64_t *)&qword_256A5ED88, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
    v67 = v79;
    sub_23BB89D94();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v22, v67);
    sub_23B989D60((uint64_t)v25, &qword_256A63A70);
    v68 = v32;
    v69 = v74;
    v70 = v81;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v68, v28, v81);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v82, v68, v70);
    swift_storeEnumTagMultiPayload();
    v86 = v63;
    v87 = v67;
    v88 = v65;
    v89 = v66;
    swift_getOpaqueTypeConformance2();
    v71 = sub_23BB40FC8();
    v86 = v83;
    v87 = v67;
    v88 = v71;
    v89 = v66;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
  }
}

uint64_t sub_23BB3E7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t *__return_ptr, uint64_t);
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t *v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  __int128 v94[2];
  char v95;

  v73 = a2;
  v85 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C30);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C38);
  MEMORY[0x24BDAC7A8](v83, v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C40);
  v11 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84, v12);
  v75 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v72 - v16;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C48);
  MEMORY[0x24BDAC7A8](v80, v18);
  v82 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_23BB89AAC();
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v20);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C50);
  MEMORY[0x24BDAC7A8](v78, v23);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C58);
  v74 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81, v26);
  v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v72 - v31;
  sub_23B989EFC(a1, (uint64_t)v94, qword_256A59CC0);
  if ((v95 & 1) != 0)
  {
    v72 = v17;
    v74 = *((_QWORD *)&v94[0] + 1);
    v33 = *(void (**)(uint64_t *__return_ptr, uint64_t))&v94[0];
    v34 = sub_23BB89FC8();
    KeyPath = swift_getKeyPath();
    sub_23B989EFC(v76, (uint64_t)v7, &qword_256A63C08);
    v36 = (uint64_t *)&v7[*(int *)(v4 + 36)];
    *v36 = KeyPath;
    v36[1] = v34;
    v33(&v90, v73);
    v37 = __swift_project_boxed_opaque_existential_1(&v90, v93);
    v38 = MEMORY[0x24BDAC7A8](v37, v37);
    (*(void (**)(char *, __n128))(v40 + 16))((char *)&v72 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), v38);
    v41 = sub_23BB8A184();
    v42 = sub_23BB8A2F8();
    v44 = v43;
    sub_23B989EFC((uint64_t)v7, (uint64_t)v10, &qword_256A63C30);
    v45 = v83;
    v46 = (uint64_t *)&v10[*(int *)(v83 + 36)];
    *v46 = v41;
    v46[1] = v42;
    v46[2] = v44;
    sub_23B989D60((uint64_t)v7, &qword_256A63C30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    sub_23BB89AA0();
    v47 = sub_23BB42284();
    v48 = sub_23B97D0C8((unint64_t *)&qword_256A5ED88, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
    v49 = v75;
    v50 = v79;
    sub_23BB89D94();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v22, v50);
    sub_23B989D60((uint64_t)v10, &qword_256A63C38);
    v51 = v72;
    v52 = v49;
    v53 = v84;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v52, v84);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v82, v51, v53);
    swift_storeEnumTagMultiPayload();
    v54 = sub_23BB424FC();
    v90 = v78;
    v91 = v50;
    v92 = v54;
    v93 = v48;
    swift_getOpaqueTypeConformance2();
    v90 = v45;
    v91 = v50;
    v92 = v47;
    v93 = v48;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v51, v53);
  }
  else
  {
    sub_23B9A1980(v94, (uint64_t)&v90);
    v56 = __swift_project_boxed_opaque_existential_1(&v90, v93);
    v57 = MEMORY[0x24BDAC7A8](v56, v56);
    (*(void (**)(char *, __n128))(v59 + 16))((char *)&v72 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0), v57);
    v60 = sub_23BB89398();
    v61 = swift_getKeyPath();
    v86 = v60;
    swift_retain();
    v62 = sub_23BB89398();
    sub_23B989EFC(v76, (uint64_t)v25, &qword_256A63C08);
    swift_release();
    v63 = v78;
    v64 = (uint64_t *)&v25[*(int *)(v78 + 36)];
    *v64 = v61;
    v64[1] = v62;
    sub_23BB89AA0();
    v65 = sub_23BB424FC();
    v66 = sub_23B97D0C8((unint64_t *)&qword_256A5ED88, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8], MEMORY[0x24BDF0D88]);
    v67 = v79;
    sub_23BB89D94();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v22, v67);
    sub_23B989D60((uint64_t)v25, &qword_256A63C50);
    v68 = v32;
    v69 = v74;
    v70 = v81;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v68, v28, v81);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v82, v68, v70);
    swift_storeEnumTagMultiPayload();
    v86 = v63;
    v87 = v67;
    v88 = v65;
    v89 = v66;
    swift_getOpaqueTypeConformance2();
    v71 = sub_23BB42284();
    v86 = v83;
    v87 = v67;
    v88 = v71;
    v89 = v66;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
  }
}

uint64_t sub_23BB3EEBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  _QWORD *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  char v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  double *v79;
  int v80;
  double v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;

  v95 = a1;
  v103 = a2;
  v98 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  MEMORY[0x24BDAC7A8](v98, v2);
  v93 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v101 = (uint64_t)&v90 - v6;
  MEMORY[0x24BDAC7A8](v7, v8);
  v91 = (char *)&v90 - v9;
  MEMORY[0x24BDAC7A8](v10, v11);
  v96 = (char *)&v90 - v12;
  v13 = sub_23BB8944C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256A63AD8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A639F8);
  MEMORY[0x24BDAC7A8](v94, v23);
  v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A639E8);
  MEMORY[0x24BDAC7A8](v97, v26);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A639D8);
  MEMORY[0x24BDAC7A8](v99, v29);
  v104 = (uint64_t)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D630);
  MEMORY[0x24BDAC7A8](v100, v31);
  v102 = (uint64_t)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D620);
  MEMORY[0x24BDAC7A8](v33, v34);
  v92 = (char *)&v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB89428();
  sub_23BB89B48();
  sub_23B97D0C8(&qword_256A63A00, (uint64_t (*)(uint64_t))MEMORY[0x24BDF12C8], MEMORY[0x24BDF12C0]);
  sub_23BB89DC4();
  v36 = v17;
  v37 = v95;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v13);
  v38 = __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  v39 = MEMORY[0x24BDAC7A8](v38, v38);
  (*(void (**)(char *, __n128))(v41 + 16))((char *)&v90 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0), v39);
  v42 = sub_23BB89398();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v105 = v42;
  swift_retain();
  v44 = sub_23BB89398();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v25, v22, v18);
  swift_release();
  v45 = (uint64_t *)&v25[*(int *)(v94 + 36)];
  *v45 = KeyPath;
  v45[1] = v44;
  v46 = v22;
  v47 = (uint64_t)v96;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v46, v18);
  v48 = sub_23BB89B9C();
  v49 = (int *)type metadata accessor for CustomControlStyle(0);
  v50 = (uint64_t)v37 + v49[8];
  sub_23BB40B00(v50, v47);
  if (swift_getEnumCaseMultiPayload() != 2)
    sub_23BB3D430(v47);
  v51 = (uint64_t)v92;
  v52 = (uint64_t)v91;
  sub_23BB892A8();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  sub_23B989EFC((uint64_t)v25, (uint64_t)v28, &qword_256A639F8);
  v61 = &v28[*(int *)(v97 + 36)];
  *v61 = v48;
  *((_QWORD *)v61 + 1) = v54;
  *((_QWORD *)v61 + 2) = v56;
  *((_QWORD *)v61 + 3) = v58;
  *((_QWORD *)v61 + 4) = v60;
  v61[40] = 0;
  sub_23B989D60((uint64_t)v25, &qword_256A639F8);
  v62 = sub_23BB89BF0();
  sub_23BB40B00(v50, v52);
  if (swift_getEnumCaseMultiPayload() != 2)
    sub_23BB3D430(v52);
  v63 = (uint64_t)v93;
  sub_23BB892A8();
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v72 = v104;
  sub_23B989EFC((uint64_t)v28, v104, &qword_256A639E8);
  v73 = v72 + *(int *)(v99 + 36);
  *(_BYTE *)v73 = v62;
  *(_QWORD *)(v73 + 8) = v65;
  *(_QWORD *)(v73 + 16) = v67;
  *(_QWORD *)(v73 + 24) = v69;
  *(_QWORD *)(v73 + 32) = v71;
  *(_BYTE *)(v73 + 40) = 0;
  sub_23B989D60((uint64_t)v28, &qword_256A639E8);
  v74 = v101;
  sub_23BB40B00(v50, v101);
  if (swift_getEnumCaseMultiPayload())
    sub_23BB3D430(v74);
  sub_23BB40B00(v50, v63);
  if (swift_getEnumCaseMultiPayload())
    sub_23BB3D430(v63);
  sub_23BB8A2F8();
  sub_23BB8938C();
  v75 = v104;
  v76 = v102;
  sub_23B989EFC(v104, v102, &qword_256A639D8);
  v77 = (_OWORD *)(v76 + *(int *)(v100 + 36));
  v78 = v106;
  *v77 = v105;
  v77[1] = v78;
  v77[2] = v107;
  sub_23B989D60(v75, &qword_256A639D8);
  v79 = (double *)((char *)v37 + v49[11]);
  v80 = *((unsigned __int8 *)v79 + 8);
  v81 = *v79 + -24.0;
  if (v80)
    v82 = 0.0;
  else
    v82 = v81;
  v83 = sub_23BB8A2F8();
  sub_23BA2A378(v82, v80, 0.0, 1, 0.0, 1, 0.0, 1, v51, 0.0, 1, 0.0, 1, v83, v84);
  sub_23B989D60(v76, &qword_256A5D630);
  v85 = *((_BYTE *)v37 + v49[10]);
  if (v85)
    v86 = INFINITY;
  else
    v86 = 0.0;
  v87 = sub_23BB8A2F8();
  sub_23BA2A3D0(0.0, 1, 0.0, 1, v86, v85 ^ 1, 0.0, 1, v103, 0.0, 1, v86, v85 ^ 1, v87, v88);
  return sub_23B989D60(v51, &qword_256A5D620);
}

uint64_t sub_23BB3F5F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  _QWORD *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  char v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  double *v79;
  int v80;
  double v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;

  v95 = a1;
  v103 = a2;
  v98 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  MEMORY[0x24BDAC7A8](v98, v2);
  v93 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v101 = (uint64_t)&v90 - v6;
  MEMORY[0x24BDAC7A8](v7, v8);
  v91 = (char *)&v90 - v9;
  MEMORY[0x24BDAC7A8](v10, v11);
  v96 = (char *)&v90 - v12;
  v13 = sub_23BB8944C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C90);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63BE0);
  MEMORY[0x24BDAC7A8](v94, v23);
  v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63BD0);
  MEMORY[0x24BDAC7A8](v97, v26);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63BC0);
  MEMORY[0x24BDAC7A8](v99, v29);
  v104 = (uint64_t)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D648);
  MEMORY[0x24BDAC7A8](v100, v31);
  v102 = (uint64_t)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D638);
  MEMORY[0x24BDAC7A8](v33, v34);
  v92 = (char *)&v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB89428();
  sub_23BB899E0();
  sub_23B97D0C8(&qword_256A63BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFD30], MEMORY[0x24BDEFD28]);
  sub_23BB89DC4();
  v36 = v17;
  v37 = v95;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v13);
  v38 = __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  v39 = MEMORY[0x24BDAC7A8](v38, v38);
  (*(void (**)(char *, __n128))(v41 + 16))((char *)&v90 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0), v39);
  v42 = sub_23BB89398();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v105 = v42;
  swift_retain();
  v44 = sub_23BB89398();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v25, v22, v18);
  swift_release();
  v45 = (uint64_t *)&v25[*(int *)(v94 + 36)];
  *v45 = KeyPath;
  v45[1] = v44;
  v46 = v22;
  v47 = (uint64_t)v96;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v46, v18);
  v48 = sub_23BB89B9C();
  v49 = (int *)type metadata accessor for CustomControlStyle(0);
  v50 = (uint64_t)v37 + v49[8];
  sub_23BB40B00(v50, v47);
  if (swift_getEnumCaseMultiPayload() != 2)
    sub_23BB3D430(v47);
  v51 = (uint64_t)v92;
  v52 = (uint64_t)v91;
  sub_23BB892A8();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  sub_23B989EFC((uint64_t)v25, (uint64_t)v28, &qword_256A63BE0);
  v61 = &v28[*(int *)(v97 + 36)];
  *v61 = v48;
  *((_QWORD *)v61 + 1) = v54;
  *((_QWORD *)v61 + 2) = v56;
  *((_QWORD *)v61 + 3) = v58;
  *((_QWORD *)v61 + 4) = v60;
  v61[40] = 0;
  sub_23B989D60((uint64_t)v25, &qword_256A63BE0);
  v62 = sub_23BB89BF0();
  sub_23BB40B00(v50, v52);
  if (swift_getEnumCaseMultiPayload() != 2)
    sub_23BB3D430(v52);
  v63 = (uint64_t)v93;
  sub_23BB892A8();
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v72 = v104;
  sub_23B989EFC((uint64_t)v28, v104, &qword_256A63BD0);
  v73 = v72 + *(int *)(v99 + 36);
  *(_BYTE *)v73 = v62;
  *(_QWORD *)(v73 + 8) = v65;
  *(_QWORD *)(v73 + 16) = v67;
  *(_QWORD *)(v73 + 24) = v69;
  *(_QWORD *)(v73 + 32) = v71;
  *(_BYTE *)(v73 + 40) = 0;
  sub_23B989D60((uint64_t)v28, &qword_256A63BD0);
  v74 = v101;
  sub_23BB40B00(v50, v101);
  if (swift_getEnumCaseMultiPayload())
    sub_23BB3D430(v74);
  sub_23BB40B00(v50, v63);
  if (swift_getEnumCaseMultiPayload())
    sub_23BB3D430(v63);
  sub_23BB8A2F8();
  sub_23BB8938C();
  v75 = v104;
  v76 = v102;
  sub_23B989EFC(v104, v102, &qword_256A63BC0);
  v77 = (_OWORD *)(v76 + *(int *)(v100 + 36));
  v78 = v106;
  *v77 = v105;
  v77[1] = v78;
  v77[2] = v107;
  sub_23B989D60(v75, &qword_256A63BC0);
  v79 = (double *)((char *)v37 + v49[11]);
  v80 = *((unsigned __int8 *)v79 + 8);
  v81 = *v79 + -24.0;
  if (v80)
    v82 = 0.0;
  else
    v82 = v81;
  v83 = sub_23BB8A2F8();
  sub_23BA2A428(v82, v80, 0.0, 1, 0.0, 1, 0.0, 1, v51, 0.0, 1, 0.0, 1, v83, v84);
  sub_23B989D60(v76, &qword_256A5D648);
  v85 = *((_BYTE *)v37 + v49[10]);
  if (v85)
    v86 = INFINITY;
  else
    v86 = 0.0;
  v87 = sub_23BB8A2F8();
  sub_23BA2A480(0.0, 1, 0.0, 1, v86, v85 ^ 1, 0.0, 1, v103, 0.0, 1, v86, v85 ^ 1, v87, v88);
  return sub_23B989D60(v51, &qword_256A5D638);
}

uint64_t sub_23BB3FD2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int *v30;
  int EnumCaseMultiPayload;
  void (*v32)(char *, char *, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v78 = a2;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A18);
  MEMORY[0x24BDAC7A8](v68, v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A20);
  MEMORY[0x24BDAC7A8](v71, v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A28);
  MEMORY[0x24BDAC7A8](v9, v10);
  v74 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A30);
  MEMORY[0x24BDAC7A8](v69, v12);
  v77 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB89578();
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v70 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23BB892F0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v65 - v28;
  v30 = (int *)type metadata accessor for CustomControlStyle(0);
  sub_23BB40B00((uint64_t)a1 + v30[8], (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v72 = v22;
  if (EnumCaseMultiPayload == 1)
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v32(v25, v20, v21);
    v32(v29, v25, v21);
  }
  else
  {
    sub_23BB3D430((uint64_t)v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v29, *MEMORY[0x24BDEB498], v21);
  }
  v33 = *((unsigned __int8 *)a1 + v30[9]);
  v73 = v21;
  v66 = v29;
  if (v33 == 2)
  {
    v34 = (uint64_t)v70;
    sub_23BB8956C();
  }
  else
  {
    v34 = (uint64_t)v70;
    if (v33 == 3)
      sub_23BB89560();
    else
      sub_23BB89548();
  }
  v35 = a1[5];
  KeyPath = swift_getKeyPath();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A639B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v5, v67, v37);
  v38 = (uint64_t *)&v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A63A38) + 36)];
  *v38 = KeyPath;
  v38[1] = v35;
  v39 = (char *)a1 + v30[6];
  v40 = &v5[*(int *)(v68 + 36)];
  v41 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v39, v41);
  v42 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v43 = MEMORY[0x24BDAC7A8](v42, v42);
  (*(void (**)(char *, __n128))(v45 + 16))((char *)&v65 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v43);
  swift_retain();
  v46 = sub_23BB89398();
  sub_23B989EFC((uint64_t)v5, (uint64_t)v8, &qword_256A63A18);
  *(_QWORD *)&v8[*(int *)(v71 + 36)] = v46;
  sub_23B989D60((uint64_t)v5, &qword_256A63A18);
  v47 = (uint64_t)a1 + v30[7];
  v48 = v74;
  v49 = v34;
  sub_23BB3E0C4(v47, v34, v74);
  sub_23B989D60((uint64_t)v8, &qword_256A63A20);
  v50 = swift_getKeyPath();
  v51 = (uint64_t)v77;
  v52 = (uint64_t *)&v77[*(int *)(v69 + 36)];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7C8);
  v55 = v75;
  v54 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))((char *)v52 + *(int *)(v53 + 28), v34, v76);
  *v52 = v50;
  sub_23B990D24(v48, v51, &qword_256A63A28);
  v56 = swift_getKeyPath();
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A40);
  v58 = v78;
  v59 = (uint64_t *)(v78 + *(int *)(v57 + 36));
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A48);
  v62 = v72;
  v61 = v73;
  v63 = v66;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v59 + *(int *)(v60 + 28), v66, v73);
  *v59 = v56;
  sub_23B990D24(v51, v58, &qword_256A63A30);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v49, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v61);
}

uint64_t sub_23BB4024C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int *v30;
  int EnumCaseMultiPayload;
  void (*v32)(char *, char *, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v78 = a2;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C00);
  MEMORY[0x24BDAC7A8](v68, v3);
  v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C08);
  MEMORY[0x24BDAC7A8](v71, v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C10);
  MEMORY[0x24BDAC7A8](v9, v10);
  v74 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C18);
  MEMORY[0x24BDAC7A8](v69, v12);
  v77 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB89578();
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v70 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23BB892F0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v65 - v28;
  v30 = (int *)type metadata accessor for CustomControlStyle(0);
  sub_23BB40B00((uint64_t)a1 + v30[8], (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v72 = v22;
  if (EnumCaseMultiPayload == 1)
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v32(v25, v20, v21);
    v32(v29, v25, v21);
  }
  else
  {
    sub_23BB3D430((uint64_t)v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v29, *MEMORY[0x24BDEB498], v21);
  }
  v33 = *((unsigned __int8 *)a1 + v30[9]);
  v73 = v21;
  v66 = v29;
  if (v33 == 2)
  {
    v34 = (uint64_t)v70;
    sub_23BB8956C();
  }
  else
  {
    v34 = (uint64_t)v70;
    if (v33 == 3)
      sub_23BB89560();
    else
      sub_23BB89548();
  }
  v35 = a1[5];
  KeyPath = swift_getKeyPath();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63B98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v5, v67, v37);
  v38 = (uint64_t *)&v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A63C20) + 36)];
  *v38 = KeyPath;
  v38[1] = v35;
  v39 = (char *)a1 + v30[6];
  v40 = &v5[*(int *)(v68 + 36)];
  v41 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v39, v41);
  v42 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v43 = MEMORY[0x24BDAC7A8](v42, v42);
  (*(void (**)(char *, __n128))(v45 + 16))((char *)&v65 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v43);
  swift_retain();
  v46 = sub_23BB89398();
  sub_23B989EFC((uint64_t)v5, (uint64_t)v8, &qword_256A63C00);
  *(_QWORD *)&v8[*(int *)(v71 + 36)] = v46;
  sub_23B989D60((uint64_t)v5, &qword_256A63C00);
  v47 = (uint64_t)a1 + v30[7];
  v48 = v74;
  v49 = v34;
  sub_23BB3E7C0(v47, v34, v74);
  sub_23B989D60((uint64_t)v8, &qword_256A63C08);
  v50 = swift_getKeyPath();
  v51 = (uint64_t)v77;
  v52 = (uint64_t *)&v77[*(int *)(v69 + 36)];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7C8);
  v55 = v75;
  v54 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))((char *)v52 + *(int *)(v53 + 28), v34, v76);
  *v52 = v50;
  sub_23B990D24(v48, v51, &qword_256A63C10);
  v56 = swift_getKeyPath();
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63C28);
  v58 = v78;
  v59 = (uint64_t *)(v78 + *(int *)(v57 + 36));
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63A48);
  v62 = v72;
  v61 = v73;
  v63 = v66;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v59 + *(int *)(v60 + 28), v66, v73);
  *v59 = v56;
  sub_23B990D24(v51, v58, &qword_256A63C18);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v49, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v61);
}

uint64_t sub_23BB4076C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v19 = a2;
  v3 = sub_23BB89B60();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A639B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB89B3C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v16 = v18;
  v20 = a1;
  v21 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D628);
  sub_23B9B9770(&qword_256A639B8, &qword_256A5D628, sub_23BB409B0, MEMORY[0x24BDEDBB8]);
  sub_23BB8A100();
  sub_23BB3FD2C(v16, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_23BB4093C()
{
  return objectdestroyTm_19((uint64_t (*)(_QWORD))MEMORY[0x24BDF12E8]);
}

uint64_t sub_23BB40948()
{
  sub_23BB89B60();
  return sub_23BB89B54();
}

uint64_t sub_23BB40980()
{
  uint64_t v0;

  return sub_23BB40E4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(_QWORD))MEMORY[0x24BDF12C8], MEMORY[0x24BDF12D8], (void (*)(uint64_t))sub_23BB3EEBC);
}

uint64_t sub_23BB409B0()
{
  return sub_23B9B9770(&qword_256A639C0, &qword_256A5D620, sub_23BB409D4, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_23BB409D4()
{
  return sub_23B9B9770(&qword_256A639C8, &qword_256A5D630, sub_23BB409F8, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_23BB409F8()
{
  return sub_23B9B9770(&qword_256A639D0, &qword_256A639D8, sub_23BB40A1C, MEMORY[0x24BDECC60]);
}

uint64_t sub_23BB40A1C()
{
  return sub_23B9B9770(&qword_256A639E0, &qword_256A639E8, (uint64_t (*)(void))sub_23BB40A40, MEMORY[0x24BDECC60]);
}

unint64_t sub_23BB40A40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A639F0;
  if (!qword_256A639F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A639F8);
    v2[2] = sub_23BB89B48();
    v2[3] = sub_23B97D0C8(&qword_256A63A00, (uint64_t (*)(uint64_t))MEMORY[0x24BDF12C8], MEMORY[0x24BDF12C0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A63A08, &qword_256A63A10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A639F0);
  }
  return result;
}

uint64_t sub_23BB40B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB40B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v32 = a2;
  v3 = sub_23BB8A34C();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB89A04();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63B90);
  v29 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63B98);
  v27 = *(_QWORD *)(v15 - 8);
  v28 = v15;
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v17);
  v20 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v35 = a1;
  v22 = v26;
  v33 = a1;
  v34 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D640);
  sub_23BB899EC();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFD50];
  sub_23B9B9770(&qword_256A63BA0, &qword_256A5D640, sub_23BB42134, MEMORY[0x24BDEDBB8]);
  sub_23B97D0C8(&qword_256A63BF0, v23, MEMORY[0x24BDEFD48]);
  sub_23BB89CA4();
  sub_23BB8A340();
  sub_23B996E1C(&qword_256A63BF8, &qword_256A63B90, MEMORY[0x24BDF1A70]);
  sub_23BB89F50();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v11);
  sub_23BB4024C(v22, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v19, v28);
}

void (*sub_23BB40DF4(char a1))(_QWORD)
{
  void (*result)(_QWORD);
  uint64_t v3;

  result = (void (*)(_QWORD))sub_23BB899D4();
  if (result)
  {
    v3 = (uint64_t)result;
    result(a1 & 1);
    return (void (*)(_QWORD))sub_23B9BD73C(v3);
  }
  return result;
}

uint64_t sub_23BB40E4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v15 - v12;
  a4(v11);
  a5(a2);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t sub_23BB40F04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB8971C();
  *a1 = result;
  return result;
}

uint64_t sub_23BB40F2C()
{
  swift_retain();
  return sub_23BB89728();
}

uint64_t sub_23BB40F54()
{
  return sub_23BB8959C();
}

uint64_t sub_23BB40F78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB8971C();
  *a1 = result;
  return result;
}

uint64_t sub_23BB40FA0()
{
  swift_retain();
  return sub_23BB89728();
}

unint64_t sub_23BB40FC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63A80;
  if (!qword_256A63A80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A58);
    v2[0] = sub_23BB4104C();
    v2[1] = sub_23B996E1C(&qword_256A63AC0, &qword_256A63AC8, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63A80);
  }
  return result;
}

unint64_t sub_23BB4104C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63A88;
  if (!qword_256A63A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A50);
    v2[0] = sub_23BB410D0();
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63A88);
  }
  return result;
}

unint64_t sub_23BB410D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63A90;
  if (!qword_256A63A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A20);
    v2[0] = sub_23B9B9770(&qword_256A63A98, &qword_256A63A18, (uint64_t (*)(void))sub_23BB41174, MEMORY[0x24BDEDB58]);
    v2[1] = sub_23B996E1C(&qword_256A63AB0, &qword_256A63AB8, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63A90);
  }
  return result;
}

unint64_t sub_23BB41174()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63AA0;
  if (!qword_256A63AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A38);
    v2[0] = sub_23B996E1C(&qword_256A63AA8, &qword_256A639B0, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23B996E1C(&qword_256A60A98, &qword_256A60AA0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63AA0);
  }
  return result;
}

unint64_t sub_23BB41210()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63AD0;
  if (!qword_256A63AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A70);
    v2[0] = sub_23BB410D0();
    v2[1] = sub_23B996E1C(&qword_256A63A08, &qword_256A63A10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63AD0);
  }
  return result;
}

uint64_t sub_23BB41294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB896B0();
  *a1 = result;
  return result;
}

uint64_t sub_23BB412BC()
{
  swift_retain();
  return sub_23BB896BC();
}

uint64_t sub_23BB412E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for CustomControlStyle(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = a2[5];
    v8 = v6[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23BB8A334();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = v6[7];
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = *((_BYTE *)a2 + v13 + 40);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(v15 + 8);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = v17;
      swift_retain();
    }
    else
    {
      v19 = *(_OWORD *)(v15 + 24);
      *(_OWORD *)(v14 + 24) = v19;
      (**(void (***)(uint64_t))(v19 - 8))(v14);
    }
    *(_BYTE *)(v14 + 40) = v16;
    v20 = v6[8];
    v21 = (void *)(a1 + v20);
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    *(_BYTE *)(a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    *(_BYTE *)(a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    v25 = v6[11];
    v26 = a1 + v25;
    v27 = (uint64_t)a2 + v25;
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v27;
  }
  return a1;
}

uint64_t sub_23BB414A4(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  v2 = (int *)type metadata accessor for CustomControlStyle(0);
  v3 = a1 + v2[6];
  v4 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[7];
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v5);
  v6 = a1 + v2[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v8 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  return result;
}

uint64_t sub_23BB41570(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = (int *)type metadata accessor for CustomControlStyle(0);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23BB8A334();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = v5[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(a2 + v11 + 40);
  if ((v14 & 1) != 0)
  {
    v15 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v15;
    swift_retain();
  }
  else
  {
    v16 = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v12 + 24) = v16;
    (**(void (***)(uint64_t))(v16 - 8))(v12);
  }
  *(_BYTE *)(v12 + 40) = v14;
  v17 = v5[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  *(_BYTE *)(a1 + v5[9]) = *(_BYTE *)(a2 + v5[9]);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  v22 = v5[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  return a1;
}

uint64_t *sub_23BB416FC(uint64_t *a1, uint64_t *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  v4 = (int *)type metadata accessor for CustomControlStyle(0);
  v5 = v4[6];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  if (a1 != a2)
  {
    v9 = v4[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_23B989D60((uint64_t)a1 + v9, qword_256A59CC0);
    if ((v11[40] & 1) != 0)
    {
      v12 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v12;
      v10[40] = 1;
      swift_retain();
    }
    else
    {
      v13 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 3) = v13;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      (**(void (***)(char *, char *))(v13 - 8))(v10, v11);
      v10[40] = 0;
    }
    v14 = v4[8];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_23BB3D430((uint64_t)a1 + v14);
    v17 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  *((_BYTE *)a1 + v4[9]) = *((_BYTE *)a2 + v4[9]);
  *((_BYTE *)a1 + v4[10]) = *((_BYTE *)a2 + v4[10]);
  v19 = v4[11];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t sub_23BB418A0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = (int *)type metadata accessor for CustomControlStyle(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
  v15 = v6[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v20 = v6[11];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  return a1;
}

uint64_t sub_23BB419E0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  v6 = (int *)type metadata accessor for CustomControlStyle(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = v6[7];
    v12 = (_OWORD *)(a2 + v11);
    v13 = (_OWORD *)(a1 + v11);
    sub_23B989D60(a1 + v11, qword_256A59CC0);
    v14 = v12[1];
    *v13 = *v12;
    v13[1] = v14;
    *(_OWORD *)((char *)v13 + 25) = *(_OWORD *)((char *)v12 + 25);
    v15 = v6[8];
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    sub_23BB3D430(a1 + v15);
    v18 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + v6[9]) = *(_BYTE *)(a2 + v6[9]);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v20 = v6[11];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  return a1;
}

uint64_t sub_23BB41B4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23BB41B98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CustomMenuStyle(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A63B38);
}

uint64_t sub_23BB41BFC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CustomControlStyle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CustomControlStyle.BorderStyle(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23BB41CB4 + 4 * byte_23BB96CE0[v4]))();
}

uint64_t storeEnumTagSinglePayload for CustomControlStyle.BorderStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BB41D60 + 4 * byte_23BB96CEA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BB41D94 + 4 * byte_23BB96CE5[v5]))();
}

uint64_t sub_23BB41D94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB41D9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB41DA4);
  return result;
}

uint64_t sub_23BB41DB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB41DB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BB41DBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB41DC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB41DD0(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_23BB41DEC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for CustomControlStyle.BorderStyle()
{
  return &type metadata for CustomControlStyle.BorderStyle;
}

unint64_t sub_23BB41E18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63B70;
  if (!qword_256A63B70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A40);
    v2[0] = sub_23BB41E9C();
    v2[1] = sub_23B996E1C(&qword_256A63B88, &qword_256A63A48, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63B70);
  }
  return result;
}

unint64_t sub_23BB41E9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63B78;
  if (!qword_256A63B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A30);
    v2[0] = sub_23BB41F20();
    v2[1] = sub_23B996E1C(&qword_256A5C7D8, &qword_256A5C7C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63B78);
  }
  return result;
}

unint64_t sub_23BB41F20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[6];

  result = qword_256A63B80;
  if (!qword_256A63B80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A28);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A70);
    v2 = sub_23BB89AAC();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8];
    sub_23BB41210();
    v4 = sub_23B97D0C8((unint64_t *)&qword_256A5ED88, v3, MEMORY[0x24BDF0D88]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63A58);
    v6[3] = v2;
    v6[4] = sub_23BB40FC8();
    v6[5] = v4;
    v6[0] = OpaqueTypeConformance2;
    v6[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v6);
    atomic_store(result, (unint64_t *)&qword_256A63B80);
  }
  return result;
}

uint64_t sub_23BB42028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB42038()
{
  return objectdestroyTm_19((uint64_t (*)(_QWORD))MEMORY[0x24BDEFD68]);
}

uint64_t objectdestroyTm_19(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

void (*sub_23BB420A8(char a1))(_QWORD)
{
  sub_23BB89A04();
  return sub_23BB40DF4(a1);
}

uint64_t sub_23BB420E4()
{
  return sub_23BB899F8();
}

uint64_t sub_23BB42104()
{
  uint64_t v0;

  return sub_23BB40E4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t (*)(_QWORD))MEMORY[0x24BDEFD30], MEMORY[0x24BDEFD40], (void (*)(uint64_t))sub_23BB3F5F4);
}

uint64_t sub_23BB42134()
{
  return sub_23B9B9770(&qword_256A63BA8, &qword_256A5D638, sub_23BB42158, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_23BB42158()
{
  return sub_23B9B9770(&qword_256A63BB0, &qword_256A5D648, sub_23BB4217C, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_23BB4217C()
{
  return sub_23B9B9770(&qword_256A63BB8, &qword_256A63BC0, sub_23BB421A0, MEMORY[0x24BDECC60]);
}

uint64_t sub_23BB421A0()
{
  return sub_23B9B9770(&qword_256A63BC8, &qword_256A63BD0, (uint64_t (*)(void))sub_23BB421C4, MEMORY[0x24BDECC60]);
}

unint64_t sub_23BB421C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A63BD8;
  if (!qword_256A63BD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63BE0);
    v2[2] = sub_23BB899E0();
    v2[3] = sub_23B97D0C8(&qword_256A63BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFD30], MEMORY[0x24BDEFD28]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A63A08, &qword_256A63A10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63BD8);
  }
  return result;
}

unint64_t sub_23BB42284()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63C60;
  if (!qword_256A63C60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C38);
    v2[0] = sub_23BB42308();
    v2[1] = sub_23B996E1C(&qword_256A63AC0, &qword_256A63AC8, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63C60);
  }
  return result;
}

unint64_t sub_23BB42308()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63C68;
  if (!qword_256A63C68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C30);
    v2[0] = sub_23BB4238C();
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63C68);
  }
  return result;
}

unint64_t sub_23BB4238C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63C70;
  if (!qword_256A63C70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C08);
    v2[0] = sub_23B9B9770(&qword_256A63C78, &qword_256A63C00, (uint64_t (*)(void))sub_23BB42430, MEMORY[0x24BDEDB58]);
    v2[1] = sub_23B996E1C(&qword_256A63AB0, &qword_256A63AB8, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63C70);
  }
  return result;
}

unint64_t sub_23BB42430()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A63C80;
  if (!qword_256A63C80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C20);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63B90);
    v2[3] = sub_23B996E1C(&qword_256A63BF8, &qword_256A63B90, MEMORY[0x24BDF1A70]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A60A98, &qword_256A60AA0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63C80);
  }
  return result;
}

unint64_t sub_23BB424FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63C88;
  if (!qword_256A63C88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C50);
    v2[0] = sub_23BB4238C();
    v2[1] = sub_23B996E1C(&qword_256A63A08, &qword_256A63A10, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63C88);
  }
  return result;
}

unint64_t sub_23BB42584()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63C98;
  if (!qword_256A63C98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C28);
    v2[0] = sub_23BB42608();
    v2[1] = sub_23B996E1C(&qword_256A63B88, &qword_256A63A48, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63C98);
  }
  return result;
}

unint64_t sub_23BB42608()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A63CA0;
  if (!qword_256A63CA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C18);
    v2[0] = sub_23BB4268C();
    v2[1] = sub_23B996E1C(&qword_256A5C7D8, &qword_256A5C7C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A63CA0);
  }
  return result;
}

unint64_t sub_23BB4268C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[6];

  result = qword_256A63CA8;
  if (!qword_256A63CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C10);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C50);
    v2 = sub_23BB89AAC();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF0DA8];
    sub_23BB424FC();
    v4 = sub_23B97D0C8((unint64_t *)&qword_256A5ED88, v3, MEMORY[0x24BDF0D88]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63C38);
    v6[3] = v2;
    v6[4] = sub_23BB42284();
    v6[5] = v4;
    v6[0] = OpaqueTypeConformance2;
    v6[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v6);
    atomic_store(result, (unint64_t *)&qword_256A63CA8);
  }
  return result;
}

uint64_t PersonDetailsController.Dependencies.peopleRelationshipsProvider.getter()
{
  return swift_retain();
}

uint64_t PersonDetailsController.Dependencies.peopleLocationsProvider.getter()
{
  return swift_retain();
}

uint64_t PersonDetailsController.Dependencies.userLocationProvider.getter()
{
  return swift_retain();
}

uint64_t PersonDetailsController.Dependencies.contactsProvider.getter()
{
  return swift_retain();
}

uint64_t PersonDetailsController.Dependencies.mapsDirectionsProvider.getter()
{
  return swift_retain();
}

uint64_t PersonDetailsController.Dependencies.init(peopleRelationshipsProvider:peopleLocationsProvider:userLocationProvider:contactsProvider:mapsDirectionsProvider:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t _s12DependenciesVwxx_3()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s12DependenciesVwcp_2(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s12DependenciesVwca_3(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12DependenciesVwta_3(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t _s12DependenciesVwet_2(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12DependenciesVwst_2(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonDetailsController.Dependencies()
{
  return &type metadata for PersonDetailsController.Dependencies;
}

_QWORD *sub_23BB42A20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23BB42AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_23BB88984();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_23BB42AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_23BB42B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_23BB42BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_23BB42C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23BB42CA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB42CAC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 253)
  {
    if (*a1 <= 2u)
      v4 = 2;
    else
      v4 = *a1;
    v5 = v4 - 2;
    if (*a1 >= 2u)
      return v5;
    else
      return 0;
  }
  else
  {
    v9 = sub_23BB88984();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v9);
  }
}

uint64_t sub_23BB42D2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_23BB42D38(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = sub_23BB88984();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DirectionsState()
{
  uint64_t result;

  result = qword_256A63D08;
  if (!qword_256A63D08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB42DE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88984();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BB42E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjCClassFromMetadata;
  id v27;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = sub_23BB8B180();
  v41 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB8B2D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23BB8B2B8();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23BB8B33C();
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BB8B348();
  v38 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0
    || (v20 = *(_QWORD *)(v0 + 8), v21 = *(_QWORD *)(v0 + 16), v36 = v20, (sub_23BB8B360() & 1) == 0))
  {
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v27 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v28 = (void *)sub_23BB8A784();
    v29 = objc_msgSend(v27, sel_localizedStringForKey_value_table_, v28, 0, 0);

    v25 = sub_23BB8A7B4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D420);
    v35 = v21;
    sub_23BB8B300();
    v33 = v6;
    v34 = v5;
    v32 = v1;
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_23BB8FEC0;
    sub_23BB8B2E8();
    sub_23BB8B2F4();
    v31 = sub_23B98F57C(v22);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23BB8B324();
    sub_23BB8B2AC();
    v23 = v41;
    v24 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v4, *MEMORY[0x24BEE38E0], v32);
    sub_23BB8B2C4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
    sub_23BB88618();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v42);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v39);
    sub_23BAC10E4();
    sub_23BB8B354();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v16);
    return v43;
  }
  return v25;
}

uint64_t sub_23BB43230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_23BB88984();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DirectionsState();
  __swift_allocate_value_buffer(v5, qword_256A73E00);
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_256A73E00);
  sub_23BB88978();
  *(_BYTE *)v6 = 2;
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v6 + *(int *)(v5 + 24), v4, v0);
}

uint64_t sub_23BB432F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  if (v2 != 2)
  {
    v4 = (v3 ^ v2) & 1;
    if (v3 == 2 || v4 != 0)
      return 0;
LABEL_9:
    if ((a1[24] & 1) != 0)
    {
      if ((a2[24] & 1) == 0)
        return 0;
    }
    else if ((a2[24] & 1) != 0 || (sub_23BB8B36C() & 1) == 0)
    {
      return 0;
    }
    type metadata accessor for DirectionsState();
    return sub_23BB88960();
  }
  if (v3 == 2)
    goto LABEL_9;
  return 0;
}

uint64_t storeEnumTagSinglePayload for DirectionsState.TransportType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB433E0 + 4 * byte_23BB96F6D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB43414 + 4 * asc_23BB96F68[v4]))();
}

uint64_t sub_23BB43414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB4341C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB43424);
  return result;
}

uint64_t sub_23BB43430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB43438);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB4343C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB43444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectionsState.TransportType()
{
  return &type metadata for DirectionsState.TransportType;
}

unint64_t sub_23BB43464()
{
  unint64_t result;

  result = qword_256A63D48;
  if (!qword_256A63D48)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB96FF0, &type metadata for DirectionsState.TransportType);
    atomic_store(result, (unint64_t *)&qword_256A63D48);
  }
  return result;
}

uint64_t dispatch thunk of DataObservable.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for LocationState(uint64_t result)
{
  void *v1;

  v1 = *(void **)(result + 16);
  if ((unint64_t)v1 >= 0xFFFFFFFF)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LocationState(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(a2 + 16);
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v3;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    swift_bridgeObjectRetain();
    v5 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for LocationState(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  __int128 v10;

  v4 = *((_QWORD *)a2 + 2);
  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v8 = (void *)*((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      swift_bridgeObjectRetain();
      v9 = v8;
      return a1;
    }
LABEL_7:
    v10 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (void *)*((_QWORD *)a2 + 2);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t assignWithTake for LocationState(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(void **)(a1 + 16);
  if ((unint64_t)v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v5;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LocationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

uint64_t sub_23BB4377C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23BB43794(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationState()
{
  return &type metadata for LocationState;
}

__n128 PeopleLocationsProvider.Dependencies.init(startLocationsStream:stopLocationsStream:addSubscriptionsToLocationsStream:removeSubscriptionsFromLocationsStream:loadingStateResetDuration:loadingStateFallbackDuration:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u64[1] = a12;
  return result;
}

uint64_t PeopleLocationsProvider.Dependencies.startLocationsStream.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t PeopleLocationsProvider.Dependencies.startLocationsStream.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PeopleLocationsProvider.Dependencies.startLocationsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB43860(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = &unk_256A60030;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t PeopleLocationsProvider.Dependencies.stopLocationsStream.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t PeopleLocationsProvider.Dependencies.stopLocationsStream.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PeopleLocationsProvider.Dependencies.stopLocationsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB43934(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *a2;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_23B97C964;
  return v7(v4);
}

uint64_t sub_23BB43994(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = &unk_256A63D70;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t sub_23BB439F8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23BB43A5C;
  return v5();
}

uint64_t sub_23BB43A5C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t PeopleLocationsProvider.Dependencies.addSubscriptionsToLocationsStream.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t PeopleLocationsProvider.Dependencies.addSubscriptionsToLocationsStream.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PeopleLocationsProvider.Dependencies.addSubscriptionsToLocationsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB43B14(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 48) = &unk_256A63D58;
  *(_QWORD *)(a2 + 56) = v5;
  return result;
}

uint64_t PeopleLocationsProvider.Dependencies.removeSubscriptionsFromLocationsStream.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t PeopleLocationsProvider.Dependencies.removeSubscriptionsFromLocationsStream.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PeopleLocationsProvider.Dependencies.removeSubscriptionsFromLocationsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB43BE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 64) = sub_23BAAA4E8;
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

uint64_t PeopleLocationsProvider.Dependencies.loadingStateResetDuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t PeopleLocationsProvider.Dependencies.loadingStateResetDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*PeopleLocationsProvider.Dependencies.loadingStateResetDuration.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB43CBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 80) = sub_23BB4428C;
  *(_QWORD *)(a2 + 88) = v5;
  return result;
}

uint64_t PeopleLocationsProvider.Dependencies.loadingStateFallbackDuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_retain();
  return v1;
}

uint64_t PeopleLocationsProvider.Dependencies.loadingStateFallbackDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*PeopleLocationsProvider.Dependencies.loadingStateFallbackDuration.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB43D90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_retain();
}

uint64_t sub_23BB43D9C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_retain();
  result = swift_release();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_23BB43DDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = &unk_256A60038;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_23BB43E30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = &unk_256A63D78;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_23BB43E84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = &unk_256A63D68;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_23BB43ED8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_23BAAA4F0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;
  return swift_retain();
}

uint64_t sub_23BB43F2C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_23BB442C0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
  return swift_retain();
}

uint64_t _s12DependenciesVwxx_2()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s12DependenciesVwcp_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s12DependenciesVwca_2(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s12DependenciesVwta_2(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

uint64_t _s12DependenciesVwet_1(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12DependenciesVwst_1(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.Dependencies()
{
  return &type metadata for PeopleLocationsProvider.Dependencies;
}

uint64_t sub_23BB44268()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB4428C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_23BB442C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  char v5;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  return result;
}

uint64_t sub_23BB442F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B990D68;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A63D50 + dword_256A63D50))(a1, v4);
}

uint64_t sub_23BB4435C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B990D68;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_256A63D60 + dword_256A63D60))(a1, a2, v6);
}

uint64_t sub_23BB443DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B97C964;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_256A63D60 + dword_256A63D60))(a1, a2, v6);
}

UIImage __swiftcall DeviceImageProvider.Subscription.Size.processImage(_:)(UIImage a1)
{
  _BYTE *v1;
  double v2;

  v2 = 4.0;
  if (*v1)
    v2 = 10.0;
  return (UIImage)sub_23BB017E8(v2, v2, v2, v2);
}

BOOL static DeviceImageProvider.Subscription.Size.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DeviceImageProvider.Subscription.Size.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t DeviceImageProvider.Subscription.Size.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t DeviceImageProvider.Subscription.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B258();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23BB8B264();
  return sub_23BB8B24C();
}

uint64_t DeviceImageProvider.Subscription.hashValue.getter()
{
  sub_23BB8B240();
  DeviceImageProvider.Subscription.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BB446D0()
{
  sub_23BB8B240();
  DeviceImageProvider.Subscription.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BB44744()
{
  sub_23BB8B240();
  DeviceImageProvider.Subscription.hash(into:)();
  return sub_23BB8B270();
}

BOOL _s12FindMyUICore19DeviceImageProviderC0dE5StateO2eeoiySbAE_AEtFZ_0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_23BAC0A64();
      v4 = v3;
      v5 = v2;
      v6 = sub_23BB8AC70();

      return v6 & 1;
    }
    return 0;
  }
  return !v3;
}

uint64_t _s12FindMyUICore19DeviceImageProviderC12SubscriptionV2eeoiySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  double v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  int v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char v23;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 48);
  v5 = *((double *)a1 + 7);
  v6 = *((unsigned __int8 *)a1 + 64);
  v7 = *a2;
  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_BYTE *)a2 + 48);
  v11 = *((double *)a2 + 7);
  v12 = *((unsigned __int8 *)a2 + 64);
  v19 = *a1;
  v20 = v2;
  v21 = v3;
  v22 = a1[2];
  v23 = v4;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = a2[2];
  v18 = v10;
  return _s12FindMyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0((uint64_t)&v19, (uint64_t)&v14) & (v6 ^ v12 ^ 1) & (v5 == v11);
}

unint64_t sub_23BB448D4()
{
  unint64_t result;

  result = qword_256A63D80;
  if (!qword_256A63D80)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DeviceImageProvider.Subscription.Size, &type metadata for DeviceImageProvider.Subscription.Size);
    atomic_store(result, (unint64_t *)&qword_256A63D80);
  }
  return result;
}

unint64_t sub_23BB4491C()
{
  unint64_t result;

  result = qword_256A63D88;
  if (!qword_256A63D88)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DeviceImageProvider.Subscription, &type metadata for DeviceImageProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A63D88);
  }
  return result;
}

uint64_t _s5ImageO11ServerImageVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12SubscriptionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12SubscriptionVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s12SubscriptionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s12SubscriptionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12SubscriptionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceImageProvider.Subscription()
{
  return &type metadata for DeviceImageProvider.Subscription;
}

uint64_t _s12SubscriptionV4SizeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB44C28 + 4 * byte_23BB97095[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB44C5C + 4 * asc_23BB97090[v4]))();
}

uint64_t sub_23BB44C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB44C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB44C6CLL);
  return result;
}

uint64_t sub_23BB44C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB44C80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB44C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB44C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceImageProvider.Subscription.Size()
{
  return &type metadata for DeviceImageProvider.Subscription.Size;
}

void **_s16DeviceImageStateOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **_s16DeviceImageStateOwta(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for DeviceImageProvider.DeviceImageState()
{
  return &type metadata for DeviceImageProvider.DeviceImageState;
}

void __swiftcall PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)(FindMyUICore::PublishedLocation::Label *__return_ptr retstr, Swift::String_optional customLabel, Swift::String_optional coarseLabel, Swift::String_optional streetLabel, Swift::String_optional smallLabel, Swift::String_optional mediumLabel, Swift::String_optional largeLabel, Swift::String_optional poiLabel)
{
  retstr->customLabel = customLabel;
  retstr->coarseLabel = coarseLabel;
  retstr->streetLabel = streetLabel;
  retstr->smallLabel = smallLabel;
  retstr->mediumLabel = mediumLabel;
  retstr->largeLabel = largeLabel;
  retstr->poiLabel = poiLabel;
}

__n128 PublishedLocation.init(value:priority:label:)@<Q0>(_QWORD *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;

  v4 = *a2;
  *(_QWORD *)a4 = *a1;
  *(_BYTE *)(a4 + 8) = v4;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 32) = v5;
  v6 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a4 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a4 + 64) = v6;
  v7 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a4 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a4 + 96) = v7;
  result = *(__n128 *)(a3 + 96);
  *(__n128 *)(a4 + 112) = result;
  return result;
}

id PublishedLocation.value.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

void PublishedLocation.value.setter(void **a1)
{
  id *v1;
  void *v2;

  v2 = *a1;

  *v1 = v2;
}

uint64_t (*PublishedLocation.value.modify())()
{
  return nullsub_1;
}

void PublishedLocation.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *PublishedLocation.priority.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*PublishedLocation.priority.modify())()
{
  return nullsub_1;
}

uint64_t PublishedLocation.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 104) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PublishedLocation.label.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v7 = a1[3];
  v8 = a1[2];
  v5 = (__n128)a1[5];
  v6 = a1[4];
  v2 = *((_QWORD *)a1 + 12);
  v3 = *((_QWORD *)a1 + 13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 16) = v10;
  *(_OWORD *)(v1 + 32) = v9;
  *(_OWORD *)(v1 + 48) = v8;
  *(_OWORD *)(v1 + 64) = v7;
  result = v5;
  *(_OWORD *)(v1 + 80) = v6;
  *(__n128 *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v3;
  return result;
}

uint64_t (*PublishedLocation.label.modify())()
{
  return nullsub_1;
}

double PublishedLocation.timestamp.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  double result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD v29[5];
  uint64_t v30;
  uint64_t v31;

  v3 = sub_23BB88984();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v24 - v10;
  v12 = *(unsigned __int8 *)(v1 + 8);
  v13 = *(id *)v1;
  v14 = objc_msgSend(v13, sel_timestamp);
  sub_23BB8896C();

  v15 = sub_23BB8B384();
  v17 = v16;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v11, v3);
  if (v12 == 2)
    static FindMyRelativeDate.RecencyKey.live(recencyDuration:)(v15, v17, v29);
  else
    static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(v15, v17, v29);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
  v27 = v29[1];
  v28 = v29[0];
  v25 = v29[3];
  v26 = v29[2];
  v24 = v29[4];
  v18 = v30;
  v19 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v7, v3);
  v20 = a1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v21 = v27;
  *(_OWORD *)v20 = v28;
  *(_OWORD *)(v20 + 16) = v21;
  v22 = v25;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  result = *(double *)&v24;
  *(_OWORD *)(v20 + 64) = v24;
  *(_QWORD *)(v20 + 80) = v18;
  *(_QWORD *)(v20 + 88) = v19;
  return result;
}

BOOL PublishedLocation.showPulseAnimation.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 8) == 2;
}

uint64_t PublishedLocation.showPulseAnimationEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v3 = sub_23BB88984();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 8) != 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(a1, 1, 1, v3, v6);
  v9 = *(id *)v1;
  v10 = objc_msgSend(v9, sel_timestamp);
  sub_23BB8896C();

  sub_23BB88888();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

uint64_t PublishedLocation.extraInfo.getter()
{
  void *v0;
  id v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t result;

  if (qword_256A58CD8 != -1)
    swift_once();
  if (byte_256A5F830 == 1)
  {
    v0 = (void *)qword_256A5F828;
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = (void *)sub_23BB8A784();
    v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
      return 0;
  }
  else
  {
    swift_beginAccess();
    result = 0;
    if (byte_256A5F831 != 1)
      return result;
  }
  sub_23BB8A7D8();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  return 0x203A677562656428;
}

double PublishedLocation.badge.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (*(_BYTE *)(v1 + 8) == 3)
  {
    if (qword_256A58D10 != -1)
      swift_once();
    v3 = unk_256A60D60;
    v4 = qword_256A60D68;
    v5 = unk_256A60D70;
    v6 = qword_256A60D78;
    *a1 = qword_256A60D58;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    a1[4] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    a1[4] = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

void sub_23BB45458()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  qword_256A63D90 = v8;
  *(_QWORD *)algn_256A63D98 = v10;
}

uint64_t static PublishedLocation.Label.noLocationLabel.getter()
{
  uint64_t v0;

  if (qword_256A58DC0 != -1)
    swift_once();
  v0 = qword_256A63D90;
  swift_bridgeObjectRetain();
  return v0;
}

Swift::String __swiftcall PublishedLocation.Label.localized(maxLength:)(FindMyUICore::PublishedLocation::Label::Length maxLength)
{
  __int128 *v1;
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  Swift::String_optional v6;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v9;
  void *v10;
  Swift::String result;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = *(_BYTE *)maxLength;
  v3 = v1[1];
  v13 = *v1;
  v14 = v3;
  v4 = v1[3];
  v15 = v1[2];
  v16 = v4;
  v5 = v1[5];
  v17 = v1[4];
  v18 = v5;
  v19 = v1[6];
  v12 = v2;
  v6 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)((FindMyUICore::PublishedLocation::Label::Length)&v12);
  if (v6.value._object)
  {
    countAndFlagsBits = v6.value._countAndFlagsBits;
    object = v6.value._object;
  }
  else
  {
    if (qword_256A58DC0 != -1)
      swift_once();
    countAndFlagsBits = qword_256A63D90;
    object = *(void **)algn_256A63D98;
    swift_bridgeObjectRetain();
  }
  v9 = countAndFlagsBits;
  v10 = object;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall PublishedLocation.Label.combined(maxLength:)(FindMyUICore::PublishedLocation::Label::Length maxLength)
{
  __int128 *v1;
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  Swift::String_optional v6;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v9;
  void *v10;
  Swift::String result;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = *(_BYTE *)maxLength;
  v3 = v1[1];
  v13 = *v1;
  v14 = v3;
  v4 = v1[3];
  v15 = v1[2];
  v16 = v4;
  v5 = v1[5];
  v17 = v1[4];
  v18 = v5;
  v19 = v1[6];
  v12 = v2;
  v6 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)((FindMyUICore::PublishedLocation::Label::Length)&v12);
  if (v6.value._object)
  {
    countAndFlagsBits = v6.value._countAndFlagsBits;
    object = v6.value._object;
  }
  else
  {
    if (qword_256A58DC0 != -1)
      swift_once();
    countAndFlagsBits = qword_256A63D90;
    object = *(void **)algn_256A63D98;
    swift_bridgeObjectRetain();
  }
  v9 = countAndFlagsBits;
  v10 = object;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::tuple_primary_String_secondary_String_optional __swiftcall PublishedLocation.Label.primaryAndSecondary(detailLevel:)(FindMyUICore::PublishedLocation::Label::DetailLevel detailLevel)
{
  __int128 *v1;
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  Swift::tuple_primary_String_optional_secondary_String_optional v22;
  Swift::tuple_primary_String_secondary_String_optional result;

  v2 = *(_BYTE *)detailLevel;
  v3 = v1[1];
  v15 = *v1;
  v16 = v3;
  v4 = v1[3];
  v17 = v1[2];
  v18 = v4;
  v5 = v1[5];
  v19 = v1[4];
  v20 = v5;
  v21 = v1[6];
  v14 = v2;
  v22 = PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)((FindMyUICore::PublishedLocation::Label::DetailLevel)&v14);
  countAndFlagsBits = v22.secondary.value._countAndFlagsBits;
  object = v22.secondary.value._object;
  if (v22.primary.value._object)
  {
    v8 = v22.primary.value._countAndFlagsBits;
    v9 = v22.primary.value._object;
  }
  else
  {
    if (qword_256A58DC0 != -1)
      swift_once();
    v8 = qword_256A63D90;
    v9 = *(void **)algn_256A63D98;
    swift_bridgeObjectRetain();
  }
  v10 = v8;
  v11 = v9;
  v12 = countAndFlagsBits;
  v13 = object;
  result.secondary.value._object = v13;
  result.secondary.value._countAndFlagsBits = v12;
  result.primary._object = v11;
  result.primary._countAndFlagsBits = v10;
  return result;
}

Swift::tuple_primary_String_optional_secondary_String_optional __swiftcall PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)(FindMyUICore::PublishedLocation::Label::DetailLevel detailLevel)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Swift::tuple_primary_String_optional_secondary_String_optional result;

  v2 = *(_BYTE *)detailLevel;
  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v8 = v1[12];
  v7 = v1[13];
  if ((v2 & 1) == 0)
  {
    if (v3)
    {
      v14 = (void *)v1[3];
      v13 = v1[1];
    }
    else
    {
      if (!v7)
      {
        v8 = v1[4];
        if (!v1[5])
        {
          v21 = 0;
          v14 = (void *)v6;
          goto LABEL_18;
        }
      }
      v14 = (void *)v1[3];
      v4 = v8;
      v13 = swift_bridgeObjectRetain();
    }
    goto LABEL_17;
  }
  v9 = v1[6];
  v10 = (void *)v1[7];
  v12 = v1[8];
  v11 = (void *)v1[9];
  v13 = v1[1];
  v15 = v1[10];
  v14 = (void *)v1[11];
  if (v3)
  {
    if (v14)
    {
LABEL_4:
      v5 = v15;
      goto LABEL_17;
    }
LABEL_9:
    v20 = v11;
    if (!v11)
    {
      v20 = v10;
      if (!v10)
      {
        swift_bridgeObjectRetain();
        v9 = v5;
        v20 = (void *)v6;
      }
      v12 = v9;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    v5 = v12;
    v14 = v20;
    goto LABEL_17;
  }
  if (v7)
  {
    v16 = (void *)v1[9];
    v17 = v9;
    v18 = v10;
    v19 = swift_bridgeObjectRetain();
    v10 = v18;
    v9 = v17;
    v11 = v16;
    v4 = v8;
    v13 = v19;
    if (v14)
      goto LABEL_4;
    goto LABEL_9;
  }
  if (v14)
  {
    v8 = 0;
    v21 = 0;
    v5 = v15;
    goto LABEL_18;
  }
  if (v11)
  {
    v5 = 0;
    v4 = v1[8];
    v13 = v1[9];
  }
  else
  {
    v13 = v1[7];
    if (!v10)
    {
      swift_bridgeObjectRetain();
      v9 = v5;
      v13 = v6;
    }
    v4 = v9;
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v14 = 0;
LABEL_17:
  swift_bridgeObjectRetain();
  v8 = v5;
  v21 = v14;
  v5 = v4;
  v14 = (void *)v13;
LABEL_18:
  swift_bridgeObjectRetain();
  v22 = v5;
  v23 = v14;
  v24 = v8;
  v25 = v21;
  result.secondary.value._object = v25;
  result.secondary.value._countAndFlagsBits = v24;
  result.primary.value._object = v23;
  result.primary.value._countAndFlagsBits = v22;
  return result;
}

Swift::String_optional __swiftcall PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)(FindMyUICore::PublishedLocation::Label::Length maxLength)
{
  Swift::String_optional result;

  __asm { BR              X10 }
  return result;
}

uint64_t sub_23BB45A2C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

BOOL static PublishedLocation.Label.DetailLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublishedLocation.Label.DetailLevel.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t PublishedLocation.Label.DetailLevel.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

BOOL static PublishedLocation.Label.Length.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PublishedLocation.Label.Length.hash(into:)()
{
  return sub_23BB8B24C();
}

double static PublishedLocation.Constants.liveLocationRecencyDuration.getter()
{
  return 60.0;
}

double static PublishedLocation.Constants.regularLocationRecencyDuration.getter()
{
  return 60.0;
}

double static PublishedLocation.Constants.generalTimestampRecencyDuration.getter()
{
  return 60.0;
}

uint64_t _s12FindMyUICore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v10 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v76 = a1[10];
  v79 = a1[11];
  v12 = a1[12];
  v13 = a2[1];
  v14 = a2[2];
  v16 = a2[3];
  v15 = a2[4];
  v18 = a2[5];
  v17 = a2[6];
  v20 = a2[7];
  v19 = a2[8];
  v22 = a2[9];
  v21 = a2[10];
  v23 = a2[11];
  v75 = a2[12];
  v77 = a2[13];
  v78 = a1[13];
  if (!v3)
  {
    if (v13)
      return 0;
    goto LABEL_8;
  }
  if (!v13)
    return 0;
  if (*a1 == *a2 && v3 == v13)
    goto LABEL_8;
  v70 = a1[4];
  v72 = a2[6];
  v63 = a2[11];
  v64 = a2[10];
  v60 = a2[2];
  v61 = a1[2];
  v24 = a1[12];
  v25 = a1[8];
  v26 = a1[9];
  v62 = a2[8];
  v66 = a2[4];
  v68 = a2[5];
  v27 = a2[7];
  v28 = a1[5];
  v29 = sub_23BB8B1A4();
  v18 = v68;
  v5 = v70;
  v7 = v28;
  v4 = v61;
  v19 = v62;
  v17 = v72;
  v20 = v27;
  v11 = v26;
  v9 = v25;
  v12 = v24;
  v14 = v60;
  v23 = v63;
  v21 = v64;
  v15 = v66;
  v30 = v29;
  result = 0;
  if ((v30 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v16)
        return 0;
      if (v4 != v14 || v6 != v16)
      {
        v71 = v5;
        v73 = v17;
        v65 = v12;
        v67 = v15;
        v32 = v9;
        v33 = v11;
        v34 = v22;
        v35 = v19;
        v36 = v20;
        v37 = v7;
        v69 = v18;
        v38 = sub_23BB8B1A4();
        v18 = v69;
        v5 = v71;
        v7 = v37;
        v17 = v73;
        v20 = v36;
        v19 = v35;
        v22 = v34;
        v11 = v33;
        v9 = v32;
        v12 = v65;
        v15 = v67;
        v39 = v38;
        result = 0;
        if ((v39 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    if (v7)
    {
      if (!v18)
        return 0;
      if (v5 != v15 || v7 != v18)
      {
        v74 = v17;
        v40 = v12;
        v41 = v9;
        v42 = v11;
        v43 = v22;
        v44 = v19;
        v45 = v20;
        v46 = sub_23BB8B1A4();
        v17 = v74;
        v20 = v45;
        v19 = v44;
        v22 = v43;
        v11 = v42;
        v9 = v41;
        v12 = v40;
        v47 = v46;
        result = 0;
        if ((v47 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v10)
    {
      if (!v20)
        return 0;
      if (v8 != v17 || v10 != v20)
      {
        v48 = v12;
        v49 = v9;
        v50 = v11;
        v51 = v19;
        v52 = sub_23BB8B1A4();
        v19 = v51;
        v11 = v50;
        v9 = v49;
        v12 = v48;
        v53 = v52;
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v11)
    {
      if (!v22)
        return 0;
      if (v9 != v19 || v11 != v22)
      {
        v54 = v12;
        v55 = sub_23BB8B1A4();
        v12 = v54;
        v56 = v55;
        result = 0;
        if ((v56 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v79)
    {
      if (!v23)
        return 0;
      if (v76 != v21 || v79 != v23)
      {
        v57 = v12;
        v58 = sub_23BB8B1A4();
        v12 = v57;
        v59 = v58;
        result = 0;
        if ((v59 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v78)
    {
      if (v77 && (v12 == v75 && v78 == v77 || (sub_23BB8B1A4() & 1) != 0))
        return 1;
    }
    else if (!v77)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s12FindMyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  char MyUICore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[14];
  _QWORD v40[15];

  v2 = *(void **)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v37 = *(_QWORD *)(a1 + 24);
  v38 = *(_QWORD *)(a1 + 16);
  v35 = *(_QWORD *)(a1 + 40);
  v36 = *(_QWORD *)(a1 + 32);
  v33 = *(_QWORD *)(a1 + 56);
  v34 = *(_QWORD *)(a1 + 48);
  v31 = *(_QWORD *)(a1 + 72);
  v32 = *(_QWORD *)(a1 + 64);
  v29 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 104);
  v28 = *(_QWORD *)(a1 + 96);
  v25 = *(_QWORD *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 112);
  v4 = *(void **)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  v23 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 96);
  v20 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 120);
  sub_23BAC0A64();
  v11 = v2;
  v12 = v4;
  v13 = sub_23BB8AC70();

  MyUICore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0 = 0;
  if ((v13 & 1) != 0 && v3 == v5)
  {
    v40[0] = v38;
    v40[1] = v37;
    v40[2] = v36;
    v40[3] = v35;
    v40[4] = v34;
    v40[5] = v33;
    v40[6] = v32;
    v40[7] = v31;
    v40[8] = v30;
    v40[9] = v29;
    v40[10] = v28;
    v40[11] = v27;
    v40[12] = v26;
    v40[13] = v25;
    v39[0] = v24;
    v39[1] = v23;
    v39[2] = v6;
    v39[3] = v7;
    v39[4] = v8;
    v39[5] = v9;
    v39[6] = v10;
    v39[7] = v22;
    v39[8] = v21;
    v39[9] = v20;
    v39[10] = v19;
    v39[11] = v18;
    v39[12] = v17;
    v39[13] = v16;
    MyUICore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0 = _s12FindMyUICore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0(v40, v39);
  }
  return MyUICore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0 & 1;
}

unint64_t sub_23BB4617C()
{
  unint64_t result;

  result = qword_256A63DA0;
  if (!qword_256A63DA0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PublishedLocation.Priority, &type metadata for PublishedLocation.Priority);
    atomic_store(result, (unint64_t *)&qword_256A63DA0);
  }
  return result;
}

unint64_t sub_23BB461C4()
{
  unint64_t result;

  result = qword_256A63DA8;
  if (!qword_256A63DA8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PublishedLocation.Label.DetailLevel, &type metadata for PublishedLocation.Label.DetailLevel);
    atomic_store(result, (unint64_t *)&qword_256A63DA8);
  }
  return result;
}

unint64_t sub_23BB4620C()
{
  unint64_t result;

  result = qword_256A63DB0;
  if (!qword_256A63DB0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PublishedLocation.Label.Length, &type metadata for PublishedLocation.Label.Length);
    atomic_store(result, (unint64_t *)&qword_256A63DB0);
  }
  return result;
}

uint64_t destroy for PublishedLocation(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PublishedLocation(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PublishedLocation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for PublishedLocation(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PublishedLocation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PublishedLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation()
{
  return &type metadata for PublishedLocation;
}

uint64_t storeEnumTagSinglePayload for PublishedLocation.Priority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BB46660 + 4 * byte_23BB971E9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BB46694 + 4 * byte_23BB971E4[v4]))();
}

uint64_t sub_23BB46694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB4669C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB466A4);
  return result;
}

uint64_t sub_23BB466B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB466B8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BB466BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB466C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Priority()
{
  return &type metadata for PublishedLocation.Priority;
}

uint64_t destroy for PublishedLocation.Label()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PublishedLocation.Label(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PublishedLocation.Label(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_QWORD *assignWithTake for PublishedLocation.Label(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PublishedLocation.Label(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PublishedLocation.Label(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Label()
{
  return &type metadata for PublishedLocation.Label;
}

uint64_t storeEnumTagSinglePayload for PublishedLocation.Label.DetailLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB46AC0 + 4 * byte_23BB971F3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB46AF4 + 4 * byte_23BB971EE[v4]))();
}

uint64_t sub_23BB46AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB46AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB46B04);
  return result;
}

uint64_t sub_23BB46B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB46B18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB46B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB46B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Label.DetailLevel()
{
  return &type metadata for PublishedLocation.Label.DetailLevel;
}

uint64_t storeEnumTagSinglePayload for PublishedLocation.Label.Length(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BB46B8C + 4 * byte_23BB971FD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BB46BC0 + 4 * byte_23BB971F8[v4]))();
}

uint64_t sub_23BB46BC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB46BC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB46BD0);
  return result;
}

uint64_t sub_23BB46BDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB46BE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BB46BE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB46BF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Label.Length()
{
  return &type metadata for PublishedLocation.Label.Length;
}

ValueMetadata *type metadata accessor for PublishedLocation.Constants()
{
  return &type metadata for PublishedLocation.Constants;
}

uint64_t ContactsProvider.data.getter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ContactsProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  return sub_23BB4734C(v3, a1);
}

uint64_t sub_23BB46D7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  return sub_23BB4734C(v4, a2);
}

uint64_t sub_23BB46E2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BB4734C(a1, (uint64_t)v7);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A14();
  swift_release();
  return sub_23BB473AC((uint64_t)v7);
}

uint64_t ContactsProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A14();
  swift_release();
  return sub_23BB473AC(a1);
}

uint64_t sub_23BB46FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  sub_23BB4DFAC(a2, v3);
  return swift_endAccess();
}

void (*ContactsProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BB47130;
}

void sub_23BB47130(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t sub_23BB47198@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB4724C()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ContactsProvider()
{
  uint64_t result;

  result = qword_256A63E70;
  if (!qword_256A63E70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB4734C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB47394()
{
  uint64_t v0;

  return sub_23BB46FCC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BB473AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB473EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB47458()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  return swift_retain();
}

uint64_t sub_23BB474E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__valuePublisher);
  return swift_retain();
}

uint64_t sub_23BB47580()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  swift_retain();
  sub_23BB88A14();
  swift_release();
  return swift_release();
}

uint64_t ContactsProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ContactsProvider.init(dependencies:)(a1);
  return v2;
}

uint64_t ContactsProvider.init(dependencies:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  __int128 v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  __int128 v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43[4];

  v2 = (uint64_t)v1;
  v37[1] = *v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v41 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v37 - v10;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v37 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 36);
  *(_QWORD *)&v19[v21] = sub_23B97EAB4(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v19[v16[10]] = MEMORY[0x24BEE4B08];
  v19[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v23 = *a1;
  v38 = a1[1];
  v39 = v23;
  v22(v19, v15, v4);
  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v24(v11, v15, v4);
  v40 = v5;
  v25 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v26 = swift_allocObject();
  v24((char *)(v26 + v25), v11, v4);
  v27 = (uint64_t (**)())&v19[v16[12]];
  *v27 = sub_23B988EB4;
  v27[1] = (uint64_t (*)())v26;
  sub_23BB4D964((uint64_t)v19, v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data) = sub_23B97E974(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__valuePublisher) = 0;
  sub_23BB88A44();
  v28 = v38;
  *(_OWORD *)(v2 + 16) = v39;
  *(_OWORD *)(v2 + 32) = v28;
  swift_getKeyPath();
  v43[1] = v2;
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v29 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  v22(v41, (char *)v29, v4);
  swift_retain_n();
  v30 = sub_23BB891AC();
  v31 = sub_23BB8ABEC();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v43[0] = v33;
    *(_DWORD *)v32 = 136315394;
    v42 = sub_23BB7B69C(0xD000000000000013, 0x800000023BB9B680, v43);
    sub_23BB8ACB8();
    *(_WORD *)(v32 + 12) = 2080;
    v42 = v2;
    swift_retain();
    v34 = sub_23BB8A7D8();
    v42 = sub_23BB7B69C(v34, v35, v43);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v30, v31, "ContactsProvider: %s - %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v33, -1, -1);
    MEMORY[0x24260D9B4](v32, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v4);
  return v2;
}

id ContactsProvider.contact(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (**v4)(char *, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v44 = sub_23BB891C4();
  v4 = *(void (***)(char *, uint64_t, uint64_t))(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v43 = (char *)&v41 - v10;
  v12 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v13 = *(_BYTE *)(a1 + 16);
  swift_getKeyPath();
  v50 = v2;
  sub_23B9894D4();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_beginAccess();
  v15 = *v14;
  if (*(_QWORD *)(*v14 + 16))
  {
    swift_bridgeObjectRetain();
    v16 = sub_23B984A70(v12, v11, v13);
    if ((v17 & 1) != 0)
    {
      v18 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRelease();
      sub_23B9894DC();
      swift_getKeyPath();
      v49 = v2;
      sub_23BB88A20();
      swift_release();
      v19 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
      swift_beginAccess();
      v20 = v43;
      v21 = v19;
      v22 = v44;
      v4[2](v43, v21, v44);
      sub_23B9894D4();
      sub_23B9894D4();
      v23 = sub_23BB891AC();
      v24 = sub_23BB8ABC8();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v48 = v42;
        *(_DWORD *)v25 = 136315394;
        v45 = sub_23BB7B69C(0x28746361746E6F63, 0xED0000293A726F66, &v48);
        sub_23BB8ACB8();
        *(_WORD *)(v25 + 12) = 2080;
        v45 = v12;
        v46 = v11;
        v47 = v13;
        v26 = ContactsProvider.Subscription.debugDescription.getter();
        v45 = sub_23BB7B69C(v26, v27, &v48);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        sub_23B9894DC();
        sub_23B9894DC();
        _os_log_impl(&dword_23B979000, v23, v24, "ContactsProvider: %s - %s - Hit", (uint8_t *)v25, 0x16u);
        v28 = v42;
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v28, -1, -1);
        MEMORY[0x24260D9B4](v25, -1, -1);

        ((void (*)(char *, uint64_t))v4[1])(v43, v44);
      }
      else
      {
        sub_23B9894DC();
        sub_23B9894DC();

        ((void (*)(char *, uint64_t))v4[1])(v20, v22);
      }
      return v18;
    }
    swift_bridgeObjectRelease();
  }
  sub_23B9894DC();
  swift_getKeyPath();
  v49 = v2;
  sub_23BB88A20();
  swift_release();
  v29 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  v30 = (char *)v4;
  v31 = v29;
  v32 = v44;
  v4[2](v7, v31, v44);
  sub_23B9894D4();
  sub_23B9894D4();
  v33 = sub_23BB891AC();
  v34 = sub_23BB8ABC8();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v43 = v30;
    v36 = v35;
    v37 = swift_slowAlloc();
    v48 = v37;
    *(_DWORD *)v36 = 136315394;
    v45 = sub_23BB7B69C(0x28746361746E6F63, 0xED0000293A726F66, &v48);
    sub_23BB8ACB8();
    *(_WORD *)(v36 + 12) = 2080;
    v45 = v12;
    v46 = v11;
    v47 = v13;
    v38 = ContactsProvider.Subscription.debugDescription.getter();
    v45 = sub_23BB7B69C(v38, v39, &v48);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B9894DC();
    sub_23B9894DC();
    _os_log_impl(&dword_23B979000, v33, v34, "ContactsProvider: %s - %s - Miss", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v37, -1, -1);
    MEMORY[0x24260D9B4](v36, -1, -1);

    (*((void (**)(char *, uint64_t))v43 + 1))(v7, v44);
  }
  else
  {
    sub_23B9894DC();
    sub_23B9894DC();

    (*((void (**)(char *, uint64_t))v30 + 1))(v7, v32);
  }
  return 0;
}

uint64_t ContactsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t i;
  BOOL v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t (*v33)(_QWORD *);
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  _QWORD v66[2];
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD v87[2];
  unsigned __int8 v88;

  v3 = v2;
  v71 = a2;
  v5 = sub_23BB891C4();
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v82 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v68 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E0);
  v69 = *(_QWORD *)(v70 - 8);
  v12 = MEMORY[0x24BDAC7A8](v70, v11);
  v67 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66[1] = v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v72 = (char *)v66 - v15;
  v16 = *(_QWORD *)(a1 + 56);
  v77 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v85 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
  v20 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  v81 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_bridgeObjectRetain();
  v76 = v20;
  swift_beginAccess();
  v21 = 0;
  v78 = (unint64_t)(v17 + 63) >> 6;
  *(_QWORD *)&v22 = 138412290;
  v73 = v22;
  v74 = a1;
  v75 = v3;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v19));
  v24 = (v19 - 1) & v19;
  for (i = v23 | (v21 << 6); ; i = __clz(__rbit64(v27)) + (v21 << 6))
  {
    v29 = *(_QWORD *)(a1 + 48) + 24 * i;
    v30 = *(_QWORD *)(v29 + 8);
    v32 = *(_BYTE *)(v29 + 16);
    v33 = *(uint64_t (**)(_QWORD *))(v3 + 16);
    v87[0] = *(_QWORD *)v29;
    v31 = v87[0];
    v87[1] = v30;
    v88 = v32;
    sub_23B9894D4();
    v34 = v33(v87);
    v79 = v24;
    v80 = v34;
    swift_getKeyPath();
    v87[0] = v3;
    sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
    sub_23BB88A20();
    swift_release();
    v87[0] = v3;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    v35 = v81;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v86 = (_QWORD *)*v35;
    v37 = v86;
    *v35 = 0x8000000000000000;
    v39 = sub_23B984A70(v31, v30, v32);
    v40 = v37[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      goto LABEL_39;
    v43 = v38;
    if (v37[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v46 = v86;
        if ((v38 & 1) != 0)
          goto LABEL_24;
      }
      else
      {
        sub_23B987890();
        v46 = v86;
        if ((v43 & 1) != 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_23BB4B35C(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_23B984A70(v31, v30, v32);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_42;
      v39 = v44;
      v46 = v86;
      if ((v43 & 1) != 0)
      {
LABEL_24:
        v50 = v46[7];

        *(_QWORD *)(v50 + 8 * v39) = v80;
        goto LABEL_25;
      }
    }
    v46[(v39 >> 6) + 8] |= 1 << v39;
    v47 = v46[6] + 24 * v39;
    *(_QWORD *)v47 = v31;
    *(_QWORD *)(v47 + 8) = v30;
    *(_BYTE *)(v47 + 16) = v32;
    *(_QWORD *)(v46[7] + 8 * v39) = v80;
    v48 = v46[2];
    v26 = __OFADD__(v48, 1);
    v49 = v48 + 1;
    if (v26)
      goto LABEL_40;
    v46[2] = v49;
    sub_23B9894D4();
LABEL_25:
    *v81 = v46;
    swift_bridgeObjectRelease();
    sub_23B9894DC();
    swift_endAccess();
    v3 = v75;
    v87[0] = v75;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    a1 = v74;
    v19 = v79;
    if (v79)
      goto LABEL_4;
LABEL_5:
    v26 = __OFADD__(v21++, 1);
    if (v26)
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      result = sub_23BB8B1E0();
      __break(1u);
      return result;
    }
    if (v21 >= v78)
      goto LABEL_33;
    v27 = *(_QWORD *)(v77 + 8 * v21);
    if (!v27)
      break;
LABEL_15:
    v24 = (v27 - 1) & v27;
  }
  v28 = v21 + 1;
  if (v21 + 1 >= v78)
    goto LABEL_33;
  v27 = *(_QWORD *)(v77 + 8 * v28);
  if (v27)
    goto LABEL_14;
  v28 = v21 + 2;
  if (v21 + 2 >= v78)
    goto LABEL_33;
  v27 = *(_QWORD *)(v77 + 8 * v28);
  if (v27)
  {
LABEL_14:
    v21 = v28;
    goto LABEL_15;
  }
  v28 = v21 + 3;
  if (v21 + 3 < v78)
  {
    v27 = *(_QWORD *)(v77 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        v21 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_41;
        if (v21 >= v78)
          goto LABEL_33;
        v27 = *(_QWORD *)(v77 + 8 * v21);
        ++v28;
        if (v27)
          goto LABEL_15;
      }
    }
    goto LABEL_14;
  }
LABEL_33:
  v51 = v71;
  result = swift_release();
  if ((v51 & 1) != 0)
  {
    (*(void (**)(uint64_t))(v3 + 32))(result);
    swift_getKeyPath();
    v87[0] = v3;
    v84 = sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
    sub_23BB88A20();
    swift_release();
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__valuePublisher))
    {
      swift_retain();
      sub_23BB8AA78();
      swift_release();
    }
    v53 = sub_23BB8AA18();
    v54 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v68, 1, 1, v53);
    v55 = swift_allocObject();
    swift_weakInit();
    v56 = v69;
    v57 = v67;
    v58 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v72, v70);
    sub_23BB8A9F4();
    swift_retain();
    v59 = sub_23BB8A9E8();
    v60 = (*(unsigned __int8 *)(v56 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v61 = (char *)swift_allocObject();
    v62 = MEMORY[0x24BEE6930];
    *((_QWORD *)v61 + 2) = v59;
    *((_QWORD *)v61 + 3) = v62;
    *((_QWORD *)v61 + 4) = v55;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v61[v60], v57, v58);
    swift_release();
    v63 = sub_23B989F54(v54, (uint64_t)&unk_256A63DE0, (uint64_t)v61);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath, v65);
    v66[-2] = v3;
    v66[-1] = v63;
    v87[0] = v3;
    sub_23BB88A14();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v72, v58);
  }
  return result;
}

uint64_t sub_23BB48A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[24] = a4;
  v5[25] = a5;
  v6 = sub_23BB891C4();
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F20);
  v5[31] = v7;
  v5[32] = *(_QWORD *)(v7 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = sub_23BB8A9F4();
  v5[35] = sub_23BB8A9E8();
  v5[36] = sub_23BB8A988();
  v5[37] = v8;
  return swift_task_switch();
}

uint64_t sub_23BB48AE4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 304) = Strong;
  if (Strong)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E0);
    sub_23BB8AA54();
    v2 = OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
    *(_QWORD *)(v0 + 312) = OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
    *(_QWORD *)(v0 + 320) = v2;
    *(_QWORD *)(v0 + 328) = OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data;
    swift_beginAccess();
    *(_QWORD *)(v0 + 336) = 0;
    *(_QWORD *)(v0 + 344) = sub_23BB8A9E8();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v3;
    *v3 = v0;
    v3[1] = sub_23BB48C40;
    return sub_23BB8AA60();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB48C40()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BB48C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  int64_t i;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t *v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL8 v69;
  char v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  void (*v81)(uint64_t, uint64_t);
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91[3];

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 304);
  if (*(_BYTE *)(v0 + 105) == 1)
  {
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = v2 + v1;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 136) = v2;
    sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
    sub_23BB88A20();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v6, v4);
    v7 = sub_23BB891AC();
    v8 = sub_23BB8ABEC();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 216);
    if (v9)
    {
      v89 = *(_QWORD *)(v0 + 240);
      v87 = *(_QWORD *)(v0 + 208);
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v91[0] = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v0 + 112) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, v91);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v7, v8, "ContactsProvider: %s - Finished", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v14, -1, -1);
      MEMORY[0x24260D9B4](v13, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v89, v87);
    }
    else
    {
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v15 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 216);
  v18 = v2 + v1;
  swift_getKeyPath();
  *(_QWORD *)(v0 + 120) = v2;
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v82(v15, v18, v17);
  v19 = sub_23BB891AC();
  v20 = sub_23BB8ABEC();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 232);
  v24 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 216);
  v80 = (_QWORD *)(v0 + 176);
  if (v21)
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v91[0] = v26;
    *(_DWORD *)v25 = 136315138;
    *(_QWORD *)(v0 + 168) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, v91);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v19, v20, "ContactsProvider: %s - new stream value", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v26, -1, -1);
    MEMORY[0x24260D9B4](v25, -1, -1);

  }
  else
  {

  }
  v81 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v81(v22, v24);
  v28 = *(_QWORD *)(v0 + 304);
  v29 = v28 + *(_QWORD *)(v0 + 320);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 128) = v28;
  sub_23BB88A20();
  swift_release();
  v30 = *(_QWORD *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59590) + 40));
  v83 = v30 + 56;
  v31 = -1;
  v32 = -1 << *(_BYTE *)(v30 + 32);
  if (-v32 < 64)
    v31 = ~(-1 << -(char)v32);
  v33 = v31 & *(_QWORD *)(v30 + 56);
  v84 = (unint64_t)(63 - v32) >> 6;
  v34 = *(void **)(v0 + 336);
  v86 = v30;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v90)
  {
    if (v33)
    {
      v88 = (v33 - 1) & v33;
      v90 = i;
      v36 = __clz(__rbit64(v33)) | (i << 6);
      goto LABEL_31;
    }
    v37 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v37 >= v84)
      goto LABEL_46;
    v38 = *(_QWORD *)(v83 + 8 * v37);
    v39 = i + 1;
    if (!v38)
    {
      v39 = i + 2;
      if (i + 2 >= v84)
        goto LABEL_46;
      v38 = *(_QWORD *)(v83 + 8 * v39);
      if (!v38)
      {
        v39 = i + 3;
        if (i + 3 >= v84)
          goto LABEL_46;
        v38 = *(_QWORD *)(v83 + 8 * v39);
        if (!v38)
          break;
      }
    }
LABEL_30:
    v88 = (v38 - 1) & v38;
    v90 = v39;
    v36 = __clz(__rbit64(v38)) + (v39 << 6);
LABEL_31:
    v41 = *(_QWORD *)(v86 + 48) + 24 * v36;
    v43 = *(_QWORD *)v41;
    v42 = *(_QWORD *)(v41 + 8);
    v44 = *(_BYTE *)(v41 + 16);
    v45 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 304) + 16);
    *(_QWORD *)(v0 + 88) = *(_QWORD *)v41;
    *(_QWORD *)(v0 + 96) = v42;
    *(_BYTE *)(v0 + 104) = v44;
    sub_23B9894D4();
    v46 = v45(v0 + 88);
    v47 = *(_QWORD *)(v0 + 304);
    if (!v34)
    {
      v85 = v46;
      v63 = (uint64_t *)(v47 + *(_QWORD *)(v0 + 328));
      swift_getKeyPath();
      *(_QWORD *)(v0 + 152) = v47;
      sub_23BB88A20();
      swift_release();
      *(_QWORD *)(v0 + 160) = v47;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65 = *v63;
      *(_QWORD *)(v0 + 176) = *v63;
      *v63 = 0x8000000000000000;
      v67 = sub_23B984A70(v43, v42, v44);
      v68 = *(_QWORD *)(v65 + 16);
      v69 = (v66 & 1) == 0;
      result = v68 + v69;
      if (__OFADD__(v68, v69))
        goto LABEL_49;
      v70 = v66;
      if (*(_QWORD *)(v65 + 24) < result)
      {
        sub_23BB4B35C(result, isUniquelyReferenced_nonNull_native);
        result = sub_23B984A70(v43, v42, v44);
        if ((v70 & 1) != (v71 & 1))
          return sub_23BB8B1E0();
        v67 = result;
        v72 = (_QWORD *)*v80;
        if ((v70 & 1) == 0)
          goto LABEL_43;
LABEL_41:
        v73 = v72[7];

        *(_QWORD *)(v73 + 8 * v67) = v85;
LABEL_45:
        v78 = *(_QWORD *)(v0 + 304);
        *(_QWORD *)(v78 + *(_QWORD *)(v0 + 328)) = v72;
        swift_bridgeObjectRelease();
        sub_23B9894DC();
        swift_endAccess();
        *(_QWORD *)(v0 + 184) = v78;
        swift_getKeyPath();
        sub_23BB88A2C();
        result = swift_release();
        goto LABEL_14;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v72 = (_QWORD *)*v80;
        if ((v66 & 1) != 0)
          goto LABEL_41;
      }
      else
      {
        result = (uint64_t)sub_23B987890();
        v72 = (_QWORD *)*v80;
        if ((v70 & 1) != 0)
          goto LABEL_41;
      }
LABEL_43:
      v72[(v67 >> 6) + 8] |= 1 << v67;
      v74 = v72[6] + 24 * v67;
      *(_QWORD *)v74 = v43;
      *(_QWORD *)(v74 + 8) = v42;
      *(_BYTE *)(v74 + 16) = v44;
      *(_QWORD *)(v72[7] + 8 * v67) = v85;
      v75 = v72[2];
      v76 = __OFADD__(v75, 1);
      v77 = v75 + 1;
      if (v76)
        goto LABEL_50;
      v72[2] = v77;
      sub_23B9894D4();
      goto LABEL_45;
    }
    v48 = *(_QWORD *)(v0 + 224);
    v49 = *(_QWORD *)(v0 + 208);
    v50 = v47 + *(_QWORD *)(v0 + 320);
    sub_23B9894DC();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 144) = v47;
    sub_23BB88A20();
    swift_release();
    v82(v48, v50, v49);
    v51 = v34;
    v52 = v34;
    v53 = sub_23BB891AC();
    v54 = sub_23BB8ABD4();
    v55 = os_log_type_enabled(v53, v54);
    v56 = *(_QWORD *)(v0 + 224);
    v57 = *(_QWORD *)(v0 + 208);
    if (v55)
    {
      v58 = swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v91[0] = v60;
      *(_DWORD *)v58 = 136315394;
      *(_QWORD *)(v58 + 4) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, v91);
      *(_WORD *)(v58 + 12) = 2112;
      v61 = v34;
      v62 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v58 + 14) = v62;
      *v59 = v62;

      _os_log_impl(&dword_23B979000, v53, v54, "ContactsProvider: %s - error:%@", (uint8_t *)v58, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v59, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v60, -1, -1);
      MEMORY[0x24260D9B4](v58, -1, -1);

    }
    else
    {

    }
    result = ((uint64_t (*)(uint64_t, uint64_t))v81)(v56, v57);
LABEL_14:
    v34 = 0;
    v33 = v88;
  }
  v40 = i + 4;
  if (i + 4 >= v84)
  {
LABEL_46:
    swift_release();
    *(_QWORD *)(v0 + 336) = v34;
    *(_QWORD *)(v0 + 344) = sub_23BB8A9E8();
    v79 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v79;
    *v79 = v0;
    v79[1] = sub_23BB48C40;
    return sub_23BB8AA60();
  }
  v38 = *(_QWORD *)(v83 + 8 * v40);
  if (v38)
  {
    v39 = i + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v39 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v39 >= v84)
      goto LABEL_46;
    v38 = *(_QWORD *)(v83 + 8 * v39);
    ++v40;
    if (v38)
      goto LABEL_30;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t ContactsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, char a2)
{
  return sub_23BB4DB04(a2);
}

uint64_t ContactsProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23BB473AC(v0 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage);
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ContactsProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23BB473AC(v0 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage);
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BB49898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  return sub_23BB4734C(v3, a1);
}

uint64_t sub_23BB49948(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A14();
  swift_release();
  return sub_23BB473AC(a1);
}

void (*sub_23BB499F4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ContactsProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23BB49A3C(uint64_t a1, char a2)
{
  return sub_23BB4DB04(a2);
}

uint64_t sub_23BB49A44@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB49AF4(uint64_t a1, char a2)
{
  return sub_23BB4B6E8(a1, a2, &qword_256A593D0);
}

uint64_t sub_23BB49B00(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;

  v3 = v2;
  v5 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593F8);
  v44 = a2;
  v10 = sub_23BB8AFF4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v41)
              goto LABEL_34;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v43 + 72);
    v31 = *(_QWORD *)(v9 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_23B989CA4(v31, (uint64_t)v8, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    }
    else
    {
      sub_23B989CE8(v31, (uint64_t)v8, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      swift_bridgeObjectRetain();
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    result = sub_23BB8B270();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = sub_23B989CA4((uint64_t)v8, *(_QWORD *)(v11 + 56) + v30 * v19, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23BB49E90(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59420);
  v40 = a2;
  v6 = sub_23BB8AFF4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_33;
      v24 = *(_QWORD *)(v39 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v24 = *(_QWORD *)(v39 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v34 = *(_QWORD *)v33;
    v41 = *(_OWORD *)(v33 + 8);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = *((id *)&v41 + 1);
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    result = sub_23BB8B270();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v41;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23BB4A1E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59380);
  result = sub_23BB8AFF4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_23BB8B240();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23BB4A4B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _BYTE v35[224];
  _BYTE v36[232];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593B8);
  v6 = sub_23BB8AFF4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_33;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_33;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v13 >= v33)
                  goto LABEL_33;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = 224 * v17;
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v22;
      v24 = v22[1];
      sub_23B989684(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v35);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_23B9896C0((uint64_t)v35);
      }
      sub_23B989684((uint64_t)v35, (uint64_t)v36);
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      result = sub_23BB8B270();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v24;
      result = sub_23B989684((uint64_t)v36, *(_QWORD *)(v7 + 56) + 224 * v14);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_23BB4A7F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  char v39;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593A0);
  v36 = a2;
  v5 = sub_23BB8AFF4();
  v6 = (_QWORD *)v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v32 = (_QWORD *)(v4 + 64);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 64);
    v31 = (unint64_t)(v7 + 63) >> 6;
    v34 = v5 + 64;
    result = swift_retain();
    v11 = 0;
    v33 = v6;
    v35 = v4;
    while (1)
    {
      if (v9)
      {
        v37 = (v9 - 1) & v9;
        v38 = v11;
        v13 = __clz(__rbit64(v9)) | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v14 >= v31)
          goto LABEL_25;
        v15 = v32[v14];
        v16 = v11 + 1;
        if (!v15)
        {
          v16 = v11 + 2;
          if (v11 + 2 >= v31)
            goto LABEL_25;
          v15 = v32[v16];
          if (!v15)
          {
            v17 = v11 + 3;
            if (v11 + 3 >= v31)
            {
LABEL_25:
              swift_release();
              if ((v36 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v15 = v32[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_32;
                if (v16 >= v31)
                  goto LABEL_25;
                v15 = v32[v16];
                ++v17;
                if (v15)
                  goto LABEL_20;
              }
            }
            v16 = v11 + 3;
          }
        }
LABEL_20:
        v37 = (v15 - 1) & v15;
        v38 = v16;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      v18 = *(_QWORD *)(v4 + 56);
      v19 = *(_QWORD *)(v4 + 48) + 72 * v13;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v23 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v19 + 24);
      v25 = *(_QWORD *)(v19 + 32);
      v24 = *(_QWORD *)(v19 + 40);
      v26 = *(_BYTE *)(v19 + 48);
      v27 = *(_QWORD *)(v19 + 56);
      v39 = *(_BYTE *)(v19 + 64);
      v28 = *(_QWORD *)(v18 + 8 * v13);
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      sub_23BB8B258();
      if (v24)
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8B264();
      sub_23BB8B24C();
      sub_23BB8B270();
      result = sub_23BB8AD9C();
      *(_QWORD *)(v34 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v12 = v33[6] + 72 * result;
      v11 = v38;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_QWORD *)(v12 + 16) = v23;
      *(_QWORD *)(v12 + 24) = v22;
      *(_QWORD *)(v12 + 32) = v25;
      *(_QWORD *)(v12 + 40) = v24;
      *(_BYTE *)(v12 + 48) = v26;
      *(_QWORD *)(v12 + 56) = v27;
      *(_BYTE *)(v12 + 64) = v39;
      *(_QWORD *)(v33[7] + 8 * result) = v28;
      v6 = v33;
      ++v33[2];
      v4 = v35;
      v9 = v37;
    }
  }
  result = swift_release();
  *v30 = v6;
  return result;
}

uint64_t sub_23BB4ABA8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int64_t v33;
  _QWORD *v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  int64_t v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59398);
  v56 = a2;
  v6 = sub_23BB8AFF4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v55 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v53 = v2;
  v54 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      if ((v56 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v33 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v33 >= v54)
      break;
    v34 = (_QWORD *)(v5 + 64);
    v35 = *(_QWORD *)(v55 + 8 * v33);
    ++v13;
    if (!v35)
    {
      v13 = v33 + 1;
      if (v33 + 1 >= v54)
        goto LABEL_33;
      v35 = *(_QWORD *)(v55 + 8 * v13);
      if (!v35)
      {
        v36 = v33 + 2;
        if (v36 >= v54)
        {
LABEL_33:
          swift_release();
          v3 = v53;
          if ((v56 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v35 = *(_QWORD *)(v55 + 8 * v36);
        if (!v35)
        {
          while (1)
          {
            v13 = v36 + 1;
            if (__OFADD__(v36, 1))
              goto LABEL_42;
            if (v13 >= v54)
              goto LABEL_33;
            v35 = *(_QWORD *)(v55 + 8 * v13);
            ++v36;
            if (v35)
              goto LABEL_22;
          }
        }
        v13 = v36;
      }
    }
LABEL_22:
    v10 = (v35 - 1) & v35;
    v22 = __clz(__rbit64(v35)) + (v13 << 6);
    if ((v56 & 1) != 0)
    {
LABEL_10:
      v23 = *(_QWORD *)(v5 + 48) + 24 * v22;
      v24 = *(_QWORD *)v23;
      v25 = *(_QWORD *)(v23 + 8);
      v26 = *(_BYTE *)(v23 + 16);
      v27 = *(_QWORD *)(v5 + 56) + 136 * v22;
      v28 = *(_OWORD *)(v27 + 112);
      v72 = *(_OWORD *)(v27 + 96);
      v73 = v28;
      v74 = *(_QWORD *)(v27 + 128);
      v29 = *(_OWORD *)(v27 + 48);
      v68 = *(_OWORD *)(v27 + 32);
      v69 = v29;
      v30 = *(_OWORD *)(v27 + 80);
      v70 = *(_OWORD *)(v27 + 64);
      v71 = v30;
      v32 = *(_OWORD *)v27;
      v31 = *(_OWORD *)(v27 + 16);
      goto LABEL_24;
    }
LABEL_23:
    v37 = *(_QWORD *)(v5 + 48) + 24 * v22;
    v24 = *(_QWORD *)v37;
    v25 = *(_QWORD *)(v37 + 8);
    v26 = *(_BYTE *)(v37 + 16);
    v38 = *(_QWORD *)(v5 + 56) + 136 * v22;
    v57 = *(_OWORD *)v38;
    v39 = *(_OWORD *)(v38 + 64);
    v41 = *(_OWORD *)(v38 + 16);
    v40 = *(_OWORD *)(v38 + 32);
    v60 = *(_OWORD *)(v38 + 48);
    v61 = v39;
    v58 = v41;
    v59 = v40;
    v43 = *(_OWORD *)(v38 + 96);
    v42 = *(_OWORD *)(v38 + 112);
    v44 = *(_OWORD *)(v38 + 80);
    v65 = *(_QWORD *)(v38 + 128);
    v63 = v43;
    v64 = v42;
    v62 = v44;
    swift_bridgeObjectRetain();
    sub_23B9894E4((uint64_t)&v57);
    v72 = v63;
    v73 = v64;
    v74 = v65;
    v68 = v59;
    v69 = v60;
    v70 = v61;
    v71 = v62;
    v32 = v57;
    v31 = v58;
LABEL_24:
    v66 = v32;
    v67 = v31;
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v45 = -1 << *(_BYTE *)(v7 + 32);
    v46 = result & ~v45;
    v47 = v46 >> 6;
    if (((-1 << v46) & ~*(_QWORD *)(v11 + 8 * (v46 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v46) & ~*(_QWORD *)(v11 + 8 * (v46 >> 6)))) | v46 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v48 = 0;
      v49 = (unint64_t)(63 - v45) >> 6;
      do
      {
        if (++v47 == v49 && (v48 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v50 = v47 == v49;
        if (v47 == v49)
          v47 = 0;
        v48 |= v50;
        v51 = *(_QWORD *)(v11 + 8 * v47);
      }
      while (v51 == -1);
      v14 = __clz(__rbit64(~v51)) + (v47 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v7 + 48) + 24 * v14;
    *(_QWORD *)v15 = v24;
    *(_QWORD *)(v15 + 8) = v25;
    *(_BYTE *)(v15 + 16) = v26;
    v16 = *(_QWORD *)(v7 + 56) + 136 * v14;
    v17 = v73;
    *(_OWORD *)(v16 + 96) = v72;
    *(_OWORD *)(v16 + 112) = v17;
    *(_QWORD *)(v16 + 128) = v74;
    v18 = v69;
    *(_OWORD *)(v16 + 32) = v68;
    *(_OWORD *)(v16 + 48) = v18;
    v19 = v71;
    *(_OWORD *)(v16 + 64) = v70;
    *(_OWORD *)(v16 + 80) = v19;
    v20 = v67;
    *(_OWORD *)v16 = v66;
    *(_OWORD *)(v16 + 16) = v20;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v53;
  v34 = (_QWORD *)(v5 + 64);
  if ((v56 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v52 = 1 << *(_BYTE *)(v5 + 32);
  if (v52 >= 64)
    bzero(v34, ((unint64_t)(v52 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v34 = -1 << v52;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23BB4AFA8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = v2;
  v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59338);
  v47 = a2;
  v9 = sub_23BB8AFF4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v45 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = v2;
  v44 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v44)
      break;
    v23 = v45;
    v24 = v45[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v44)
        goto LABEL_34;
      v24 = v45[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v45[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v44)
              goto LABEL_34;
            v24 = v45[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v8 + 56);
    v27 = v8;
    v28 = *(_QWORD *)(v8 + 48) + 24 * v21;
    v29 = *(_QWORD *)v28;
    v30 = *(_QWORD *)(v28 + 8);
    v31 = *(_BYTE *)(v28 + 16);
    v32 = *(_QWORD *)(v46 + 72);
    v33 = v26 + v32 * v21;
    if ((v47 & 1) != 0)
    {
      sub_23B989CA4(v33, v48, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    }
    else
    {
      sub_23B989CE8(v33, v48, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      swift_bridgeObjectRetain();
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v34 = -1 << *(_BYTE *)(v10 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v15 + 8 * (v35 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v15 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v15 + 8 * v36);
      }
      while (v40 == -1);
      v18 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = *(_QWORD *)(v10 + 48) + 24 * v18;
    *(_QWORD *)v19 = v29;
    *(_QWORD *)(v19 + 8) = v30;
    *(_BYTE *)(v19 + 16) = v31;
    result = sub_23B989CA4(v48, *(_QWORD *)(v10 + 56) + v32 * v18, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    ++*(_QWORD *)(v10 + 16);
    v8 = v27;
  }
  swift_release();
  v3 = v43;
  v23 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v8 + 32);
  if (v41 >= 64)
    bzero(v23, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v41;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23BB4B35C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59358);
  v40 = a2;
  v6 = sub_23BB8AFF4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v37)
      break;
    v19 = v38;
    v20 = v38[v18];
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_36;
      v20 = v38[v13];
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_36:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v20 = v38[v21];
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_45;
            if (v13 >= v37)
              goto LABEL_36;
            v20 = v38[v13];
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v5 + 48) + 24 * v17;
    v24 = *(_QWORD *)v22;
    v23 = *(_QWORD *)(v22 + 8);
    v25 = *(char *)(v22 + 16);
    v26 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v17);
    if ((v40 & 1) == 0)
    {
      sub_23B9894D4();
      v27 = v26;
    }
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v25 < 0)
    {
      sub_23BB8A808();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      sub_23B9894DC();
      sub_23BB8B24C();
    }
    result = sub_23BB8B270();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v7 + 48) + 24 * v14;
    *(_QWORD *)v15 = v24;
    *(_QWORD *)(v15 + 8) = v23;
    *(_BYTE *)(v15 + 16) = v25;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v26;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v19 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v19, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23BB4B6DC(uint64_t a1, char a2)
{
  return sub_23BB4B6E8(a1, a2, &qword_256A593C0);
}

uint64_t sub_23BB4B6E8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_23BB8AFF4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    result = sub_23BB8B270();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23BB4BA08(uint64_t a1, char a2)
{
  return sub_23BB4BA20(a1, a2, &qword_256A59390);
}

uint64_t sub_23BB4BA14(uint64_t a1, char a2)
{
  return sub_23BB4BA20(a1, a2, &qword_256A59340);
}

uint64_t sub_23BB4BA20(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_23BB8AFF4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(_QWORD *)(v6 + 48) + 24 * v21;
    v32 = *(_QWORD *)v30;
    v31 = *(_QWORD *)(v30 + 8);
    v33 = *(_BYTE *)(v30 + 16);
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = *(_QWORD *)(v8 + 48) + 24 * v18;
    *(_QWORD *)v19 = v32;
    *(_QWORD *)(v19 + 8) = v31;
    *(_BYTE *)(v19 + 16) = v33;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23BB4BD5C(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A593B0);
}

uint64_t sub_23BB4BD68(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A593C8);
}

uint64_t sub_23BB4BD74(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A59378);
}

uint64_t sub_23BB4BD80(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A59368);
}

uint64_t sub_23BB4BD8C(uint64_t a1, char a2)
{
  return sub_23BB4D638(a1, a2, &qword_256A592E0);
}

uint64_t sub_23BB4BD98(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for RepositorySubscriber();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592F0);
  v41 = a2;
  v10 = sub_23BB8AFF4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v40 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v41 & 1) != 0)
    {
      sub_23B989CA4(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      sub_23B989CE8(v27, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_23BB8B240();
    sub_23BB889CC();
    sub_23B97D0C8(&qword_256A592F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23BB8A718();
    result = sub_23BB8B270();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = sub_23B989CA4((uint64_t)v8, *(_QWORD *)(v11 + 48) + v26 * v19, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23BB4C150(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A59360);
}

uint64_t sub_23BB4C15C(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A59370);
}

uint64_t sub_23BB4C168(uint64_t a1, char a2)
{
  return sub_23BB4C174(a1, a2, &qword_256A59350);
}

uint64_t sub_23BB4C174(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_23BB8AFF4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    result = sub_23BB8B270();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23BB4C494(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  char v46;
  int64_t v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59330);
  v46 = a2;
  v6 = sub_23BB8AFF4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v44 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v42 = v3;
  v43 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v47 = v13;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v43)
      break;
    v23 = v44;
    v24 = v44[v22];
    v25 = v13 + 1;
    if (!v24)
    {
      v25 = v13 + 2;
      if (v13 + 2 >= v43)
        goto LABEL_33;
      v24 = v44[v25];
      if (!v24)
      {
        v26 = v13 + 3;
        if (v13 + 3 >= v43)
        {
LABEL_33:
          swift_release();
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v44[v26];
        if (!v24)
        {
          while (1)
          {
            v25 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v25 >= v43)
              goto LABEL_33;
            v24 = v44[v25];
            ++v26;
            if (v24)
              goto LABEL_30;
          }
        }
        v25 = v13 + 3;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v47 = v25;
    v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    v31 = *(_QWORD *)(v5 + 56);
    v32 = *(_QWORD *)(v5 + 48) + 24 * v21;
    v33 = *(_QWORD *)v32;
    v34 = *(_QWORD *)(v32 + 8);
    v35 = *(_BYTE *)(v32 + 16);
    v36 = v31 + 32 * v21;
    v38 = *(_QWORD *)v36;
    v37 = *(_QWORD *)(v36 + 8);
    v39 = *(void **)(v36 + 16);
    v40 = *(_BYTE *)(v36 + 24);
    if ((v46 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_23B9894A0(v38, v37, v39);
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = *(_QWORD *)(v7 + 48) + 24 * v17;
    *(_QWORD *)v18 = v33;
    *(_QWORD *)(v18 + 8) = v34;
    *(_BYTE *)(v18 + 16) = v35;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v38;
    *(_QWORD *)(v19 + 8) = v37;
    v13 = v47;
    *(_QWORD *)(v19 + 16) = v39;
    *(_BYTE *)(v19 + 24) = v40;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v42;
  v23 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v41 = 1 << *(_BYTE *)(v5 + 32);
  if (v41 >= 64)
    bzero(v23, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v41;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23BB4C818(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592D8);
  v36 = a2;
  v6 = sub_23BB8AFF4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_23BB8B240();
    sub_23BB8A808();
    result = sub_23BB8B270();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23BB4CB2C(uint64_t a1, int a2)
{
  return sub_23BB4CB54(a1, a2, type metadata accessor for SessionFollowerState, &qword_256A59320);
}

uint64_t sub_23BB4CB40(uint64_t a1, int a2)
{
  return sub_23BB4CB54(a1, a2, type metadata accessor for SessionFollowingState, &qword_256A5E9D0);
}

uint64_t sub_23BB4CB54(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v50 = (uint64_t)&v45 - v10;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v12 = sub_23BB8AFF4();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v47 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v45 = v4;
  v46 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46)
      break;
    v26 = v47;
    v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v46)
        goto LABEL_34;
      v27 = v47[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          v6 = v45;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v46)
              goto LABEL_34;
            v27 = v47[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v11 + 56);
    v30 = v11;
    v31 = *(_QWORD *)(v11 + 48) + 24 * v24;
    v32 = *(_QWORD *)v31;
    v33 = *(_QWORD *)(v31 + 8);
    v34 = *(_BYTE *)(v31 + 16);
    v35 = *(_QWORD *)(v48 + 72);
    v36 = v29 + v35 * v24;
    if ((v49 & 1) != 0)
    {
      sub_23B989CA4(v36, v50, v51);
    }
    else
    {
      sub_23B989CE8(v36, v50, v51);
      swift_bridgeObjectRetain();
    }
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v37 = -1 << *(_BYTE *)(v13 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v18 + 8 * (v38 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v18 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v18 + 8 * v39);
      }
      while (v43 == -1);
      v21 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = *(_QWORD *)(v13 + 48) + 24 * v21;
    *(_QWORD *)v22 = v32;
    *(_QWORD *)(v22 + 8) = v33;
    *(_BYTE *)(v22 + 16) = v34;
    result = sub_23B989CA4(v50, *(_QWORD *)(v13 + 56) + v35 * v21, v51);
    ++*(_QWORD *)(v13 + 16);
    v11 = v30;
  }
  swift_release();
  v6 = v45;
  v26 = v47;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v44 = 1 << *(_BYTE *)(v11 + 32);
  if (v44 >= 64)
    bzero(v26, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v44;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_23BB4CEF4(uint64_t a1, int a2)
{
  return sub_23BB4CB54(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
}

uint64_t sub_23BB4CF08(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;
  char *v45;
  uint64_t v46;

  v3 = v2;
  v46 = sub_23BB88984();
  v5 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v6);
  v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59308);
  v44 = a2;
  v9 = sub_23BB8AFF4();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v41 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v43 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v42 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v42)
          goto LABEL_34;
        v23 = v43[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v42)
            goto LABEL_34;
          v23 = v43[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v42)
            {
LABEL_34:
              swift_release();
              v3 = v41;
              if ((v44 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v8 + 32);
                if (v39 >= 64)
                  bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v43 = -1 << v39;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v23 = v43[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v17 >= v42)
                  goto LABEL_34;
                v23 = v43[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = *(_QWORD *)(v8 + 56);
      v26 = v8;
      v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
      v29 = *v27;
      v28 = v27[1];
      v30 = *(_QWORD *)(v5 + 72);
      v31 = v25 + v30 * v21;
      if ((v44 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v45, v31, v46);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v45, v31, v46);
        swift_bridgeObjectRetain();
      }
      sub_23BB8B240();
      sub_23BB8A808();
      result = sub_23BB8B270();
      v32 = -1 << *(_BYTE *)(v10 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v15 + 8 * v34);
        }
        while (v38 == -1);
        v18 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
      *v19 = v29;
      v19[1] = v28;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v45, v46);
      ++*(_QWORD *)(v10 + 16);
      v8 = v26;
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

unint64_t sub_23BB4D270(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v39;
  char v40;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593A8);
  v37 = a2;
  v5 = sub_23BB8AFF4();
  v6 = (_QWORD *)v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v33 = (_QWORD *)(v4 + 64);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 64);
    v32 = (unint64_t)(v7 + 63) >> 6;
    v35 = v5 + 64;
    result = swift_retain();
    v11 = 0;
    v34 = v6;
    v36 = v4;
    while (1)
    {
      if (v9)
      {
        v38 = (v9 - 1) & v9;
        v39 = v11;
        v13 = __clz(__rbit64(v9)) | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v14 >= v32)
          goto LABEL_25;
        v15 = v33[v14];
        v16 = v11 + 1;
        if (!v15)
        {
          v16 = v11 + 2;
          if (v11 + 2 >= v32)
            goto LABEL_25;
          v15 = v33[v16];
          if (!v15)
          {
            v17 = v11 + 3;
            if (v11 + 3 >= v32)
            {
LABEL_25:
              swift_release();
              if ((v37 & 1) != 0)
              {
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v15 = v33[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_32;
                if (v16 >= v32)
                  goto LABEL_25;
                v15 = v33[v16];
                ++v17;
                if (v15)
                  goto LABEL_20;
              }
            }
            v16 = v11 + 3;
          }
        }
LABEL_20:
        v38 = (v15 - 1) & v15;
        v39 = v16;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      v18 = *(_QWORD *)(v4 + 56);
      v19 = *(_QWORD *)(v4 + 48) + 72 * v13;
      v21 = *(_QWORD *)v19;
      v20 = *(_QWORD *)(v19 + 8);
      v23 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v19 + 24);
      v24 = *(_QWORD *)(v19 + 32);
      v25 = *(_QWORD *)(v19 + 40);
      v40 = *(_BYTE *)(v19 + 48);
      v26 = *(_QWORD *)(v19 + 56);
      v27 = *(_BYTE *)(v19 + 64);
      v28 = *(void **)(v18 + 8 * v13);
      if ((v37 & 1) == 0)
      {
        v29 = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      sub_23BB8B258();
      if (v25)
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8B264();
      sub_23BB8B24C();
      sub_23BB8B270();
      result = sub_23BB8AD9C();
      *(_QWORD *)(v35 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v6 = v34;
      v12 = v34[6] + 72 * result;
      v11 = v39;
      *(_QWORD *)v12 = v21;
      *(_QWORD *)(v12 + 8) = v20;
      *(_QWORD *)(v12 + 16) = v23;
      *(_QWORD *)(v12 + 24) = v22;
      *(_QWORD *)(v12 + 32) = v24;
      *(_QWORD *)(v12 + 40) = v25;
      *(_BYTE *)(v12 + 48) = v40;
      *(_QWORD *)(v12 + 56) = v26;
      *(_BYTE *)(v12 + 64) = v27;
      *(_QWORD *)(v34[7] + 8 * result) = v28;
      ++v34[2];
      v4 = v36;
      v9 = v38;
    }
  }
  result = swift_release();
  *v31 = v6;
  return result;
}

uint64_t sub_23BB4D62C(uint64_t a1, char a2)
{
  return sub_23BB4D638(a1, a2, &qword_256A63F28);
}

uint64_t sub_23BB4D638(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_23BB8AFF4();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23BB8B240();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_23BB4D904()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BB4D964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB4D9B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BB4D9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BB4DA58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A613E0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B97C964;
  return sub_23BB48A04(a1, v5, v6, v7, v8);
}

uint64_t sub_23BB4DAF0()
{
  return sub_23BB4DF6C();
}

uint64_t sub_23BB4DB04(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21[4];

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_getKeyPath();
    v10 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
    v21[1] = v2;
    v11 = sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
    sub_23BB88A20();
    swift_release();
    v12 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v12, v4);
    v13 = sub_23BB891AC();
    v14 = sub_23BB8ABEC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v20[1] = v10;
      v17 = v16;
      v21[0] = v16;
      v20[0] = v11;
      *(_DWORD *)v15 = 136315138;
      v20[2] = sub_23BB7B69C(0xD00000000000003BLL, 0x800000023BB9AC00, v21);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v13, v14, "ContactsProvider: %s - isEmpty", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v17, -1, -1);
      MEMORY[0x24260D9B4](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    swift_getKeyPath();
    v21[0] = v2;
    sub_23BB88A20();
    swift_release();
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__valuePublisher))
    {
      swift_retain();
      sub_23BB8AA78();
      swift_release();
    }
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath, v19);
    v20[-2] = v2;
    v20[-1] = 0;
    v21[0] = v2;
    sub_23BB88A14();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BB4DE10(uint64_t a1)
{
  uint64_t result;

  result = sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23BB4DE4C()
{
  return type metadata accessor for ContactsProvider();
}

void sub_23BB4DE54()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BB4DF14(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ContactsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactsProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_23BB4DF14(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A63E80)
  {
    v2 = sub_23B9900F8();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for ContactsProvider.Subscription, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A63E80);
  }
}

uint64_t sub_23BB4DF6C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__valuePublisher) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_23BB4DFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB4DFF4()
{
  uint64_t v0;

  return sub_23BB473EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BB4E00C()
{
  return sub_23BB47394();
}

ValueMetadata *type metadata accessor for CustomLabelAndIconLabelStyle()
{
  return &type metadata for CustomLabelAndIconLabelStyle;
}

uint64_t sub_23BB4E030()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB4E040@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t KeyPath;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  char *v30;

  v30 = a1;
  v1 = sub_23BB89A34();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F38);
  MEMORY[0x24BDAC7A8](v29, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v29 - v11;
  v13 = sub_23BB89A1C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v29 - v20;
  sub_23BB89A28();
  sub_23BB89A40();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v8, v5, v1);
  v23 = &v8[*(int *)(v29 + 36)];
  *(_QWORD *)v23 = KeyPath;
  v23[8] = 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  sub_23BB4E2A0((uint64_t)v8, (uint64_t)v12);
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v17, v21, v13);
  sub_23BB4E2E8((uint64_t)v12, (uint64_t)v8);
  v25 = v30;
  v24(v30, v17, v13);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F40);
  sub_23BB4E2E8((uint64_t)v8, (uint64_t)&v25[*(int *)(v26 + 48)]);
  sub_23BB4E330((uint64_t)v12);
  v27 = *(void (**)(char *, uint64_t))(v14 + 8);
  v27(v21, v13);
  sub_23BB4E330((uint64_t)v8);
  return ((uint64_t (*)(char *, uint64_t))v27)(v17, v13);
}

uint64_t sub_23BB4E24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_23BB89788();
  *(_QWORD *)(a1 + 8) = 0x4010000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F30);
  return sub_23BB4E040((char *)(a1 + *(int *)(v2 + 44)));
}

uint64_t sub_23BB4E2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB4E2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB4E330(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A63F38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23BB4E374()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A63F48;
  if (!qword_256A63F48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A63F50);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_256A63F48);
  }
  return result;
}

uint64_t Handle.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static Handle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23BB8B1A4();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

FindMyUICore::Handle __swiftcall Handle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  unint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  void *v14;
  FindMyUICore::Handle::Kind v15;
  char v16;
  BOOL v17;
  FindMyUICore::Handle result;

  object = (unint64_t)rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v5 = sub_23BB8A7E4();
  v7 = v6;
  v8 = HIBYTE(object) & 0xF;
  if ((object & 0x2000000000000000) == 0)
    v8 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    sub_23BA44A58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23BB8C510;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 64) = sub_23B9A5C8C();
    *(_QWORD *)(v9 + 32) = 0xD000000000000029;
    *(_QWORD *)(v9 + 40) = 0x800000023BB9A7A0;
    v10 = (void *)sub_23BB8ABB0();
    v11 = (void *)sub_23BB8A784();
    v12 = objc_msgSend(v10, sel_evaluateWithObject_, v11);

    if (v12)
    {
      v13 = swift_bridgeObjectRelease();
      v16 = 1;
    }
    else
    {
      v17 = sub_23BB4E730(countAndFlagsBits, object);
      v13 = swift_bridgeObjectRelease();
      if (v17)
        v16 = 0;
      else
        v16 = 2;
    }
  }
  else
  {
    v13 = swift_bridgeObjectRelease();
    v16 = 2;
  }
  *(_QWORD *)v4 = v5;
  *(_QWORD *)(v4 + 8) = v7;
  *(_BYTE *)(v4 + 16) = v16;
  result.rawValue._object = v14;
  result.rawValue._countAndFlagsBits = v13;
  result.kind = v15;
  return result;
}

uint64_t Handle.debugDescription.getter()
{
  sub_23BB8A7D8();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  return 91;
}

Swift::Void __swiftcall DefaultStringInterpolation.appendInterpolation(_:)(FindMyUICore::Handle a1)
{
  sub_23BB8A7D8();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
}

void Handle.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

BOOL sub_23BB4E730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void (*v15)(char *, uint64_t);
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  _QWORD v23[2];

  v4 = sub_23BB886D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v23 - v11;
  sub_23BB886A8();
  sub_23BB886C0();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_controlCharacterSet);
  sub_23BB886B4();

  sub_23BB886CC();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v16 = objc_msgSend(v13, sel_whitespaceAndNewlineCharacterSet);
  sub_23BB886B4();

  sub_23BB886CC();
  v15(v8, v4);
  v23[0] = a1;
  v23[1] = a2;
  sub_23B9967E0();
  v23[0] = sub_23BB8ACD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
  sub_23BB16F34();
  v17 = sub_23BB8A730();
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  v21 = v20 == 0;
  v15(v12, v4);
  return v21;
}

BOOL static Handle.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Handle.Kind.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t Handle.Kind.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t Handle.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B24C();
}

uint64_t Handle.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

BOOL sub_23BB4EA48(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23BB8B1A4();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t static Handle.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_23BB8B1A4();
}

Swift::Void __swiftcall DefaultStringInterpolation.appendInterpolation(_:)(FindMyUICore::Handle_optional a1)
{
  if (*(_QWORD *)(a1.value.rawValue._countAndFlagsBits + 8))
  {
    sub_23BB8A7D8();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    swift_bridgeObjectRetain();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BB8A82C();
  }
}

unint64_t sub_23BB4EBE0()
{
  unint64_t result;

  result = qword_256A63F58;
  if (!qword_256A63F58)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Handle.Kind, &type metadata for Handle.Kind);
    atomic_store(result, (unint64_t *)&qword_256A63F58);
  }
  return result;
}

unint64_t sub_23BB4EC28()
{
  unint64_t result;

  result = qword_256A63F60;
  if (!qword_256A63F60)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_256A63F60);
  }
  return result;
}

ValueMetadata *type metadata accessor for Handle()
{
  return &type metadata for Handle;
}

uint64_t storeEnumTagSinglePayload for Handle.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BB4ECC8 + 4 * byte_23BB975ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BB4ECFC + 4 * byte_23BB975E8[v4]))();
}

uint64_t sub_23BB4ECFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB4ED04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB4ED0CLL);
  return result;
}

uint64_t sub_23BB4ED18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB4ED20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BB4ED24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB4ED2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind()
{
  return &type metadata for Handle.Kind;
}

uint64_t sub_23BB4ED4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(a1, 1) == 1)
  {
    sub_23B989D60(a1, &qword_256A593D8);
    sub_23BA772F0(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_23B989D60((uint64_t)v11, &qword_256A593D8);
  }
  else
  {
    sub_23B989CA4(a1, (uint64_t)v15, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_23BAAE8A4((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23BB4EEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5F0B0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(a1, 1) == 1)
  {
    sub_23B989D60(a1, qword_256A5F0B0);
    sub_23BA77420(a2, a3, a4, (uint64_t)v13);
    swift_bridgeObjectRelease();
    return sub_23B989D60((uint64_t)v13, qword_256A5F0B0);
  }
  else
  {
    sub_23B989CA4(a1, (uint64_t)v17, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v5;
    *v5 = 0x8000000000000000;
    sub_23BAAF0E8((uint64_t)v17, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v5 = v22;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t PeopleRelationshipsProvider.data.getter()
{
  return sub_23BB4F998();
}

uint64_t sub_23BB4F044(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t PeopleRelationshipsProvider.didAddNewFollowingWithIdentifierCallback.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A14();
  sub_23B9BD73C(a1);
  return swift_release();
}

uint64_t PeopleRelationshipsProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  return sub_23B989EFC(v3, a1, &qword_256A595D8);
}

uint64_t sub_23BB4F1AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  return sub_23B989EFC(v4, a2, &qword_256A595D8);
}

uint64_t sub_23BB4F24C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595D8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B989EFC(a1, (uint64_t)v7, &qword_256A595D8);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23BB501D0();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60((uint64_t)v7, &qword_256A595D8);
}

uint64_t PeopleRelationshipsProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A595D8);
}

uint64_t sub_23BB4F3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  sub_23BB544E0(a2, v3);
  return swift_endAccess();
}

void (*PeopleRelationshipsProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BB4F524;
}

void sub_23BB4F524(_QWORD **a1)
{
  sub_23BB4F91C(a1);
}

uint64_t PeopleRelationshipsProvider.didAddNewFollowingWithIdentifierCallback.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didAddNewFollowingWithIdentifierCallback);
  swift_beginAccess();
  v2 = *v1;
  sub_23B9B7598(*v1);
  return v2;
}

uint64_t sub_23BB4F5D0@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v4 = (uint64_t *)(v3
                 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didAddNewFollowingWithIdentifierCallback);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  if (v5)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_23BB01A78;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  *a2 = v8;
  a2[1] = (uint64_t (*)())v7;
  return sub_23B9B7598(v5);
}

uint64_t sub_23BB4F6A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BB01A78;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23BB501D0();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

uint64_t sub_23BB4F7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(a1
                 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didAddNewFollowingWithIdentifierCallback);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a2;
  v5[1] = a3;
  sub_23B9B7598(a2);
  return sub_23B9BD73C(v6);
}

void (*PeopleRelationshipsProvider.didAddNewFollowingWithIdentifierCallback.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BB4F910;
}

void sub_23BB4F910(_QWORD **a1)
{
  sub_23BB4F91C(a1);
}

void sub_23BB4F91C(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t sub_23BB4F984()
{
  return sub_23BB4F998();
}

uint64_t sub_23BB4F998()
{
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB4FA20()
{
  swift_getKeyPath();
  sub_23BB501D0();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB4FAC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__loadingStateResetTaskBySubscription);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t PeopleRelationshipsProvider.isLoading.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__isLoading);
}

uint64_t sub_23BB4FBA0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__isLoading);
  return result;
}

uint64_t sub_23BB4FC1C()
{
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BB4FCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(uint64_t);
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v7 = v0 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
  v28 = v0;
  v8 = sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v9 = v0 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v9, v2);
  swift_retain_n();
  v10 = sub_23BB891AC();
  v11 = sub_23BB8ABC8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v27 = v21;
    v24 = v8;
    *(_DWORD *)v12 = 136315138;
    v20[1] = v12 + 4;
    swift_getKeyPath();
    v22 = v2;
    v26 = v1;
    sub_23BB88A20();
    swift_release();
    swift_beginAccess();
    type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    sub_23BB5401C();
    v23 = v7;
    swift_bridgeObjectRetain();
    v13 = sub_23BB8A6C4();
    v15 = v14;
    swift_bridgeObjectRelease();
    v25 = sub_23BB7B69C(v13, v15, &v27);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v10, v11, "PeopleRelationshipsProvider: data - %s", v12, 0xCu);
    v16 = v21;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v16, -1, -1);
    MEMORY[0x24260D9B4](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v22);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  swift_getKeyPath();
  v27 = v1;
  sub_23BB88A20();
  result = swift_release();
  v18 = *(void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback);
  if (v18)
  {
    v19 = swift_retain();
    v18(v19);
    return sub_23B9BD73C((uint64_t)v18);
  }
  return result;
}

uint64_t sub_23BB4FFEC()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback);
  sub_23B9B7598(v1);
  return v1;
}

uint64_t sub_23BB50078@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BB5008C(a1, &OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data, a2);
}

uint64_t sub_23BB5008C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB5012C()
{
  swift_getKeyPath();
  sub_23BB501D0();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23BB501D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A595D0;
  if (!qword_256A595D0)
  {
    v1 = type metadata accessor for PeopleRelationshipsProvider();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleRelationshipsProvider, v1);
    atomic_store(result, (unint64_t *)&qword_256A595D0);
  }
  return result;
}

uint64_t type metadata accessor for PeopleRelationshipsProvider()
{
  uint64_t result;

  result = qword_256A64058;
  if (!qword_256A64058)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB50264()
{
  uint64_t v0;

  return sub_23BB4F3D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BB50284(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_23BB4FCAC();
}

uint64_t sub_23BB502FC()
{
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  return swift_retain();
}

uint64_t sub_23BB50374@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__valuePublisher);
  return swift_retain();
}

uint64_t sub_23BB503F4()
{
  swift_getKeyPath();
  sub_23BB501D0();
  swift_retain();
  sub_23BB88A14();
  swift_release();
  return swift_release();
}

uint64_t sub_23BB50494@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback + 8);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23BB01A78;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23B9B7598(v4);
}

uint64_t sub_23BB50550(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BB01A78;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23BB501D0();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

uint64_t PeopleRelationshipsProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PeopleRelationshipsProvider.init(dependencies:)(a1);
  return v2;
}

_OWORD *PeopleRelationshipsProvider.init(dependencies:)(__int128 *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  __int128 v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  void (**v27)();
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char *v38;

  v2 = v1;
  v4 = sub_23BB889CC();
  MEMORY[0x24BDAC7A8](v4, v5);
  v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v35 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A595D8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 36);
  *(_QWORD *)&v19[v21] = sub_23B97EDE0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v19[v16[10]] = MEMORY[0x24BEE4B08];
  v19[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23 = *a1;
  v36 = a1[1];
  v37 = v23;
  v35 = a1[2];
  v22(v19, v15, v7);
  v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v24(v11, v15, v7);
  v25 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v26 = swift_allocObject();
  v24((char *)(v26 + v25), v11, v7);
  v27 = (void (**)())&v19[v16[12]];
  *v27 = sub_23BB53D48;
  v27[1] = (void (*)())v26;
  sub_23B990D24((uint64_t)v19, (uint64_t)v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage, &qword_256A595D8);
  v28 = (_QWORD *)((char *)v2
                 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didAddNewFollowingWithIdentifierCallback);
  *v28 = 0;
  v28[1] = 0;
  v29 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v2
            + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__loadingStateResetTaskBySubscription) = sub_23B97EAC0(MEMORY[0x24BEE4AF8]);
  v30 = OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider_taskQueue;
  v31 = (uint64_t)v38;
  sub_23BB889C0();
  type metadata accessor for SerialTaskQueue(0);
  swift_allocObject();
  *(_QWORD *)((char *)v2 + v30) = sub_23B9C7D14(0xD000000000000020, 0x800000023BB9D0E0, v31);
  *((_BYTE *)v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__isLoading) = 0;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data) = sub_23B97EC00(v29);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__valuePublisher) = 0;
  v32 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback);
  *v32 = 0;
  v32[1] = 0;
  sub_23BB88A44();
  v33 = v36;
  v2[1] = v37;
  v2[2] = v33;
  v2[3] = v35;
  return v2;
}

uint64_t sub_23BB50990(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (**v11)(_QWORD *);
  void (*v12)(_QWORD *);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;

  v2 = v1;
  v21 = sub_23BB891C4();
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  v10 = *((_BYTE *)a1 + 16);
  swift_getKeyPath();
  v26 = v2;
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v11 = (void (**)(_QWORD *))(v2
                                       + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didAddNewFollowingWithIdentifierCallback);
  swift_beginAccess();
  v12 = *v11;
  if (*v11)
  {
    v24[0] = v8;
    v24[1] = v9;
    v25 = v10;
    swift_retain();
    v12(v24);
    return sub_23B9BD73C((uint64_t)v12);
  }
  else
  {
    swift_getKeyPath();
    v24[0] = v2;
    sub_23BB88A20();
    swift_release();
    v14 = v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
    swift_beginAccess();
    v15 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v14, v21);
    v16 = sub_23BB891AC();
    v17 = sub_23BB8ABC8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v18 = 136315138;
      v22 = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9D180, &v23);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v16, v17, "SubscriptionManagerStorage: empty callback - %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v19, -1, -1);
      MEMORY[0x24260D9B4](v18, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v15);
  }
}

uint64_t sub_23BB50C1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[6] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[7] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64148);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_23BB8A9F4();
  v1[14] = sub_23BB8A9E8();
  v1[15] = sub_23BB8A988();
  v1[16] = v4;
  return swift_task_switch();
}

uint64_t sub_23BB50CF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v1 = v0[6];
  swift_getKeyPath();
  v2 = OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
  v0[2] = v1;
  v0[17] = v2;
  v0[18] = sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v3 = v0[6];
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  v0[3] = v3;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 1;
  v0[4] = v3;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  v8 = (uint64_t (*)(_QWORD))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v0[19] = v6;
  *v6 = v0;
  v6[1] = sub_23BB50EB0;
  return v8(v0[12]);
}

uint64_t sub_23BB50EB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB50F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v19 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v20 = v5;
  v6 = *(_QWORD *)(v0 + 48);
  swift_release();
  v7 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = v3;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v11 = v2;
  v10(v2, v1, v4);
  swift_retain();
  v12 = sub_23BB8A9E8();
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v11, v4);
  *(_QWORD *)(v14 + ((v19 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  v16 = sub_23B989F54(v20, (uint64_t)&unk_256A64158, v14);
  swift_getKeyPath();
  v17 = swift_task_alloc();
  *(_QWORD *)(v17 + 16) = v6;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v0 + 40) = v6;
  sub_23BB88A14();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB51118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[10] = a4;
  v5[11] = a5;
  v6 = sub_23BB891C4();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v7 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64160);
  v5[20] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64168);
  v5[21] = v8;
  v5[22] = *(_QWORD *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = sub_23BB8A9F4();
  v5[25] = sub_23BB8A9E8();
  v5[26] = sub_23BB8A988();
  v5[27] = v9;
  return swift_task_switch();
}

uint64_t sub_23BB51244()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64148);
  sub_23BB8AA54();
  swift_beginAccess();
  v0[28] = 0;
  v0[29] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[30] = v1;
  *v1 = v0;
  v1[1] = sub_23BB512F8;
  return sub_23BB8AA60();
}

uint64_t sub_23BB512F8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BB5134C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 48))(v1, 1, *(_QWORD *)(v0 + 120)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23B989CA4(v1, *(_QWORD *)(v0 + 152), type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v19 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 168);
    v21 = *(_QWORD *)(v0 + 152);
    swift_release();
    sub_23B989D9C(v21, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_7;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 96);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 64) = v3;
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v8 = v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v8, v7);
  sub_23B989CE8(v32, v4, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 144);
  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 136);
    v30 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 112);
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v34 = v15;
    *(_DWORD *)v14 = 136315138;
    sub_23B989CE8(v12, v13, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    v16 = sub_23BB8A7D8();
    *(_QWORD *)(v14 + 4) = sub_23BB7B69C(v16, v17, &v34);
    swift_bridgeObjectRelease();
    sub_23B989D9C(v12, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    _os_log_impl(&dword_23B979000, v9, v10, "PeopleRelationshipsProvider: change - %s", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v31);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 96);
    sub_23B989D9C(*(_QWORD *)(v0 + 144), type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 152);
  sub_23BB51760(v27);
  swift_getKeyPath();
  v28 = swift_task_alloc();
  *(_QWORD *)(v28 + 16) = v3;
  *(_BYTE *)(v28 + 24) = 0;
  *(_QWORD *)(v0 + 72) = v3;
  sub_23BB88A14();
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_23B989D9C(v27, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
  *(_QWORD *)(v0 + 224) = v26;
  *(_QWORD *)(v0 + 232) = sub_23BB8A9E8();
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v29;
  *v29 = v0;
  v29[1] = sub_23BB512F8;
  return sub_23BB8AA60();
}

uint64_t sub_23BB51760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t *v90;
  uint64_t v91;
  int EnumCaseMultiPayload;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v124 = (char *)a1;
  v121 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v117 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121, v1);
  v119 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  MEMORY[0x24BDAC7A8](v122, v3);
  v114 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v118 = (char *)&v102 - v7;
  MEMORY[0x24BDAC7A8](v8, v9);
  v120 = (uint64_t)&v102 - v10;
  v125 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v123 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125, v11);
  v113 = (uint64_t)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v115 = (uint64_t)&v102 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5F0B0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v116 = (uint64_t)&v102 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v102 - v29;
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v102 - v33;
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v102 - v37;
  v39 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  MEMORY[0x24BDAC7A8](v39, v40);
  v42 = (char *)&v102 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
  MEMORY[0x24BDAC7A8](v43, v44);
  v46 = (char *)&v102 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47, v48);
  v50 = (char *)&v102 - v49;
  sub_23B989CE8((uint64_t)v124, (uint64_t)v42, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    v103 = v34;
    v112 = v30;
    v107 = (uint64_t *)v46;
    v106 = v26;
    v108 = v43;
    v51 = v125;
    v124 = v38;
    v105 = v19;
    sub_23B989CA4((uint64_t)v42, (uint64_t)v50, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
    v52 = *(_QWORD *)v50;
    v53 = *((_QWORD *)v50 + 1);
    v54 = v50[16];
    swift_getKeyPath();
    v55 = v126;
    v56 = v126 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
    v127 = v126;
    v57 = sub_23BB501D0();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v58 = (uint64_t *)(v55 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
    swift_beginAccess();
    v59 = *v58;
    v60 = *(_QWORD *)(*v58 + 16);
    v111 = v56;
    v110 = v57;
    v109 = v58;
    if (v60)
    {
      swift_bridgeObjectRetain();
      v61 = sub_23B9849D0(v52, v53, v54);
      v63 = v123;
      if ((v62 & 1) != 0)
      {
        v64 = v116;
        sub_23B989CE8(*(_QWORD *)(v59 + 56) + *(_QWORD *)(v123 + 72) * v61, v116, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
        v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
        v66 = v64;
        v67 = 0;
      }
      else
      {
        v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56);
        v64 = v116;
        v66 = v116;
        v67 = 1;
      }
      v75 = v51;
      v104 = v65;
      v65(v66, v67, 1, v51);
      v76 = v64;
      swift_bridgeObjectRelease();
    }
    else
    {
      v63 = v123;
      v74 = v116;
      v75 = v51;
      v104 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56);
      v104(v116, 1, 1, v51);
      v76 = v74;
    }
    swift_bridgeObjectRelease();
    v78 = (uint64_t)v118;
    v77 = (uint64_t)v119;
    v79 = v121;
    v80 = (uint64_t)v124;
    v81 = v117;
    v82 = (uint64_t)v112;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v76, 1, v75))
    {
      sub_23B989D60(v76, qword_256A5F0B0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v80, 1, 1, v79);
      v83 = (uint64_t)v106;
    }
    else
    {
      v84 = v115;
      sub_23B989CE8(v76, v115, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      sub_23B989D60(v76, qword_256A5F0B0);
      v85 = v84;
      v86 = v113;
      sub_23B989CE8(v85, v113, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v87 = (uint64_t)v103;
        sub_23B989CA4(v86, (uint64_t)v103, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
        v88 = 0;
        v83 = (uint64_t)v106;
        v82 = (uint64_t)v112;
      }
      else
      {
        v88 = 1;
        v83 = (uint64_t)v106;
        v82 = (uint64_t)v112;
        v87 = (uint64_t)v103;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v87, v88, 1, v79);
      sub_23B990D24(v87, v80, &qword_256A5AA60);
      sub_23B989D9C(v115, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    }
    sub_23B989EFC(v80, v82, &qword_256A5AA60);
    v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
    if (v89(v82, 1, v79) == 1)
    {
      sub_23B989D60(v82, &qword_256A5AA60);
      LODWORD(v119) = 0;
      v90 = v107;
      goto LABEL_23;
    }
    v91 = v120;
    sub_23B989CE8(v82 + *(int *)(v79 + 24), v120, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    sub_23B989D9C(v82, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    sub_23B989CE8(v91, v78, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      v93 = 0;
      v94 = 0;
      if (EnumCaseMultiPayload != 1)
        goto LABEL_22;
    }
    else
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
      sub_23B989D60(v78 + *(int *)(v95 + 48), (uint64_t *)&unk_256A5E6B0);
      v93 = 1;
    }
    sub_23B989D60(v78, (uint64_t *)&unk_256A5E6B0);
    v94 = v93;
LABEL_22:
    LODWORD(v119) = v94;
    sub_23B989D9C(v120, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    v90 = v107;
LABEL_23:
    sub_23B989EFC(v80, v83, &qword_256A5AA60);
    sub_23B989CE8((uint64_t)v50, (uint64_t)v90, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
    if (v89(v83, 1, v79) == 1)
    {
      v96 = (uint64_t)v90;
      v98 = *v90;
      v97 = v90[1];
      v99 = v83;
      v100 = *(_BYTE *)(v96 + 16);
      swift_bridgeObjectRetain();
      sub_23B989D9C(v96, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
      type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)v77 = v98;
      *(_QWORD *)(v77 + 8) = v97;
      *(_BYTE *)(v77 + 16) = v100;
      v101 = v77 + *(int *)(v79 + 28);
      *(_QWORD *)v101 = 0;
      *(_BYTE *)(v101 + 8) = 1;
      sub_23B989D60(v99, &qword_256A5AA60);
    }
    else
    {
      sub_23B989D9C((uint64_t)v90, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
      sub_23B989CA4(v83, v77, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    }
    __asm { BR              X10 }
  }
  v68 = *(_QWORD *)v42;
  v69 = *((_QWORD *)v42 + 1);
  *v19 = 0;
  v70 = v42[16];
  v71 = v125;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v19, 0, 1, v71);
  swift_getKeyPath();
  v72 = v126;
  v127 = v126;
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v127 = v72;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  sub_23BB4EEB4((uint64_t)v19, v68, v69, v70);
  swift_endAccess();
  sub_23BB4FCAC();
  v127 = v72;
  swift_getKeyPath();
  sub_23BB88A2C();
  return swift_release();
}

uint64_t sub_23BB524B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  sub_23BB8A9F4();
  v1[6] = sub_23BB8A9E8();
  v1[7] = sub_23BB8A988();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_23BB52520()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = v0[5];
  swift_getKeyPath();
  v0[2] = v1;
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v2 = v0[5];
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 0;
  v0[3] = v2;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = 0;
  v0[4] = v2;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))(**(int **)(v2 + 32) + *(_QWORD *)(v2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_23BA494AC;
  return v7();
}

uint64_t sub_23BB526CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v52 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5F0B0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v49 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v48 - v13;
  v15 = *(_QWORD *)(a1 + 8);
  v55 = *(_QWORD *)a1;
  v16 = *(unsigned __int8 *)(a1 + 16);
  v17 = (*(uint64_t (**)(uint64_t))(v2 + 48))(v12);
  v50 = v18;
  v51 = v17;
  swift_getKeyPath();
  v59 = v2;
  v19 = sub_23BB501D0();
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__loadingStateResetTaskBySubscription);
  swift_beginAccess();
  if (*(_QWORD *)(*v20 + 16))
  {
    swift_bridgeObjectRetain();
    sub_23B9849D0(v55, v15, v16);
    if ((v21 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8AA78();
      swift_release();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_getKeyPath();
  v58 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v58 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v53 = v20;
  sub_23BA7752C(v55, v15, v16);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  v58 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_getKeyPath();
  v58 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
  swift_beginAccess();
  v23 = *v22;
  v24 = *(_QWORD *)(*v22 + 16);
  v54 = v16;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v25 = sub_23B9849D0(v55, v15, v16);
    if ((v26 & 1) != 0)
    {
      v27 = v25;
      v28 = *(_QWORD *)(v23 + 56);
      v29 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
      v48 = v19;
      v30 = (uint64_t)v14;
      v31 = *(_QWORD *)(v29 - 8);
      sub_23B989CE8(v28 + *(_QWORD *)(v31 + 72) * v27, v30, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      v32 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56);
      v14 = (char *)v30;
      v32(v30, 0, 1, v29);
    }
    else
    {
      v29 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 1, 1, v29);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 1, 1, v29);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v33 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v14, 1, v29) != 1
    && swift_getEnumCaseMultiPayload() == 1)
  {
    return sub_23B989D9C((uint64_t)v14, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  }
  v35 = v49;
  *v49 = 1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v29);
  swift_getKeyPath();
  v57 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v57 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v36 = (uint64_t)v35;
  v37 = v55;
  v38 = v54;
  sub_23BB4EEB4(v36, v55, v15, v54);
  swift_endAccess();
  sub_23BB4FCAC();
  v57 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v39 = sub_23BB8AA18();
  v40 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v52, 1, 1, v39);
  sub_23BB8A9F4();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v41 = sub_23BB8A9E8();
  v42 = swift_allocObject();
  v43 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v43;
  v44 = v50;
  *(_QWORD *)(v42 + 32) = v51;
  *(_QWORD *)(v42 + 40) = v44;
  *(_QWORD *)(v42 + 48) = v2;
  *(_QWORD *)(v42 + 56) = v37;
  *(_QWORD *)(v42 + 64) = v15;
  *(_BYTE *)(v42 + 72) = v38;
  v45 = sub_23B989F54(v40, (uint64_t)&unk_256A64178, v42);
  swift_getKeyPath();
  v57 = v2;
  sub_23BB88A20();
  swift_release();
  v57 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v46 = v53;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = *v46;
  *v46 = 0x8000000000000000;
  sub_23BAAF434(v45, v37, v15, v38, isUniquelyReferenced_nonNull_native);
  *v46 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v57 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  return swift_release();
}

uint64_t sub_23BB52DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  *(_BYTE *)(v8 + 57) = v13;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 80) = a4;
  v9 = sub_23BB891C4();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_23BB8AF1C();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 168) = sub_23BB8A9E8();
  *(_QWORD *)(v8 + 176) = sub_23BB8A988();
  *(_QWORD *)(v8 + 184) = v11;
  return swift_task_switch();
}

uint64_t sub_23BB52E98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = v1;
  *v1 = v0;
  v1[1] = sub_23BB52F10;
  return v3(v0[10], v0[11], 0, 0, 1);
}

uint64_t sub_23BB52F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BB52F98()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  char v6;

  v1 = *(_BYTE *)(v0 + 57);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_release();
  v5[0] = v3;
  v5[1] = v2;
  v6 = v1;
  sub_23BB53288((uint64_t)v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB53008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 64) = v4;
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v5 = v4 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_bridgeObjectRetain_n();
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABC8();
  if (os_log_type_enabled(v6, v7))
  {
    v19 = *(id *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 136);
    v9 = *(_BYTE *)(v0 + 57);
    v10 = *(_QWORD *)(v0 + 104);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v23 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v0 + 40) = v10;
    *(_QWORD *)(v0 + 48) = v8;
    *(_BYTE *)(v0 + 56) = v9;
    swift_bridgeObjectRetain();
    v13 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 72) = sub_23BB7B69C(v13, v14, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B979000, v6, v7, "PeopleLocationsProvider: loadingStateResetTaskBySubscription was cancelled - identifier: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v12, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 120);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB53288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  _BYTE *v26;
  uint64_t *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5F0B0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v25 - v10;
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(unsigned __int8 *)(a1 + 16);
  swift_getKeyPath();
  v30 = v2;
  sub_23BB501D0();
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
  swift_beginAccess();
  v27 = v15;
  v16 = *v15;
  if (*(_QWORD *)(*v15 + 16))
  {
    swift_bridgeObjectRetain();
    v28 = v14;
    v17 = sub_23B9849D0(v12, v13, v14);
    if ((v18 & 1) != 0)
    {
      v19 = v17;
      v26 = v8;
      v20 = *(_QWORD *)(v16 + 56);
      v21 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
      v25 = v13;
      v22 = *(_QWORD *)(v21 - 8);
      v8 = v26;
      sub_23B989CE8(v20 + *(_QWORD *)(v22 + 72) * v19, (uint64_t)v11, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      v13 = v25;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
    }
    else
    {
      v21 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v28;
  }
  else
  {
    v21 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
    swift_bridgeObjectRelease();
  }
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v23 = *(_QWORD *)(v21 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v21);
  if ((_DWORD)result != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return sub_23B989D9C((uint64_t)v11, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    }
    else
    {
      *v8 = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v21);
      swift_getKeyPath();
      v29 = v2;
      swift_bridgeObjectRetain();
      sub_23BB88A20();
      swift_release();
      v29 = v2;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      sub_23BB4EEB4((uint64_t)v8, v12, v13, v14);
      swift_endAccess();
      sub_23BB4FCAC();
      v29 = v2;
      swift_getKeyPath();
      sub_23BB88A2C();
      return swift_release();
    }
  }
  return result;
}

uint64_t PeopleRelationshipsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(uint64_t a1, int a2)
{
  return sub_23BB53694(a1, a2, (void (*)(_QWORD *))sub_23BB526CC, (uint64_t)&unk_250CB6130, (uint64_t)&unk_256A63FB8);
}

uint64_t sub_23BB53614(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 40) = a3;
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v4;
  *v4 = v3;
  v4[1] = sub_23BA4A340;
  return sub_23BB50C1C();
}

uint64_t PeopleRelationshipsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, int a2)
{
  return sub_23BB53694(a1, a2, (void (*)(_QWORD *))sub_23BB53288, (uint64_t)&unk_250CB6158, (uint64_t)&unk_256A63FC8);
}

uint64_t sub_23BB53694(uint64_t a1, int a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;

  v38 = a5;
  v35 = a4;
  v7 = v5;
  v36 = a2;
  v37 = sub_23BB891C4();
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v9);
  v32 = v10;
  v33 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a1 + 56);
  v15 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  while (v14)
  {
    v18 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v19 = v18 | (v17 << 6);
LABEL_20:
    v23 = *(_QWORD *)(a1 + 48) + 24 * v19;
    v24 = *(_QWORD *)(v23 + 8);
    if (v24)
    {
      v25 = *(_BYTE *)(v23 + 16);
      v39[0] = *(_QWORD *)v23;
      v39[1] = v24;
      v40 = v25;
      swift_bridgeObjectRetain();
      a3(v39);
      result = swift_bridgeObjectRelease();
    }
  }
  v20 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v20 >= v15)
    goto LABEL_22;
  v21 = *(_QWORD *)(v11 + 8 * v20);
  ++v17;
  if (v21)
    goto LABEL_19;
  v17 = v20 + 1;
  if (v20 + 1 >= v15)
    goto LABEL_22;
  v21 = *(_QWORD *)(v11 + 8 * v17);
  if (v21)
    goto LABEL_19;
  v17 = v20 + 2;
  if (v20 + 2 >= v15)
    goto LABEL_22;
  v21 = *(_QWORD *)(v11 + 8 * v17);
  if (v21)
  {
LABEL_19:
    v14 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_20;
  }
  v22 = v20 + 3;
  if (v22 >= v15)
  {
LABEL_22:
    swift_release();
    swift_getKeyPath();
    v39[0] = v5;
    sub_23BB501D0();
    sub_23BB88A20();
    swift_release();
    v26 = v5 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
    swift_beginAccess();
    v28 = v33;
    v27 = v34;
    v29 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v26, v37);
    v30 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v31 = swift_allocObject();
    *(_BYTE *)(v31 + 16) = v36 & 1;
    *(_QWORD *)(v31 + 24) = v7;
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, v28, v29);
    swift_retain();
    sub_23B9C7824(v38, v31);
    return swift_release();
  }
  v21 = *(_QWORD *)(v11 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_19;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v15)
      goto LABEL_22;
    v21 = *(_QWORD *)(v11 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23BB53954(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 40) = a3;
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v4;
  *v4 = v3;
  v4[1] = sub_23BA4A8D4;
  return sub_23BB524B4();
}

uint64_t PeopleRelationshipsProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage, &qword_256A595D8);
  sub_23B9BD73C(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didAddNewFollowingWithIdentifierCallback));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9BD73C(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PeopleRelationshipsProvider.__deallocating_deinit()
{
  PeopleRelationshipsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23BB53AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  return sub_23B989EFC(v3, a1, &qword_256A595D8);
}

uint64_t sub_23BB53B68(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A595D8);
}

void (*sub_23BB53C04(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PeopleRelationshipsProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23BB53C50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23BB501D0();
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB53CE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_23BB53D48()
{
  sub_23BB891C4();
  sub_23BB54394();
}

uint64_t sub_23BB53D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v0 + ((v2 + 32) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23B990D68;
  return sub_23BB53614(v3, v4, v5);
}

uint64_t sub_23BB53DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v0 + ((v2 + 32) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23B990D68;
  return sub_23BB53954(v3, v4, v5);
}

unint64_t sub_23BB53E7C(uint64_t a1)
{
  unint64_t result;

  result = sub_23BB501D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23BB53EA0()
{
  return type metadata accessor for PeopleRelationshipsProvider();
}

void sub_23BB53EA8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BB53F88(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PeopleRelationshipsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleRelationshipsProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_23BB53F88(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A64068[0])
  {
    v2 = sub_23B99070C();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for PeopleRelationshipsProvider.Subscription, v2, v3);
    if (!v5)
      atomic_store(v4, qword_256A64068);
  }
}

uint64_t sub_23BB53FE8()
{
  return sub_23BB54238();
}

void sub_23BB53FFC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__isLoading) = *(_BYTE *)(v0 + 24);
}

unint64_t sub_23BB5401C()
{
  unint64_t result;

  result = qword_256A64138;
  if (!qword_256A64138)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleRelationshipsProvider.Subscription.Identifier, &type metadata for PeopleRelationshipsProvider.Subscription.Identifier);
    atomic_store(result, &qword_256A64138);
  }
  return result;
}

uint64_t sub_23BB54060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v1 = v0[3];
  v2 = v0[4];
  v3 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__didChangeDataStorageCallback);
  v4 = *v3;
  *v3 = v1;
  v3[1] = v2;
  sub_23B9B7598(v1);
  return sub_23B9BD73C(v4);
}

uint64_t sub_23BB540B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB540D8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BB540FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64148);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB54190(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A64148) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B97C964;
  return sub_23BB51118(a1, v6, v7, v8, v9);
}

uint64_t sub_23BB54238()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__valuePublisher) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_23BB54278@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BB5008C(a1, &OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__loadingStateResetTaskBySubscription, a2);
}

uint64_t sub_23BB542A0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BB542D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B990D68;
  return sub_23BB52DC8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23BB54378()
{
  uint64_t v0;

  return sub_23BB4FAC0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23BB54394()
{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *oslog;
  uint64_t v4;

  oslog = sub_23BB891AC();
  v0 = sub_23BB8ABC8();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)swift_slowAlloc();
    v2 = swift_slowAlloc();
    v4 = v2;
    *(_DWORD *)v1 = 136315138;
    sub_23BB7B69C(0xD000000000000011, 0x800000023BB9B4F0, &v4);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, oslog, v0, "SubscriptionManagerStorage: empty callback - %s", v1, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v2, -1, -1);
    MEMORY[0x24260D9B4](v1, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23BB544E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB54528()
{
  uint64_t v0;

  return sub_23BB50284(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BB5454C()
{
  return sub_23BB50264();
}

void sub_23BB54560()
{
  sub_23BB53FFC();
}

uint64_t sub_23BB54574()
{
  return sub_23BAE70B8();
}

FindMyUICore::Device::ServerIdentifier __swiftcall Device.ServerIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  FindMyUICore::Device::ServerIdentifier result;

  v2 = v1;
  v3 = sub_23BB8A7E4();
  v5 = v4;
  v6 = swift_bridgeObjectRelease();
  *v2 = v3;
  v2[1] = v5;
  result.rawValue._object = v7;
  result.rawValue._countAndFlagsBits = v6;
  return result;
}

uint64_t Device.ServerIdentifier.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Device.ServerIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t Device.ServerIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t Device.ServerIdentifier.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t static Device.ServerIdentifier.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_23BB8B1A4();
}

unint64_t sub_23BB546F4()
{
  unint64_t result;

  result = qword_256A64180;
  if (!qword_256A64180)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Device.ServerIdentifier, &type metadata for Device.ServerIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A64180);
  }
  return result;
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

ValueMetadata *type metadata accessor for Device.ServerIdentifier()
{
  return &type metadata for Device.ServerIdentifier;
}

uint64_t Friend.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void __swiftcall Friend.init(mainHandle:)(FindMyUICore::Friend *__return_ptr retstr, Swift::String mainHandle)
{
  void *object;
  void *countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;

  object = mainHandle._object;
  countAndFlagsBits = (void *)mainHandle._countAndFlagsBits;
  v5 = sub_23BB886D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = (uint64_t)countAndFlagsBits;
  v10._object = object;
  Handle.init(rawValue:)(v10);
  v11 = v30;
  v12 = v31;
  v27 = v32;
  v13 = (objc_class *)sub_23BB55594(countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  if (qword_256A58DC8 != -1)
    swift_once();
  v14 = objc_msgSend((id)qword_256A64190, sel_stringFromContact_, v13);
  if (v14)
  {
    v15 = v14;
    v26 = v12;
    v16 = v11;
    v17 = sub_23BB8A7B4();
    v19 = v18;

    sub_23BB54C44();
    v21 = v20;
    if (v19)
    {
      v28 = v17;
      v29 = v19;
      sub_23BB8869C();
      sub_23B9967E0();
      v17 = sub_23BB8ACE8();
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = 0;
    }
    v11 = v16;
    v12 = v26;
  }
  else
  {
    sub_23BB54C44();
    v21 = v24;
    v17 = 0;
    v23 = 0;
  }
  retstr->prettyName.value._countAndFlagsBits = v17;
  retstr->prettyName.value._object = v23;
  retstr->mainHandle.rawValue._countAndFlagsBits = v11;
  retstr->mainHandle.rawValue._object = v12;
  retstr->mainHandle.kind = v27;
  retstr->allHandles._rawValue = v21;
  retstr->contact.super.isa = v13;
}

void __swiftcall Friend.init(contact:)(FindMyUICore::Friend_optional *__return_ptr retstr, CNContact contact)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_23BB886D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB54C44();
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(void **)(v9 + 40);
    v23 = *(_QWORD *)(v9 + 32);
    v11 = *(unsigned __int8 *)(v9 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_256A58DC8 != -1)
      swift_once();
    v12 = objc_msgSend((id)qword_256A64190, sel_stringFromContact_, contact.super.isa);
    if (v12)
    {
      v13 = v12;
      v22 = v11;
      v14 = sub_23BB8A7B4();
      v16 = v15;

      sub_23BB54C44();
      v18 = v17;
      if (v16)
      {
        v24 = v14;
        v25 = v16;
        sub_23BB8869C();
        sub_23B9967E0();
        v14 = sub_23BB8ACE8();
        v20 = v19;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = 0;
      }
      v11 = v22;
    }
    else
    {
      sub_23BB54C44();
      v18 = v21;
      v14 = 0;
      v20 = 0;
    }
    retstr->value.prettyName.value._countAndFlagsBits = v14;
    retstr->value.prettyName.value._object = v20;
    retstr->value.mainHandle.rawValue._countAndFlagsBits = v23;
    retstr->value.mainHandle.rawValue._object = v10;
    *(_QWORD *)&retstr->value.mainHandle.kind = v11;
    retstr->value.allHandles._rawValue = v18;
    retstr->value.contact = contact;
  }
  else
  {

    swift_bridgeObjectRelease();
    retstr->value.contact.super.isa = 0;
    retstr->value.mainHandle.rawValue = 0u;
    *(_OWORD *)&retstr->value.mainHandle.kind = 0u;
    retstr->value.prettyName = 0u;
  }
}

void __swiftcall Friend.init(prettyName:mainHandle:allHandles:contact:)(FindMyUICore::Friend *__return_ptr retstr, Swift::String_optional prettyName, FindMyUICore::Handle mainHandle, Swift::OpaquePointer allHandles, CNContact contact)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  FindMyUICore::Handle::Kind v17;
  void *v18;
  objc_class *v19;
  uint64_t v20;
  objc_class *v21;
  uint64_t v22;
  void *v23;

  v21 = *(objc_class **)&mainHandle.kind;
  object = mainHandle.rawValue._object;
  countAndFlagsBits = mainHandle.rawValue._countAndFlagsBits;
  v7 = prettyName.value._object;
  v8 = prettyName.value._countAndFlagsBits;
  v10 = sub_23BB886D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)countAndFlagsBits;
  v16 = *(void **)(countAndFlagsBits + 8);
  v17 = *(_BYTE *)(countAndFlagsBits + 16);
  if (v7)
  {
    v22 = v8;
    v23 = v7;
    sub_23BB8869C();
    sub_23B9967E0();
    v8 = sub_23BB8ACE8();
    v7 = v18;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    swift_bridgeObjectRelease();
  }
  retstr->prettyName.value._countAndFlagsBits = v8;
  retstr->prettyName.value._object = v7;
  retstr->mainHandle.rawValue._countAndFlagsBits = v15;
  retstr->mainHandle.rawValue._object = v16;
  retstr->mainHandle.kind = v17;
  v19 = v21;
  retstr->allHandles._rawValue = object;
  retstr->contact.super.isa = v19;
}

uint64_t sub_23BB54BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

id sub_23BB54BF8()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACC0]), sel_init);
  result = objc_msgSend(v0, sel_setStyle_, 1001);
  qword_256A64190 = (uint64_t)v0;
  return result;
}

void sub_23BB54C44()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  unsigned __int8 v41;
  char v42;
  BOOL v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v1 = objc_msgSend(v0, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A641C0);
  v2 = sub_23BB8A8EC();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23BB8AFD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v3)
  {
    if (v3 < 1)
    {
      __break(1u);
      goto LABEL_48;
    }
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x24260CD9C](v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_value);
      v9 = sub_23BB8A7B4();
      v11 = v10;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_23BB63EE8(0, v4[2] + 1, 1, v4);
      v13 = v4[2];
      v12 = v4[3];
      if (v13 >= v12 >> 1)
        v4 = sub_23BB63EE8((_QWORD *)(v12 > 1), v13 + 1, 1, v4);
      ++v5;
      v4[2] = v13 + 1;
      v14 = &v4[2 * v13];
      v14[4] = v9;
      v14[5] = v11;

    }
    while (v3 != v5);
  }
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v0, sel_phoneNumbers);
  v16 = sub_23BB8A8EC();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_23BB8AFD0();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_16:
      if (v17 >= 1)
      {
        for (i = 0; i != v17; ++i)
        {
          if ((v16 & 0xC000000000000001) != 0)
            v20 = (id)MEMORY[0x24260CD9C](i, v16);
          else
            v20 = *(id *)(v16 + 8 * i + 32);
          v21 = v20;
          v22 = objc_msgSend(v20, sel_value);
          v23 = objc_msgSend(v22, sel_unformattedInternationalStringValue);

          if (v23)
          {
            v24 = sub_23BB8A7B4();
            v26 = v25;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_23BB63EE8(0, v4[2] + 1, 1, v4);
            v28 = v4[2];
            v27 = v4[3];
            if (v28 >= v27 >> 1)
              v4 = sub_23BB63EE8((_QWORD *)(v27 > 1), v28 + 1, 1, v4);
            v4[2] = v28 + 1;
            v19 = &v4[2 * v28];
            v19[4] = v24;
            v19[5] = v26;
          }

        }
        goto LABEL_30;
      }
LABEL_48:
      __break(1u);
      return;
    }
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_16;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  v29 = v4[2];
  if (v29)
  {
    v49 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23BB004F4(0, v29, 0);
    v30 = v49;
    v31 = v4 + 5;
    do
    {
      v32 = *(v31 - 1);
      v33 = *v31;
      v34 = sub_23BB8A7E4();
      v36 = v35;
      v37 = HIBYTE(v33) & 0xF;
      if ((v33 & 0x2000000000000000) == 0)
        v37 = v32 & 0xFFFFFFFFFFFFLL;
      if (v37)
      {
        v48 = (id)v34;
        sub_23B9C60B4(0, (unint64_t *)&qword_256A5DDD0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
        v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_23BB8C510;
        *(_QWORD *)(v38 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v38 + 64) = sub_23B9A5C8C();
        *(_QWORD *)(v38 + 32) = 0xD000000000000029;
        *(_QWORD *)(v38 + 40) = 0x800000023BB9A7A0;
        swift_bridgeObjectRetain();
        v39 = (void *)sub_23BB8ABB0();
        v40 = (void *)sub_23BB8A784();
        v41 = objc_msgSend(v39, sel_evaluateWithObject_, v40);

        if ((v41 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v42 = 1;
        }
        else
        {
          v43 = sub_23BB4E730(v32, v33);
          swift_bridgeObjectRelease();
          if (v43)
            v42 = 0;
          else
            v42 = 2;
        }
        v34 = (uint64_t)v48;
      }
      else
      {
        v42 = 2;
      }
      v50 = v30;
      v45 = *(_QWORD *)(v30 + 16);
      v44 = *(_QWORD *)(v30 + 24);
      if (v45 >= v44 >> 1)
      {
        v47 = v34;
        sub_23BB004F4(v44 > 1, v45 + 1, 1);
        v34 = v47;
        v30 = v50;
      }
      v31 += 2;
      *(_QWORD *)(v30 + 16) = v45 + 1;
      v46 = v30 + 24 * v45;
      *(_QWORD *)(v46 + 32) = v34;
      *(_QWORD *)(v46 + 40) = v36;
      *(_BYTE *)(v46 + 48) = v42;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void __swiftcall Friend.init(mainHandle:contact:)(FindMyUICore::Friend *__return_ptr retstr, FindMyUICore::Handle mainHandle, CNContact contact)
{
  objc_class *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  object = (objc_class *)mainHandle.rawValue._object;
  countAndFlagsBits = mainHandle.rawValue._countAndFlagsBits;
  v6 = sub_23BB886D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)countAndFlagsBits;
  v11 = *(void **)(countAndFlagsBits + 8);
  v24 = *(unsigned __int8 *)(countAndFlagsBits + 16);
  if (qword_256A58DC8 != -1)
    swift_once();
  v13 = objc_msgSend((id)qword_256A64190, sel_stringFromContact_, object);
  if (v13)
  {
    v14 = v13;
    v23 = v11;
    v15 = sub_23BB8A7B4();
    v17 = v16;

    sub_23BB54C44();
    v19 = v18;
    if (v17)
    {
      v25 = v15;
      v26 = v17;
      sub_23BB8869C();
      sub_23B9967E0();
      v15 = sub_23BB8ACE8();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = 0;
    }
    v11 = v23;
  }
  else
  {
    sub_23BB54C44();
    v19 = v22;
    v15 = 0;
    v21 = 0;
  }
  retstr->prettyName.value._countAndFlagsBits = v15;
  retstr->prettyName.value._object = v21;
  retstr->mainHandle.rawValue._countAndFlagsBits = v12;
  retstr->mainHandle.rawValue._object = v11;
  retstr->mainHandle.kind = v24;
  retstr->allHandles._rawValue = v19;
  retstr->contact.super.isa = object;
}

id sub_23BB55308(char a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD50]), sel_init);
  if ((a1 & 1) != 0)
  {
    sub_23BB8A7B4();
    v3 = (void *)sub_23BB8A784();
    v4 = objc_allocWithZone(MEMORY[0x24BDBAD38]);
    v5 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_initWithLabel_value_, v5, v3);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_23BB91DC0;
    *(_QWORD *)(v7 + 32) = v6;
    sub_23BB8A904();
    v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A641C0);
    v9 = (void *)sub_23BB8A8E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setEmailAddresses_, v9);
  }
  else
  {
    v10 = objc_allocWithZone(MEMORY[0x24BDBAD88]);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initWithStringValue_, v11);

    sub_23BB8A7B4();
    v13 = objc_allocWithZone(MEMORY[0x24BDBAD38]);
    v14 = v12;
    v15 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v13, sel_initWithLabel_value_, v15, v14);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_23BB91DC0;
    *(_QWORD *)(v17 + 32) = v16;
    sub_23BB8A904();
    v8 = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A641C0);
    v9 = (void *)sub_23BB8A8E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPhoneNumbers_, v9);

  }
  return v2;
}

id sub_23BB55594(void *a1, void *a2)
{
  char v2;
  void *v3;
  id v4;
  char **v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  unint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v29[3];

  v29[2] = *(id *)MEMORY[0x24BDAC8D0];
  v29[0] = a1;
  v29[1] = a2;
  sub_23B9967E0();
  v2 = sub_23BB8AD0C();
  if (objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0) != (id)3)
    return sub_23BB55308(v2 & 1);
  v3 = (void *)objc_opt_self();
  if ((v2 & 1) != 0)
  {
    v4 = (id)sub_23BB8A784();
    v5 = &selRef_predicateForContactsMatchingEmailAddress_;
  }
  else
  {
    v7 = objc_allocWithZone(MEMORY[0x24BDBAD88]);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v7, sel_initWithStringValue_, v8);

    v5 = &selRef_predicateForContactsMatchingPhoneNumber_;
  }
  v9 = objc_msgSend(v3, *v5, v4);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23BB8E000;
  v11 = (void *)*MEMORY[0x24BDBA2E0];
  v12 = (void *)*MEMORY[0x24BDBA288];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x24BDBA2E0];
  *(_QWORD *)(v10 + 40) = v12;
  v13 = (void *)*MEMORY[0x24BDBA348];
  *(_QWORD *)(v10 + 48) = *MEMORY[0x24BDBA348];
  v14 = (void *)objc_opt_self();
  v15 = v11;
  v16 = v12;
  v17 = v13;
  *(_QWORD *)(v10 + 56) = objc_msgSend(v14, sel_descriptorForRequiredKeysForStyle_, 1001);
  sub_23BB8A904();
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A641B0);
  v19 = (void *)sub_23BB8A8E0();
  swift_bridgeObjectRelease();
  v29[0] = 0;
  v20 = objc_msgSend(v18, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v19, v29);

  v21 = v29[0];
  if (!v20)
  {
    v25 = v29[0];
    v26 = (void *)sub_23BB887C8();

    swift_willThrow();
LABEL_16:
    v6 = sub_23BB55308(v2 & 1);

    return v6;
  }
  sub_23B9C60B4(0, (unint64_t *)&qword_256A61440);
  v22 = sub_23BB8A8EC();
  v23 = v21;

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_23BB8AFD0();
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_9;
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_9:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v24 = (id)MEMORY[0x24260CD9C](0, v22);
  }
  else
  {
    if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v24 = *(id *)(v22 + 32);
  }
  v6 = v24;

  swift_bridgeObjectRelease();
  return v6;
}

void destroy for Friend(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for Friend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for Friend(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for Friend(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for Friend(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Friend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Friend()
{
  return &type metadata for Friend;
}

uint64_t sub_23BB55B80(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23BB004F4(0, v1, 0);
    v2 = v12;
    v4 = (_BYTE *)(a1 + 64);
    do
    {
      v6 = *((_QWORD *)v4 - 2);
      v5 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
        sub_23BB004F4(v9 > 1, v8 + 1, 1);
      v4 += 56;
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v10 = v12 + 24 * v8;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v5;
      *(_BYTE *)(v10 + 48) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_23BB55C6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  v23 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23BB8ADA8();
    sub_23B9C60B4(0, &qword_256A64208);
    sub_23BB5EE5C();
    sub_23BB8AB38();
    v1 = v18;
    v16 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_23BB8ADB4())
      goto LABEL_37;
    sub_23B9C60B4(0, &qword_256A64208);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v17;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v17)
      goto LABEL_37;
LABEL_33:
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x24260C820]();
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23BB8A928();
      sub_23BB8A958();
      sub_23BB8A904();
    }
    else
    {

    }
    v3 = v11;
    v4 = v9;
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_32:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_37;
    goto LABEL_33;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8)
      goto LABEL_37;
    v14 = *(_QWORD *)(v16 + 8 * v13);
    v11 = v3 + 1;
    if (!v14)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_37;
      v14 = *(_QWORD *)(v16 + 8 * v11);
      if (!v14)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v8)
          goto LABEL_37;
        v14 = *(_QWORD *)(v16 + 8 * v11);
        if (!v14)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v8)
            goto LABEL_37;
          v14 = *(_QWORD *)(v16 + 8 * v11);
          if (!v14)
          {
            v11 = v3 + 5;
            if (v3 + 5 >= v8)
              goto LABEL_37;
            v14 = *(_QWORD *)(v16 + 8 * v11);
            if (!v14)
            {
              v15 = v3 + 6;
              while (v8 != v15)
              {
                v14 = *(_QWORD *)(v16 + 8 * v15++);
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_37:
              sub_23BA7D474();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_23BB55F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_23BB8A9F4();
  v3[10] = sub_23BB8A9E8();
  v3[11] = sub_23BB8A988();
  v3[12] = v4;
  return swift_task_switch();
}

uint64_t sub_23BB55FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16[2];

  v1 = *(_QWORD *)(v0 + 72);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_isValidatingMessage) == 1)
  {
    swift_release();
    if (qword_256A58E00 != -1)
      swift_once();
    v2 = sub_23BB891C4();
    __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
    v3 = sub_23BB891AC();
    v4 = sub_23BB8ABEC();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v16[0] = v6;
      *(_DWORD *)v5 = 136315138;
      *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD00000000000002BLL, 0x800000023BB9B1B0, v16);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v3, v4, "Repository: %s - Already validating another message.", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v6, -1, -1);
      MEMORY[0x24260D9B4](v5, -1, -1);
    }

    sub_23BA7D47C();
    swift_allocError();
    *v7 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_isValidatingMessage) = 1;
    if (qword_256A58E00 != -1)
      swift_once();
    v9 = sub_23BB891C4();
    __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
    v10 = sub_23BB891AC();
    v11 = sub_23BB8ABC8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v16[0] = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 40) = sub_23BB7B69C(0xD00000000000002BLL, 0x800000023BB9B1B0, v16);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v10, v11, "Repository: %s - isValidatingMessage: true", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
    }

    v15 = (uint64_t (*)(uint64_t))(**(int **)(v0 + 56) + *(_QWORD *)(v0 + 56));
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v14;
    *v14 = v0;
    v14[1] = sub_23BB56368;
    return v15(v0 + 16);
  }
}

uint64_t sub_23BB56368()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB563B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  sub_23BA5F5E0(v1);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23BB563F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[75] = a6;
  v6[74] = a5;
  v6[73] = a3;
  v6[72] = a2;
  v6[71] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A641F8);
  v6[76] = swift_task_alloc();
  v7 = sub_23BB88EC4();
  v6[77] = v7;
  v6[78] = *(_QWORD *)(v7 - 8);
  v6[79] = swift_task_alloc();
  v8 = type metadata accessor for SessionFriend(0);
  v6[80] = v8;
  v6[81] = *(_QWORD *)(v8 - 8);
  v6[82] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDC8);
  v6[83] = swift_task_alloc();
  v6[84] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  v6[85] = swift_task_alloc();
  v6[86] = swift_task_alloc();
  v6[87] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v6[88] = swift_task_alloc();
  type metadata accessor for MessagePayload(0);
  v6[89] = swift_task_alloc();
  v6[90] = swift_task_alloc();
  v6[91] = swift_task_alloc();
  v9 = sub_23BB88984();
  v6[92] = v9;
  v6[93] = *(_QWORD *)(v9 - 8);
  v6[94] = swift_task_alloc();
  v6[95] = swift_task_alloc();
  v6[96] = swift_task_alloc();
  v10 = sub_23BB889CC();
  v6[97] = v10;
  v6[98] = *(_QWORD *)(v10 - 8);
  v6[99] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  v6[100] = swift_task_alloc();
  v6[101] = swift_task_alloc();
  v6[102] = swift_task_alloc();
  v6[103] = sub_23BB8A9F4();
  v6[104] = sub_23BB8A9E8();
  v6[105] = sub_23BB8A988();
  v6[106] = v11;
  return swift_task_switch();
}

uint64_t sub_23BB56670()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t ObjCClassFromMetadata;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(_QWORD, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;

  v1 = *(_WORD *)(*(_QWORD *)(v0 + 576) + 16);
  if ((v1 & 0xFF00) != 0x200)
  {
    *(_QWORD *)(v0 + 856) = *(_WORD *)(*(_QWORD *)(v0 + 576) + 16);
    type metadata accessor for MessagePayload.ContentV0(0);
    if ((v1 & 0x100) != 0)
    {
      sub_23BB3A0B8((uint64_t)&v60);
      v30 = v60;
      v31 = v61;
      *(_QWORD *)(v0 + 1064) = v60;
      *(_QWORD *)(v0 + 1072) = v31;
      v32 = v62;
      v33 = v63;
      *(_QWORD *)(v0 + 1080) = v62;
      *(_QWORD *)(v0 + 1088) = v33;
      v34 = v64;
      v35 = v65;
      *(_QWORD *)(v0 + 1096) = v64;
      *(_QWORD *)(v0 + 1104) = v35;
      v36 = v66;
      *(_QWORD *)(v0 + 1112) = v66;
      if (!v33)
      {
        swift_release();
        if (qword_256A58E00 != -1)
          swift_once();
        v47 = sub_23BB891C4();
        __swift_project_value_buffer(v47, (uint64_t)qword_256A73E80);
        v40 = sub_23BB891AC();
        v48 = sub_23BB8ABD4();
        if (os_log_type_enabled(v40, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          v50 = swift_slowAlloc();
          v60 = v50;
          *(_DWORD *)v49 = 136315138;
          *(_QWORD *)(v0 + 512) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v60);
          sub_23BB8ACB8();
          _os_log_impl(&dword_23B979000, v40, v48, "CompositeAppViewModel: %s - Can only be requested to 1 friend", v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24260D9B4](v50, -1, -1);
          MEMORY[0x24260D9B4](v49, -1, -1);
        }
        goto LABEL_26;
      }
      v27 = v0 + 296;
      v37 = *(_QWORD *)(v0 + 584);
      *(_QWORD *)(v0 + 128) = v30;
      *(_QWORD *)(v0 + 136) = v31;
      *(_QWORD *)(v0 + 144) = v32;
      *(_QWORD *)(v0 + 152) = v33;
      *(_BYTE *)(v0 + 160) = v34;
      *(_QWORD *)(v0 + 168) = v35;
      *(_QWORD *)(v0 + 176) = v36;
      *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v37 + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1128) = v28;
      v29 = sub_23BB590B4;
    }
    else
    {
      v27 = v0 + 320;
      *(_QWORD *)(v0 + 864) = *(_QWORD *)(*(_QWORD *)(v0 + 584) + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 872) = v28;
      v29 = sub_23BB56FFC;
    }
    *v28 = v0;
    v28[1] = v29;
    return sub_23BA372C0(v27);
  }
  sub_23BB3A0B8((uint64_t)&v60);
  v3 = v60;
  v2 = v61;
  *(_QWORD *)(v0 + 1296) = v60;
  *(_QWORD *)(v0 + 1304) = v2;
  v4 = v62;
  v5 = v63;
  *(_QWORD *)(v0 + 1312) = v62;
  *(_QWORD *)(v0 + 1320) = v5;
  v6 = v64;
  v7 = v65;
  *(_QWORD *)(v0 + 1328) = v64;
  *(_QWORD *)(v0 + 1336) = v7;
  v8 = v66;
  *(_QWORD *)(v0 + 1344) = v66;
  if (!v5)
  {
    swift_release();
    if (qword_256A58E00 != -1)
      swift_once();
    v39 = sub_23BB891C4();
    __swift_project_value_buffer(v39, (uint64_t)qword_256A73E80);
    v40 = sub_23BB891AC();
    v41 = sub_23BB8ABD4();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v60 = v43;
      *(_DWORD *)v42 = 136315138;
      *(_QWORD *)(v0 + 552) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v60);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v40, v41, "CompositeAppViewModel: %s - Can only be requested to 1 friend", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v43, -1, -1);
      MEMORY[0x24260D9B4](v42, -1, -1);
    }
LABEL_26:

    v19 = *(_QWORD *)(v0 + 568);
    *(_BYTE *)v19 = 0;
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v52 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v53 = (void *)sub_23BB8A784();
    v54 = objc_msgSend(v52, sel_localizedStringForKey_value_table_, v53, 0, 0);

    v24 = sub_23BB8A7B4();
    v26 = v55;

LABEL_27:
    *(_QWORD *)(v19 + 8) = v24;
    *(_QWORD *)(v19 + 16) = v26;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v57 = v6;
  v58 = v2;
  v9 = *(_QWORD *)(v0 + 624);
  v10 = *(_QWORD *)(v0 + 616);
  v11 = *(_QWORD *)(v0 + 608);
  swift_bridgeObjectRetain();
  sub_23BB88EB8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v10) == 1)
  {
    v12 = *(_QWORD *)(v0 + 608);
    swift_release();
    sub_23B989D60(v12, &qword_256A641F8);
    if (qword_256A58E00 != -1)
      swift_once();
    v13 = sub_23BB891C4();
    __swift_project_value_buffer(v13, (uint64_t)qword_256A73E80);
    v14 = sub_23BB891AC();
    v15 = sub_23BB8ABEC();
    if (os_log_type_enabled(v14, v15))
    {
      v56 = v3;
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v60 = v17;
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)(v0 + 520) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v60);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v14, v15, "CompositeAppViewModel: %s - Cannot create queryDestination", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v17, -1, -1);
      v18 = v16;
      v3 = v56;
      MEMORY[0x24260D9B4](v18, -1, -1);
    }

    v19 = *(_QWORD *)(v0 + 568);
    *(_BYTE *)v19 = 0;
    type metadata accessor for FindMyUICore();
    v20 = swift_getObjCClassFromMetadata();
    v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v20);
    v22 = (void *)sub_23BB8A784();
    v23 = objc_msgSend(v21, sel_localizedStringForKey_value_table_, v22, 0, 0);

    v24 = sub_23BB8A7B4();
    v26 = v25;

    sub_23B9A12B4(v3, v58, v4, v5, v57, v7, v8);
    goto LABEL_27;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 32))(*(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 616));
  sub_23BB88EDC();
  *(_QWORD *)(v0 + 1352) = sub_23BB88ED0();
  if (qword_256A58CC0 != -1)
    swift_once();
  v44 = qword_256A73D30;
  v45 = *(_QWORD *)algn_256A73D38;
  v59 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))((int)*MEMORY[0x24BE324E0] + MEMORY[0x24BE324E0]);
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1360) = v46;
  *v46 = v0;
  v46[1] = sub_23BB5B298;
  return v59(*(_QWORD *)(v0 + 632), v44, v45);
}

uint64_t sub_23BB56FFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 880) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB57060()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 328);
  *(_QWORD *)(v0 + 888) = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 896) = v1;
  if (v1)
  {
    v2 = *(unsigned __int16 *)(v0 + 336);
    *(_WORD *)(v0 + 314) = v2;
    if ((v2 & 0x1010101) != 0)
    {
      swift_bridgeObjectRelease();
      v3 = *(_QWORD *)(v0 + 592);
      v4 = swift_bridgeObjectRetain();
      v5 = sub_23BA6CFF8(v4);
      *(_QWORD *)(v0 + 952) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(*(_QWORD *)(v3 + 40) + 16) > 1uLL;
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 960) = v7;
      *v7 = v0;
      v7[1] = sub_23BB57A94;
      return sub_23BA3FCC8(v5, v6);
    }
    else
    {
      *(_QWORD *)(v0 + 904) = sub_23BB8A9E8();
      *(_QWORD *)(v0 + 912) = sub_23BB8A988();
      *(_QWORD *)(v0 + 920) = v17;
      return swift_task_switch();
    }
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 568);
    swift_release();
    *(_BYTE *)v9 = 0;
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v12 = (void *)sub_23BB8A784();
    v13 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v12, 0, 0);

    v14 = sub_23BB8A7B4();
    v16 = v15;

    *(_QWORD *)(v9 + 8) = v14;
    *(_QWORD *)(v9 + 16) = v16;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB57354()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release();
  v1 = *(void **)(v0 + 880);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v21 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 496) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v21);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 464) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s - Couldn't start location sharing with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v12 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = (void *)sub_23BB8A784();
  v16 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, 0);

  v17 = sub_23BB8A7B4();
  v19 = v18;

  *(_QWORD *)(v12 + 8) = v17;
  *(_QWORD *)(v12 + 16) = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB57730()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[112];
  v2 = v0[111];
  v0[116] = sub_23BB8A9E8();
  v3 = swift_task_alloc();
  v0[117] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[118] = v4;
  *v4 = v0;
  v4[1] = sub_23BB577F8;
  return sub_23BB8B168();
}

uint64_t sub_23BB577F8()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB57868()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v0 + 340) = *(_BYTE *)(v0 + 339);
  return swift_task_switch();
}

uint64_t sub_23BB578B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v7;

  if ((*(_BYTE *)(v0 + 340) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 592);
    v2 = swift_bridgeObjectRetain();
    v3 = sub_23BA6CFF8(v2);
    *(_QWORD *)(v0 + 952) = v3;
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 16) > 1uLL;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 960) = v5;
    *v5 = v0;
    v5[1] = sub_23BB57A94;
    return sub_23BA3FCC8(v3, v4);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 568);
    swift_release();
    *(_BYTE *)v7 = 0;
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB57A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 968) = a1;
  *(_QWORD *)(v3 + 976) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BB57B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t inited;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 592) + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v57 = (_OWORD *)(v0 + 416);
    type metadata accessor for Repository();
    swift_bridgeObjectRetain();
    v3 = 32;
    v56 = v1;
    while (1)
    {
      v4 = *(_QWORD *)(v0 + 816);
      v58 = *(_QWORD *)(v0 + 968);
      v59 = *(_QWORD *)(v0 + 808);
      v5 = *(_OWORD *)(v1 + v3);
      v6 = *(_OWORD *)(v1 + v3 + 16);
      v7 = *(_OWORD *)(v1 + v3 + 32);
      *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + v3 + 48);
      *(_OWORD *)(v0 + 88) = v6;
      *(_OWORD *)(v0 + 104) = v7;
      *(_OWORD *)(v0 + 72) = v5;
      *v57 = *(_OWORD *)(v0 + 88);
      *(_BYTE *)(v0 + 432) = *(_BYTE *)(v0 + 104);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
      v9 = *(_BYTE *)(v0 + 432);
      *(_OWORD *)(inited + 32) = *v57;
      *(_BYTE *)(inited + 48) = v9;
      sub_23B9A14A0(v0 + 72);
      sub_23B9A14A0(v0 + 72);
      sub_23B9A14A0(v0 + 72);
      sub_23B9A14EC((uint64_t)v57);
      v10 = swift_bridgeObjectRetain();
      v11 = sub_23BA7CF04(v10, v0 + 72);
      sub_23B9A1514(v0 + 72);
      swift_bridgeObjectRelease();
      v60 = inited;
      sub_23BA78CA0(v11);
      sub_23B9A1514(v0 + 72);
      sub_23BA6D28C(inited, v58, v4);
      sub_23B9A1514(v0 + 72);
      swift_bridgeObjectRelease();
      sub_23BB5ED18(v4, v59);
      v12 = type metadata accessor for SessionFollowerState(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v59, 1, v12) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      sub_23B989EFC(*(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 800), &qword_256A59C78);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v14 = *(_QWORD *)(v0 + 800);
      if (EnumCaseMultiPayload)
        break;
      v15 = *(_QWORD *)(v0 + 808);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
      sub_23B989D60(v14 + *(int *)(v16 + 48), (uint64_t *)&unk_256A5E6B0);
      sub_23B989D60(v14, (uint64_t *)&unk_256A5E6B0);
      sub_23B989D60(v15, &qword_256A59C78);
      v3 += 56;
      --v2;
      v1 = v56;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B989D9C(v14, type metadata accessor for SessionFollowerState);
LABEL_18:
    v48 = *(uint64_t **)(v0 + 592);
    sub_23B989D60(*(_QWORD *)(v0 + 808), &qword_256A59C78);
    v49 = swift_bridgeObjectRetain();
    v50 = sub_23BB55B80(v49);
    *(_QWORD *)(v0 + 984) = v50;
    swift_bridgeObjectRelease();
    v52 = *v48;
    v51 = v48[1];
    *(_QWORD *)(v0 + 992) = v51;
    v53 = *((_BYTE *)v48 + 16);
    *(_QWORD *)(v0 + 440) = v52;
    *(_QWORD *)(v0 + 448) = v51;
    *(_BYTE *)(v0 + 456) = v53;
    v54 = *(_QWORD *)(v48[5] + 16) > 1uLL;
    swift_bridgeObjectRetain();
    v55 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1000) = v55;
    *v55 = v0;
    v55[1] = sub_23BB58658;
    return sub_23BA3DFA8(v50, (_OWORD *)(v0 + 440), *(_QWORD *)(v0 + 856), v54);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_256A58E00 != -1)
      swift_once();
    v17 = sub_23BB891C4();
    __swift_project_value_buffer(v17, (uint64_t)qword_256A73E80);
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABEC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v60 = v21;
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)(v0 + 504) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v60);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v18, v19, "CompositeAppViewModel: %s - Skipped server request due to already sharing", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v21, -1, -1);
      MEMORY[0x24260D9B4](v20, -1, -1);
    }

    v22 = *(_QWORD *)(v0 + 792);
    v23 = *(_QWORD *)(v0 + 784);
    v24 = *(_QWORD *)(v0 + 776);
    sub_23BB889C0();
    v25 = sub_23BB88990();
    v27 = v26;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    *(_QWORD *)(v0 + 1040) = v27;
    *(_QWORD *)(v0 + 1032) = v25;
    *(_WORD *)(v0 + 316) = 256;
    LODWORD(v22) = *(_WORD *)(v0 + 314) & 0x101;
    sub_23BB88978();
    if ((_DWORD)v22)
    {
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1048) = v28;
      *v28 = v0;
      v28[1] = sub_23BB58DB8;
      return sub_23BA65F38();
    }
    else
    {
      swift_release();
      v30 = *(_QWORD *)(v0 + 1040);
      v31 = *(_QWORD *)(v0 + 1032);
      v32 = *(_WORD *)(v0 + 316);
      v33 = *(_QWORD *)(v0 + 768);
      v34 = *(_QWORD *)(v0 + 744);
      v35 = *(_QWORD *)(v0 + 736);
      v36 = *(_QWORD *)(v0 + 728);
      v37 = *(_QWORD *)(v0 + 704);
      v38 = *(_QWORD *)(v0 + 696);
      v60 = *(_QWORD *)(v0 + 856);
      v61 = v32;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v37, v33, v35);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v35);
      MessagePayload.init(id:kind:timestamp:initialLocation:)(v31, v30, &v60, v37, 0, v36);
      MessagePayload.url.getter(v38);
      v39 = sub_23BB8884C();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = 0;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) != 1)
      {
        v42 = *(_QWORD *)(v0 + 696);
        v41 = (void *)sub_23BB88828();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v39);
      }
      v43 = *(_QWORD *)(v0 + 768);
      v44 = *(_QWORD *)(v0 + 744);
      v45 = *(_QWORD *)(v0 + 736);
      v46 = *(_QWORD *)(v0 + 728);
      v47 = *(_QWORD *)(v0 + 568);
      objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v41);

      sub_23B989D9C(v46, type metadata accessor for MessagePayload);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      *(_BYTE *)v47 = 1;
      *(_QWORD *)(v47 + 8) = 0;
      *(_QWORD *)(v47 + 16) = 0;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_23BB58270()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 976);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v21 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 496) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v21);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 464) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s - Couldn't start location sharing with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v12 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = (void *)sub_23BB8A784();
  v16 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, 0);

  v17 = sub_23BB8A7B4();
  v19 = v18;

  *(_QWORD *)(v12 + 8) = v17;
  *(_QWORD *)(v12 + 16) = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB58658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 1008) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    *(_QWORD *)(v6 + 1016) = a2;
    *(_QWORD *)(v6 + 1024) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23BB58704()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;

  v1 = *(_QWORD *)(v0 + 1024);
  *(_QWORD *)(v0 + 1040) = *(_QWORD *)(v0 + 1016);
  *(_QWORD *)(v0 + 1032) = v1;
  *(_WORD *)(v0 + 316) = 0;
  v2 = *(_WORD *)(v0 + 314) & 0x101;
  sub_23BB88978();
  if (v2)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1048) = v3;
    *v3 = v0;
    v3[1] = sub_23BB58DB8;
    return sub_23BA65F38();
  }
  else
  {
    swift_release();
    v5 = *(_QWORD *)(v0 + 1040);
    v6 = *(_QWORD *)(v0 + 1032);
    v7 = *(_WORD *)(v0 + 316);
    v8 = *(_QWORD *)(v0 + 768);
    v9 = *(_QWORD *)(v0 + 744);
    v10 = *(_QWORD *)(v0 + 736);
    v11 = *(_QWORD *)(v0 + 728);
    v12 = *(_QWORD *)(v0 + 704);
    v13 = *(_QWORD *)(v0 + 696);
    v23 = *(_QWORD *)(v0 + 856);
    v24 = v7;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v8, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v10);
    MessagePayload.init(id:kind:timestamp:initialLocation:)(v6, v5, &v23, v12, 0, v11);
    MessagePayload.url.getter(v13);
    v14 = sub_23BB8884C();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v17 = *(_QWORD *)(v0 + 696);
      v16 = (void *)sub_23BB88828();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
    }
    v18 = *(_QWORD *)(v0 + 768);
    v19 = *(_QWORD *)(v0 + 744);
    v20 = *(_QWORD *)(v0 + 736);
    v21 = *(_QWORD *)(v0 + 728);
    v22 = *(_QWORD *)(v0 + 568);
    objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v16);

    sub_23B989D9C(v21, type metadata accessor for MessagePayload);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    *(_BYTE *)v22 = 1;
    *(_QWORD *)(v22 + 8) = 0;
    *(_QWORD *)(v22 + 16) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB589DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release();
  v1 = *(void **)(v0 + 1008);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v21 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 496) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v21);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 464) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s - Couldn't start location sharing with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v12 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = (void *)sub_23BB8A784();
  v16 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, 0);

  v17 = sub_23BB8A7B4();
  v19 = v18;

  *(_QWORD *)(v12 + 8) = v17;
  *(_QWORD *)(v12 + 16) = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB58DB8(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)

  else
    *(_QWORD *)(v4 + 1056) = a1;
  return swift_task_switch();
}

uint64_t sub_23BB58E38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int16 v23;

  v1 = *(void **)(v0 + 1056);
  swift_release();
  v2 = *(_QWORD *)(v0 + 1040);
  v3 = *(_QWORD *)(v0 + 1032);
  v4 = *(_WORD *)(v0 + 316);
  v5 = *(_QWORD *)(v0 + 768);
  v6 = *(_QWORD *)(v0 + 744);
  v7 = *(_QWORD *)(v0 + 736);
  v8 = *(_QWORD *)(v0 + 728);
  v9 = *(_QWORD *)(v0 + 704);
  v10 = *(_QWORD *)(v0 + 696);
  v22 = *(_QWORD *)(v0 + 856);
  v23 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v5, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v7);
  v11 = v1;
  MessagePayload.init(id:kind:timestamp:initialLocation:)(v3, v2, &v22, v9, v1, v8);
  MessagePayload.url.getter(v10);
  v12 = sub_23BB8884C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v15 = *(_QWORD *)(v0 + 696);
    v14 = (void *)sub_23BB88828();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  }
  v16 = *(_QWORD *)(v0 + 768);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 736);
  v19 = *(_QWORD *)(v0 + 728);
  v20 = *(_QWORD *)(v0 + 568);
  objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v14);

  sub_23B989D9C(v19, type metadata accessor for MessagePayload);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  *(_BYTE *)v20 = 1;
  *(_QWORD *)(v20 + 8) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB590B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB59118()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v1 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 1144) = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 1152) = v1;
  if (v1)
  {
    v2 = *(unsigned __int16 *)(v0 + 312);
    *(_WORD *)(v0 + 318) = v2;
    if ((v2 & 0x1010101) != 0)
    {
      swift_bridgeObjectRelease();
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1208) = v3;
      *v3 = v0;
      v3[1] = sub_23BB59B6C;
      return sub_23BA3D334();
    }
    else
    {
      *(_QWORD *)(v0 + 1160) = sub_23BB8A9E8();
      *(_QWORD *)(v0 + 1168) = sub_23BB8A988();
      *(_QWORD *)(v0 + 1176) = v18;
      return swift_task_switch();
    }
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 1104);
    v20 = *(void **)(v0 + 1112);
    v5 = *(_QWORD *)(v0 + 1096);
    v6 = *(_QWORD *)(v0 + 1088);
    v7 = *(_QWORD *)(v0 + 1080);
    v8 = *(_QWORD *)(v0 + 1072);
    v9 = *(_QWORD *)(v0 + 1064);
    v10 = *(_QWORD *)(v0 + 568);
    swift_release();
    *(_BYTE *)v10 = 0;
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v13 = (void *)sub_23BB8A784();
    v14 = objc_msgSend(v12, sel_localizedStringForKey_value_table_, v13, 0, 0);

    v15 = sub_23BB8A7B4();
    v17 = v16;

    sub_23B9A12B4(v9, v8, v7, v6, v5, v19, v20);
    *(_QWORD *)(v10 + 8) = v15;
    *(_QWORD *)(v10 + 16) = v17;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB59408()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;

  swift_release();
  v1 = *(void **)(v0 + 1136);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v28 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 528) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v28);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 536) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s - %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }
  else
  {

  }
  v26 = *(_QWORD *)(v0 + 1104);
  v27 = *(void **)(v0 + 1112);
  v25 = *(_QWORD *)(v0 + 1096);
  v12 = *(_QWORD *)(v0 + 1088);
  v13 = *(_QWORD *)(v0 + 1080);
  v14 = *(_QWORD *)(v0 + 1072);
  v15 = *(_QWORD *)(v0 + 1064);
  v16 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v16 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = (void *)sub_23BB8A784();
  v20 = objc_msgSend(v18, sel_localizedStringForKey_value_table_, v19, 0, 0);

  v21 = sub_23BB8A7B4();
  v23 = v22;

  sub_23B9A12B4(v15, v14, v13, v12, v25, v26, v27);
  *(_QWORD *)(v16 + 8) = v21;
  *(_QWORD *)(v16 + 16) = v23;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB59824()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[144];
  v2 = v0[143];
  v0[148] = sub_23BB8A9E8();
  v3 = swift_task_alloc();
  v0[149] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[150] = v4;
  *v4 = v0;
  v4[1] = sub_23BB598EC;
  return sub_23BB8B168();
}

uint64_t sub_23BB598EC()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB5995C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v0 + 341) = *(_BYTE *)(v0 + 338);
  return swift_task_switch();
}

uint64_t sub_23BB599AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + 341) & 1) != 0)
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1208) = v1;
    *v1 = v0;
    v1[1] = sub_23BB59B6C;
    return sub_23BA3D334();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 568);
    sub_23B9A12B4(*(_QWORD *)(v0 + 1064), *(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1080), *(_QWORD *)(v0 + 1088), *(_QWORD *)(v0 + 1096), *(_QWORD *)(v0 + 1104), *(void **)(v0 + 1112));
    swift_release();
    *(_BYTE *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_QWORD *)(v3 + 16) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB59B6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 1216) = a1;
  *(_QWORD *)(v3 + 1224) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB59BDC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned __int8 *v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjCClassFromMetadata;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;

  v1 = *(_QWORD *)(v0 + 1216);
  v2 = "ngStatus";
  v61 = *(_QWORD *)(v1 + 16);
  if (v61)
  {
    v60 = *(_QWORD *)(v0 + 656);
    v3 = *(_QWORD *)(v0 + 648);
    v62 = *(_QWORD *)(v3 + 72);
    v63 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v4 = *(_QWORD *)(v0 + 1224);
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v65 = v5;
      v67 = v4;
      v6 = *(void **)(v0 + 1112);
      v7 = *(_QWORD *)(v0 + 1104);
      v8 = *(_QWORD *)(v0 + 1096);
      v9 = *(_QWORD *)(v0 + 1088);
      v10 = *(_QWORD *)(v0 + 1080);
      v11 = *(_QWORD *)(v0 + 1072);
      v12 = *(_QWORD *)(v0 + 1064);
      sub_23B989CE8(v63 + v5 * v62, *(_QWORD *)(v0 + 656), type metadata accessor for SessionFriend);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
      *(_QWORD *)(inited + 32) = v10;
      *(_QWORD *)(inited + 40) = v9;
      *(_BYTE *)(inited + 48) = v8;
      v14 = v6;
      sub_23B9A1300(v12, v11, v10, v9, v8, v7, v6);
      sub_23B9A1300(v12, v11, v10, v9, v8, v7, v6);
      swift_bridgeObjectRetain();
      v15 = swift_bridgeObjectRetain();
      v4 = v67;
      v68 = sub_23BA7CF04(v15, v0 + 128);
      sub_23B9A12B4(v12, v11, v10, v9, v8, v7, v14);
      swift_bridgeObjectRelease();
      v70 = inited;
      sub_23BA78CA0(v68);
      sub_23B9A12B4(v12, v11, v10, v9, v8, v7, v14);
      v16 = *(_QWORD *)(inited + 16);
      if (v16)
        break;
LABEL_3:
      swift_bridgeObjectRelease();
      v5 = v65 + 1;
      sub_23B989D9C(*(_QWORD *)(v0 + 656), type metadata accessor for SessionFriend);
      if (v65 + 1 == v61)
      {
        swift_bridgeObjectRelease();
        v25 = 1;
        v2 = "SPAccessoryPairingStatus" + 16;
        goto LABEL_16;
      }
    }
    v17 = **(_QWORD **)(v0 + 656);
    v18 = *(_QWORD *)(v60 + 8);
    v19 = *(unsigned __int8 *)(v60 + 16);
    v20 = (unsigned __int8 *)(v70 + 48);
    while (1)
    {
      v21 = *v20;
      v22 = v17 == *((_QWORD *)v20 - 2) && v18 == *((_QWORD *)v20 - 1);
      if ((v22 || (sub_23BB8B1A4() & 1) != 0) && v19 == v21)
        break;
      v20 += 24;
      if (!--v16)
        goto LABEL_3;
    }
    v23 = *(_QWORD *)(v0 + 672);
    v24 = *(_QWORD *)(v0 + 656);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B989CA4(v24, v23, type metadata accessor for SessionFriend);
    v25 = 0;
    v2 = "SPAccessoryPairingStatus" + 16;
  }
  else
  {
    v25 = 1;
  }
LABEL_16:
  v26 = *(_QWORD *)(v0 + 672);
  v27 = *(_QWORD *)(v0 + 664);
  v28 = *(_QWORD *)(v0 + 648);
  v29 = *(_QWORD *)(v0 + 640);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, v25, 1, v29);
  swift_bridgeObjectRelease();
  sub_23B989EFC(v26, v27, &qword_256A5DDC8);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v29);
  v31 = *(_QWORD *)(v0 + 664);
  if (v30 == 1)
  {
    swift_release();
    sub_23B989D60(v31, &qword_256A5DDC8);
    if (qword_256A58E00 != -1)
      swift_once();
    v32 = sub_23BB891C4();
    __swift_project_value_buffer(v32, (uint64_t)qword_256A73E80);
    v33 = sub_23BB891AC();
    v34 = sub_23BB8ABD4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v70 = v36;
      *(_DWORD *)v35 = 136315138;
      *(_QWORD *)(v0 + 560) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v70);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v33, v34, "CompositeAppViewModel: %s - Cannot find friend on friendsRequestedMyLocation", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v36, -1, -1);
      MEMORY[0x24260D9B4](v35, -1, -1);
    }

    v66 = *(_QWORD *)(v0 + 1104);
    v69 = *(void **)(v0 + 1112);
    v37 = *(_QWORD *)(v0 + 1096);
    v38 = *(_QWORD *)(v0 + 1088);
    v39 = *(_QWORD *)(v0 + 1080);
    v40 = *(_QWORD *)(v0 + 1072);
    v41 = *(_QWORD *)(v0 + 1064);
    v64 = *(_QWORD *)(v0 + 672);
    v42 = *(_QWORD *)(v0 + 568);
    *(_BYTE *)v42 = 0;
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v44 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v45 = (void *)sub_23BB8A784();
    v46 = objc_msgSend(v44, sel_localizedStringForKey_value_table_, v45, 0, 0);

    v47 = sub_23BB8A7B4();
    v49 = v48;

    sub_23B9A12B4(v41, v40, v39, v38, v37, v66, v69);
    sub_23B989D60(v64, &qword_256A5DDC8);
    *(_QWORD *)(v42 + 8) = v47;
    *(_QWORD *)(v42 + 16) = v49;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v51 = *(uint64_t **)(v0 + 592);
    v53 = *(_QWORD *)v31;
    v52 = *(_QWORD *)(v31 + 8);
    v54 = *(_BYTE *)(v31 + 16);
    swift_bridgeObjectRetain();
    sub_23B989D9C(v31, type metadata accessor for SessionFriend);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
    v55 = swift_initStackObject();
    *(_QWORD *)(v0 + 1232) = v55;
    *(_OWORD *)(v55 + 16) = *((_OWORD *)v2 + 81);
    *(_QWORD *)(v55 + 32) = v53;
    *(_QWORD *)(v55 + 40) = v52;
    *(_BYTE *)(v55 + 48) = v54;
    v57 = *v51;
    v56 = v51[1];
    *(_QWORD *)(v0 + 1240) = v56;
    v58 = *((_BYTE *)v51 + 16);
    *(_QWORD *)(v0 + 344) = v57;
    *(_QWORD *)(v0 + 352) = v56;
    *(_BYTE *)(v0 + 360) = v58;
    LOBYTE(v52) = *(_QWORD *)(v51[5] + 16) > 1uLL;
    swift_bridgeObjectRetain();
    v59 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1248) = v59;
    *v59 = v0;
    v59[1] = sub_23BB5A728;
    return sub_23BA3DFA8(v55, (_OWORD *)(v0 + 344), *(_QWORD *)(v0 + 856), v52);
  }
}

uint64_t sub_23BB5A30C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;

  swift_release();
  v1 = *(void **)(v0 + 1224);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v28 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 528) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v28);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 536) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s - %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }
  else
  {

  }
  v26 = *(_QWORD *)(v0 + 1104);
  v27 = *(void **)(v0 + 1112);
  v25 = *(_QWORD *)(v0 + 1096);
  v12 = *(_QWORD *)(v0 + 1088);
  v13 = *(_QWORD *)(v0 + 1080);
  v14 = *(_QWORD *)(v0 + 1072);
  v15 = *(_QWORD *)(v0 + 1064);
  v16 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v16 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = (void *)sub_23BB8A784();
  v20 = objc_msgSend(v18, sel_localizedStringForKey_value_table_, v19, 0, 0);

  v21 = sub_23BB8A7B4();
  v23 = v22;

  sub_23B9A12B4(v15, v14, v13, v12, v25, v26, v27);
  *(_QWORD *)(v16 + 8) = v21;
  *(_QWORD *)(v16 + 16) = v23;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5A728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[157] = a1;
  v4[158] = a2;
  v4[159] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return swift_task_switch();
}

uint64_t sub_23BB5A7EC()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;

  v1 = *(_WORD *)(v0 + 318) & 0x101;
  sub_23BB88978();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1280) = v2;
    *v2 = v0;
    v2[1] = sub_23BB5AF3C;
    return sub_23BA65F38();
  }
  else
  {
    swift_release();
    v4 = *(_QWORD *)(v0 + 1264);
    v5 = *(_QWORD *)(v0 + 1256);
    v6 = *(_QWORD *)(v0 + 760);
    v7 = *(_QWORD *)(v0 + 744);
    v8 = *(_QWORD *)(v0 + 736);
    v9 = *(_QWORD *)(v0 + 720);
    v10 = *(_QWORD *)(v0 + 704);
    v11 = *(_QWORD *)(v0 + 688);
    v29 = *(_QWORD *)(v0 + 856);
    v30 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, v6, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v8);
    MessagePayload.init(id:kind:timestamp:initialLocation:)(v5, v4, &v29, v10, 0, v9);
    MessagePayload.url.getter(v11);
    v12 = sub_23BB8884C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v15 = *(_QWORD *)(v0 + 688);
      v14 = (void *)sub_23BB88828();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
    }
    v16 = *(_QWORD *)(v0 + 1104);
    v17 = *(_QWORD *)(v0 + 1096);
    v18 = *(_QWORD *)(v0 + 1088);
    v19 = *(_QWORD *)(v0 + 1080);
    v20 = *(_QWORD *)(v0 + 1072);
    v21 = *(_QWORD *)(v0 + 1064);
    v24 = *(void **)(v0 + 1112);
    v25 = *(_QWORD *)(v0 + 744);
    v26 = *(_QWORD *)(v0 + 736);
    v27 = *(_QWORD *)(v0 + 760);
    v22 = *(_QWORD *)(v0 + 720);
    v28 = *(_QWORD *)(v0 + 672);
    v23 = *(_QWORD *)(v0 + 568);
    objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v14);
    sub_23B9A12B4(v21, v20, v19, v18, v17, v16, v24);

    sub_23B989D9C(v22, type metadata accessor for MessagePayload);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
    sub_23B989D60(v28, &qword_256A5DDC8);
    *(_BYTE *)v23 = 1;
    *(_QWORD *)(v23 + 8) = 0;
    *(_QWORD *)(v23 + 16) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB5AB0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 672);
  swift_release();
  sub_23B989D60(v1, &qword_256A5DDC8);
  v2 = *(void **)(v0 + 1272);
  if (qword_256A58E00 != -1)
    swift_once();
  v3 = sub_23BB891C4();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A73E80);
  v4 = v2;
  v5 = v2;
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABD4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v29 = v10;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 528) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v29);
    sub_23BB8ACB8();
    *(_WORD *)(v8 + 12) = 2112;
    v11 = v2;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 536) = v12;
    sub_23BB8ACB8();
    *v9 = v12;

    _os_log_impl(&dword_23B979000, v6, v7, "CompositeAppViewModel: %s - %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);
  }
  else
  {

  }
  v27 = *(_QWORD *)(v0 + 1104);
  v28 = *(void **)(v0 + 1112);
  v26 = *(_QWORD *)(v0 + 1096);
  v13 = *(_QWORD *)(v0 + 1088);
  v14 = *(_QWORD *)(v0 + 1080);
  v15 = *(_QWORD *)(v0 + 1072);
  v16 = *(_QWORD *)(v0 + 1064);
  v17 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v17 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v20 = (void *)sub_23BB8A784();
  v21 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, 0, 0);

  v22 = sub_23BB8A7B4();
  v24 = v23;

  sub_23B9A12B4(v16, v15, v14, v13, v26, v27, v28);
  *(_QWORD *)(v17 + 8) = v22;
  *(_QWORD *)(v17 + 16) = v24;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5AF3C(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)

  else
    *(_QWORD *)(v4 + 1288) = a1;
  return swift_task_switch();
}

uint64_t sub_23BB5AFBC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  __int16 v30;

  v1 = *(void **)(v0 + 1288);
  swift_release();
  v2 = *(_QWORD *)(v0 + 1264);
  v3 = *(_QWORD *)(v0 + 1256);
  v4 = *(_QWORD *)(v0 + 760);
  v5 = *(_QWORD *)(v0 + 744);
  v6 = *(_QWORD *)(v0 + 736);
  v7 = *(_QWORD *)(v0 + 720);
  v8 = *(_QWORD *)(v0 + 704);
  v9 = *(_QWORD *)(v0 + 688);
  v29 = *(_QWORD *)(v0 + 856);
  v30 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v6);
  v28 = v1;
  MessagePayload.init(id:kind:timestamp:initialLocation:)(v3, v2, &v29, v8, v1, v7);
  MessagePayload.url.getter(v9);
  v10 = sub_23BB8884C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    v13 = *(_QWORD *)(v0 + 688);
    v12 = (void *)sub_23BB88828();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  v14 = *(void **)(v0 + 1112);
  v15 = *(_QWORD *)(v0 + 1104);
  v16 = *(_QWORD *)(v0 + 1096);
  v17 = *(_QWORD *)(v0 + 1088);
  v18 = *(_QWORD *)(v0 + 1080);
  v19 = *(_QWORD *)(v0 + 1072);
  v20 = *(_QWORD *)(v0 + 1064);
  v25 = *(_QWORD *)(v0 + 736);
  v26 = *(_QWORD *)(v0 + 760);
  v23 = *(_QWORD *)(v0 + 720);
  v24 = *(_QWORD *)(v0 + 744);
  v27 = *(_QWORD *)(v0 + 672);
  v21 = *(_QWORD *)(v0 + 568);
  objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v12);
  sub_23B9A12B4(v20, v19, v18, v17, v16, v15, v14);

  sub_23B989D9C(v23, type metadata accessor for MessagePayload);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  sub_23B989D60(v27, &qword_256A5DDC8);
  *(_BYTE *)v21 = 1;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5B298(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 1368) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 342) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_23BB5B318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  if (*(_BYTE *)(v0 + 342) == 1)
  {
    v1 = *(_QWORD *)(v0 + 1328);
    v2 = *(_QWORD *)(v0 + 1320);
    v3 = *(uint64_t **)(v0 + 592);
    *(_QWORD *)(v0 + 368) = *(_QWORD *)(v0 + 1312);
    *(_QWORD *)(v0 + 376) = v2;
    *(_BYTE *)(v0 + 384) = v1;
    v4 = *v3;
    v5 = v3[1];
    *(_QWORD *)(v0 + 1376) = v5;
    v6 = *((_BYTE *)v3 + 16);
    *(_QWORD *)(v0 + 392) = v4;
    *(_QWORD *)(v0 + 400) = v5;
    *(_BYTE *)(v0 + 408) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1384) = v7;
    *v7 = v0;
    v7[1] = sub_23BB5B760;
    return sub_23BA3F37C((uint64_t *)(v0 + 368), (_OWORD *)(v0 + 392));
  }
  else
  {
    swift_release();
    if (qword_256A58E00 != -1)
      swift_once();
    v9 = sub_23BB891C4();
    __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
    v10 = sub_23BB891AC();
    v11 = sub_23BB8ABD4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v32 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 472) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v32);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v10, v11, "CompositeAppViewModel: %s - Can't request to friends that don't support find my plugin", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
    }

    v30 = *(_QWORD *)(v0 + 1336);
    v31 = *(void **)(v0 + 1344);
    v14 = *(_QWORD *)(v0 + 1320);
    v15 = *(_QWORD *)(v0 + 1312);
    v16 = *(_QWORD *)(v0 + 1304);
    v17 = *(_QWORD *)(v0 + 1296);
    v26 = *(_QWORD *)(v0 + 624);
    v27 = *(_QWORD *)(v0 + 1328);
    v28 = *(_QWORD *)(v0 + 616);
    v29 = *(_QWORD *)(v0 + 632);
    v18 = *(_QWORD *)(v0 + 568);
    *(_BYTE *)v18 = 0;
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v20 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v21 = (void *)sub_23BB8A784();
    v22 = objc_msgSend(v20, sel_localizedStringForKey_value_table_, v21, 0, 0);

    v23 = sub_23BB8A7B4();
    v25 = v24;

    swift_release();
    sub_23B9A12B4(v17, v16, v15, v14, v27, v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v28);
    *(_QWORD *)(v18 + 8) = v23;
    *(_QWORD *)(v18 + 16) = v25;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB5B760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 1392) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    *(_QWORD *)(v6 + 1400) = a2;
    *(_QWORD *)(v6 + 1408) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23BB5B80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 1408);
  v2 = *(_QWORD *)(v0 + 1400);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = *(_QWORD *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 736);
  v6 = *(_QWORD *)(v0 + 712);
  v7 = *(_QWORD *)(v0 + 680);
  swift_release();
  sub_23BB88978();
  v8 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  v9 = v6 + v8[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v9, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v5);
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = v2;
  *(_WORD *)(v6 + 16) = 512;
  v10 = v6 + v8[7];
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)v10 = 0u;
  *(_BYTE *)(v10 + 80) = 1;
  *(_BYTE *)(v6 + v8[8]) = 0;
  MessagePayload.url.getter(v7);
  v11 = sub_23BB8884C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) != 1)
  {
    v14 = *(_QWORD *)(v0 + 680);
    v13 = (void *)sub_23BB88828();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
  }
  v23 = *(_QWORD *)(v0 + 1336);
  v24 = *(void **)(v0 + 1344);
  v15 = *(_QWORD *)(v0 + 1328);
  v16 = *(_QWORD *)(v0 + 1320);
  v17 = *(_QWORD *)(v0 + 1312);
  v18 = *(_QWORD *)(v0 + 1304);
  v19 = *(_QWORD *)(v0 + 1296);
  v27 = *(_QWORD *)(v0 + 736);
  v28 = *(_QWORD *)(v0 + 752);
  v20 = *(_QWORD *)(v0 + 712);
  v25 = *(_QWORD *)(v0 + 744);
  v26 = *(_QWORD *)(v0 + 624);
  v29 = *(_QWORD *)(v0 + 616);
  v30 = *(_QWORD *)(v0 + 632);
  v21 = *(_QWORD *)(v0 + 568);
  objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v13);
  swift_release();

  sub_23B9A12B4(v19, v18, v17, v16, v15, v23, v24);
  sub_23B989D9C(v20, type metadata accessor for MessagePayload);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v28, v27);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v29);
  *(_BYTE *)v21 = 1;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5BB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 632);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 616);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 1392);
  if (qword_256A58E00 != -1)
    swift_once();
  v5 = sub_23BB891C4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
  v6 = v4;
  v7 = v4;
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABD4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v31 = v12;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 480) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v31);
    sub_23BB8ACB8();
    *(_WORD *)(v10 + 12) = 2112;
    v13 = v4;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 544) = v14;
    sub_23BB8ACB8();
    *v11 = v14;

    _os_log_impl(&dword_23B979000, v8, v9, "CompositeAppViewModel: %s - %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v12, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }
  else
  {

  }
  v29 = *(_QWORD *)(v0 + 1336);
  v30 = *(void **)(v0 + 1344);
  v28 = *(_QWORD *)(v0 + 1328);
  v15 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1304);
  v18 = *(_QWORD *)(v0 + 1296);
  v19 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v19 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = (void *)sub_23BB8A784();
  v23 = objc_msgSend(v21, sel_localizedStringForKey_value_table_, v22, 0, 0);

  v24 = sub_23BB8A7B4();
  v26 = v25;

  sub_23B9A12B4(v18, v17, v16, v15, v28, v29, v30);
  *(_QWORD *)(v19 + 8) = v24;
  *(_QWORD *)(v19 + 16) = v26;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5BF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int16 v21;

  swift_release();
  v1 = *(_QWORD *)(v0 + 1040);
  v2 = *(_QWORD *)(v0 + 1032);
  v3 = *(_WORD *)(v0 + 316);
  v4 = *(_QWORD *)(v0 + 768);
  v5 = *(_QWORD *)(v0 + 744);
  v6 = *(_QWORD *)(v0 + 736);
  v7 = *(_QWORD *)(v0 + 728);
  v8 = *(_QWORD *)(v0 + 704);
  v9 = *(_QWORD *)(v0 + 696);
  v20 = *(_QWORD *)(v0 + 856);
  v21 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v6);
  MessagePayload.init(id:kind:timestamp:initialLocation:)(v2, v1, &v20, v8, 0, v7);
  MessagePayload.url.getter(v9);
  v10 = sub_23BB8884C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    v13 = *(_QWORD *)(v0 + 696);
    v12 = (void *)sub_23BB88828();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  v14 = *(_QWORD *)(v0 + 768);
  v15 = *(_QWORD *)(v0 + 744);
  v16 = *(_QWORD *)(v0 + 736);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 568);
  objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v12);

  sub_23B989D9C(v17, type metadata accessor for MessagePayload);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  *(_BYTE *)v18 = 1;
  *(_QWORD *)(v18 + 8) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5C1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;

  swift_release();
  v1 = *(_QWORD *)(v0 + 1264);
  v2 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 760);
  v4 = *(_QWORD *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 736);
  v6 = *(_QWORD *)(v0 + 720);
  v7 = *(_QWORD *)(v0 + 704);
  v8 = *(_QWORD *)(v0 + 688);
  v27 = *(_QWORD *)(v0 + 856);
  v28 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v7, 0, 1, v5);
  MessagePayload.init(id:kind:timestamp:initialLocation:)(v2, v1, &v27, v7, 0, v6);
  MessagePayload.url.getter(v8);
  v9 = sub_23BB8884C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v12 = *(_QWORD *)(v0 + 688);
    v11 = (void *)sub_23BB88828();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  v13 = *(_QWORD *)(v0 + 1104);
  v14 = *(_QWORD *)(v0 + 1096);
  v15 = *(_QWORD *)(v0 + 1088);
  v16 = *(_QWORD *)(v0 + 1080);
  v17 = *(_QWORD *)(v0 + 1072);
  v18 = *(_QWORD *)(v0 + 1064);
  v22 = *(void **)(v0 + 1112);
  v23 = *(_QWORD *)(v0 + 744);
  v24 = *(_QWORD *)(v0 + 736);
  v25 = *(_QWORD *)(v0 + 760);
  v19 = *(_QWORD *)(v0 + 720);
  v26 = *(_QWORD *)(v0 + 672);
  v20 = *(_QWORD *)(v0 + 568);
  objc_msgSend(*(id *)(v0 + 600), sel_setURL_, v11);
  sub_23B9A12B4(v18, v17, v16, v15, v14, v13, v22);

  sub_23B989D9C(v19, type metadata accessor for MessagePayload);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  sub_23B989D60(v26, &qword_256A5DDC8);
  *(_BYTE *)v20 = 1;
  *(_QWORD *)(v20 + 8) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB5C480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 632);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 616);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 1368);
  if (qword_256A58E00 != -1)
    swift_once();
  v5 = sub_23BB891C4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
  v6 = v4;
  v7 = v4;
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABD4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v31 = v12;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 480) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v31);
    sub_23BB8ACB8();
    *(_WORD *)(v10 + 12) = 2112;
    v13 = v4;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 544) = v14;
    sub_23BB8ACB8();
    *v11 = v14;

    _os_log_impl(&dword_23B979000, v8, v9, "CompositeAppViewModel: %s - %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v12, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }
  else
  {

  }
  v29 = *(_QWORD *)(v0 + 1336);
  v30 = *(void **)(v0 + 1344);
  v28 = *(_QWORD *)(v0 + 1328);
  v15 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1304);
  v18 = *(_QWORD *)(v0 + 1296);
  v19 = *(_QWORD *)(v0 + 568);
  *(_BYTE *)v19 = 0;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = (void *)sub_23BB8A784();
  v23 = objc_msgSend(v21, sel_localizedStringForKey_value_table_, v22, 0, 0);

  v24 = sub_23BB8A7B4();
  v26 = v25;

  sub_23B9A12B4(v18, v17, v16, v15, v28, v29, v30);
  *(_QWORD *)(v19 + 8) = v24;
  *(_QWORD *)(v19 + 16) = v26;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BB5C8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  BOOL v57;
  unint64_t v58;
  unint64_t v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  unint64_t *aBlock;
  uint64_t v83;
  void (*v84)(uint64_t, void *);
  void *v85;
  uint64_t (*v86)();
  uint64_t v87;

  v79 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64200);
  v75 = *(_QWORD *)(v5 - 8);
  v76 = *(_QWORD *)(v75 + 64);
  v77 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v74 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = (void *)sub_23BB8A784();
  v12 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, 0, 0);

  sub_23BB8A7B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 64) = sub_23B9A5C8C();
  *(_QWORD *)(v13 + 32) = a2;
  *(_QWORD *)(v13 + 40) = a3;
  swift_bridgeObjectRetain();
  v72 = v9;
  v73 = ObjCClassFromMetadata;
  v14 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = (void *)sub_23BB8A784();
  v16 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, 0);

  sub_23BB8A7B4();
  swift_bridgeObjectRetain();
  sub_23BB8A7CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v78 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v17, v18, 1);

  v19 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v20 = (void *)sub_23BB8A784();
  v21 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, 0, 0);

  sub_23BB8A7B4();
  v22 = v74;
  v23 = v75;
  v71 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  v24 = v77;
  v71(v74, v79, v77);
  v25 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v76 += v25;
  v26 = swift_allocObject();
  v75 = *(_QWORD *)(v23 + 32);
  ((void (*)(unint64_t, char *, uint64_t))v75)(v26 + v25, v22, v24);
  v27 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v86 = sub_23BB5ED64;
  v87 = v26;
  aBlock = (unint64_t *)MEMORY[0x24BDAC760];
  v83 = 1107296256;
  v84 = sub_23BA1E328;
  v85 = &block_descriptor_6;
  v28 = _Block_copy(&aBlock);
  swift_release();
  v29 = (void *)objc_opt_self();
  v30 = objc_msgSend(v29, sel_actionWithTitle_style_handler_, v27, 0, v28);
  _Block_release(v28);

  v31 = v78;
  objc_msgSend(v78, sel_addAction_, v30);

  v32 = objc_msgSend(v72, sel_bundleForClass_, v73);
  v33 = (void *)sub_23BB8A784();
  v34 = objc_msgSend(v32, sel_localizedStringForKey_value_table_, v33, 0, 0);

  sub_23BB8A7B4();
  v71(v22, v79, v24);
  v35 = swift_allocObject();
  ((void (*)(unint64_t, char *, uint64_t))v75)(v35 + v25, v22, v24);
  v36 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v86 = sub_23BB5EDEC;
  v87 = v35;
  aBlock = (unint64_t *)MEMORY[0x24BDAC760];
  v83 = 1107296256;
  v84 = sub_23BA1E328;
  v85 = &block_descriptor_24;
  v37 = _Block_copy(&aBlock);
  swift_release();
  v38 = objc_msgSend(v29, sel_actionWithTitle_style_handler_, v36, 1, v37);
  _Block_release(v37);

  objc_msgSend(v31, sel_addAction_, v38);
  v39 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v40 = objc_msgSend(v39, sel_connectedScenes);

  sub_23B9C60B4(0, &qword_256A64208);
  sub_23BB5EE5C();
  v41 = sub_23BB8AAF0();

  if ((v41 & 0xC000000000000001) != 0)
  {
    v43 = (unint64_t *)MEMORY[0x24BEE4B08];
    aBlock = (unint64_t *)MEMORY[0x24BEE4B08];
    sub_23BB8ADA8();
    v44 = sub_23BB8ADB4();
    if (v44)
    {
      v31 = (id)(MEMORY[0x24BEE4AD0] + 8);
      do
      {
        v80 = v44;
        swift_dynamicCast();
        v45 = objc_msgSend(v81, sel_activationState);
        v46 = (unint64_t)v81;
        if (v45)
        {

        }
        else
        {
          v47 = aBlock;
          if (aBlock[3] <= aBlock[2])
          {
            sub_23BAD6F14();
            v47 = aBlock;
          }
          v48 = v46;
          v49 = sub_23BB8AC64();
          v50 = v47 + 7;
          v51 = -1 << *((_BYTE *)v47 + 32);
          v52 = v49 & ~v51;
          v53 = v52 >> 6;
          if (((-1 << v52) & ~v47[(v52 >> 6) + 7]) != 0)
          {
            v54 = __clz(__rbit64((-1 << v52) & ~v47[(v52 >> 6) + 7])) | v52 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v55 = 0;
            v56 = (unint64_t)(63 - v51) >> 6;
            do
            {
              if (++v53 == v56 && (v55 & 1) != 0)
              {
                __break(1u);
                goto LABEL_43;
              }
              v57 = v53 == v56;
              if (v53 == v56)
                v53 = 0;
              v55 |= v57;
              v58 = v50[v53];
            }
            while (v58 == -1);
            v54 = __clz(__rbit64(~v58)) + (v53 << 6);
          }
          *(unint64_t *)((char *)v50 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
          *(_QWORD *)(v47[6] + 8 * v54) = v46;
          ++v47[2];
        }
        v44 = sub_23BB8ADB4();
      }
      while (v44);
      v43 = aBlock;
      v31 = v78;
    }
    swift_release();
  }
  else
  {
    v43 = sub_23BB5D2A0(v41, v42);
  }
  sub_23BB55C6C((uint64_t)v43);
  v48 = v59;
  swift_release();
  if (v48 >> 62)
    goto LABEL_44;
  v60 = *(void **)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v60)
  {
    if ((v48 & 0xC000000000000001) != 0)
    {
      v61 = (id)MEMORY[0x24260CD9C](0, v48);
    }
    else
    {
      if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_48;
      }
      v61 = *(id *)(v48 + 32);
    }
    v62 = v61;
    swift_bridgeObjectRelease();
    v63 = objc_msgSend(v62, sel_windows);

    sub_23B9C60B4(0, &qword_256A64218);
    v48 = sub_23BB8A8EC();

    if (!(v48 >> 62))
    {
      v64 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v64)
        goto LABEL_37;
      goto LABEL_30;
    }
LABEL_48:
    swift_bridgeObjectRetain();
    v64 = sub_23BB8AFD0();
    if (!v64)
    {
LABEL_37:
      v60 = 0;
LABEL_38:
      swift_bridgeObjectRelease();
      break;
    }
LABEL_30:
    v65 = 4;
    while (1)
    {
      v66 = (v48 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24260CD9C](v65 - 4, v48)
          : *(id *)(v48 + 8 * v65);
      v60 = v66;
      v67 = v65 - 3;
      if (__OFADD__(v65 - 4, 1))
        break;
      if ((objc_msgSend(v66, sel_isKeyWindow) & 1) != 0)
        goto LABEL_38;

      ++v65;
      if (v67 == v64)
        goto LABEL_37;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    v60 = (void *)sub_23BB8AFD0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v68 = objc_msgSend(v60, sel_rootViewController);
  if (v68)
  {
    v69 = v68;
    objc_msgSend(v69, sel_presentViewController_animated_completion_, v31, 1, 0);

  }
  else
  {
    LOBYTE(aBlock) = 1;
    sub_23BB8A9A0();

  }
}

unint64_t *sub_23BB5D2A0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  unint64_t *v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(isStackAllocationSafe + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_23BB5D3FC((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_23BB5D3FC((unint64_t *)v8, v5, v3);
    swift_release();
    MEMORY[0x24260D9B4](v8, -1, -1);
  }
  return v7;
}

unint64_t *sub_23BB5D3FC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = result;
  v5 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = (unint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v13), sel_activationState);
    if (!result)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_23BAE4C34(v4, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23BB5D594(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = v1;
  v2[17] = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  v2[18] = swift_task_alloc();
  v3 = type metadata accessor for CompositeAppViewInitialInfo();
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61448);
  v2[23] = swift_task_alloc();
  v4 = type metadata accessor for MessagePayload(0);
  v2[24] = v4;
  v2[25] = *(_QWORD *)(v4 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  v2[29] = swift_task_alloc();
  v5 = sub_23BB8884C();
  v2[30] = v5;
  v2[31] = *(_QWORD *)(v5 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  sub_23BB8A9F4();
  v2[34] = sub_23BB8A9E8();
  v2[35] = sub_23BB8A988();
  v2[36] = v6;
  return swift_task_switch();
}

uint64_t sub_23BB5D728()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t ObjCClassFromMetadata;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  os_log_type_t type[8];
  char typea;
  uint64_t v115;

  v1 = objc_msgSend(*(id *)(v0 + 120), sel_URL);
  if (!v1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 248) + 56))(*(_QWORD *)(v0 + 232), 1, 1, *(_QWORD *)(v0 + 240));
    goto LABEL_10;
  }
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  sub_23BB88834();

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v7(v6, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
LABEL_10:
    v31 = *(_QWORD *)(v0 + 232);
    swift_release();
    sub_23B989D60(v31, &qword_256A599B8);
    if (qword_256A58E00 != -1)
      swift_once();
    v32 = sub_23BB891C4();
    __swift_project_value_buffer(v32, (uint64_t)qword_256A73E80);
    v33 = sub_23BB891AC();
    v34 = sub_23BB8ABD4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v115 = v36;
      *(_DWORD *)v35 = 136315138;
      *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v115);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v33, v34, "CompositeAppViewModel: %s - no url on the MSMessage", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v36, -1, -1);
      MEMORY[0x24260D9B4](v35, -1, -1);
    }

    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v38 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v39 = (void *)sub_23BB8A784();
    v40 = objc_msgSend(v38, sel_localizedStringForKey_value_table_, v39, 0, 0);

    v41 = sub_23BB8A7B4();
    v112 = v42;
    *(_QWORD *)type = v41;

    goto LABEL_15;
  }
  v9 = *(char **)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 184);
  v7(v8, *(_QWORD *)(v0 + 232), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, v8, v11);
  MessagePayload.init(from:)(v9, v14);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v13);
  v16 = *(_QWORD *)(v0 + 184);
  if (v15 == 1)
  {
    swift_release();
    sub_23B989D60(v16, &qword_256A61448);
    if (qword_256A58E00 != -1)
      swift_once();
    v17 = sub_23BB891C4();
    __swift_project_value_buffer(v17, (uint64_t)qword_256A73E80);
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABD4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v115 = v21;
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)(v0 + 40) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v115);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v18, v19, "CompositeAppViewModel: %s - could not create a MessagePayload from the MSMessage", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v21, -1, -1);
      MEMORY[0x24260D9B4](v20, -1, -1);
    }

    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 248);
    type metadata accessor for FindMyUICore();
    v25 = swift_getObjCClassFromMetadata();
    v26 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v25);
    v27 = (void *)sub_23BB8A784();
    v28 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v27, 0, 0);

    v29 = sub_23BB8A7B4();
    v112 = v30;
    *(_QWORD *)type = v29;

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    goto LABEL_15;
  }
  v45 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 160);
  v46 = *(_QWORD *)(v0 + 144);
  v47 = *(_QWORD *)(v0 + 128);
  sub_23B989CA4(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), type metadata accessor for MessagePayload);
  v48 = v47 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v48, v46, &qword_256A59C70);
  v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v46, 1, v45);
  v50 = *(_QWORD *)(v0 + 144);
  if (v49 == 1)
  {
    swift_release();
    sub_23B989D60(v50, &qword_256A59C70);
    if (qword_256A58E00 != -1)
      swift_once();
    v51 = sub_23BB891C4();
    __swift_project_value_buffer(v51, (uint64_t)qword_256A73E80);
    v52 = sub_23BB891AC();
    v53 = sub_23BB8ABD4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v115 = v55;
      *(_DWORD *)v54 = 136315138;
      *(_QWORD *)(v0 + 56) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v115);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v52, v53, "CompositeAppViewModel: %s - ShareLocation with no initialInfo", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v55, -1, -1);
      MEMORY[0x24260D9B4](v54, -1, -1);
    }

    v56 = *(_QWORD *)(v0 + 264);
    v57 = *(_QWORD *)(v0 + 240);
    v58 = *(_QWORD *)(v0 + 248);
    v59 = *(_QWORD *)(v0 + 224);
    type metadata accessor for FindMyUICore();
    v60 = swift_getObjCClassFromMetadata();
    v61 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v60);
    v62 = (void *)sub_23BB8A784();
    v63 = objc_msgSend(v61, sel_localizedStringForKey_value_table_, v62, 0, 0);

    v64 = sub_23BB8A7B4();
    v112 = v65;
    *(_QWORD *)type = v64;

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
    goto LABEL_31;
  }
  sub_23B989CA4(v50, *(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  sub_23BB88D8C();
  typea = sub_23BB88D44();
  v66 = MEMORY[0x24260ACCC]();
  if (qword_256A58E00 != -1)
    swift_once();
  v68 = *(_QWORD *)(v0 + 168);
  v67 = *(_QWORD *)(v0 + 176);
  v69 = sub_23BB891C4();
  *(_QWORD *)(v0 + 296) = __swift_project_value_buffer(v69, (uint64_t)qword_256A73E80);
  sub_23B989CE8(v67, v68, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  v70 = sub_23BB891AC();
  v71 = sub_23BB8ABEC();
  v72 = os_log_type_enabled(v70, v71);
  v73 = *(_QWORD *)(v0 + 168);
  if (v72)
  {
    v110 = v66;
    v108 = *(_QWORD *)(v0 + 152);
    v74 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v115 = v75;
    *(_DWORD *)v74 = 136315906;
    *(_QWORD *)(v0 + 112) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v115);
    sub_23BB8ACB8();
    *(_WORD *)(v74 + 12) = 1024;
    *(_DWORD *)(v0 + 360) = typea & 1;
    sub_23BB8ACB8();
    *(_WORD *)(v74 + 18) = 1024;
    *(_DWORD *)(v0 + 364) = v66 & 1;
    sub_23BB8ACB8();
    *(_WORD *)(v74 + 24) = 1024;
    v76 = *(unsigned __int8 *)(v73 + *(int *)(v108 + 32));
    sub_23B989D9C(v73, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    *(_DWORD *)(v0 + 368) = v76;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v70, v71, "CompositeAppViewModel: %s - isRestrictedInScreenTime: %{BOOL}d - isProvisionedForLocationSharing: %{BOOL}d, areFindMyFeaturesDisable: %{BOOL}d", (uint8_t *)v74, 0x1Eu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v75, -1, -1);
    MEMORY[0x24260D9B4](v74, -1, -1);

    if ((v110 & 1) == 0)
    {
LABEL_26:
      v77 = *(_QWORD *)(v0 + 248);
      swift_release();
      type metadata accessor for FindMyUICore();
      v78 = swift_getObjCClassFromMetadata();
      v79 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v78);
      v80 = *(_QWORD *)(v0 + 264);
      v81 = *(_QWORD *)(v0 + 240);
      v59 = *(_QWORD *)(v0 + 224);
      v82 = *(_QWORD *)(v0 + 176);
      v83 = (void *)sub_23BB8A784();
      v102 = objc_msgSend(v79, sel_localizedStringForKey_value_table_, v83, 0, 0);

      v103 = sub_23BB8A7B4();
      v112 = v104;
      *(_QWORD *)type = v103;

      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v80, v81);
      sub_23B989D9C(v82, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
LABEL_31:
      sub_23B989D9C(v59, type metadata accessor for MessagePayload);
LABEL_15:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD, os_log_type_t *, uint64_t))(v0 + 8))(0, *(os_log_type_t **)type, v112);
    }
  }
  else
  {
    sub_23B989D9C(*(_QWORD *)(v0 + 168), (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);

    if ((v66 & 1) == 0)
      goto LABEL_26;
  }
  if ((typea & 1) != 0)
    goto LABEL_26;
  v84 = *(void **)(v0 + 120);
  sub_23B989CE8(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 216), type metadata accessor for MessagePayload);
  v85 = v84;
  swift_retain_n();
  v86 = v85;
  v87 = sub_23BB891AC();
  v88 = sub_23BB8ABEC();
  v89 = os_log_type_enabled(v87, v88);
  v90 = *(_QWORD *)(v0 + 216);
  if (v89)
  {
    v109 = *(_QWORD *)(v0 + 208);
    v91 = *(_QWORD *)(v0 + 128);
    v92 = *(void **)(v0 + 120);
    v93 = swift_slowAlloc();
    v111 = swift_slowAlloc();
    v115 = v111;
    *(_DWORD *)v93 = 136315906;
    *(_QWORD *)(v0 + 72) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v115);
    sub_23BB8ACB8();
    *(_WORD *)(v93 + 12) = 2080;
    v94 = objc_msgSend(v92, sel_debugDescription);
    v107 = v90;
    v95 = sub_23BB8A7B4();
    v97 = v96;

    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v95, v97, &v115);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v93 + 22) = 2080;
    *(_QWORD *)(v0 + 88) = v91;
    swift_retain();
    v98 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 96) = sub_23BB7B69C(v98, v99, &v115);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v93 + 32) = 2080;
    sub_23B989CE8(v107, v109, type metadata accessor for MessagePayload);
    v100 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(v100, v101, &v115);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B989D9C(v107, type metadata accessor for MessagePayload);
    _os_log_impl(&dword_23B979000, v87, v88, "CompositeAppViewModel: %s - %s - %s - payload: %s", (uint8_t *)v93, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v111, -1, -1);
    MEMORY[0x24260D9B4](v93, -1, -1);
  }
  else
  {
    v105 = *(void **)(v0 + 120);

    swift_release_n();
    sub_23B989D9C(v90, type metadata accessor for MessagePayload);
  }

  v106 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v106;
  *v106 = v0;
  v106[1] = sub_23BB5E6F0;
  return sub_23BB0A790();
}

uint64_t sub_23BB5E6F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB5E748()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v9;

  v1 = v0[39];
  v2 = v0[28];
  v3 = v0[22];
  v5 = v0[15];
  v4 = v0[16];
  v6 = (_QWORD *)swift_task_alloc();
  v0[40] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v6[5] = v3;
  v6[6] = v5;
  v9 = (char *)&dword_256A641F0 + dword_256A641F0;
  v7 = (_QWORD *)swift_task_alloc();
  v0[41] = v7;
  *v7 = v0;
  v7[1] = sub_23BB5E7F4;
  return ((uint64_t (*)(void *, _QWORD *))v9)(&unk_256A641E8, v6);
}

uint64_t sub_23BB5E7F4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;

  v8 = *v4;
  *(_QWORD *)(*v4 + 336) = v3;
  swift_task_dealloc();
  if (!v3)
  {
    *(_QWORD *)(v8 + 344) = a3;
    *(_QWORD *)(v8 + 352) = a2;
    *(_BYTE *)(v8 + 372) = a1 & 1;
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23BB5E888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_23B989D9C(v5, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  sub_23B989D9C(v4, type metadata accessor for MessagePayload);
  v9 = *(unsigned __int8 *)(v0 + 372);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 8))(v9, v8, v7);
}

uint64_t sub_23BB5E9A0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release();
  swift_task_dealloc();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v20 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD00000000000002CLL, 0x800000023BB9D1C0, &v20);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "CompositeAppViewModel: %s - Already validating a message!", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v19 = *(_QWORD *)(v0 + 248);
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v7 = *(void **)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = (void *)sub_23BB8A784();
  v13 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v12, 0, 0);

  v14 = sub_23BB8A7B4();
  v17 = v15;
  v18 = v14;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v8, v9);
  sub_23B989D9C(v11, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  sub_23B989D9C(v10, type metadata accessor for MessagePayload);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 8))(0, v18, v17);
}

uint64_t sub_23BB5EC90(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B97C964;
  return sub_23BB563F8(a1, v4, v5, v6, v7, v8);
}

void sub_23BB5ED10(uint64_t a1)
{
  uint64_t v1;

  sub_23BB5C8C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23BB5ED18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB5ED64()
{
  return sub_23BB5EDF4();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t objectdestroyTm_20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64200);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BB5EDEC()
{
  return sub_23BB5EDF4();
}

uint64_t sub_23BB5EDF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64200);
  return sub_23BB8A9A0();
}

unint64_t sub_23BB5EE5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A64210;
  if (!qword_256A64210)
  {
    v1 = sub_23B9C60B4(255, &qword_256A64208);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256A64210);
  }
  return result;
}

Swift::Bool __swiftcall CLLocation.isNearby(_:distanceInMeters:)(CLLocation _, Swift::Double distanceInMeters)
{
  void *v2;
  Class isa;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  isa = _.super.isa;
  objc_msgSend(v2, sel_distanceFromLocation_, _.super.isa);
  v6 = v5;
  objc_msgSend(v2, sel_horizontalAccuracy);
  v8 = v7;
  -[objc_class horizontalAccuracy](isa, sel_horizontalAccuracy);
  return v6 / sqrt(distanceInMeters * distanceInMeters + v8 * v8 + v9 * v9) < 1.5;
}

const char *Feature.FindMyUI.domain.getter()
{
  return "FindMy";
}

const char *Feature.FindMyUI.feature.getter()
{
  _BYTE *v0;

  if (*v0)
    return "New_People_List_Rows";
  else
    return "New_Contact_Picker";
}

BOOL static Feature.FindMyUI.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Feature.FindMyUI.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t Feature.FindMyUI.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

unint64_t sub_23BB5F024()
{
  unint64_t result;

  result = qword_256A64220;
  if (!qword_256A64220)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Feature.FindMyUI, &type metadata for Feature.FindMyUI);
    atomic_store(result, (unint64_t *)&qword_256A64220);
  }
  return result;
}

uint64_t _s8FindMyUIOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB5F0B4 + 4 * byte_23BB97ABD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB5F0E8 + 4 * byte_23BB97AB8[v4]))();
}

uint64_t sub_23BB5F0E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB5F0F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB5F0F8);
  return result;
}

uint64_t sub_23BB5F104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB5F10CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB5F110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB5F118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

id sub_23BB5F124()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for InteractiveMapModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  strcpy((char *)&qword_256A73E18, "InteractiveMap");
  unk_256A73E27 = -18;
  qword_256A73E28 = (uint64_t)result;
  return result;
}

uint64_t AccessoryOnboardingCoordinator.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
  swift_beginAccess();
  return MEMORY[0x24260DA50](v1);
}

uint64_t AccessoryOnboardingCoordinator.delegate.setter()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*AccessoryOnboardingCoordinator.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x24260DA50](v5);
  return sub_23BB5F348;
}

void sub_23BB5F348(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

char *AccessoryOnboardingCoordinator.__allocating_init(presenter:accessory:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AccessoryOnboardingCoordinator.init(presenter:accessory:)(a1, a2);
}

{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return AccessoryOnboardingCoordinator.init(presenter:accessory:)(a1, a2);
}

char *AccessoryOnboardingCoordinator.init(presenter:accessory:)(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  uint64_t v16;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v7 = &v3[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_viewModel];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v3[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_state] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_pairingStatusTask] = 0;
  v8 = OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_onboardingSession;
  type metadata accessor for OnboardingSessionLive();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  v10 = v3;
  sub_23BB891B8();
  *(_QWORD *)&v3[v8] = v9;
  sub_23BB891B8();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v10[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_accessory] = a2;
  v11 = a2;
  v12 = sub_23BB891AC();
  v13 = sub_23BB8ABEC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_23B979000, v12, v13, "AccessoryOnboardingCoordinator: init", v14, 2u);
    MEMORY[0x24260D9B4](v14, -1, -1);
  }

  v18.receiver = v10;
  v18.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v18, sel_init);
  v16 = sub_23BB5F654(v11);

  *(_QWORD *)&v15[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_pairingStatusTask] = v16;
  swift_release();
  return v15;
}

{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  uint64_t v16;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v7 = &v3[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_viewModel];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v3[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_state] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_pairingStatusTask] = 0;
  v8 = OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_onboardingSession;
  type metadata accessor for OnboardingSessionLive();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  v10 = v3;
  sub_23BB891B8();
  *(_QWORD *)&v3[v8] = v9;
  sub_23BB891B8();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v10[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_accessory] = a2;
  v11 = a2;
  v12 = sub_23BB891AC();
  v13 = sub_23BB8ABEC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_23B979000, v12, v13, "AccessoryOnboardingCoordinator: init", v14, 2u);
    MEMORY[0x24260D9B4](v14, -1, -1);
  }

  v18.receiver = v10;
  v18.super_class = ObjectType;
  v15 = (char *)objc_msgSendSuper2(&v18, sel_init);
  v16 = sub_23BB5F654(v11);

  *(_QWORD *)&v15[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_pairingStatusTask] = v16;
  swift_release();
  return v15;
}

uint64_t sub_23BB5F654(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB8AA18();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v1;
  v9[5] = a1;
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  v11 = v1;
  v12 = a1;
  if (v10 == 1)
  {
    sub_23B989D60((uint64_t)v6, (uint64_t *)&unk_256A613D0);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    sub_23BB8AA0C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_23BB8A988();
      v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
  }
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = &unk_256A64320;
  *(_QWORD *)(v16 + 24) = v9;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  return swift_task_create();
}

Swift::Bool __swiftcall AccessoryOnboardingCoordinator.shouldShowFMOnboardingFlow()()
{
  id v0;
  void *v1;
  char ApplePencil;

  swift_retain();
  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    ApplePencil = MobileGestalt_get_deviceSupportsFindApplePencil();
    swift_release();

    LOBYTE(v0) = ApplePencil;
  }
  else
  {
    __break(1u);
  }
  return (char)v0;
}

Swift::Void __swiftcall AccessoryOnboardingCoordinator.start()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23B979000, v6, v7, "AccessoryOnboardingCoordinator: Started", v8, 2u);
    MEMORY[0x24260D9B4](v8, -1, -1);
  }

  v9 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  sub_23BB8A9F4();
  v10 = v1;
  v11 = sub_23BB8A9E8();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = v10;
  sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A64278, (uint64_t)v12);
  swift_release();
}

uint64_t sub_23BB5FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[116] = a4;
  v5 = sub_23BB891C4();
  v4[117] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[118] = v6;
  v4[119] = *(_QWORD *)(v6 + 64);
  v4[120] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A642C8);
  v4[121] = swift_task_alloc();
  sub_23BB8A9F4();
  v4[122] = sub_23BB8A9E8();
  v4[123] = sub_23BB8A988();
  v4[124] = v7;
  return swift_task_switch();
}

uint64_t sub_23BB5FE38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 928) + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_pairingStatusTask);
  *(_QWORD *)(v0 + 1000) = v1;
  if (v1)
  {
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1008) = v2;
    *v2 = v0;
    v2[1] = sub_23BB60114;
    return sub_23BB8AA84();
  }
  else
  {
    swift_release();
    v4 = sub_23BB891AC();
    v5 = sub_23BB8ABEC();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_23B979000, v4, v5, "AccessoryOnboardingCoordinator: No pairing status, returning", v6, 2u);
      MEMORY[0x24260D9B4](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 928);

    v8 = v7 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
    swift_beginAccess();
    v9 = (void *)MEMORY[0x24260DA50](v8);
    if (v9)
    {
      objc_msgSend(v9, sel_didCompleteAccessoryOnboarding_pairingSuccessful_, *(_QWORD *)(v0 + 928), 0);
      swift_unknownObjectRelease();
    }
    v10 = *(_QWORD *)(v0 + 928) + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_viewModel;
    swift_beginAccess();
    if (*(_QWORD *)(v10 + 24))
    {
      v11 = *(_QWORD *)(v0 + 960);
      v12 = *(_QWORD *)(v0 + 944);
      v13 = *(_QWORD *)(v0 + 936);
      v14 = *(_QWORD *)(v0 + 928);
      sub_23B9A193C(v10, v0 + 360);
      v15 = *(_QWORD *)(v0 + 384);
      v16 = *(_QWORD *)(v0 + 392);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 360), v15);
      v17 = v14 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_logger;
      v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v17, v13);
      v19 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v18;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v20 + v19, v11, v13);
      v21 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 88);
      swift_retain();
      v21(sub_23BB6210C, v20, v15, v16);
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v0 + 360);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB60114()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

void sub_23BB60170()
{
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_23BB60258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v30;

  sub_23BAFA8F8(v2, v0);
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23B979000, v4, v5, "AccessoryOnboardingCoordinator: Not paired, showing pairing view", v6, 2u);
    MEMORY[0x24260D9B4](v6, -1, -1);
  }
  v7 = *(_QWORD *)(v1 + 928);

  *(_BYTE *)(v7 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_state) = 1;
  v8 = *(_QWORD *)(v7 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_onboardingSession);
  v9 = *(void **)(v7 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_accessory);
  v10 = type metadata accessor for AccessoryUnpairedViewModel();
  v11 = (_QWORD *)swift_allocObject();
  swift_retain();
  v12 = sub_23BB62110(v8, (uint64_t)v9, v11);
  sub_23BAF6388();
  swift_retain();
  sub_23BB8A244();
  v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_256A642E0));
  v14 = (void *)sub_23BB8989C();
  *(_QWORD *)(v1 + 304) = v10;
  *(_QWORD *)(v1 + 312) = &off_250CB30B0;
  *(_QWORD *)(v1 + 280) = v12;
  v15 = v7 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_viewModel;
  swift_beginAccess();
  swift_retain();
  sub_23BB6209C(v30, v15);
  swift_endAccess();
  sub_23BB60C94(v14, 0);
  swift_release();

  v16 = *(_QWORD *)(v1 + 928) + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_viewModel;
  swift_beginAccess();
  if (*(_QWORD *)(v16 + 24))
  {
    v17 = *(_QWORD *)(v1 + 960);
    *(_QWORD *)(v3 - 96) = *(_QWORD *)(v1 + 952);
    v18 = *(_QWORD *)(v1 + 944);
    v19 = *(_QWORD *)(v1 + 936);
    v20 = *(_QWORD *)(v1 + 928);
    v21 = *(_QWORD **)(v3 - 80);
    sub_23B9A193C(v16, (uint64_t)v21);
    v22 = *(_QWORD *)(v1 + 384);
    v23 = *(_QWORD *)(v1 + 392);
    *(_QWORD *)(v3 - 88) = __swift_project_boxed_opaque_existential_1(v21, v22);
    v24 = v20 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_logger;
    v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v24, v19);
    v26 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v25;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v27 + v26, v17, v19);
    v28 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v23 + 88);
    swift_retain();
    v28(sub_23BB6210C, v27, v22, v23);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_23BB60BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  sub_23BAFA8F8(v2, v0);
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23B979000, v3, v4, "AccessoryOnboardingCoordinator: Pairing status unknown, returning", v5, 2u);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 928);

  v7 = v6 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x24260DA50](v7);
  if (v8)
  {
    objc_msgSend(v8, sel_didCompleteAccessoryOnboarding_pairingSuccessful_, *(_QWORD *)(v1 + 928), 0);
    swift_unknownObjectRelease();
  }
  JUMPOUT(0x23BB60A4CLL);
}

void sub_23BB60C94(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  void *ObjCClassFromMetadata;
  id v17;

  v5 = MEMORY[0x24260DA50](v2 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_inlinePresenter);
  if (v5)
  {
    v17 = (id)v5;
    v6 = objc_msgSend(a1, sel_navigationItem);
    objc_msgSend(v6, sel_setHidesBackButton_animated_, a2 & 1, 0);

    v7 = sub_23BB891AC();
    v8 = sub_23BB8ABEC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23B979000, v7, v8, "AccessoryOnboardingCoordinator: Pushing next view", v9, 2u);
      MEMORY[0x24260D9B4](v9, -1, -1);
    }

    objc_msgSend(v17, sel_pushViewController_animated_, a1, 1);
  }
  else
  {
    v10 = MEMORY[0x24260DA50](v2 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_presenter);
    if (!v10)
      return;
    v11 = (void *)v10;
    v12 = sub_23BB891AC();
    v13 = sub_23BB8ABEC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23B979000, v12, v13, "AccessoryOnboardingCoordinator: Presenting next view", v14, 2u);
      MEMORY[0x24260D9B4](v14, -1, -1);
    }

    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7A0]), sel_initWithRootViewController_, a1);
    objc_msgSend(v15, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v15, sel_setModalInPresentation_, 1);
    sub_23BB62458();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v17 = v15;
    objc_msgSend(ObjCClassFromMetadata, sel_preferredContentSize);
    objc_msgSend(v17, sel_setPreferredContentSize_);

    swift_unknownObjectWeakAssign();
    objc_msgSend(v11, sel_presentViewController_animated_completion_, v17, 1, 0);

  }
}

uint64_t sub_23BB60F40(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  *(_BYTE *)(v8 + 242) = v12;
  *(_QWORD *)(v8 + 184) = a7;
  *(_QWORD *)(v8 + 192) = a8;
  *(_QWORD *)(v8 + 176) = a6;
  *(_BYTE *)(v8 + 241) = a5;
  *(_BYTE *)(v8 + 240) = a4;
  v9 = sub_23BB891C4();
  *(_QWORD *)(v8 + 200) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 208) = v10;
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 232) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB60FF0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;

  v1 = *(unsigned __int8 *)(v0 + 240);
  swift_release();
  if (v1 != 1)
  {
    v25 = *(_QWORD *)(v0 + 176) + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
    swift_beginAccess();
    v26 = (void *)MEMORY[0x24260DA50](v25);
    if (!v26)
      goto LABEL_10;
    objc_msgSend(v26, sel_didCompleteAccessoryOnboarding_pairingSuccessful_, *(_QWORD *)(v0 + 176), *(unsigned __int8 *)(v0 + 241));
LABEL_9:
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  if (*(_BYTE *)(v0 + 241) != 1)
  {
    v27 = *(_QWORD *)(v0 + 176) + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
    swift_beginAccess();
    v28 = (void *)MEMORY[0x24260DA50](v27);
    if (!v28)
      goto LABEL_10;
    objc_msgSend(v28, sel_didCompleteAccessoryOnboarding_pairingSuccessful_, *(_QWORD *)(v0 + 176), 0);
    goto LABEL_9;
  }
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_BYTE *)(v0 + 242) & 1;
  *(_BYTE *)(v4 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_state) = 2;
  v6 = *(_QWORD *)(v4 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_onboardingSession);
  v7 = *(void **)(v4 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_accessory);
  v8 = type metadata accessor for AccessoryPairedViewModel();
  v9 = swift_allocObject();
  swift_retain();
  v10 = sub_23BB622C8(v6, (uint64_t)v7, v3, v2, v5, v9);
  *(_QWORD *)(v0 + 168) = v10;
  v11 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_256A64308));
  swift_retain();
  v12 = (void *)sub_23BB8989C();
  *(_QWORD *)(v0 + 40) = v8;
  *(_QWORD *)(v0 + 48) = &off_250CB79C8;
  *(_QWORD *)(v0 + 16) = v10;
  v13 = v4 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_viewModel;
  swift_beginAccess();
  swift_retain();
  sub_23BB6209C(v0 + 16, v13);
  swift_endAccess();
  sub_23BB60C94(v12, 1);
  swift_release();

  if (*(_QWORD *)(v13 + 24))
  {
    v14 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 208);
    v17 = *(_QWORD *)(v0 + 176);
    sub_23B9A193C(v13, v0 + 56);
    v19 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v19);
    v20 = v17 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_logger;
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v20, v16);
    v22 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v21;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v23 + v22, v14, v16);
    v24 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v18 + 88);
    swift_retain();
    v24(sub_23BB6210C, v23, v19, v18);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
LABEL_10:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BB61324(char a1, int a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x24260DA50](a6 + 16);
  if (v16)
  {
    v17 = (_BYTE *)v16;
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABEC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v38 = a3;
      v21 = v20;
      v36 = swift_slowAlloc();
      v42 = v36;
      *(_DWORD *)v21 = 136315650;
      LOBYTE(v39) = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A642F8);
      v22 = sub_23BB8A7D8();
      v37 = a2;
      v39 = sub_23BB7B69C(v22, v23, &v42);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      LOBYTE(v39) = v37;
      v24 = sub_23BB8A7D8();
      v39 = sub_23BB7B69C(v24, v25, &v42);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2080;
      v39 = v38;
      v40 = a4;
      v41 = a5 & 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A64300);
      v26 = sub_23BB8A7D8();
      v39 = sub_23BB7B69C(v26, v27, &v42);
      LOBYTE(a2) = v37;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v18, v19, "AccessoryOnboardingCoordinator: Completing onboarding, pairing skipped? %s pairing successful? %s, pairingLocation: %s", (uint8_t *)v21, 0x20u);
      v28 = v36;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v28, -1, -1);
      v29 = v21;
      a3 = v38;
      MEMORY[0x24260D9B4](v29, -1, -1);
    }

    v30 = v17[OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_state];
    v31 = sub_23BB8AA18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 1, 1, v31);
    sub_23BB8A9F4();
    v32 = v17;
    v33 = sub_23BB8A9E8();
    v34 = swift_allocObject();
    v35 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v34 + 16) = v33;
    *(_QWORD *)(v34 + 24) = v35;
    *(_BYTE *)(v34 + 32) = v30;
    *(_BYTE *)(v34 + 33) = a2 & 1;
    *(_QWORD *)(v34 + 40) = v32;
    *(_QWORD *)(v34 + 48) = a3;
    *(_QWORD *)(v34 + 56) = a4;
    *(_BYTE *)(v34 + 64) = a5 & 1;
    sub_23B989F54((uint64_t)v15, (uint64_t)&unk_256A642F0, v34);
    swift_release();

  }
}

uint64_t sub_23BB6164C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[16] = a4;
  v5[17] = a5;
  v5[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23BB61668()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  _QWORD *v5;

  v0[18] = OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_logger;
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "AccessoryOnboardingCoordinator: Getting accessory pairing status", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }
  v4 = v0[16];

  v0[19] = *(_QWORD *)(v4 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_onboardingSession);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[20] = v5;
  *v5 = v0;
  v5[1] = sub_23BB61768;
  return sub_23BAF370C((uint64_t)(v0 + 2), v0[17], 1);
}

uint64_t sub_23BB61768()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23BB617D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v1 = *(_BYTE *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_23BB625C4(v2, v3);
  sub_23BB625C4(v2, v3);
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v15 = v1;
    v8 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    *(_BYTE *)(v0 + 56) = v15;
    v16 = v14;
    *(_QWORD *)(v0 + 64) = v2;
    *(_QWORD *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = v4;
    *(_QWORD *)(v0 + 88) = v5;
    sub_23BB625C4(v2, v3);
    v9 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 112) = sub_23BB7B69C(v9, v10, &v16);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23BAFA8F8(v2, v3);
    sub_23BAFA8F8(v2, v3);
    _os_log_impl(&dword_23B979000, v6, v7, "AccessoryOnboardingCoordinator: Pairing Status: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    v11 = v8;
    v1 = v15;
    MEMORY[0x24260D9B4](v11, -1, -1);

  }
  else
  {

    sub_23BAFA8F8(v2, v3);
    sub_23BAFA8F8(v2, v3);
  }
  v12 = *(_QWORD *)(v0 + 120);
  *(_BYTE *)v12 = v1;
  *(_QWORD *)(v12 + 8) = v2;
  *(_QWORD *)(v12 + 16) = v3;
  *(_QWORD *)(v12 + 24) = v4;
  *(_QWORD *)(v12 + 32) = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB619F8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 168);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 168);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v15 = v8;
    *(_QWORD *)(v0 + 96) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v10 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(v10, v11, &v15);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "AccessoryOnboardingCoordinator: Error getting pairing status: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 168);

  }
  v13 = *(_QWORD *)(v0 + 120);
  *(_BYTE *)v13 = 0;
  *(_OWORD *)(v13 + 8) = xmmword_23BB8F630;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id AccessoryOnboardingCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AccessoryOnboardingCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccessoryOnboardingCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23BB61D34()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23BB61D60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B990D68;
  return sub_23BB5FD78(a1, v4, v5, v6);
}

uint64_t sub_23BB61DCC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR___FMUIAccessoryOnboardingCoordinator_delegate;
  swift_beginAccess();
  result = MEMORY[0x24260DA50](v3);
  *a2 = result;
  return result;
}

uint64_t sub_23BB61E20()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23BB61E74()
{
  return type metadata accessor for AccessoryOnboardingCoordinator();
}

uint64_t type metadata accessor for AccessoryOnboardingCoordinator()
{
  uint64_t result;

  result = qword_256A642A8;
  if (!qword_256A642A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB61EB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB891C4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AccessoryOnboardingCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessoryOnboardingCoordinator.__allocating_init(presenter:accessory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BB61FD4 + 4 * byte_23BB97B93[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BB62008 + 4 * byte_23BB97B8E[v4]))();
}

uint64_t sub_23BB62008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB62010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB62018);
  return result;
}

uint64_t sub_23BB62024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB6202CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BB62030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB62038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t sub_23BB62058()
{
  unint64_t result;

  result = qword_256A642B8;
  if (!qword_256A642B8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB97C80, &type metadata for State);
    atomic_store(result, (unint64_t *)&qword_256A642B8);
  }
  return result;
}

uint64_t sub_23BB6209C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A642C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB620E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

_QWORD *sub_23BB62110(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v6;
  __int128 v8;
  uint64_t v9;
  _UNKNOWN **v10;

  v9 = type metadata accessor for OnboardingSessionLive();
  v10 = &off_250CB2F98;
  *(_QWORD *)&v8 = a1;
  a3[8] = 0;
  a3[9] = 0;
  sub_23BB891B8();
  *((_BYTE *)a3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__shouldShowAlert) = 0;
  v6 = (_QWORD *)((char *)a3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__subtitle);
  *v6 = 0;
  v6[1] = 0;
  *((_BYTE *)a3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state) = 2;
  sub_23BB88A44();
  sub_23B9A1980(&v8, (uint64_t)(a3 + 2));
  a3[7] = a2;
  return a3;
}

uint64_t sub_23BB621F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23BB62220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 33);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 32);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B97C964;
  return sub_23BB60F40(a1, v4, v5, v10, v6, v7, v8, v9);
}

uint64_t sub_23BB622C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;

  v14 = type metadata accessor for OnboardingSessionLive();
  v15 = &off_250CB2F98;
  *(_QWORD *)&v13 = a1;
  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 24) = 0;
  *(_QWORD *)(a6 + 32) = 0;
  *(_QWORD *)(a6 + 40) = 0xE000000000000000;
  *(_QWORD *)(a6 + 48) = 0;
  *(_QWORD *)(a6 + 56) = 0xE000000000000000;
  *(_QWORD *)(a6 + 136) = 0;
  *(_QWORD *)(a6 + 144) = 0;
  *(_BYTE *)(a6 + 152) = 0;
  sub_23BB88A44();
  sub_23B9A1980(&v13, a6 + 64);
  *(_QWORD *)(a6 + 104) = a2;
  *(_QWORD *)(a6 + 112) = a3;
  *(_QWORD *)(a6 + 120) = a4;
  *(_BYTE *)(a6 + 128) = a5 & 1;
  return a6;
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23BB623E8(char a1, int a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  char v10;

  v10 = a5 & 1;
  sub_23BB891C4();
  sub_23BB61324(a1, a2, a3, a4, v10, *(_QWORD *)(v5 + 16));
}

unint64_t sub_23BB62458()
{
  unint64_t result;

  result = qword_256A64310;
  if (!qword_256A64310)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_256A64310);
  }
  return result;
}

uint64_t sub_23BB62494()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23BB624C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B990D68;
  *(_OWORD *)(v4 + 128) = v5;
  *(_QWORD *)(v4 + 120) = a1;
  return swift_task_switch();
}

uint64_t sub_23BB62530()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB62554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B97C964;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A5E7F8 + dword_256A5E7F8))(a1, v4);
}

uint64_t sub_23BB625C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void static DevicesListController.Sort.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

unint64_t DevicesListController.Sort.sortDescriptors()()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  unint64_t v62;
  unint64_t v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  void (*v69)(unint64_t, char *, uint64_t);
  char *v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v82)(char *, char *, uint64_t);
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(unint64_t, char *, uint64_t);
  unint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  char *v93;
  char *v94;
  int v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(unint64_t, char *, uint64_t);

  v1 = sub_23BB8A778();
  v101 = *(_QWORD *)(v1 - 8);
  v102 = v1;
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v99 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v98 = (char *)&v93 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C950);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v94 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v93 = (char *)&v93 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v100 = (char *)&v93 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v108 = (char *)&v93 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (char *)&v93 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v97 = (char *)&v93 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v96 = (char *)&v93 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v107 = (char *)&v93 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v37 = (char *)&v93 - v36;
  v39 = MEMORY[0x24BDAC7A8](v35, v38);
  v106 = (char *)&v93 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v44 = (char *)&v93 - v43;
  v46 = MEMORY[0x24BDAC7A8](v42, v45);
  v105 = (char *)&v93 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v51 = (char *)&v93 - v50;
  MEMORY[0x24BDAC7A8](v49, v52);
  v54 = (char *)&v93 - v53;
  v95 = *v0;
  swift_getKeyPath();
  sub_23BB887A4();
  v109 = v8;
  v104 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v104(v51, v54, v7);
  v55 = sub_23BB64008(0, 1, 1, MEMORY[0x24BEE4AF8], &qword_256A64390, &qword_256A5C950);
  v57 = *(_QWORD *)(v55 + 16);
  v56 = *(_QWORD *)(v55 + 24);
  v103 = v54;
  if (v57 >= v56 >> 1)
    v55 = sub_23BB64008(v56 > 1, v57 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
  *(_QWORD *)(v55 + 16) = v57 + 1;
  v58 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  v59 = *(_QWORD *)(v109 + 72);
  v110 = *(void (**)(unint64_t, char *, uint64_t))(v109 + 32);
  v110(v55 + v58 + v59 * v57, v51, v7);
  swift_getKeyPath();
  v60 = v105;
  sub_23BB887A4();
  v61 = v104;
  v104(v44, v60, v7);
  v63 = *(_QWORD *)(v55 + 16);
  v62 = *(_QWORD *)(v55 + 24);
  if (v63 >= v62 >> 1)
    v55 = sub_23BB64008(v62 > 1, v63 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
  *(_QWORD *)(v55 + 16) = v63 + 1;
  v110(v55 + v58 + v63 * v59, v44, v7);
  swift_getKeyPath();
  v64 = v106;
  sub_23BB887A4();
  v61(v37, v64, v7);
  v66 = *(_QWORD *)(v55 + 16);
  v65 = *(_QWORD *)(v55 + 24);
  if (v66 >= v65 >> 1)
    v55 = sub_23BB64008(v65 > 1, v66 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
  v67 = v24;
  *(_QWORD *)(v55 + 16) = v66 + 1;
  v68 = v55 + v58 + v66 * v59;
  v69 = v110;
  v110(v68, v37, v7);
  swift_getKeyPath();
  v70 = v107;
  sub_23BB887A4();
  v71 = v96;
  v61(v96, v70, v7);
  v73 = *(_QWORD *)(v55 + 16);
  v72 = *(_QWORD *)(v55 + 24);
  if (v73 >= v72 >> 1)
    v55 = sub_23BB64008(v72 > 1, v73 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
  *(_QWORD *)(v55 + 16) = v73 + 1;
  v69(v55 + v58 + v73 * v59, v71, v7);
  if (v95)
  {
    swift_getKeyPath();
    sub_23B996E1C(&qword_256A59410, &qword_256A59408, MEMORY[0x24BDCB5C0]);
    v74 = v97;
    sub_23BB887A4();
    v61(v67, v74, v7);
    v76 = *(_QWORD *)(v55 + 16);
    v75 = *(_QWORD *)(v55 + 24);
    if (v76 >= v75 >> 1)
      v55 = sub_23BB64008(v75 > 1, v76 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
    *(_QWORD *)(v55 + 16) = v76 + 1;
    v69(v55 + v58 + v76 * v59, v67, v7);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v97, v7);
  }
  swift_getKeyPath();
  v77 = v98;
  sub_23BB8A76C();
  v79 = v101;
  v78 = v102;
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v99, v77, v102);
  v80 = v108;
  sub_23BB88798();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v78);
  v81 = v100;
  v82 = v104;
  v104(v100, v80, v7);
  v84 = *(_QWORD *)(v55 + 16);
  v83 = *(_QWORD *)(v55 + 24);
  if (v84 >= v83 >> 1)
    v55 = sub_23BB64008(v83 > 1, v84 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
  v85 = v93;
  v86 = v94;
  *(_QWORD *)(v55 + 16) = v84 + 1;
  v87 = v81;
  v88 = v110;
  v110(v55 + v58 + v84 * v59, v87, v7);
  swift_getKeyPath();
  sub_23BB63988();
  sub_23BB887A4();
  v82(v86, v85, v7);
  v90 = *(_QWORD *)(v55 + 16);
  v89 = *(_QWORD *)(v55 + 24);
  if (v90 >= v89 >> 1)
    v55 = sub_23BB64008(v89 > 1, v90 + 1, 1, v55, &qword_256A64390, &qword_256A5C950);
  *(_QWORD *)(v55 + 16) = v90 + 1;
  v88(v55 + v58 + v90 * v59, v86, v7);
  v91 = *(void (**)(char *, uint64_t))(v109 + 8);
  v91(v85, v7);
  v91(v108, v7);
  v91(v107, v7);
  v91(v106, v7);
  v91(v105, v7);
  v91(v103, v7);
  return v55;
}

uint64_t DevicesListController.Filter.matchesDevice(_:)()
{
  return 1;
}

uint64_t DevicesListController.State.Loaded.init(rawList:filteredList:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DevicesListController.State.Loaded.rawList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DevicesListController.State.Loaded.rawList.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DevicesListController.State.Loaded.rawList.modify())()
{
  return nullsub_1;
}

uint64_t DevicesListController.State.Loaded.filteredList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DevicesListController.State.Loaded.filteredList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DevicesListController.State.Loaded.filteredList.modify())()
{
  return nullsub_1;
}

uint64_t DevicesListController.State.loaded.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  if (*v1)
    v3 = v1[1];
  else
    v3 = 0;
  *a1 = v2;
  a1[1] = v3;
  return sub_23BA0E458(v2);
}

uint64_t DevicesListController.Filter.title.getter()
{
  return 7105601;
}

uint64_t DevicesListController.Filter.symbolName.getter()
{
  return 0x6C75622E7473696CLL;
}

uint64_t static DevicesListController.Filter.== infix(_:_:)()
{
  return 1;
}

uint64_t DevicesListController.Filter.hash(into:)()
{
  return sub_23BB8B24C();
}

void *static DevicesListController.Filter.allCases.getter()
{
  return &unk_250CA9E40;
}

uint64_t DevicesListController.Filter.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

void sub_23BB62EE8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250CA9E68;
}

uint64_t DevicesListController.Sort.nearestFirst.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DevicesListController.Sort.nearestFirst.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*DevicesListController.Sort.nearestFirst.modify())()
{
  return nullsub_1;
}

uint64_t DevicesListController.Sort.init(nearestFirst:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23BB62F20@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  int v4;
  char v5;
  _BYTE v6[224];
  _BYTE v7[224];
  _BYTE v8[224];

  sub_23B990D24(a1 + 16, (uint64_t)v7, &qword_256A59668);
  sub_23B990D24((uint64_t)v7, (uint64_t)v8, &qword_256A59668);
  result = sub_23B9CA8D8((uint64_t)v8);
  if ((_DWORD)result == 1
    || (sub_23B989684((uint64_t)v8, (uint64_t)v6),
        v4 = sub_23B990938((uint64_t)v6),
        result = sub_23B990944((uint64_t)v6),
        v4 != 1))
  {
    v5 = 0;
  }
  else
  {
    v5 = *(_BYTE *)(result + 160);
  }
  *a2 = v5;
  return result;
}

_BYTE *sub_23BB62FC0@<X0>(_BYTE *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

_BYTE *sub_23BB62FD4@<X0>(_BYTE *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_23BB62FE8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  int v4;
  char v5;
  _BYTE v6[224];
  _BYTE v7[224];
  _BYTE v8[224];

  sub_23B990D24(a1 + 16, (uint64_t)v7, &qword_256A59668);
  sub_23B990D24((uint64_t)v7, (uint64_t)v8, &qword_256A59668);
  result = sub_23B9CA8D8((uint64_t)v8);
  if ((_DWORD)result == 1
    || (sub_23B989684((uint64_t)v8, (uint64_t)v6),
        v4 = sub_23B990938((uint64_t)v6),
        result = sub_23B990944((uint64_t)v6),
        v4 != 1))
  {
    v5 = 0;
  }
  else
  {
    v5 = *(_BYTE *)(result + 161);
  }
  *a2 = v5;
  return result;
}

uint64_t sub_23BB63084@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6[16];
  _BYTE v7[224];
  _BYTE v8[224];
  _BYTE v9[224];

  sub_23B990D24(a1 + 16, (uint64_t)v8, &qword_256A59668);
  sub_23B990D24((uint64_t)v8, (uint64_t)v9, &qword_256A59668);
  result = sub_23B9CA8D8((uint64_t)v9);
  if ((_DWORD)result == 1)
    goto LABEL_5;
  sub_23B989684((uint64_t)v9, (uint64_t)v7);
  if (sub_23B990938((uint64_t)v7) != 1)
  {
    result = sub_23B990944((uint64_t)v7);
LABEL_5:
    v5 = 0;
    goto LABEL_6;
  }
  v4 = sub_23B990944((uint64_t)v7);
  sub_23B990D24(v4 + 32, (uint64_t)v6, &qword_256A5AA50);
  result = sub_23B9B20A4(v6);
  v5 = (_DWORD)result != 1;
LABEL_6:
  *a2 = v5;
  return result;
}

uint64_t sub_23BB63144@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[224];
  _BYTE v8[224];
  _BYTE v9[224];

  sub_23B990D24(a1 + 16, (uint64_t)v8, &qword_256A59668);
  sub_23B990D24((uint64_t)v8, (uint64_t)v9, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v9) == 1
    || (sub_23B989684((uint64_t)v9, (uint64_t)v7),
        v3 = sub_23B990938((uint64_t)v7),
        v4 = sub_23B990944((uint64_t)v7),
        v3 != 1))
  {
    v5 = 0;
    result = 0xE000000000000000;
  }
  else
  {
    v5 = *(_QWORD *)(v4 + 16);
    result = swift_bridgeObjectRetain();
  }
  *a2 = v5;
  a2[1] = result;
  return result;
}

uint64_t sub_23BB631E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BB63658(a1, a2, a3, a4, &qword_256A64398, type metadata accessor for SerialTaskQueue.WorkItem);
}

_QWORD *sub_23BB631FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59648);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23BB64848(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB63320(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59478);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23BB64B10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23BB6342C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A64368);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23BB64A2C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB63524(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59470);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23BB6493C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB63630(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23BB64228(a1, a2, a3, a4, (uint64_t *)&unk_256A5E6A0);
}

uint64_t sub_23BB63644(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BB63658(a1, a2, a3, a4, &qword_256A59CA0, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
}

uint64_t sub_23BB63658(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size_0(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23BB8AFB8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23BB650C8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_23BB63864(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A64358);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23BB64C00(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_23BB63974(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

unint64_t sub_23BB63988()
{
  unint64_t result;

  result = qword_256A64330;
  if (!qword_256A64330)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Device.ServerIdentifier, &type metadata for Device.ServerIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A64330);
  }
  return result;
}

uint64_t sub_23BB639CC@<X0>(uint64_t a1@<X8>)
{
  return DeviceInfo.nonOptionalDistanceFromUserLocation.getter(a1);
}

unint64_t sub_23BB639F0()
{
  unint64_t result;

  result = qword_256A64338;
  if (!qword_256A64338)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DevicesListController.Filter, &type metadata for DevicesListController.Filter);
    atomic_store(result, (unint64_t *)&qword_256A64338);
  }
  return result;
}

unint64_t sub_23BB63A38()
{
  unint64_t result;

  result = qword_256A64340;
  if (!qword_256A64340)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DevicesListController.Filter, &type metadata for DevicesListController.Filter);
    atomic_store(result, (unint64_t *)&qword_256A64340);
  }
  return result;
}

uint64_t sub_23BB63A7C()
{
  return sub_23B996E1C(&qword_256A64348, &qword_256A64350, MEMORY[0x24BEE12E0]);
}

unint64_t _s5StateOwxx(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s5StateOwCP_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *_s5StateOwca(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s5StateOwta(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DevicesListController.State()
{
  return &type metadata for DevicesListController.State;
}

uint64_t _s5StateO6LoadedVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s5StateO6LoadedVwCP_1(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5StateO6LoadedVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s5StateO6LoadedVwta(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DevicesListController.State.Loaded()
{
  return &type metadata for DevicesListController.State.Loaded;
}

uint64_t _s6FilterOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BB63DC0 + 4 * byte_23BB97CA8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BB63DE0 + 4 * byte_23BB97CAD[v4]))();
}

_BYTE *sub_23BB63DC0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BB63DE0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB63DE8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB63DF0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB63DF8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB63E00(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DevicesListController.Filter()
{
  return &type metadata for DevicesListController.Filter;
}

uint64_t _s4SortVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB63E68 + 4 * byte_23BB97CB7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB63E9C + 4 * byte_23BB97CB2[v4]))();
}

uint64_t sub_23BB63E9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB63EA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB63EACLL);
  return result;
}

uint64_t sub_23BB63EB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB63EC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB63EC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB63ECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DevicesListController.Sort()
{
  return &type metadata for DevicesListController.Sort;
}

_QWORD *sub_23BB63EE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23BB64CE8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23BB63FF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BB64008(a1, a2, a3, a4, &qword_256A64388, &qword_256A5CB30);
}

uint64_t sub_23BB64008(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size_0(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23BB8AFB8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23BB64FB0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_23BB64214(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23BB64228(a1, a2, a3, a4, &qword_256A5EFC8);
}

_QWORD *sub_23BB64228(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size_0(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23BB64EC0(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB64354(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23BB64228(a1, a2, a3, a4, &qword_256A5EFC0);
}

_QWORD *sub_23BB64368(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23BB64228(a1, a2, a3, a4, &qword_256A5EFB8);
}

_QWORD *sub_23BB6437C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F90);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23BB64DD8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB64488(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23BB64228(a1, a2, a3, a4, &qword_256A5E9D8);
}

uint64_t sub_23BB6449C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BB64008(a1, a2, a3, a4, &qword_256A64360, &qword_256A60330);
}

uint64_t sub_23BB644B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BB63658(a1, a2, a3, a4, &qword_256A64370, type metadata accessor for SessionFriend);
}

uint64_t sub_23BB644C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23BB63658(a1, a2, a3, a4, &qword_256A64378, (uint64_t (*)(_QWORD))MEMORY[0x24BE320C8]);
}

_QWORD *sub_23BB644D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A64380);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23BB651E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB645FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F78);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 224);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[28 * v8 + 4])
          memmove(v12, a4 + 4, 224 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23BB652EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23BB64720(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size_0(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23BB653E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23BB64848(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB6493C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

char *sub_23BB64A2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB64B10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

char *sub_23BB64C00(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB64CE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

char *sub_23BB64DD8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB64EC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB64FB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB650C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB651E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB652EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 224 * a1 + 32;
    v6 = a3 + 224 * v4;
    if (v5 >= v6 || v5 + 224 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB653E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

id sub_23BB654D4()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  strcpy((char *)&qword_256A73E30, "FindMyUICore");
  algn_256A73E38[5] = 0;
  *(_WORD *)&algn_256A73E38[6] = -5120;
  qword_256A73E40 = (uint64_t)result;
  return result;
}

uint64_t ConditionsProvider.Conditions.isAirplaneModeEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ConditionsProvider.Conditions.isAirplaneModeEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ConditionsProvider.Conditions.isAirplaneModeEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ConditionsProvider.Conditions.isBluetoothEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ConditionsProvider.Conditions.isBluetoothEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ConditionsProvider.Conditions.isBluetoothEnabled.modify())()
{
  return nullsub_1;
}

BOOL static ConditionsProvider.Subscription.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ConditionsProvider.Subscription.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t ConditionsProvider.Subscription.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t _s12FindMyUICore18ConditionsProviderC0D0V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t result;
  _BOOL4 v7;
  _BOOL4 v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v2 == 2)
  {
    if (v4 != 2)
      return 0;
LABEL_6:
    if (v3 == 2)
    {
      if (v5 == 2)
        return 1;
    }
    else
    {
      v8 = (v3 & 1) == 0;
      if (v5 != 2 && ((v8 ^ v5) & 1) != 0)
        return 1;
    }
    return 0;
  }
  result = 0;
  v7 = (v2 & 1) == 0;
  if (v4 != 2 && ((v7 ^ v4) & 1) != 0)
    goto LABEL_6;
  return result;
}

unint64_t sub_23BB6569C()
{
  unint64_t result;

  result = qword_256A643A0;
  if (!qword_256A643A0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ConditionsProvider.Subscription, &type metadata for ConditionsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A643A0);
  }
  return result;
}

uint64_t _s10ConditionsVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  if (v6 >= 2)
    v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v7 = -2;
  if (v7 < 0)
    v7 = -1;
  return (v7 + 1);
}

uint64_t _s10ConditionsVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BB657DC + 4 * byte_23BB97F15[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_23BB65810 + 4 * asc_23BB97F10[v4]))();
}

uint64_t sub_23BB65810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BB65818(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23BB65820);
  return result;
}

uint64_t sub_23BB6582C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23BB65834);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BB65838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BB65840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConditionsProvider.Conditions()
{
  return &type metadata for ConditionsProvider.Conditions;
}

uint64_t _s12SubscriptionOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB658A8 + 4 * byte_23BB97F1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB658DC + 4 * byte_23BB97F1A[v4]))();
}

uint64_t sub_23BB658DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB658E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB658ECLL);
  return result;
}

uint64_t sub_23BB658F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB65900);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB65904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB6590C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConditionsProvider.Subscription()
{
  return &type metadata for ConditionsProvider.Subscription;
}

uint64_t sub_23BB65928()
{
  uint64_t v0;

  v0 = sub_23BB891C4();
  __swift_allocate_value_buffer(v0, qword_256A73E48);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E48);
  return sub_23BB891B8();
}

uint64_t BeaconsInfoProvider.BeaconState.loadedState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD v17[12];
  _BYTE v18[25];
  _OWORD v19[14];
  _BYTE v20[224];
  _BYTE v21[224];
  _BYTE v22[232];

  sub_23B989684(v1, (uint64_t)v21);
  sub_23B989684((uint64_t)v21, (uint64_t)v22);
  if (sub_23B990938((uint64_t)v22) == 1)
  {
    v3 = (_OWORD *)sub_23B990944((uint64_t)v22);
    v4 = v3[1];
    v17[0] = *v3;
    v17[1] = v4;
    v5 = v3[5];
    v7 = v3[2];
    v6 = v3[3];
    v17[4] = v3[4];
    v17[5] = v5;
    v17[2] = v7;
    v17[3] = v6;
    v8 = v3[9];
    v10 = v3[6];
    v9 = v3[7];
    v17[8] = v3[8];
    v17[9] = v8;
    v17[6] = v10;
    v17[7] = v9;
    v12 = v3[11];
    v11 = v3[12];
    v13 = v3[10];
    *(_OWORD *)&v18[9] = *(_OWORD *)((char *)v3 + 201);
    v17[11] = v12;
    *(_OWORD *)v18 = v11;
    v17[10] = v13;
    nullsub_1(v17);
    sub_23B989684((uint64_t)v21, (uint64_t)v19);
    v14 = sub_23B990944((uint64_t)v19);
    sub_23BA4B4CC(v14);
    v15 = v17;
  }
  else
  {
    sub_23B990944((uint64_t)v22);
    sub_23BB65AA4(v19);
    v15 = v19;
  }
  sub_23B990D24((uint64_t)v15, (uint64_t)v20, &qword_256A643A8);
  return sub_23B990D24((uint64_t)v20, a1, &qword_256A643A8);
}

double sub_23BB65AA4(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t BeaconsInfoProvider.BeaconState.isLoading.getter()
{
  uint64_t v0;
  int v1;
  unsigned __int8 *v2;
  _BYTE v4[224];
  _BYTE v5[232];

  sub_23B989684(v0, (uint64_t)v4);
  sub_23B989684((uint64_t)v4, (uint64_t)v5);
  v1 = sub_23B990938((uint64_t)v5);
  v2 = (unsigned __int8 *)sub_23B990944((uint64_t)v5);
  if (v1 == 1)
    return 0;
  else
    return *v2;
}

uint64_t BeaconsInfoProvider.BeaconsSubscription.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23BB8B24C();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t BeaconsInfoProvider.BeaconsSubscription.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23BB8B240();
  sub_23BB8B24C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  return sub_23BB8B270();
}

uint64_t sub_23BB65C20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23BB8B240();
  sub_23BB8B24C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  return sub_23BB8B270();
}

uint64_t sub_23BB65C9C()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23BB8B24C();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB65D10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23BB8B240();
  sub_23BB8B24C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  return sub_23BB8B270();
}

uint64_t BeaconsInfoProvider.BeaconState.LoadedState.identifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t BeaconsInfoProvider.BeaconState.LoadedState.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BeaconsInfoProvider.BeaconState.LoadedState.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BeaconsInfoProvider.BeaconState.LoadedState.displayName.modify())()
{
  return nullsub_1;
}

_QWORD *BeaconsInfoProvider.BeaconState.LoadedState.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_23B990D24(v1 + 32, (uint64_t)v4, &qword_256A5AA50);
  sub_23B990D24((uint64_t)v4, a1, &qword_256A5AA50);
  return sub_23B9CAF00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
}

uint64_t BeaconsInfoProvider.BeaconState.LoadedState.isThisDevice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t BeaconsInfoProvider.BeaconState.LoadedState.isBTConnected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t BeaconsInfoProvider.BeaconState.LoadedState.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(v1 + 168);
  v3 = *(_QWORD *)(v1 + 176);
  v4 = *(_QWORD *)(v1 + 184);
  v5 = *(_QWORD *)(v1 + 192);
  v6 = *(_QWORD *)(v1 + 200);
  v7 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 216);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_23B989888(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t _s12FindMyUICore19BeaconsInfoProviderC0D12SubscriptionO2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_23BB8B1A4();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

BOOL _s12FindMyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  BOOL v15;
  char v16;
  char MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  _OWORD v32[8];
  _OWORD v33[8];
  _OWORD v34[8];
  _OWORD v35[8];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44[6];
  char v45;
  uint64_t v46;
  uint64_t v47[16];
  _QWORD v48[16];
  _QWORD v49[17];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  sub_23B990D24((uint64_t)(a1 + 4), (uint64_t)v48, &qword_256A5AA50);
  v30 = *((unsigned __int8 *)a1 + 161);
  v31 = *((unsigned __int8 *)a1 + 160);
  v27 = a1[22];
  v28 = a1[21];
  v25 = a1[24];
  v26 = a1[23];
  v23 = a1[26];
  v24 = a1[25];
  v22 = *((_BYTE *)a1 + 216);
  v8 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v10 = a2[3];
  sub_23B990D24((uint64_t)(a2 + 4), (uint64_t)v49, &qword_256A5AA50);
  v12 = *((unsigned __int8 *)a2 + 160);
  v29 = *((unsigned __int8 *)a2 + 161);
  v20 = *(_OWORD *)(a2 + 23);
  v21 = *(_OWORD *)(a2 + 21);
  v19 = *(_OWORD *)(a2 + 25);
  v13 = *((_BYTE *)a2 + 216);
  if (v4 == v8 && v5 == v9 || (v14 = sub_23BB8B1A4(), v15 = 0, (v14 & 1) != 0))
  {
    if (v6 == v11 && v7 == v10 || (v16 = sub_23BB8B1A4(), v15 = 0, (v16 & 1) != 0))
    {
      sub_23B990D24((uint64_t)v48, (uint64_t)v47, &qword_256A5AA50);
      if (sub_23B9B20A4(v47) == 1)
      {
        sub_23B990D24((uint64_t)v49, (uint64_t)v44, &qword_256A5AA50);
        if (sub_23B9B20A4(v44) == 1)
          goto LABEL_14;
      }
      else
      {
        sub_23B990D24((uint64_t)v48, (uint64_t)&v36, &qword_256A5AA50);
        sub_23B990D24((uint64_t)v49, (uint64_t)v44, &qword_256A5AA50);
        if (sub_23B9B20A4(v44) != 1)
        {
          sub_23B990D24((uint64_t)v49, (uint64_t)v33, &qword_256A5AA50);
          v32[4] = v33[4];
          v32[5] = v33[5];
          v32[6] = v33[6];
          v32[7] = v33[7];
          v32[0] = v33[0];
          v32[1] = v33[1];
          v32[2] = v33[2];
          v32[3] = v33[3];
          sub_23B990D24((uint64_t)v48, (uint64_t)v34, &qword_256A5AA50);
          sub_23B9CAF00(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
          sub_23BAB9DD4((void **)v34);
          MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0 = _s12FindMyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)v32);
          v35[4] = v40;
          v35[5] = v41;
          v35[6] = v42;
          v35[7] = v43;
          v35[0] = v36;
          v35[1] = v37;
          v35[2] = v38;
          v35[3] = v39;
          sub_23BB21B30((id *)v35);
          sub_23B9CAF00(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
          if ((MyUICore17PublishedLocationV2eeoiySbAC_ACtFZ_0 & 1) != 0)
          {
LABEL_14:
            if (v31 == v12 && v30 == v29)
            {
              v44[0] = v28;
              v44[1] = v27;
              v44[2] = v26;
              v44[3] = v25;
              v44[4] = v24;
              v44[5] = v23;
              v45 = v22;
              v36 = v21;
              v37 = v20;
              v38 = v19;
              LOBYTE(v39) = v13;
              return _s12FindMyUICore6DeviceO5ImageO2eeoiySbAE_AEtFZ_0((uint64_t)v44, (uint64_t)&v36);
            }
          }
          return 0;
        }
        v34[4] = v40;
        v34[5] = v41;
        v34[6] = v42;
        v34[7] = v43;
        v34[0] = v36;
        v34[1] = v37;
        v34[2] = v38;
        v34[3] = v39;
        sub_23B990D24((uint64_t)v48, (uint64_t)v35, &qword_256A5AA50);
        sub_23BAB9DD4((void **)v35);
        sub_23BAB9DD4((void **)v35);
        sub_23BB21B30((id *)v34);
      }
      sub_23B990D24((uint64_t)v48, (uint64_t)v44, &qword_256A5AA50);
      sub_23B990D24((uint64_t)v49, (uint64_t)&v46, &qword_256A5AA50);
      sub_23B9CAF00(v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      sub_23BB21A50((uint64_t)v44);
      return 0;
    }
  }
  return v15;
}

uint64_t _s12FindMyUICore19BeaconsInfoProviderC11BeaconStateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0;
  char v12;
  int v13;
  char *v14;
  char v15;
  uint64_t v16;
  _OWORD v18[12];
  _OWORD v19[2];
  _OWORD v20[12];
  _OWORD v21[2];
  _BYTE v22[224];
  _BYTE v23[224];
  _BYTE v24[224];
  _BYTE v25[224];
  uint64_t v26;
  _BYTE v27[224];

  sub_23B989684(a1, (uint64_t)v23);
  sub_23B989684(a2, (uint64_t)v24);
  sub_23B989684((uint64_t)v23, (uint64_t)v25);
  sub_23B989684((uint64_t)v24, (uint64_t)&v26);
  sub_23B989684((uint64_t)v23, (uint64_t)v27);
  if (sub_23B990938((uint64_t)v27) != 1)
  {
    v12 = *(_BYTE *)sub_23B990944((uint64_t)v27);
    sub_23B989684((uint64_t)v24, (uint64_t)v22);
    v13 = sub_23B990938((uint64_t)v22);
    v14 = (char *)sub_23B990944((uint64_t)v22);
    if (v13 != 1)
    {
      v15 = *v14;
      sub_23BB67428((uint64_t)v25);
      MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 = v12 ^ v15 ^ 1;
      return MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 & 1;
    }
LABEL_7:
    sub_23B990954((uint64_t)v24, sub_23B989738);
    sub_23BB67428((uint64_t)v25);
    MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 = 0;
    return MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 & 1;
  }
  v3 = (_OWORD *)sub_23B990944((uint64_t)v27);
  sub_23B989684((uint64_t)v24, (uint64_t)v22);
  if (sub_23B990938((uint64_t)v22) != 1)
  {
    sub_23B990944((uint64_t)v22);
    sub_23B989684((uint64_t)v23, (uint64_t)v20);
    v16 = sub_23B990944((uint64_t)v20);
    sub_23BA4B4CC(v16);
    goto LABEL_7;
  }
  v4 = (_OWORD *)sub_23B990944((uint64_t)v22);
  v20[10] = v3[10];
  v20[11] = v3[11];
  v21[0] = v3[12];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v3 + 201);
  v20[6] = v3[6];
  v20[7] = v3[7];
  v20[8] = v3[8];
  v20[9] = v3[9];
  v20[2] = v3[2];
  v20[3] = v3[3];
  v20[4] = v3[4];
  v20[5] = v3[5];
  v20[0] = *v3;
  v20[1] = v3[1];
  v5 = v4[11];
  v18[10] = v4[10];
  v18[11] = v5;
  v19[0] = v4[12];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v4 + 201);
  v6 = v4[7];
  v18[6] = v4[6];
  v18[7] = v6;
  v7 = v4[9];
  v18[8] = v4[8];
  v18[9] = v7;
  v8 = v4[3];
  v18[2] = v4[2];
  v18[3] = v8;
  v9 = v4[5];
  v18[4] = v4[4];
  v18[5] = v9;
  v10 = v4[1];
  v18[0] = *v4;
  v18[1] = v10;
  sub_23B990954((uint64_t)v24, sub_23B989738);
  sub_23B990954((uint64_t)v23, sub_23B989738);
  sub_23B990954((uint64_t)v24, sub_23B989738);
  sub_23B990954((uint64_t)v23, sub_23B989738);
  MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 = _s12FindMyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0((uint64_t *)v20, (uint64_t *)v18);
  sub_23BB67428((uint64_t)v25);
  sub_23B990954((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
  sub_23B990954((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
  return MyUICore19BeaconsInfoProviderC11BeaconStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 & 1;
}

unint64_t sub_23BB664EC()
{
  unint64_t result;

  result = qword_256A643B0;
  if (!qword_256A643B0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for BeaconsInfoProvider.BeaconsSubscription, &type metadata for BeaconsInfoProvider.BeaconsSubscription);
    atomic_store(result, (unint64_t *)&qword_256A643B0);
  }
  return result;
}

uint64_t _s19BeaconsSubscriptionOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s19BeaconsSubscriptionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

_QWORD *sub_23BB665D4(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconsInfoProvider.BeaconsSubscription()
{
  return &type metadata for BeaconsInfoProvider.BeaconsSubscription;
}

uint64_t _s11BeaconStateOwxx(uint64_t a1)
{
  return sub_23B9909D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           *(_QWORD *)(a1 + 208),
           *(_BYTE *)(a1 + 216));
}

uint64_t _s11BeaconStateOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = *(_QWORD *)(a2 + 184);
  v28 = *(_QWORD *)(a2 + 192);
  v29 = *(_QWORD *)(a2 + 200);
  v30 = *(_QWORD *)(a2 + 208);
  v31 = *(_BYTE *)(a2 + 216);
  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_23B989738(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v26;
  *(_QWORD *)(a1 + 184) = v27;
  *(_QWORD *)(a1 + 192) = v28;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v30;
  *(_BYTE *)(a1 + 216) = v31;
  return a1;
}

uint64_t _s11BeaconStateOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v32 = *(_QWORD *)(a2 + 72);
  v33 = *(_QWORD *)(a2 + 80);
  v34 = *(_QWORD *)(a2 + 88);
  v35 = *(_QWORD *)(a2 + 96);
  v36 = *(_QWORD *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 112);
  v38 = *(_QWORD *)(a2 + 120);
  v39 = *(_QWORD *)(a2 + 128);
  v40 = *(_QWORD *)(a2 + 136);
  v41 = *(_QWORD *)(a2 + 144);
  v42 = *(_QWORD *)(a2 + 152);
  v43 = *(_QWORD *)(a2 + 160);
  v44 = *(_QWORD *)(a2 + 168);
  v45 = *(_QWORD *)(a2 + 176);
  v46 = *(_QWORD *)(a2 + 184);
  v47 = *(_QWORD *)(a2 + 192);
  v48 = *(_QWORD *)(a2 + 200);
  v49 = *(_QWORD *)(a2 + 208);
  v50 = *(_BYTE *)(a2 + 216);
  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_23B989738(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v16 = *(void **)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v32;
  *(_QWORD *)(a1 + 80) = v33;
  *(_QWORD *)(a1 + 88) = v34;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v35;
  *(_QWORD *)(a1 + 104) = v36;
  *(_QWORD *)(a1 + 112) = v37;
  *(_QWORD *)(a1 + 120) = v38;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v39;
  *(_QWORD *)(a1 + 136) = v40;
  *(_QWORD *)(a1 + 144) = v41;
  *(_QWORD *)(a1 + 152) = v42;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v43;
  *(_QWORD *)(a1 + 168) = v44;
  *(_QWORD *)(a1 + 176) = v45;
  *(_QWORD *)(a1 + 184) = v46;
  v28 = *(_OWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v47;
  *(_QWORD *)(a1 + 200) = v48;
  v29 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v49;
  v30 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v50;
  sub_23B9909D0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  return a1;
}

__n128 __swift_memcpy217_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t _s11BeaconStateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v4 = *(_QWORD *)(a2 + 208);
  v5 = *(_BYTE *)(a2 + 216);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(void **)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_OWORD *)(a1 + 160);
  v21 = *(_OWORD *)(a1 + 176);
  v22 = *(_OWORD *)(a1 + 192);
  v23 = *(_QWORD *)(a1 + 208);
  v24 = *(_BYTE *)(a1 + 216);
  v25 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v25;
  v26 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v26;
  v27 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v27;
  v28 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v28;
  v29 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v29;
  v30 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v30;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = v4;
  *(_BYTE *)(a1 + 216) = v5;
  sub_23B9909D0(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    v24);
  return a1;
}

uint64_t _s11BeaconStateOwet(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 217))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 160) >> 2) & 0xFFFFFF80 | (*(_QWORD *)(a1 + 160) >> 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double _s11BeaconStateOwst(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 216) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 217) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 160) = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      *(_OWORD *)(a1 + 168) = 0u;
      *(_OWORD *)(a1 + 184) = 0u;
      *(_OWORD *)(a1 + 200) = 0u;
      *(_BYTE *)(a1 + 216) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 217) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23BB66BD8(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 216) & 0x8F | ((a2 & 1) << 6);
  *(_QWORD *)(result + 160) &= 0x101uLL;
  *(_BYTE *)(result + 216) = v2;
  return result;
}

ValueMetadata *type metadata accessor for BeaconsInfoProvider.BeaconState()
{
  return &type metadata for BeaconsInfoProvider.BeaconState;
}

uint64_t _s11BeaconStateO11LoadedStateVwxx(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 32);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_23B990BAC(*(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208), *(_BYTE *)(a1 + 216));
}

uint64_t _s11BeaconStateO11LoadedStateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v8;
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v9;
    v10 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v10;
    v11 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v11;
    v12 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v12;
    v13 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v13;
    v14 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v14;
    v15 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = v6[5];
    *(_OWORD *)(a1 + 96) = v6[4];
    *(_OWORD *)(a1 + 112) = v16;
    v17 = v6[7];
    *(_OWORD *)(a1 + 128) = v6[6];
    *(_OWORD *)(a1 + 144) = v17;
    v18 = v6[1];
    *(_OWORD *)(a1 + 32) = *v6;
    *(_OWORD *)(a1 + 48) = v18;
    v19 = v6[3];
    *(_OWORD *)(a1 + 64) = v6[2];
    *(_OWORD *)(a1 + 80) = v19;
  }
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 168);
  v21 = *(_QWORD *)(a2 + 176);
  v22 = *(_QWORD *)(a2 + 184);
  v23 = *(_QWORD *)(a2 + 192);
  v24 = *(_QWORD *)(a2 + 200);
  v25 = *(_QWORD *)(a2 + 208);
  v26 = *(_BYTE *)(a2 + 216);
  sub_23B989888(v20, v21, v22, v23, v24, v25, v26);
  *(_QWORD *)(a1 + 168) = v20;
  *(_QWORD *)(a1 + 176) = v21;
  *(_QWORD *)(a1 + 184) = v22;
  *(_QWORD *)(a1 + 192) = v23;
  *(_QWORD *)(a1 + 200) = v24;
  *(_QWORD *)(a1 + 208) = v25;
  *(_BYTE *)(a1 + 216) = v26;
  return a1;
}

uint64_t _s11BeaconStateO11LoadedStateVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  void *v5;
  void *v6;
  __int128 *v7;
  id v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 32);
  v7 = (__int128 *)(a2 + 32);
  v6 = *(void **)(a2 + 32);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = v6;
      v8 = v6;

      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B9C1AF8((id *)(a1 + 32));
      v10 = *(_OWORD *)(a2 + 80);
      v12 = *v7;
      v11 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v10;
      *v4 = v12;
      *(_OWORD *)(a1 + 48) = v11;
      v13 = *(_OWORD *)(a2 + 144);
      v15 = *(_OWORD *)(a2 + 96);
      v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 96) = v15;
      *(_OWORD *)(a1 + 112) = v14;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    v9 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *v7;
    v17 = *(_OWORD *)(a2 + 48);
    v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    *v4 = v16;
    *(_OWORD *)(a1 + 48) = v17;
    v19 = *(_OWORD *)(a2 + 96);
    v20 = *(_OWORD *)(a2 + 112);
    v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v21;
    *(_OWORD *)(a1 + 96) = v19;
    *(_OWORD *)(a1 + 112) = v20;
  }
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  v22 = *(_QWORD *)(a2 + 168);
  v23 = *(_QWORD *)(a2 + 176);
  v24 = *(_QWORD *)(a2 + 184);
  v25 = *(_QWORD *)(a2 + 192);
  v26 = *(_QWORD *)(a2 + 200);
  v27 = *(_QWORD *)(a2 + 208);
  v28 = *(_BYTE *)(a2 + 216);
  sub_23B989888(v22, v23, v24, v25, v26, v27, v28);
  v29 = *(_QWORD *)(a1 + 168);
  v30 = *(_QWORD *)(a1 + 176);
  v31 = *(_QWORD *)(a1 + 184);
  v32 = *(_QWORD *)(a1 + 192);
  v33 = *(_QWORD *)(a1 + 200);
  v34 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 168) = v22;
  *(_QWORD *)(a1 + 176) = v23;
  *(_QWORD *)(a1 + 184) = v24;
  *(_QWORD *)(a1 + 192) = v25;
  *(_QWORD *)(a1 + 200) = v26;
  *(_QWORD *)(a1 + 208) = v27;
  v35 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v28;
  sub_23B990BAC(v29, v30, v31, v32, v33, v34, v35);
  return a1;
}

uint64_t _s11BeaconStateO11LoadedStateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  if (!v6)
    goto LABEL_5;
  if (!v7)
  {
    sub_23B9C1AF8((id *)(a1 + 32));
LABEL_5:
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    v16 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = v7;

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  v19 = *(_BYTE *)(a2 + 216);
  v20 = *(_QWORD *)(a1 + 168);
  v21 = *(_QWORD *)(a1 + 176);
  v22 = *(_QWORD *)(a1 + 184);
  v23 = *(_QWORD *)(a1 + 192);
  v24 = *(_QWORD *)(a1 + 200);
  v25 = *(_QWORD *)(a1 + 208);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  v26 = *(_BYTE *)(a1 + 216);
  *(_BYTE *)(a1 + 216) = v19;
  sub_23B990BAC(v20, v21, v22, v23, v24, v25, v26);
  return a1;
}

uint64_t _s11BeaconStateO11LoadedStateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 217))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11BeaconStateO11LoadedStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 216) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 217) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 217) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconsInfoProvider.BeaconState.LoadedState()
{
  return &type metadata for BeaconsInfoProvider.BeaconState.LoadedState;
}

uint64_t _s19BeaconsStreamChangeOwxx(uint64_t a1)
{
  return sub_23BA4B494(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19BeaconsStreamChangeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BA4B4B0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s19BeaconsStreamChangeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BA4B4B0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23BA4B494(v6, v7, v8);
  return a1;
}

uint64_t _s19BeaconsStreamChangeOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23BA4B494(v4, v5, v6);
  return a1;
}

uint64_t sub_23BB67408(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23BB67410(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BeaconsInfoProvider.BeaconsStreamChange()
{
  return &type metadata for BeaconsInfoProvider.BeaconsStreamChange;
}

uint64_t sub_23BB67428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 232);
  v21 = *(_QWORD *)(a1 + 224);
  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 248);
  v5 = *(void **)(a1 + 256);
  v6 = *(_QWORD *)(a1 + 264);
  v7 = *(_QWORD *)(a1 + 272);
  v8 = *(_QWORD *)(a1 + 280);
  v19 = *(_OWORD *)(a1 + 304);
  v20 = *(_OWORD *)(a1 + 288);
  v17 = *(_OWORD *)(a1 + 336);
  v18 = *(_OWORD *)(a1 + 320);
  v15 = *(_OWORD *)(a1 + 368);
  v16 = *(_OWORD *)(a1 + 352);
  v13 = *(_OWORD *)(a1 + 400);
  v14 = *(_OWORD *)(a1 + 384);
  v12 = *(_OWORD *)(a1 + 416);
  v9 = *(_QWORD *)(a1 + 432);
  v10 = *(_BYTE *)(a1 + 440);
  sub_23B9909D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_BYTE *)(a1 + 216));
  sub_23B9909D0(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v10);
  return a1;
}

uint64_t type metadata accessor for AccessoryOnboardingModule()
{
  return objc_opt_self();
}

uint64_t EmojiView.init(info:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC58);
  sub_23BB8A0C4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC60);
  sub_23BB8A0C4();
  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = KeyPath;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = result;
  *(_BYTE *)(a2 + 88) = 0;
  return result;
}

uint64_t EmojiView.body.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[25];
  _OWORD v28[3];

  v1 = sub_23BB8A070();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[3];
  v25 = v0[2];
  v26 = v6;
  *(_OWORD *)v27 = v0[4];
  *(_OWORD *)&v27[9] = *(__int128 *)((char *)v0 + 73);
  v7 = v0[1];
  v23 = *v0;
  v24 = v7;
  v8 = sub_23BB8A2F8();
  v10 = v9;
  v28[0] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64450);
  sub_23BB8A0D0();
  if (*(_QWORD *)&v19[0])
  {
    v11 = *(_QWORD *)&v27[16];
    v12 = v27[24];
    v13 = *(id *)&v19[0];
    sub_23BB681C8((uint64_t)&v23);
    sub_23BA2C1E8(v11, v12);
    sub_23BA8414C(v11, v12);
    sub_23B9C62D4(v11, v12);
    sub_23BB682EC((uint64_t)&v23);
    sub_23BB8A058();
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BDF3FD0], v1);
    v14 = sub_23BB8A094();

    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    v14 = 0;
  }
  v20 = v8;
  v21 = v10;
  v22 = v14;
  v28[0] = v23;
  v28[1] = v24;
  v19[0] = v23;
  v19[1] = v24;
  v15 = (_OWORD *)swift_allocObject();
  v16 = v26;
  v15[3] = v25;
  v15[4] = v16;
  v15[5] = *(_OWORD *)v27;
  *(_OWORD *)((char *)v15 + 89) = *(_OWORD *)&v27[9];
  v17 = v24;
  v15[1] = v23;
  v15[2] = v17;
  sub_23BB681C8((uint64_t)&v23);
  sub_23B9A14EC((uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64458);
  sub_23BB6825C();
  sub_23BB682A8();
  sub_23BB89F14();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23BB678EC(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v12 = a2[3];
  v23 = a3[3];
  v21 = a3[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64478);
  sub_23BB8A0D0();
  if (v22)
  {
    sub_23BB8AA78();
    swift_release();
  }
  v13 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  sub_23BB8A9F4();
  sub_23BB681C8((uint64_t)a3);
  swift_bridgeObjectRetain();
  v14 = sub_23BB8A9E8();
  v15 = swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v16;
  *(_QWORD *)(v15 + 32) = v10;
  *(_QWORD *)(v15 + 40) = v9;
  *(_QWORD *)(v15 + 48) = v11;
  *(_QWORD *)(v15 + 56) = v12;
  v17 = a3[3];
  *(_OWORD *)(v15 + 96) = a3[2];
  *(_OWORD *)(v15 + 112) = v17;
  *(_OWORD *)(v15 + 128) = a3[4];
  *(_OWORD *)(v15 + 137) = *(_OWORD *)((char *)a3 + 73);
  v18 = a3[1];
  *(_OWORD *)(v15 + 64) = *a3;
  *(_OWORD *)(v15 + 80) = v18;
  v19 = sub_23B989F54((uint64_t)v8, (uint64_t)&unk_256A64488, v15);
  v21 = v23;
  v22 = v19;
  return sub_23BB8A0DC();
}

uint64_t sub_23BB67A8C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 72) = a8;
  *(double *)(v8 + 56) = a1;
  *(double *)(v8 + 64) = a2;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 48) = a7;
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 80) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB67B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_BYTE *)(v1 + 72);
  sub_23BB681C8(v1);
  sub_23BA2C1E8(v2, v3);
  sub_23BA8414C(v2, v3);
  sub_23B9C62D4(v2, v3);
  sub_23BB682EC(v1);
  v4 = sub_23BB67D30();
  sub_23BB8AA9C();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(*(_QWORD *)(v0 + 72) + 32);
  *(_QWORD *)(v0 + 32) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64450);
  sub_23BB8A0DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB67D30()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  uint64_t result;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _OWORD v10[3];
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(double *)(v0 + 16);
  v1 = *(double *)(v0 + 24);
  v11 = 0x3FF0000000000000uLL;
  *(_QWORD *)&v12 = 0;
  *((_QWORD *)&v12 + 1) = 0x3FF0000000000000;
  v3 = v2 + v1 + v1;
  v13 = 0uLL;
  result = sub_23BB88EAC();
  if (result)
  {
    v5 = (void *)result;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, result);
    v10[0] = v11;
    v10[1] = v12;
    v10[2] = v13;
    v7 = objc_msgSend(v6, sel_imageByApplyingTransform_, v10);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
    v9 = objc_msgSend(v8, sel_createCGImage_fromRect_, v7, 0.0, 0.0, v3, v3);

    return (uint64_t)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EmojiView.Info.emoji.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double EmojiView.Info.fixedSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double EmojiView.Info.padding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t EmojiView.Info.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B264();
  return sub_23BB8B264();
}

uint64_t EmojiView.Info.hashValue.getter()
{
  sub_23BB8B240();
  EmojiView.Info.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BB67F58()
{
  sub_23BB8B240();
  EmojiView.Info.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BB67FAC()
{
  sub_23BB8B240();
  EmojiView.Info.hash(into:)();
  return sub_23BB8B270();
}

double EmojiView.Info.init(emoji:size:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 100.0;
  *(_OWORD *)(a3 + 16) = xmmword_23BB98140;
  return result;
}

uint64_t static EmojiView.Info.Size.== infix(_:_:)()
{
  return 1;
}

uint64_t EmojiView.Info.Size.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t EmojiView.Info.Size.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BB6807C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23BB895B4();
  *a1 = v3;
  return result;
}

uint64_t sub_23BB680A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23BB895B4();
  *a1 = v3;
  return result;
}

uint64_t sub_23BB680CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23BB895C0();
  *a1 = v3;
  return result;
}

uint64_t sub_23BB680F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23BB895C0();
  *a1 = v3;
  return result;
}

uint64_t sub_23BB6811C()
{
  return sub_23BB895CC();
}

uint64_t sub_23BB68140()
{
  return sub_23BB895CC();
}

uint64_t sub_23BB68164()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_23B9C62D4(*(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  return swift_deallocObject();
}

uint64_t sub_23BB681C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23BB678EC(a1, a2, (_OWORD *)(v2 + 16));
}

uint64_t sub_23BB681C8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  id v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  v7 = v2;
  swift_retain();
  swift_retain();
  sub_23BA2C1E8(v3, v4);
  sub_23BA2C1E8(v5, v6);
  return a1;
}

unint64_t sub_23BB6825C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A64460;
  if (!qword_256A64460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A64458);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_256A64460);
  }
  return result;
}

unint64_t sub_23BB682A8()
{
  unint64_t result;

  result = qword_256A64468;
  if (!qword_256A64468)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for EmojiView.Info, &type metadata for EmojiView.Info);
    atomic_store(result, (unint64_t *)&qword_256A64468);
  }
  return result;
}

uint64_t sub_23BB682EC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  sub_23B9C62D4(v3, v4);
  sub_23B9C62D4(v5, v6);
  return a1;
}

BOOL _s12FindMyUICore9EmojiViewV4InfoV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  char v7;
  _BOOL8 result;

  v3 = *(double *)(a1 + 16);
  v2 = *(double *)(a1 + 24);
  v5 = *(double *)(a2 + 16);
  v4 = *(double *)(a2 + 24);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v3 != v5)
      return 0;
    return v2 == v4;
  }
  v7 = sub_23BB8B1A4();
  result = 0;
  if ((v7 & 1) != 0 && v3 == v5)
    return v2 == v4;
  return result;
}

uint64_t sub_23BB68404()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23BB68418()
{
  unint64_t result;

  result = qword_256A64470;
  if (!qword_256A64470)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for EmojiView.Info.Size, &type metadata for EmojiView.Info.Size);
    atomic_store(result, (unint64_t *)&qword_256A64470);
  }
  return result;
}

uint64_t destroy for EmojiView(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  return sub_23B9C62D4(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
}

uint64_t initializeWithCopy for EmojiView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v5;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23BA2C1E8(v8, v9);
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = v9;
  v11 = *(_QWORD *)(v2 + 80);
  LOBYTE(v2) = *(_BYTE *)(v2 + 88);
  sub_23BA2C1E8(v11, v2);
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v2;
  return a1;
}

uint64_t assignWithCopy for EmojiView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  v4 = *(void **)(a1 + 32);
  v5 = (void *)v2[4];
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 40) = v2[5];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = v2[6];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = v2[7];
  swift_retain();
  swift_release();
  v7 = v2[8];
  v8 = *((_BYTE *)v2 + 72);
  sub_23BA2C1E8(v7, v8);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 72) = v8;
  sub_23B9C62D4(v9, v10);
  v11 = v2[10];
  LOBYTE(v2) = *((_BYTE *)v2 + 88);
  sub_23BA2C1E8(v11, (char)v2);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = (_BYTE)v2;
  sub_23B9C62D4(v12, v13);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EmojiView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v5;
  sub_23B9C62D4(v6, v7);
  v8 = *(_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = v8;
  sub_23B9C62D4(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiView()
{
  return &type metadata for EmojiView;
}

uint64_t initializeWithCopy for EmojiView.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EmojiView.Info(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for EmojiView.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiView.Info(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiView.Info(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiView.Info()
{
  return &type metadata for EmojiView.Info;
}

uint64_t storeEnumTagSinglePayload for EmojiView.Info.Size(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BB6898C + 4 * byte_23BB98150[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BB689AC + 4 * byte_23BB98155[v4]))();
}

_BYTE *sub_23BB6898C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BB689AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB689B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB689BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB689C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB689CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmojiView.Info.Size()
{
  return &type metadata for EmojiView.Info.Size;
}

uint64_t sub_23BB689E8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A64458);
  sub_23BB6825C();
  sub_23BB682A8();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB68A48()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  sub_23B9C62D4(*(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  return swift_deallocObject();
}

uint64_t sub_23BB68AB4(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  _QWORD *v10;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = *((_QWORD *)v1 + 5);
  v8 = v1[6];
  v9 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B97C964;
  return sub_23BB67A8C(v8, v9, a1, v4, v5, v6, v7, (uint64_t)(v1 + 8));
}

void static PeopleListController.Sort.default.getter(_WORD *a1@<X8>)
{
  *a1 = 257;
}

unint64_t PeopleListController.Sort.sortDescriptors()()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(unint64_t, char *, uint64_t);
  void (*v62)(char *, char *, uint64_t);
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  void (*v90)(char *, uint64_t);
  char *v92;
  char *v93;
  char *v94;
  int v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;

  v1 = sub_23BB8A778();
  v102 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v100 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v99 = (char *)&v92 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CB30);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v93 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v92 = (char *)&v92 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v101 = (char *)&v92 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v109 = (char *)&v92 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v98 = (char *)&v92 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v97 = (char *)&v92 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v96 = (char *)&v92 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v108 = (char *)&v92 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v94 = (char *)&v92 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v107 = (char *)&v92 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v42 = (char *)&v92 - v41;
  v44 = MEMORY[0x24BDAC7A8](v40, v43);
  v46 = (char *)&v92 - v45;
  v48 = MEMORY[0x24BDAC7A8](v44, v47);
  v50 = (char *)&v92 - v49;
  MEMORY[0x24BDAC7A8](v48, v51);
  v53 = (char *)&v92 - v52;
  v54 = *v0;
  v95 = v0[1];
  swift_getKeyPath();
  sub_23BB887A4();
  v110 = v8;
  v106 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v106(v50, v53, v7);
  v55 = sub_23BB63FF4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v57 = *(_QWORD *)(v55 + 16);
  v56 = *(_QWORD *)(v55 + 24);
  v103 = v53;
  v104 = v1;
  if (v57 >= v56 >> 1)
    v55 = sub_23BB63FF4(v56 > 1, v57 + 1, 1, v55);
  *(_QWORD *)(v55 + 16) = v57 + 1;
  v58 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  v59 = *(_QWORD *)(v110 + 72);
  v60 = v55 + v58 + v59 * v57;
  v61 = *(void (**)(unint64_t, char *, uint64_t))(v110 + 32);
  v61(v60, v50, v7);
  if (v54)
  {
    swift_getKeyPath();
    sub_23BB887A4();
    v62 = v106;
    v106(v42, v46, v7);
    v64 = *(_QWORD *)(v55 + 16);
    v63 = *(_QWORD *)(v55 + 24);
    if (v64 >= v63 >> 1)
      v55 = sub_23BB63FF4(v63 > 1, v64 + 1, 1, v55);
    *(_QWORD *)(v55 + 16) = v64 + 1;
    v61(v55 + v58 + v64 * v59, v42, v7);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v46, v7);
  }
  else
  {
    v62 = v106;
  }
  swift_getKeyPath();
  v65 = v107;
  sub_23BB887A4();
  v66 = v94;
  v62(v94, v65, v7);
  v68 = *(_QWORD *)(v55 + 16);
  v67 = *(_QWORD *)(v55 + 24);
  v69 = v96;
  if (v68 >= v67 >> 1)
    v55 = sub_23BB63FF4(v67 > 1, v68 + 1, 1, v55);
  *(_QWORD *)(v55 + 16) = v68 + 1;
  v61(v55 + v58 + v68 * v59, v66, v7);
  swift_getKeyPath();
  v70 = v108;
  sub_23BB887A4();
  v62(v69, v70, v7);
  v72 = *(_QWORD *)(v55 + 16);
  v71 = *(_QWORD *)(v55 + 24);
  if (v72 >= v71 >> 1)
    v55 = sub_23BB63FF4(v71 > 1, v72 + 1, 1, v55);
  *(_QWORD *)(v55 + 16) = v72 + 1;
  v61(v55 + v58 + v72 * v59, v69, v7);
  v105 = v58;
  if (v95)
  {
    swift_getKeyPath();
    sub_23B996E1C(&qword_256A59410, &qword_256A59408, MEMORY[0x24BDCB5C0]);
    v73 = v97;
    sub_23BB887A4();
    v62(v98, v73, v7);
    v75 = *(_QWORD *)(v55 + 16);
    v74 = *(_QWORD *)(v55 + 24);
    if (v75 >= v74 >> 1)
      v55 = sub_23BB63FF4(v74 > 1, v75 + 1, 1, v55);
    *(_QWORD *)(v55 + 16) = v75 + 1;
    v76 = v55 + v58 + v75 * v59;
    v77 = v61;
    v61(v76, v98, v7);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v97, v7);
  }
  else
  {
    v77 = v61;
  }
  swift_getKeyPath();
  v78 = v99;
  sub_23BB8A76C();
  v79 = v102;
  v80 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v78, v104);
  v81 = v109;
  sub_23BB88798();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
  v82 = v101;
  v83 = v106;
  v106(v101, v81, v7);
  v85 = *(_QWORD *)(v55 + 16);
  v84 = *(_QWORD *)(v55 + 24);
  if (v85 >= v84 >> 1)
    v55 = sub_23BB63FF4(v84 > 1, v85 + 1, 1, v55);
  v86 = v92;
  v87 = v93;
  *(_QWORD *)(v55 + 16) = v85 + 1;
  v77(v55 + v105 + v85 * v59, v82, v7);
  swift_getKeyPath();
  sub_23BB697D0();
  sub_23BB887A4();
  v83(v87, v86, v7);
  v89 = *(_QWORD *)(v55 + 16);
  v88 = *(_QWORD *)(v55 + 24);
  if (v89 >= v88 >> 1)
    v55 = sub_23BB63FF4(v88 > 1, v89 + 1, 1, v55);
  *(_QWORD *)(v55 + 16) = v89 + 1;
  v77(v55 + v105 + v89 * v59, v87, v7);
  v90 = *(void (**)(char *, uint64_t))(v110 + 8);
  v90(v86, v7);
  v90(v109, v7);
  v90(v108, v7);
  v90(v107, v7);
  v90(v103, v7);
  return v55;
}

uint64_t PeopleListController.Filter.matchesPerson(_:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v19 - v13;
  if (*v1)
  {
    if (*v1 == 1)
      return PersonInfo.isNearby.getter() & 1;
    v16 = type metadata accessor for PersonInfo();
    sub_23BB6985C(a1 + *(int *)(v16 + 20), (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23BAA0578((uint64_t)v6, (uint64_t)v10);
      v17 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 0, 1, v17);
    }
    else
    {
      v17 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
    }
    sub_23B990D24((uint64_t)v10, (uint64_t)v14, &qword_256A5AA60);
    type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17) == 1)
    {
      sub_23BB698A0((uint64_t)v14);
      return 0;
    }
    v18 = v14[*(int *)(v17 + 28) + 8];
    sub_23BB698E0((uint64_t)v14);
    if ((v18 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t PeopleListController.State.Loaded.init(rawList:filteredList:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t PeopleListController.State.Loaded.rawList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PeopleListController.State.Loaded.rawList.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PeopleListController.State.Loaded.rawList.modify())()
{
  return nullsub_1;
}

uint64_t PeopleListController.State.Loaded.filteredList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PeopleListController.State.Loaded.filteredList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PeopleListController.State.Loaded.filteredList.modify())()
{
  return nullsub_1;
}

uint64_t PeopleListController.State.loaded.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  if (*v1)
    v3 = v1[1];
  else
    v3 = 0;
  *a1 = v2;
  a1[1] = v3;
  return sub_23BA0E458(v2);
}

void static PeopleListController.Filter.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void PeopleListController.Filter.id.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t PeopleListController.Filter.title.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79627261654ELL;
  if (*v0 != 1)
    v1 = 0x657469726F766146;
  if (*v0)
    return v1;
  else
    return 7105601;
}

uint64_t PeopleListController.Filter.symbolName.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 1918989427;
  if (*v0)
    return v1;
  else
    return 0x6C75622E7473696CLL;
}

BOOL static PeopleListController.Filter.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PeopleListController.Filter.hash(into:)()
{
  return sub_23BB8B24C();
}

void *static PeopleListController.Filter.allCases.getter()
{
  return &unk_250CA9E90;
}

uint64_t PeopleListController.Filter.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

void sub_23BB69640(_QWORD *a1@<X8>)
{
  *a1 = &unk_250CA9EB8;
}

uint64_t PeopleListController.Sort.favoritesFirst.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PeopleListController.Sort.favoritesFirst.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PeopleListController.Sort.favoritesFirst.modify())()
{
  return nullsub_1;
}

uint64_t PeopleListController.Sort.nearestFirst.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t PeopleListController.Sort.nearestFirst.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*PeopleListController.Sort.nearestFirst.modify())()
{
  return nullsub_1;
}

uint64_t PeopleListController.Sort.init(favoritesFirst:nearestFirst:)@<X0>(uint64_t result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_23BB6969C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PersonInfo.pendingActionsSortOrder.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23BB696C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7[16];
  _BYTE v8[136];
  _BYTE v9[8];
  uint64_t v10;

  v4 = type metadata accessor for PersonInfo();
  sub_23B990D24(a1 + *(int *)(v4 + 24), (uint64_t)v8, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v8, (uint64_t)v9, &qword_256A5AA48);
  result = sub_23B9BE120((uint64_t)v9);
  if ((_DWORD)result != 1)
  {
    sub_23B990D24((uint64_t)&v10, (uint64_t)v7, &qword_256A5AA50);
    result = sub_23B9B20A4(v7);
    if ((_DWORD)result != 1)
    {
      v6 = 1;
      goto LABEL_6;
    }
    result = sub_23BAB90D0((uint64_t)v8);
  }
  v6 = 0;
LABEL_6:
  *a2 = v6;
  return result;
}

uint64_t sub_23BB69778@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PersonInfo.relationshipSortOrder.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23BB697A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PersonInfo.displayName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_23BB697D0()
{
  unint64_t result;

  result = qword_256A64490;
  if (!qword_256A64490)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_256A64490);
  }
  return result;
}

uint64_t sub_23BB69814@<X0>(uint64_t a1@<X8>)
{
  return PersonInfo.nonOptionalDistanceFromUserLocation.getter(a1);
}

uint64_t sub_23BB69834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PersonInfo.nonOptionalFavoriteOrder.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23BB6985C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB698A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB698E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23BB69920()
{
  unint64_t result;

  result = qword_256A64498;
  if (!qword_256A64498)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleListController.Filter, &type metadata for PeopleListController.Filter);
    atomic_store(result, (unint64_t *)&qword_256A64498);
  }
  return result;
}

unint64_t sub_23BB69968()
{
  unint64_t result;

  result = qword_256A644A0;
  if (!qword_256A644A0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleListController.Filter, &type metadata for PeopleListController.Filter);
    atomic_store(result, (unint64_t *)&qword_256A644A0);
  }
  return result;
}

uint64_t sub_23BB699AC()
{
  return sub_23B996E1C(&qword_256A644A8, qword_256A644B0, MEMORY[0x24BEE12E0]);
}

ValueMetadata *type metadata accessor for PeopleListController.State()
{
  return &type metadata for PeopleListController.State;
}

ValueMetadata *type metadata accessor for PeopleListController.State.Loaded()
{
  return &type metadata for PeopleListController.State.Loaded;
}

uint64_t _s6FilterOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BB69A44 + 4 * byte_23BB98315[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BB69A78 + 4 * asc_23BB98310[v4]))();
}

uint64_t sub_23BB69A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB69A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB69A88);
  return result;
}

uint64_t sub_23BB69A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB69A9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BB69AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB69AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleListController.Filter()
{
  return &type metadata for PeopleListController.Filter;
}

uint64_t _s4SortVwst_0(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB69B10 + 4 * byte_23BB9831F[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_23BB69B44 + 4 * byte_23BB9831A[v4]))();
}

uint64_t sub_23BB69B44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BB69B4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23BB69B54);
  return result;
}

uint64_t sub_23BB69B60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23BB69B68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB69B6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BB69B74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleListController.Sort()
{
  return &type metadata for PeopleListController.Sort;
}

uint64_t sub_23BB69B90()
{
  return swift_release();
}

uint64_t sub_23BB69B98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

uint64_t sub_23BB69BD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BB69C24(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t sub_23BB69C6C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23BB69CB4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for BubbleButtonsTemplate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BubbleButtonsTemplate);
}

uint64_t sub_23BB69D00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB69D34@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  ValueMetadata *v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;
  ValueMetadata *v76;
  uint64_t v77;
  unint64_t v78;

  v64 = a3;
  v65 = a4;
  v63 = a2;
  v62 = a1;
  v55 = a7;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v67, v9);
  v66 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B9B99E0();
  v75 = a5;
  v76 = &type metadata for CustomLabelAndIconLabelStyle;
  v61 = a5;
  v77 = a6;
  v78 = v11;
  v59 = a6;
  MEMORY[0x24260D864](255, &v75, MEMORY[0x24BDF2188], 0);
  swift_getTupleTypeMetadata3();
  v12 = sub_23BB8A364();
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v12);
  v13 = sub_23BB8A130();
  v14 = MEMORY[0x24BDF4498];
  v15 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4498], v13);
  v75 = v13;
  v76 = (ValueMetadata *)v15;
  v16 = MEMORY[0x24BDF3A38];
  MEMORY[0x24260D864](255, &v75, MEMORY[0x24BDF3A38], 0);
  sub_23BB894AC();
  v75 = a5;
  v76 = &type metadata for CustomLabelAndIconLabelStyle;
  v77 = a6;
  v78 = v11;
  swift_getOpaqueTypeConformance2();
  v17 = sub_23BB8A130();
  v18 = MEMORY[0x24260D8DC](v14, v17);
  v75 = v17;
  v76 = (ValueMetadata *)v18;
  MEMORY[0x24260D864](255, &v75, v16, 0);
  sub_23BB894AC();
  sub_23BB8A160();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59A38);
  sub_23BB894AC();
  sub_23BB894AC();
  swift_getTupleTypeMetadata2();
  sub_23BB8A364();
  sub_23BB894AC();
  sub_23BB89950();
  swift_getTupleTypeMetadata3();
  v19 = sub_23BB8A364();
  v20 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v19);
  v58 = v19;
  v57 = v20;
  v21 = sub_23BB89380();
  v60 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v50 - v23;
  v25 = sub_23BB894AC();
  v54 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v29 = (char *)&v50 - v28;
  v56 = MEMORY[0x24260D8DC](MEMORY[0x24BDEBE40], v21, v27);
  v74[0] = v56;
  v74[1] = MEMORY[0x24BDEDBB8];
  v30 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v25, v74);
  v31 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  v75 = v25;
  v76 = (ValueMetadata *)v67;
  v53 = v30;
  v77 = v30;
  v78 = v31;
  v51 = v31;
  v32 = MEMORY[0x24260D864](0, &v75, MEMORY[0x24BDF2800], 0);
  v52 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v50 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v50 - v38;
  v68 = v61;
  v69 = v59;
  v70 = v62;
  v71 = v63 & 0x101;
  v72 = v64;
  v73 = v65;
  v40 = sub_23BB89B78();
  v41 = sub_23BB89B90();
  sub_23BB89B84();
  sub_23BB89B84();
  if (sub_23BB89B84() != v40)
    sub_23BB89B84();
  sub_23BB89B84();
  if (sub_23BB89B84() != v41)
    sub_23BB89B84();
  v42 = (uint64_t)v66;
  sub_23BB89374();
  sub_23BB8A2EC();
  sub_23BB89EB4();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v24, v21);
  v43 = *MEMORY[0x24BDECEA0];
  v44 = sub_23BB894A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
  sub_23BAF8B98();
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    v46 = (ValueMetadata *)v67;
    v47 = v53;
    v48 = v51;
    sub_23BB89DF4();
    sub_23BB6B6F0(v42);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v25);
    v75 = v25;
    v76 = v46;
    v77 = v47;
    v78 = v48;
    swift_getOpaqueTypeConformance2();
    sub_23BAC5FD8((uint64_t)v35, v32, (uint64_t)v39);
    v49 = *(void (**)(char *, uint64_t))(v52 + 8);
    v49(v35, v32);
    sub_23BAC2FCC((uint64_t)v39, v32, v55);
    return ((uint64_t (*)(char *, uint64_t))v49)(v39, v32);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BB6A3C4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (**v79)(char *, uint64_t);
  ValueMetadata *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  int v89;
  char *v90;
  ValueMetadata *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  ValueMetadata *v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  ValueMetadata *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  ValueMetadata *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  void (*v136)(char *, uint64_t);
  uint64_t (*v137)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  ValueMetadata *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  ValueMetadata *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(char *, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  char *v173;
  int v174;
  unsigned int v175;
  uint64_t v176;
  void (**v177)(char *, uint64_t);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t OpaqueTypeConformance2;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD v213[2];
  _QWORD v214[2];
  _QWORD v215[2];
  _QWORD v216[2];
  _QWORD v217[2];
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD v224[2];
  _QWORD v225[2];
  _QWORD v226[2];
  uint64_t v227;
  ValueMetadata *v228;
  char *v229;
  unint64_t v230;

  v191 = a4;
  v186 = a3;
  v175 = a2;
  v182 = a1;
  v171 = a7;
  v172 = a2 & 1;
  v9 = sub_23B9B99E0();
  v227 = a5;
  v228 = &type metadata for CustomLabelAndIconLabelStyle;
  v190 = a5;
  v229 = a6;
  v230 = v9;
  v10 = a6;
  v11 = MEMORY[0x24260D864](255, &v227, MEMORY[0x24BDF2188], 0);
  v227 = a5;
  v228 = &type metadata for CustomLabelAndIconLabelStyle;
  v229 = a6;
  v230 = v9;
  v185 = a6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v12 = sub_23BB8A130();
  v13 = sub_23BB894AC();
  v142 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v144 = (char *)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v143 = (uint64_t)&v139 - v18;
  v183 = v11;
  v19 = sub_23BB8A160();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59A38);
  v20 = sub_23BB894AC();
  v21 = sub_23BB894AC();
  swift_getTupleTypeMetadata2();
  v22 = sub_23BB8A364();
  v153 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v22);
  v152 = (char *)&v139 - v23;
  v149 = v19;
  v140 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v24, v25);
  v145 = (char *)&v139 - v26;
  v150 = v20;
  v141 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v27, v28);
  v146 = (char *)&v139 - v29;
  v154 = v21;
  v163 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v30, v31);
  v148 = (ValueMetadata *)((char *)&v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v33, v34);
  v147 = (char *)&v139 - v35;
  MEMORY[0x24BDAC7A8](v36, v37);
  v151 = (char *)&v139 - v38;
  MEMORY[0x24BDAC7A8](v39, v40);
  v164 = (uint64_t)&v139 - v41;
  v169 = v42;
  v170 = v13;
  v168 = sub_23BB89950();
  v166 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168, v43);
  v167 = (char *)&v139 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45, v46);
  v181 = (char *)&v139 - v47;
  v156 = v12;
  v160 = *(_QWORD *)(v12 - 8);
  v50 = MEMORY[0x24BDAC7A8](v48, v49);
  v173 = (char *)&v139 - v51;
  v52 = MEMORY[0x24BDF4498];
  v189 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4498], v12, v50);
  v227 = v12;
  v228 = (ValueMetadata *)v189;
  v53 = MEMORY[0x24BDF3A38];
  v54 = MEMORY[0x24260D864](0, &v227, MEMORY[0x24BDF3A38], 0);
  v55 = *(_QWORD *)(v54 - 8);
  v158 = v54;
  v159 = v55;
  MEMORY[0x24BDAC7A8](v54, v54);
  v157 = (char *)&v139 - v56;
  v57 = sub_23BB894AC();
  v179 = *(_QWORD *)(v57 - 8);
  v180 = v57;
  MEMORY[0x24BDAC7A8](v57, v58);
  v187 = (char *)&v139 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60, v61);
  v188 = (uint64_t)&v139 - v62;
  swift_getTupleTypeMetadata3();
  v162 = (uint64_t (*)(char *, uint64_t))sub_23BB8A364();
  v161 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v162);
  v63 = sub_23BB8A130();
  v177 = *(void (***)(char *, uint64_t))(v63 - 8);
  v65 = MEMORY[0x24BDAC7A8](v63, v64);
  v67 = (char *)&v139 - v66;
  v155 = (ValueMetadata *)MEMORY[0x24260D8DC](v52, v63, v65);
  v227 = v63;
  v228 = v155;
  v68 = MEMORY[0x24260D864](0, &v227, v53, 0);
  v165 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v69);
  v71 = (char *)&v139 - v70;
  v72 = sub_23BB894AC();
  v176 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72, v73);
  v75 = (char *)&v139 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v76, v77);
  v79 = (void (**)(char *, uint64_t))((char *)&v139 - v78);
  v206 = v190;
  v207 = v10;
  v208 = v182;
  LODWORD(v10) = v172;
  v209 = v172;
  v174 = (v175 >> 8) & 1;
  v210 = BYTE1(v175) & 1;
  v211 = v186;
  v212 = v191;
  sub_23BB89788();
  sub_23BB8A124();
  v80 = v155;
  sub_23BB89F38();
  v177[1](v67, v63);
  v227 = v63;
  v228 = v80;
  v81 = swift_getOpaqueTypeConformance2();
  sub_23BB89F20();
  v82 = v71;
  v83 = v156;
  (*(void (**)(char *, uint64_t))(v165 + 8))(v82, v68);
  v226[0] = v81;
  v226[1] = MEMORY[0x24BDEDB80];
  v84 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v72, v226);
  v177 = v79;
  v161 = v84;
  sub_23BAC5FD8((uint64_t)v75, v72, (uint64_t)v79);
  v85 = *(uint64_t (**)(char *, uint64_t))(v176 + 8);
  v178 = v75;
  v165 = v72;
  v162 = v85;
  v85(v75, v72);
  v86 = v186;
  v199 = v190;
  v200 = v185;
  v87 = v182;
  v201 = v182;
  v202 = (char)v10;
  v203 = v174;
  v204 = v186;
  v205 = v191;
  sub_23BB89788();
  v88 = v173;
  v89 = (int)v10;
  sub_23BB8A124();
  v90 = v157;
  v91 = (ValueMetadata *)v189;
  sub_23BB89F38();
  v155 = *(ValueMetadata **)(v160 + 8);
  ((void (*)(char *, uint64_t))v155)(v88, v83);
  v227 = v83;
  v228 = v91;
  v92 = swift_getOpaqueTypeConformance2();
  v93 = (uint64_t)v187;
  v94 = v158;
  sub_23BB89F20();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v90, v94);
  v225[0] = v92;
  v225[1] = MEMORY[0x24BDEDB80];
  v95 = v180;
  v159 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v180, v225);
  sub_23BAC5FD8(v93, v95, v188);
  v160 = *(_QWORD *)(v179 + 8);
  ((void (*)(uint64_t, uint64_t))v160)(v93, v95);
  v192 = v190;
  v193 = v185;
  v194 = v87;
  v195 = v89;
  v196 = v174;
  v197 = v86;
  v198 = v191;
  if ((v175 & 0x100) != 0)
  {
    v175 = (unsigned __int16)(v175 & 0x100) >> 8;
    v174 = v89 != 0;
    sub_23BB8983C();
    v103 = v145;
    sub_23BB8A154();
    v104 = v149;
    v105 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v149);
    v106 = v146;
    v107 = v105;
    v158 = v105;
    sub_23BB89F44();
    v173 = *(char **)(v140 + 8);
    ((void (*)(char *, uint64_t))v173)(v103, v104);
    v108 = sub_23B996E1C(&qword_256A59A30, &qword_256A59A38, MEMORY[0x24BDF1028]);
    v215[0] = v107;
    v215[1] = v108;
    v109 = v150;
    v110 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v150, v215);
    v111 = (uint64_t)v151;
    v156 = v110;
    sub_23BB89F20();
    v157 = *(char **)(v141 + 8);
    ((void (*)(char *, uint64_t))v157)(v106, v109);
    v214[0] = v110;
    v214[1] = MEMORY[0x24BDEDB80];
    v112 = v154;
    v113 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v154, v214);
    sub_23BAC5FD8(v111, v112, v164);
    v155 = *(ValueMetadata **)(v163 + 8);
    v114 = ((uint64_t (*)(uint64_t, uint64_t))v155)(v111, v112);
    v144 = (char *)&v139;
    MEMORY[0x24BDAC7A8](v114, v115);
    v116 = (uint64_t)v185;
    *(&v139 - 6) = v190;
    *(&v139 - 5) = v116;
    *(&v139 - 4) = v182;
    *((_BYTE *)&v139 - 24) = v174;
    *((_BYTE *)&v139 - 23) = v175;
    v117 = v191;
    *(&v139 - 2) = v186;
    *(&v139 - 1) = v117;
    sub_23BB8983C();
    sub_23BB8A154();
    sub_23BB89F44();
    ((void (*)(char *, uint64_t))v173)(v103, v104);
    v118 = (uint64_t)v147;
    sub_23BB89F20();
    ((void (*)(char *, uint64_t))v157)(v106, v109);
    v119 = v111;
    sub_23BAC5FD8(v118, v112, v111);
    v120 = v155;
    ((void (*)(uint64_t, uint64_t))v155)(v118, v112);
    v121 = v164;
    v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 16);
    v122(v118, v164, v112);
    v227 = v118;
    v123 = v148;
    v122((uint64_t)v148, v111, v112);
    v228 = v123;
    v221 = v112;
    v222 = v112;
    v218 = v113;
    v219 = v113;
    v124 = (uint64_t)v152;
    sub_23BAF66B8(&v227, 2uLL, (uint64_t)&v221);
    ((void (*)(ValueMetadata *, uint64_t))v120)(v123, v112);
    ((void (*)(uint64_t, uint64_t))v120)(v118, v112);
    v102 = v169;
    MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v169);
    v213[0] = v189;
    v213[1] = MEMORY[0x24BDEDB80];
    v99 = v170;
    MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v170, v213);
    sub_23BAC2FE4(v124, v102);
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v124, v102);
    ((void (*)(uint64_t, uint64_t))v120)(v119, v112);
    ((void (*)(uint64_t, uint64_t))v120)(v121, v112);
  }
  else
  {
    sub_23BB89788();
    v96 = v173;
    sub_23BB8A124();
    v97 = (uint64_t)v144;
    v98 = v189;
    sub_23BB89F20();
    ((void (*)(char *, uint64_t))v155)(v96, v83);
    v224[0] = v98;
    v224[1] = MEMORY[0x24BDEDB80];
    v99 = v170;
    MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v170, v224);
    v100 = v143;
    sub_23BAC5FD8(v97, v99, v143);
    v101 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
    v101(v97, v99);
    sub_23BAC2FCC(v100, v99, v97);
    v102 = v169;
    MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v169);
    sub_23BAC30A8(v97, v102, v99);
    v101(v97, v99);
    v101(v100, v99);
  }
  v125 = (uint64_t)v178;
  v126 = v165;
  (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v176 + 16))(v178, v177, v165);
  v227 = v125;
  v127 = v180;
  v128 = (ValueMetadata *)v187;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 16))(v187, v188, v180);
  v228 = v128;
  v130 = v166;
  v129 = v167;
  v131 = v181;
  v132 = v168;
  (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v167, v181, v168);
  v229 = v129;
  v221 = v126;
  v222 = v127;
  v223 = v132;
  v218 = v161;
  v219 = v159;
  v133 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v102);
  v217[0] = v189;
  v217[1] = MEMORY[0x24BDEDB80];
  v134 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v99, v217);
  v216[0] = v133;
  v216[1] = v134;
  v220 = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v132, v216);
  sub_23BAF66B8(&v227, 3uLL, (uint64_t)&v221);
  v135 = *(void (**)(char *, uint64_t))(v130 + 8);
  v135(v131, v132);
  v136 = (void (*)(char *, uint64_t))v160;
  ((void (*)(uint64_t, uint64_t))v160)(v188, v127);
  v137 = v162;
  v162((char *)v177, v126);
  v135(v129, v132);
  v136(v187, v127);
  return v137(v178, v126);
}

uint64_t sub_23BB6B1DC@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, void (*a3)(__n128)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  ValueMetadata *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t OpaqueTypeConformance2;
  void (*v23)(ValueMetadata *, uint64_t);
  _QWORD v25[6];
  _QWORD v26[3];
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  ValueMetadata *v32;
  uint64_t *v33;
  unint64_t v34;

  v25[1] = a4;
  v25[2] = a7;
  v12 = sub_23B9B99E0();
  v31 = (uint64_t *)a5;
  v32 = &type metadata for CustomLabelAndIconLabelStyle;
  v33 = (uint64_t *)a6;
  v34 = v12;
  v13 = MEMORY[0x24260D864](0, &v31, MEMORY[0x24BDF2188], 0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (ValueMetadata *)((char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)v25 - v20;
  sub_23BB6B3AC(a1, a2 & 0x101, a3, a5, a6, (uint64_t)v17);
  v31 = (uint64_t *)a5;
  v32 = &type metadata for CustomLabelAndIconLabelStyle;
  v33 = (uint64_t *)a6;
  v34 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_23BAC5FD8((uint64_t)v17, v13, (uint64_t)v21);
  v23 = *(void (**)(ValueMetadata *, uint64_t))(v14 + 8);
  v23(v17, v13);
  v29 = 0;
  v30 = 1;
  v31 = &v29;
  (*(void (**)(ValueMetadata *, char *, uint64_t))(v14 + 16))(v17, v21, v13);
  v27 = 0;
  v28 = 1;
  v32 = v17;
  v33 = &v27;
  v26[0] = MEMORY[0x24BDF4638];
  v26[1] = v13;
  v26[2] = MEMORY[0x24BDF4638];
  v25[3] = MEMORY[0x24BDF4610];
  v25[4] = OpaqueTypeConformance2;
  v25[5] = MEMORY[0x24BDF4610];
  sub_23BAF66B8((uint64_t *)&v31, 3uLL, (uint64_t)v26);
  v23((ValueMetadata *)v21, v13);
  return ((uint64_t (*)(ValueMetadata *, uint64_t))v23)(v17, v13);
}

uint64_t sub_23BB6B3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(__n128)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(__n128);
  uint64_t v26;
  uint64_t v27;
  ValueMetadata *v28;
  uint64_t v29;
  unint64_t v30;

  v25 = a3;
  v26 = a6;
  v24 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B9B99E0();
  v27 = a4;
  v28 = &type metadata for CustomLabelAndIconLabelStyle;
  v29 = a5;
  v30 = v10;
  v11 = MEMORY[0x24260D864](0, &v27, MEMORY[0x24BDF2188], 0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v23 - v19;
  v25(v18);
  sub_23BB89D88();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, a4);
  v27 = a4;
  v28 = &type metadata for CustomLabelAndIconLabelStyle;
  v29 = a5;
  v30 = v10;
  swift_getOpaqueTypeConformance2();
  sub_23BAC5FD8((uint64_t)v15, v11, (uint64_t)v20);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  sub_23BAC2FCC((uint64_t)v20, v11, v26);
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v11);
}

uint64_t sub_23BB6B548@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, void (*a3)(__n128)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  ValueMetadata *v27;
  uint64_t v28;
  unint64_t v29;

  v24[1] = a4;
  v25 = a7;
  v12 = sub_23B9B99E0();
  v26 = a5;
  v27 = &type metadata for CustomLabelAndIconLabelStyle;
  v28 = a6;
  v29 = v12;
  v13 = MEMORY[0x24260D864](0, &v26, MEMORY[0x24BDF2188], 0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)v24 - v20;
  sub_23BB6B3AC(a1, a2 & 0x101, a3, a5, a6, (uint64_t)v17);
  v26 = a5;
  v27 = &type metadata for CustomLabelAndIconLabelStyle;
  v28 = a6;
  v29 = v12;
  swift_getOpaqueTypeConformance2();
  sub_23BAC5FD8((uint64_t)v17, v13, (uint64_t)v21);
  v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v17, v13);
  sub_23BAC2FCC((uint64_t)v21, v13, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v13);
}

uint64_t sub_23BB6B6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_23BB69D34(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_23BB6B6E4()
{
  return sub_23BB6B73C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BB6A3C4);
}

uint64_t sub_23BB6B6F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB6B730()
{
  return sub_23BB6B73C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BB6B1DC);
}

uint64_t sub_23BB6B73C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;

  if (*(_BYTE *)(v1 + 41))
    v2 = 256;
  else
    v2 = 0;
  return a1(*(_QWORD *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23BB6B774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + 41))
    v2 = 256;
  else
    v2 = 0;
  return sub_23BB6B548(*(_QWORD *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void (**)(__n128))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BB6B7B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  ValueMetadata *v20;
  uint64_t v21;
  unint64_t v22;

  v2 = *a1;
  v1 = a1[1];
  v3 = sub_23B9B99E0();
  v19 = v2;
  v20 = &type metadata for CustomLabelAndIconLabelStyle;
  v21 = v1;
  v22 = v3;
  MEMORY[0x24260D864](255, &v19, MEMORY[0x24BDF2188], 0);
  swift_getTupleTypeMetadata3();
  v4 = sub_23BB8A364();
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v4);
  v5 = sub_23BB8A130();
  v6 = MEMORY[0x24BDF4498];
  v7 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4498], v5);
  v19 = v5;
  v20 = (ValueMetadata *)v7;
  v8 = MEMORY[0x24BDF3A38];
  MEMORY[0x24260D864](255, &v19, MEMORY[0x24BDF3A38], 0);
  sub_23BB894AC();
  v19 = v2;
  v20 = &type metadata for CustomLabelAndIconLabelStyle;
  v21 = v1;
  v22 = v3;
  swift_getOpaqueTypeConformance2();
  v9 = sub_23BB8A130();
  v10 = MEMORY[0x24260D8DC](v6, v9);
  v19 = v9;
  v20 = (ValueMetadata *)v10;
  MEMORY[0x24260D864](255, &v19, v8, 0);
  sub_23BB894AC();
  sub_23BB8A160();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59A38);
  sub_23BB894AC();
  sub_23BB894AC();
  swift_getTupleTypeMetadata2();
  sub_23BB8A364();
  sub_23BB894AC();
  sub_23BB89950();
  swift_getTupleTypeMetadata3();
  v11 = sub_23BB8A364();
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v11);
  v12 = sub_23BB89380();
  v13 = sub_23BB894AC();
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
  v18[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDEBE40], v12);
  v18[1] = MEMORY[0x24BDEDBB8];
  v15 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v13, v18);
  v16 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  v19 = v13;
  v20 = (ValueMetadata *)v14;
  v21 = v15;
  v22 = v16;
  return swift_getOpaqueTypeConformance2();
}

uint64_t Bool.sortOrder.getter(int a1)
{
  return ~a1 & 1;
}

uint64_t ConditionsProvider.Dependencies.init(airplaneModeStateStream:bluetoothStateStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_23BB6BAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23BB8AA18();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23BB8AA0C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23B9907F8(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23BB8A988();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void static ConditionsProvider.mock()(uint64_t (**a1)()@<X8>)
{
  *a1 = sub_23BB6BC08;
  a1[1] = 0;
  a1[2] = sub_23BB6BE80;
  a1[3] = 0;
}

uint64_t sub_23BB6BC08()
{
  return sub_23BB6BE8C();
}

uint64_t sub_23BB6BC14(uint64_t a1)
{
  return sub_23BB6BF50(a1, (uint64_t)&unk_250CB74D0, (uint64_t)&unk_256A64550);
}

uint64_t sub_23BB6BC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5CFC0);
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v6 = sub_23BB8AF1C();
  v4[6] = v6;
  v4[7] = *(_QWORD *)(v6 - 8);
  v4[8] = swift_task_alloc();
  sub_23BB8A9F4();
  v4[9] = sub_23BB8A9E8();
  v4[10] = sub_23BB8A988();
  v4[11] = v7;
  return swift_task_switch();
}

uint64_t sub_23BB6BCE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_23BB6BD68;
  return v3(100000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BB6BD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BB6BDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  *(_BYTE *)(v0 + 112) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  sub_23BB8AA3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB6BE80()
{
  return sub_23BB6BE8C();
}

uint64_t sub_23BB6BE8C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF90);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  (*(void (**)(char *, _QWORD, __n128))(v4 + 104))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BEE6A10], v2);
  return sub_23BB8AA6C();
}

ValueMetadata *type metadata accessor for ConditionsProvider.Dependencies()
{
  return &type metadata for ConditionsProvider.Dependencies;
}

uint64_t sub_23BB6BF3C(uint64_t a1)
{
  return sub_23BB6BF50(a1, (uint64_t)&unk_250CB74A8, (uint64_t)&unk_256A64540);
}

uint64_t sub_23BB6BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  sub_23BB8A9F4();
  v14 = sub_23BB8A9E8();
  v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_23BB6BAC0((uint64_t)v12, a3, v16);
  return swift_release();
}

uint64_t sub_23BB6C0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5CFC0);
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v6 = sub_23BB8AF1C();
  v4[6] = v6;
  v4[7] = *(_QWORD *)(v6 - 8);
  v4[8] = swift_task_alloc();
  sub_23BB8A9F4();
  v4[9] = sub_23BB8A9E8();
  v4[10] = sub_23BB8A988();
  v4[11] = v7;
  return swift_task_switch();
}

uint64_t sub_23BB6C16C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_23BB6C1EC;
  return v3(200000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BB6C1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BB6C274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  *(_BYTE *)(v0 + 112) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  sub_23BB8AA3C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB6C308()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB6C354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B97C964;
  return sub_23BB6C0AC(a1, v5, v6, v7);
}

uint64_t objectdestroyTm_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BB6C458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BB6BC28(a1, v5, v6, v7);
}

uint64_t sub_23BB6C4E4()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  int v8;
  unsigned __int8 v9;
  char v10;

  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(v0, sel_dataForKey_, v2);

  if (!v3)
    return 2;
  v4 = sub_23BB88864();
  v6 = v5;

  sub_23BB8863C();
  swift_allocObject();
  sub_23BB88630();
  sub_23BB6E8D8();
  sub_23BB88624();
  sub_23B9BDAD0(v4, v6);
  result = swift_release();
  if (!v1)
  {
    if (v10)
      v8 = 256;
    else
      v8 = 0;
    return v8 | v9;
  }
  return result;
}

uint64_t sub_23BB6C5E0()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  unsigned __int8 v8;

  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(v0, sel_dataForKey_, v2);

  if (!v3)
    return 2;
  v4 = sub_23BB88864();
  v6 = v5;

  sub_23BB8863C();
  swift_allocObject();
  sub_23BB88630();
  sub_23BB6E804();
  sub_23BB88624();
  sub_23B9BDAD0(v4, v6);
  result = swift_release();
  if (!v1)
    return v8;
  return result;
}

uint64_t sub_23BB6C6C8(void *a1, int a2)
{
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v23;
  unint64_t v24;

  v4 = a2 & 1;
  if (qword_256A58DE8 != -1)
    swift_once();
  v5 = sub_23BB891C4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256A64558);
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v23 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = sub_23BB6D814(a2 & 1);
    sub_23BB7B69C(v10, v11, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v6, v7, "CustomMapStyle: Save to UserDefaults (%{public}s)", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);
  }

  LOBYTE(v23) = v4;
  sub_23BB88660();
  swift_allocObject();
  sub_23BB88654();
  sub_23BB6E848();
  v12 = sub_23BB88648();
  v14 = v13;
  swift_release();
  v15 = (void *)sub_23BB88858();
  v16 = (void *)sub_23BB8A784();
  objc_msgSend(a1, sel_setValue_forKey_, v15, v16);

  sub_23B9BDAD0(v12, v14);
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23BB8AE08();
  swift_bridgeObjectRelease();
  v23 = 0xD000000000000017;
  v24 = 0x800000023BB9D7D0;
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  LOBYTE(v23) = BYTE1(a2) & 1;
  BYTE1(v23) = BYTE2(a2) & 1;
  swift_allocObject();
  sub_23BB88654();
  sub_23BB6E88C();
  v17 = sub_23BB88648();
  v19 = v18;
  swift_release();
  v20 = (void *)sub_23BB88858();
  v21 = (void *)sub_23BB8A784();
  objc_msgSend(a1, sel_setValue_forKey_, v20, v21);

  sub_23B9BDAD0(v17, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB6CA6C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74696C6C65746173;
  else
    v3 = 0x65726F6C707865;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x74696C6C65746173;
  else
    v5 = 0x65726F6C707865;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23BB8B1A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23BB6CB14(char a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  if ((a1 & 1) != 0)
  {
    if (qword_256A58DD0 != -1)
      swift_once();
    v1 = (void *)qword_256A73E28;
    if (qword_256A73E28)
      goto LABEL_9;
LABEL_10:
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v3 = objc_msgSend(v4, sel_mainBundle);
    v2 = 0;
    goto LABEL_11;
  }
  if (qword_256A58DD0 != -1)
    swift_once();
  v1 = (void *)qword_256A73E28;
  if (!qword_256A73E28)
    goto LABEL_10;
LABEL_9:
  swift_bridgeObjectRetain();
  v2 = v1;
  v3 = v2;
LABEL_11:
  v5 = v2;
  v6 = (void *)sub_23BB8A784();
  v7 = (void *)sub_23BB8A784();
  v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  v9 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_23BB6CCFC()
{
  int v0;
  int v1;
  unsigned __int8 v3;
  char v4;
  char v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  if (v5)
    v0 = 0x10000;
  else
    v0 = 0;
  if (v4)
    v1 = 256;
  else
    v1 = 0;
  return v1 | v3 | v0;
}

uint64_t sub_23BB6CD94@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[2];

  v19[1] = a2;
  v3 = sub_23BB89140();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BB89020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BB8905C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    sub_23BB89050();
    if ((a1 & 0x10000) != 0)
    {
      sub_23BB89134();
      sub_23BB8902C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    else
    {
      sub_23BB89038();
    }
  }
  else
  {
    sub_23BB89050();
    sub_23BB89014();
    sub_23BB89134();
    sub_23BB89044();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_23BB6CF3C()
{
  uint64_t v0;

  v0 = sub_23BB891C4();
  __swift_allocate_value_buffer(v0, qword_256A64558);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A64558);
  return sub_23BB891B8();
}

void sub_23BB6CFC4()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_256A58DD0 != -1)
    swift_once();
  v0 = (void *)qword_256A73E28;
  if (qword_256A73E28)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  qword_256A73E60 = v8;
  *(_QWORD *)algn_256A73E68 = v10;
}

void sub_23BB6D10C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_256A58DD0 != -1)
    swift_once();
  v0 = (void *)qword_256A73E28;
  if (qword_256A73E28)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  qword_256A73E70 = v8;
  *(_QWORD *)algn_256A73E78 = v10;
}

uint64_t sub_23BB6D254(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64648);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BB6E7C0();
  sub_23BB8B294();
  v11[15] = a2 & 1;
  v11[14] = 0;
  sub_23BB6E848();
  sub_23BB8B0F0();
  if (!v2)
  {
    v11[13] = 1;
    sub_23BB8B0D8();
    v11[12] = 2;
    sub_23BB8B0D8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_23BB6D3A8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61725473776F6873;
  if (*v0 != 1)
    v1 = 0x62614C73776F6873;
  if (*v0)
    return v1;
  else
    return 1701080941;
}

uint64_t sub_23BB6D40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BB6E4A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BB6D430(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23BB6D43C()
{
  sub_23BB6E7C0();
  return sub_23BB8B390();
}

uint64_t sub_23BB6D464()
{
  sub_23BB6E7C0();
  return sub_23BB8B39C();
}

uint64_t sub_23BB6D48C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BB6E61C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
    a2[2] = BYTE2(result) & 1;
  }
  return result;
}

uint64_t sub_23BB6D4C8(_QWORD *a1)
{
  char *v1;

  return sub_23BB6D254(a1, *v1);
}

uint64_t sub_23BB6D508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  if (a1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  if (a1[1])
    v3 = 256;
  else
    v3 = 0;
  v4 = v3 | *a1 | v2;
  if (a2[2])
    v5 = 0x10000;
  else
    v5 = 0;
  if (a2[1])
    v6 = 256;
  else
    v6 = 0;
  return sub_23BB6DF78(v4, v6 | *a2 | v5);
}

uint64_t sub_23BB6D55C(char *a1, char *a2)
{
  return sub_23BB6CA6C(*a1, *a2);
}

uint64_t sub_23BB6D568()
{
  sub_23BB8B240();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t sub_23BB6D5EC()
{
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB6D64C()
{
  sub_23BB8B240();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t sub_23BB6D6CC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23BB8B024();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23BB6D728(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65726F6C707865;
  if (*v1)
    v2 = 0x74696C6C65746173;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23BB6D76C()
{
  sub_23BB6EBE8();
  return sub_23BB8A8C8();
}

uint64_t sub_23BB6D7C8()
{
  sub_23BB6EBE8();
  return sub_23BB8A8BC();
}

uint64_t sub_23BB6D814(char a1)
{
  __int128 v3;

  BYTE8(v3) = 0;
  sub_23BB8AE08();
  sub_23BB8A82C();
  *(_QWORD *)&v3 = a1 & 1;
  sub_23BB8AF40();
  sub_23BB8A82C();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  return *(_QWORD *)((char *)&v3 + 1);
}

uint64_t sub_23BB6D950()
{
  char *v0;

  return sub_23BB6D814(*v0);
}

uint64_t sub_23BB6D980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore20CustomMapStyleLoader__mapStyle;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64660);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BB6D9D4()
{
  return type metadata accessor for CustomMapStyleLoader();
}

uint64_t type metadata accessor for CustomMapStyleLoader()
{
  uint64_t result;

  result = qword_256A645A0;
  if (!qword_256A645A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BB6DA18()
{
  unint64_t v0;

  sub_23BB6DA84();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23BB6DA84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A645B0)
  {
    v0 = sub_23BB89248();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A645B0);
  }
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CustomMapStyle(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = v4 - 2;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomMapStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomMapStyle()
{
  return &type metadata for CustomMapStyle;
}

uint64_t sub_23BB6DBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  unsigned int v8;
  id v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  _BYTE v14[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64660);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_standardUserDefaults);
  v8 = sub_23BB6E364();

  if (v8 == 2)
  {
    v9 = objc_msgSend(v6, sel_standardUserDefaults);
    v8 = sub_23BB6E05C(0);

    v10 = (v8 >> 8) & 1;
    v11 = HIWORD(v8) & 1;
  }
  else
  {
    v10 = ((v8 & 0xFFFFFF) >> 8) & 1;
    v11 = ((v8 & 0xFFFFFF) >> 16) & 1;
  }
  v12 = v0 + OBJC_IVAR____TtC12FindMyUICore20CustomMapStyleLoader__mapStyle;
  v14[13] = v8 & 1;
  v14[14] = v10;
  v14[15] = v11;
  sub_23BB89224();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v12, v5, v1);
  return v0;
}

uint64_t sub_23BB6DD38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64698);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BB6EC2C();
  sub_23BB8B294();
  v11 = 0;
  sub_23BB8B0D8();
  if (!v1)
  {
    v10 = 1;
    sub_23BB8B0D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_23BB6DE58()
{
  _BYTE *v0;

  if (*v0)
    return 0x62614C73776F6873;
  else
    return 0x61725473776F6873;
}

uint64_t sub_23BB6DEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BB6EC70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BB6DEC8()
{
  sub_23BB6EC2C();
  return sub_23BB8B390();
}

uint64_t sub_23BB6DEF0()
{
  sub_23BB6EC2C();
  return sub_23BB8B39C();
}

uint64_t sub_23BB6DF18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BB6ED90(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_23BB6DF4C(_QWORD *a1)
{
  return sub_23BB6DD38(a1);
}

uint64_t sub_23BB6DF78(int a1, int a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  char v10;

  v4 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v5 = 0x74696C6C65746173;
  else
    v5 = 0x65726F6C707865;
  if (v4)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v7 = 0x74696C6C65746173;
  else
    v7 = 0x65726F6C707865;
  if ((a2 & 1) != 0)
    v8 = 0xE900000000000065;
  else
    v8 = 0xE700000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    if (((a1 ^ a2) & 0x100) != 0)
      return 0;
    return ((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16);
  }
  v10 = sub_23BB8B1A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if (((a1 ^ a2) & 0x100) == 0 && (v10 & 1) != 0)
    return ((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16);
  return result;
}

uint64_t sub_23BB6E05C(char a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v10;
  int v11;
  int v12;
  int v13;
  char v15;
  int v16;
  uint64_t v17;
  unint64_t v18;

  if (qword_256A58DE8 != -1)
    swift_once();
  v2 = a1 & 1;
  v3 = 0x74696C6C65746173;
  v4 = sub_23BB891C4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256A64558);
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v17 = v8;
    if (v2)
    {
      v9 = 0xE900000000000065;
    }
    else
    {
      v3 = 0x65726F6C707865;
      v9 = 0xE700000000000000;
    }
    sub_23BB7B69C(v3, v9, &v17);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v5, v6, "CustomMapStyle: Load with Mode (%{public}s) from UserDefaults", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {

  }
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_23BB8AE08();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000017;
  v18 = 0x800000023BB9D7D0;
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  v10 = sub_23BB6C4E4();
  swift_bridgeObjectRelease();
  if (v10 == 2)
  {
    v11 = 0;
LABEL_15:
    v13 = 0x10000;
    return v11 | v13 | v2;
  }
  v12 = v10 & 1;
  if ((v10 & 0x100) != 0)
  {
LABEL_14:
    v11 = v12 << 8;
    goto LABEL_15;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v15 = sub_23BB8B1A4();
  swift_bridgeObjectRelease();
  v11 = 0;
  v13 = 0;
  if ((v15 & 1 & (v12 != 0)) != 0)
    v16 = 256;
  else
    v16 = 0;
  if ((v15 & 1) != 0)
  {
    v11 = v16;
    goto LABEL_15;
  }
  return v11 | v13 | v2;
}

uint64_t sub_23BB6E364()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  char v4;

  if (qword_256A58DE8 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A64558);
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "CustomMapStyle: Load from UserDefaults", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v4 = sub_23BB6C5E0();
  if (v4 == 2)
    return 2;
  else
    return sub_23BB6E05C(v4 & 1) & 0x10101;
}

uint64_t sub_23BB6E4A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61725473776F6873 && a2 == 0xEC00000063696666 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x62614C73776F6873 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23BB6E61C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  char v10;
  char v11;
  int v12;
  int v13;
  _BYTE v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64630);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BB6E7C0();
  sub_23BB8B288();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14[14] = 0;
  sub_23BB6E804();
  sub_23BB8B090();
  v8 = v14[15];
  v14[13] = 1;
  v10 = sub_23BB8B078();
  v14[12] = 2;
  v11 = sub_23BB8B078();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if ((v11 & 1) != 0)
    v12 = 0x10000;
  else
    v12 = 0;
  if ((v10 & 1) != 0)
    v13 = 256;
  else
    v13 = 0;
  return v13 | v8 | v12;
}

unint64_t sub_23BB6E7C0()
{
  unint64_t result;

  result = qword_256A64638;
  if (!qword_256A64638)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98998, &type metadata for CustomMapStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A64638);
  }
  return result;
}

unint64_t sub_23BB6E804()
{
  unint64_t result;

  result = qword_256A64640;
  if (!qword_256A64640)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98970, &type metadata for CustomMapStyle.Mode);
    atomic_store(result, (unint64_t *)&qword_256A64640);
  }
  return result;
}

unint64_t sub_23BB6E848()
{
  unint64_t result;

  result = qword_256A64650;
  if (!qword_256A64650)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98948, &type metadata for CustomMapStyle.Mode);
    atomic_store(result, (unint64_t *)&qword_256A64650);
  }
  return result;
}

unint64_t sub_23BB6E88C()
{
  unint64_t result;

  result = qword_256A64658;
  if (!qword_256A64658)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98920, &type metadata for CustomMapStyle.Options);
    atomic_store(result, (unint64_t *)&qword_256A64658);
  }
  return result;
}

unint64_t sub_23BB6E8D8()
{
  unint64_t result;

  result = qword_256A64668;
  if (!qword_256A64668)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB988F8, &type metadata for CustomMapStyle.Options);
    atomic_store(result, (unint64_t *)&qword_256A64668);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CustomMapStyle.Options(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB6E968 + 4 * byte_23BB98625[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_23BB6E99C + 4 * asc_23BB98620[v4]))();
}

uint64_t sub_23BB6E99C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BB6E9A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23BB6E9ACLL);
  return result;
}

uint64_t sub_23BB6E9B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23BB6E9C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB6E9C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BB6E9CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomMapStyle.Options()
{
  return &type metadata for CustomMapStyle.Options;
}

uint64_t storeEnumTagSinglePayload for CustomMapStyle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BB6EA34 + 4 * byte_23BB9862F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BB6EA68 + 4 * byte_23BB9862A[v4]))();
}

uint64_t sub_23BB6EA68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB6EA70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB6EA78);
  return result;
}

uint64_t sub_23BB6EA84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB6EA8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BB6EA90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB6EA98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomMapStyle.CodingKeys()
{
  return &type metadata for CustomMapStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for CustomMapStyle.Mode()
{
  return &type metadata for CustomMapStyle.Mode;
}

unint64_t sub_23BB6EACC()
{
  unint64_t result;

  result = qword_256A64670;
  if (!qword_256A64670)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98818, &type metadata for CustomMapStyle.Mode);
    atomic_store(result, (unint64_t *)&qword_256A64670);
  }
  return result;
}

unint64_t sub_23BB6EB14()
{
  unint64_t result;

  result = qword_256A64678;
  if (!qword_256A64678)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB988D0, &type metadata for CustomMapStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A64678);
  }
  return result;
}

unint64_t sub_23BB6EB5C()
{
  unint64_t result;

  result = qword_256A64680;
  if (!qword_256A64680)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98840, &type metadata for CustomMapStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A64680);
  }
  return result;
}

unint64_t sub_23BB6EBA4()
{
  unint64_t result;

  result = qword_256A64688;
  if (!qword_256A64688)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98868, &type metadata for CustomMapStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A64688);
  }
  return result;
}

unint64_t sub_23BB6EBE8()
{
  unint64_t result;

  result = qword_256A64690;
  if (!qword_256A64690)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB987A0, &type metadata for CustomMapStyle.Mode);
    atomic_store(result, (unint64_t *)&qword_256A64690);
  }
  return result;
}

unint64_t sub_23BB6EC2C()
{
  unint64_t result;

  result = qword_256A646A0;
  if (!qword_256A646A0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98AA0, &type metadata for CustomMapStyle.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A646A0);
  }
  return result;
}

uint64_t sub_23BB6EC70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61725473776F6873 && a2 == 0xEC00000063696666;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62614C73776F6873 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BB6ED90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  char v9;
  int v11;
  _BYTE v12[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A646A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BB6EC2C();
  sub_23BB8B288();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12[15] = 0;
  v8 = sub_23BB8B078();
  v12[14] = 1;
  v9 = sub_23BB8B078();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if ((v9 & 1) != 0)
    v11 = 256;
  else
    v11 = 0;
  return v11 & 0xFFFFFFFE | v8 & 1;
}

uint64_t _s12FindMyUICore14CustomMapStyleV4ModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB6EF34 + 4 * byte_23BB98639[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB6EF68 + 4 * byte_23BB98634[v4]))();
}

uint64_t sub_23BB6EF68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB6EF70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB6EF78);
  return result;
}

uint64_t sub_23BB6EF84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB6EF8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB6EF90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB6EF98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomMapStyle.Options.CodingKeys()
{
  return &type metadata for CustomMapStyle.Options.CodingKeys;
}

unint64_t sub_23BB6EFB8()
{
  unint64_t result;

  result = qword_256A646B0;
  if (!qword_256A646B0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98A78, &type metadata for CustomMapStyle.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A646B0);
  }
  return result;
}

unint64_t sub_23BB6F000()
{
  unint64_t result;

  result = qword_256A646B8;
  if (!qword_256A646B8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB989E8, &type metadata for CustomMapStyle.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A646B8);
  }
  return result;
}

unint64_t sub_23BB6F048()
{
  unint64_t result;

  result = qword_256A646C0;
  if (!qword_256A646C0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98A10, &type metadata for CustomMapStyle.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A646C0);
  }
  return result;
}

uint64_t (*AsyncButton.init(role:action:label:wantsDefaultProgressView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>))()
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*result)();
  uint64_t (**v21)();
  char v24;
  uint64_t v25;

  v16 = (int *)type metadata accessor for AsyncButton(0, a7, a8, a4);
  v17 = a9 + v16[12];
  sub_23BB8A0C4();
  *(_BYTE *)v17 = v24;
  *(_QWORD *)(v17 + 8) = v25;
  v18 = a9 + v16[13];
  sub_23BB8A0C4();
  *(_BYTE *)v18 = v24;
  *(_QWORD *)(v18 + 8) = v25;
  sub_23B990D24(a1, a9, &qword_256A599A0);
  v19 = (_QWORD *)(a9 + v16[9]);
  *v19 = a2;
  v19[1] = a3;
  result = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)result + 2) = a7;
  *((_QWORD *)result + 3) = a8;
  *((_QWORD *)result + 4) = a4;
  *((_QWORD *)result + 5) = a5;
  v21 = (uint64_t (**)())(a9 + v16[10]);
  *v21 = sub_23BB6F454;
  v21[1] = result;
  *(_BYTE *)(a9 + v16[11]) = a6 ^ 1;
  return result;
}

uint64_t type metadata accessor for AsyncButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncButton);
}

uint64_t sub_23BB6F1D4()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  return v1;
}

uint64_t sub_23BB6F228()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

uint64_t sub_23BB6F280()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  return v1;
}

uint64_t sub_23BB6F2D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

uint64_t AsyncButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;

  v14 = (int *)type metadata accessor for AsyncButton(0, a6, a7, a4);
  v15 = a8 + v14[12];
  sub_23BB8A0C4();
  *(_BYTE *)v15 = v20;
  *(_QWORD *)(v15 + 8) = v21;
  v16 = a8 + v14[13];
  sub_23BB8A0C4();
  *(_BYTE *)v16 = v20;
  *(_QWORD *)(v16 + 8) = v21;
  result = sub_23B990D24(a1, a8, &qword_256A599A0);
  v18 = (_QWORD *)(a8 + v14[9]);
  *v18 = a2;
  v18[1] = a3;
  v19 = (uint64_t *)(a8 + v14[10]);
  *v19 = a4;
  v19[1] = a5;
  *(_BYTE *)(a8 + v14[11]) = 1;
  return result;
}

uint64_t sub_23BB6F430()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB6F454()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t AsyncButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[3];

  v50 = a3;
  v5 = *(_QWORD *)(a1 - 8);
  v49 = *(_QWORD *)(v5 + 64);
  v6 = v5;
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v12;
  v48 = *(_QWORD *)(a1 + 16);
  v13 = sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A646C8);
  v14 = sub_23BB894AC();
  v45 = *(_QWORD *)(a1 + 24);
  v56[0] = v45;
  v56[1] = MEMORY[0x24BDECC38];
  v15 = MEMORY[0x24BDED308];
  v16 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v13, v56);
  v17 = sub_23B996E1C(qword_256A646D0, &qword_256A646C8, MEMORY[0x24BDEDC10]);
  v55[0] = v16;
  v55[1] = v17;
  v43 = v14;
  v42 = MEMORY[0x24260D8DC](v15, v14, v55);
  v18 = sub_23BB8A118();
  v46 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v41 = (char *)&v39 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ED98);
  v21 = sub_23BB894AC();
  v47 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v40 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v25);
  v44 = (uint64_t)&v39 - v26;
  sub_23BB6F810(v3, (uint64_t)v12);
  v27 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a1);
  v28 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v29 = swift_allocObject();
  v30 = v48;
  v31 = v45;
  *(_QWORD *)(v29 + 16) = v48;
  *(_QWORD *)(v29 + 24) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v29 + v28, v8, v27);
  v51 = v30;
  v52 = v31;
  v53 = v3;
  v32 = v41;
  sub_23BB8A100();
  sub_23BB6F1D4();
  v33 = MEMORY[0x24260D8DC](MEMORY[0x24BDF43B0], v18);
  v34 = (uint64_t)v40;
  sub_23BB89F08();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v18);
  v35 = sub_23B996E1C(&qword_256A5ED90, &qword_256A5ED98, MEMORY[0x24BDF1248]);
  v54[0] = v33;
  v54[1] = v35;
  MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v21, v54);
  v36 = v44;
  sub_23BAC5FD8(v34, v21, v44);
  v37 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v37(v34, v21);
  sub_23BAC2FCC(v36, v21, v50);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v36, v21);
}

uint64_t sub_23BB6F810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB6F858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v37 = a2;
  v34 = a1;
  v5 = type metadata accessor for AsyncButton(0, a2, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v30 - v9;
  v30 = (char *)&v30 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB6F228();
  v15 = sub_23BB8AA18();
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v35(v14, 1, 1, v15);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v33(v10, a1, v5);
  sub_23BB8A9F4();
  v16 = sub_23BB8A9E8();
  v17 = *(unsigned __int8 *)(v6 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = v18 + v7;
  v32 = v17 | 7;
  v20 = (char *)swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  *((_QWORD *)v20 + 2) = v16;
  *((_QWORD *)v20 + 3) = v21;
  v22 = v36;
  *((_QWORD *)v20 + 4) = v37;
  *((_QWORD *)v20 + 5) = v22;
  v31 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v23 = v30;
  v31(&v20[v18], v30, v5);
  v24 = sub_23B989F54((uint64_t)v14, (uint64_t)&unk_256A64780, (uint64_t)v20);
  v35(v14, 1, 1, v15);
  v33(v23, v34, v5);
  swift_retain();
  v25 = sub_23BB8A9E8();
  v26 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = v25;
  v28 = v37;
  *((_QWORD *)v27 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v27 + 4) = v28;
  *((_QWORD *)v27 + 5) = v22;
  v31(&v27[v18], v23, v5);
  *(_QWORD *)&v27[v26] = v24;
  sub_23B989F54((uint64_t)v14, (uint64_t)&unk_256A64790, (uint64_t)v27);
  swift_release();
  return swift_release();
}

uint64_t sub_23BB6FA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AsyncButton(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v6 = (v5 + 32) & ~v5;
  v7 = sub_23BB8929C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4 + v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4 + v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB6FB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AsyncButton(0, v5, v6, a4) - 8) + 80);
  return sub_23BB6F858(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_23BB6FBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = sub_23BB8AF1C();
  v6[5] = v7;
  v6[6] = *(_QWORD *)(v7 - 8);
  v6[7] = swift_task_alloc();
  sub_23BB8A9F4();
  v6[8] = sub_23BB8A9E8();
  v6[9] = sub_23BB8A988();
  v6[10] = v8;
  return swift_task_switch();
}

uint64_t sub_23BB6FC64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_23BB6FCE4;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BB6FCE4()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[6];
  v3 = v2[7];
  v5 = v2[5];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[7], v2[5]);
  }
  return swift_task_switch();
}

uint64_t sub_23BB6FD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  type metadata accessor for AsyncButton(0, v1, v2, v3);
  sub_23BB6F2D4();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB6FDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_23BB8A9F4();
  v7[6] = sub_23BB8A9E8();
  v7[7] = sub_23BB8A988();
  v7[8] = v8;
  return swift_task_switch();
}

uint64_t sub_23BB6FE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = type metadata accessor for AsyncButton(0, v4[4], v4[5], a4);
  v4[9] = v6;
  v9 = (uint64_t (*)(void))(**(int **)(v5 + *(int *)(v6 + 36)) + *(_QWORD *)(v5 + *(int *)(v6 + 36)));
  v7 = (_QWORD *)swift_task_alloc();
  v4[10] = v7;
  *v7 = v4;
  v7[1] = sub_23BB6FEC8;
  return v9();
}

uint64_t sub_23BB6FEC8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB6FF14()
{
  uint64_t v0;

  swift_release();
  sub_23BB8AA78();
  sub_23BB6F2D4();
  sub_23BB6F228();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB6FF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  char v25;
  void (*v26)(_QWORD);
  char v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[2];

  v46 = a4;
  v39 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23BB894AC();
  v43 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v40 = (char *)&v39 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A646C8);
  v12 = sub_23BB894AC();
  v45 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v42 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v44 = (uint64_t)&v39 - v17;
  v41 = a3;
  v19 = type metadata accessor for AsyncButton(0, a2, a3, v18);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v39 - v22;
  v24 = sub_23BB6F280();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a1, v19);
  if ((v24 & 1) != 0)
    v25 = v23[*(int *)(v19 + 44)] ^ 1;
  else
    v25 = 0;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  v26 = *(void (**)(_QWORD))(a1 + *(int *)(v19 + 40));
  v27 = sub_23BB6F280();
  v26(v27 & 1);
  v28 = v25 & 1;
  v29 = v40;
  v30 = v41;
  sub_23BB89ED8();
  v31 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v8, a2);
  MEMORY[0x24BDAC7A8](v31, v32);
  *((_BYTE *)&v39 - 16) = v28;
  sub_23BB8A2F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64760);
  v48[0] = v30;
  v48[1] = MEMORY[0x24BDECC38];
  v33 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v9, v48);
  sub_23BB70E98();
  v34 = (uint64_t)v42;
  sub_23BB89EE4();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v9);
  v35 = sub_23B996E1C(qword_256A646D0, &qword_256A646C8, MEMORY[0x24BDEDC10]);
  v47[0] = v33;
  v47[1] = v35;
  MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v12, v47);
  v36 = v44;
  sub_23BAC5FD8(v34, v12, v44);
  v37 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v37(v34, v12);
  sub_23BAC2FCC(v36, v12, v46);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v36, v12);
}

uint64_t sub_23BB702E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23BB6FF90(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23BB702F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB70328@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64760);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB89338();
  if ((a1 & 1) != 0)
    v13 = 1.0;
  else
    v13 = 0.0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v12, v8, v4);
  *(double *)&v12[*(int *)(v9 + 36)] = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_23B990D24((uint64_t)v12, a2, &qword_256A64760);
}

void sub_23BB70440()
{
  unint64_t v0;

  sub_23BB70D0C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *sub_23BB704CC(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23BB8929C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = a3[9];
    v12 = a3[10];
    v13 = &v4[v11];
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *(_QWORD *)v13 = *v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = &v4[v12];
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = a3[12];
    v4[a3[11]] = *((_BYTE *)a2 + a3[11]);
    v20 = &v4[v19];
    v21 = (char *)a2 + v19;
    *v20 = *v21;
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    v22 = a3[13];
    v23 = &v4[v22];
    v24 = (char *)a2 + v22;
    *v23 = *v24;
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BB70624(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23BB8929C();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

char *sub_23BB706C0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = sub_23BB8929C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[9];
  v10 = a3[10];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *v18 = *v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  v20 = a3[13];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *v21 = *v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_23BB707F0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v6 = sub_23BB8929C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[9];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  v16 = a3[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  swift_retain();
  swift_release();
  a1[a3[11]] = a2[a3[11]];
  v20 = a3[12];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *v21 = *v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_retain();
  swift_release();
  v23 = a3[13];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *v24 = *v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_23BB70998(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23BB8929C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  return a1;
}

char *sub_23BB70A7C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_23BB8929C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  swift_release();
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  swift_release();
  v12 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *v13 = *v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  v15 = a3[13];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_release();
  return a1;
}

uint64_t sub_23BB70BF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB70C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BB70C84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB70C90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

void sub_23BB70D0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A64758)
  {
    sub_23BB8929C();
    v0 = sub_23BB8ACA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A64758);
  }
}

uint64_t sub_23BB70D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A646C8);
  v3 = sub_23BB894AC();
  v10[0] = v1;
  v10[1] = MEMORY[0x24BDECC38];
  v4 = MEMORY[0x24BDED308];
  v9[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v2, v10);
  v9[1] = sub_23B996E1C(qword_256A646D0, &qword_256A646C8, MEMORY[0x24BDEDC10]);
  MEMORY[0x24260D8DC](v4, v3, v9);
  v5 = sub_23BB8A118();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ED98);
  v6 = sub_23BB894AC();
  v8[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDF43B0], v5);
  v8[1] = sub_23B996E1C(&qword_256A5ED90, &qword_256A5ED98, MEMORY[0x24BDF1248]);
  return MEMORY[0x24260D8DC](v4, v6, v8);
}

uint64_t sub_23BB70E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB70328(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_23BB70E98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A64768;
  if (!qword_256A64768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A64760);
    v2[0] = sub_23B996E1C(&qword_256A64770, &qword_256A5EE98, MEMORY[0x24BDEBC00]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A64768);
  }
  return result;
}

uint64_t sub_23BB70F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AsyncButton(0, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4)- 8)+ 80);
  v6 = (v5 + 48) & ~v5;
  swift_unknownObjectRelease();
  v7 = sub_23BB8929C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4 + v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4 + v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB71008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AsyncButton(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_23B990D68;
  return sub_23BB6FBCC(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_23BB710A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for AsyncButton(0, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  v7 = sub_23BB8929C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v4 + v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v4 + v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB711A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(_QWORD *)(type metadata accessor for AsyncButton(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v4[2];
  v12 = v4[3];
  v13 = (uint64_t)v4 + v10;
  v14 = *(_QWORD *)((char *)v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v15;
  *v15 = v5;
  v15[1] = sub_23B97C964;
  return sub_23BB6FDE8(a1, v11, v12, v13, v14, v7, v8);
}

uint64_t sub_23BB7126C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = *(_QWORD *)(v0[13] + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      v11 = *(_QWORD *)(v0[13] + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    v7 = v0[11];
    v8 = v0[12];
    __swift_project_boxed_opaque_existential_1(v0 + 8, v7);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    v5 = &unk_250CA9DA8;
    v6 = &unk_250CA9DD0;
  }
  else
  {
    v2 = v0[11];
    v3 = v0[12];
    __swift_project_boxed_opaque_existential_1(v0 + 8, v2);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
    v5 = &unk_250CA9D58;
    v6 = &unk_250CA9D80;
  }
  if ((v4 & 1) != 0)
    v9 = (uint64_t)v6;
  else
    v9 = (uint64_t)v5;
  v11 = v9;
  swift_bridgeObjectRetain();
  sub_23BB72038(&v11);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23BB71380()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BB713FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB71474()
{
  swift_getKeyPath();
  sub_23BB72C6C();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB71518()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BB71594@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB7160C()
{
  swift_getKeyPath();
  sub_23BB72C6C();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB716B0()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BB7172C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BB717A4()
{
  swift_getKeyPath();
  sub_23BB72C6C();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB71848()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 136);
  sub_23B9B7598(v1);
  return v1;
}

uint64_t sub_23BB718C8@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  v3 = *a1;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 136);
  v5 = *(_QWORD *)(v3 + 144);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23BA192A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, uint64_t))v6;
  return sub_23B9B7598(v4);
}

uint64_t sub_23BB71978(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char, char, uint64_t, uint64_t, char);
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BA1929C;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23BB72C6C();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

uint64_t sub_23BB71A84()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  result = swift_release();
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 136);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(unsigned __int8 *)(v0 + 128);
    swift_retain();
    v2(1, 1, v3, v4, v5);
    return sub_23B9BD73C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_23BB71B40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_23BB88990();
  sub_23BB2AB04(v1, v2, 1);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  result = swift_release();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 136);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(unsigned __int8 *)(v0 + 128);
    swift_retain();
    v4(1, 1, v5, v6, v7);
    return sub_23B9BD73C((uint64_t)v4);
  }
  return result;
}

uint64_t sub_23BB71C28(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = swift_retain();
  a3(v4);
  return swift_release();
}

uint64_t sub_23BB71C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  sub_23B9BD73C(*(_QWORD *)(v0 + 136));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore24AccessoryPairedViewModel___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BB71CD4()
{
  return type metadata accessor for AccessoryPairedViewModel();
}

uint64_t type metadata accessor for AccessoryPairedViewModel()
{
  uint64_t result;

  result = qword_256A647C8;
  if (!qword_256A647C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB71D18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88A50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23BB71DCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23BB71E48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23BB71EC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_23BB72C6C();
  sub_23BB88A20();
  swift_release();
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23BB71F44(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B9B7598(a1);
  sub_23BB72C6C();
  sub_23BB88A14();
  sub_23B9BD73C(a1);
  return swift_release();
}

uint64_t sub_23BB71FF8()
{
  return sub_23BB71A84();
}

uint64_t sub_23BB72018()
{
  return sub_23BB71B40();
}

uint64_t sub_23BB72038(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23BB72B04(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23BB720A0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23BB720A0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _BYTE *v22;
  unsigned int v23;
  uint64_t v24;
  _BYTE *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_23BB8B0FC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(unsigned __int8 *)(v79 + i);
        v82 = v78;
        do
        {
          v83 = *(unsigned __int8 *)(v79 + v82);
          if (v81 >> 6 >= v83 >> 6)
            break;
          if (!v79)
            goto LABEL_140;
          *(_BYTE *)(v79 + v82 + 1) = v83;
          *(_BYTE *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v94 = result;
  v95 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (unsigned __int8 *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v93 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v84)
            goto LABEL_144;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_23BB72728((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(_QWORD *)&v87[16 * v12 - 16]), v84 + v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_23BB72AF0((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_133;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_134;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v93 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23BB8A940();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v95;
    v93 = v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  v9 = 0;
  v92 = v2;
  v10 = *v2;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v96 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(unsigned __int8 *)(v10 + v9);
      v15 = v14 >> 6;
      v16 = *(unsigned __int8 *)(v10 + v13) >> 6;
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (1)
        {
          v17 = *(unsigned __int8 *)(v10 + v9);
          if (v15 < v16 == v17 >> 6 >= v14 >> 6)
            break;
          ++v9;
          v14 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_143;
              v20 = *(_BYTE *)(v10 + v19);
              *(_BYTE *)(v10 + v19) = *(_BYTE *)(v10 + v18);
              *(_BYTE *)(v10 + v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v94)
      goto LABEL_46;
    v21 = v13 + v94;
    if (__OFADD__(v13, v94))
      goto LABEL_138;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (_BYTE *)(v10 + v9);
      do
      {
        v23 = *(unsigned __int8 *)(v10 + v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *(v25 - 1);
          if (v23 >> 6 >= v26 >> 6)
            break;
          if (!v10)
            goto LABEL_141;
          *v25 = v26;
          *--v25 = v23;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23BB72968(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v96;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_23BB72968((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v96;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_119;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_120;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_122;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_125;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_129;
            v59 = v34 < v69;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_77;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_121;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_124;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_127;
        if (__OFADD__(v53, v58))
          goto LABEL_128;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_83:
          if (v59)
            v31 = v43;
          goto LABEL_85;
        }
LABEL_77:
        if ((v54 & 1) != 0)
          goto LABEL_123;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_126;
        if (v65 < v53)
          goto LABEL_15;
LABEL_85:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_23BB72728((unsigned __int8 *)(v10 + *(_QWORD *)v71), (unsigned __int8 *)(v10 + *(_QWORD *)v74), v10 + v75, __dst);
        if (v1)
          goto LABEL_113;
        if (v75 < v72)
          goto LABEL_116;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_118;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v96;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v95;
    if (v9 >= v95)
    {
      v2 = v92;
      v8 = v93;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_23BB8AFB8();
  __break(1u);
  return result;
}

uint64_t sub_23BB72728(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t result;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;

  v22 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v14 = &v4[v9];
      v20 = &v4[v9];
      v22 = v6;
      if (v7 < v6 && (unsigned __int8 *)a3 != v6)
      {
        v15 = (unsigned __int8 *)(a3 - 1);
        while (1)
        {
          v16 = v15 + 1;
          v17 = v6 - 1;
          v18 = *(v6 - 1);
          if (*(v14 - 1) >> 6 >= v18 >> 6)
          {
            v20 = v14 - 1;
            if (v16 < v14 || v15 >= v14 || v16 != v14)
              *v15 = *(v14 - 1);
            --v14;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v16 != v6 || v15 >= v6)
              *v15 = v18;
            v22 = --v6;
            if (v17 <= v7)
              goto LABEL_38;
          }
          --v15;
          if (v14 <= v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        v11 = *v6;
        v12 = *v4;
        if (v11 >> 6 >= v12 >> 6)
        {
          if (v7 != v4)
            *v7 = v12;
          v21 = ++v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
            *v7 = v11;
        }
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v22 = v7;
    }
LABEL_38:
    sub_23BB72A60((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

char *sub_23BB72968(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A648A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_23BB72A60(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    result = (char *)sub_23BB8B00C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

char *sub_23BB72AF0(uint64_t a1)
{
  return sub_23BB72968(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23BB72B04(uint64_t a1)
{
  return sub_23BB011BC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23BB72B18()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

unint64_t sub_23BB72C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A64898;
  if (!qword_256A64898)
  {
    v1 = type metadata accessor for AccessoryPairedViewModel();
    result = MEMORY[0x24260D8DC](&unk_23BB98C88, v1);
    atomic_store(result, (unint64_t *)&qword_256A64898);
  }
  return result;
}

uint64_t sub_23BB72CB4()
{
  return sub_23BB72CEC();
}

uint64_t sub_23BB72CC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB72CEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 136);
  *(_QWORD *)(v2 + 136) = v1;
  *(_QWORD *)(v2 + 144) = v3;
  sub_23B9B7598(v1);
  return sub_23B9BD73C(v4);
}

uint64_t sub_23BB72D3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 48) = v0[3];
  *(_QWORD *)(v1 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB72D80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 32) = v0[3];
  *(_QWORD *)(v1 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB72DC4()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t storeEnumTagSinglePayload for PairingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB72F54 + 4 * byte_23BB98BA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB72F88 + 4 * byte_23BB98BA0[v4]))();
}

uint64_t sub_23BB72F88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB72F90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB72F98);
  return result;
}

uint64_t sub_23BB72FA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB72FACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB72FB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB72FB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PairingError()
{
  return &type metadata for PairingError;
}

unint64_t sub_23BB72FD8()
{
  unint64_t result;

  result = qword_256A648A0;
  if (!qword_256A648A0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98DA8, &type metadata for PairingError);
    atomic_store(result, (unint64_t *)&qword_256A648A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowingAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BB7306C + 4 * byte_23BB98E15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BB730A0 + 4 * byte_23BB98E10[v4]))();
}

uint64_t sub_23BB730A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB730A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB730B0);
  return result;
}

uint64_t sub_23BB730BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB730C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BB730C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB730D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingAction()
{
  return &type metadata for FollowingAction;
}

unint64_t sub_23BB730F0()
{
  unint64_t result;

  result = qword_256A648B0;
  if (!qword_256A648B0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98E2C, &type metadata for FollowingAction);
    atomic_store(result, (unint64_t *)&qword_256A648B0);
  }
  return result;
}

FindMyUICore::Subscriber __swiftcall Subscriber.init()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  FindMyUICore::Subscriber result;
  uint64_t v13;

  v1 = v0;
  v2 = sub_23BB889CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB889C0();
  v7 = sub_23BB88990();
  v9 = v8;
  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *v1 = v7;
  v1[1] = v9;
  result.rawValue._object = v11;
  result.rawValue._countAndFlagsBits = v10;
  return result;
}

FindMyUICore::Subscriber __swiftcall Subscriber.init(rawValue:)(FindMyUICore::Subscriber rawValue)
{
  FindMyUICore::Subscriber *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t Subscriber.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Subscriber.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t static Subscriber.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t Subscriber.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

unint64_t sub_23BB732C8()
{
  unint64_t result;

  result = qword_256A648B8;
  if (!qword_256A648B8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Subscriber, &type metadata for Subscriber);
    atomic_store(result, (unint64_t *)&qword_256A648B8);
  }
  return result;
}

uint64_t sub_23BB7330C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for Subscriber()
{
  return &type metadata for Subscriber;
}

uint64_t sub_23BB7334C()
{
  uint64_t v0;

  v0 = sub_23BB891C4();
  __swift_allocate_value_buffer(v0, qword_256A73E80);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  return sub_23BB891B8();
}

uint64_t initializeWithCopy for AccessoryOnboardingContentView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for AccessoryOnboardingContentView(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for AccessoryOnboardingContentView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for AccessoryOnboardingContentView()
{
  return &type metadata for AccessoryOnboardingContentView;
}

uint64_t sub_23BB73494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB734A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A648C0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A648C8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_23BB8983C();
  *((_QWORD *)v6 + 1) = 0x4038000000000000;
  v6[16] = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A648D0);
  sub_23BB73638(v1, &v6[*(int *)(v11 + 44)]);
  KeyPath = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v6, (uint64_t)v10, &qword_256A648C0);
  v13 = &v10[*(int *)(v7 + 36)];
  *(_QWORD *)v13 = KeyPath;
  v13[8] = 1;
  sub_23B989D60((uint64_t)v6, &qword_256A648C0);
  v14 = sub_23BB89B9C();
  sub_23BB892A8();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  sub_23B989EFC((uint64_t)v10, a1, &qword_256A648C8);
  v23 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A648D8) + 36);
  *(_BYTE *)v23 = v14;
  *(_QWORD *)(v23 + 8) = v16;
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v20;
  *(_QWORD *)(v23 + 32) = v22;
  *(_BYTE *)(v23 + 40) = 0;
  return sub_23B989D60((uint64_t)v10, &qword_256A648C8);
}

uint64_t sub_23BB73638@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjCClassFromMetadata;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t result;
  _QWORD v87[2];
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;

  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D538);
  MEMORY[0x24BDAC7A8](v93, v4);
  v95 = (uint64_t)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_23BB89524();
  MEMORY[0x24BDAC7A8](v92, v6);
  v94 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)sub_23BB8A070();
  v9 = *(v8 - 1);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A648E0);
  MEMORY[0x24BDAC7A8](v91, v13);
  v15 = (char *)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v87 - v18;
  MEMORY[0x24BDAC7A8](v20, v21);
  v101 = (uint64_t)v87 - v22;
  v24 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v24, v23);
  v96 = v15;
  v97 = a2;
  if (v26)
  {
    v27 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0)
      v27 = v25 & 0xFFFFFFFFFFFFLL;
    if (v27)
    {
      v105 = v25;
      v106 = v26;
      sub_23B9967E0();
      v28 = sub_23BB89D28();
      v30 = v29;
      v88 = v12;
      v32 = v31 & 1;
      sub_23BB89C68();
      v33 = sub_23BB89D04();
      v90 = v8;
      v34 = v33;
      v89 = v9;
      v36 = v35;
      v38 = v37;
      v87[1] = v39;
      swift_release();
      v40 = v32;
      v12 = v88;
      sub_23B9967D0(v28, v30, v40);
      swift_bridgeObjectRelease();
      LODWORD(v105) = sub_23BB899C8();
      v41 = sub_23BB89CE0();
      v99 = v42;
      v100 = v41;
      v98 = v43;
      v102 = v44 & 1;
      v45 = v34;
      v8 = v90;
      v46 = v36;
      v9 = v89;
      sub_23B9967D0(v45, v46, v38 & 1);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  v99 = 0;
  v100 = 0;
  v102 = 0;
  v98 = 0;
LABEL_8:
  v47 = a1[3];
  v48 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v47);
  (*(void (**)(uint64_t, uint64_t))(v48 + 40))(v47, v48);
  type metadata accessor for AccessoryOnboardingModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v50 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v51 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v52 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v51, v50);

  v90 = a1;
  if (v52)
  {
    sub_23BB8A04C();
    (*(void (**)(char *, _QWORD, _QWORD *))(v9 + 104))(v12, *MEMORY[0x24BDF3FD0], v8);
    v53 = sub_23BB8A094();
    swift_release();
    (*(void (**)(char *, _QWORD *))(v9 + 8))(v12, v8);
    sub_23BB8A2F8();
    sub_23BB8938C();
    v89 = v105;
    v54 = v106;
    v55 = v107;
    v56 = v108;
    v58 = v109;
    v57 = v110;
    v59 = v94;
    v60 = &v94[*(int *)(v92 + 20)];
    v61 = *MEMORY[0x24BDEEB68];
    v62 = sub_23BB89800();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v60, v61, v62);
    __asm { FMOV            V0.2D, #8.0 }
    *v59 = _Q0;
    v68 = v95;
    sub_23BAED650((uint64_t)v59, v95);
    *(_WORD *)(v68 + *(int *)(v93 + 36)) = 256;
    sub_23B989EFC(v68, (uint64_t)&v19[*(int *)(v91 + 36)], &qword_256A5D538);
    *(_QWORD *)v19 = v53;
    *((_QWORD *)v19 + 1) = 0;
    *((_WORD *)v19 + 8) = 257;
    *((_QWORD *)v19 + 3) = v89;
    v19[32] = v54;
    *((_QWORD *)v19 + 5) = v55;
    v19[48] = v56;
    *((_QWORD *)v19 + 7) = v58;
    *((_QWORD *)v19 + 8) = v57;
    swift_retain();
    sub_23B989D60(v68, &qword_256A5D538);
    sub_23BAED694((uint64_t)v59);
    swift_release();
    v69 = v101;
    sub_23BB73CB0((uint64_t)v19, v101);
    v70 = v90[3];
    v71 = v90[4];
    __swift_project_boxed_opaque_existential_1(v90, v70);
    v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 32))(v70, v71);
    v104 = v72;
    sub_23B9967E0();
    v73 = sub_23BB89D28();
    v75 = v74;
    v77 = v76;
    LOBYTE(v70) = v78 & 1;
    v79 = (uint64_t)v96;
    sub_23B989EFC(v69, (uint64_t)v96, &qword_256A648E0);
    v80 = v97;
    v81 = v98;
    v82 = v99;
    v83 = v100;
    *v97 = v100;
    v80[1] = v82;
    v80[2] = v102;
    v80[3] = v81;
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A648E8);
    sub_23B989EFC(v79, (uint64_t)v80 + *(int *)(v84 + 48), &qword_256A648E0);
    v85 = (char *)v80 + *(int *)(v84 + 64);
    *(_QWORD *)v85 = v73;
    *((_QWORD *)v85 + 1) = v75;
    v85[16] = v70;
    *((_QWORD *)v85 + 3) = v77;
    LOBYTE(v84) = v102;
    sub_23BA9A7FC(v83, v82, v102, v81);
    sub_23B996E5C(v73, v75, v70);
    swift_bridgeObjectRetain();
    sub_23B989D60(v101, &qword_256A648E0);
    sub_23B9967D0(v73, v75, v70);
    swift_bridgeObjectRelease();
    sub_23B989D60(v79, &qword_256A648E0);
    return sub_23BA9A82C(v83, v82, v84, v81);
  }
  else
  {
    result = sub_23BA9A82C(v100, v99, v102, v98);
    __break(1u);
  }
  return result;
}

uint64_t sub_23BB73CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A648E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AccessoryOnboardingContentViewConstants()
{
  return &type metadata for AccessoryOnboardingContentViewConstants;
}

unint64_t sub_23BB73D0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A648F0;
  if (!qword_256A648F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A648D8);
    v2[0] = sub_23BB73D78();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A648F0);
  }
  return result;
}

unint64_t sub_23BB73D78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A648F8;
  if (!qword_256A648F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A648C8);
    v2[0] = sub_23B996E1C(&qword_256A64900, &qword_256A648C0, MEMORY[0x24BDF4700]);
    v2[1] = sub_23B996E1C(&qword_256A5ACF0, &qword_256A5ACF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A648F8);
  }
  return result;
}

uint64_t sub_23BB73E14(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_23BB00520(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_23BB00520(v7 > 1, v8 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23BB73EE8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 216) = a2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  type metadata accessor for MessagePayload(0);
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v3 + 152) = sub_23BB8A9E8();
  *(_QWORD *)(v3 + 160) = sub_23BB8A988();
  *(_QWORD *)(v3 + 168) = v4;
  return swift_task_switch();
}

uint64_t sub_23BB73F9C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v38 = v36;
    *(_QWORD *)(v0 + 48) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 56) = v5;
    *(_QWORD *)(v0 + 64) = v6;
    *(_QWORD *)(v0 + 72) = v7;
    sub_23BA444D4();
    v8 = sub_23BB8ACDC();
    v10 = v9;
    swift_bridgeObjectRelease();
    v39 = v8;
    v40 = v10;
    *(_QWORD *)(v0 + 16) = sub_23BB778BC(1uLL, 0xD000000000000031, 0x800000023BB9D940);
    *(_QWORD *)(v0 + 24) = v11;
    *(_QWORD *)(v0 + 32) = v12;
    *(_QWORD *)(v0 + 40) = v13;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 112) = sub_23BB7B69C(v39, v40, &v38);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: will%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v14 = *(_QWORD *)(v0 + 128)
      + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler;
  v15 = *(int **)v14;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)v14;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v14 + 8);
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 120);
    v18 = objc_allocWithZone(MEMORY[0x24BDD1880]);
    swift_retain();
    v19 = objc_msgSend(v18, sel_init);
    v20 = objc_msgSend(v19, sel_UUIDString);

    v21 = sub_23BB8A7B4();
    v23 = v22;

    v24 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
    if (v17 >= 4)
    {
      *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 120);
      return sub_23BB8B1C8();
    }
    else
    {
      v25 = *(_QWORD *)(v0 + 136);
      v26 = *(_QWORD *)(v0 + 144);
      if (*(_BYTE *)(v0 + 216))
        v27 = 256;
      else
        v27 = 0;
      *(_QWORD *)v26 = v21;
      *(_QWORD *)(v26 + 8) = v23;
      *(_WORD *)(v26 + 16) = v27 & 0xFF00 | v17;
      v28 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
      sub_23BA31BCC(v25, v26 + v28[6]);
      v29 = v26 + v28[7];
      *(_OWORD *)(v29 + 48) = 0u;
      *(_OWORD *)(v29 + 64) = 0u;
      *(_OWORD *)(v29 + 16) = 0u;
      *(_OWORD *)(v29 + 32) = 0u;
      *(_OWORD *)v29 = 0u;
      *(_BYTE *)(v29 + 80) = 1;
      *(_BYTE *)(v26 + v28[8]) = 0;
      v37 = (uint64_t (*)(_QWORD))((char *)v15 + *v15);
      v30 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v30;
      *v30 = v0;
      v30[1] = sub_23BB744A8;
      return v37(*(_QWORD *)(v0 + 144));
    }
  }
  else
  {
    swift_release();
    v32 = sub_23BB891AC();
    v33 = sub_23BB8ABD4();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v39 = v35;
      *(_DWORD *)v34 = 136315138;
      *(_QWORD *)(v0 + 104) = sub_23BB7B69C(0xD000000000000031, 0x800000023BB9D940, &v39);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v32, v33, "CompositeAppViewModel: %s - No didSelectSendLocationMessageHandler", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v35, -1, -1);
      MEMORY[0x24260D9B4](v34, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB744A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB74508()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  sub_23B9BD73C(*(_QWORD *)(v0 + 184));
  swift_release();
  sub_23B989D9C(v1, type metadata accessor for MessagePayload);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB74564()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 144);
  swift_release();
  sub_23B989D9C(v2, type metadata accessor for MessagePayload);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 184);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0xD000000000000031, 0x800000023BB9D940, &v16);
    sub_23BB8ACB8();
    *(_WORD *)(v8 + 12) = 2112;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v11;
    sub_23BB8ACB8();
    *v9 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: Error: %s %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);
    sub_23B9BD73C(v15);

  }
  else
  {
    v12 = *(void **)(v0 + 208);
    sub_23B9BD73C(*(_QWORD *)(v0 + 184));

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB747B4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BB747FC();
}

uint64_t sub_23BB747FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[14] = v0;
  v2 = sub_23BB889CC();
  v1[15] = v2;
  v1[16] = *(_QWORD *)(v2 - 8);
  v1[17] = swift_task_alloc();
  type metadata accessor for MessagePayload(0);
  v1[18] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[19] = sub_23BB8A9E8();
  v1[20] = sub_23BB8A988();
  v1[21] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB748B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 176) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v35 = v33;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v6;
    *(_QWORD *)(v0 + 40) = v7;
    sub_23BA444D4();
    v8 = sub_23BB8ACDC();
    v10 = v9;
    swift_bridgeObjectRelease();
    v36 = v8;
    v37 = v10;
    *(_QWORD *)(v0 + 48) = sub_23BB778BC(1uLL, 0xD00000000000001CLL, 0x800000023BB9DA50);
    *(_QWORD *)(v0 + 56) = v11;
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)(v0 + 72) = v13;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(v36, v37, &v35);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: will%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v33, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v14 = *(_QWORD *)(v0 + 112)
      + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler;
  v15 = *(int **)v14;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)v14;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v14 + 8);
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 128);
    swift_retain();
    sub_23BB889C0();
    v20 = sub_23BB88990();
    v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
    v23 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
    v24 = v17 + v23[6];
    v25 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
    *(_QWORD *)v17 = v20;
    *(_QWORD *)(v17 + 8) = v22;
    *(_WORD *)(v17 + 16) = 512;
    v26 = v17 + v23[7];
    *(_OWORD *)(v26 + 48) = 0u;
    *(_OWORD *)(v26 + 64) = 0u;
    *(_OWORD *)(v26 + 16) = 0u;
    *(_OWORD *)(v26 + 32) = 0u;
    *(_OWORD *)v26 = 0u;
    *(_BYTE *)(v26 + 80) = 1;
    *(_BYTE *)(v17 + v23[8]) = 0;
    v34 = (uint64_t (*)(_QWORD))((char *)v15 + *v15);
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v27;
    *v27 = v0;
    v27[1] = sub_23BB74D24;
    return v34(*(_QWORD *)(v0 + 144));
  }
  else
  {
    swift_release();
    v29 = sub_23BB891AC();
    v30 = sub_23BB8ABD4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v31 = 136315138;
      *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0xD00000000000001CLL, 0x800000023BB9DA50, &v36);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v29, v30, "CompositeAppViewModel: %s - No didSelectSendLocationMessageHandler", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v32, -1, -1);
      MEMORY[0x24260D9B4](v31, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB74D24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB74D84()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 144);
  swift_release();
  sub_23B989D9C(v2, type metadata accessor for MessagePayload);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 184);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 88) = sub_23BB7B69C(0xD00000000000001CLL, 0x800000023BB9DA50, &v16);
    sub_23BB8ACB8();
    *(_WORD *)(v8 + 12) = 2112;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v11;
    sub_23BB8ACB8();
    *v9 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: Error: %s %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);
    sub_23B9BD73C(v15);

  }
  else
  {
    v12 = *(void **)(v0 + 208);
    sub_23B9BD73C(*(_QWORD *)(v0 + 184));

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BB74FD4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_BYTE *)a1 + 32);
  v4 = *a1;
  v5 = v1;
  v6 = v2;
  v7 = v3;
  v8 = *(__int128 *)((char *)a1 + 40);
  sub_23BB75020((uint64_t)&v4);
}

void sub_23BB75020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47[2];
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v2 = v1;
  v3 = *(_OWORD *)(a1 + 16);
  v53 = *(_OWORD *)a1;
  v54 = v3;
  v55 = *(_OWORD *)(a1 + 32);
  v56 = *(_QWORD *)(a1 + 48);
  if (qword_256A58E00 != -1)
    swift_once();
  v4 = sub_23BB891C4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256A73E80);
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v48 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_23BB77834(1);
    sub_23BA444D4();
    v9 = sub_23BB8ACDC();
    v11 = v10;
    swift_bridgeObjectRelease();
    v47[0] = v9;
    v47[1] = v11;
    *(_QWORD *)&v49 = sub_23BB778BC(1uLL, 0xD000000000000010, 0x800000023BB9DA30);
    *((_QWORD *)&v49 + 1) = v12;
    *(_QWORD *)&v50 = v13;
    *((_QWORD *)&v50 + 1) = v14;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v49 = sub_23BB7B69C(v9, v11, &v48);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: will%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    v49 = v53;
    v50 = v54;
    v51 = v55;
    v52 = v56;
    swift_retain();
    v15 = sub_23BA4C5C4(&v49);
    v18 = v17;
    if ((unint64_t)v17 < 2)
    {
      sub_23B9A1394(v15, v16, v17);
LABEL_13:
      sub_23B9A14A0((uint64_t)&v53);
      sub_23B9A14A0((uint64_t)&v53);
      v23 = sub_23BB891AC();
      v24 = sub_23BB8ABD4();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v47[0] = v26;
        *(_DWORD *)v25 = 136315651;
        *(_QWORD *)&v49 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB9DA30, v47);
        sub_23BB8ACB8();
        *(_WORD *)(v25 + 12) = 2160;
        *(_QWORD *)&v49 = 1752392040;
        sub_23BB8ACB8();
        *(_WORD *)(v25 + 22) = 2081;
        v49 = v53;
        v50 = v54;
        v51 = v55;
        v52 = v56;
        sub_23B9A14A0((uint64_t)&v53);
        v27 = sub_23BB8A7D8();
        *(_QWORD *)&v49 = sub_23BB7B69C(v27, v28, v47);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        sub_23B9A1514((uint64_t)&v53);
        sub_23B9A1514((uint64_t)&v53);
        _os_log_impl(&dword_23B979000, v23, v24, "CompositeAppViewModel: %s - no location for friend: %{private,mask.hash}s", (uint8_t *)v25, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v26, -1, -1);
        MEMORY[0x24260D9B4](v25, -1, -1);

        swift_release();
        return;
      }
      swift_release();
      goto LABEL_16;
    }
    if (v17 == (void *)2)
      goto LABEL_13;
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0F0]), sel_initWithCLLocation_, v17);
    if (v29)
    {
      v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A64938);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23BB8FEC0;
      *(_QWORD *)(inited + 32) = sub_23BB8A7B4();
      *(_QWORD *)(inited + 40) = v32;
      v33 = sub_23BB8A7B4();
      *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 48) = v33;
      *(_QWORD *)(inited + 56) = v34;
      *(_QWORD *)(inited + 80) = sub_23BB8A7B4();
      *(_QWORD *)(inited + 88) = v35;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
      v36 = swift_initStackObject();
      *(_OWORD *)(v36 + 16) = xmmword_23BB8C510;
      v37 = v55;
      LOBYTE(v50) = v55;
      v49 = v54;
      *(_OWORD *)(v36 + 32) = v54;
      *(_BYTE *)(v36 + 48) = v37;
      sub_23B9A14A0((uint64_t)&v53);
      sub_23B9A14A0((uint64_t)&v53);
      sub_23B9A14EC((uint64_t)&v49);
      v38 = swift_bridgeObjectRetain();
      v39 = sub_23BA7CF04(v38, (uint64_t)&v53);
      sub_23B9A1514((uint64_t)&v53);
      swift_bridgeObjectRelease();
      v47[0] = v36;
      sub_23BA78CA0(v39);
      sub_23B9A1514((uint64_t)&v53);
      v40 = sub_23BB73E14(v36);
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
      *(_QWORD *)(inited + 96) = v40;
      sub_23B97EF00(inited);
      v41 = (void *)sub_23BB8A6B8();
      swift_bridgeObjectRelease();
      objc_msgSend(v30, sel_openInMapsWithLaunchOptions_, v41);
      swift_release();

    }
    else
    {
      sub_23B9A14A0((uint64_t)&v53);
      sub_23B9A14A0((uint64_t)&v53);
      v23 = sub_23BB891AC();
      v42 = sub_23BB8ABD4();
      if (!os_log_type_enabled(v23, v42))
      {
        swift_release();

        swift_bridgeObjectRelease();
LABEL_16:
        sub_23B9A1514((uint64_t)&v53);
        sub_23B9A1514((uint64_t)&v53);

        return;
      }
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v47[0] = v44;
      *(_DWORD *)v43 = 136315651;
      *(_QWORD *)&v49 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB9DA30, v47);
      sub_23BB8ACB8();
      *(_WORD *)(v43 + 12) = 2160;
      *(_QWORD *)&v49 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v43 + 22) = 2081;
      v49 = v53;
      v50 = v54;
      v51 = v55;
      v52 = v56;
      sub_23B9A14A0((uint64_t)&v53);
      v45 = sub_23BB8A7D8();
      *(_QWORD *)&v49 = sub_23BB7B69C(v45, v46, v47);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23B9A1514((uint64_t)&v53);
      sub_23B9A1514((uint64_t)&v53);
      _os_log_impl(&dword_23B979000, v23, v42, "CompositeAppViewModel: %s - no friendMapItem for friend: %{private,mask.hash}s", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v44, -1, -1);
      MEMORY[0x24260D9B4](v43, -1, -1);

      swift_release();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_23BB891AC();
    v20 = sub_23BB8ABD4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_QWORD *)&v49 = v22;
      *(_DWORD *)v21 = 136315138;
      v47[0] = sub_23BB7B69C(0xD000000000000010, 0x800000023BB9DA30, (uint64_t *)&v49);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v19, v20, "CompositeAppViewModel: %s - No Repository", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v22, -1, -1);
      MEMORY[0x24260D9B4](v21, -1, -1);
    }

  }
}

void sub_23BB7593C()
{
  sub_23BB7595C();
}

void sub_23BB7595C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CompositeAppViewInitialInfo();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v41 - v13;
  if (qword_256A58E00 != -1)
    swift_once();
  v15 = sub_23BB891C4();
  __swift_project_value_buffer(v15, (uint64_t)qword_256A73E80);
  v16 = sub_23BB891AC();
  v17 = sub_23BB8ABEC();
  if (os_log_type_enabled(v16, v17))
  {
    v41 = v7;
    v18 = swift_slowAlloc();
    v42 = v1;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v43 = v14;
    v44[0] = v20;
    v21 = v20;
    *(_DWORD *)v19 = 136315138;
    v50 = sub_23BB7B69C(0xD00000000000001ELL, 0x800000023BB9DA10, v44);
    v7 = v41;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v16, v17, "CompositeAppViewModel: willCall %s", v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    v14 = v43;
    MEMORY[0x24260D9B4](v22, -1, -1);
    v23 = v19;
    v1 = v42;
    MEMORY[0x24260D9B4](v23, -1, -1);
  }

  v24 = v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23BB0C2A4(v24, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23BB0BD5C((uint64_t)v5);
    v25 = sub_23BB891AC();
    v26 = sub_23BB8ABD4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v44[0] = v28;
      *(_DWORD *)v27 = 136315138;
      v49 = sub_23BB7B69C(0xD00000000000001ELL, 0x800000023BB9DA10, v44);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v25, v26, "CompositeAppViewModel: %s - No initialInfo", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v28, -1, -1);
      MEMORY[0x24260D9B4](v27, -1, -1);
    }

  }
  else
  {
    sub_23BB0C2EC((uint64_t)v5, (uint64_t)v14);
    sub_23BB3A0B8((uint64_t)v44);
    v29 = v45;
    if (v45)
    {
      v31 = v47;
      v30 = v48;
      v32 = v46;
      v34 = v44[1];
      v33 = v44[2];
      v35 = v44[0];
      sub_23BB75020((uint64_t)v44);
      sub_23B989D9C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
      sub_23B9A12B4(v35, v34, v33, v29, v32, v31, v30);
    }
    else
    {
      sub_23BB77958((uint64_t)v14, (uint64_t)v11);
      v36 = sub_23BB891AC();
      v37 = sub_23BB8ABD4();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v44[0] = v39;
        *(_DWORD *)v38 = 136315394;
        v49 = sub_23BB7B69C(0xD00000000000001ELL, 0x800000023BB9DA10, v44);
        sub_23BB8ACB8();
        *(_WORD *)(v38 + 12) = 2048;
        v40 = *(_QWORD *)(*((_QWORD *)v11 + 5) + 16);
        sub_23B989D9C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
        v49 = v40;
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v36, (os_log_type_t)v37, "CompositeAppViewModel: %s - friends.count: %ld", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v39, -1, -1);
        MEMORY[0x24260D9B4](v38, -1, -1);
      }
      else
      {
        sub_23B989D9C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
      }

      sub_23B989D9C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    }
  }
}

void sub_23BB75EE0()
{
  sub_23BB75F00();
}

void sub_23BB75F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CompositeAppViewInitialInfo();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
    swift_once();
  v11 = sub_23BB891C4();
  __swift_project_value_buffer(v11, (uint64_t)qword_256A73E80);
  v12 = sub_23BB891AC();
  v13 = sub_23BB8ABEC();
  if (os_log_type_enabled(v12, v13))
  {
    v25 = v0;
    v14 = swift_slowAlloc();
    v26 = v6;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v29[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v28 = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9D9E0, v29);
    v1 = v25;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v12, v13, "CompositeAppViewModel: willCall %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v16, -1, -1);
    v17 = v15;
    v6 = v26;
    MEMORY[0x24260D9B4](v17, -1, -1);
  }

  v18 = v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23BB0C2A4(v18, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23BB0BD5C((uint64_t)v5);
    v19 = sub_23BB891AC();
    v20 = sub_23BB8ABD4();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v28 = v22;
      *(_DWORD *)v21 = 136315138;
      v27 = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9D9E0, &v28);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v19, v20, "CompositeAppViewModel: %s - No initialInfo", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v22, -1, -1);
      MEMORY[0x24260D9B4](v21, -1, -1);
    }

  }
  else
  {
    sub_23BB0C2EC((uint64_t)v5, (uint64_t)v10);
    v23 = swift_bridgeObjectRetain();
    sub_23BB2AB04(v23, 0, 0);
    swift_bridgeObjectRelease();
    sub_23B989D9C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }
}

uint64_t sub_23BB76288(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B97C964;
  return sub_23BB73EE8(a1, a2);
}

uint64_t sub_23BB762E8(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23B990D68;
  return sub_23BB76378(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23BB76378(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 160) = v6;
  *(double *)(v7 + 144) = a5;
  *(double *)(v7 + 152) = a6;
  *(double *)(v7 + 128) = a3;
  *(double *)(v7 + 136) = a4;
  *(double *)(v7 + 112) = a1;
  *(double *)(v7 + 120) = a2;
  sub_23BB8A9F4();
  *(_QWORD *)(v7 + 168) = sub_23BB8A9E8();
  *(_QWORD *)(v7 + 176) = sub_23BB8A988();
  *(_QWORD *)(v7 + 184) = v8;
  return swift_task_switch();
}

uint64_t sub_23BB763F0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(double, double, double, double, double, double);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v24 = v22;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v6;
    *(_QWORD *)(v0 + 40) = v7;
    sub_23BA444D4();
    v8 = sub_23BB8ACDC();
    v10 = v9;
    swift_bridgeObjectRelease();
    v25 = v8;
    v26 = v10;
    *(_QWORD *)(v0 + 48) = sub_23BB778BC(1uLL, 0xD000000000000032, 0x800000023BB9D9A0);
    *(_QWORD *)(v0 + 56) = v11;
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)(v0 + 72) = v13;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(v25, v26, &v24);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: will%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v22, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v14 = *(_QWORD *)(v0 + 160)
      + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler;
  v15 = *(int **)v14;
  *(_QWORD *)(v0 + 200) = *(_QWORD *)v14;
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v14 + 8);
  if (v15)
  {
    v23 = (uint64_t (*)(double, double, double, double, double, double))((char *)v15 + *v15);
    swift_retain();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v16;
    *v16 = v0;
    v16[1] = sub_23BB767C0;
    return v23(*(double *)(v0 + 112), *(double *)(v0 + 120), *(double *)(v0 + 128), *(double *)(v0 + 136), *(double *)(v0 + 144), *(double *)(v0 + 152));
  }
  else
  {
    swift_release();
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABD4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0xD000000000000032, 0x800000023BB9D9A0, &v25);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v18, v19, "CompositeAppViewModel: %s - No didSelectSendStaticLocationMessageHandler", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v21, -1, -1);
      MEMORY[0x24260D9B4](v20, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB767C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB76820()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release();
  sub_23B9BD73C(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB76860()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 224);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 200);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 88) = sub_23BB7B69C(0xD000000000000032, 0x800000023BB9D9A0, &v15);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v10;
    sub_23BB8ACB8();
    *v8 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "CompositeAppViewModel: Error: %s %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
    sub_23B9BD73C(v14);

  }
  else
  {
    v11 = *(void **)(v0 + 224);
    sub_23B9BD73C(*(_QWORD *)(v0 + 200));

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB76A90()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BB76AD8();
}

uint64_t sub_23BB76AD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[20] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  v1[21] = swift_task_alloc();
  v2 = type metadata accessor for CompositeAppViewInitialInfo();
  v1[22] = v2;
  v1[23] = *(_QWORD *)(v2 - 8);
  v1[24] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[25] = sub_23BB8A9E8();
  v1[26] = sub_23BB8A988();
  v1[27] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB76B90()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 224) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v27 = v26;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 48) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 56) = v5;
    *(_QWORD *)(v0 + 64) = v6;
    *(_QWORD *)(v0 + 72) = v7;
    sub_23BA444D4();
    v8 = sub_23BB8ACDC();
    v10 = v9;
    swift_bridgeObjectRelease();
    v28 = v8;
    v29 = v10;
    *(_QWORD *)(v0 + 16) = sub_23BB778BC(1uLL, 0xD000000000000013, 0x800000023BB9D980);
    *(_QWORD *)(v0 + 24) = v11;
    *(_QWORD *)(v0 + 32) = v12;
    *(_QWORD *)(v0 + 40) = v13;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 152) = sub_23BB7B69C(v28, v29, &v27);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: will%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v26, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v14 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 168);
  v17 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23BB0C2A4(v17, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14);
  v19 = *(_QWORD *)(v0 + 168);
  if (v18 == 1)
  {
    swift_release();
    sub_23BB0BD5C(v19);
    v20 = sub_23BB891AC();
    v21 = sub_23BB8ABD4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v28 = v23;
      *(_DWORD *)v22 = 136315138;
      *(_QWORD *)(v0 + 144) = sub_23BB7B69C(0xD000000000000013, 0x800000023BB9D980, &v28);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v20, v21, "CompositeAppViewModel: %s - StopSharingLocation with no initialInfo", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v23, -1, -1);
      MEMORY[0x24260D9B4](v22, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_23BB0C2EC(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 192));
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v25;
    *v25 = v0;
    v25[1] = sub_23BB76FB8;
    return sub_23BB0A790();
  }
}

uint64_t sub_23BB76FB8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB77010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v1 = *(uint64_t **)(v0 + 192);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_23BA6CFF8(v2);
  *(_QWORD *)(v0 + 248) = v3;
  swift_bridgeObjectRelease();
  v5 = *v1;
  v4 = v1[1];
  *(_QWORD *)(v0 + 256) = v4;
  v6 = *((_BYTE *)v1 + 16);
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v4;
  *(_BYTE *)(v0 + 120) = v6;
  LOBYTE(v1) = *(_QWORD *)(v1[5] + 16) > 1uLL;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v7;
  *v7 = v0;
  v7[1] = sub_23BB770E0;
  return sub_23BA3EA5C(v3, (_OWORD *)(v0 + 104), (char)v1);
}

uint64_t sub_23BB770E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BB77164()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler;
  v2 = *(int **)v1;
  *(_QWORD *)(v0 + 280) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v1 + 8);
  if (v2)
  {
    v5 = (uint64_t (*)(void))((char *)v2 + *v2);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v3;
    *v3 = v0;
    v3[1] = sub_23BB7723C;
    return v5();
  }
  else
  {
    sub_23B989D9C(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB7723C()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 280);
  if (v0)
  {

    sub_23B9BD73C(v3);
  }
  else
  {
    sub_23B9BD73C(*(_QWORD *)(v2 + 280));
  }
  return swift_task_switch();
}

uint64_t sub_23BB772C8()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = (void *)v0[34];
  swift_release();
  v3 = v2;
  v4 = v2;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (void *)v0[34];
    v17 = v0[24];
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v18 = v10;
    *(_DWORD *)v8 = 136315394;
    v0[17] = sub_23BB7B69C(0xD000000000000013, 0x800000023BB9D980, &v18);
    sub_23BB8ACB8();
    *(_WORD *)(v8 + 12) = 2112;
    v11 = v7;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v12;
    sub_23BB8ACB8();
    *v9 = v12;

    _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: Error: %s %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);

    swift_release();
    v13 = v17;
  }
  else
  {
    v14 = (void *)v0[34];
    v15 = v1[24];

    swift_release();
    v13 = v15;
  }
  sub_23B989D9C(v13, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_23BB77534()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release();
  swift_release();
  sub_23B989D9C(v1, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BB77594()
{
  sub_23BB775B4();
}

void sub_23BB775B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v12 = v0;
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_23BB77834(1);
    sub_23BA444D4();
    v7 = sub_23BB8ACDC();
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_23BB778BC(1uLL, 0x417373696D736964, 0xEF29286E6F697463);
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BB7B69C(v7, v9, &v13);
    sub_23BB8ACB8();
    v1 = v12;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v3, v4, "CompositeAppViewModel: will%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  v10 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_dismiss);
  if (v10)
  {
    v11 = swift_retain();
    v10(v11);
    sub_23B9BD73C((uint64_t)v10);
  }
}

uint64_t sub_23BB77834(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23BB8A814();
    return sub_23BB8A88C();
  }
  return result;
}

unint64_t sub_23BB778BC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_23BB8A814();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_23BB8A88C();
  }
  __break(1u);
  return result;
}

uint64_t sub_23BB77958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CompositeAppViewInitialInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UserLocationProvider.Dependencies.init(thisDeviceLocationStream:isLocationUseAuthorized:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t UserLocationProvider.Dependencies.thisDeviceLocationStream.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t UserLocationProvider.Dependencies.thisDeviceLocationStream.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserLocationProvider.Dependencies.thisDeviceLocationStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB77A1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = sub_23BB77BC4;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t UserLocationProvider.Dependencies.isLocationUseAuthorized.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t UserLocationProvider.Dependencies.isLocationUseAuthorized.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*UserLocationProvider.Dependencies.isLocationUseAuthorized.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB77AF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_retain();
}

uint64_t sub_23BB77AFC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_retain();
  result = swift_release();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_23BB77B3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_23BB77BF4;
  a2[1] = v5;
  return swift_retain();
}

ValueMetadata *type metadata accessor for UserLocationProvider.Dependencies()
{
  return &type metadata for UserLocationProvider.Dependencies;
}

uint64_t sub_23BB77BA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB77BC4()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_23BB77BF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

uint64_t Device.Image.ServerImage.category.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.Image.ServerImage.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.Image.ServerImage.color.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void Device.Image.ServerImage.variant.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

BOOL static Device.Image.ServerImage.Variant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Device.Image.ServerImage.Variant.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t Device.Image.ServerImage.Variant.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t Device.Image.ServerImage.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B258();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  return sub_23BB8B24C();
}

uint64_t Device.Image.ServerImage.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B258();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BB77F04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B258();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t Device.Image.Emoji.symbol.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Device.Image.Emoji.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t Device.Image.Emoji.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t Device.Image.Emoji.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

BOOL _s12FindMyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  _BOOL8 result;
  char v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_23BB8B1A4(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_23BB8B1A4(), result = 0, (v14 & 1) != 0))
    {
      if (v5)
      {
        if (v9)
        {
          if (v3 != v10 || v5 != v9)
          {
            v15 = sub_23BB8B1A4();
            result = 0;
            if ((v15 & 1) == 0)
              return result;
          }
          return v6 == v11;
        }
      }
      else if (!v9)
      {
        return v6 == v11;
      }
      return 0;
    }
  }
  return result;
}

BOOL _s12FindMyUICore6DeviceO5ImageO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char v43;
  BOOL MyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  _QWORD v55[6];
  char v56;
  _QWORD v57[6];
  char v58;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(char *)(a2 + 48);
  v15 = *(char *)(a1 + 48);
  v54 = v12;
  if (v15 < 0)
  {
    if (v14 < 0)
    {
      v41 = *(_QWORD *)(a1 + 16);
      v42 = *(_QWORD *)(a1 + 24);
      v46 = *(_QWORD *)(a1 + 32);
      v49 = *(_QWORD *)(a2 + 16);
      if (v3 == v9 && v2 == v8)
      {
        MyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0 = 1;
        v33 = *(_QWORD *)(a1 + 8);
        v34 = *(_QWORD *)a1;
      }
      else
      {
        v51 = *(_QWORD *)a2;
        v35 = *(_QWORD *)(a2 + 8);
        v33 = *(_QWORD *)(a1 + 8);
        v34 = *(_QWORD *)a1;
        v36 = sub_23BB8B1A4();
        v8 = v35;
        v11 = v49;
        v9 = v51;
        MyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0 = v36;
      }
      v37 = v11;
      v38 = v9;
      v39 = v8;
      sub_23B989888(v9, v8, v37, v10, v13, v12, v14);
      sub_23B989888(v34, v33, v41, v42, v46, v6, v15);
      sub_23B990BAC(v34, v33, v41, v42, v46, v6, v15);
      v22 = v38;
      v23 = v39;
      v24 = v49;
      v25 = v10;
      v26 = v13;
      v27 = v12;
      v28 = v14;
      goto LABEL_11;
    }
  }
  else if ((v14 & 0x80000000) == 0)
  {
    v57[0] = *(_QWORD *)a1;
    v57[1] = v2;
    v57[2] = v5;
    v57[3] = v4;
    v57[4] = v7;
    v57[5] = v6;
    v43 = v15;
    v58 = v15;
    v55[0] = v9;
    v55[1] = v8;
    v55[2] = v11;
    v55[3] = v10;
    v55[4] = v13;
    v55[5] = v12;
    v52 = v14;
    v56 = v14;
    v47 = v6;
    v16 = v8;
    v17 = v9;
    v45 = v7;
    v18 = v4;
    v19 = v5;
    v20 = v2;
    v21 = v3;
    MyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0 = _s12FindMyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0((uint64_t)v57, (uint64_t)v55);
    sub_23B989888(v17, v16, v11, v10, v13, v12, v52);
    sub_23B989888(v21, v20, v19, v18, v45, v47, v43);
    sub_23B990BAC(v21, v20, v19, v18, v45, v47, v43);
    v22 = v17;
    v23 = v16;
    v24 = v11;
    v25 = v10;
    v26 = v13;
    v27 = v12;
    v28 = v52;
LABEL_11:
    sub_23B990BAC(v22, v23, v24, v25, v26, v27, v28);
    return MyUICore6DeviceO5ImageO06ServerE0V2eeoiySbAG_AGtFZ_0;
  }
  v50 = *(_QWORD *)a2;
  v48 = *(_QWORD *)(a2 + 8);
  v53 = *(_BYTE *)(a2 + 48);
  v29 = *(_QWORD *)(a1 + 8);
  v30 = *(_BYTE *)(a1 + 48);
  v31 = *(_QWORD *)a1;
  sub_23B989888(v9, v8, v11, v10, v13, *(_QWORD *)(a2 + 40), v53);
  sub_23B989888(v31, v29, v5, v4, v7, v6, v30);
  sub_23B990BAC(v31, v29, v5, v4, v7, v6, v30);
  sub_23B990BAC(v50, v48, v11, v10, v13, v54, v53);
  return 0;
}

unint64_t sub_23BB784E8()
{
  unint64_t result;

  result = qword_256A64950;
  if (!qword_256A64950)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Device.Image.ServerImage.Variant, &type metadata for Device.Image.ServerImage.Variant);
    atomic_store(result, (unint64_t *)&qword_256A64950);
  }
  return result;
}

unint64_t sub_23BB78530()
{
  unint64_t result;

  result = qword_256A64958;
  if (!qword_256A64958)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Device.Image.ServerImage, &type metadata for Device.Image.ServerImage);
    atomic_store(result, (unint64_t *)&qword_256A64958);
  }
  return result;
}

unint64_t sub_23BB78578()
{
  unint64_t result;

  result = qword_256A64960;
  if (!qword_256A64960)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Device.Image.Emoji, &type metadata for Device.Image.Emoji);
    atomic_store(result, (unint64_t *)&qword_256A64960);
  }
  return result;
}

uint64_t _s5ImageOwxx(uint64_t a1)
{
  return sub_23B990BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t _s5ImageOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_23B989888(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s5ImageOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_23B989888(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_23B990BAC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s5ImageOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_23B990BAC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s5ImageOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 15);
  v3 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 0xE | (*(unsigned __int8 *)(a1 + 48) >> 7)) ^ 0xF;
  if (v3 >= 0xE)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5ImageOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 15;
    if (a3 >= 0xF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 16 * (((-a2 >> 1) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_23BB78808(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 7;
}

uint64_t sub_23BB78814(uint64_t result)
{
  *(_BYTE *)(result + 48) &= ~0x80u;
  return result;
}

uint64_t sub_23BB78824(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = *(_BYTE *)(result + 48) & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for Device.Image()
{
  return &type metadata for Device.Image;
}

uint64_t _s5ImageO11ServerImageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5ImageO11ServerImageVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s5ImageO11ServerImageVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t _s5ImageO11ServerImageVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5ImageO11ServerImageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.Image.ServerImage()
{
  return &type metadata for Device.Image.ServerImage;
}

uint64_t _s5ImageO11ServerImageV7VariantOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s5ImageO11ServerImageV7VariantOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23BB78B18 + 4 * byte_23BB9901D[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23BB78B4C + 4 * asc_23BB99018[v4]))();
}

uint64_t sub_23BB78B4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB78B54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB78B5CLL);
  return result;
}

uint64_t sub_23BB78B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB78B70);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23BB78B74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB78B7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.Image.ServerImage.Variant()
{
  return &type metadata for Device.Image.ServerImage.Variant;
}

ValueMetadata *type metadata accessor for Device.Image.Emoji()
{
  return &type metadata for Device.Image.Emoji;
}

uint64_t sub_23BB78BA8(uint64_t a1)
{
  sub_23BB8A97C();
  return a1;
}

Swift::Void __swiftcall SubscriptionsManager.removeSubscriber(_:)(FindMyUICore::Subscriber a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t *countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void *, uint64_t, __n128);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = v1;
  object = a1.rawValue._object;
  countAndFlagsBits = (uint64_t *)a1.rawValue._countAndFlagsBits;
  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&AssociatedConformanceWitness - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v40 = AssociatedTypeWitness;
  v12 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&AssociatedConformanceWitness - v16;
  v19 = *countAndFlagsBits;
  v18 = countAndFlagsBits[1];
  v20 = *(void (**)(void *, uint64_t, __n128))(v2 + 24);
  v43 = (uint64_t)object;
  v41 = v2;
  v21 = v2;
  v22 = v6;
  v23 = v18;
  v20(object, v21, v15);
  v24 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v42 = v5;
  v25 = v9;
  v24(v9, v17, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  swift_bridgeObjectRetain_n();
  v26 = sub_23BB891AC();
  v27 = sub_23BB8ABEC();
  v28 = os_log_type_enabled(v26, v27);
  v44 = v19;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    *(_DWORD *)v29 = 141558275;
    v45 = v30;
    v46 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v29 + 12) = 2081;
    v46 = v19;
    v47 = v23;
    swift_bridgeObjectRetain();
    v31 = sub_23BB8A7D8();
    v46 = sub_23BB7B69C(v31, v32, &v45);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v26, v27, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v30, -1, -1);
    MEMORY[0x24260D9B4](v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v42);
  v33 = v43;
  v35 = v40;
  v34 = v41;
  v36 = sub_23BB8A934();
  if (MEMORY[0x24260C8BC](v36, v35))
    v37 = sub_23BA87CFC(v36, v35, AssociatedConformanceWitness);
  else
    v37 = MEMORY[0x24BEE4B08];
  v38 = v44;
  swift_bridgeObjectRelease();
  v46 = v38;
  v47 = v23;
  SubscriptionsManager.setSubscriptions(_:for:)(v37, &v46, v33, v34);
  swift_bridgeObjectRelease();
}

uint64_t SubscriptionsManager.setSubscription(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23BB7A678(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))SubscriptionsManager.setSubscriptions(_:for:));
}

uint64_t SubscriptionsManager.addSubscription(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23BB7A678(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))SubscriptionsManager.addSubscriptions(_:for:));
}

uint64_t SubscriptionsManager.setSubscriptions(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t *, uint64_t, uint64_t);
  void (*v76)(uint64_t *, _QWORD);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t *, _QWORD);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  void (*v127)(char *, uint64_t);
  void (*v128)(char *, uint64_t);
  char v129;
  char *v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  void (*v154)(uint64_t, uint64_t);
  uint64_t v155;
  char v156;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char **v165;
  uint64_t (*v166)(uint64_t *, uint64_t, uint64_t);
  uint64_t v167;
  void (*v168)(char *, uint64_t);
  char *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t);
  void (*v179)(_QWORD, _QWORD);
  uint64_t v180;
  void (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(_QWORD, _QWORD);
  uint64_t v188;
  uint64_t v189;

  v182 = a1;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v169 = (char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v164 = (char *)&v158 - v14;
  MEMORY[0x24BDAC7A8](v15, v16);
  v160 = (char *)&v158 - v17;
  MEMORY[0x24BDAC7A8](v18, v19);
  v163 = (char *)&v158 - v20;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v158 - v23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v180 = AssociatedTypeWitness;
  v174 = AssociatedConformanceWitness;
  v28 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v27);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  v162 = (char *)&v158 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32, v33);
  v161 = (char *)&v158 - v34;
  MEMORY[0x24BDAC7A8](v35, v36);
  v159 = (char *)&v158 - v37;
  MEMORY[0x24BDAC7A8](v38, v39);
  v158 = (char *)&v158 - v40;
  MEMORY[0x24BDAC7A8](v41, v42);
  v173 = (char *)&v158 - v43;
  v46 = MEMORY[0x24BDAC7A8](v44, v45);
  v48 = (char *)&v158 - v47;
  v49 = *a2;
  v50 = a2[1];
  v179 = (void (*)(_QWORD, _QWORD))v49;
  v51 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v176 = v4;
  v183 = a3;
  v184 = a4;
  v181 = v51;
  ((void (*)(uint64_t, uint64_t, __n128))v51)(a3, a4, v46);
  v177 = v9;
  v52 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v53 = v182;
  v171 = v52;
  v52(v24, v48, v8);
  v54 = *(void (**)(char *, uint64_t))(v29 + 8);
  v175 = v28;
  v55 = v28;
  v56 = v24;
  v54(v48, v55);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v57 = sub_23BB891AC();
  v58 = sub_23BB8ABEC();
  v59 = os_log_type_enabled(v57, v58);
  v172 = v8;
  v178 = v54;
  if (v59)
  {
    v60 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v187 = (void (*)(_QWORD, _QWORD))v61;
    *(_DWORD *)v60 = 136315394;
    v185 = v53;
    v62 = sub_23BB8AB44();
    MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v62);
    v63 = sub_23BB8B150();
    v185 = sub_23BB7B69C(v63, v64, (uint64_t *)&v187);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2080;
    v185 = (uint64_t)v179;
    v186 = v50;
    swift_bridgeObjectRetain();
    v65 = sub_23BB8A7D8();
    v185 = sub_23BB7B69C(v65, v66, (uint64_t *)&v187);
    v53 = v182;
    v54 = v178;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v57, v58, "Provider: subscriptions\n- subscriptions: %s\n- subscriber: %s", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v61, -1, -1);
    MEMORY[0x24260D9B4](v60, -1, -1);

    v67 = *(void (**)(char *, uint64_t))(v177 + 8);
    v68 = v56;
    v69 = v172;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v67 = *(void (**)(char *, uint64_t))(v177 + 8);
    v68 = v56;
    v69 = v8;
  }
  v168 = v67;
  v67(v68, v69);
  v70 = v50;
  v71 = v173;
  v181(v183, v184);
  v72 = v175;
  v170 = *(_QWORD *)&v71[*(int *)(v175 + 40)];
  swift_bridgeObjectRetain();
  v54(v71, v72);
  v73 = sub_23BB8AB2C();
  v177 = v70;
  if ((v73 & 1) != 0)
  {
    v188 = v70;
    v189 = 0;
    v187 = v179;
    v74 = v184;
    v75 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v184 + 40);
  }
  else
  {
    v188 = v70;
    v189 = v53;
    v187 = v179;
    v74 = v184;
    v75 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v184 + 40);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v166 = v75;
  v76 = (void (*)(uint64_t *, _QWORD))v75(&v185, v183, v74);
  sub_23BB8AB44();
  sub_23BA87CB8();
  sub_23BB8A6E8();
  sub_23BB8A700();
  sub_23BA872A0(v72);
  v76(&v185, 0);
  v77 = v72;
  v78 = v173;
  v79 = v183;
  v80 = v184;
  v181(v183, v184);
  v81 = *(_QWORD *)&v78[*(int *)(v77 + 36)];
  v82 = sub_23BB8AB44();
  v83 = sub_23BA87CB8();
  v165 = &v158;
  v185 = v81;
  MEMORY[0x24BDAC7A8](v83, v84);
  *(&v158 - 2) = (char *)v79;
  *(&v158 - 1) = (char *)v80;
  v85 = sub_23BB8A6DC();
  swift_bridgeObjectRetain();
  MEMORY[0x24260D8DC](MEMORY[0x24BEE03C0], v85);
  MEMORY[0x24260D8DC](MEMORY[0x24BEE1718], v82);
  v167 = v82;
  v86 = sub_23BB8A8B0();
  swift_bridgeObjectRelease();
  v87 = v78;
  v88 = v175;
  v178(v87, v175);
  v185 = v86;
  v89 = sub_23BB8A97C();
  MEMORY[0x24260D8DC](MEMORY[0x24BEE12C8], v89);
  v90 = sub_23BB8AB50();
  swift_bridgeObjectRetain();
  v91 = v176;
  v92 = (void (*)(uint64_t *, _QWORD))v166(&v185, v79, v80);
  SubscriptionManagerStorage.uniqueSubscriptions.setter(v90, v88);
  v92(&v185, 0);
  swift_bridgeObjectRetain();
  v173 = (char *)sub_23BB8AB08();
  swift_bridgeObjectRetain();
  v93 = sub_23BB8AB08();
  if ((sub_23BB8AB2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v94 = v159;
    v95 = v91;
    v181(v183, v184);
    v96 = v160;
    v97 = v172;
    v171(v160, v94, v172);
    v178(v94, v88);
    v98 = v177;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v99 = sub_23BB891AC();
    v100 = sub_23BB8ABEC();
    v101 = v100;
    v102 = v93;
    if (os_log_type_enabled(v99, v100))
    {
      v103 = swift_slowAlloc();
      v104 = swift_slowAlloc();
      v187 = (void (*)(_QWORD, _QWORD))v104;
      *(_DWORD *)v103 = 136315651;
      v185 = v93;
      MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v167);
      LODWORD(v166) = v101;
      v105 = sub_23BB8B150();
      v185 = sub_23BB7B69C(v105, v106, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 12) = 2160;
      v185 = 1752392040;
      v107 = v172;
      sub_23BB8ACB8();
      *(_WORD *)(v103 + 22) = 2081;
      v185 = (uint64_t)v179;
      v186 = v177;
      swift_bridgeObjectRetain();
      v108 = sub_23BB8A7D8();
      v185 = sub_23BB7B69C(v108, v109, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v99, (os_log_type_t)v166, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v103, 0x20u);
      swift_arrayDestroy();
      v110 = v104;
      v95 = v176;
      v98 = v177;
      MEMORY[0x24260D9B4](v110, -1, -1);
      MEMORY[0x24260D9B4](v103, -1, -1);

      v111 = v107;
      v112 = v107;
      v113 = v168;
      v168(v96, v112);
      v114 = v169;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v111 = v97;
      v128 = v168;
      v168(v96, v97);
      v114 = v169;
      v113 = v128;
    }
  }
  else
  {
    v115 = v158;
    v95 = v91;
    v181(v183, v184);
    v116 = v163;
    v117 = v172;
    v171(v163, v115, v172);
    v178(v115, v88);
    v118 = v177;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v119 = sub_23BB891AC();
    v120 = sub_23BB8ABEC();
    if (os_log_type_enabled(v119, v120))
    {
      v121 = swift_slowAlloc();
      v122 = swift_slowAlloc();
      v187 = (void (*)(_QWORD, _QWORD))v122;
      *(_DWORD *)v121 = 136315651;
      v185 = v93;
      MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v167);
      v123 = sub_23BB8B150();
      v185 = sub_23BB7B69C(v123, v124, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v121 + 12) = 2160;
      v185 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v121 + 22) = 2081;
      v185 = (uint64_t)v179;
      v186 = v177;
      swift_bridgeObjectRetain();
      v125 = sub_23BB8A7D8();
      v185 = sub_23BB7B69C(v125, v126, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v119, v120, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- SubscriptionsThatDoNotExistAnymore: %s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v121, 0x20u);
      swift_arrayDestroy();
      v95 = v176;
      v98 = v177;
      MEMORY[0x24260D9B4](v122, -1, -1);
      MEMORY[0x24260D9B4](v121, -1, -1);

      v111 = v172;
      v127 = v168;
      ((void (*)(char *))v168)(v163);
    }
    else
    {

      v98 = v118;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v111 = v117;
      v127 = v168;
      v168(v116, v117);
    }
    v129 = sub_23BB8AB2C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v184 + 56))(v93, v129 & 1, v183);
    v114 = v169;
    v102 = v93;
    v113 = v127;
  }
  if ((sub_23BB8AB2C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v130 = v162;
    v181(v183, v184);
    v131 = v111;
    v171(v114, v130, v111);
    v178(v130, v175);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v132 = sub_23BB891AC();
    v133 = sub_23BB8ABEC();
    if (os_log_type_enabled(v132, v133))
    {
      v134 = swift_slowAlloc();
      v135 = swift_slowAlloc();
      v187 = (void (*)(_QWORD, _QWORD))v135;
      *(_DWORD *)v134 = 136315651;
      v185 = v102;
      MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v167);
      v136 = sub_23BB8B150();
      v185 = sub_23BB7B69C(v136, v137, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 12) = 2160;
      v185 = 1752392040;
      v138 = v176;
      v98 = v177;
      sub_23BB8ACB8();
      *(_WORD *)(v134 + 22) = 2081;
      v185 = (uint64_t)v179;
      v186 = v98;
      swift_bridgeObjectRetain();
      v139 = sub_23BB8A7D8();
      v185 = sub_23BB7B69C(v139, v140, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v132, v133, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v134, 0x20u);
      swift_arrayDestroy();
      v141 = v135;
      v95 = v138;
      MEMORY[0x24260D9B4](v141, -1, -1);
      MEMORY[0x24260D9B4](v134, -1, -1);

      v142 = v169;
      v143 = v172;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v142 = v114;
      v143 = v131;
    }
    v113(v142, v143);
    v155 = v182;
  }
  else
  {
    swift_bridgeObjectRelease();
    v144 = v161;
    v181(v183, v184);
    v145 = v164;
    v146 = v111;
    v171(v164, v144, v111);
    v178(v144, v175);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v147 = sub_23BB891AC();
    v148 = sub_23BB8ABEC();
    if (os_log_type_enabled(v147, v148))
    {
      v149 = swift_slowAlloc();
      v181 = (void (*)(uint64_t, uint64_t))swift_slowAlloc();
      v187 = v181;
      *(_DWORD *)v149 = 136315394;
      v185 = (uint64_t)v173;
      MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v167);
      v150 = sub_23BB8B150();
      v185 = sub_23BB7B69C(v150, v151, (uint64_t *)&v187);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v149 + 12) = 2080;
      v185 = (uint64_t)v179;
      v186 = v98;
      swift_bridgeObjectRetain();
      v152 = sub_23BB8A7D8();
      v185 = sub_23BB7B69C(v152, v153, (uint64_t *)&v187);
      v95 = v176;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v147, v148, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistBefore: %s\n- subscriber: %s", (uint8_t *)v149, 0x16u);
      v154 = v181;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v154, -1, -1);
      MEMORY[0x24260D9B4](v149, -1, -1);

      v113(v164, v172);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v113(v145, v146);
    }
    v155 = v182;
    v156 = sub_23BB8AB2C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v184 + 48))(v173, v156 & 1, v183);
    swift_bridgeObjectRelease();
  }
  return sub_23BB7AEEC(v95, v155, (uint64_t)v179, v98, v183, v184);
}

uint64_t SubscriptionsManager.addSubscriptions(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v64 = a1;
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v63 = AssociatedTypeWitness;
  v14 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v58 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&v54 - v21;
  v23 = *a2;
  v24 = a2[1];
  v25 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v59 = a4;
  v60 = a3;
  v26 = a4;
  v27 = v64;
  v54 = v23;
  v55 = v25;
  ((void (*)(uint64_t, uint64_t, __n128))v25)(a3, v26, v20);
  v56 = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v22, v7);
  v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  v57 = v14;
  v29 = v14;
  v30 = v11;
  v28(v22, v29);
  swift_bridgeObjectRetain_n();
  v65 = v24;
  swift_bridgeObjectRetain_n();
  v31 = sub_23BB891AC();
  v32 = sub_23BB8ABEC();
  v33 = os_log_type_enabled(v31, v32);
  v61 = v28;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v68 = v35;
    *(_DWORD *)v34 = 136315394;
    v66 = v27;
    v36 = sub_23BB8AB44();
    MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v36);
    v37 = sub_23BB8B150();
    v66 = sub_23BB7B69C(v37, v38, &v68);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    v39 = v54;
    v66 = v54;
    v67 = v65;
    swift_bridgeObjectRetain();
    v40 = sub_23BB8A7D8();
    v66 = sub_23BB7B69C(v40, v41, &v68);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v31, v32, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v35, -1, -1);
    MEMORY[0x24260D9B4](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v7);
    v42 = v60;
    v43 = v39;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v7);
    v42 = v60;
    v43 = v54;
  }
  v45 = v57;
  v44 = v58;
  v46 = v59;
  v47 = v55;
  v48 = v65;
  swift_bridgeObjectRetain();
  v47(v42, v46);
  v49 = *(_QWORD *)&v44[*(int *)(v45 + 36)];
  v66 = v43;
  v67 = v48;
  v50 = sub_23BB8AB44();
  v51 = sub_23BA87CB8();
  MEMORY[0x24260C640](&v68, &v66, v49, &type metadata for Subscriber, v50, v51);
  swift_bridgeObjectRelease();
  if (v68)
  {
    v61(v44, v45);
    v66 = v64;
    swift_bridgeObjectRetain();
    MEMORY[0x24260D8DC](MEMORY[0x24BEE1718], v50);
    v52 = sub_23BB8AB20();
  }
  else
  {
    v61(v44, v45);
    v52 = v64;
    swift_bridgeObjectRetain();
  }
  v66 = v43;
  v67 = v65;
  SubscriptionsManager.setSubscriptions(_:for:)(v52, &v66, v42, v46);
  return swift_bridgeObjectRelease();
}

uint64_t SubscriptionsManager.removeSubscription(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23BB7A678(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))SubscriptionsManager.removeSubscriptions(_:for:));
}

uint64_t sub_23BB7A678(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  _QWORD v18[2];

  v8 = *a2;
  v9 = a2[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23BB7B650(AssociatedTypeWitness, AssociatedTypeWitness);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  swift_allocObject();
  v12 = sub_23BB8A910();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, a1, AssociatedTypeWitness);
  sub_23BB8A97C();
  if (MEMORY[0x24260C8BC](v12, AssociatedTypeWitness))
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v15 = sub_23BA87CFC(v12, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  else
  {
    v15 = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  v18[0] = v8;
  v18[1] = v9;
  a5(v15, v18, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t SubscriptionsManager.removeSubscriptions(_:for:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(uint64_t, uint64_t);
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t AssociatedConformanceWitness;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[2];

  v5 = v4;
  v90 = a1;
  v9 = sub_23BB891C4();
  v10 = *(void (**)(char *, uint64_t))(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v78 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v75 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v89 = AssociatedTypeWitness;
  v19 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v18);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v77 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v80 = (char *)&v75 - v25;
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = (char *)&v75 - v29;
  v31 = *a2;
  v32 = a2[1];
  v85 = v5;
  v86 = v31;
  v33 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v35 = v34;
  v81 = a4;
  v83 = v33;
  ((void (*)(uint64_t, uint64_t, __n128))v33)(a3, a4, v28);
  v84 = v10;
  v36 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v10 + 2);
  v87 = v9;
  v76 = v36;
  v36(v16, v30, v9);
  v79 = *(void (**)(char *, uint64_t))(v20 + 8);
  v79(v30, v35);
  swift_bridgeObjectRetain_n();
  v37 = v32;
  swift_bridgeObjectRetain_n();
  v82 = v16;
  v38 = sub_23BB891AC();
  v39 = sub_23BB8ABEC();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v93[0] = v41;
    *(_DWORD *)v40 = 136315651;
    v91 = v90;
    v42 = sub_23BB8AB44();
    v75 = v35;
    MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v42);
    v43 = sub_23BB8B150();
    v91 = sub_23BB7B69C(v43, v44, v93);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2160;
    v91 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v40 + 22) = 2081;
    v91 = v86;
    v92 = v37;
    v45 = v37;
    swift_bridgeObjectRetain();
    v46 = sub_23BB8A7D8();
    v91 = sub_23BB7B69C(v46, v47, v93);
    v35 = v75;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v38, v39, "Provider: removeSubscriptions\n- subscriptionsToRemove: %s\n- subscriber: %{private,mask.hash}s", (uint8_t *)v40, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v41, -1, -1);
    MEMORY[0x24260D9B4](v40, -1, -1);

  }
  else
  {

    v45 = v32;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v84 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
  v84(v82, v87);
  swift_bridgeObjectRetain();
  v48 = v80;
  v49 = v81;
  v50 = v83;
  v83(a3, v81);
  v51 = v35;
  v52 = *(_QWORD *)&v48[*(int *)(v35 + 36)];
  v53 = v86;
  v91 = v86;
  v92 = v45;
  v54 = sub_23BB8AB44();
  v55 = sub_23BA87CB8();
  MEMORY[0x24260C640](v93, &v91, v52, &type metadata for Subscriber, v54, v55);
  swift_bridgeObjectRelease();
  v56 = a3;
  if (v93[0])
  {
    v79(v48, v51);
    v57 = sub_23BB8AB08();
    v91 = v53;
    v92 = v45;
    SubscriptionsManager.setSubscriptions(_:for:)(v57, &v91, a3, v49);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v59 = v54;
    v60 = v79;
    v79(v48, v51);
    v61 = v77;
    v50(v56, v49);
    v76(v78, v61, v87);
    v60(v61, v51);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v62 = sub_23BB891AC();
    v63 = sub_23BB8ABEC();
    v64 = os_log_type_enabled(v62, v63);
    v65 = v84;
    if (v64)
    {
      v66 = swift_slowAlloc();
      v67 = v45;
      v68 = v90;
      v69 = v66;
      v70 = swift_slowAlloc();
      v93[0] = v70;
      *(_DWORD *)v69 = 136315650;
      v84 = v65;
      v91 = sub_23BB7B69C(0xD00000000000001BLL, 0x800000023BB9DA70, v93);
      sub_23BB8ACB8();
      *(_WORD *)(v69 + 12) = 2080;
      v91 = v68;
      MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v59);
      v71 = sub_23BB8B150();
      v91 = sub_23BB7B69C(v71, v72, v93);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 22) = 2080;
      v91 = v86;
      v92 = v67;
      swift_bridgeObjectRetain();
      v73 = sub_23BB8A7D8();
      v91 = sub_23BB7B69C(v73, v74, v93);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v62, v63, "Provider: %s\n- Trying to remove a non existing subscriber %s\n- subscriber: %s", (uint8_t *)v69, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v70, -1, -1);
      MEMORY[0x24260D9B4](v69, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v84)(v78, v87);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return ((uint64_t (*)(char *, uint64_t))v65)(v78, v87);
    }
  }
}

uint64_t sub_23BB7AEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, _QWORD *);
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)v23 - v18;
  (*(void (**)(uint64_t, uint64_t, __n128))(a6 + 24))(a5, a6, v17);
  v20 = *(void (**)(uint64_t, _QWORD *))&v19[*(int *)(v14 + 48)];
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  swift_retain();
  v21(v19, v14);
  v23[0] = a3;
  v23[1] = a4;
  v20(a2, v23);
  return swift_release();
}

Swift::Void __swiftcall SubscriptionsManager.resumeSubscriptions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  int v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(uint64_t *, _QWORD);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[5];

  v2 = v1;
  v3 = v0;
  v4 = sub_23BB891C4();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v30 - v19;
  v21 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 24);
  v21(v3, v2, v18);
  v22 = v20[*(int *)(v11 + 44)];
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v20, v11);
  if (v22 == 1)
  {
    v24 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v2 + 40))(v33, v3, v2);
    SubscriptionManagerStorage.isPaused.setter(0, v11);
    v24(v33, 0);
    ((void (*)(uint64_t, uint64_t))v21)(v3, v2);
    v25 = *(_QWORD *)&v20[*(int *)(v11 + 40)];
    swift_bridgeObjectRetain();
    v23(v20, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 48))(v25, 1, v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    ((void (*)(uint64_t, uint64_t))v21)(v3, v2);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v7, v15, v32);
    v23(v15, v11);
    v26 = sub_23BB891AC();
    v27 = sub_23BB8ABEC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v33[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v33[4] = sub_23BB7B69C(0xD000000000000015, 0x800000023BB9A5D0, v33);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v26, v27, "Provider: %s - Skipping since it's not paused", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v29, -1, -1);
      MEMORY[0x24260D9B4](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  }
}

Swift::Void __swiftcall SubscriptionsManager.pauseSubscriptions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t, __n128);
  char v22;
  void (*v23)(char *, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[4];

  v2 = v1;
  v3 = v0;
  v4 = sub_23BB891C4();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for SubscriptionManagerStorage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v30 - v19;
  v21 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 24);
  v21(v3, v2, v18);
  v22 = v20[*(int *)(v11 + 44)];
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v20, v11);
  if ((v22 & 1) != 0)
  {
    ((void (*)(uint64_t, uint64_t))v21)(v3, v2);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v7, v15, v32);
    v23(v15, v11);
    v24 = sub_23BB891AC();
    v25 = sub_23BB8ABEC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v34[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v33 = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9A5B0, v34);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v24, v25, "Provider: %s - Skipping since it's already paused", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v27, -1, -1);
      MEMORY[0x24260D9B4](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  }
  else
  {
    v28 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v2 + 40))(v34, v3, v2);
    SubscriptionManagerStorage.isPaused.setter(1, v11);
    v28(v34, 0);
    ((void (*)(uint64_t, uint64_t))v21)(v3, v2);
    v29 = *(_QWORD *)&v20[*(int *)(v11 + 40)];
    swift_bridgeObjectRetain();
    v23(v20, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v29, 1, v3, v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23BB7B650(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  else
    return sub_23BB8B15C();
}

uint64_t sub_23BB7B69C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23BB7B76C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23BB7BCE4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23BB7BCE4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23BB7B76C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23BB8ACC4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23BB7B924(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23BB8AE8C();
  if (!v8)
  {
    sub_23BB8AFB8();
    __break(1u);
LABEL_17:
    result = sub_23BB8B00C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23BB7B924(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23BB7B9B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23BB7BB2C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23BB7BB2C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23BB7B9B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23BB7F744(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23BB8AE14();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23BB8AFB8();
      __break(1u);
LABEL_10:
      v2 = sub_23BB8A838();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23BB8B00C();
    __break(1u);
LABEL_14:
    result = sub_23BB8AFB8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23BB7BB2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A64968);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB7BC78()
{
  return sub_23BB8B150();
}

uint64_t sub_23BB7BCA0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of SubscriptionsManager.storage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SubscriptionsManager.storage.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SubscriptionsManager.storage.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SubscriptionsManager.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of SubscriptionsManager.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_23BB7BCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t DestinationPath.id.getter()
{
  return sub_23BB8A724();
}

uint64_t sub_23BB7BD28(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_23B97C964;
  return v5();
}

uint64_t sub_23BB7BD7C(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B990D68;
  return v4();
}

uint64_t sub_23BB7BDD4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_23BB7BDFC(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  return v2;
}

uint64_t BeaconsInfoProvider.Dependencies.init(startBeaconsStream:stopBeaconsStream:loadingStateResetDuration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t BeaconsInfoProvider.Dependencies.startBeaconsStream.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t BeaconsInfoProvider.Dependencies.startBeaconsStream.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BeaconsInfoProvider.Dependencies.startBeaconsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB7BEAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = &unk_256A60030;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t BeaconsInfoProvider.Dependencies.stopBeaconsStream.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t BeaconsInfoProvider.Dependencies.stopBeaconsStream.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BeaconsInfoProvider.Dependencies.stopBeaconsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB7BF80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = sub_23BB7C17C;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t BeaconsInfoProvider.Dependencies.loadingStateResetDuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t BeaconsInfoProvider.Dependencies.loadingStateResetDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*BeaconsInfoProvider.Dependencies.loadingStateResetDuration.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BB7C054@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_retain();
}

uint64_t sub_23BB7C060(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_retain();
  result = swift_release();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_23BB7C0A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = &unk_256A60038;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_23BB7C0F4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_23BB7C1AC;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;
  return swift_retain();
}

ValueMetadata *type metadata accessor for BeaconsInfoProvider.Dependencies()
{
  return &type metadata for BeaconsInfoProvider.Dependencies;
}

uint64_t sub_23BB7C158()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB7C17C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_23BB7C1AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23BB7C1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEB0);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A28);
  v4[16] = swift_task_alloc();
  v7 = sub_23BB88BAC();
  v4[17] = v7;
  v4[18] = *(_QWORD *)(v7 - 8);
  v4[19] = swift_task_alloc();
  if (a2)
  {
    swift_getObjectType();
    v8 = sub_23BB8A988();
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v4[20] = v8;
  v4[21] = v10;
  return swift_task_switch();
}

uint64_t sub_23BB7C2D0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 176) = sub_23BB8B114();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEA8);
  sub_23B996E1C(&qword_256A64A30, &qword_256A5DEA8, MEMORY[0x24BEE6A88]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v1;
  *v1 = v0;
  v1[1] = sub_23BB7C378;
  return sub_23BB8A9D0();
}

uint64_t sub_23BB7C378()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 176))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_23BB7C3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    sub_23B989D60(v3, &qword_256A64A28);
    *(_QWORD *)v4 = 0;
    *(_QWORD *)(v4 + 8) = 0;
    *(_BYTE *)(v4 + 18) = -1;
    *(_WORD *)(v4 + 16) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 104);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 152), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    v10 = (int *)sub_23BB8AF64();
    *(_QWORD *)(v0 + 192) = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v12;
    *v12 = v0;
    v12[1] = sub_23BB7C5B0;
    return ((uint64_t (*)(uint64_t, _QWORD))v13)(v0 + 48, *(_QWORD *)(v0 + 152));
  }
}

uint64_t sub_23BB7C54C()
{
  uint64_t v0;

  (*(void (**)(uint64_t, uint64_t))(v0 + 176))(v0 + 16, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB7C5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BB7C62C()
{
  uint64_t v0;
  _QWORD *v1;
  int v3;
  uint64_t v4;

  if (*(unsigned __int8 *)(v0 + 66) == 255)
  {
    *(_QWORD *)(v0 + 176) = sub_23BB8B114();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEA8);
    sub_23B996E1C(&qword_256A64A30, &qword_256A5DEA8, MEMORY[0x24BEE6A88]);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v1;
    *v1 = v0;
    v1[1] = sub_23BB7C378;
    return sub_23BB8A9D0();
  }
  else
  {
    v3 = *(unsigned __int16 *)(v0 + 64) | (*(unsigned __int8 *)(v0 + 66) << 16);
    v4 = *(_QWORD *)(v0 + 72);
    *(_OWORD *)v4 = *(_OWORD *)(v0 + 48);
    *(_WORD *)(v4 + 16) = v3;
    *(_BYTE *)(v4 + 18) = BYTE2(v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB7C73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFA8);
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A48);
  v4[20] = swift_task_alloc();
  v7 = sub_23BB88BA0();
  v4[21] = v7;
  v4[22] = *(_QWORD *)(v7 - 8);
  v4[23] = swift_task_alloc();
  if (a2)
  {
    swift_getObjectType();
    v8 = sub_23BB8A988();
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v4[24] = v8;
  v4[25] = v10;
  return swift_task_switch();
}

uint64_t sub_23BB7C82C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 208) = sub_23BB8B114();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFA0);
  sub_23B996E1C(&qword_256A64A50, &qword_256A5DFA0, MEMORY[0x24BEE6A88]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v1;
  *v1 = v0;
  v1[1] = sub_23BB7C8D4;
  return sub_23BB8A9D0();
}

uint64_t sub_23BB7C8D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 208))(v2 + 72, 0);
  return swift_task_switch();
}

uint64_t sub_23BB7C944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    sub_23B989D60(v3, &qword_256A64A48);
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(_OWORD *)(v4 + 32) = 0u;
    *(_BYTE *)(v4 + 48) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 184), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    v10 = (int *)sub_23BB8AF64();
    *(_QWORD *)(v0 + 224) = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v12;
    *v12 = v0;
    v12[1] = sub_23BB7CB0C;
    return ((uint64_t (*)(uint64_t, _QWORD))v13)(v0 + 16, *(_QWORD *)(v0 + 184));
  }
}

uint64_t sub_23BB7CAA8()
{
  uint64_t v0;

  (*(void (**)(uint64_t, uint64_t))(v0 + 208))(v0 + 72, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB7CB0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 176);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BB7CB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 104);
    v3 = *(_BYTE *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);
    *(_OWORD *)v2 = *(_OWORD *)(v0 + 16);
    *(_QWORD *)(v2 + 16) = v6;
    *(_BYTE *)(v2 + 24) = v5;
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v1;
    *(_BYTE *)(v2 + 48) = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 208) = sub_23BB8B114();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFA0);
    sub_23B996E1C(&qword_256A64A50, &qword_256A5DFA0, MEMORY[0x24BEE6A88]);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v8;
    *v8 = v0;
    v8[1] = sub_23BB7C8D4;
    return sub_23BB8A9D0();
  }
}

uint64_t sub_23BB7CC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB00);
  v4[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF30);
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A08);
  v4[14] = swift_task_alloc();
  v7 = sub_23BB88B7C();
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  if (a2)
  {
    swift_getObjectType();
    v8 = sub_23BB8A988();
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v4[18] = v8;
  v4[19] = v10;
  return swift_task_switch();
}

uint64_t sub_23BB7CDAC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 160) = sub_23BB8B114();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF28);
  sub_23B996E1C(&qword_256A64A10, &qword_256A5DF28, MEMORY[0x24BEE6A88]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = sub_23BB7CE58;
  return sub_23BB8A9D0();
}

uint64_t sub_23BB7CE58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 160))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_23BB7CEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 48);
    sub_23B989D60(v3, &qword_256A64A08);
    v5 = type metadata accessor for SessionFriendStreamChange(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 136), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)sub_23BB8AF64();
    *(_QWORD *)(v0 + 176) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v13;
    *v13 = v0;
    v13[1] = sub_23BB7D0B4;
    return ((uint64_t (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_23BB7D044()
{
  uint64_t v0;

  (*(void (**)(uint64_t, uint64_t))(v0 + 160))(v0 + 16, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB7D0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BB7D130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = type metadata accessor for SessionFriendStreamChange(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_23B989D60(v1, &qword_256A5EB00);
    *(_QWORD *)(v0 + 160) = sub_23BB8B114();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF28);
    sub_23B996E1C(&qword_256A64A10, &qword_256A5DF28, MEMORY[0x24BEE6A88]);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v4;
    *v4 = v0;
    v4[1] = sub_23BB7CE58;
    return sub_23BB8A9D0();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    sub_23B989CA4(v1, v6, type metadata accessor for SessionFriendStreamChange);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BB7D294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64160);
  v4[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649F0);
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A08);
  v4[14] = swift_task_alloc();
  v7 = sub_23BB88B7C();
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  if (a2)
  {
    swift_getObjectType();
    v8 = sub_23BB8A988();
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v4[18] = v8;
  v4[19] = v10;
  return swift_task_switch();
}

uint64_t sub_23BB7D3A8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 160) = sub_23BB8B114();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF28);
  sub_23B996E1C(&qword_256A64A10, &qword_256A5DF28, MEMORY[0x24BEE6A88]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = sub_23BB7D454;
  return sub_23BB8A9D0();
}

uint64_t sub_23BB7D454()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 160))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_23BB7D4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 48);
    sub_23B989D60(v3, &qword_256A64A08);
    v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 136), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)sub_23BB8AF64();
    *(_QWORD *)(v0 + 176) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v13;
    *v13 = v0;
    v13[1] = sub_23BB7D640;
    return ((uint64_t (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_23BB7D640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23BB7D6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_23B989D60(v1, &qword_256A64160);
    *(_QWORD *)(v0 + 160) = sub_23BB8B114();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF28);
    sub_23B996E1C(&qword_256A64A10, &qword_256A5DF28, MEMORY[0x24BEE6A88]);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v4;
    *v4 = v0;
    v4[1] = sub_23BB7D454;
    return sub_23BB8A9D0();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    sub_23B989CA4(v1, v6, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t static PeopleRelationshipsProvider.live()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = sub_23BB88AE0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_23BB88AF8();
  v1[6] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[7] = sub_23BB8A9E8();
  v1[8] = sub_23BB8A988();
  v1[9] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB7D8D4()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[4] + 104))(v0[5], *MEMORY[0x24BE31D60], v0[3]);
  sub_23BB88B04();
  sub_23BB88D8C();
  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = v1;
  *v1 = v0;
  v1[1] = sub_23BB7D968;
  return sub_23BB88D98();
}

uint64_t sub_23BB7D968(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB7D9C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = &unk_256A64990;
  v2[1] = v1;
  v2[2] = &unk_256A649A0;
  v2[3] = v1;
  v2[4] = sub_23BAC9B50;
  v2[5] = 0;
  swift_retain();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB7DA40(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v1[2] = sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_23BB030B0;
  return sub_23BB7DB0C(a1);
}

uint64_t sub_23BB7DAB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B97C964;
  return sub_23BB7DA40(a1);
}

uint64_t sub_23BB7DB0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[3] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649B0);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A649B8) - 8);
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 + 64);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED0);
  v1[12] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649C0);
  v1[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[14] = v5;
  v1[15] = *(_QWORD *)(v5 + 64);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v1[18] = v6;
  *v6 = v1;
  v6[1] = sub_23BB7DC64;
  return sub_23BB88CE4();
}

uint64_t sub_23BB7DC64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB7DCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 24);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  sub_23B996E1C(&qword_256A5DF08, &qword_256A5DED0, MEMORY[0x24BEE6AA8]);
  v13 = v1;
  sub_23BB8B144();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  *(_QWORD *)(swift_task_alloc() + 16) = v3;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BEE6A10], v6);
  sub_23BB8AA6C();
  swift_task_dealloc();
  v8 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v14, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v16, v1, v15);
  sub_23B989EFC(v3, v17, &qword_256A649B8);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = (v19 + *(unsigned __int8 *)(v18 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v11 + v9, v16, v15);
  sub_23B990D24(v17, v11 + v10, &qword_256A649B8);
  sub_23B989F54(v14, (uint64_t)&unk_256A649E0, v11);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v15);
  sub_23B989D60(v3, &qword_256A649B8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB7DF5C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB7DFE0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BB03848;
  return sub_23BB88CC0();
}

uint64_t sub_23BB7E048()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BB7DFE0();
}

uint64_t sub_23BB7E090@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  FindMyUICore::Handle v67;

  v62 = a1;
  v55 = sub_23BB88C78();
  v58 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55, v1);
  v57 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A18);
  MEMORY[0x24BDAC7A8](v3, v4);
  v56 = (uint64_t *)((char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6, v7);
  v59 = (uint64_t *)((char *)&v55 - v8);
  v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v55 - v15;
  v17 = sub_23BB88C48();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v55 - v24;
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v55 - v28;
  v30 = sub_23BB88B7C();
  v31 = *(_QWORD *)(v30 - 8);
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v35 = (char *)&v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v31 + 16))(v35, v63, v30, v33);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v35, v30);
  if (v36 != *MEMORY[0x24BE31EA8])
  {
    v41 = v21;
    v63 = v12;
    v43 = v56;
    v42 = v57;
    v44 = v58;
    if (v36 == *MEMORY[0x24BE31EB0])
    {
      (*(void (**)(char *, uint64_t))(v31 + 96))(v35, v30);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v41, v35, v17);
      sub_23BB88C30();
      v45._countAndFlagsBits = sub_23BB88C54();
      v67 = Handle.init(rawValue:)(v45);
      (*(void (**)(char *, uint64_t, _QWORD))(v44 + 8))(v42, v55, *(_QWORD *)&v67.kind);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v41, v17);
      v46 = v65;
      v47 = v66;
      v48 = v62;
      *v62 = v64;
      v48[1] = v46;
      *((_BYTE *)v48 + 16) = v47;
      v49 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
    }
    else
    {
      if (v36 != *MEMORY[0x24BE31EB8])
      {
        v52 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v62, 1, 1, v52);
        return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v35, v30);
      }
      (*(void (**)(char *, uint64_t))(v31 + 96))(v35, v30);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v35, v17);
      sub_23BB7EDFC(v43);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v17);
      v50 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v60 + 48))(v43, 1, v61);
      v48 = v62;
      if (v50 == 1)
      {
        sub_23B989D60((uint64_t)v43, &qword_256A64A18);
        v38 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
        v39 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
        v40 = v48;
        goto LABEL_10;
      }
      v54 = (uint64_t)v63;
      sub_23B989CA4((uint64_t)v43, (uint64_t)v63, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
      sub_23B989CA4(v54, (uint64_t)v48, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
      v49 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
    }
LABEL_13:
    swift_storeEnumTagMultiPayload();
    v39 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
    v40 = v48;
    v51 = 0;
    v38 = v49;
    return v39(v40, v51, 1, v38);
  }
  (*(void (**)(char *, uint64_t))(v31 + 96))(v35, v30);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v29, v35, v17);
  v37 = v59;
  sub_23BB7EDFC(v59);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v29, v17);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v60 + 48))(v37, 1, v61) != 1)
  {
    sub_23B989CA4((uint64_t)v37, (uint64_t)v16, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
    v48 = v62;
    sub_23B989CA4((uint64_t)v16, (uint64_t)v62, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship);
    v49 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
    goto LABEL_13;
  }
  sub_23B989D60((uint64_t)v37, &qword_256A64A18);
  v38 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  v39 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
  v40 = v62;
LABEL_10:
  v51 = 1;
  return v39(v40, v51, 1, v38);
}

uint64_t sub_23BB7E578(_QWORD *a1)
{
  uint64_t v1;

  sub_23BB7E090(a1);
  return sub_23BB064F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23BB7E5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23B989D60(a2, &qword_256A649B8);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649D0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_23BB7E624(uint64_t a1)
{
  uint64_t v1;

  return sub_23BB7E5B0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23BB7E62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[3] = a4;
  v5[4] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A649E8);
  v5[5] = swift_task_alloc();
  v6 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  v5[6] = v6;
  v5[7] = *(_QWORD *)(v6 - 8);
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A649B8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64160);
  v5[12] = swift_task_alloc();
  v5[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED0);
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF28);
  v5[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649F0);
  v5[16] = v7;
  v5[17] = *(_QWORD *)(v7 - 8);
  v5[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BB7E790()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A649C0);
  sub_23BB8AF4C();
  sub_23B996E1C(&qword_256A5DF08, &qword_256A5DED0, MEMORY[0x24BEE6AA8]);
  sub_23BB8AAD8();
  sub_23BB8AF64();
  sub_23BB8B12C();
  v3 = (char *)&dword_256A649F8 + dword_256A649F8;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_23BB7E8BC;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))v3)(*(_QWORD *)(v0 + 96), 0, 0, v0 + 16);
}

uint64_t sub_23BB7E8BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB7E910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;

  v1 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 48))(v1, 1, *(_QWORD *)(v0 + 48)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    sub_23B989EFC(v3, v2, &qword_256A649B8);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649D0);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
    v7 = *(_QWORD *)(v0 + 88);
    if (v6 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 88), &qword_256A649B8);
    }
    else
    {
      sub_23BB8AA48();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 32);
    sub_23B989CA4(v1, *(_QWORD *)(v0 + 72), type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    sub_23B989EFC(v9, v8, &qword_256A649B8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649D0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
    v14 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    if (v12 == 1)
    {
      v15 = *(_QWORD *)(v0 + 40);
      sub_23BB7ED7C(*(_QWORD *)(v0 + 72));
      sub_23B989D60(v13, &qword_256A649B8);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A00);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 40);
      sub_23BB7EDB8(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64));
      sub_23BB8AA3C();
      sub_23BB7ED7C(v14);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A64A00);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
    }
    sub_23B989D60(*(_QWORD *)(v0 + 40), &qword_256A649E8);
    v21 = (char *)&dword_256A649F8 + dword_256A649F8;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v20;
    *v20 = v0;
    v20[1] = sub_23BB7E8BC;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))v21)(*(_QWORD *)(v0 + 96), 0, 0, v0 + 16);
  }
}

uint64_t sub_23BB7EBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649C0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A649B8) - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A649D0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23BB7ECC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A649C0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A649B8) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B97C964;
  return sub_23BB7E62C(a1, v9, v10, v11, v12);
}

uint64_t sub_23BB7ED7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB7EDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB7EDFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  char v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  Swift::String v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 *v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  char v73;
  int v74;
  uint64_t v75;
  unsigned __int8 *v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 *v80;
  unsigned int v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 *v92;
  unsigned int v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  FindMyUICore::Handle v112;

  v106 = a1;
  v2 = sub_23BB88C78();
  v102 = *(_QWORD *)(v2 - 8);
  v103 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v105 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v101 = (char *)&v96 - v7;
  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v97 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDF0);
  MEMORY[0x24BDAC7A8](v104, v12);
  v14 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v100 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v99 = (uint64_t)&v96 - v20;
  MEMORY[0x24BDAC7A8](v21, v22);
  v98 = (uint64_t)&v96 - v23;
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v96 - v26;
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v96 - v30;
  MEMORY[0x24BDAC7A8](v32, v33);
  v107 = (char *)&v96 - v34;
  v35 = sub_23BB88AD4();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v41);
  v43 = (char *)&v96 - v42;
  v108 = v1;
  sub_23BB88C18();
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v39, v43, v35);
  v44 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v44 == *MEMORY[0x24BE31D40])
  {
    v45 = 0;
  }
  else if (v44 == *MEMORY[0x24BE31D48])
  {
    v45 = 1;
  }
  else if (v44 == *MEMORY[0x24BE31D28])
  {
    v45 = 2;
  }
  else if (v44 == *MEMORY[0x24BE31D30])
  {
    v45 = 3;
  }
  else
  {
    if (v44 != *MEMORY[0x24BE31D20])
    {
      v83 = *(void (**)(char *, uint64_t))(v36 + 8);
      v83(v39, v35);
      v83(v43, v35);
      v84 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v106, 1, 1, v84);
    }
    v45 = 4;
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v43, v35);
  sub_23BB88C24();
  sub_23BB88870();
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v46(v27, 0, 1, v8);
  v47 = (uint64_t)&v14[*(int *)(v104 + 48)];
  sub_23B989EFC((uint64_t)v31, (uint64_t)v14, (uint64_t *)&unk_256A5E6B0);
  sub_23B989EFC((uint64_t)v27, v47, (uint64_t *)&unk_256A5E6B0);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v48((uint64_t)v14, 1, v8) != 1)
  {
    v52 = v98;
    sub_23B989EFC((uint64_t)v14, v98, (uint64_t *)&unk_256A5E6B0);
    if (v48(v47, 1, v8) != 1)
    {
      v53 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v97, v47, v8);
      sub_23BAA8D10();
      LODWORD(v104) = sub_23BB8A760();
      v54 = *(void (**)(char *, uint64_t))(v9 + 8);
      v54(v53, v8);
      sub_23B989D60((uint64_t)v27, (uint64_t *)&unk_256A5E6B0);
      sub_23B989D60((uint64_t)v31, (uint64_t *)&unk_256A5E6B0);
      v54((char *)v52, v8);
      sub_23B989D60((uint64_t)v14, (uint64_t *)&unk_256A5E6B0);
      v49 = v102;
      v50 = v103;
      v51 = v101;
      if ((v104 & 1) != 0)
        goto LABEL_19;
LABEL_17:
      sub_23BB88C24();
      goto LABEL_20;
    }
    sub_23B989D60((uint64_t)v27, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60((uint64_t)v31, (uint64_t *)&unk_256A5E6B0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v52, v8);
LABEL_16:
    sub_23B989D60((uint64_t)v14, &qword_256A5DDF0);
    v49 = v102;
    v50 = v103;
    v51 = v101;
    goto LABEL_17;
  }
  sub_23B989D60((uint64_t)v27, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60((uint64_t)v31, (uint64_t *)&unk_256A5E6B0);
  if (v48(v47, 1, v8) != 1)
    goto LABEL_16;
  sub_23B989D60((uint64_t)v14, (uint64_t *)&unk_256A5E6B0);
  v49 = v102;
  v50 = v103;
  v51 = v101;
LABEL_19:
  v46(v107, 1, 1, v8);
LABEL_20:
  sub_23BB88C30();
  v55._countAndFlagsBits = sub_23BB88C54();
  v112 = Handle.init(rawValue:)(v55);
  v56 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
  ((void (*)(char *, uint64_t, _QWORD))v56)(v51, v50, *(_QWORD *)&v112.kind);
  v58 = v109;
  v57 = v110;
  v59 = v111;
  v60 = v105;
  sub_23BB88C30();
  v61 = sub_23BB88C60();
  v63 = v62;
  result = v56(v60, v50);
  v108 = v57;
  v104 = v58;
  if (!v63)
  {
    v72 = v59;
    v73 = v45;
LABEL_31:
    v69 = 0;
    LOBYTE(v74) = 1;
LABEL_70:
    v86 = (uint64_t)v107;
    v87 = v99;
    sub_23B989EFC((uint64_t)v107, v99, (uint64_t *)&unk_256A5E6B0);
    v88 = (uint64_t)v100;
    sub_23BB88C3C();
    sub_23B989D60(v86, (uint64_t *)&unk_256A5E6B0);
    v89 = v106;
    v90 = v108;
    *v106 = v104;
    v89[1] = v90;
    *((_BYTE *)v89 + 16) = v72;
    *((_BYTE *)v89 + 17) = v73;
    v89[3] = v69;
    *((_BYTE *)v89 + 32) = v74 & 1;
    v91 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
    sub_23B990D24(v87, (uint64_t)v89 + *(int *)(v91 + 28), (uint64_t *)&unk_256A5E6B0);
    sub_23B990D24(v88, (uint64_t)v89 + *(int *)(v91 + 32), (uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v89, 0, 1, v91);
  }
  v65 = HIBYTE(v63) & 0xF;
  v66 = v61 & 0xFFFFFFFFFFFFLL;
  if ((v63 & 0x2000000000000000) != 0)
    v67 = HIBYTE(v63) & 0xF;
  else
    v67 = v61 & 0xFFFFFFFFFFFFLL;
  if (!v67)
  {
    v72 = v59;
    v73 = v45;
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if ((v63 & 0x1000000000000000) != 0)
  {
    v72 = v59;
    swift_bridgeObjectRetain();
    v69 = (uint64_t)sub_23BB7F820(v61, v63, 10);
    v71 = v95;
    swift_bridgeObjectRelease_n();
LABEL_68:
    v73 = v45;
    v74 = v71 & 1;
    if (v74)
      v69 = 0;
    goto LABEL_70;
  }
  if ((v63 & 0x2000000000000000) == 0)
  {
    if ((v61 & 0x1000000000000000) != 0)
      v68 = (unsigned __int8 *)((v63 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v68 = (unsigned __int8 *)sub_23BB8AE8C();
    v69 = (uint64_t)sub_23BB7F904(v68, v66, 10);
    v71 = v70 & 1;
    goto LABEL_67;
  }
  v109 = v61;
  v110 = v63 & 0xFFFFFFFFFFFFFFLL;
  if (v61 == 43)
  {
    if (!v65)
      goto LABEL_81;
    if (v65 == 1 || (BYTE1(v61) - 48) > 9u)
      goto LABEL_53;
    v69 = (BYTE1(v61) - 48);
    if (v65 != 2)
    {
      if ((BYTE2(v61) - 48) > 9u)
        goto LABEL_53;
      v69 = 10 * (BYTE1(v61) - 48) + (BYTE2(v61) - 48);
      v75 = v65 - 3;
      if (v75)
      {
        v76 = (unsigned __int8 *)&v109 + 3;
        while (1)
        {
          v77 = *v76 - 48;
          if (v77 > 9)
            goto LABEL_53;
          v78 = 10 * v69;
          if ((unsigned __int128)(v69 * (__int128)10) >> 64 != (10 * v69) >> 63)
            goto LABEL_53;
          v69 = v78 + v77;
          if (__OFADD__(v78, v77))
            goto LABEL_53;
          v71 = 0;
          ++v76;
          if (!--v75)
            goto LABEL_67;
        }
      }
    }
LABEL_66:
    v71 = 0;
    goto LABEL_67;
  }
  if (v61 != 45)
  {
    if (!v65 || (v61 - 48) > 9u)
      goto LABEL_53;
    v69 = (v61 - 48);
    if (v65 != 1)
    {
      if ((BYTE1(v61) - 48) > 9u)
        goto LABEL_53;
      v69 = 10 * (v61 - 48) + (BYTE1(v61) - 48);
      v79 = v65 - 2;
      if (v79)
      {
        v80 = (unsigned __int8 *)&v109 + 2;
        while (1)
        {
          v81 = *v80 - 48;
          if (v81 > 9)
            goto LABEL_53;
          v82 = 10 * v69;
          if ((unsigned __int128)(v69 * (__int128)10) >> 64 != (10 * v69) >> 63)
            goto LABEL_53;
          v69 = v82 + v81;
          if (__OFADD__(v82, v81))
            goto LABEL_53;
          v71 = 0;
          ++v80;
          if (!--v79)
            goto LABEL_67;
        }
      }
    }
    goto LABEL_66;
  }
  if (v65)
  {
    if (v65 != 1 && (BYTE1(v61) - 48) <= 9u)
    {
      if (v65 == 2)
      {
        v71 = 0;
        v69 = -(uint64_t)(BYTE1(v61) - 48);
LABEL_67:
        v72 = v59;
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
      if ((BYTE2(v61) - 48) <= 9u)
      {
        v69 = -10 * (BYTE1(v61) - 48) - (BYTE2(v61) - 48);
        v85 = v65 - 3;
        if (!v85)
          goto LABEL_66;
        v92 = (unsigned __int8 *)&v109 + 3;
        while (1)
        {
          v93 = *v92 - 48;
          if (v93 > 9)
            break;
          v94 = 10 * v69;
          if ((unsigned __int128)(v69 * (__int128)10) >> 64 != (10 * v69) >> 63)
            break;
          v69 = v94 - v93;
          if (__OFSUB__(v94, v93))
            break;
          v71 = 0;
          ++v92;
          if (!--v85)
            goto LABEL_67;
        }
      }
    }
LABEL_53:
    v69 = 0;
    v71 = 1;
    goto LABEL_67;
  }
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

_QWORD *sub_23BB7F744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A64968);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23BB7F7A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23BB8A874();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24260C79C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_23BB7F820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23BB8A880();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23BB7FB80();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23BB8AE8C();
  }
LABEL_7:
  v11 = sub_23BB7F904(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_23BB7F904(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23BB7FB80()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_23BB8A88C();
  v4 = sub_23BB7FBFC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23BB7FBFC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23BB7FD40(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23BB7F744(v9, 0);
      v12 = sub_23BB7FE2C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x24260C748](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24260C748);
LABEL_9:
      sub_23BB8AE8C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24260C748]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23BB7FD40(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23BB7F7A8(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23BB7F7A8(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_23BB8A85C();
  }
  __break(1u);
  return result;
}

unint64_t sub_23BB7FE2C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23BB7F7A8(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_23BB8A868();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_23BB8AE8C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23BB7F7A8(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_23BB8A844();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t PersonDetailsController.State.Loaded.init(personInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B989CA4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
}

uint64_t PersonDetailsController.State.Loaded.personInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B989CE8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
}

uint64_t PersonDetailsController.State.Loaded.personInfo.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23BB8008C(a1, v1);
}

uint64_t sub_23BB8008C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PersonDetailsController.State.Loaded.personInfo.modify())()
{
  return nullsub_1;
}

uint64_t PersonDetailsController.State.loaded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for PersonDetailsController.State(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v1, (uint64_t)v6, v7);
  v8 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    sub_23B989CA4((uint64_t)v6, a1, type metadata accessor for PersonDetailsController.State.Loaded);
    v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, v10, 1, v8);
}

uint64_t type metadata accessor for PersonDetailsController.State(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A64AC8);
}

uint64_t type metadata accessor for PersonDetailsController.State.Loaded(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A64B30);
}

uint64_t *_s5StateOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  id v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void *v95;
  void (*v96)(char *, _QWORD, uint64_t, uint64_t);
  id v97;
  id v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  void (*v115)(char *, _QWORD, uint64_t, uint64_t);
  id v116;
  id v117;
  unsigned int (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  int *v121;
  int *v122;
  int *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    return a1;
  }
  v125 = v8;
  v126 = v7;
  v10 = a2[1];
  *a1 = *a2;
  a1[1] = v10;
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v11 = (int *)type metadata accessor for PersonInfo();
  v12 = v11[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v16;
    v13[16] = v14[16];
    v123 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v17 = v123[5];
    v18 = &v13[v17];
    v19 = &v14[v17];
    v20 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v25 = sub_23BB88984();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v25))
        goto LABEL_13;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          goto LABEL_25;
        }
        v121 = v11;
        v22 = sub_23BB88984();
        v23 = *(_QWORD *)(v22 - 8);
        v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        if (v119(v19, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v19, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
        }
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        v29 = &v18[v28];
        v30 = &v19[v28];
        if (v119(v30, 1, v22))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v29, v30, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
        }
        v11 = v121;
LABEL_24:
        swift_storeEnumTagMultiPayload();
LABEL_25:
        v32 = v123[6];
        v33 = &v13[v32];
        v34 = &v14[v32];
        v35 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v36 = swift_getEnumCaseMultiPayload();
        if (v36 == 1)
        {
          v41 = sub_23BB88984();
          v42 = *(_QWORD *)(v41 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v34, 1, v41))
          {
            v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v33, v34, v41);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v33, 0, 1, v41);
          }
        }
        else
        {
          if (v36)
          {
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_39:
            v48 = v123[7];
            v49 = &v13[v48];
            v50 = &v14[v48];
            *(_QWORD *)v49 = *(_QWORD *)v50;
            v49[8] = v50[8];
            swift_storeEnumTagMultiPayload();
            goto LABEL_40;
          }
          v122 = v11;
          v37 = sub_23BB88984();
          v38 = *(_QWORD *)(v37 - 8);
          v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
          v120 = v38;
          if (v39(v34, 1, v37))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v33, v34, v37);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v37);
          }
          v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v45 = &v33[v44];
          v46 = &v34[v44];
          if (v39(v46, 1, v37))
          {
            v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v45, v46, v37);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v45, 0, 1, v37);
          }
          v11 = v122;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_39;
      }
      v25 = sub_23BB88984();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v25))
      {
LABEL_13:
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        goto LABEL_24;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v18, v19, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
    goto LABEL_24;
  }
  memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_40:
  v51 = v11[6];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = (void *)*((_QWORD *)v53 + 1);
  if (v54 == (void *)1)
  {
    v55 = *((_OWORD *)v53 + 7);
    *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
    *((_OWORD *)v52 + 7) = v55;
    *((_QWORD *)v52 + 16) = *((_QWORD *)v53 + 16);
    v56 = *((_OWORD *)v53 + 3);
    *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
    *((_OWORD *)v52 + 3) = v56;
    v57 = *((_OWORD *)v53 + 5);
    *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
    *((_OWORD *)v52 + 5) = v57;
    v58 = *((_OWORD *)v53 + 1);
    *(_OWORD *)v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v58;
  }
  else
  {
    *v52 = *v53;
    if (v54)
    {
      *((_QWORD *)v52 + 1) = v54;
      v52[16] = v53[16];
      v59 = *((_QWORD *)v53 + 4);
      *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
      *((_QWORD *)v52 + 4) = v59;
      v60 = *((_QWORD *)v53 + 6);
      *((_QWORD *)v52 + 5) = *((_QWORD *)v53 + 5);
      *((_QWORD *)v52 + 6) = v60;
      v61 = *((_QWORD *)v53 + 8);
      *((_QWORD *)v52 + 7) = *((_QWORD *)v53 + 7);
      *((_QWORD *)v52 + 8) = v61;
      v62 = *((_QWORD *)v53 + 10);
      *((_QWORD *)v52 + 9) = *((_QWORD *)v53 + 9);
      *((_QWORD *)v52 + 10) = v62;
      v63 = *((_QWORD *)v53 + 12);
      *((_QWORD *)v52 + 11) = *((_QWORD *)v53 + 11);
      *((_QWORD *)v52 + 12) = v63;
      v64 = *((_QWORD *)v53 + 14);
      *((_QWORD *)v52 + 13) = *((_QWORD *)v53 + 13);
      *((_QWORD *)v52 + 14) = v64;
      v65 = v11;
      v66 = *((_QWORD *)v53 + 16);
      *((_QWORD *)v52 + 15) = *((_QWORD *)v53 + 15);
      *((_QWORD *)v52 + 16) = v66;
      v67 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = v65;
      swift_bridgeObjectRetain();
    }
    else
    {
      v68 = *(_OWORD *)(v53 + 88);
      *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
      *(_OWORD *)(v52 + 88) = v68;
      v69 = *(_OWORD *)(v53 + 120);
      *(_OWORD *)(v52 + 104) = *(_OWORD *)(v53 + 104);
      *(_OWORD *)(v52 + 120) = v69;
      v70 = *(_OWORD *)(v53 + 24);
      *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
      *(_OWORD *)(v52 + 24) = v70;
      v71 = *(_OWORD *)(v53 + 56);
      *(_OWORD *)(v52 + 40) = *(_OWORD *)(v53 + 40);
      *(_OWORD *)(v52 + 56) = v71;
    }
  }
  v72 = v11[7];
  v73 = *(void **)((char *)a2 + v72);
  *(uint64_t *)((char *)a1 + v72) = (uint64_t)v73;
  v74 = v11[8];
  v75 = *(void **)((char *)a2 + v74);
  *(uint64_t *)((char *)a1 + v74) = (uint64_t)v75;
  v76 = v11[9];
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  v79 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  v82 = v73;
  v83 = v75;
  if (v81(v78, 1, v79))
  {
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    v85 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v86 = *(_QWORD *)(v85 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v78, 1, v85))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v88 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v77, v78, v88);
      v89 = *(int *)(v85 + 20);
      v90 = *(void **)&v78[v89];
      *(_QWORD *)&v77[v89] = v90;
      v91 = *(int *)(v85 + 24);
      v92 = &v77[v91];
      v93 = &v78[v91];
      v94 = *((_QWORD *)v93 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v94;
      v95 = (void *)*((_QWORD *)v93 + 2);
      *((_QWORD *)v92 + 2) = v95;
      v96 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56);
      v97 = v90;
      swift_bridgeObjectRetain();
      v98 = v95;
      v96(v77, 0, 1, v85);
    }
    v99 = *(int *)(v79 + 20);
    v100 = &v77[v99];
    v101 = &v78[v99];
    v102 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v103 = *(_QWORD *)(v102 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      v105 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v100, v101, v105);
      v106 = *(int *)(v85 + 20);
      v107 = *(void **)&v101[v106];
      *(_QWORD *)&v100[v106] = v107;
      v108 = *(int *)(v85 + 24);
      v109 = &v100[v108];
      v110 = &v101[v108];
      v111 = *((_QWORD *)v110 + 1);
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = v111;
      v124 = (void *)*((_QWORD *)v110 + 2);
      *((_QWORD *)v109 + 2) = v124;
      v112 = *(int *)(v102 + 20);
      v113 = &v100[v112];
      v114 = &v101[v112];
      *(_OWORD *)v113 = *(_OWORD *)v114;
      *((_QWORD *)v113 + 2) = *((_QWORD *)v114 + 2);
      v115 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56);
      v116 = v107;
      swift_bridgeObjectRetain();
      v117 = v124;
      v115(v100, 0, 1, v102);
    }
    v77[*(int *)(v79 + 24)] = v78[*(int *)(v79 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v125 + 56))(a1, 0, 1, v126);
  return a1;
}

void _s5StateOwxx_0(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
    return;
  swift_bridgeObjectRelease();
  v3 = (int *)type metadata accessor for PersonInfo();
  v4 = a1 + v3[5];
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    goto LABEL_20;
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v6 = v4 + *(int *)(v5 + 20);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v8 = sub_23BB88984();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (v10(v6, 1, v8))
      goto LABEL_12;
    goto LABEL_11;
  }
  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
LABEL_11:
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
LABEL_12:
  v11 = v4 + *(int *)(v5 + 24);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v12 = swift_getEnumCaseMultiPayload();
  if (v12 != 1)
  {
    if (v12)
      goto LABEL_20;
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v11, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    v11 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (v15(v11, 1, v13))
      goto LABEL_20;
    goto LABEL_19;
  }
  v13 = sub_23BB88984();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
LABEL_19:
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
LABEL_20:
  v16 = *(void **)(a1 + v3[6] + 8);
  if ((unint64_t)v16 >= 2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v17 = a1 + v3[9];
  v18 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v19 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v17, 1, v19))
    {
      v20 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);

      v21 = v17 + *(int *)(v19 + 24);
      swift_bridgeObjectRelease();

    }
    v22 = v17 + *(int *)(v18 + 20);
    v23 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
    {
      v24 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);

      v25 = v22 + *(int *)(v19 + 24);
      swift_bridgeObjectRelease();

    }
  }
}

_QWORD *_s5StateOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void *v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  id v95;
  id v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, _QWORD, uint64_t, uint64_t);
  id v114;
  id v115;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  int *v119;
  int *v120;
  int *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;

  v6 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v123 = v7;
  v124 = v6;
  v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v9 = (int *)type metadata accessor for PersonInfo();
  v10 = v9[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v14;
    v11[16] = v12[16];
    v121 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v15 = v121[5];
    v16 = &v11[v15];
    v17 = &v12[v15];
    v18 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23))
        goto LABEL_11;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_23;
        }
        v119 = v9;
        v20 = sub_23BB88984();
        v21 = *(_QWORD *)(v20 - 8);
        v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        if (v117(v17, 1, v20))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v17, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
        }
        v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        v27 = &v16[v26];
        v28 = &v17[v26];
        if (v117(v28, 1, v20))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v27, v28, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
        }
        v9 = v119;
LABEL_22:
        swift_storeEnumTagMultiPayload();
LABEL_23:
        v30 = v121[6];
        v31 = &v11[v30];
        v32 = &v12[v30];
        v33 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 1)
        {
          v39 = sub_23BB88984();
          v40 = *(_QWORD *)(v39 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v32, 1, v39))
          {
            v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v31, v32, v39);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v31, 0, 1, v39);
          }
        }
        else
        {
          if (v34)
          {
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_37:
            v46 = v121[7];
            v47 = &v11[v46];
            v48 = &v12[v46];
            *(_QWORD *)v47 = *(_QWORD *)v48;
            v47[8] = v48[8];
            swift_storeEnumTagMultiPayload();
            goto LABEL_38;
          }
          v120 = v9;
          v35 = sub_23BB88984();
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
          v118 = v36;
          if (v37(v32, 1, v35))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v31, v32, v35);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
          }
          v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v43 = &v31[v42];
          v44 = &v32[v42];
          if (v37(v44, 1, v35))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v43, v44, v35);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v43, 0, 1, v35);
          }
          v9 = v120;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      }
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23))
      {
LABEL_11:
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        goto LABEL_22;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v16, v17, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v23);
    goto LABEL_22;
  }
  memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_38:
  v49 = v9[6];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = (void *)*((_QWORD *)v51 + 1);
  if (v52 == (void *)1)
  {
    v53 = *((_OWORD *)v51 + 7);
    *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
    *((_OWORD *)v50 + 7) = v53;
    *((_QWORD *)v50 + 16) = *((_QWORD *)v51 + 16);
    v54 = *((_OWORD *)v51 + 3);
    *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
    *((_OWORD *)v50 + 3) = v54;
    v55 = *((_OWORD *)v51 + 5);
    *((_OWORD *)v50 + 4) = *((_OWORD *)v51 + 4);
    *((_OWORD *)v50 + 5) = v55;
    v56 = *((_OWORD *)v51 + 1);
    *(_OWORD *)v50 = *(_OWORD *)v51;
    *((_OWORD *)v50 + 1) = v56;
  }
  else
  {
    *v50 = *v51;
    if (v52)
    {
      *((_QWORD *)v50 + 1) = v52;
      v50[16] = v51[16];
      v57 = *((_QWORD *)v51 + 4);
      *((_QWORD *)v50 + 3) = *((_QWORD *)v51 + 3);
      *((_QWORD *)v50 + 4) = v57;
      v58 = *((_QWORD *)v51 + 6);
      *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
      *((_QWORD *)v50 + 6) = v58;
      v59 = *((_QWORD *)v51 + 8);
      *((_QWORD *)v50 + 7) = *((_QWORD *)v51 + 7);
      *((_QWORD *)v50 + 8) = v59;
      v60 = *((_QWORD *)v51 + 10);
      *((_QWORD *)v50 + 9) = *((_QWORD *)v51 + 9);
      *((_QWORD *)v50 + 10) = v60;
      v61 = *((_QWORD *)v51 + 12);
      *((_QWORD *)v50 + 11) = *((_QWORD *)v51 + 11);
      *((_QWORD *)v50 + 12) = v61;
      v62 = *((_QWORD *)v51 + 14);
      *((_QWORD *)v50 + 13) = *((_QWORD *)v51 + 13);
      *((_QWORD *)v50 + 14) = v62;
      v63 = v9;
      v64 = *((_QWORD *)v51 + 16);
      *((_QWORD *)v50 + 15) = *((_QWORD *)v51 + 15);
      *((_QWORD *)v50 + 16) = v64;
      v65 = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = v63;
      swift_bridgeObjectRetain();
    }
    else
    {
      v66 = *(_OWORD *)(v51 + 88);
      *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
      *(_OWORD *)(v50 + 88) = v66;
      v67 = *(_OWORD *)(v51 + 120);
      *(_OWORD *)(v50 + 104) = *(_OWORD *)(v51 + 104);
      *(_OWORD *)(v50 + 120) = v67;
      v68 = *(_OWORD *)(v51 + 24);
      *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
      *(_OWORD *)(v50 + 24) = v68;
      v69 = *(_OWORD *)(v51 + 56);
      *(_OWORD *)(v50 + 40) = *(_OWORD *)(v51 + 40);
      *(_OWORD *)(v50 + 56) = v69;
    }
  }
  v70 = v9[7];
  v71 = *(void **)((char *)a2 + v70);
  *(_QWORD *)((char *)a1 + v70) = v71;
  v72 = v9[8];
  v73 = *(void **)((char *)a2 + v72);
  *(_QWORD *)((char *)a1 + v72) = v73;
  v74 = v9[9];
  v75 = (char *)a1 + v74;
  v76 = (char *)a2 + v74;
  v77 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  v80 = v71;
  v81 = v73;
  if (v79(v76, 1, v77))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v83 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v76, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v86 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v75, v76, v86);
      v87 = *(int *)(v83 + 20);
      v88 = *(void **)&v76[v87];
      *(_QWORD *)&v75[v87] = v88;
      v89 = *(int *)(v83 + 24);
      v90 = &v75[v89];
      v91 = &v76[v89];
      v92 = *((_QWORD *)v91 + 1);
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *((_QWORD *)v90 + 1) = v92;
      v93 = (void *)*((_QWORD *)v91 + 2);
      *((_QWORD *)v90 + 2) = v93;
      v94 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56);
      v95 = v88;
      swift_bridgeObjectRetain();
      v96 = v93;
      v94(v75, 0, 1, v83);
    }
    v97 = *(int *)(v77 + 20);
    v98 = &v75[v97];
    v99 = &v76[v97];
    v100 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v101 = *(_QWORD *)(v100 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v103 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v98, v99, v103);
      v104 = *(int *)(v83 + 20);
      v105 = *(void **)&v99[v104];
      *(_QWORD *)&v98[v104] = v105;
      v106 = *(int *)(v83 + 24);
      v107 = &v98[v106];
      v108 = &v99[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v122 = (void *)*((_QWORD *)v108 + 2);
      *((_QWORD *)v107 + 2) = v122;
      v110 = *(int *)(v100 + 20);
      v111 = &v98[v110];
      v112 = &v99[v110];
      *(_OWORD *)v111 = *(_OWORD *)v112;
      *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
      v113 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56);
      v114 = v105;
      swift_bridgeObjectRetain();
      v115 = v122;
      v113(v98, 0, 1, v100);
    }
    v75[*(int *)(v77 + 24)] = v76[*(int *)(v77 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v123 + 56))(a1, 0, 1, v124);
  return a1;
}

uint64_t _s5StateOwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  void *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  void *v86;
  id v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  void *v116;
  void (*v117)(char *, _QWORD, uint64_t, uint64_t);
  id v118;
  id v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  void (*v136)(char *, _QWORD, uint64_t, uint64_t);
  id v137;
  id v138;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int (*v151)(char *, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  void *v183;
  id v184;
  id v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  uint64_t v198;
  void *v199;
  void *v200;
  id v201;
  uint64_t v202;
  void *v203;
  void *v204;
  id v205;
  uint64_t v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)(_BYTE *, uint64_t, uint64_t);
  int v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t (*v218)(_BYTE *, uint64_t, uint64_t);
  int v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  void *v227;
  void (*v228)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  void *v237;
  void (*v238)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v239;
  id v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  void (*v257)(char *, _QWORD, uint64_t, uint64_t);
  id v258;
  id v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t (*v266)(char *, uint64_t, uint64_t);
  int v267;
  int v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  void *v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  void (*v280)(char *, _QWORD, uint64_t, uint64_t);
  id v281;
  id v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void *v286;
  void *v287;
  id v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  void *v292;
  void *v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  void *v297;
  void *v298;
  id v299;
  uint64_t v300;
  char *v301;
  char *v302;
  void *v303;
  void *v304;
  id v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  void (**__dsta)(void *, const void *, uint64_t);
  char *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  unsigned int (*v315)(char *, uint64_t, uint64_t);
  uint64_t v316;
  int *v317;
  void *v318;
  int *v319;
  int *v320;
  uint64_t v321;
  uint64_t v322;
  int *v323;
  uint64_t v324;
  void *v325;

  v6 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v322 = v7;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v11 = (int *)type metadata accessor for PersonInfo();
      v12 = v11[5];
      v13 = (_QWORD *)(a1 + v12);
      v14 = (_QWORD *)(a2 + v12);
      v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_58:
        v77 = v11[6];
        v78 = a1 + v77;
        v79 = a2 + v77;
        if (*(_QWORD *)(v79 + 8) == 1)
        {
          *(_OWORD *)v78 = *(_OWORD *)v79;
          v80 = *(_OWORD *)(v79 + 16);
          v81 = *(_OWORD *)(v79 + 32);
          v82 = *(_OWORD *)(v79 + 64);
          *(_OWORD *)(v78 + 48) = *(_OWORD *)(v79 + 48);
          *(_OWORD *)(v78 + 64) = v82;
          *(_OWORD *)(v78 + 16) = v80;
          *(_OWORD *)(v78 + 32) = v81;
          v83 = *(_OWORD *)(v79 + 80);
          v84 = *(_OWORD *)(v79 + 96);
          v85 = *(_OWORD *)(v79 + 112);
          *(_QWORD *)(v78 + 128) = *(_QWORD *)(v79 + 128);
          *(_OWORD *)(v78 + 96) = v84;
          *(_OWORD *)(v78 + 112) = v85;
          *(_OWORD *)(v78 + 80) = v83;
        }
        else
        {
          *(_BYTE *)v78 = *(_BYTE *)v79;
          v86 = *(void **)(v79 + 8);
          if (v86)
          {
            *(_QWORD *)(v78 + 8) = v86;
            *(_BYTE *)(v78 + 16) = *(_BYTE *)(v79 + 16);
            *(_QWORD *)(v78 + 24) = *(_QWORD *)(v79 + 24);
            *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
            *(_QWORD *)(v78 + 40) = *(_QWORD *)(v79 + 40);
            *(_QWORD *)(v78 + 48) = *(_QWORD *)(v79 + 48);
            *(_QWORD *)(v78 + 56) = *(_QWORD *)(v79 + 56);
            *(_QWORD *)(v78 + 64) = *(_QWORD *)(v79 + 64);
            *(_QWORD *)(v78 + 72) = *(_QWORD *)(v79 + 72);
            *(_QWORD *)(v78 + 80) = *(_QWORD *)(v79 + 80);
            *(_QWORD *)(v78 + 88) = *(_QWORD *)(v79 + 88);
            *(_QWORD *)(v78 + 96) = *(_QWORD *)(v79 + 96);
            *(_QWORD *)(v78 + 104) = *(_QWORD *)(v79 + 104);
            *(_QWORD *)(v78 + 112) = *(_QWORD *)(v79 + 112);
            *(_QWORD *)(v78 + 120) = *(_QWORD *)(v79 + 120);
            *(_QWORD *)(v78 + 128) = *(_QWORD *)(v79 + 128);
            v87 = v86;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v88 = *(_OWORD *)(v79 + 8);
            v89 = *(_OWORD *)(v79 + 24);
            v90 = *(_OWORD *)(v79 + 56);
            *(_OWORD *)(v78 + 40) = *(_OWORD *)(v79 + 40);
            *(_OWORD *)(v78 + 56) = v90;
            *(_OWORD *)(v78 + 8) = v88;
            *(_OWORD *)(v78 + 24) = v89;
            v91 = *(_OWORD *)(v79 + 72);
            v92 = *(_OWORD *)(v79 + 88);
            v93 = *(_OWORD *)(v79 + 120);
            *(_OWORD *)(v78 + 104) = *(_OWORD *)(v79 + 104);
            *(_OWORD *)(v78 + 120) = v93;
            *(_OWORD *)(v78 + 72) = v91;
            *(_OWORD *)(v78 + 88) = v92;
          }
        }
        v94 = v11[7];
        v95 = *(void **)(a2 + v94);
        *(_QWORD *)(a1 + v94) = v95;
        v96 = v11[8];
        v97 = *(void **)(a2 + v96);
        *(_QWORD *)(a1 + v96) = v97;
        v98 = v11[9];
        v99 = (char *)(a1 + v98);
        v100 = (char *)(a2 + v98);
        v101 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
        v102 = *(_QWORD *)(v101 - 8);
        v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
        v104 = v95;
        v105 = v97;
        if (v103(v100, 1, v101))
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
          memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          v321 = v102;
          v107 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
          v108 = *(_QWORD *)(v107 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v100, 1, v107))
          {
            v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
            memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
          }
          else
          {
            v110 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v99, v100, v110);
            v111 = *(int *)(v107 + 20);
            v112 = *(void **)&v100[v111];
            *(_QWORD *)&v99[v111] = v112;
            v113 = *(int *)(v107 + 24);
            v114 = &v99[v113];
            v115 = &v100[v113];
            *(_QWORD *)v114 = *(_QWORD *)v115;
            *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
            v116 = (void *)*((_QWORD *)v115 + 2);
            *((_QWORD *)v114 + 2) = v116;
            v117 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56);
            v118 = v112;
            swift_bridgeObjectRetain();
            v119 = v116;
            v117(v99, 0, 1, v107);
          }
          v120 = *(int *)(v101 + 20);
          v121 = &v99[v120];
          v122 = &v100[v120];
          v123 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
          v124 = *(_QWORD *)(v123 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
          {
            v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
            memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
          }
          else
          {
            v126 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v121, v122, v126);
            v127 = *(int *)(v107 + 20);
            v128 = *(void **)&v122[v127];
            *(_QWORD *)&v121[v127] = v128;
            v129 = *(int *)(v107 + 24);
            v130 = &v121[v129];
            v131 = &v122[v129];
            *(_QWORD *)v130 = *(_QWORD *)v131;
            *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
            v318 = (void *)*((_QWORD *)v131 + 2);
            *((_QWORD *)v130 + 2) = v318;
            v132 = *(int *)(v123 + 20);
            v133 = &v121[v132];
            v134 = &v122[v132];
            v135 = *((_QWORD *)v134 + 2);
            *(_OWORD *)v133 = *(_OWORD *)v134;
            *((_QWORD *)v133 + 2) = v135;
            v136 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56);
            v137 = v128;
            swift_bridgeObjectRetain();
            v138 = v318;
            v136(v121, 0, 1, v123);
          }
          v99[*(int *)(v101 + 24)] = v100[*(int *)(v101 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v321 + 56))(v99, 0, 1, v101);
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v322 + 56))(a1, 0, 1, v6);
        return a1;
      }
      v319 = v11;
      *v13 = *v14;
      v13[1] = v14[1];
      *((_BYTE *)v13 + 16) = *((_BYTE *)v14 + 16);
      v16 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      v17 = v16[5];
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
      swift_bridgeObjectRetain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v317 = v16;
      if (EnumCaseMultiPayload == 2)
      {
        v42 = sub_23BB88984();
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v19, 1, v42))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v18, v19, v42);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v18, 0, 1, v42);
        }
        v16 = v317;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v45 = sub_23BB88984();
        v46 = *(_QWORD *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v19, 1, v45))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v18, v19, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v18, 0, 1, v45);
        }
        v16 = v317;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_42:
          v58 = v16[6];
          v59 = (char *)v13 + v58;
          v60 = (char *)v14 + v58;
          v61 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
          v62 = swift_getEnumCaseMultiPayload();
          if (v62 == 1)
          {
            v66 = sub_23BB88984();
            v67 = *(_QWORD *)(v66 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v60, 1, v66))
            {
              v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v59, v60, v66);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v59, 0, 1, v66);
            }
            swift_storeEnumTagMultiPayload();
            v16 = v317;
            v11 = v319;
          }
          else
          {
            if (v62)
            {
              memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
            }
            else
            {
              v63 = sub_23BB88984();
              v64 = *(_QWORD *)(v63 - 8);
              __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
              v310 = v64;
              if (__dstc(v60, 1, v63))
              {
                v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
                memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v59, v60, v63);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v59, 0, 1, v63);
              }
              v69 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
              v70 = &v59[v69];
              v71 = &v60[v69];
              if (__dstc(v71, 1, v63))
              {
                v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
                memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v310 + 16))(v70, v71, v63);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v70, 0, 1, v63);
              }
              v16 = v317;
              swift_storeEnumTagMultiPayload();
            }
            v11 = v319;
          }
          v73 = v16[7];
          v74 = (char *)v13 + v73;
          v75 = (char *)v14 + v73;
          v76 = *(_QWORD *)v75;
          v74[8] = v75[8];
          *(_QWORD *)v74 = v76;
          swift_storeEnumTagMultiPayload();
          goto LABEL_58;
        }
        v22 = sub_23BB88984();
        v23 = *(_QWORD *)(v22 - 8);
        __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        v309 = v23;
        if (__dst(v19, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v19, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
        }
        v48 = __dst;
        v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        __dstb = &v18[v49];
        v50 = &v19[v49];
        if (v48(v50, 1, v22))
        {
          v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(__dstb, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v309 + 16))(__dstb, v50, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v309 + 56))(__dstb, 0, 1, v22);
        }
        v16 = v317;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_42;
    }
    goto LABEL_11;
  }
  if (v10)
  {
    sub_23B989D9C(a1, type metadata accessor for PersonDetailsController.State.Loaded);
LABEL_11:
    v25 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v26 = (void *)a1;
LABEL_12:
    memcpy(v26, (const void *)a2, v25);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v27 = type metadata accessor for PersonInfo();
  v28 = (int *)v27;
  if (a1 != a2)
  {
    v29 = *(int *)(v27 + 20);
    v30 = (_QWORD *)(a1 + v29);
    v31 = (_QWORD *)(a2 + v29);
    sub_23B989D9C(a1 + v29, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      goto LABEL_100;
    }
    v323 = v28;
    *v30 = *v31;
    v30[1] = v31[1];
    *((_BYTE *)v30 + 16) = *((_BYTE *)v31 + 16);
    v33 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v34 = v33[5];
    v35 = (char *)v30 + v34;
    v36 = (char *)v31 + v34;
    v37 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    v38 = swift_getEnumCaseMultiPayload();
    v320 = v33;
    if (v38 == 2)
    {
      v52 = sub_23BB88984();
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v36, 1, v52))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v35, v36, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v35, 0, 1, v52);
      }
      v33 = v320;
    }
    else if (v38 == 1)
    {
      v55 = sub_23BB88984();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v36, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v35, v36, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v35, 0, 1, v55);
      }
      v33 = v320;
    }
    else
    {
      if (v38)
      {
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        goto LABEL_84;
      }
      v39 = sub_23BB88984();
      v40 = *(_QWORD *)(v39 - 8);
      __dsta = (void (**)(void *, const void *, uint64_t))v40;
      v315 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v315(v36, 1, v39))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v35, v36, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v39);
      }
      v140 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v141 = &v35[v140];
      v142 = &v36[v140];
      if (v315(&v36[v140], 1, v39))
      {
        v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        __dsta[2](v141, v142, v39);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v141, 0, 1, v39);
      }
      v33 = v320;
    }
    swift_storeEnumTagMultiPayload();
LABEL_84:
    v144 = v33[6];
    v145 = (char *)v30 + v144;
    v146 = (char *)v31 + v144;
    v147 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v148 = swift_getEnumCaseMultiPayload();
    if (v148 == 1)
    {
      v153 = sub_23BB88984();
      v154 = *(_QWORD *)(v153 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v146, 1, v153))
      {
        v155 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v145, v146, v153);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v145, 0, 1, v153);
      }
      v33 = v320;
      v28 = v323;
    }
    else
    {
      if (v148)
      {
        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        v28 = v323;
LABEL_99:
        v160 = v33[7];
        v161 = (char *)v30 + v160;
        v162 = (char *)v31 + v160;
        v163 = *(_QWORD *)v162;
        v161[8] = v162[8];
        *(_QWORD *)v161 = v163;
        swift_storeEnumTagMultiPayload();
        goto LABEL_100;
      }
      v149 = sub_23BB88984();
      v150 = *(_QWORD *)(v149 - 8);
      v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
      v316 = v150;
      if (v151(v146, 1, v149))
      {
        v152 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v145, v146, v149);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v145, 0, 1, v149);
      }
      v156 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v157 = &v145[v156];
      v158 = &v146[v156];
      if (v151(v158, 1, v149))
      {
        v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v316 + 16))(v157, v158, v149);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v316 + 56))(v157, 0, 1, v149);
      }
      v33 = v320;
      v28 = v323;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_99;
  }
LABEL_100:
  v164 = v28[6];
  v165 = a1 + v164;
  v166 = a2 + v164;
  v167 = a1 + v164 + 8;
  v168 = *(id *)v167;
  v170 = a2 + v164 + 8;
  v169 = *(_QWORD *)v170;
  if (*(_QWORD *)v167 == 1)
  {
    if (v169 == 1)
    {
      *(_OWORD *)v165 = *(_OWORD *)v166;
      v171 = *(_OWORD *)(v166 + 16);
      v172 = *(_OWORD *)(v166 + 32);
      v173 = *(_OWORD *)(v166 + 64);
      *(_OWORD *)(v165 + 48) = *(_OWORD *)(v166 + 48);
      *(_OWORD *)(v165 + 64) = v173;
      *(_OWORD *)(v165 + 16) = v171;
      *(_OWORD *)(v165 + 32) = v172;
      v174 = *(_OWORD *)(v166 + 80);
      v175 = *(_OWORD *)(v166 + 96);
      v176 = *(_OWORD *)(v166 + 112);
      *(_QWORD *)(v165 + 128) = *(_QWORD *)(v166 + 128);
      *(_OWORD *)(v165 + 96) = v175;
      *(_OWORD *)(v165 + 112) = v176;
      *(_OWORD *)(v165 + 80) = v174;
      goto LABEL_113;
    }
    *(_BYTE *)v165 = *(_BYTE *)v166;
    v183 = *(void **)(v166 + 8);
    if (v183)
      goto LABEL_106;
LABEL_111:
    v186 = *(_OWORD *)v170;
    v187 = *(_OWORD *)(v170 + 16);
    v188 = *(_OWORD *)(v170 + 48);
    *(_OWORD *)(v167 + 32) = *(_OWORD *)(v170 + 32);
    *(_OWORD *)(v167 + 48) = v188;
    *(_OWORD *)v167 = v186;
    *(_OWORD *)(v167 + 16) = v187;
    v189 = *(_OWORD *)(v170 + 64);
    v190 = *(_OWORD *)(v170 + 80);
    v191 = *(_OWORD *)(v170 + 112);
    *(_OWORD *)(v167 + 96) = *(_OWORD *)(v170 + 96);
    *(_OWORD *)(v167 + 112) = v191;
    *(_OWORD *)(v167 + 64) = v189;
    *(_OWORD *)(v167 + 80) = v190;
    goto LABEL_113;
  }
  if (v169 == 1)
  {
    sub_23B9C1B2C(v165);
    *(_OWORD *)v165 = *(_OWORD *)v166;
    v177 = *(_OWORD *)(v166 + 64);
    v179 = *(_OWORD *)(v166 + 16);
    v178 = *(_OWORD *)(v166 + 32);
    *(_OWORD *)(v165 + 48) = *(_OWORD *)(v166 + 48);
    *(_OWORD *)(v165 + 64) = v177;
    *(_OWORD *)(v165 + 16) = v179;
    *(_OWORD *)(v165 + 32) = v178;
    v181 = *(_OWORD *)(v166 + 96);
    v180 = *(_OWORD *)(v166 + 112);
    v182 = *(_OWORD *)(v166 + 80);
    *(_QWORD *)(v165 + 128) = *(_QWORD *)(v166 + 128);
    *(_OWORD *)(v165 + 96) = v181;
    *(_OWORD *)(v165 + 112) = v180;
    *(_OWORD *)(v165 + 80) = v182;
    goto LABEL_113;
  }
  *(_BYTE *)v165 = *(_BYTE *)v166;
  v183 = *(void **)(v166 + 8);
  if (!v168)
  {
    if (v183)
    {
LABEL_106:
      *(_QWORD *)(v165 + 8) = v183;
      *(_BYTE *)(v165 + 16) = *(_BYTE *)(v166 + 16);
      *(_QWORD *)(v165 + 24) = *(_QWORD *)(v166 + 24);
      *(_QWORD *)(v165 + 32) = *(_QWORD *)(v166 + 32);
      *(_QWORD *)(v165 + 40) = *(_QWORD *)(v166 + 40);
      *(_QWORD *)(v165 + 48) = *(_QWORD *)(v166 + 48);
      *(_QWORD *)(v165 + 56) = *(_QWORD *)(v166 + 56);
      *(_QWORD *)(v165 + 64) = *(_QWORD *)(v166 + 64);
      *(_QWORD *)(v165 + 72) = *(_QWORD *)(v166 + 72);
      *(_QWORD *)(v165 + 80) = *(_QWORD *)(v166 + 80);
      *(_QWORD *)(v165 + 88) = *(_QWORD *)(v166 + 88);
      *(_QWORD *)(v165 + 96) = *(_QWORD *)(v166 + 96);
      *(_QWORD *)(v165 + 104) = *(_QWORD *)(v166 + 104);
      *(_QWORD *)(v165 + 112) = *(_QWORD *)(v166 + 112);
      *(_QWORD *)(v165 + 120) = *(_QWORD *)(v166 + 120);
      *(_QWORD *)(v165 + 128) = *(_QWORD *)(v166 + 128);
      v184 = v183;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_113;
    }
    goto LABEL_111;
  }
  if (v183)
  {
    *(_QWORD *)(v165 + 8) = v183;
    v185 = v183;

    *(_BYTE *)(v165 + 16) = *(_BYTE *)(v166 + 16);
    *(_QWORD *)(v165 + 24) = *(_QWORD *)(v166 + 24);
    *(_QWORD *)(v165 + 32) = *(_QWORD *)(v166 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 40) = *(_QWORD *)(v166 + 40);
    *(_QWORD *)(v165 + 48) = *(_QWORD *)(v166 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 56) = *(_QWORD *)(v166 + 56);
    *(_QWORD *)(v165 + 64) = *(_QWORD *)(v166 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 72) = *(_QWORD *)(v166 + 72);
    *(_QWORD *)(v165 + 80) = *(_QWORD *)(v166 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 88) = *(_QWORD *)(v166 + 88);
    *(_QWORD *)(v165 + 96) = *(_QWORD *)(v166 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 104) = *(_QWORD *)(v166 + 104);
    *(_QWORD *)(v165 + 112) = *(_QWORD *)(v166 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v165 + 120) = *(_QWORD *)(v166 + 120);
    *(_QWORD *)(v165 + 128) = *(_QWORD *)(v166 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23B9C1AF8((id *)v167);
    v192 = *(_OWORD *)(v170 + 48);
    v194 = *(_OWORD *)v170;
    v193 = *(_OWORD *)(v170 + 16);
    *(_OWORD *)(v167 + 32) = *(_OWORD *)(v170 + 32);
    *(_OWORD *)(v167 + 48) = v192;
    *(_OWORD *)v167 = v194;
    *(_OWORD *)(v167 + 16) = v193;
    v195 = *(_OWORD *)(v170 + 112);
    v197 = *(_OWORD *)(v170 + 64);
    v196 = *(_OWORD *)(v170 + 80);
    *(_OWORD *)(v167 + 96) = *(_OWORD *)(v170 + 96);
    *(_OWORD *)(v167 + 112) = v195;
    *(_OWORD *)(v167 + 64) = v197;
    *(_OWORD *)(v167 + 80) = v196;
  }
LABEL_113:
  v198 = v28[7];
  v199 = *(void **)(a1 + v198);
  v200 = *(void **)(a2 + v198);
  *(_QWORD *)(a1 + v198) = v200;
  v201 = v200;

  v202 = v28[8];
  v203 = *(void **)(a1 + v202);
  v204 = *(void **)(a2 + v202);
  *(_QWORD *)(a1 + v202) = v204;
  v205 = v204;

  v206 = v28[9];
  v207 = (_BYTE *)(a1 + v206);
  a2 += v206;
  v208 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v209 = *(_QWORD *)(v208 - 8);
  v210 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v209 + 48);
  v211 = v210(v207, 1, v208);
  v212 = v210((_BYTE *)a2, 1, v208);
  if (!v211)
  {
    if (v212)
    {
      sub_23B989D9C((uint64_t)v207, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_119;
    }
    v216 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v217 = *(_QWORD *)(v216 - 8);
    v218 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v217 + 48);
    v219 = v218(v207, 1, v216);
    v220 = v218((_BYTE *)a2, 1, v216);
    v324 = v216;
    if (v219)
    {
      if (!v220)
      {
        v221 = sub_23BB88984();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v207, a2, v221);
        v222 = *(int *)(v216 + 20);
        v223 = *(void **)(a2 + v222);
        *(_QWORD *)&v207[v222] = v223;
        v224 = *(int *)(v216 + 24);
        v225 = &v207[v224];
        v226 = (_QWORD *)(a2 + v224);
        *v225 = *v226;
        v225[1] = v226[1];
        v227 = (void *)v226[2];
        v225[2] = v227;
        v228 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v217 + 56);
        v229 = v223;
        swift_bridgeObjectRetain();
        v230 = v227;
        v228(v207, 0, 1, v216);
        goto LABEL_131;
      }
    }
    else
    {
      if (!v220)
      {
        v284 = sub_23BB88984();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v284 - 8) + 24))(v207, a2, v284);
        v285 = *(int *)(v216 + 20);
        v286 = *(void **)(a2 + v285);
        v287 = *(void **)&v207[v285];
        *(_QWORD *)&v207[v285] = v286;
        v288 = v286;

        v289 = *(int *)(v216 + 24);
        v290 = &v207[v289];
        v291 = a2 + v289;
        *v290 = *(_QWORD *)(a2 + v289);
        v290[1] = *(_QWORD *)(a2 + v289 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v292 = *(void **)(v291 + 16);
        v293 = (void *)v290[2];
        v290[2] = v292;
        v294 = v292;

LABEL_131:
        v261 = *(int *)(v208 + 20);
        v262 = &v207[v261];
        v263 = (char *)(a2 + v261);
        v264 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v265 = *(_QWORD *)(v264 - 8);
        v266 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v265 + 48);
        v267 = v266(v262, 1, v264);
        v268 = v266(v263, 1, v264);
        if (v267)
        {
          if (!v268)
          {
            v269 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v269 - 8) + 16))(v262, v263, v269);
            v270 = *(int *)(v324 + 20);
            v271 = *(void **)&v263[v270];
            *(_QWORD *)&v262[v270] = v271;
            v272 = *(int *)(v324 + 24);
            v273 = &v262[v272];
            v274 = &v263[v272];
            *(_QWORD *)v273 = *(_QWORD *)v274;
            *((_QWORD *)v273 + 1) = *((_QWORD *)v274 + 1);
            v275 = (void *)*((_QWORD *)v274 + 2);
            *((_QWORD *)v273 + 2) = v275;
            v276 = *(int *)(v264 + 20);
            v277 = &v262[v276];
            v278 = &v263[v276];
            v279 = *((_QWORD *)v278 + 2);
            *(_OWORD *)v277 = *(_OWORD *)v278;
            *((_QWORD *)v277 + 2) = v279;
            v280 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v265 + 56);
            v281 = v271;
            swift_bridgeObjectRetain();
            v282 = v275;
            v280(v262, 0, 1, v264);
LABEL_137:
            v207[*(int *)(v208 + 24)] = *(_BYTE *)(a2 + *(int *)(v208 + 24));
            return a1;
          }
        }
        else
        {
          if (!v268)
          {
            v295 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 24))(v262, v263, v295);
            v296 = *(int *)(v324 + 20);
            v297 = *(void **)&v263[v296];
            v298 = *(void **)&v262[v296];
            *(_QWORD *)&v262[v296] = v297;
            v299 = v297;

            v300 = *(int *)(v324 + 24);
            v301 = &v262[v300];
            v302 = &v263[v300];
            *(_QWORD *)v301 = *(_QWORD *)&v263[v300];
            *((_QWORD *)v301 + 1) = *(_QWORD *)&v263[v300 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v303 = (void *)*((_QWORD *)v302 + 2);
            v304 = (void *)*((_QWORD *)v301 + 2);
            *((_QWORD *)v301 + 2) = v303;
            v305 = v303;

            v306 = *(int *)(v264 + 20);
            v307 = &v262[v306];
            v308 = &v263[v306];
            *v307 = *v308;
            *((_QWORD *)v307 + 1) = *((_QWORD *)v308 + 1);
            *((_QWORD *)v307 + 2) = *((_QWORD *)v308 + 2);
            goto LABEL_137;
          }
          sub_23B989D9C((uint64_t)v262, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
        goto LABEL_137;
      }
      sub_23B989D9C((uint64_t)v207, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v207, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
    goto LABEL_131;
  }
  if (v212)
  {
LABEL_119:
    v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8) - 8) + 64);
    v26 = v207;
    goto LABEL_12;
  }
  v213 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v214 = *(_QWORD *)(v213 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(a2, 1, v213))
  {
    v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v207, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
  }
  else
  {
    v231 = sub_23BB88984();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v207, a2, v231);
    v232 = *(int *)(v213 + 20);
    v233 = *(void **)(a2 + v232);
    *(_QWORD *)&v207[v232] = v233;
    v234 = *(int *)(v213 + 24);
    v235 = &v207[v234];
    v236 = (_QWORD *)(a2 + v234);
    *v235 = *v236;
    v235[1] = v236[1];
    v237 = (void *)v236[2];
    v235[2] = v237;
    v238 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v214 + 56);
    v239 = v233;
    swift_bridgeObjectRetain();
    v240 = v237;
    v238(v207, 0, 1, v213);
  }
  v241 = *(int *)(v208 + 20);
  v242 = &v207[v241];
  v243 = (char *)(a2 + v241);
  v244 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v245 = *(_QWORD *)(v244 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v245 + 48))(v243, 1, v244))
  {
    v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
  }
  else
  {
    v247 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(v242, v243, v247);
    v248 = *(int *)(v213 + 20);
    v249 = *(void **)&v243[v248];
    *(_QWORD *)&v242[v248] = v249;
    v250 = *(int *)(v213 + 24);
    v251 = &v242[v250];
    v252 = &v243[v250];
    *(_QWORD *)v251 = *(_QWORD *)v252;
    *((_QWORD *)v251 + 1) = *((_QWORD *)v252 + 1);
    v325 = (void *)*((_QWORD *)v252 + 2);
    *((_QWORD *)v251 + 2) = v325;
    v253 = *(int *)(v244 + 20);
    v254 = &v242[v253];
    v255 = &v243[v253];
    v256 = *((_QWORD *)v255 + 2);
    *(_OWORD *)v254 = *(_OWORD *)v255;
    *((_QWORD *)v254 + 2) = v256;
    v257 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v245 + 56);
    v258 = v249;
    swift_bridgeObjectRetain();
    v259 = v325;
    v257(v242, 0, 1, v244);
  }
  v207[*(int *)(v208 + 24)] = *(_BYTE *)(a2 + *(int *)(v208 + 24));
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v207, 0, 1, v208);
  return a1;
}

_BYTE *_s5StateOwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *__dstb;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v6 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[16] = a2[16];
  v8 = (int *)type metadata accessor for PersonInfo();
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v90 = v7;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    v13 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v14 = v13[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    v17 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v87 = v13;
    if (EnumCaseMultiPayload == 2)
    {
      v88 = v6;
      v22 = sub_23BB88984();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v16, 1, v22))
      {
LABEL_13:
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_19:
        swift_storeEnumTagMultiPayload();
        v6 = v88;
        goto LABEL_22;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v19 = sub_23BB88984();
          v20 = *(_QWORD *)(v19 - 8);
          __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
          v82 = v20;
          if (__dst(v16, 1, v19))
          {
            v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
          }
          v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v26 = &v15[v25];
          v27 = &v16[v25];
          if (__dst(v27, 1, v19))
          {
            v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v26, v27, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v26, 0, 1, v19);
          }
          v13 = v87;
          swift_storeEnumTagMultiPayload();
        }
LABEL_22:
        v29 = v13[6];
        v30 = &v10[v29];
        v31 = &v11[v29];
        v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 1)
        {
          v37 = v6;
          v38 = sub_23BB88984();
          v39 = *(_QWORD *)(v38 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v31, 1, v38))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v30, v31, v38);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v30, 0, 1, v38);
          }
          v6 = v37;
          v7 = v90;
          v13 = v87;
        }
        else
        {
          if (v33)
          {
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
            v7 = v90;
LABEL_37:
            v45 = v13[7];
            v46 = &v10[v45];
            v47 = &v11[v45];
            *(_QWORD *)v46 = *(_QWORD *)v47;
            v46[8] = v47[8];
            swift_storeEnumTagMultiPayload();
            goto LABEL_38;
          }
          v34 = sub_23BB88984();
          v35 = *(_QWORD *)(v34 - 8);
          __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
          v83 = v35;
          if (__dsta(v31, 1, v34))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v30, v31, v34);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
          }
          v41 = __dsta;
          v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          __dstb = &v30[v42];
          v43 = &v31[v42];
          if (v41(v43, 1, v34))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(__dstb, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 32))(__dstb, v43, v34);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(__dstb, 0, 1, v34);
          }
          v7 = v90;
          v13 = v87;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      }
      v88 = v6;
      v22 = sub_23BB88984();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v16, 1, v22))
        goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v15, v16, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v22);
    goto LABEL_19;
  }
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_38:
  v48 = v8[6];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = *((_OWORD *)v50 + 3);
  *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
  *((_OWORD *)v49 + 3) = v51;
  *((_QWORD *)v49 + 16) = *((_QWORD *)v50 + 16);
  v52 = *((_OWORD *)v50 + 7);
  *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
  *((_OWORD *)v49 + 7) = v52;
  v53 = *((_OWORD *)v50 + 5);
  *((_OWORD *)v49 + 4) = *((_OWORD *)v50 + 4);
  *((_OWORD *)v49 + 5) = v53;
  v54 = *((_OWORD *)v50 + 1);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v54;
  *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
  *(_QWORD *)&a1[v8[8]] = *(_QWORD *)&a2[v8[8]];
  v55 = v8[9];
  v56 = &a1[v55];
  v57 = &a2[v55];
  v58 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v89 = v6;
    v61 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v62 = *(_QWORD *)(v61 - 8);
    v91 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v57, 1, v61))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      v64 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v56, v57, v64);
      *(_QWORD *)&v56[*(int *)(v61 + 20)] = *(_QWORD *)&v57[*(int *)(v61 + 20)];
      v65 = *(int *)(v61 + 24);
      v66 = &v56[v65];
      v67 = &v57[v65];
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v56, 0, 1, v61);
    }
    v68 = *(int *)(v58 + 20);
    v69 = &v56[v68];
    v70 = &v57[v68];
    v71 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v72 = *(_QWORD *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v74 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v69, v70, v74);
      *(_QWORD *)&v69[*(int *)(v61 + 20)] = *(_QWORD *)&v70[*(int *)(v61 + 20)];
      v75 = *(int *)(v61 + 24);
      v76 = &v69[v75];
      v77 = &v70[v75];
      *((_QWORD *)v76 + 2) = *((_QWORD *)v77 + 2);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      v78 = *(int *)(v71 + 20);
      v79 = &v69[v78];
      v80 = &v70[v78];
      *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
      *(_OWORD *)v79 = *(_OWORD *)v80;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v6 = v89;
    v56[*(int *)(v58 + 24)] = v57[*(int *)(v58 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    v7 = v91;
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s5StateOwta_0(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  int v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(char *, uint64_t, uint64_t);
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  _BYTE *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  _BYTE *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t (*v199)(char *, uint64_t, uint64_t);
  int v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  char *v214;
  _BYTE *v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  void (**__dsta)(void *, const void *, uint64_t);
  char *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  unsigned int (*v235)(char *, uint64_t, uint64_t);
  uint64_t v236;
  char *v237;
  unsigned int (*v238)(char *, uint64_t, uint64_t);
  int *v239;
  uint64_t v240;
  uint64_t v241;
  int *v242;
  uint64_t v243;
  uint64_t v244;

  v6 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C(a1, type metadata accessor for PersonDetailsController.State.Loaded);
      goto LABEL_11;
    }
    v27 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v27;
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 16) = a2[16];
    v28 = type metadata accessor for PersonInfo();
    v29 = (int *)v28;
    if ((_BYTE *)a1 == a2)
    {
LABEL_95:
      v132 = v29[6];
      v133 = a1 + v132;
      v134 = &a2[v132];
      v136 = a1 + v132 + 8;
      v135 = *(id *)v136;
      if (*(_QWORD *)v136 == 1)
      {
LABEL_98:
        v138 = *((_OWORD *)v134 + 7);
        *(_OWORD *)(v133 + 96) = *((_OWORD *)v134 + 6);
        *(_OWORD *)(v133 + 112) = v138;
        *(_QWORD *)(v133 + 128) = *((_QWORD *)v134 + 16);
        v139 = *((_OWORD *)v134 + 3);
        *(_OWORD *)(v133 + 32) = *((_OWORD *)v134 + 2);
        *(_OWORD *)(v133 + 48) = v139;
        v140 = *((_OWORD *)v134 + 5);
        *(_OWORD *)(v133 + 64) = *((_OWORD *)v134 + 4);
        *(_OWORD *)(v133 + 80) = v140;
        v141 = *((_OWORD *)v134 + 1);
        *(_OWORD *)v133 = *(_OWORD *)v134;
        *(_OWORD *)(v133 + 16) = v141;
        goto LABEL_99;
      }
      v137 = *((_QWORD *)v134 + 1);
      if (v137 == 1)
      {
        sub_23B9C1B2C(v133);
        goto LABEL_98;
      }
      *(_BYTE *)v133 = *v134;
      if (v135)
      {
        if (v137)
        {
          *(_QWORD *)(v133 + 8) = v137;

          *(_BYTE *)(v133 + 16) = v134[16];
          v156 = *((_QWORD *)v134 + 4);
          *(_QWORD *)(v133 + 24) = *((_QWORD *)v134 + 3);
          *(_QWORD *)(v133 + 32) = v156;
          swift_bridgeObjectRelease();
          v157 = *((_QWORD *)v134 + 6);
          *(_QWORD *)(v133 + 40) = *((_QWORD *)v134 + 5);
          *(_QWORD *)(v133 + 48) = v157;
          swift_bridgeObjectRelease();
          v158 = *((_QWORD *)v134 + 8);
          *(_QWORD *)(v133 + 56) = *((_QWORD *)v134 + 7);
          *(_QWORD *)(v133 + 64) = v158;
          swift_bridgeObjectRelease();
          v159 = *((_QWORD *)v134 + 10);
          *(_QWORD *)(v133 + 72) = *((_QWORD *)v134 + 9);
          *(_QWORD *)(v133 + 80) = v159;
          swift_bridgeObjectRelease();
          v160 = *((_QWORD *)v134 + 12);
          *(_QWORD *)(v133 + 88) = *((_QWORD *)v134 + 11);
          *(_QWORD *)(v133 + 96) = v160;
          swift_bridgeObjectRelease();
          v161 = *((_QWORD *)v134 + 14);
          *(_QWORD *)(v133 + 104) = *((_QWORD *)v134 + 13);
          *(_QWORD *)(v133 + 112) = v161;
          swift_bridgeObjectRelease();
          v162 = *((_QWORD *)v134 + 16);
          *(_QWORD *)(v133 + 120) = *((_QWORD *)v134 + 15);
          *(_QWORD *)(v133 + 128) = v162;
          swift_bridgeObjectRelease();
          goto LABEL_99;
        }
        sub_23B9C1AF8((id *)v136);
      }
      v189 = *(_OWORD *)(v134 + 88);
      *(_OWORD *)(v136 + 64) = *(_OWORD *)(v134 + 72);
      *(_OWORD *)(v136 + 80) = v189;
      v190 = *(_OWORD *)(v134 + 120);
      *(_OWORD *)(v136 + 96) = *(_OWORD *)(v134 + 104);
      *(_OWORD *)(v136 + 112) = v190;
      v191 = *(_OWORD *)(v134 + 24);
      *(_OWORD *)v136 = *(_OWORD *)(v134 + 8);
      *(_OWORD *)(v136 + 16) = v191;
      v192 = *(_OWORD *)(v134 + 56);
      *(_OWORD *)(v136 + 32) = *(_OWORD *)(v134 + 40);
      *(_OWORD *)(v136 + 48) = v192;
LABEL_99:
      v142 = v29[7];
      v143 = *(void **)(a1 + v142);
      *(_QWORD *)(a1 + v142) = *(_QWORD *)&a2[v142];

      v144 = v29[8];
      v145 = *(void **)(a1 + v144);
      *(_QWORD *)(a1 + v144) = *(_QWORD *)&a2[v144];

      v146 = v29[9];
      v147 = (char *)(a1 + v146);
      a2 += v146;
      v148 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      v149 = *(_QWORD *)(v148 - 8);
      v150 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v149 + 48);
      v151 = v150(v147, 1, v148);
      v152 = v150(a2, 1, v148);
      if (v151)
      {
        if (!v152)
        {
          v153 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
          v154 = *(_QWORD *)(v153 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v154 + 48))(a2, 1, v153))
          {
            v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
            memcpy(v147, a2, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
          }
          else
          {
            v172 = sub_23BB88984();
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v147, a2, v172);
            *(_QWORD *)&v147[*(int *)(v153 + 20)] = *(_QWORD *)&a2[*(int *)(v153 + 20)];
            v173 = *(int *)(v153 + 24);
            v174 = &v147[v173];
            v175 = &a2[v173];
            *((_QWORD *)v174 + 2) = *((_QWORD *)v175 + 2);
            *(_OWORD *)v174 = *(_OWORD *)v175;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v147, 0, 1, v153);
          }
          v176 = *(int *)(v148 + 20);
          v177 = &v147[v176];
          v178 = &a2[v176];
          v179 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
          v180 = *(_QWORD *)(v179 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v178, 1, v179))
          {
            v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
            memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
          }
          else
          {
            v182 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v177, v178, v182);
            *(_QWORD *)&v177[*(int *)(v153 + 20)] = *(_QWORD *)&v178[*(int *)(v153 + 20)];
            v183 = *(int *)(v153 + 24);
            v184 = &v177[v183];
            v185 = &v178[v183];
            *((_QWORD *)v184 + 2) = *((_QWORD *)v185 + 2);
            *(_OWORD *)v184 = *(_OWORD *)v185;
            v186 = *(int *)(v179 + 20);
            v187 = &v177[v186];
            v188 = &v178[v186];
            *((_QWORD *)v187 + 2) = *((_QWORD *)v188 + 2);
            *(_OWORD *)v187 = *(_OWORD *)v188;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v177, 0, 1, v179);
          }
          v147[*(int *)(v148 + 24)] = a2[*(int *)(v148 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v147, 0, 1, v148);
          return a1;
        }
        goto LABEL_105;
      }
      if (v152)
      {
        sub_23B989D9C((uint64_t)v147, type metadata accessor for MapsDirectionsProvider.DirectionsState);
LABEL_105:
        v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8) - 8) + 64);
        v26 = v147;
        goto LABEL_12;
      }
      v163 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
      v164 = *(_QWORD *)(v163 - 8);
      v165 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48);
      v166 = v165(v147, 1, v163);
      v167 = v165(a2, 1, v163);
      v244 = v163;
      if (v166)
      {
        if (!v167)
        {
          v168 = sub_23BB88984();
          (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v147, a2, v168);
          *(_QWORD *)&v147[*(int *)(v163 + 20)] = *(_QWORD *)&a2[*(int *)(v163 + 20)];
          v169 = *(int *)(v163 + 24);
          v170 = &v147[v169];
          v171 = &a2[v169];
          *((_QWORD *)v170 + 2) = *((_QWORD *)v171 + 2);
          *(_OWORD *)v170 = *(_OWORD *)v171;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v147, 0, 1, v163);
          goto LABEL_122;
        }
      }
      else
      {
        if (!v167)
        {
          v210 = sub_23BB88984();
          (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v210 - 8) + 40))(v147, a2, v210);
          v211 = *(int *)(v163 + 20);
          v212 = *(void **)&v147[v211];
          *(_QWORD *)&v147[v211] = *(_QWORD *)&a2[v211];

          v213 = *(int *)(v163 + 24);
          v214 = &v147[v213];
          v215 = &a2[v213];
          v216 = *(_QWORD *)&a2[v213 + 8];
          *(_QWORD *)v214 = *(_QWORD *)&a2[v213];
          *((_QWORD *)v214 + 1) = v216;
          swift_bridgeObjectRelease();
          v217 = (void *)*((_QWORD *)v214 + 2);
          *((_QWORD *)v214 + 2) = *((_QWORD *)v215 + 2);

LABEL_122:
          v194 = *(int *)(v148 + 20);
          v195 = &v147[v194];
          v196 = &a2[v194];
          v197 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
          v198 = *(_QWORD *)(v197 - 8);
          v199 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v198 + 48);
          v200 = v199(v195, 1, v197);
          v201 = v199(v196, 1, v197);
          if (v200)
          {
            if (!v201)
            {
              v202 = sub_23BB88984();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v195, v196, v202);
              *(_QWORD *)&v195[*(int *)(v244 + 20)] = *(_QWORD *)&v196[*(int *)(v244 + 20)];
              v203 = *(int *)(v244 + 24);
              v204 = &v195[v203];
              v205 = &v196[v203];
              *((_QWORD *)v204 + 2) = *((_QWORD *)v205 + 2);
              *(_OWORD *)v204 = *(_OWORD *)v205;
              v206 = *(int *)(v197 + 20);
              v207 = &v195[v206];
              v208 = &v196[v206];
              *((_QWORD *)v207 + 2) = *((_QWORD *)v208 + 2);
              *(_OWORD *)v207 = *(_OWORD *)v208;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v195, 0, 1, v197);
LABEL_128:
              v147[*(int *)(v148 + 24)] = a2[*(int *)(v148 + 24)];
              return a1;
            }
          }
          else
          {
            if (!v201)
            {
              v218 = sub_23BB88984();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 40))(v195, v196, v218);
              v219 = *(int *)(v244 + 20);
              v220 = *(void **)&v195[v219];
              *(_QWORD *)&v195[v219] = *(_QWORD *)&v196[v219];

              v221 = *(int *)(v244 + 24);
              v222 = &v195[v221];
              v223 = &v196[v221];
              v224 = *(_QWORD *)&v196[v221 + 8];
              *(_QWORD *)v222 = *(_QWORD *)&v196[v221];
              *((_QWORD *)v222 + 1) = v224;
              swift_bridgeObjectRelease();
              v225 = (void *)*((_QWORD *)v222 + 2);
              *((_QWORD *)v222 + 2) = *((_QWORD *)v223 + 2);

              v226 = *(int *)(v197 + 20);
              v227 = &v195[v226];
              v228 = &v196[v226];
              *v227 = *v228;
              *(_OWORD *)(v227 + 8) = *(_OWORD *)(v228 + 8);
              goto LABEL_128;
            }
            sub_23B989D9C((uint64_t)v195, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
          }
          v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
          memcpy(v195, v196, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
          goto LABEL_128;
        }
        sub_23B989D9C((uint64_t)v147, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
      }
      v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v147, a2, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
      goto LABEL_122;
    }
    v30 = *(int *)(v28 + 20);
    v31 = (_BYTE *)(a1 + v30);
    v32 = &a2[v30];
    sub_23B989D9C(a1 + v30, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v33 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      goto LABEL_95;
    }
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    v34 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v35 = v34[5];
    v36 = &v31[v35];
    v37 = &v32[v35];
    v38 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v242 = v34;
    if (EnumCaseMultiPayload == 2)
    {
      v53 = sub_23BB88984();
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v37, 1, v53))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v36, v37, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v36, 0, 1, v53);
      }
      v34 = v242;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v56 = sub_23BB88984();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v37, 1, v56))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v36, v37, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v36, 0, 1, v56);
      }
      v34 = v242;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_79;
      }
      v40 = sub_23BB88984();
      v41 = *(_QWORD *)(v40 - 8);
      v235 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      __dsta = (void (**)(void *, const void *, uint64_t))v41;
      if (v235(v37, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v37, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v40);
      }
      v111 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v237 = &v36[v111];
      v112 = &v37[v111];
      if (v235(&v37[v111], 1, v40))
      {
        v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v237, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        __dsta[4](v237, v112, v40);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v237, 0, 1, v40);
      }
      v34 = v242;
    }
    swift_storeEnumTagMultiPayload();
LABEL_79:
    v114 = v34[6];
    v115 = &v31[v114];
    v116 = &v32[v114];
    v117 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v118 = swift_getEnumCaseMultiPayload();
    if (v118 == 1)
    {
      v122 = sub_23BB88984();
      v123 = *(_QWORD *)(v122 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v116, 1, v122))
      {
        v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v115, v116, v122);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v115, 0, 1, v122);
      }
      v34 = v242;
    }
    else
    {
      if (v118)
      {
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
LABEL_94:
        v129 = v34[7];
        v130 = &v31[v129];
        v131 = &v32[v129];
        *(_QWORD *)v130 = *(_QWORD *)v131;
        v130[8] = v131[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_95;
      }
      v119 = sub_23BB88984();
      v120 = *(_QWORD *)(v119 - 8);
      v238 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
      v236 = v120;
      if (v238(v116, 1, v119))
      {
        v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v115, v116, v119);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v115, 0, 1, v119);
      }
      v125 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v126 = &v115[v125];
      v127 = &v116[v125];
      if (v238(v127, 1, v119))
      {
        v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v236 + 32))(v126, v127, v119);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v236 + 56))(v126, 0, 1, v119);
      }
      v34 = v242;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_94;
  }
  if (v10)
  {
LABEL_11:
    v25 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v26 = (void *)a1;
LABEL_12:
    memcpy(v26, a2, v25);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = a2[16];
  v11 = (int *)type metadata accessor for PersonInfo();
  v12 = v11[5];
  v13 = (char *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v241 = v7;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[16] = v14[16];
    v16 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v17 = v16[5];
    v18 = &v13[v17];
    v19 = &v14[v17];
    v20 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    v21 = swift_getEnumCaseMultiPayload();
    v239 = v16;
    if (v21 == 2)
    {
      v43 = sub_23BB88984();
      v44 = *(_QWORD *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v19, 1, v43))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v18, v19, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v18, 0, 1, v43);
      }
      v16 = v239;
    }
    else if (v21 == 1)
    {
      v46 = sub_23BB88984();
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v19, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v18, v19, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v18, 0, 1, v46);
      }
      v16 = v239;
    }
    else
    {
      if (v21)
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_42:
        v59 = v16[6];
        v60 = &v13[v59];
        v61 = &v14[v59];
        v62 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v63 = swift_getEnumCaseMultiPayload();
        if (v63 == 1)
        {
          v67 = sub_23BB88984();
          v68 = *(_QWORD *)(v67 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v61, 1, v67))
          {
            v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v60, v61, v67);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v60, 0, 1, v67);
          }
          swift_storeEnumTagMultiPayload();
          v16 = v239;
          v7 = v241;
        }
        else
        {
          if (v63)
          {
            memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            v64 = sub_23BB88984();
            v65 = *(_QWORD *)(v64 - 8);
            __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
            v230 = v65;
            if (__dstc(v61, 1, v64))
            {
              v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v60, v61, v64);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v60, 0, 1, v64);
            }
            v70 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
            v71 = &v60[v70];
            v72 = &v61[v70];
            if (__dstc(v72, 1, v64))
            {
              v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v230 + 32))(v71, v72, v64);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v230 + 56))(v71, 0, 1, v64);
            }
            v16 = v239;
            swift_storeEnumTagMultiPayload();
          }
          v7 = v241;
        }
        v74 = v16[7];
        v75 = &v13[v74];
        v76 = &v14[v74];
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v75[8] = v76[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_58;
      }
      v22 = sub_23BB88984();
      v23 = *(_QWORD *)(v22 - 8);
      __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      v229 = v23;
      if (__dst(v19, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v18, v19, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
      }
      v49 = __dst;
      v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dstb = &v18[v50];
      v51 = &v19[v50];
      if (v49(v51, 1, v22))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dstb, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v229 + 32))(__dstb, v51, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v229 + 56))(__dstb, 0, 1, v22);
      }
      v16 = v239;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_42;
  }
  memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_58:
  v77 = v11[6];
  v78 = a1 + v77;
  v79 = &a2[v77];
  v80 = *((_OWORD *)v79 + 3);
  *(_OWORD *)(v78 + 32) = *((_OWORD *)v79 + 2);
  *(_OWORD *)(v78 + 48) = v80;
  *(_QWORD *)(v78 + 128) = *((_QWORD *)v79 + 16);
  v81 = *((_OWORD *)v79 + 7);
  *(_OWORD *)(v78 + 96) = *((_OWORD *)v79 + 6);
  *(_OWORD *)(v78 + 112) = v81;
  v82 = *((_OWORD *)v79 + 5);
  *(_OWORD *)(v78 + 64) = *((_OWORD *)v79 + 4);
  *(_OWORD *)(v78 + 80) = v82;
  v83 = *((_OWORD *)v79 + 1);
  *(_OWORD *)v78 = *(_OWORD *)v79;
  *(_OWORD *)(v78 + 16) = v83;
  *(_QWORD *)(a1 + v11[7]) = *(_QWORD *)&a2[v11[7]];
  *(_QWORD *)(a1 + v11[8]) = *(_QWORD *)&a2[v11[8]];
  v84 = v11[9];
  v85 = (char *)(a1 + v84);
  v86 = &a2[v84];
  v87 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v88 = *(_QWORD *)(v87 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    v240 = v88;
    v90 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v91 = *(_QWORD *)(v90 - 8);
    v243 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v86, 1, v90))
    {
      v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      v93 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v85, v86, v93);
      *(_QWORD *)&v85[*(int *)(v90 + 20)] = *(_QWORD *)&v86[*(int *)(v90 + 20)];
      v94 = *(int *)(v90 + 24);
      v95 = &v85[v94];
      v96 = &v86[v94];
      *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v85, 0, 1, v90);
    }
    v97 = *(int *)(v87 + 20);
    v98 = &v85[v97];
    v99 = &v86[v97];
    v100 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v101 = *(_QWORD *)(v100 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v103 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v98, v99, v103);
      *(_QWORD *)&v98[*(int *)(v90 + 20)] = *(_QWORD *)&v99[*(int *)(v90 + 20)];
      v104 = *(int *)(v90 + 24);
      v105 = &v98[v104];
      v106 = &v99[v104];
      *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
      *(_OWORD *)v105 = *(_OWORD *)v106;
      v107 = *(int *)(v100 + 20);
      v108 = &v98[v107];
      v109 = &v99[v107];
      *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
      *(_OWORD *)v108 = *(_OWORD *)v109;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
    }
    v85[*(int *)(v87 + 24)] = v86[*(int *)(v87 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v240 + 56))(v85, 0, 1, v87);
    v7 = v243;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s5StateOwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB84C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t _s5StateOwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB84C58(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BB84CA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23BB84CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_23BB84D20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersonInfo();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _s5StateO6LoadedVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void *v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  id v95;
  id v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, _QWORD, uint64_t, uint64_t);
  id v114;
  id v115;
  uint64_t v117;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v122;
  void *v123;

  v4 = type metadata accessor for PersonInfo();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  v6 = (int *)v4;
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v8 = *(int *)(v4 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
    *((_BYTE *)v9 + 16) = *((_BYTE *)v10 + 16);
    v13 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v14 = v13[5];
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v122 = v13;
    if (EnumCaseMultiPayload == 2)
    {
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v16, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v15, v16, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
      v13 = v122;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v26 = sub_23BB88984();
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v15, v16, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v26);
        }
        v13 = v122;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_25;
        }
        v19 = sub_23BB88984();
        v20 = *(_QWORD *)(v19 - 8);
        v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        v117 = v20;
        if (v118(v16, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v15, v16, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
        }
        v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        __dst = &v15[v29];
        v30 = &v16[v29];
        if (v118(&v16[v29], 1, v19))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v117 + 16))(__dst, v30, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dst, 0, 1, v19);
        }
        v13 = v122;
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_25:
    v32 = v13[6];
    v33 = (char *)v9 + v32;
    v34 = (char *)v10 + v32;
    v35 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v36 = swift_getEnumCaseMultiPayload();
    if (v36 == 1)
    {
      v40 = sub_23BB88984();
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v34, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v33, v34, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v33, 0, 1, v40);
      }
      v13 = v122;
    }
    else
    {
      if (v36)
      {
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_40:
        v47 = v13[7];
        v48 = (char *)v9 + v47;
        v49 = (char *)v10 + v47;
        *(_QWORD *)v48 = *(_QWORD *)v49;
        v48[8] = v49[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_41;
      }
      v37 = sub_23BB88984();
      v38 = *(_QWORD *)(v37 - 8);
      __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      v119 = v38;
      if (__dsta(v34, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v33, v34, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v37);
      }
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v44 = &v33[v43];
      v45 = &v34[v43];
      if (__dsta(v45, 1, v37))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v44, v45, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v44, 0, 1, v37);
      }
      v13 = v122;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_40;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_41:
  v50 = v6[6];
  v51 = a1 + v50;
  v52 = (uint64_t)a2 + v50;
  v53 = *(void **)(v52 + 8);
  if (v53 == (void *)1)
  {
    v54 = *(_OWORD *)(v52 + 112);
    *(_OWORD *)(v51 + 96) = *(_OWORD *)(v52 + 96);
    *(_OWORD *)(v51 + 112) = v54;
    *(_QWORD *)(v51 + 128) = *(_QWORD *)(v52 + 128);
    v55 = *(_OWORD *)(v52 + 48);
    *(_OWORD *)(v51 + 32) = *(_OWORD *)(v52 + 32);
    *(_OWORD *)(v51 + 48) = v55;
    v56 = *(_OWORD *)(v52 + 80);
    *(_OWORD *)(v51 + 64) = *(_OWORD *)(v52 + 64);
    *(_OWORD *)(v51 + 80) = v56;
    v57 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 16) = v57;
  }
  else
  {
    *(_BYTE *)v51 = *(_BYTE *)v52;
    if (v53)
    {
      *(_QWORD *)(v51 + 8) = v53;
      *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
      v58 = *(_QWORD *)(v52 + 32);
      *(_QWORD *)(v51 + 24) = *(_QWORD *)(v52 + 24);
      *(_QWORD *)(v51 + 32) = v58;
      v59 = *(_QWORD *)(v52 + 48);
      *(_QWORD *)(v51 + 40) = *(_QWORD *)(v52 + 40);
      *(_QWORD *)(v51 + 48) = v59;
      v60 = *(_QWORD *)(v52 + 64);
      *(_QWORD *)(v51 + 56) = *(_QWORD *)(v52 + 56);
      *(_QWORD *)(v51 + 64) = v60;
      v61 = *(_QWORD *)(v52 + 80);
      *(_QWORD *)(v51 + 72) = *(_QWORD *)(v52 + 72);
      *(_QWORD *)(v51 + 80) = v61;
      v62 = *(_QWORD *)(v52 + 96);
      *(_QWORD *)(v51 + 88) = *(_QWORD *)(v52 + 88);
      *(_QWORD *)(v51 + 96) = v62;
      v63 = *(_QWORD *)(v52 + 112);
      *(_QWORD *)(v51 + 104) = *(_QWORD *)(v52 + 104);
      *(_QWORD *)(v51 + 112) = v63;
      v64 = *(_QWORD *)(v52 + 128);
      *(_QWORD *)(v51 + 120) = *(_QWORD *)(v52 + 120);
      *(_QWORD *)(v51 + 128) = v64;
      v65 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v66 = *(_OWORD *)(v52 + 88);
      *(_OWORD *)(v51 + 72) = *(_OWORD *)(v52 + 72);
      *(_OWORD *)(v51 + 88) = v66;
      v67 = *(_OWORD *)(v52 + 120);
      *(_OWORD *)(v51 + 104) = *(_OWORD *)(v52 + 104);
      *(_OWORD *)(v51 + 120) = v67;
      v68 = *(_OWORD *)(v52 + 24);
      *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
      *(_OWORD *)(v51 + 24) = v68;
      v69 = *(_OWORD *)(v52 + 56);
      *(_OWORD *)(v51 + 40) = *(_OWORD *)(v52 + 40);
      *(_OWORD *)(v51 + 56) = v69;
    }
  }
  v70 = v6[7];
  v71 = *(void **)((char *)a2 + v70);
  *(_QWORD *)(a1 + v70) = v71;
  v72 = v6[8];
  v73 = *(void **)((char *)a2 + v72);
  *(_QWORD *)(a1 + v72) = v73;
  v74 = v6[9];
  v75 = (char *)(a1 + v74);
  v76 = (char *)a2 + v74;
  v77 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  v80 = v71;
  v81 = v73;
  if (v79(v76, 1, v77))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v83 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v76, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v86 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v75, v76, v86);
      v87 = *(int *)(v83 + 20);
      v88 = *(void **)&v76[v87];
      *(_QWORD *)&v75[v87] = v88;
      v89 = *(int *)(v83 + 24);
      v90 = &v75[v89];
      v91 = &v76[v89];
      v92 = *((_QWORD *)v91 + 1);
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *((_QWORD *)v90 + 1) = v92;
      v93 = (void *)*((_QWORD *)v91 + 2);
      *((_QWORD *)v90 + 2) = v93;
      v94 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56);
      v95 = v88;
      swift_bridgeObjectRetain();
      v96 = v93;
      v94(v75, 0, 1, v83);
    }
    v97 = *(int *)(v77 + 20);
    v98 = &v75[v97];
    v99 = &v76[v97];
    v100 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v101 = *(_QWORD *)(v100 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v103 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v98, v99, v103);
      v104 = *(int *)(v83 + 20);
      v105 = *(void **)&v99[v104];
      *(_QWORD *)&v98[v104] = v105;
      v106 = *(int *)(v83 + 24);
      v107 = &v98[v106];
      v108 = &v99[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v123 = (void *)*((_QWORD *)v108 + 2);
      *((_QWORD *)v107 + 2) = v123;
      v110 = *(int *)(v100 + 20);
      v111 = &v98[v110];
      v112 = &v99[v110];
      *(_OWORD *)v111 = *(_OWORD *)v112;
      *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
      v113 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56);
      v114 = v105;
      swift_bridgeObjectRetain();
      v115 = v123;
      v113(v98, 0, 1, v100);
    }
    v75[*(int *)(v77 + 24)] = v76[*(int *)(v77 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  return a1;
}

void _s5StateO6LoadedVwxx_0(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for PersonInfo();
  v3 = a1 + v2[5];
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    goto LABEL_19;
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v5 = v3 + *(int *)(v4 + 20);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      goto LABEL_11;
    v7 = sub_23BB88984();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    v5 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (v9(v5, 1, v7))
      goto LABEL_11;
    goto LABEL_10;
  }
  v7 = sub_23BB88984();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
LABEL_10:
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
LABEL_11:
  v10 = v3 + *(int *)(v4 + 24);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 1)
  {
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      goto LABEL_19;
    goto LABEL_18;
  }
  if (!v11)
  {
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v14(v10, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
    v10 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (!v14(v10, 1, v12))
LABEL_18:
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  }
LABEL_19:
  v15 = *(void **)(a1 + v2[6] + 8);
  if ((unint64_t)v15 >= 2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v16 = a1 + v2[9];
  v17 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v16, 1, v18))
    {
      v19 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v16, v19);

      v20 = v16 + *(int *)(v18 + 24);
      swift_bridgeObjectRelease();

    }
    v21 = v16 + *(int *)(v17 + 20);
    v22 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
    {
      v23 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);

      v24 = v21 + *(int *)(v18 + 24);
      swift_bridgeObjectRelease();

    }
  }
}

uint64_t _s5StateO6LoadedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void *v90;
  void (*v91)(char *, _QWORD, uint64_t, uint64_t);
  id v92;
  id v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void (*v110)(char *, _QWORD, uint64_t, uint64_t);
  id v111;
  id v112;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v119;
  void *v120;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (int *)type metadata accessor for PersonInfo();
  v6 = v5[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_39;
  }
  v10 = v8[1];
  *v7 = *v8;
  v7[1] = v10;
  *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
  v11 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v12 = v11[5];
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v119 = v11;
  if (EnumCaseMultiPayload == 2)
  {
    v20 = sub_23BB88984();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v13, v14, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload();
    v11 = v119;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v13, v14, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
      }
      v11 = v119;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_23;
      }
      v17 = sub_23BB88984();
      v18 = *(_QWORD *)(v17 - 8);
      v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v114 = v18;
      if (v115(v14, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v13, v14, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
      }
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dst = &v13[v26];
      v27 = &v14[v26];
      if (v115(&v14[v26], 1, v17))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v114 + 16))(__dst, v27, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(__dst, 0, 1, v17);
      }
      v11 = v119;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v29 = v11[6];
  v30 = (char *)v7 + v29;
  v31 = (char *)v8 + v29;
  v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v33 = swift_getEnumCaseMultiPayload();
  if (v33 == 1)
  {
    v37 = sub_23BB88984();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v30, v31, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v30, 0, 1, v37);
    }
    v11 = v119;
    goto LABEL_37;
  }
  if (!v33)
  {
    v34 = sub_23BB88984();
    v35 = *(_QWORD *)(v34 - 8);
    __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    v116 = v35;
    if (__dsta(v31, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v30, v31, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
    }
    v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v41 = &v30[v40];
    v42 = &v31[v40];
    if (__dsta(v42, 1, v34))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v41, v42, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v41, 0, 1, v34);
    }
    v11 = v119;
LABEL_37:
    swift_storeEnumTagMultiPayload();
    goto LABEL_38;
  }
  memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_38:
  v44 = v11[7];
  v45 = (char *)v7 + v44;
  v46 = (char *)v8 + v44;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  swift_storeEnumTagMultiPayload();
LABEL_39:
  v47 = v5[6];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(void **)(v49 + 8);
  if (v50 == (void *)1)
  {
    v51 = *(_OWORD *)(v49 + 112);
    *(_OWORD *)(v48 + 96) = *(_OWORD *)(v49 + 96);
    *(_OWORD *)(v48 + 112) = v51;
    *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
    v52 = *(_OWORD *)(v49 + 48);
    *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
    *(_OWORD *)(v48 + 48) = v52;
    v53 = *(_OWORD *)(v49 + 80);
    *(_OWORD *)(v48 + 64) = *(_OWORD *)(v49 + 64);
    *(_OWORD *)(v48 + 80) = v53;
    v54 = *(_OWORD *)(v49 + 16);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v54;
  }
  else
  {
    *(_BYTE *)v48 = *(_BYTE *)v49;
    if (v50)
    {
      *(_QWORD *)(v48 + 8) = v50;
      *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
      v55 = *(_QWORD *)(v49 + 32);
      *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
      *(_QWORD *)(v48 + 32) = v55;
      v56 = *(_QWORD *)(v49 + 48);
      *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
      *(_QWORD *)(v48 + 48) = v56;
      v57 = *(_QWORD *)(v49 + 64);
      *(_QWORD *)(v48 + 56) = *(_QWORD *)(v49 + 56);
      *(_QWORD *)(v48 + 64) = v57;
      v58 = *(_QWORD *)(v49 + 80);
      *(_QWORD *)(v48 + 72) = *(_QWORD *)(v49 + 72);
      *(_QWORD *)(v48 + 80) = v58;
      v59 = *(_QWORD *)(v49 + 96);
      *(_QWORD *)(v48 + 88) = *(_QWORD *)(v49 + 88);
      *(_QWORD *)(v48 + 96) = v59;
      v60 = *(_QWORD *)(v49 + 112);
      *(_QWORD *)(v48 + 104) = *(_QWORD *)(v49 + 104);
      *(_QWORD *)(v48 + 112) = v60;
      v61 = *(_QWORD *)(v49 + 128);
      *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
      *(_QWORD *)(v48 + 128) = v61;
      v62 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v63 = *(_OWORD *)(v49 + 88);
      *(_OWORD *)(v48 + 72) = *(_OWORD *)(v49 + 72);
      *(_OWORD *)(v48 + 88) = v63;
      v64 = *(_OWORD *)(v49 + 120);
      *(_OWORD *)(v48 + 104) = *(_OWORD *)(v49 + 104);
      *(_OWORD *)(v48 + 120) = v64;
      v65 = *(_OWORD *)(v49 + 24);
      *(_OWORD *)(v48 + 8) = *(_OWORD *)(v49 + 8);
      *(_OWORD *)(v48 + 24) = v65;
      v66 = *(_OWORD *)(v49 + 56);
      *(_OWORD *)(v48 + 40) = *(_OWORD *)(v49 + 40);
      *(_OWORD *)(v48 + 56) = v66;
    }
  }
  v67 = v5[7];
  v68 = *(void **)(a2 + v67);
  *(_QWORD *)(a1 + v67) = v68;
  v69 = v5[8];
  v70 = *(void **)(a2 + v69);
  *(_QWORD *)(a1 + v69) = v70;
  v71 = v5[9];
  v72 = (char *)(a1 + v71);
  v73 = (char *)(a2 + v71);
  v74 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  v77 = v68;
  v78 = v70;
  if (v76(v73, 1, v74))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v80 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v81 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v73, 1, v80))
    {
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      v83 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v72, v73, v83);
      v84 = *(int *)(v80 + 20);
      v85 = *(void **)&v73[v84];
      *(_QWORD *)&v72[v84] = v85;
      v86 = *(int *)(v80 + 24);
      v87 = &v72[v86];
      v88 = &v73[v86];
      v89 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v89;
      v90 = (void *)*((_QWORD *)v88 + 2);
      *((_QWORD *)v87 + 2) = v90;
      v91 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56);
      v92 = v85;
      swift_bridgeObjectRetain();
      v93 = v90;
      v91(v72, 0, 1, v80);
    }
    v94 = *(int *)(v74 + 20);
    v95 = &v72[v94];
    v96 = &v73[v94];
    v97 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v98 = *(_QWORD *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      v100 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v95, v96, v100);
      v101 = *(int *)(v80 + 20);
      v102 = *(void **)&v96[v101];
      *(_QWORD *)&v95[v101] = v102;
      v103 = *(int *)(v80 + 24);
      v104 = &v95[v103];
      v105 = &v96[v103];
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *((_QWORD *)v104 + 1) = v106;
      v120 = (void *)*((_QWORD *)v105 + 2);
      *((_QWORD *)v104 + 2) = v120;
      v107 = *(int *)(v97 + 20);
      v108 = &v95[v107];
      v109 = &v96[v107];
      *(_OWORD *)v108 = *(_OWORD *)v109;
      *((_QWORD *)v108 + 2) = *((_QWORD *)v109 + 2);
      v110 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56);
      v111 = v102;
      swift_bridgeObjectRetain();
      v112 = v120;
      v110(v95, 0, 1, v97);
    }
    v72[*(int *)(v74 + 24)] = v73[*(int *)(v74 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  return a1;
}

uint64_t _s5StateO6LoadedVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  void *v68;
  id v69;
  id v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  void *v84;
  void *v85;
  id v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(_BYTE *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(_BYTE *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  void *v114;
  void (*v115)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  void *v124;
  void (*v125)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v126;
  id v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, _QWORD, uint64_t, uint64_t);
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(char *, uint64_t, uint64_t);
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  void *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  void (*v167)(char *, _QWORD, uint64_t, uint64_t);
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  void *v175;
  id v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  void *v180;
  void *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  void *v186;
  id v187;
  uint64_t v188;
  char *v189;
  char *v190;
  void *v191;
  void *v192;
  id v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  unsigned int (*v198)(char *, uint64_t, uint64_t);
  uint64_t v199;
  int *v200;
  int *v201;
  uint64_t v202;
  void *v203;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = type metadata accessor for PersonInfo();
  v5 = (int *)v4;
  if (a1 != a2)
  {
    v6 = *(int *)(v4 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_23B989D9C(a1 + v6, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      goto LABEL_40;
    }
    v201 = v5;
    *v7 = *v8;
    v7[1] = v8[1];
    *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
    v10 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v200 = v10;
    if (EnumCaseMultiPayload == 2)
    {
      v19 = sub_23BB88984();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v12, v13, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
      }
      v10 = v200;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v22 = sub_23BB88984();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v12, v13, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
      }
      v10 = v200;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        goto LABEL_24;
      }
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      v197 = v17;
      v198 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      if (v198(v13, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v13, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v26 = &v12[v25];
      v27 = &v13[v25];
      if (v198(&v13[v25], 1, v16))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v26, v27, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v26, 0, 1, v16);
      }
      v10 = v200;
    }
    swift_storeEnumTagMultiPayload();
LABEL_24:
    v29 = v10[6];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 1)
    {
      v38 = sub_23BB88984();
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v31, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v30, v31, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v30, 0, 1, v38);
      }
      v10 = v200;
      v5 = v201;
    }
    else
    {
      if (v33)
      {
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        v5 = v201;
LABEL_39:
        v45 = v10[7];
        v46 = (char *)v7 + v45;
        v47 = (char *)v8 + v45;
        v48 = *(_QWORD *)v47;
        v46[8] = v47[8];
        *(_QWORD *)v46 = v48;
        swift_storeEnumTagMultiPayload();
        goto LABEL_40;
      }
      v34 = sub_23BB88984();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v199 = v35;
      if (v36(v31, 1, v34))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v30, v31, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
      }
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v42 = &v30[v41];
      v43 = &v31[v41];
      if (v36(v43, 1, v34))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v42, v43, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v42, 0, 1, v34);
      }
      v10 = v200;
      v5 = v201;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
LABEL_40:
  v49 = v5[6];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = a1 + v49 + 8;
  v53 = *(id *)v52;
  v55 = a2 + v49 + 8;
  v54 = *(_QWORD *)v55;
  if (*(_QWORD *)v52 == 1)
  {
    if (v54 == 1)
    {
      *(_OWORD *)v50 = *(_OWORD *)v51;
      v56 = *(_OWORD *)(v51 + 16);
      v57 = *(_OWORD *)(v51 + 32);
      v58 = *(_OWORD *)(v51 + 64);
      *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
      *(_OWORD *)(v50 + 64) = v58;
      *(_OWORD *)(v50 + 16) = v56;
      *(_OWORD *)(v50 + 32) = v57;
      v59 = *(_OWORD *)(v51 + 80);
      v60 = *(_OWORD *)(v51 + 96);
      v61 = *(_OWORD *)(v51 + 112);
      *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
      *(_OWORD *)(v50 + 96) = v60;
      *(_OWORD *)(v50 + 112) = v61;
      *(_OWORD *)(v50 + 80) = v59;
      goto LABEL_53;
    }
    *(_BYTE *)v50 = *(_BYTE *)v51;
    v68 = *(void **)(v51 + 8);
    if (v68)
      goto LABEL_46;
LABEL_51:
    v71 = *(_OWORD *)v55;
    v72 = *(_OWORD *)(v55 + 16);
    v73 = *(_OWORD *)(v55 + 48);
    *(_OWORD *)(v52 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v52 + 48) = v73;
    *(_OWORD *)v52 = v71;
    *(_OWORD *)(v52 + 16) = v72;
    v74 = *(_OWORD *)(v55 + 64);
    v75 = *(_OWORD *)(v55 + 80);
    v76 = *(_OWORD *)(v55 + 112);
    *(_OWORD *)(v52 + 96) = *(_OWORD *)(v55 + 96);
    *(_OWORD *)(v52 + 112) = v76;
    *(_OWORD *)(v52 + 64) = v74;
    *(_OWORD *)(v52 + 80) = v75;
    goto LABEL_53;
  }
  if (v54 == 1)
  {
    sub_23B9C1B2C(v50);
    *(_OWORD *)v50 = *(_OWORD *)v51;
    v62 = *(_OWORD *)(v51 + 64);
    v64 = *(_OWORD *)(v51 + 16);
    v63 = *(_OWORD *)(v51 + 32);
    *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
    *(_OWORD *)(v50 + 64) = v62;
    *(_OWORD *)(v50 + 16) = v64;
    *(_OWORD *)(v50 + 32) = v63;
    v66 = *(_OWORD *)(v51 + 96);
    v65 = *(_OWORD *)(v51 + 112);
    v67 = *(_OWORD *)(v51 + 80);
    *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
    *(_OWORD *)(v50 + 96) = v66;
    *(_OWORD *)(v50 + 112) = v65;
    *(_OWORD *)(v50 + 80) = v67;
    goto LABEL_53;
  }
  *(_BYTE *)v50 = *(_BYTE *)v51;
  v68 = *(void **)(v51 + 8);
  if (!v53)
  {
    if (v68)
    {
LABEL_46:
      *(_QWORD *)(v50 + 8) = v68;
      *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
      *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
      *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
      *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
      *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
      *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
      *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
      *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
      *(_QWORD *)(v50 + 80) = *(_QWORD *)(v51 + 80);
      *(_QWORD *)(v50 + 88) = *(_QWORD *)(v51 + 88);
      *(_QWORD *)(v50 + 96) = *(_QWORD *)(v51 + 96);
      *(_QWORD *)(v50 + 104) = *(_QWORD *)(v51 + 104);
      *(_QWORD *)(v50 + 112) = *(_QWORD *)(v51 + 112);
      *(_QWORD *)(v50 + 120) = *(_QWORD *)(v51 + 120);
      *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
      v69 = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v68)
  {
    *(_QWORD *)(v50 + 8) = v68;
    v70 = v68;

    *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
    *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
    *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
    *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
    *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
    *(_QWORD *)(v50 + 80) = *(_QWORD *)(v51 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 88) = *(_QWORD *)(v51 + 88);
    *(_QWORD *)(v50 + 96) = *(_QWORD *)(v51 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 104) = *(_QWORD *)(v51 + 104);
    *(_QWORD *)(v50 + 112) = *(_QWORD *)(v51 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 120) = *(_QWORD *)(v51 + 120);
    *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23B9C1AF8((id *)v52);
    v77 = *(_OWORD *)(v55 + 48);
    v79 = *(_OWORD *)v55;
    v78 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)(v52 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v52 + 48) = v77;
    *(_OWORD *)v52 = v79;
    *(_OWORD *)(v52 + 16) = v78;
    v80 = *(_OWORD *)(v55 + 112);
    v82 = *(_OWORD *)(v55 + 64);
    v81 = *(_OWORD *)(v55 + 80);
    *(_OWORD *)(v52 + 96) = *(_OWORD *)(v55 + 96);
    *(_OWORD *)(v52 + 112) = v80;
    *(_OWORD *)(v52 + 64) = v82;
    *(_OWORD *)(v52 + 80) = v81;
  }
LABEL_53:
  v83 = v5[7];
  v84 = *(void **)(a1 + v83);
  v85 = *(void **)(a2 + v83);
  *(_QWORD *)(a1 + v83) = v85;
  v86 = v85;

  v87 = v5[8];
  v88 = *(void **)(a1 + v87);
  v89 = *(void **)(a2 + v87);
  *(_QWORD *)(a1 + v87) = v89;
  v90 = v89;

  v91 = v5[9];
  v92 = (_BYTE *)(a1 + v91);
  v93 = (_BYTE *)(a2 + v91);
  v94 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (!v97)
  {
    if (v98)
    {
      sub_23B989D9C((uint64_t)v92, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_59;
    }
    v103 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v104 = *(_QWORD *)(v103 - 8);
    v105 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v104 + 48);
    v106 = v105(v92, 1, v103);
    v107 = v105(v93, 1, v103);
    v202 = v103;
    if (v106)
    {
      if (!v107)
      {
        v108 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v92, v93, v108);
        v109 = *(int *)(v103 + 20);
        v110 = *(void **)&v93[v109];
        *(_QWORD *)&v92[v109] = v110;
        v111 = *(int *)(v103 + 24);
        v112 = &v92[v111];
        v113 = &v93[v111];
        *v112 = *v113;
        v112[1] = v113[1];
        v114 = (void *)v113[2];
        v112[2] = v114;
        v115 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v104 + 56);
        v116 = v110;
        swift_bridgeObjectRetain();
        v117 = v114;
        v115(v92, 0, 1, v103);
        goto LABEL_71;
      }
    }
    else
    {
      if (!v107)
      {
        v172 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v92, v93, v172);
        v173 = *(int *)(v103 + 20);
        v174 = *(void **)&v93[v173];
        v175 = *(void **)&v92[v173];
        *(_QWORD *)&v92[v173] = v174;
        v176 = v174;

        v177 = *(int *)(v103 + 24);
        v178 = &v92[v177];
        v179 = &v93[v177];
        *v178 = *(_QWORD *)&v93[v177];
        v178[1] = *(_QWORD *)&v93[v177 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v180 = (void *)*((_QWORD *)v179 + 2);
        v181 = (void *)v178[2];
        v178[2] = v180;
        v182 = v180;

LABEL_71:
        v148 = *(int *)(v94 + 20);
        v149 = &v92[v148];
        v150 = &v93[v148];
        v151 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v152 = *(_QWORD *)(v151 - 8);
        v153 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v152 + 48);
        v154 = v153(v149, 1, v151);
        v155 = v153(v150, 1, v151);
        if (v154)
        {
          if (!v155)
          {
            v156 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v149, v150, v156);
            v157 = *(int *)(v202 + 20);
            v158 = *(void **)&v150[v157];
            *(_QWORD *)&v149[v157] = v158;
            v159 = *(int *)(v202 + 24);
            v160 = &v149[v159];
            v161 = &v150[v159];
            *(_QWORD *)v160 = *(_QWORD *)v161;
            *((_QWORD *)v160 + 1) = *((_QWORD *)v161 + 1);
            v162 = (void *)*((_QWORD *)v161 + 2);
            *((_QWORD *)v160 + 2) = v162;
            v163 = *(int *)(v151 + 20);
            v164 = &v149[v163];
            v165 = &v150[v163];
            v166 = *((_QWORD *)v165 + 2);
            *(_OWORD *)v164 = *(_OWORD *)v165;
            *((_QWORD *)v164 + 2) = v166;
            v167 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56);
            v168 = v158;
            swift_bridgeObjectRetain();
            v169 = v162;
            v167(v149, 0, 1, v151);
LABEL_77:
            v92[*(int *)(v94 + 24)] = v93[*(int *)(v94 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v155)
          {
            v183 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 24))(v149, v150, v183);
            v184 = *(int *)(v202 + 20);
            v185 = *(void **)&v150[v184];
            v186 = *(void **)&v149[v184];
            *(_QWORD *)&v149[v184] = v185;
            v187 = v185;

            v188 = *(int *)(v202 + 24);
            v189 = &v149[v188];
            v190 = &v150[v188];
            *(_QWORD *)v189 = *(_QWORD *)&v150[v188];
            *((_QWORD *)v189 + 1) = *(_QWORD *)&v150[v188 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v191 = (void *)*((_QWORD *)v190 + 2);
            v192 = (void *)*((_QWORD *)v189 + 2);
            *((_QWORD *)v189 + 2) = v191;
            v193 = v191;

            v194 = *(int *)(v151 + 20);
            v195 = &v149[v194];
            v196 = &v150[v194];
            *v195 = *v196;
            *((_QWORD *)v195 + 1) = *((_QWORD *)v196 + 1);
            *((_QWORD *)v195 + 2) = *((_QWORD *)v196 + 2);
            goto LABEL_77;
          }
          sub_23B989D9C((uint64_t)v149, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
        goto LABEL_77;
      }
      sub_23B989D9C((uint64_t)v92, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    goto LABEL_71;
  }
  if (v98)
  {
LABEL_59:
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    return a1;
  }
  v99 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v100 = *(_QWORD *)(v99 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v100 + 48))(v93, 1, v99))
  {
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
  }
  else
  {
    v118 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v92, v93, v118);
    v119 = *(int *)(v99 + 20);
    v120 = *(void **)&v93[v119];
    *(_QWORD *)&v92[v119] = v120;
    v121 = *(int *)(v99 + 24);
    v122 = &v92[v121];
    v123 = &v93[v121];
    *v122 = *v123;
    v122[1] = v123[1];
    v124 = (void *)v123[2];
    v122[2] = v124;
    v125 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v100 + 56);
    v126 = v120;
    swift_bridgeObjectRetain();
    v127 = v124;
    v125(v92, 0, 1, v99);
  }
  v128 = *(int *)(v94 + 20);
  v129 = &v92[v128];
  v130 = &v93[v128];
  v131 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v132 = *(_QWORD *)(v131 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v130, 1, v131))
  {
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    v134 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v129, v130, v134);
    v135 = *(int *)(v99 + 20);
    v136 = *(void **)&v130[v135];
    *(_QWORD *)&v129[v135] = v136;
    v137 = *(int *)(v99 + 24);
    v138 = &v129[v137];
    v139 = &v130[v137];
    *(_QWORD *)v138 = *(_QWORD *)v139;
    *((_QWORD *)v138 + 1) = *((_QWORD *)v139 + 1);
    v203 = (void *)*((_QWORD *)v139 + 2);
    *((_QWORD *)v138 + 2) = v203;
    v140 = *(int *)(v131 + 20);
    v141 = &v129[v140];
    v142 = &v130[v140];
    v143 = *((_QWORD *)v142 + 2);
    *(_OWORD *)v141 = *(_OWORD *)v142;
    *((_QWORD *)v141 + 2) = v143;
    v144 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56);
    v145 = v136;
    swift_bridgeObjectRetain();
    v146 = v203;
    v144(v129, 0, 1, v131);
  }
  v92[*(int *)(v94 + 24)] = v93[*(int *)(v94 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
  return a1;
}

uint64_t _s5StateO6LoadedVwtk(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v84;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (int *)type metadata accessor for PersonInfo();
  v5 = v4[5];
  v6 = (_BYTE *)(a1 + v5);
  v7 = (_BYTE *)(a2 + v5);
  v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    goto LABEL_39;
  }
  *(_OWORD *)v6 = *(_OWORD *)v7;
  v6[16] = v7[16];
  v9 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v10 = v9[5];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v84 = v9;
  if (EnumCaseMultiPayload == 2)
  {
    v18 = sub_23BB88984();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v11, v12, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
    v9 = v84;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v21 = sub_23BB88984();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v11, v12, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
      }
      v9 = v84;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_23;
      }
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v79 = v16;
      if (v80(v12, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dst = &v11[v24];
      v25 = &v12[v24];
      if (v80(&v12[v24], 1, v15))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(__dst, v25, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v15);
      }
      v9 = v84;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v27 = v9[6];
  v28 = &v6[v27];
  v29 = &v7[v27];
  v30 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v31 = swift_getEnumCaseMultiPayload();
  if (v31 == 1)
  {
    v35 = sub_23BB88984();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v29, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v28, v29, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v28, 0, 1, v35);
    }
    v9 = v84;
    goto LABEL_37;
  }
  if (!v31)
  {
    v32 = sub_23BB88984();
    v33 = *(_QWORD *)(v32 - 8);
    __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    v81 = v33;
    if (__dsta(v29, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v29, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
    }
    v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v39 = &v28[v38];
    v40 = &v29[v38];
    if (__dsta(v40, 1, v32))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v39, v40, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v39, 0, 1, v32);
    }
    v9 = v84;
LABEL_37:
    swift_storeEnumTagMultiPayload();
    goto LABEL_38;
  }
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_38:
  v42 = v9[7];
  v43 = &v6[v42];
  v44 = &v7[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  swift_storeEnumTagMultiPayload();
LABEL_39:
  v45 = v4[6];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = *(_OWORD *)(v47 + 48);
  *(_OWORD *)(v46 + 32) = *(_OWORD *)(v47 + 32);
  *(_OWORD *)(v46 + 48) = v48;
  *(_QWORD *)(v46 + 128) = *(_QWORD *)(v47 + 128);
  v49 = *(_OWORD *)(v47 + 112);
  *(_OWORD *)(v46 + 96) = *(_OWORD *)(v47 + 96);
  *(_OWORD *)(v46 + 112) = v49;
  v50 = *(_OWORD *)(v47 + 80);
  *(_OWORD *)(v46 + 64) = *(_OWORD *)(v47 + 64);
  *(_OWORD *)(v46 + 80) = v50;
  v51 = *(_OWORD *)(v47 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v51;
  *(_QWORD *)(a1 + v4[7]) = *(_QWORD *)(a2 + v4[7]);
  *(_QWORD *)(a1 + v4[8]) = *(_QWORD *)(a2 + v4[8]);
  v52 = v4[9];
  v53 = (char *)(a1 + v52);
  v54 = (char *)(a2 + v52);
  v55 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v58 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v54, 1, v58))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      v61 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v53, v54, v61);
      *(_QWORD *)&v53[*(int *)(v58 + 20)] = *(_QWORD *)&v54[*(int *)(v58 + 20)];
      v62 = *(int *)(v58 + 24);
      v63 = &v53[v62];
      v64 = &v54[v62];
      *((_QWORD *)v63 + 2) = *((_QWORD *)v64 + 2);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v53, 0, 1, v58);
    }
    v65 = *(int *)(v55 + 20);
    v66 = &v53[v65];
    v67 = &v54[v65];
    v68 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v69 = *(_QWORD *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      v71 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v66, v67, v71);
      *(_QWORD *)&v66[*(int *)(v58 + 20)] = *(_QWORD *)&v67[*(int *)(v58 + 20)];
      v72 = *(int *)(v58 + 24);
      v73 = &v66[v72];
      v74 = &v67[v72];
      *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      v75 = *(int *)(v68 + 20);
      v76 = &v66[v75];
      v77 = &v67[v75];
      *((_QWORD *)v76 + 2) = *((_QWORD *)v77 + 2);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    v53[*(int *)(v55 + 24)] = v54[*(int *)(v55 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  return a1;
}

uint64_t _s5StateO6LoadedVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_BYTE *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_BYTE *, uint64_t, uint64_t);
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v152;
  uint64_t v153;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = type metadata accessor for PersonInfo();
  v6 = (int *)v5;
  if (a1 != a2)
  {
    v7 = *(int *)(v5 + 20);
    v8 = (_BYTE *)(a1 + v7);
    v9 = (_BYTE *)(a2 + v7);
    sub_23B989D9C(a1 + v7, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_40;
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[16] = v9[16];
    v11 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v12 = v11[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v152 = v11;
    if (EnumCaseMultiPayload == 2)
    {
      v20 = sub_23BB88984();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v13, v14, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
      }
      v11 = v152;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v13, v14, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
      }
      v11 = v152;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_24;
      }
      v17 = sub_23BB88984();
      v18 = *(_QWORD *)(v17 - 8);
      v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v147 = v18;
      if (v148(v14, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
      }
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dst = &v13[v26];
      v27 = &v14[v26];
      if (v148(&v14[v26], 1, v17))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 32))(__dst, v27, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(__dst, 0, 1, v17);
      }
      v11 = v152;
    }
    swift_storeEnumTagMultiPayload();
LABEL_24:
    v29 = v11[6];
    v30 = &v8[v29];
    v31 = &v9[v29];
    v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 1)
    {
      v37 = sub_23BB88984();
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v30, v31, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v30, 0, 1, v37);
      }
      v11 = v152;
    }
    else
    {
      if (v33)
      {
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_39:
        v44 = v11[7];
        v45 = &v8[v44];
        v46 = &v9[v44];
        *(_QWORD *)v45 = *(_QWORD *)v46;
        v45[8] = v46[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_40;
      }
      v34 = sub_23BB88984();
      v35 = *(_QWORD *)(v34 - 8);
      __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v149 = v35;
      if (__dsta(v31, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v30, v31, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
      }
      v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v41 = &v30[v40];
      v42 = &v31[v40];
      if (__dsta(v42, 1, v34))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v41, v42, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v41, 0, 1, v34);
      }
      v11 = v152;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
LABEL_40:
  v47 = v6[6];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v51 = a1 + v47 + 8;
  v50 = *(id *)v51;
  if (*(_QWORD *)v51 == 1)
  {
LABEL_43:
    v53 = *(_OWORD *)(v49 + 112);
    *(_OWORD *)(v48 + 96) = *(_OWORD *)(v49 + 96);
    *(_OWORD *)(v48 + 112) = v53;
    *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
    v54 = *(_OWORD *)(v49 + 48);
    *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
    *(_OWORD *)(v48 + 48) = v54;
    v55 = *(_OWORD *)(v49 + 80);
    *(_OWORD *)(v48 + 64) = *(_OWORD *)(v49 + 64);
    *(_OWORD *)(v48 + 80) = v55;
    v56 = *(_OWORD *)(v49 + 16);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v56;
    goto LABEL_44;
  }
  v52 = *(_QWORD *)(v49 + 8);
  if (v52 == 1)
  {
    sub_23B9C1B2C(v48);
    goto LABEL_43;
  }
  *(_BYTE *)v48 = *(_BYTE *)v49;
  if (v50)
  {
    if (v52)
    {
      *(_QWORD *)(v48 + 8) = v52;

      *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
      v73 = *(_QWORD *)(v49 + 32);
      *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
      *(_QWORD *)(v48 + 32) = v73;
      swift_bridgeObjectRelease();
      v74 = *(_QWORD *)(v49 + 48);
      *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
      *(_QWORD *)(v48 + 48) = v74;
      swift_bridgeObjectRelease();
      v75 = *(_QWORD *)(v49 + 64);
      *(_QWORD *)(v48 + 56) = *(_QWORD *)(v49 + 56);
      *(_QWORD *)(v48 + 64) = v75;
      swift_bridgeObjectRelease();
      v76 = *(_QWORD *)(v49 + 80);
      *(_QWORD *)(v48 + 72) = *(_QWORD *)(v49 + 72);
      *(_QWORD *)(v48 + 80) = v76;
      swift_bridgeObjectRelease();
      v77 = *(_QWORD *)(v49 + 96);
      *(_QWORD *)(v48 + 88) = *(_QWORD *)(v49 + 88);
      *(_QWORD *)(v48 + 96) = v77;
      swift_bridgeObjectRelease();
      v78 = *(_QWORD *)(v49 + 112);
      *(_QWORD *)(v48 + 104) = *(_QWORD *)(v49 + 104);
      *(_QWORD *)(v48 + 112) = v78;
      swift_bridgeObjectRelease();
      v79 = *(_QWORD *)(v49 + 128);
      *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
      *(_QWORD *)(v48 + 128) = v79;
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    sub_23B9C1AF8((id *)v51);
  }
  v106 = *(_OWORD *)(v49 + 88);
  *(_OWORD *)(v51 + 64) = *(_OWORD *)(v49 + 72);
  *(_OWORD *)(v51 + 80) = v106;
  v107 = *(_OWORD *)(v49 + 120);
  *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 104);
  *(_OWORD *)(v51 + 112) = v107;
  v108 = *(_OWORD *)(v49 + 24);
  *(_OWORD *)v51 = *(_OWORD *)(v49 + 8);
  *(_OWORD *)(v51 + 16) = v108;
  v109 = *(_OWORD *)(v49 + 56);
  *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 40);
  *(_OWORD *)(v51 + 48) = v109;
LABEL_44:
  v57 = v6[7];
  v58 = *(void **)(a1 + v57);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);

  v59 = v6[8];
  v60 = *(void **)(a1 + v59);
  *(_QWORD *)(a1 + v59) = *(_QWORD *)(a2 + v59);

  v61 = v6[9];
  v62 = (_BYTE *)(a1 + v61);
  v63 = (_BYTE *)(a2 + v61);
  v64 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (v68)
    {
      sub_23B989D9C((uint64_t)v62, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_50;
    }
    v80 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v81 = *(_QWORD *)(v80 - 8);
    v82 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v81 + 48);
    v83 = v82(v62, 1, v80);
    v84 = v82(v63, 1, v80);
    v153 = v80;
    if (v83)
    {
      if (!v84)
      {
        v85 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v62, v63, v85);
        *(_QWORD *)&v62[*(int *)(v80 + 20)] = *(_QWORD *)&v63[*(int *)(v80 + 20)];
        v86 = *(int *)(v80 + 24);
        v87 = &v62[v86];
        v88 = &v63[v86];
        *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
        *(_OWORD *)v87 = *(_OWORD *)v88;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v62, 0, 1, v80);
        goto LABEL_67;
      }
    }
    else
    {
      if (!v84)
      {
        v128 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v128 - 8) + 40))(v62, v63, v128);
        v129 = *(int *)(v80 + 20);
        v130 = *(void **)&v62[v129];
        *(_QWORD *)&v62[v129] = *(_QWORD *)&v63[v129];

        v131 = *(int *)(v80 + 24);
        v132 = &v62[v131];
        v133 = &v63[v131];
        v134 = *(_QWORD *)&v63[v131 + 8];
        *v132 = *(_QWORD *)&v63[v131];
        v132[1] = v134;
        swift_bridgeObjectRelease();
        v135 = (void *)v132[2];
        v132[2] = *((_QWORD *)v133 + 2);

LABEL_67:
        v111 = *(int *)(v64 + 20);
        v112 = &v62[v111];
        v113 = &v63[v111];
        v114 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v115 = *(_QWORD *)(v114 - 8);
        v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
        v117 = v116(v112, 1, v114);
        v118 = v116(v113, 1, v114);
        if (v117)
        {
          if (!v118)
          {
            v119 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v112, v113, v119);
            *(_QWORD *)&v112[*(int *)(v153 + 20)] = *(_QWORD *)&v113[*(int *)(v153 + 20)];
            v120 = *(int *)(v153 + 24);
            v121 = &v112[v120];
            v122 = &v113[v120];
            *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
            *(_OWORD *)v121 = *(_OWORD *)v122;
            v123 = *(int *)(v114 + 20);
            v124 = &v112[v123];
            v125 = &v113[v123];
            *((_QWORD *)v124 + 2) = *((_QWORD *)v125 + 2);
            *(_OWORD *)v124 = *(_OWORD *)v125;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
LABEL_73:
            v62[*(int *)(v64 + 24)] = v63[*(int *)(v64 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v118)
          {
            v136 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 40))(v112, v113, v136);
            v137 = *(int *)(v153 + 20);
            v138 = *(void **)&v112[v137];
            *(_QWORD *)&v112[v137] = *(_QWORD *)&v113[v137];

            v139 = *(int *)(v153 + 24);
            v140 = &v112[v139];
            v141 = &v113[v139];
            v142 = *(_QWORD *)&v113[v139 + 8];
            *(_QWORD *)v140 = *(_QWORD *)&v113[v139];
            *((_QWORD *)v140 + 1) = v142;
            swift_bridgeObjectRelease();
            v143 = (void *)*((_QWORD *)v140 + 2);
            *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);

            v144 = *(int *)(v114 + 20);
            v145 = &v112[v144];
            v146 = &v113[v144];
            *v145 = *v146;
            *(_OWORD *)(v145 + 8) = *(_OWORD *)(v146 + 8);
            goto LABEL_73;
          }
          sub_23B989D9C((uint64_t)v112, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        goto LABEL_73;
      }
      sub_23B989D9C((uint64_t)v62, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_67;
  }
  if (v68)
  {
LABEL_50:
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    return a1;
  }
  v69 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v70 + 48))(v63, 1, v69))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v89 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v62, v63, v89);
    *(_QWORD *)&v62[*(int *)(v69 + 20)] = *(_QWORD *)&v63[*(int *)(v69 + 20)];
    v90 = *(int *)(v69 + 24);
    v91 = &v62[v90];
    v92 = &v63[v90];
    *((_QWORD *)v91 + 2) = *((_QWORD *)v92 + 2);
    *(_OWORD *)v91 = *(_OWORD *)v92;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v62, 0, 1, v69);
  }
  v93 = *(int *)(v64 + 20);
  v94 = &v62[v93];
  v95 = &v63[v93];
  v96 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v97 = *(_QWORD *)(v96 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    v99 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v94, v95, v99);
    *(_QWORD *)&v94[*(int *)(v69 + 20)] = *(_QWORD *)&v95[*(int *)(v69 + 20)];
    v100 = *(int *)(v69 + 24);
    v101 = &v94[v100];
    v102 = &v95[v100];
    *((_QWORD *)v101 + 2) = *((_QWORD *)v102 + 2);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    v103 = *(int *)(v96 + 20);
    v104 = &v94[v103];
    v105 = &v95[v103];
    *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
    *(_OWORD *)v104 = *(_OWORD *)v105;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
  }
  v62[*(int *)(v64 + 24)] = v63[*(int *)(v64 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  return a1;
}

uint64_t _s5StateO6LoadedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB884B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonInfo();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s5StateO6LoadedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB884FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonInfo();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23BB8853C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PersonInfo();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_23BB885C4()
{
  return MEMORY[0x24BE316A8]();
}

uint64_t sub_23BB885D0()
{
  return MEMORY[0x24BE31758]();
}

uint64_t sub_23BB885DC()
{
  return MEMORY[0x24BE31760]();
}

uint64_t sub_23BB885E8()
{
  return MEMORY[0x24BE31778]();
}

uint64_t sub_23BB885F4()
{
  return MEMORY[0x24BE317E8]();
}

uint64_t sub_23BB88600()
{
  return MEMORY[0x24BE318A0]();
}

uint64_t sub_23BB8860C()
{
  return MEMORY[0x24BDCB170]();
}

uint64_t sub_23BB88618()
{
  return MEMORY[0x24BDCB188]();
}

uint64_t sub_23BB88624()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23BB88630()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23BB8863C()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23BB88648()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23BB88654()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23BB88660()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23BB8866C()
{
  return MEMORY[0x24BDCB438]();
}

uint64_t sub_23BB88678()
{
  return MEMORY[0x24BDCB488]();
}

uint64_t sub_23BB88684()
{
  return MEMORY[0x24BDCB498]();
}

uint64_t sub_23BB88690()
{
  return MEMORY[0x24BDCB568]();
}

uint64_t sub_23BB8869C()
{
  return MEMORY[0x24BDCB620]();
}

uint64_t sub_23BB886A8()
{
  return MEMORY[0x24BDCB648]();
}

uint64_t sub_23BB886B4()
{
  return MEMORY[0x24BDCB6D0]();
}

uint64_t sub_23BB886C0()
{
  return MEMORY[0x24BDCB6E8]();
}

uint64_t sub_23BB886CC()
{
  return MEMORY[0x24BDCB738]();
}

uint64_t sub_23BB886D8()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23BB886E4()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23BB886F0()
{
  return MEMORY[0x24BDCB958]();
}

uint64_t sub_23BB886FC()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_23BB88708()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_23BB88714()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_23BB88720()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_23BB8872C()
{
  return MEMORY[0x24BDCBA60]();
}

uint64_t sub_23BB88738()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_23BB88744()
{
  return MEMORY[0x24BDCBAC0]();
}

uint64_t sub_23BB88750()
{
  return MEMORY[0x24BDCBAD0]();
}

uint64_t sub_23BB8875C()
{
  return MEMORY[0x24BDCBAE8]();
}

uint64_t sub_23BB88768()
{
  return MEMORY[0x24BDCBB28]();
}

uint64_t sub_23BB88774()
{
  return MEMORY[0x24BDCBB30]();
}

uint64_t sub_23BB88780()
{
  return MEMORY[0x24BDCBB68]();
}

uint64_t sub_23BB8878C()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_23BB88798()
{
  return MEMORY[0x24BDCBED8]();
}

uint64_t sub_23BB887A4()
{
  return MEMORY[0x24BDCBF10]();
}

uint64_t sub_23BB887B0()
{
  return MEMORY[0x24BDCC9D0]();
}

uint64_t sub_23BB887BC()
{
  return MEMORY[0x24BDCC9D8]();
}

uint64_t sub_23BB887C8()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23BB887D4()
{
  return MEMORY[0x24BDCD6A8]();
}

uint64_t sub_23BB887E0()
{
  return MEMORY[0x24BDCD6B0]();
}

uint64_t sub_23BB887EC()
{
  return MEMORY[0x24BDCD6B8]();
}

uint64_t sub_23BB887F8()
{
  return MEMORY[0x24BDCD6C0]();
}

uint64_t sub_23BB88804()
{
  return MEMORY[0x24BDCD6C8]();
}

uint64_t sub_23BB88810()
{
  return MEMORY[0x24BDCD6D0]();
}

uint64_t sub_23BB8881C()
{
  return MEMORY[0x24BDCD6D8]();
}

uint64_t sub_23BB88828()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23BB88834()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23BB88840()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_23BB8884C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23BB88858()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23BB88864()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23BB88870()
{
  return MEMORY[0x24BDCE2F8]();
}

uint64_t sub_23BB8887C()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23BB88888()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_23BB88894()
{
  return MEMORY[0x24BDCE4C0]();
}

uint64_t sub_23BB888A0()
{
  return MEMORY[0x24BDCE4C8]();
}

uint64_t sub_23BB888AC()
{
  return MEMORY[0x24BDCE4E0]();
}

uint64_t sub_23BB888B8()
{
  return MEMORY[0x24BDCE4F0]();
}

uint64_t sub_23BB888C4()
{
  return MEMORY[0x24BDCE500]();
}

uint64_t sub_23BB888D0()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23BB888DC()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_23BB888E8()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23BB888F4()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_23BB88900()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_23BB8890C()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_23BB88918()
{
  return MEMORY[0x24BDCE7A8]();
}

uint64_t sub_23BB88924()
{
  return MEMORY[0x24BDCE7B0]();
}

uint64_t sub_23BB88930()
{
  return MEMORY[0x24BDCE7C8]();
}

uint64_t sub_23BB8893C()
{
  return MEMORY[0x24BDCE7E0]();
}

uint64_t sub_23BB88948()
{
  return MEMORY[0x24BDCE7F8]();
}

uint64_t sub_23BB88954()
{
  return MEMORY[0x24BDCE828]();
}

uint64_t sub_23BB88960()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23BB8896C()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23BB88978()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23BB88984()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23BB88990()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23BB8899C()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23BB889A8()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23BB889B4()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23BB889C0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23BB889CC()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23BB889D8()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_23BB889E4()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23BB889F0()
{
  return MEMORY[0x24BDCF0D0]();
}

uint64_t sub_23BB889FC()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_23BB88A08()
{
  return MEMORY[0x24BEE5BF8]();
}

uint64_t sub_23BB88A14()
{
  return MEMORY[0x24BEE5C38]();
}

uint64_t sub_23BB88A20()
{
  return MEMORY[0x24BEE5C40]();
}

uint64_t sub_23BB88A2C()
{
  return MEMORY[0x24BEE5C48]();
}

uint64_t sub_23BB88A38()
{
  return MEMORY[0x24BEE5C50]();
}

uint64_t sub_23BB88A44()
{
  return MEMORY[0x24BEE5C58]();
}

uint64_t sub_23BB88A50()
{
  return MEMORY[0x24BEE5C60]();
}

uint64_t sub_23BB88A5C()
{
  return MEMORY[0x24BEE5140]();
}

uint64_t sub_23BB88A68()
{
  return MEMORY[0x24BEE5150]();
}

uint64_t sub_23BB88A74()
{
  return MEMORY[0x24BEE5158]();
}

uint64_t sub_23BB88A80()
{
  return MEMORY[0x24BEE5168]();
}

uint64_t sub_23BB88A8C()
{
  return MEMORY[0x24BEE5180]();
}

uint64_t sub_23BB88A98()
{
  return MEMORY[0x24BEE5188]();
}

uint64_t sub_23BB88AA4()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_23BB88AB0()
{
  return MEMORY[0x24BE30BF0]();
}

uint64_t sub_23BB88ABC()
{
  return MEMORY[0x24BE30BF8]();
}

uint64_t sub_23BB88AC8()
{
  return MEMORY[0x24BE31D10]();
}

uint64_t sub_23BB88AD4()
{
  return MEMORY[0x24BE31D50]();
}

uint64_t sub_23BB88AE0()
{
  return MEMORY[0x24BE31D88]();
}

uint64_t sub_23BB88AEC()
{
  return MEMORY[0x24BE31DB8]();
}

uint64_t sub_23BB88AF8()
{
  return MEMORY[0x24BE31DD0]();
}

uint64_t sub_23BB88B04()
{
  return MEMORY[0x24BE31DE8]();
}

uint64_t sub_23BB88B10()
{
  return MEMORY[0x24BE31E10]();
}

uint64_t sub_23BB88B1C()
{
  return MEMORY[0x24BE31E18]();
}

uint64_t sub_23BB88B28()
{
  return MEMORY[0x24BE31E40]();
}

uint64_t sub_23BB88B34()
{
  return MEMORY[0x24BE31E48]();
}

uint64_t sub_23BB88B40()
{
  return MEMORY[0x24BE31E58]();
}

uint64_t sub_23BB88B4C()
{
  return MEMORY[0x24BE31E60]();
}

uint64_t sub_23BB88B58()
{
  return MEMORY[0x24BE31E70]();
}

uint64_t sub_23BB88B64()
{
  return MEMORY[0x24BE31E78]();
}

uint64_t sub_23BB88B70()
{
  return MEMORY[0x24BE31E80]();
}

uint64_t sub_23BB88B7C()
{
  return MEMORY[0x24BE31EC0]();
}

uint64_t sub_23BB88B88()
{
  return MEMORY[0x24BE31F00]();
}

uint64_t sub_23BB88B94()
{
  return MEMORY[0x24BE31F20]();
}

uint64_t sub_23BB88BA0()
{
  return MEMORY[0x24BE31F48]();
}

uint64_t sub_23BB88BAC()
{
  return MEMORY[0x24BE31F98]();
}

uint64_t sub_23BB88BB8()
{
  return MEMORY[0x24BE31FC0]();
}

uint64_t sub_23BB88BC4()
{
  return MEMORY[0x24BE31FC8]();
}

uint64_t sub_23BB88BD0()
{
  return MEMORY[0x24BE31FF0]();
}

uint64_t sub_23BB88BDC()
{
  return MEMORY[0x24BE31FF8]();
}

uint64_t sub_23BB88BE8()
{
  return MEMORY[0x24BE32018]();
}

uint64_t sub_23BB88BF4()
{
  return MEMORY[0x24BE32020]();
}

uint64_t sub_23BB88C00()
{
  return MEMORY[0x24BE32048]();
}

uint64_t sub_23BB88C0C()
{
  return MEMORY[0x24BE32060]();
}

uint64_t sub_23BB88C18()
{
  return MEMORY[0x24BE320A0]();
}

uint64_t sub_23BB88C24()
{
  return MEMORY[0x24BE320A8]();
}

uint64_t sub_23BB88C30()
{
  return MEMORY[0x24BE320B8]();
}

uint64_t sub_23BB88C3C()
{
  return MEMORY[0x24BE320C0]();
}

uint64_t sub_23BB88C48()
{
  return MEMORY[0x24BE320C8]();
}

uint64_t sub_23BB88C54()
{
  return MEMORY[0x24BE320E8]();
}

uint64_t sub_23BB88C60()
{
  return MEMORY[0x24BE320F0]();
}

uint64_t sub_23BB88C6C()
{
  return MEMORY[0x24BE32108]();
}

uint64_t sub_23BB88C78()
{
  return MEMORY[0x24BE32118]();
}

uint64_t sub_23BB88C84()
{
  return MEMORY[0x24BE32140]();
}

uint64_t sub_23BB88C90()
{
  return MEMORY[0x24BE32190]();
}

uint64_t sub_23BB88C9C()
{
  return MEMORY[0x24BE321A0]();
}

uint64_t sub_23BB88CA8()
{
  return MEMORY[0x24BE321B0]();
}

uint64_t sub_23BB88CB4()
{
  return MEMORY[0x24BE32218]();
}

uint64_t sub_23BB88CC0()
{
  return MEMORY[0x24BE32228]();
}

uint64_t sub_23BB88CCC()
{
  return MEMORY[0x24BE32238]();
}

uint64_t sub_23BB88CD8()
{
  return MEMORY[0x24BE32240]();
}

uint64_t sub_23BB88CE4()
{
  return MEMORY[0x24BE32250]();
}

uint64_t sub_23BB88CF0()
{
  return MEMORY[0x24BE32260]();
}

uint64_t sub_23BB88CFC()
{
  return MEMORY[0x24BE32270]();
}

uint64_t sub_23BB88D08()
{
  return MEMORY[0x24BE32280]();
}

uint64_t sub_23BB88D14()
{
  return MEMORY[0x24BE32290]();
}

uint64_t sub_23BB88D20()
{
  return MEMORY[0x24BE322A0]();
}

uint64_t sub_23BB88D2C()
{
  return MEMORY[0x24BE322B0]();
}

uint64_t sub_23BB88D38()
{
  return MEMORY[0x24BE322C8]();
}

uint64_t sub_23BB88D44()
{
  return MEMORY[0x24BE322E0]();
}

uint64_t sub_23BB88D50()
{
  return MEMORY[0x24BE322E8]();
}

uint64_t sub_23BB88D5C()
{
  return MEMORY[0x24BE322F8]();
}

uint64_t sub_23BB88D68()
{
  return MEMORY[0x24BE32320]();
}

uint64_t sub_23BB88D74()
{
  return MEMORY[0x24BE32338]();
}

uint64_t sub_23BB88D80()
{
  return MEMORY[0x24BE32348]();
}

uint64_t sub_23BB88D8C()
{
  return MEMORY[0x24BE32378]();
}

uint64_t sub_23BB88D98()
{
  return MEMORY[0x24BE32388]();
}

uint64_t sub_23BB88DA4()
{
  return MEMORY[0x24BE323B8]();
}

uint64_t sub_23BB88DB0()
{
  return MEMORY[0x24BE323C0]();
}

uint64_t sub_23BB88DBC()
{
  return MEMORY[0x24BE323C8]();
}

uint64_t sub_23BB88DC8()
{
  return MEMORY[0x24BE323D8]();
}

uint64_t sub_23BB88DD4()
{
  return MEMORY[0x24BE323E8]();
}

uint64_t sub_23BB88DE0()
{
  return MEMORY[0x24BE323F0]();
}

uint64_t sub_23BB88DEC()
{
  return MEMORY[0x24BE323F8]();
}

uint64_t sub_23BB88DF8()
{
  return MEMORY[0x24BE32400]();
}

uint64_t sub_23BB88E04()
{
  return MEMORY[0x24BE32408]();
}

uint64_t sub_23BB88E10()
{
  return MEMORY[0x24BE32410]();
}

uint64_t sub_23BB88E1C()
{
  return MEMORY[0x24BE32418]();
}

uint64_t sub_23BB88E28()
{
  return MEMORY[0x24BE32420]();
}

uint64_t sub_23BB88E34()
{
  return MEMORY[0x24BE32428]();
}

uint64_t sub_23BB88E40()
{
  return MEMORY[0x24BE32430]();
}

uint64_t sub_23BB88E4C()
{
  return MEMORY[0x24BE32448]();
}

uint64_t sub_23BB88E58()
{
  return MEMORY[0x24BE32458]();
}

uint64_t sub_23BB88E64()
{
  return MEMORY[0x24BE32460]();
}

uint64_t sub_23BB88E70()
{
  return MEMORY[0x24BE32468]();
}

uint64_t sub_23BB88E7C()
{
  return MEMORY[0x24BE32470]();
}

uint64_t sub_23BB88E88()
{
  return MEMORY[0x24BE32478]();
}

uint64_t sub_23BB88E94()
{
  return MEMORY[0x24BE32490]();
}

uint64_t sub_23BB88EA0()
{
  return MEMORY[0x24BE324B0]();
}

uint64_t sub_23BB88EAC()
{
  return MEMORY[0x24BE2E778]();
}

uint64_t sub_23BB88EB8()
{
  return MEMORY[0x24BE324C0]();
}

uint64_t sub_23BB88EC4()
{
  return MEMORY[0x24BE324C8]();
}

uint64_t sub_23BB88ED0()
{
  return MEMORY[0x24BE324D8]();
}

uint64_t sub_23BB88EDC()
{
  return MEMORY[0x24BE324E8]();
}

uint64_t sub_23BB88EE8()
{
  return MEMORY[0x24BDFBC40]();
}

uint64_t sub_23BB88EF4()
{
  return MEMORY[0x24BDFBC50]();
}

uint64_t sub_23BB88F00()
{
  return MEMORY[0x24BDFBC58]();
}

uint64_t sub_23BB88F0C()
{
  return MEMORY[0x24BDFBC68]();
}

uint64_t sub_23BB88F18()
{
  return MEMORY[0x24BDFBCA0]();
}

uint64_t sub_23BB88F24()
{
  return MEMORY[0x24BDFBCA8]();
}

uint64_t sub_23BB88F30()
{
  return MEMORY[0x24BDFBCC0]();
}

uint64_t sub_23BB88F3C()
{
  return MEMORY[0x24BDFBCC8]();
}

uint64_t sub_23BB88F48()
{
  return MEMORY[0x24BDFBCD8]();
}

uint64_t sub_23BB88F54()
{
  return MEMORY[0x24BDFBCE0]();
}

uint64_t sub_23BB88F60()
{
  return MEMORY[0x24BDFBCE8]();
}

uint64_t sub_23BB88F6C()
{
  return MEMORY[0x24BDFBCF8]();
}

uint64_t sub_23BB88F78()
{
  return MEMORY[0x24BDFBD00]();
}

uint64_t sub_23BB88F84()
{
  return MEMORY[0x24BDFBD10]();
}

uint64_t sub_23BB88F90()
{
  return MEMORY[0x24BDFBD18]();
}

uint64_t sub_23BB88F9C()
{
  return MEMORY[0x24BDFBD20]();
}

uint64_t sub_23BB88FA8()
{
  return MEMORY[0x24BDFBD30]();
}

uint64_t sub_23BB88FB4()
{
  return MEMORY[0x24BDFBD38]();
}

uint64_t sub_23BB88FC0()
{
  return MEMORY[0x24BDFBD40]();
}

uint64_t sub_23BB88FCC()
{
  return MEMORY[0x24BDFBD48]();
}

uint64_t sub_23BB88FD8()
{
  return MEMORY[0x24BDFBD68]();
}

uint64_t sub_23BB88FE4()
{
  return MEMORY[0x24BDFBD70]();
}

uint64_t sub_23BB88FF0()
{
  return MEMORY[0x24BDFBD80]();
}

uint64_t sub_23BB88FFC()
{
  return MEMORY[0x24BDFBD88]();
}

uint64_t sub_23BB89008()
{
  return MEMORY[0x24BDFBD98]();
}

uint64_t sub_23BB89014()
{
  return MEMORY[0x24BDFBDA0]();
}

uint64_t sub_23BB89020()
{
  return MEMORY[0x24BDFBDA8]();
}

uint64_t sub_23BB8902C()
{
  return MEMORY[0x24BDFBDB0]();
}

uint64_t sub_23BB89038()
{
  return MEMORY[0x24BDFBDB8]();
}

uint64_t sub_23BB89044()
{
  return MEMORY[0x24BDFBDC0]();
}

uint64_t sub_23BB89050()
{
  return MEMORY[0x24BDFBDD0]();
}

uint64_t sub_23BB8905C()
{
  return MEMORY[0x24BDFBDD8]();
}

uint64_t sub_23BB89068()
{
  return MEMORY[0x24BDFBDE0]();
}

uint64_t sub_23BB89074()
{
  return MEMORY[0x24BDFBDE8]();
}

uint64_t sub_23BB89080()
{
  return MEMORY[0x24BDFBDF0]();
}

uint64_t sub_23BB8908C()
{
  return MEMORY[0x24BDFBDF8]();
}

uint64_t sub_23BB89098()
{
  return MEMORY[0x24BDFBE08]();
}

uint64_t sub_23BB890A4()
{
  return MEMORY[0x24BDFBE30]();
}

uint64_t sub_23BB890B0()
{
  return MEMORY[0x24BDFBE38]();
}

uint64_t sub_23BB890BC()
{
  return MEMORY[0x24BDFBE48]();
}

uint64_t sub_23BB890C8()
{
  return MEMORY[0x24BDFBE50]();
}

uint64_t sub_23BB890D4()
{
  return MEMORY[0x24BDFBE58]();
}

uint64_t sub_23BB890E0()
{
  return MEMORY[0x24BDFBE68]();
}

uint64_t sub_23BB890EC()
{
  return MEMORY[0x24BDFBE78]();
}

uint64_t sub_23BB890F8()
{
  return MEMORY[0x24BDFBE88]();
}

uint64_t sub_23BB89104()
{
  return MEMORY[0x24BDFBEE8]();
}

uint64_t sub_23BB89110()
{
  return MEMORY[0x24BDFBEF0]();
}

uint64_t sub_23BB8911C()
{
  return MEMORY[0x24BDFBF08]();
}

uint64_t sub_23BB89128()
{
  return MEMORY[0x24BDFBF30]();
}

uint64_t sub_23BB89134()
{
  return MEMORY[0x24BDFBF60]();
}

uint64_t sub_23BB89140()
{
  return MEMORY[0x24BDFBF68]();
}

uint64_t sub_23BB8914C()
{
  return MEMORY[0x24BDFBF78]();
}

uint64_t sub_23BB89158()
{
  return MEMORY[0x24BE18CF8]();
}

uint64_t sub_23BB89164()
{
  return MEMORY[0x24BE18D20]();
}

uint64_t sub_23BB89170()
{
  return MEMORY[0x24BE18D28]();
}

uint64_t sub_23BB8917C()
{
  return MEMORY[0x24BE18D30]();
}

uint64_t sub_23BB89188()
{
  return MEMORY[0x24BE18D40]();
}

uint64_t sub_23BB89194()
{
  return MEMORY[0x24BE18D48]();
}

uint64_t sub_23BB891A0()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_23BB891AC()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23BB891B8()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23BB891C4()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23BB891D0()
{
  return MEMORY[0x24BDB9518]();
}

uint64_t sub_23BB891DC()
{
  return MEMORY[0x24BDB9790]();
}

uint64_t sub_23BB891E8()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_23BB891F4()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_23BB89200()
{
  return MEMORY[0x24BDB9D68]();
}

uint64_t sub_23BB8920C()
{
  return MEMORY[0x24BDB9D80]();
}

uint64_t sub_23BB89218()
{
  return MEMORY[0x24BDB9E70]();
}

uint64_t sub_23BB89224()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_23BB89230()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_23BB8923C()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_23BB89248()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_23BB89254()
{
  return MEMORY[0x24BDB9FD0]();
}

uint64_t sub_23BB89260()
{
  return MEMORY[0x24BDBA0B0]();
}

uint64_t sub_23BB8926C()
{
  return MEMORY[0x24BDBA0C0]();
}

uint64_t sub_23BB89278()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_23BB89284()
{
  return MEMORY[0x24BDEAF80]();
}

uint64_t sub_23BB89290()
{
  return MEMORY[0x24BDEAF98]();
}

uint64_t sub_23BB8929C()
{
  return MEMORY[0x24BDEAFA8]();
}

uint64_t sub_23BB892A8()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_23BB892B4()
{
  return MEMORY[0x24BDEB170]();
}

uint64_t sub_23BB892C0()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t sub_23BB892CC()
{
  return MEMORY[0x24BDEB330]();
}

uint64_t sub_23BB892D8()
{
  return MEMORY[0x24BDEB338]();
}

uint64_t sub_23BB892E4()
{
  return MEMORY[0x24BDEB370]();
}

uint64_t sub_23BB892F0()
{
  return MEMORY[0x24BDEB4A0]();
}

uint64_t sub_23BB892FC()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_23BB89308()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_23BB89314()
{
  return MEMORY[0x24BDEB798]();
}

uint64_t sub_23BB89320()
{
  return MEMORY[0x24BDEB7B8]();
}

uint64_t sub_23BB8932C()
{
  return MEMORY[0x24BDEB828]();
}

uint64_t sub_23BB89338()
{
  return MEMORY[0x24BDEBBC8]();
}

uint64_t sub_23BB89344()
{
  return MEMORY[0x24BDEBC10]();
}

uint64_t sub_23BB89350()
{
  return MEMORY[0x24BDEBC38]();
}

uint64_t sub_23BB8935C()
{
  return MEMORY[0x24BDEBC40]();
}

uint64_t sub_23BB89368()
{
  return MEMORY[0x24BDEBD98]();
}

uint64_t sub_23BB89374()
{
  return MEMORY[0x24BDEBE28]();
}

uint64_t sub_23BB89380()
{
  return MEMORY[0x24BDEBE30]();
}

uint64_t sub_23BB8938C()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_23BB89398()
{
  return MEMORY[0x24BDEBF88]();
}

uint64_t sub_23BB893A4()
{
  return MEMORY[0x24BDEC030]();
}

uint64_t sub_23BB893B0()
{
  return MEMORY[0x24BDEC038]();
}

uint64_t sub_23BB893BC()
{
  return MEMORY[0x24BDEC110]();
}

uint64_t sub_23BB893C8()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_23BB893D4()
{
  return MEMORY[0x24BDEC148]();
}

uint64_t sub_23BB893E0()
{
  return MEMORY[0x24BDEC4E0]();
}

uint64_t sub_23BB893EC()
{
  return MEMORY[0x24BDEC590]();
}

uint64_t sub_23BB893F8()
{
  return MEMORY[0x24BDEC5A0]();
}

uint64_t sub_23BB89404()
{
  return MEMORY[0x24BDEC648]();
}

uint64_t sub_23BB89410()
{
  return MEMORY[0x24BDEC9B0]();
}

uint64_t sub_23BB8941C()
{
  return MEMORY[0x24BDECB38]();
}

uint64_t sub_23BB89428()
{
  return MEMORY[0x24BDECB40]();
}

uint64_t sub_23BB89434()
{
  return MEMORY[0x24BDECB50]();
}

uint64_t sub_23BB89440()
{
  return MEMORY[0x24BDECB58]();
}

uint64_t sub_23BB8944C()
{
  return MEMORY[0x24BDECB68]();
}

uint64_t sub_23BB89458()
{
  return MEMORY[0x24BDECB78]();
}

uint64_t sub_23BB89464()
{
  return MEMORY[0x24BDECB80]();
}

uint64_t sub_23BB89470()
{
  return MEMORY[0x24BDECBD8]();
}

uint64_t sub_23BB8947C()
{
  return MEMORY[0x24BDECBF8]();
}

uint64_t sub_23BB89488()
{
  return MEMORY[0x24BDECCE8]();
}

uint64_t sub_23BB89494()
{
  return MEMORY[0x24BDECE88]();
}

uint64_t sub_23BB894A0()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_23BB894AC()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_23BB894B8()
{
  return MEMORY[0x24BDED330]();
}

uint64_t sub_23BB894C4()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_23BB894D0()
{
  return MEMORY[0x24BDED3C0]();
}

uint64_t sub_23BB894DC()
{
  return MEMORY[0x24BDED3C8]();
}

uint64_t sub_23BB894E8()
{
  return MEMORY[0x24BDED6C0]();
}

uint64_t sub_23BB894F4()
{
  return MEMORY[0x24BDED6D0]();
}

uint64_t sub_23BB89500()
{
  return MEMORY[0x24BDED860]();
}

uint64_t sub_23BB8950C()
{
  return MEMORY[0x24BDED868]();
}

uint64_t sub_23BB89518()
{
  return MEMORY[0x24BDED970]();
}

uint64_t sub_23BB89524()
{
  return MEMORY[0x24BDED998]();
}

uint64_t sub_23BB89530()
{
  return MEMORY[0x24BDEDB60]();
}

uint64_t sub_23BB8953C()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_23BB89548()
{
  return MEMORY[0x24BDEDC60]();
}

uint64_t sub_23BB89554()
{
  return MEMORY[0x24BDEDC68]();
}

uint64_t sub_23BB89560()
{
  return MEMORY[0x24BDEDC78]();
}

uint64_t sub_23BB8956C()
{
  return MEMORY[0x24BDEDC80]();
}

uint64_t sub_23BB89578()
{
  return MEMORY[0x24BDEDCA8]();
}

uint64_t sub_23BB89584()
{
  return MEMORY[0x24BDEDCC8]();
}

uint64_t sub_23BB89590()
{
  return MEMORY[0x24BDEDCD0]();
}

uint64_t sub_23BB8959C()
{
  return MEMORY[0x24BDEDF08]();
}

uint64_t sub_23BB895A8()
{
  return MEMORY[0x24BDEDF10]();
}

uint64_t sub_23BB895B4()
{
  return MEMORY[0x24BDEDF38]();
}

uint64_t sub_23BB895C0()
{
  return MEMORY[0x24BDEDF68]();
}

uint64_t sub_23BB895CC()
{
  return MEMORY[0x24BDEDF70]();
}

uint64_t sub_23BB895D8()
{
  return MEMORY[0x24BDEDFE8]();
}

uint64_t sub_23BB895E4()
{
  return MEMORY[0x24BDEDFF0]();
}

uint64_t sub_23BB895F0()
{
  return MEMORY[0x24BDEE020]();
}

uint64_t sub_23BB895FC()
{
  return MEMORY[0x24BDEE028]();
}

uint64_t sub_23BB89608()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t sub_23BB89614()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t sub_23BB89620()
{
  return MEMORY[0x24BDEE138]();
}

uint64_t sub_23BB8962C()
{
  return MEMORY[0x24BDEE140]();
}

uint64_t sub_23BB89638()
{
  return MEMORY[0x24BDEE148]();
}

uint64_t sub_23BB89644()
{
  return MEMORY[0x24BDEE150]();
}

uint64_t sub_23BB89650()
{
  return MEMORY[0x24BDEE190]();
}

uint64_t sub_23BB8965C()
{
  return MEMORY[0x24BDEE198]();
}

uint64_t sub_23BB89668()
{
  return MEMORY[0x24BDEE1D8]();
}

uint64_t sub_23BB89674()
{
  return MEMORY[0x24BDEE1E0]();
}

uint64_t sub_23BB89680()
{
  return MEMORY[0x24BDEE288]();
}

uint64_t sub_23BB8968C()
{
  return MEMORY[0x24BDEE290]();
}

uint64_t sub_23BB89698()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_23BB896A4()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_23BB896B0()
{
  return MEMORY[0x24BDEE3B0]();
}

uint64_t sub_23BB896BC()
{
  return MEMORY[0x24BDEE3B8]();
}

uint64_t sub_23BB896C8()
{
  return MEMORY[0x24BDEE3F0]();
}

uint64_t sub_23BB896D4()
{
  return MEMORY[0x24BDEE448]();
}

uint64_t sub_23BB896E0()
{
  return MEMORY[0x24BDEE450]();
}

uint64_t sub_23BB896EC()
{
  return MEMORY[0x24BDEE468]();
}

uint64_t sub_23BB896F8()
{
  return MEMORY[0x24BDEE478]();
}

uint64_t sub_23BB89704()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_23BB89710()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_23BB8971C()
{
  return MEMORY[0x24BDEE4C0]();
}

uint64_t sub_23BB89728()
{
  return MEMORY[0x24BDEE4D8]();
}

uint64_t sub_23BB89734()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_23BB89740()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_23BB8974C()
{
  return MEMORY[0x24BDEE530]();
}

uint64_t sub_23BB89758()
{
  return MEMORY[0x24BDEE538]();
}

uint64_t sub_23BB89764()
{
  return MEMORY[0x24BDEE608]();
}

uint64_t sub_23BB89770()
{
  return MEMORY[0x24BDEE6F8]();
}

uint64_t sub_23BB8977C()
{
  return MEMORY[0x24BDEE718]();
}

uint64_t sub_23BB89788()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_23BB89794()
{
  return MEMORY[0x24BDEE750]();
}

uint64_t sub_23BB897A0()
{
  return MEMORY[0x24BDEEA00]();
}

uint64_t sub_23BB897AC()
{
  return MEMORY[0x24BDEEA28]();
}

uint64_t sub_23BB897B8()
{
  return MEMORY[0x24BDEEA30]();
}

uint64_t sub_23BB897C4()
{
  return MEMORY[0x24BDEEA40]();
}

uint64_t sub_23BB897D0()
{
  return MEMORY[0x24BDEEA50]();
}

uint64_t sub_23BB897DC()
{
  return MEMORY[0x24BDEEA60]();
}

uint64_t sub_23BB897E8()
{
  return MEMORY[0x24BDEEB00]();
}

uint64_t sub_23BB897F4()
{
  return MEMORY[0x24BDEEB10]();
}

uint64_t sub_23BB89800()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t sub_23BB8980C()
{
  return MEMORY[0x24BDEECF8]();
}

uint64_t sub_23BB89818()
{
  return MEMORY[0x24BDEED88]();
}

uint64_t sub_23BB89824()
{
  return MEMORY[0x24BDEEDC0]();
}

uint64_t sub_23BB89830()
{
  return MEMORY[0x24BDEEDC8]();
}

uint64_t sub_23BB8983C()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_23BB89848()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_23BB89854()
{
  return MEMORY[0x24BDEF0D8]();
}

uint64_t sub_23BB89860()
{
  return MEMORY[0x24BDEF0E8]();
}

uint64_t sub_23BB8986C()
{
  return MEMORY[0x24BDEF110]();
}

uint64_t sub_23BB89878()
{
  return MEMORY[0x24BDEF168]();
}

uint64_t sub_23BB89884()
{
  return MEMORY[0x24BDEF188]();
}

uint64_t sub_23BB89890()
{
  return MEMORY[0x24BDEF190]();
}

uint64_t sub_23BB8989C()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_23BB898A8()
{
  return MEMORY[0x24BDEF228]();
}

uint64_t sub_23BB898B4()
{
  return MEMORY[0x24BDEF238]();
}

uint64_t sub_23BB898C0()
{
  return MEMORY[0x24BDEF248]();
}

uint64_t sub_23BB898CC()
{
  return MEMORY[0x24BDEF260]();
}

uint64_t sub_23BB898D8()
{
  return MEMORY[0x24BDEF270]();
}

uint64_t sub_23BB898E4()
{
  return MEMORY[0x24BDEF278]();
}

uint64_t sub_23BB898F0()
{
  return MEMORY[0x24BDEF288]();
}

uint64_t sub_23BB898FC()
{
  return MEMORY[0x24BDEF298]();
}

uint64_t sub_23BB89908()
{
  return MEMORY[0x24BDEF2A8]();
}

uint64_t sub_23BB89914()
{
  return MEMORY[0x24BDEF2C0]();
}

uint64_t sub_23BB89920()
{
  return MEMORY[0x24BDEF2C8]();
}

uint64_t sub_23BB8992C()
{
  return MEMORY[0x24BDEF2D8]();
}

uint64_t sub_23BB89938()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_23BB89944()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_23BB89950()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_23BB8995C()
{
  return MEMORY[0x24BDEF468]();
}

uint64_t sub_23BB89968()
{
  return MEMORY[0x24BDEF470]();
}

uint64_t sub_23BB89974()
{
  return MEMORY[0x24BDEF700]();
}

uint64_t sub_23BB89980()
{
  return MEMORY[0x24BDEF720]();
}

uint64_t sub_23BB8998C()
{
  return MEMORY[0x24BDEF730]();
}

uint64_t sub_23BB89998()
{
  return MEMORY[0x24BDEF740]();
}

uint64_t sub_23BB899A4()
{
  return MEMORY[0x24BDEF998]();
}

uint64_t sub_23BB899B0()
{
  return MEMORY[0x24BDEFA78]();
}

uint64_t sub_23BB899BC()
{
  return MEMORY[0x24BDEFCA8]();
}

uint64_t sub_23BB899C8()
{
  return MEMORY[0x24BDEFCC8]();
}

uint64_t sub_23BB899D4()
{
  return MEMORY[0x24BDEFD18]();
}

uint64_t sub_23BB899E0()
{
  return MEMORY[0x24BDEFD30]();
}

uint64_t sub_23BB899EC()
{
  return MEMORY[0x24BDEFD50]();
}

uint64_t sub_23BB899F8()
{
  return MEMORY[0x24BDEFD60]();
}

uint64_t sub_23BB89A04()
{
  return MEMORY[0x24BDEFD68]();
}

uint64_t sub_23BB89A10()
{
  return MEMORY[0x24BDEFEF8]();
}

uint64_t sub_23BB89A1C()
{
  return MEMORY[0x24BDF0200]();
}

uint64_t sub_23BB89A28()
{
  return MEMORY[0x24BDF0210]();
}

uint64_t sub_23BB89A34()
{
  return MEMORY[0x24BDF0220]();
}

uint64_t sub_23BB89A40()
{
  return MEMORY[0x24BDF0230]();
}

uint64_t sub_23BB89A4C()
{
  return MEMORY[0x24BDF02E8]();
}

uint64_t sub_23BB89A58()
{
  return MEMORY[0x24BDF02F8]();
}

uint64_t sub_23BB89A64()
{
  return MEMORY[0x24BDF0320]();
}

uint64_t sub_23BB89A70()
{
  return MEMORY[0x24BDF0328]();
}

uint64_t sub_23BB89A7C()
{
  return MEMORY[0x24BDF0AF0]();
}

uint64_t sub_23BB89A88()
{
  return MEMORY[0x24BDF0BD8]();
}

uint64_t sub_23BB89A94()
{
  return MEMORY[0x24BDF0BF8]();
}

uint64_t sub_23BB89AA0()
{
  return MEMORY[0x24BDF0D98]();
}

uint64_t sub_23BB89AAC()
{
  return MEMORY[0x24BDF0DA8]();
}

uint64_t sub_23BB89AB8()
{
  return MEMORY[0x24BDF0EC0]();
}

uint64_t sub_23BB89AC4()
{
  return MEMORY[0x24BDF0ED0]();
}

uint64_t sub_23BB89AD0()
{
  return MEMORY[0x24BDF0EE0]();
}

uint64_t sub_23BB89ADC()
{
  return MEMORY[0x24BDF0EF0]();
}

uint64_t sub_23BB89AE8()
{
  return MEMORY[0x24BDF0F00]();
}

uint64_t sub_23BB89AF4()
{
  return MEMORY[0x24BDF0F10]();
}

uint64_t sub_23BB89B00()
{
  return MEMORY[0x24BDF0F18]();
}

uint64_t sub_23BB89B0C()
{
  return MEMORY[0x24BDF0F28]();
}

uint64_t sub_23BB89B18()
{
  return MEMORY[0x24BDF0F38]();
}

uint64_t sub_23BB89B24()
{
  return MEMORY[0x24BDF11E0]();
}

uint64_t sub_23BB89B30()
{
  return MEMORY[0x24BDF1200]();
}

uint64_t sub_23BB89B3C()
{
  return MEMORY[0x24BDF12B8]();
}

uint64_t sub_23BB89B48()
{
  return MEMORY[0x24BDF12C8]();
}

uint64_t sub_23BB89B54()
{
  return MEMORY[0x24BDF12E0]();
}

uint64_t sub_23BB89B60()
{
  return MEMORY[0x24BDF12E8]();
}

uint64_t sub_23BB89B6C()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_23BB89B78()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_23BB89B84()
{
  return MEMORY[0x24BDF1458]();
}

uint64_t sub_23BB89B90()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_23BB89B9C()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_23BB89BA8()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_23BB89BB4()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_23BB89BC0()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_23BB89BCC()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_23BB89BD8()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_23BB89BE4()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_23BB89BF0()
{
  return MEMORY[0x24BDF1510]();
}

uint64_t sub_23BB89BFC()
{
  return MEMORY[0x24BDF1540]();
}

uint64_t sub_23BB89C08()
{
  return MEMORY[0x24BDF1580]();
}

uint64_t sub_23BB89C14()
{
  return MEMORY[0x24BDF1678]();
}

uint64_t sub_23BB89C20()
{
  return MEMORY[0x24BDF16D8]();
}

uint64_t sub_23BB89C2C()
{
  return MEMORY[0x24BDF16E8]();
}

uint64_t sub_23BB89C38()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_23BB89C44()
{
  return MEMORY[0x24BDF1750]();
}

uint64_t sub_23BB89C50()
{
  return MEMORY[0x24BDF1798]();
}

uint64_t sub_23BB89C5C()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_23BB89C68()
{
  return MEMORY[0x24BDF17E8]();
}

uint64_t sub_23BB89C74()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_23BB89C80()
{
  return MEMORY[0x24BDF1828]();
}

uint64_t sub_23BB89C8C()
{
  return MEMORY[0x24BDF1840]();
}

uint64_t sub_23BB89C98()
{
  return MEMORY[0x24BDF1900]();
}

uint64_t sub_23BB89CA4()
{
  return MEMORY[0x24BDF1A40]();
}

uint64_t sub_23BB89CB0()
{
  return MEMORY[0x24BDF1A48]();
}

uint64_t sub_23BB89CBC()
{
  return MEMORY[0x24BDF1A58]();
}

uint64_t sub_23BB89CC8()
{
  return MEMORY[0x24BDF1CE0]();
}

uint64_t sub_23BB89CD4()
{
  return MEMORY[0x24BDF1D08]();
}

uint64_t sub_23BB89CE0()
{
  return MEMORY[0x24BDF1D18]();
}

uint64_t sub_23BB89CEC()
{
  return MEMORY[0x24BDF1D98]();
}

uint64_t sub_23BB89CF8()
{
  return MEMORY[0x24BDF1DB8]();
}

uint64_t sub_23BB89D04()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_23BB89D10()
{
  return MEMORY[0x24BDF1F88]();
}

uint64_t sub_23BB89D1C()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t sub_23BB89D28()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_23BB89D34()
{
  return MEMORY[0x24BDFBFB8]();
}

uint64_t sub_23BB89D40()
{
  return MEMORY[0x24BDFBFD8]();
}

uint64_t sub_23BB89D4C()
{
  return MEMORY[0x24BDFBFE8]();
}

uint64_t sub_23BB89D58()
{
  return MEMORY[0x24BDFC008]();
}

uint64_t sub_23BB89D64()
{
  return MEMORY[0x24BDFC028]();
}

uint64_t sub_23BB89D70()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_23BB89D7C()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_23BB89D88()
{
  return MEMORY[0x24BDF2170]();
}

uint64_t sub_23BB89D94()
{
  return MEMORY[0x24BDF22B0]();
}

uint64_t sub_23BB89DA0()
{
  return MEMORY[0x24BDF2450]();
}

uint64_t sub_23BB89DAC()
{
  return MEMORY[0x24BDF2548]();
}

uint64_t sub_23BB89DB8()
{
  return MEMORY[0x24BDF2600]();
}

uint64_t sub_23BB89DC4()
{
  return MEMORY[0x24BDF2678]();
}

uint64_t sub_23BB89DD0()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_23BB89DDC()
{
  return MEMORY[0x24BDF2708]();
}

uint64_t sub_23BB89DE8()
{
  return MEMORY[0x24BDF27E0]();
}

uint64_t sub_23BB89DF4()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t sub_23BB89E00()
{
  return MEMORY[0x24BDF2858]();
}

uint64_t sub_23BB89E0C()
{
  return MEMORY[0x24BDF2860]();
}

uint64_t sub_23BB89E18()
{
  return MEMORY[0x24BDF28B8]();
}

uint64_t sub_23BB89E24()
{
  return MEMORY[0x24BDF2968]();
}

uint64_t sub_23BB89E30()
{
  return MEMORY[0x24BDF2B50]();
}

uint64_t sub_23BB89E3C()
{
  return MEMORY[0x24BDF2E70]();
}

uint64_t sub_23BB89E48()
{
  return MEMORY[0x24BDF2F60]();
}

uint64_t sub_23BB89E54()
{
  return MEMORY[0x24BDF3168]();
}

uint64_t sub_23BB89E60()
{
  return MEMORY[0x24BDF31D8]();
}

uint64_t sub_23BB89E6C()
{
  return MEMORY[0x24BDF3380]();
}

uint64_t sub_23BB89E78()
{
  return MEMORY[0x24BDF3390]();
}

uint64_t sub_23BB89E84()
{
  return MEMORY[0x24BDF34B8]();
}

uint64_t sub_23BB89E90()
{
  return MEMORY[0x24BDF35A0]();
}

uint64_t sub_23BB89E9C()
{
  return MEMORY[0x24BDF35D0]();
}

uint64_t sub_23BB89EA8()
{
  return MEMORY[0x24BDF3628]();
}

uint64_t sub_23BB89EB4()
{
  return MEMORY[0x24BDF3630]();
}

uint64_t sub_23BB89EC0()
{
  return MEMORY[0x24BDF3640]();
}

uint64_t sub_23BB89ECC()
{
  return MEMORY[0x24BDF3658]();
}

uint64_t sub_23BB89ED8()
{
  return MEMORY[0x24BDF37A8]();
}

uint64_t sub_23BB89EE4()
{
  return MEMORY[0x24BDF37B0]();
}

uint64_t sub_23BB89EF0()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_23BB89EFC()
{
  return MEMORY[0x24BDF3840]();
}

uint64_t sub_23BB89F08()
{
  return MEMORY[0x24BDF3890]();
}

uint64_t sub_23BB89F14()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t sub_23BB89F20()
{
  return MEMORY[0x24BDF39B0]();
}

uint64_t sub_23BB89F2C()
{
  return MEMORY[0x24BDF3A00]();
}

uint64_t sub_23BB89F38()
{
  return MEMORY[0x24BDF3A30]();
}

uint64_t sub_23BB89F44()
{
  return MEMORY[0x24BDF3A40]();
}

uint64_t sub_23BB89F50()
{
  return MEMORY[0x24BDF3A88]();
}

uint64_t sub_23BB89F5C()
{
  return MEMORY[0x24BDF3A98]();
}

uint64_t sub_23BB89F68()
{
  return MEMORY[0x24BDF3BE8]();
}

uint64_t sub_23BB89F74()
{
  return MEMORY[0x24BDF3BF8]();
}

uint64_t sub_23BB89F80()
{
  return MEMORY[0x24BDF3C40]();
}

uint64_t sub_23BB89F8C()
{
  return MEMORY[0x24BDF3C50]();
}

uint64_t sub_23BB89F98()
{
  return MEMORY[0x24BDF3C90]();
}

uint64_t sub_23BB89FA4()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t sub_23BB89FB0()
{
  return MEMORY[0x24BDF3CB8]();
}

uint64_t sub_23BB89FBC()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_23BB89FC8()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_23BB89FD4()
{
  return MEMORY[0x24BDF3D18]();
}

uint64_t sub_23BB89FE0()
{
  return MEMORY[0x24BDF3D30]();
}

uint64_t sub_23BB89FEC()
{
  return MEMORY[0x24BDF3D50]();
}

uint64_t sub_23BB89FF8()
{
  return MEMORY[0x24BDF3D60]();
}

uint64_t sub_23BB8A004()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_23BB8A010()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_23BB8A01C()
{
  return MEMORY[0x24BDF3E08]();
}

uint64_t sub_23BB8A028()
{
  return MEMORY[0x24BDF3E70]();
}

uint64_t sub_23BB8A034()
{
  return MEMORY[0x24BDF3EB0]();
}

uint64_t sub_23BB8A040()
{
  return MEMORY[0x24BDFC038]();
}

uint64_t sub_23BB8A04C()
{
  return MEMORY[0x24BDF3F58]();
}

uint64_t sub_23BB8A058()
{
  return MEMORY[0x24BDF3F68]();
}

uint64_t sub_23BB8A064()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_23BB8A070()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_23BB8A07C()
{
  return MEMORY[0x24BDF4048]();
}

uint64_t sub_23BB8A088()
{
  return MEMORY[0x24BDF4050]();
}

uint64_t sub_23BB8A094()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_23BB8A0A0()
{
  return MEMORY[0x24BDF4130]();
}

uint64_t sub_23BB8A0AC()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_23BB8A0B8()
{
  return MEMORY[0x24BDF4170]();
}

uint64_t sub_23BB8A0C4()
{
  return MEMORY[0x24BDF4280]();
}

uint64_t sub_23BB8A0D0()
{
  return MEMORY[0x24BDF4290]();
}

uint64_t sub_23BB8A0DC()
{
  return MEMORY[0x24BDF42A8]();
}

uint64_t sub_23BB8A0E8()
{
  return MEMORY[0x24BDF42B0]();
}

uint64_t sub_23BB8A0F4()
{
  return MEMORY[0x24BDF42C0]();
}

uint64_t sub_23BB8A100()
{
  return MEMORY[0x24BDF4330]();
}

uint64_t sub_23BB8A10C()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_23BB8A118()
{
  return MEMORY[0x24BDF4398]();
}

uint64_t sub_23BB8A124()
{
  return MEMORY[0x24BDF4470]();
}

uint64_t sub_23BB8A130()
{
  return MEMORY[0x24BDF4480]();
}

uint64_t sub_23BB8A13C()
{
  return MEMORY[0x24BDF4678]();
}

uint64_t sub_23BB8A148()
{
  return MEMORY[0x24BDF46A8]();
}

uint64_t sub_23BB8A154()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_23BB8A160()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_23BB8A16C()
{
  return MEMORY[0x24BDF4728]();
}

uint64_t sub_23BB8A178()
{
  return MEMORY[0x24BDF4730]();
}

uint64_t sub_23BB8A184()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t sub_23BB8A190()
{
  return MEMORY[0x24BDF47B0]();
}

uint64_t sub_23BB8A19C()
{
  return MEMORY[0x24BDF47B8]();
}

uint64_t sub_23BB8A1A8()
{
  return MEMORY[0x24BDF47E0]();
}

uint64_t sub_23BB8A1B4()
{
  return MEMORY[0x24BDF47F8]();
}

uint64_t sub_23BB8A1C0()
{
  return MEMORY[0x24BDF4808]();
}

uint64_t sub_23BB8A1CC()
{
  return MEMORY[0x24BDF48E8]();
}

uint64_t sub_23BB8A1D8()
{
  return MEMORY[0x24BDF4908]();
}

uint64_t sub_23BB8A1E4()
{
  return MEMORY[0x24BDF4918]();
}

uint64_t sub_23BB8A1F0()
{
  return MEMORY[0x24BDFC050]();
}

uint64_t sub_23BB8A1FC()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_23BB8A208()
{
  return MEMORY[0x24BDF49B8]();
}

uint64_t sub_23BB8A214()
{
  return MEMORY[0x24BDF49C8]();
}

uint64_t sub_23BB8A220()
{
  return MEMORY[0x24BDF4AA0]();
}

uint64_t sub_23BB8A22C()
{
  return MEMORY[0x24BDF4BE0]();
}

uint64_t sub_23BB8A238()
{
  return MEMORY[0x24BDF4C00]();
}

uint64_t sub_23BB8A244()
{
  return MEMORY[0x24BDF4C08]();
}

uint64_t sub_23BB8A250()
{
  return MEMORY[0x24BDF4C18]();
}

uint64_t sub_23BB8A25C()
{
  return MEMORY[0x24BDF4C28]();
}

uint64_t sub_23BB8A268()
{
  return MEMORY[0x24BDF4CE0]();
}

uint64_t sub_23BB8A274()
{
  return MEMORY[0x24BDF4D00]();
}

uint64_t sub_23BB8A280()
{
  return MEMORY[0x24BDF4DF8]();
}

uint64_t sub_23BB8A28C()
{
  return MEMORY[0x24BDF4E08]();
}

uint64_t sub_23BB8A298()
{
  return MEMORY[0x24BDF4E20]();
}

uint64_t sub_23BB8A2A4()
{
  return MEMORY[0x24BDF4E28]();
}

uint64_t sub_23BB8A2B0()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_23BB8A2BC()
{
  return MEMORY[0x24BDF4EC0]();
}

uint64_t sub_23BB8A2C8()
{
  return MEMORY[0x24BDF4EC8]();
}

uint64_t sub_23BB8A2D4()
{
  return MEMORY[0x24BDF4ED8]();
}

uint64_t sub_23BB8A2E0()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_23BB8A2EC()
{
  return MEMORY[0x24BDF4F00]();
}

uint64_t sub_23BB8A2F8()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_23BB8A304()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_23BB8A310()
{
  return MEMORY[0x24BDF4F38]();
}

uint64_t sub_23BB8A31C()
{
  return MEMORY[0x24BDF4FB8]();
}

uint64_t sub_23BB8A328()
{
  return MEMORY[0x24BDF4FE0]();
}

uint64_t sub_23BB8A334()
{
  return MEMORY[0x24BDF5118]();
}

uint64_t sub_23BB8A340()
{
  return MEMORY[0x24BDF5220]();
}

uint64_t sub_23BB8A34C()
{
  return MEMORY[0x24BDF5228]();
}

uint64_t sub_23BB8A358()
{
  return MEMORY[0x24BDF5258]();
}

uint64_t sub_23BB8A364()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_23BB8A370()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_23BB8A37C()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t sub_23BB8A388()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_23BB8A394()
{
  return MEMORY[0x24BE2FED8]();
}

uint64_t sub_23BB8A3A0()
{
  return MEMORY[0x24BE2FEE0]();
}

uint64_t sub_23BB8A3AC()
{
  return MEMORY[0x24BE2FEE8]();
}

uint64_t sub_23BB8A3B8()
{
  return MEMORY[0x24BE2FEF8]();
}

uint64_t sub_23BB8A3C4()
{
  return MEMORY[0x24BE2FF00]();
}

uint64_t sub_23BB8A3D0()
{
  return MEMORY[0x24BE2FF10]();
}

uint64_t sub_23BB8A3DC()
{
  return MEMORY[0x24BE2FF18]();
}

uint64_t sub_23BB8A3E8()
{
  return MEMORY[0x24BE2FF28]();
}

uint64_t sub_23BB8A3F4()
{
  return MEMORY[0x24BE2FF30]();
}

uint64_t sub_23BB8A400()
{
  return MEMORY[0x24BE2FF38]();
}

uint64_t sub_23BB8A40C()
{
  return MEMORY[0x24BE2FF40]();
}

uint64_t sub_23BB8A418()
{
  return MEMORY[0x24BE2FF48]();
}

uint64_t sub_23BB8A424()
{
  return MEMORY[0x24BE2FF50]();
}

uint64_t sub_23BB8A430()
{
  return MEMORY[0x24BE2FF58]();
}

uint64_t sub_23BB8A43C()
{
  return MEMORY[0x24BE2FF60]();
}

uint64_t sub_23BB8A448()
{
  return MEMORY[0x24BE2FF68]();
}

uint64_t sub_23BB8A454()
{
  return MEMORY[0x24BE2FF70]();
}

uint64_t sub_23BB8A460()
{
  return MEMORY[0x24BE2FF78]();
}

uint64_t sub_23BB8A46C()
{
  return MEMORY[0x24BE2FF80]();
}

uint64_t sub_23BB8A478()
{
  return MEMORY[0x24BE2FF90]();
}

uint64_t sub_23BB8A484()
{
  return MEMORY[0x24BE2FF98]();
}

uint64_t sub_23BB8A490()
{
  return MEMORY[0x24BE2FFA0]();
}

uint64_t sub_23BB8A49C()
{
  return MEMORY[0x24BE2FFB0]();
}

uint64_t sub_23BB8A4A8()
{
  return MEMORY[0x24BE2FFB8]();
}

uint64_t sub_23BB8A4B4()
{
  return MEMORY[0x24BE2FFC8]();
}

uint64_t sub_23BB8A4C0()
{
  return MEMORY[0x24BE2FFE0]();
}

uint64_t sub_23BB8A4CC()
{
  return MEMORY[0x24BE2FFE8]();
}

uint64_t sub_23BB8A4D8()
{
  return MEMORY[0x24BE2FFF0]();
}

uint64_t sub_23BB8A4E4()
{
  return MEMORY[0x24BE2FFF8]();
}

uint64_t sub_23BB8A4F0()
{
  return MEMORY[0x24BE30000]();
}

uint64_t sub_23BB8A4FC()
{
  return MEMORY[0x24BE30008]();
}

uint64_t sub_23BB8A508()
{
  return MEMORY[0x24BE30010]();
}

uint64_t sub_23BB8A514()
{
  return MEMORY[0x24BE30018]();
}

uint64_t sub_23BB8A520()
{
  return MEMORY[0x24BE30020]();
}

uint64_t sub_23BB8A52C()
{
  return MEMORY[0x24BE30028]();
}

uint64_t sub_23BB8A538()
{
  return MEMORY[0x24BE30030]();
}

uint64_t sub_23BB8A544()
{
  return MEMORY[0x24BE30038]();
}

uint64_t sub_23BB8A550()
{
  return MEMORY[0x24BE30040]();
}

uint64_t sub_23BB8A55C()
{
  return MEMORY[0x24BE30048]();
}

uint64_t sub_23BB8A568()
{
  return MEMORY[0x24BE30050]();
}

uint64_t sub_23BB8A574()
{
  return MEMORY[0x24BE30058]();
}

uint64_t sub_23BB8A580()
{
  return MEMORY[0x24BE30060]();
}

uint64_t sub_23BB8A58C()
{
  return MEMORY[0x24BE30068]();
}

uint64_t sub_23BB8A598()
{
  return MEMORY[0x24BE30070]();
}

uint64_t sub_23BB8A5A4()
{
  return MEMORY[0x24BE30078]();
}

uint64_t sub_23BB8A5B0()
{
  return MEMORY[0x24BE30080]();
}

uint64_t sub_23BB8A5BC()
{
  return MEMORY[0x24BE30090]();
}

uint64_t sub_23BB8A5C8()
{
  return MEMORY[0x24BE30098]();
}

uint64_t sub_23BB8A5D4()
{
  return MEMORY[0x24BE300E8]();
}

uint64_t sub_23BB8A5E0()
{
  return MEMORY[0x24BE300F0]();
}

uint64_t sub_23BB8A5EC()
{
  return MEMORY[0x24BE300F8]();
}

uint64_t sub_23BB8A5F8()
{
  return MEMORY[0x24BE30100]();
}

uint64_t sub_23BB8A604()
{
  return MEMORY[0x24BE30108]();
}

uint64_t sub_23BB8A610()
{
  return MEMORY[0x24BE30110]();
}

uint64_t sub_23BB8A61C()
{
  return MEMORY[0x24BE30118]();
}

uint64_t sub_23BB8A628()
{
  return MEMORY[0x24BE30120]();
}

uint64_t sub_23BB8A634()
{
  return MEMORY[0x24BE30128]();
}

uint64_t sub_23BB8A640()
{
  return MEMORY[0x24BE30130]();
}

uint64_t sub_23BB8A64C()
{
  return MEMORY[0x24BE30138]();
}

uint64_t sub_23BB8A658()
{
  return MEMORY[0x24BE30140]();
}

uint64_t sub_23BB8A664()
{
  return MEMORY[0x24BE30148]();
}

uint64_t sub_23BB8A670()
{
  return MEMORY[0x24BE30150]();
}

uint64_t sub_23BB8A67C()
{
  return MEMORY[0x24BE30158]();
}

uint64_t sub_23BB8A688()
{
  return MEMORY[0x24BE30160]();
}

uint64_t sub_23BB8A694()
{
  return MEMORY[0x24BE30168]();
}

uint64_t sub_23BB8A6A0()
{
  return MEMORY[0x24BE30178]();
}

uint64_t sub_23BB8A6AC()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_23BB8A6B8()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23BB8A6C4()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23BB8A6D0()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23BB8A6DC()
{
  return MEMORY[0x24BEE03B0]();
}

uint64_t sub_23BB8A6E8()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23BB8A6F4()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_23BB8A700()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23BB8A70C()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23BB8A718()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23BB8A724()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_23BB8A730()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23BB8A73C()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23BB8A748()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_23BB8A754()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23BB8A760()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23BB8A76C()
{
  return MEMORY[0x24BDCF9A0]();
}

uint64_t sub_23BB8A778()
{
  return MEMORY[0x24BDCF9C8]();
}

uint64_t sub_23BB8A784()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23BB8A790()
{
  return MEMORY[0x24BDCF9F0]();
}

uint64_t sub_23BB8A79C()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23BB8A7A8()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23BB8A7B4()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23BB8A7C0()
{
  return MEMORY[0x24BDCFA68]();
}

uint64_t sub_23BB8A7CC()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23BB8A7D8()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23BB8A7E4()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23BB8A7F0()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23BB8A7FC()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_23BB8A808()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23BB8A814()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_23BB8A820()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23BB8A82C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23BB8A838()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23BB8A844()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23BB8A850()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23BB8A85C()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_23BB8A868()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23BB8A874()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23BB8A880()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23BB8A88C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23BB8A898()
{
  return MEMORY[0x24BDCFB70]();
}

uint64_t sub_23BB8A8A4()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23BB8A8B0()
{
  return MEMORY[0x24BEE0ED0]();
}

uint64_t sub_23BB8A8BC()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23BB8A8C8()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23BB8A8D4()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23BB8A8E0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23BB8A8EC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23BB8A8F8()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23BB8A904()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23BB8A910()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_23BB8A91C()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23BB8A928()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23BB8A934()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23BB8A940()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23BB8A94C()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23BB8A958()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23BB8A964()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_23BB8A970()
{
  return MEMORY[0x24BEE1228]();
}

uint64_t sub_23BB8A97C()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23BB8A988()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23BB8A994()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23BB8A9A0()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23BB8A9AC()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_23BB8A9B8()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_23BB8A9C4()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_23BB8A9D0()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_23BB8A9DC()
{
  return MEMORY[0x24BEE6908]();
}

uint64_t sub_23BB8A9E8()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_23BB8A9F4()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_23BB8AA00()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_23BB8AA0C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23BB8AA18()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23BB8AA24()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_23BB8AA30()
{
  return MEMORY[0x24BEE6A28]();
}

uint64_t sub_23BB8AA3C()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_23BB8AA48()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_23BB8AA54()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_23BB8AA60()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_23BB8AA6C()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_23BB8AA78()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_23BB8AA84()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_23BB8AA90()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23BB8AA9C()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_23BB8AAA8()
{
  return MEMORY[0x24BEE6B58]();
}

uint64_t sub_23BB8AAB4()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t sub_23BB8AAC0()
{
  return MEMORY[0x24BEE6BB0]();
}

uint64_t sub_23BB8AACC()
{
  return MEMORY[0x24BEE6BE0]();
}

uint64_t sub_23BB8AAD8()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_23BB8AAE4()
{
  return MEMORY[0x24BEE6C20]();
}

uint64_t sub_23BB8AAF0()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23BB8AAFC()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23BB8AB08()
{
  return MEMORY[0x24BEE15A8]();
}

uint64_t sub_23BB8AB14()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23BB8AB20()
{
  return MEMORY[0x24BEE1638]();
}

uint64_t sub_23BB8AB2C()
{
  return MEMORY[0x24BEE1668]();
}

uint64_t sub_23BB8AB38()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23BB8AB44()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_23BB8AB50()
{
  return MEMORY[0x24BEE16F8]();
}

uint64_t sub_23BB8AB5C()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23BB8AB68()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23BB8AB74()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23BB8AB80()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_23BB8AB8C()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23BB8AB98()
{
  return MEMORY[0x24BEE1A50]();
}

uint64_t sub_23BB8ABA4()
{
  return MEMORY[0x24BEE1B30]();
}

uint64_t sub_23BB8ABB0()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_23BB8ABBC()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23BB8ABC8()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23BB8ABD4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23BB8ABE0()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23BB8ABEC()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23BB8ABF8()
{
  return MEMORY[0x24BEE5198]();
}

uint64_t sub_23BB8AC04()
{
  return MEMORY[0x24BEE5710]();
}

uint64_t sub_23BB8AC10()
{
  return MEMORY[0x24BEE5720]();
}

uint64_t sub_23BB8AC1C()
{
  return MEMORY[0x24BEE5728]();
}

uint64_t sub_23BB8AC28()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_23BB8AC34()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_23BB8AC40()
{
  return MEMORY[0x24BDD0010]();
}

uint64_t sub_23BB8AC4C()
{
  return MEMORY[0x24BDD0028]();
}

uint64_t sub_23BB8AC58()
{
  return MEMORY[0x24BDD0058]();
}

uint64_t sub_23BB8AC64()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_23BB8AC70()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23BB8AC7C()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_23BB8AC88()
{
  return MEMORY[0x24BEBD030]();
}

uint64_t sub_23BB8AC94()
{
  return MEMORY[0x24BEBD220]();
}

uint64_t sub_23BB8ACA0()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23BB8ACAC()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23BB8ACB8()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23BB8ACC4()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23BB8ACD0()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_23BB8ACDC()
{
  return MEMORY[0x24BDD04F0]();
}

uint64_t sub_23BB8ACE8()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_23BB8ACF4()
{
  return MEMORY[0x24BDD05D0]();
}

uint64_t sub_23BB8AD00()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_23BB8AD0C()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_23BB8AD18()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23BB8AD24()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_23BB8AD30()
{
  return MEMORY[0x24BEE2280]();
}

uint64_t sub_23BB8AD3C()
{
  return MEMORY[0x24BEE2288]();
}

uint64_t sub_23BB8AD48()
{
  return MEMORY[0x24BEE2290]();
}

uint64_t sub_23BB8AD54()
{
  return MEMORY[0x24BEE2298]();
}

uint64_t sub_23BB8AD60()
{
  return MEMORY[0x24BEE22A0]();
}

uint64_t sub_23BB8AD6C()
{
  return MEMORY[0x24BEE22A8]();
}

uint64_t sub_23BB8AD78()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23BB8AD84()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23BB8AD90()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23BB8AD9C()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23BB8ADA8()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23BB8ADB4()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23BB8ADC0()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23BB8ADCC()
{
  return MEMORY[0x24BEE6D58]();
}

uint64_t sub_23BB8ADD8()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23BB8ADE4()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23BB8ADF0()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23BB8ADFC()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_23BB8AE08()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23BB8AE14()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23BB8AE20()
{
  return MEMORY[0x24BEE2568]();
}

uint64_t sub_23BB8AE2C()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23BB8AE38()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_23BB8AE44()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23BB8AE50()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23BB8AE5C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23BB8AE68()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23BB8AE74()
{
  return MEMORY[0x24BEE2788]();
}

uint64_t sub_23BB8AE80()
{
  return MEMORY[0x24BEE27B0]();
}

uint64_t sub_23BB8AE8C()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23BB8AE98()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23BB8AEA4()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23BB8AEB0()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_23BB8AEBC()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23BB8AEC8()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23BB8AED4()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23BB8AEE0()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_23BB8AEEC()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_23BB8AEF8()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_23BB8AF04()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23BB8AF10()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23BB8AF1C()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23BB8AF28()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_23BB8AF34()
{
  return MEMORY[0x24BEE2AE8]();
}

uint64_t sub_23BB8AF40()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23BB8AF4C()
{
  return MEMORY[0x24BEE6EB0]();
}

uint64_t sub_23BB8AF58()
{
  return MEMORY[0x24BEE6EB8]();
}

uint64_t sub_23BB8AF64()
{
  return MEMORY[0x24BEE6EC0]();
}

uint64_t sub_23BB8AF70()
{
  return MEMORY[0x24BEE6ED8]();
}

uint64_t sub_23BB8AF7C()
{
  return MEMORY[0x24BEE6EE8]();
}

uint64_t sub_23BB8AF88()
{
  return MEMORY[0x24BEE6EF0]();
}

uint64_t sub_23BB8AF94()
{
  return MEMORY[0x24BEE6F00]();
}

uint64_t sub_23BB8AFA0()
{
  return MEMORY[0x24BEE2BE8]();
}

uint64_t sub_23BB8AFAC()
{
  return MEMORY[0x24BEE2BF0]();
}

uint64_t sub_23BB8AFB8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23BB8AFC4()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23BB8AFD0()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23BB8AFDC()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_23BB8AFE8()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23BB8AFF4()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23BB8B000()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23BB8B00C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23BB8B018()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23BB8B024()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23BB8B030()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23BB8B03C()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23BB8B048()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23BB8B054()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23BB8B060()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23BB8B06C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23BB8B078()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23BB8B084()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23BB8B090()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23BB8B09C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23BB8B0A8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23BB8B0B4()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23BB8B0C0()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23BB8B0CC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23BB8B0D8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23BB8B0E4()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23BB8B0F0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23BB8B0FC()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23BB8B108()
{
  return MEMORY[0x24BEE6FC8]();
}

uint64_t sub_23BB8B114()
{
  return MEMORY[0x24BEE6FD0]();
}

uint64_t sub_23BB8B120()
{
  return MEMORY[0x24BEE6FE8]();
}

uint64_t sub_23BB8B12C()
{
  return MEMORY[0x24BEE7000]();
}

uint64_t sub_23BB8B138()
{
  return MEMORY[0x24BEE7010]();
}

uint64_t sub_23BB8B144()
{
  return MEMORY[0x24BEE7028]();
}

uint64_t sub_23BB8B150()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23BB8B15C()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_23BB8B168()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_23BB8B174()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_23BB8B180()
{
  return MEMORY[0x24BEE38F0]();
}

uint64_t sub_23BB8B18C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23BB8B198()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_23BB8B1A4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23BB8B1B0()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_23BB8B1BC()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23BB8B1C8()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_23BB8B1D4()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23BB8B1E0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23BB8B1EC()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_23BB8B1F8()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_23BB8B204()
{
  return MEMORY[0x24BEE7148]();
}

uint64_t sub_23BB8B210()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23BB8B21C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23BB8B228()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23BB8B234()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23BB8B240()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23BB8B24C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23BB8B258()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23BB8B264()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23BB8B270()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23BB8B27C()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_23BB8B288()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23BB8B294()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23BB8B2A0()
{
  return MEMORY[0x24BE31B28]();
}

uint64_t sub_23BB8B2AC()
{
  return MEMORY[0x24BDD0900]();
}

uint64_t sub_23BB8B2B8()
{
  return MEMORY[0x24BDD0910]();
}

uint64_t sub_23BB8B2C4()
{
  return MEMORY[0x24BDD09E0]();
}

uint64_t sub_23BB8B2D0()
{
  return MEMORY[0x24BDD09F0]();
}

uint64_t sub_23BB8B2DC()
{
  return MEMORY[0x24BDD0A00]();
}

uint64_t sub_23BB8B2E8()
{
  return MEMORY[0x24BDD0A30]();
}

uint64_t sub_23BB8B2F4()
{
  return MEMORY[0x24BDD0A40]();
}

uint64_t sub_23BB8B300()
{
  return MEMORY[0x24BDD0A50]();
}

uint64_t sub_23BB8B30C()
{
  return MEMORY[0x24BDD0A70]();
}

uint64_t sub_23BB8B318()
{
  return MEMORY[0x24BDD0A90]();
}

uint64_t sub_23BB8B324()
{
  return MEMORY[0x24BDD0A98]();
}

uint64_t sub_23BB8B330()
{
  return MEMORY[0x24BDD0AB0]();
}

uint64_t sub_23BB8B33C()
{
  return MEMORY[0x24BDD0AB8]();
}

uint64_t sub_23BB8B348()
{
  return MEMORY[0x24BDD0AF0]();
}

uint64_t sub_23BB8B354()
{
  return MEMORY[0x24BDD0B20]();
}

uint64_t sub_23BB8B360()
{
  return MEMORY[0x24BEE4860]();
}

uint64_t sub_23BB8B36C()
{
  return MEMORY[0x24BEE4880]();
}

uint64_t sub_23BB8B378()
{
  return MEMORY[0x24BEE4890]();
}

uint64_t sub_23BB8B384()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_23BB8B390()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23BB8B39C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23BB8B3A8()
{
  return MEMORY[0x24BEE4A18]();
}

uint64_t sub_23BB8B3B4()
{
  return MEMORY[0x24BEE4A40]();
}

uint64_t sub_23BB8B3C0()
{
  return MEMORY[0x24BEE4A58]();
}

uint64_t sub_23BB8B3CC()
{
  return MEMORY[0x24BEE4A70]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return MEMORY[0x24BDBFA08]((__n128)coord, *(__n128 *)&coord.longitude);
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  double v1;
  double v2;
  MKMapPoint result;

  MEMORY[0x24BDDAF98]((__n128)coordinate, *(__n128 *)&coordinate.longitude);
  result.y = v2;
  result.x = v1;
  return result;
}

uint64_t MKMapRectBoundingMapPoints()
{
  return MEMORY[0x24BDDAFA8]();
}

uint64_t MKMapRectMakeWithRadialDistance()
{
  return MEMORY[0x24BDDAFD8]();
}

MKMapRect MKMapRectUnion(MKMapRect rect1, MKMapRect rect2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  MKMapRect result;

  MEMORY[0x24BDDAFE8]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_deviceSupportsFindApplePencil()
{
  return MEMORY[0x24BED85D0]();
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
  MEMORY[0x24BEBE280](opaque, (__n128)size, *(__n128 *)&size.height, scale);
}

void UIGraphicsEndImageContext(void)
{
  MEMORY[0x24BEBE298]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x24BEBE2B0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _MKMapRectThatFits()
{
  return MEMORY[0x24BDDB220]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

