uint64_t sub_23BA954CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  v5 = (int *)type metadata accessor for CustomControlStyle(0);
  v6 = v4 + v5[6];
  v7 = sub_23BB8A334();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v4 + v5[7];
  if ((*(_BYTE *)(v9 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = v4 + v5[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 28);
  __swift_destroy_boxed_opaque_existential_1(v12);
  swift_release();
  v8(v12 + v5[6], v7);
  v13 = v12 + v5[7];
  if ((*(_BYTE *)(v13 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v12 + v5[8];
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v16 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  return result;
}

char *sub_23BA95658(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v5 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v5;
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = *(_OWORD *)&a2[v6 + 24];
  *(_OWORD *)&a1[v6 + 24] = v9;
  v10 = v9;
  v11 = **(void (***)(char *, char *, uint64_t))(v9 - 8);
  swift_retain();
  swift_retain();
  v11(v7, v8, v10);
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  v12 = (int *)type metadata accessor for CustomControlStyle(0);
  v13 = v12[6];
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_23BB8A334();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_retain();
  v17(v14, v15, v16);
  v18 = v12[7];
  v19 = &v7[v18];
  v20 = &v8[v18];
  v21 = v8[v18 + 40];
  if ((v21 & 1) != 0)
  {
    v22 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v22;
    swift_retain();
  }
  else
  {
    v23 = *(_OWORD *)(v20 + 24);
    *(_OWORD *)(v19 + 24) = v23;
    (**(void (***)(char *))(v23 - 8))(v19);
  }
  v19[40] = v21;
  v24 = v12[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v27 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v7[v12[9]] = v8[v12[9]];
  v7[v12[10]] = v8[v12[10]];
  v29 = v12[11];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v30[8] = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v32 = a3[7];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_OWORD *)&a2[v32 + 24];
  *(_OWORD *)&a1[v32 + 24] = v35;
  (**(void (***)(char *, char *))(v35 - 8))(&a1[v32], &a2[v32]);
  *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
  v36 = v12[6];
  v37 = &v33[v36];
  v38 = &v34[v36];
  swift_retain();
  v17(v37, v38, v16);
  v39 = v12[7];
  v40 = &v33[v39];
  v41 = &v34[v39];
  v42 = v34[v39 + 40];
  if ((v42 & 1) != 0)
  {
    v43 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v43;
    swift_retain();
  }
  else
  {
    v44 = *(_OWORD *)(v41 + 24);
    *(_OWORD *)(v40 + 24) = v44;
    (**(void (***)(char *))(v44 - 8))(v40);
  }
  v40[40] = v42;
  v45 = v12[8];
  v46 = &v33[v45];
  v47 = &v34[v45];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v48 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v33[v12[9]] = v34[v12[9]];
  v33[v12[10]] = v34[v12[10]];
  v49 = v12[11];
  v50 = &v33[v49];
  v51 = &v34[v49];
  v50[8] = v51[8];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v52 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v52] = *(_QWORD *)&a2[v52];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

_QWORD *sub_23BA95984(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v47;
  void (*v48)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v6), (_QWORD *)((char *)a2 + v6));
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  swift_retain();
  swift_release();
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_23BB8A334();
  v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v48(v11, v12, v13);
  if (a1 == a2)
  {
    v18 = v9 + 8;
  }
  else
  {
    v14 = v9[7];
    v15 = &v7[v14];
    v16 = &v8[v14];
    sub_23B989D60((uint64_t)&v7[v14], qword_256A59CC0);
    v47 = a3;
    if ((v16[40] & 1) != 0)
    {
      v17 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = v17;
      v15[40] = 1;
      swift_retain();
    }
    else
    {
      v19 = *((_QWORD *)v16 + 3);
      *((_QWORD *)v15 + 3) = v19;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      (**(void (***)(char *, char *))(v19 - 8))(v15, v16);
      v15[40] = 0;
    }
    v18 = v9 + 8;
    v20 = v9[8];
    v21 = &v7[v20];
    v22 = &v8[v20];
    sub_23B989D9C((uint64_t)&v7[v20], type metadata accessor for CustomControlStyle.BackgroundSize);
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    a3 = v47;
  }
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v25 = v9[11];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v29), (_QWORD *)((char *)a2 + v29));
  *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
  swift_retain();
  swift_release();
  v48(&v30[v9[6]], &v31[v9[6]], v13);
  if (a1 != a2)
  {
    v32 = v9[7];
    v33 = &v30[v32];
    v34 = &v31[v32];
    sub_23B989D60((uint64_t)&v30[v32], qword_256A59CC0);
    if ((v34[40] & 1) != 0)
    {
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v33[40] = 1;
      swift_retain();
    }
    else
    {
      v36 = *((_QWORD *)v34 + 3);
      *((_QWORD *)v33 + 3) = v36;
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      (**(void (***)(char *, char *))(v36 - 8))(v33, v34);
      v33[40] = 0;
    }
    v37 = *v18;
    v38 = &v30[v37];
    v39 = &v31[v37];
    sub_23B989D9C((uint64_t)&v30[v37], type metadata accessor for CustomControlStyle.BackgroundSize);
    v40 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
  }
  v30[v9[9]] = v31[v9[9]];
  v30[v9[10]] = v31[v9[10]];
  v42 = v9[11];
  v43 = &v30[v42];
  v44 = &v31[v42];
  v45 = *(_QWORD *)v44;
  v43[8] = v44[8];
  *(_QWORD *)v43 = v45;
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

char *sub_23BA95D3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v46)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = *(_OWORD *)&a2[v6 + 16];
  *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
  *((_OWORD *)v7 + 1) = v9;
  v10 = *(_QWORD *)&a2[v6 + 40];
  *((_QWORD *)v7 + 4) = *(_QWORD *)&a2[v6 + 32];
  *((_QWORD *)v7 + 5) = v10;
  v11 = (int *)type metadata accessor for CustomControlStyle(0);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_23BB8A334();
  v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v46(v13, v14, v15);
  v16 = v11[7];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_OWORD *)(v17 + 25) = *(_OWORD *)(v18 + 25);
  v20 = v11[8];
  v21 = &v7[v20];
  v22 = &v8[v20];
  v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  v25 = v11[11];
  v26 = &v7[v25];
  v27 = &v8[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = a3[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_OWORD *)&a2[v28 + 16];
  *(_OWORD *)v29 = *(_OWORD *)&a2[v28];
  *((_OWORD *)v29 + 1) = v31;
  v32 = *(_QWORD *)&a2[v28 + 40];
  *((_QWORD *)v29 + 4) = *(_QWORD *)&a2[v28 + 32];
  *((_QWORD *)v29 + 5) = v32;
  v46(&a1[v28 + v11[6]], &a2[v28 + v11[6]], v15);
  v33 = v11[7];
  v34 = &v29[v33];
  v35 = &v30[v33];
  v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  *(_OWORD *)(v34 + 25) = *(_OWORD *)(v35 + 25);
  v37 = v11[8];
  v38 = &v29[v37];
  v39 = &v30[v37];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v29[v11[9]] = v30[v11[9]];
  v29[v11[10]] = v30[v11[10]];
  v41 = v11[11];
  v42 = &v29[v41];
  v43 = &v30[v41];
  v42[8] = v43[8];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v44 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

_QWORD *sub_23BA95FC0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v47)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v6);
  v9 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v9;
  v10 = *((_QWORD *)v8 + 5);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = v10;
  swift_release();
  v11 = (int *)type metadata accessor for CustomControlStyle(0);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_23BB8A334();
  v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v47(v13, v14, v15);
  if (a1 != a2)
  {
    v16 = v11[7];
    v17 = &v8[v16];
    v18 = &v7[v16];
    sub_23B989D60((uint64_t)&v7[v16], qword_256A59CC0);
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
    v20 = v11[8];
    v21 = &v7[v20];
    v22 = &v8[v20];
    sub_23B989D9C((uint64_t)&v7[v20], type metadata accessor for CustomControlStyle.BackgroundSize);
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  v25 = v11[11];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = a3[7];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v28);
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  v32 = *((_QWORD *)v30 + 5);
  *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  *((_QWORD *)v29 + 5) = v32;
  swift_release();
  v47(&v29[v11[6]], &v30[v11[6]], v15);
  if (a1 != a2)
  {
    v33 = v11[7];
    v34 = &v30[v33];
    v35 = &v29[v33];
    sub_23B989D60((uint64_t)&v29[v33], qword_256A59CC0);
    v36 = *((_OWORD *)v34 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v34;
    *((_OWORD *)v35 + 1) = v36;
    *(_OWORD *)(v35 + 25) = *(_OWORD *)(v34 + 25);
    v37 = v11[8];
    v38 = &v29[v37];
    v39 = &v30[v37];
    sub_23B989D9C((uint64_t)&v29[v37], type metadata accessor for CustomControlStyle.BackgroundSize);
    v40 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
  }
  v29[v11[9]] = v30[v11[9]];
  v29[v11[10]] = v30[v11[10]];
  v42 = v11[11];
  v43 = &v29[v42];
  v44 = &v30[v42];
  v43[8] = v44[8];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v45) = *(_QWORD *)((char *)a2 + v45);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_23BA962D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA962E4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CustomControlStyle(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_23BA96360()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23BA9636C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for CustomControlStyle(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23BA963E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CustomControlStyle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23BA9646C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  unint64_t *v6;
  char *v7;
  unint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t Action;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  char v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  _QWORD *v123;
  int *v124;
  int *v125;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v17 = (_QWORD *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *a1 = *a2;
    v5 = a3[5];
    v6 = (_QWORD *)((char *)a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = *(_QWORD *)((char *)a2 + v5);
    if (v8 >= 2)
      v8 = swift_bridgeObjectRetain();
    *v6 = v8;
    v9 = (int *)type metadata accessor for DetailsAppView.State(0);
    v10 = v9[5];
    v11 = (unint64_t *)((char *)v6 + v10);
    v12 = &v7[v10];
    v13 = type metadata accessor for SessionLocation.Description(0);
    v14 = *(_QWORD *)(v13 - 8);
    v124 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v18 = *((_QWORD *)v12 + 1);
      *v11 = *(_QWORD *)v12;
      v11[1] = v18;
      v19 = *(int *)(v13 + 20);
      v20 = (_QWORD *)((char *)v11 + v19);
      v21 = &v12[v19];
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v22 = sub_23BB88984();
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        v23 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v24 = (char *)v20 + v23;
        v25 = &v21[v23];
        *(_OWORD *)v24 = *(_OWORD *)v25;
        v26 = *((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v26;
        v27 = *((_QWORD *)v25 + 5);
        *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
        *((_QWORD *)v24 + 5) = v27;
        v28 = *((_QWORD *)v25 + 7);
        *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
        *((_QWORD *)v24 + 7) = v28;
        v29 = *((_QWORD *)v25 + 9);
        *((_QWORD *)v24 + 8) = *((_QWORD *)v25 + 8);
        *((_QWORD *)v24 + 9) = v29;
        v30 = *((_QWORD *)v25 + 11);
        *((_QWORD *)v24 + 10) = *((_QWORD *)v25 + 10);
        *((_QWORD *)v24 + 11) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v31 = *(_QWORD *)v21;
        v32 = *((_QWORD *)v21 + 1);
        *v20 = v31;
        v20[1] = v32;
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v33 = *(int *)(v13 + 24);
      v34 = (_QWORD *)((char *)v11 + v33);
      v35 = &v12[v33];
      v36 = *((_QWORD *)v35 + 1);
      *v34 = *(_QWORD *)v35;
      v34[1] = v36;
      v37 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56);
      swift_bridgeObjectRetain();
      v37(v11, 0, 1, v13);
      v9 = v124;
    }
    v38 = v9[6];
    v39 = (char *)v6 + v38;
    v40 = &v7[v38];
    v41 = sub_23BB88984();
    v42 = *(_QWORD *)(v41 - 8);
    v123 = a1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    *(unint64_t *)((char *)v6 + v9[7]) = *(_QWORD *)&v7[v9[7]];
    v44 = v9[8];
    v45 = (unint64_t *)((char *)v6 + v44);
    v46 = &v7[v44];
    v47 = *((_QWORD *)v46 + 1);
    *v45 = *(_QWORD *)v46;
    v45[1] = v47;
    *((_BYTE *)v6 + v9[9]) = v7[v9[9]];
    *((_BYTE *)v6 + v9[10]) = v7[v9[10]];
    v48 = v9[11];
    v49 = (char *)v6 + v48;
    v50 = &v7[v48];
    v51 = type metadata accessor for DirectionsState();
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53(v50, 2, v51))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v49 = *v50;
      *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
      v49[24] = v50[24];
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(&v49[*(int *)(v51 + 24)], &v50[*(int *)(v51 + 24)], v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 2, v51);
    }
    *((_BYTE *)v6 + v124[12]) = v7[v124[12]];
    v55 = a3[6];
    v56 = a3[7];
    v57 = (char *)v123 + v55;
    v58 = (char *)a2 + v55;
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *(_OWORD *)(v57 + 8) = *(_OWORD *)(v58 + 8);
    *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
    *(_OWORD *)(v57 + 40) = *(_OWORD *)(v58 + 40);
    *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
    *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
    *(_OWORD *)(v57 + 88) = *(_OWORD *)(v58 + 88);
    *(_OWORD *)(v57 + 104) = *(_OWORD *)(v58 + 104);
    v59 = *((_QWORD *)v58 + 17);
    *(_OWORD *)(v57 + 120) = *(_OWORD *)(v58 + 120);
    *((_QWORD *)v57 + 17) = v59;
    v60 = (char *)v123 + v56;
    v61 = (char *)a2 + v56;
    v62 = *(_QWORD *)((char *)a2 + v56 + 8);
    *(_QWORD *)v60 = *(_QWORD *)((char *)a2 + v56);
    *((_QWORD *)v60 + 1) = v62;
    v125 = (int *)type metadata accessor for DetailsAppView.Style(0);
    v63 = v125[6];
    v64 = &v60[v63];
    v65 = &v61[v63];
    v66 = *(_OWORD *)&v61[v63 + 24];
    *(_OWORD *)&v60[v63 + 24] = v66;
    v67 = v66;
    v68 = **(void (***)(char *, char *, uint64_t))(v66 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v68(v64, v65, v67);
    *((_QWORD *)v64 + 5) = *((_QWORD *)v65 + 5);
    v69 = (int *)type metadata accessor for CustomControlStyle(0);
    v70 = v69[6];
    v71 = &v64[v70];
    v72 = &v65[v70];
    v73 = sub_23BB8A334();
    v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
    swift_retain();
    v74(v71, v72, v73);
    v75 = v69[7];
    v76 = &v64[v75];
    v77 = &v65[v75];
    v78 = v65[v75 + 40];
    if ((v78 & 1) != 0)
    {
      v79 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v79;
      swift_retain();
    }
    else
    {
      v80 = *(_OWORD *)(v77 + 24);
      *(_OWORD *)(v76 + 24) = v80;
      (**(void (***)(char *))(v80 - 8))(v76);
    }
    v76[40] = v78;
    v81 = v69[8];
    v82 = &v64[v81];
    v83 = &v65[v81];
    v84 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v85 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v82, v83, v85);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    v64[v69[9]] = v65[v69[9]];
    v64[v69[10]] = v65[v69[10]];
    v86 = v69[11];
    v87 = &v64[v86];
    v88 = &v65[v86];
    v87[8] = v88[8];
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v89 = v125[7];
    v90 = &v60[v89];
    v91 = &v61[v89];
    v92 = *(_OWORD *)&v61[v89 + 24];
    *(_OWORD *)&v60[v89 + 24] = v92;
    (**(void (***)(char *, char *))(v92 - 8))(&v60[v89], &v61[v89]);
    *((_QWORD *)v90 + 5) = *((_QWORD *)v91 + 5);
    v93 = v69[6];
    v94 = &v90[v93];
    v95 = &v91[v93];
    swift_retain();
    v74(v94, v95, v73);
    v96 = v69[7];
    v97 = &v90[v96];
    v98 = &v91[v96];
    v99 = v91[v96 + 40];
    if ((v99 & 1) != 0)
    {
      v100 = *((_QWORD *)v98 + 1);
      *(_QWORD *)v97 = *(_QWORD *)v98;
      *((_QWORD *)v97 + 1) = v100;
      swift_retain();
    }
    else
    {
      v101 = *(_OWORD *)(v98 + 24);
      *(_OWORD *)(v97 + 24) = v101;
      (**(void (***)(char *))(v101 - 8))(v97);
    }
    v17 = v123;
    v97[40] = v99;
    v102 = v69[8];
    v103 = &v90[v102];
    v104 = &v91[v102];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v105 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v103, v104, v105);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    v90[v69[9]] = v91[v69[9]];
    v90[v69[10]] = v91[v69[10]];
    v106 = v69[11];
    v107 = &v90[v106];
    v108 = &v91[v106];
    v107[8] = v108[8];
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *(_QWORD *)&v60[v125[8]] = *(_QWORD *)&v61[v125[8]];
    *(_QWORD *)&v60[v125[9]] = *(_QWORD *)&v61[v125[9]];
    *(_QWORD *)&v60[v125[10]] = *(_QWORD *)&v61[v125[10]];
    v109 = a3[8];
    v110 = a3[9];
    v111 = (_QWORD *)((char *)v123 + v109);
    v112 = (_QWORD *)((char *)a2 + v109);
    v113 = v112[1];
    *v111 = *v112;
    v111[1] = v113;
    *((_BYTE *)v123 + v110) = *((_BYTE *)a2 + v110);
    v114 = a3[10];
    v115 = a3[11];
    v116 = (char *)v123 + v114;
    v117 = (char *)a2 + v114;
    *v116 = *v117;
    *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
    v118 = (char *)v123 + v115;
    v119 = (char *)a2 + v115;
    *v118 = *v119;
    *((_QWORD *)v118 + 1) = *((_QWORD *)v119 + 1);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v17;
}

uint64_t sub_23BA96C68(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  if (*v4 >= 2uLL)
    swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for DetailsAppView.State(0);
  v6 = (char *)v4 + v5[5];
  v7 = type metadata accessor for SessionLocation.Description(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = &v6[*(int *)(v7 + 20)];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23BB88984();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      type metadata accessor for FindMyRelativeDate();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = (char *)v4 + v5[6];
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (char *)v4 + v5[11];
  v14 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 2, v14))
    (*(void (**)(char *, uint64_t))(v12 + 8))(&v13[*(int *)(v14 + 24)], v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v15 = a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  v16 = type metadata accessor for DetailsAppView.Style(0);
  v17 = v15 + *(int *)(v16 + 24);
  __swift_destroy_boxed_opaque_existential_1(v17);
  swift_release();
  v18 = (int *)type metadata accessor for CustomControlStyle(0);
  v19 = v17 + v18[6];
  v20 = sub_23BB8A334();
  v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
  v21(v19, v20);
  v22 = v17 + v18[7];
  if ((*(_BYTE *)(v22 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v22);
  v23 = v17 + v18[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  v25 = v15 + *(int *)(v16 + 28);
  __swift_destroy_boxed_opaque_existential_1(v25);
  swift_release();
  v21(v25 + v18[6], v20);
  v26 = v25 + v18[7];
  if ((*(_BYTE *)(v26 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v26);
  v27 = v25 + v18[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_23BA9700C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  unint64_t *v4;
  char *v5;
  unint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t Action;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  int *v117;
  int *v118;

  *a1 = *a2;
  v3 = a3[5];
  v4 = (_QWORD *)((char *)a1 + v3);
  v5 = (char *)a2 + v3;
  v6 = *(_QWORD *)((char *)a2 + v3);
  if (v6 >= 2)
    v6 = swift_bridgeObjectRetain();
  *v4 = v6;
  v7 = (int *)type metadata accessor for DetailsAppView.State(0);
  v8 = v7[5];
  v9 = (unint64_t *)((char *)v4 + v8);
  v10 = &v5[v8];
  v11 = type metadata accessor for SessionLocation.Description(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *((_QWORD *)v10 + 1);
    *v9 = *(_QWORD *)v10;
    v9[1] = v14;
    v15 = *(int *)(v11 + 20);
    v16 = (_QWORD *)((char *)v9 + v15);
    v17 = &v10[v15];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_23BB88984();
      (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v20 = (char *)v16 + v19;
      v21 = &v17[v19];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v22 = *((_QWORD *)v21 + 3);
      *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
      *((_QWORD *)v20 + 3) = v22;
      v23 = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 5) = v23;
      v24 = *((_QWORD *)v21 + 7);
      *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
      *((_QWORD *)v20 + 7) = v24;
      v25 = *((_QWORD *)v21 + 9);
      *((_QWORD *)v20 + 8) = *((_QWORD *)v21 + 8);
      *((_QWORD *)v20 + 9) = v25;
      v26 = *((_QWORD *)v21 + 11);
      *((_QWORD *)v20 + 10) = *((_QWORD *)v21 + 10);
      *((_QWORD *)v20 + 11) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = *(_QWORD *)v17;
      v28 = *((_QWORD *)v17 + 1);
      *v16 = v27;
      v16[1] = v28;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v29 = *(int *)(v11 + 24);
    v30 = (_QWORD *)((char *)v9 + v29);
    v31 = &v10[v29];
    v32 = *((_QWORD *)v31 + 1);
    *v30 = *(_QWORD *)v31;
    v30[1] = v32;
    v33 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    v33(v9, 0, 1, v11);
  }
  v34 = v7[6];
  v35 = (char *)v4 + v34;
  v36 = &v5[v34];
  v37 = sub_23BB88984();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  *(unint64_t *)((char *)v4 + v7[7]) = *(_QWORD *)&v5[v7[7]];
  v40 = v7[8];
  v41 = (unint64_t *)((char *)v4 + v40);
  v42 = &v5[v40];
  v43 = *((_QWORD *)v42 + 1);
  *v41 = *(_QWORD *)v42;
  v41[1] = v43;
  *((_BYTE *)v4 + v7[9]) = v5[v7[9]];
  *((_BYTE *)v4 + v7[10]) = v5[v7[10]];
  v117 = v7;
  v44 = v7[11];
  v45 = (char *)v4 + v44;
  v46 = &v5[v44];
  v47 = type metadata accessor for DirectionsState();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49(v46, 2, v47))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v45 = *v46;
    *(_OWORD *)(v45 + 8) = *(_OWORD *)(v46 + 8);
    v45[24] = v46[24];
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(&v45[*(int *)(v47 + 24)], &v46[*(int *)(v47 + 24)], v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 2, v47);
  }
  *((_BYTE *)v4 + v117[12]) = v5[v117[12]];
  v51 = a3[6];
  v52 = a3[7];
  v53 = (char *)a1 + v51;
  v54 = (char *)a2 + v51;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
  *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
  *(_OWORD *)(v53 + 40) = *(_OWORD *)(v54 + 40);
  *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
  *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
  *(_OWORD *)(v53 + 88) = *(_OWORD *)(v54 + 88);
  *(_OWORD *)(v53 + 104) = *(_OWORD *)(v54 + 104);
  v55 = *((_QWORD *)v54 + 17);
  *(_OWORD *)(v53 + 120) = *(_OWORD *)(v54 + 120);
  *((_QWORD *)v53 + 17) = v55;
  v56 = (char *)a1 + v52;
  v57 = (char *)a2 + v52;
  v58 = *(_QWORD *)((char *)a2 + v52 + 8);
  *(_QWORD *)v56 = *(_QWORD *)((char *)a2 + v52);
  *((_QWORD *)v56 + 1) = v58;
  v118 = (int *)type metadata accessor for DetailsAppView.Style(0);
  v59 = v118[6];
  v60 = &v56[v59];
  v61 = &v57[v59];
  v62 = *(_OWORD *)&v57[v59 + 24];
  *(_OWORD *)&v56[v59 + 24] = v62;
  v63 = v62;
  v64 = **(void (***)(char *, char *, uint64_t))(v62 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v64(v60, v61, v63);
  *((_QWORD *)v60 + 5) = *((_QWORD *)v61 + 5);
  v65 = (int *)type metadata accessor for CustomControlStyle(0);
  v66 = v65[6];
  v67 = &v60[v66];
  v68 = &v61[v66];
  v69 = sub_23BB8A334();
  v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
  swift_retain();
  v70(v67, v68, v69);
  v71 = v65[7];
  v72 = &v60[v71];
  v73 = &v61[v71];
  v74 = v61[v71 + 40];
  if ((v74 & 1) != 0)
  {
    v75 = *((_QWORD *)v73 + 1);
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *((_QWORD *)v72 + 1) = v75;
    swift_retain();
  }
  else
  {
    v76 = *(_OWORD *)(v73 + 24);
    *(_OWORD *)(v72 + 24) = v76;
    (**(void (***)(char *))(v76 - 8))(v72);
  }
  v72[40] = v74;
  v77 = v65[8];
  v78 = &v60[v77];
  v79 = &v61[v77];
  v80 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v81 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v78, v79, v81);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  v60[v65[9]] = v61[v65[9]];
  v60[v65[10]] = v61[v65[10]];
  v82 = v65[11];
  v83 = &v60[v82];
  v84 = &v61[v82];
  v83[8] = v84[8];
  *(_QWORD *)v83 = *(_QWORD *)v84;
  v85 = v118[7];
  v86 = &v56[v85];
  v87 = &v57[v85];
  v88 = *(_OWORD *)&v57[v85 + 24];
  *(_OWORD *)&v56[v85 + 24] = v88;
  (**(void (***)(char *, char *))(v88 - 8))(&v56[v85], &v57[v85]);
  *((_QWORD *)v86 + 5) = *((_QWORD *)v87 + 5);
  v89 = v65[6];
  v90 = &v86[v89];
  v91 = &v87[v89];
  swift_retain();
  v70(v90, v91, v69);
  v92 = v65[7];
  v93 = &v86[v92];
  v94 = &v87[v92];
  v95 = v87[v92 + 40];
  if ((v95 & 1) != 0)
  {
    v96 = *((_QWORD *)v94 + 1);
    *(_QWORD *)v93 = *(_QWORD *)v94;
    *((_QWORD *)v93 + 1) = v96;
    swift_retain();
  }
  else
  {
    v97 = *(_OWORD *)(v94 + 24);
    *(_OWORD *)(v93 + 24) = v97;
    (**(void (***)(char *))(v97 - 8))(v93);
  }
  v93[40] = v95;
  v98 = v65[8];
  v99 = &v86[v98];
  v100 = &v87[v98];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v101 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v99, v100, v101);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  v86[v65[9]] = v87[v65[9]];
  v86[v65[10]] = v87[v65[10]];
  v102 = v65[11];
  v103 = &v86[v102];
  v104 = &v87[v102];
  v103[8] = v104[8];
  *(_QWORD *)v103 = *(_QWORD *)v104;
  *(_QWORD *)&v56[v118[8]] = *(_QWORD *)&v57[v118[8]];
  *(_QWORD *)&v56[v118[9]] = *(_QWORD *)&v57[v118[9]];
  *(_QWORD *)&v56[v118[10]] = *(_QWORD *)&v57[v118[10]];
  v105 = a3[8];
  v106 = a3[9];
  v107 = (_QWORD *)((char *)a1 + v105);
  v108 = (_QWORD *)((char *)a2 + v105);
  v109 = v108[1];
  *v107 = *v108;
  v107[1] = v109;
  *((_BYTE *)a1 + v106) = *((_BYTE *)a2 + v106);
  v110 = a3[10];
  v111 = a3[11];
  v112 = (char *)a1 + v110;
  v113 = (char *)a2 + v110;
  *v112 = *v113;
  *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
  v114 = (char *)a1 + v111;
  v115 = (char *)a2 + v111;
  *v114 = *v115;
  *((_QWORD *)v114 + 1) = *((_QWORD *)v115 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23BA977D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  void (*v36)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  __int128 v60;
  uint64_t Action;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  __int128 v130;
  uint64_t v131;
  int *v132;
  void (*v133)(char *, char *, uint64_t);
  _QWORD *v134;

  *a1 = *a2;
  v4 = a3[5];
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = *(_QWORD *)((char *)a1 + v4);
  v8 = *(_QWORD *)((char *)a2 + v4);
  if (v7 >= 2)
  {
    if (v8 >= 2)
    {
      *v5 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B989D60((uint64_t)v5, &qword_256A5A1B8);
      *v5 = *v6;
    }
  }
  else
  {
    *v5 = v8;
    if (v8 >= 2)
      swift_bridgeObjectRetain();
  }
  v9 = (int *)type metadata accessor for DetailsAppView.State(0);
  v10 = v9[5];
  v11 = (unint64_t *)((char *)v5 + v10);
  v12 = (unint64_t *)((char *)v6 + v10);
  v13 = type metadata accessor for SessionLocation.Description(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v132 = v9;
  v134 = a1;
  if (v16)
  {
    if (!v17)
    {
      *v11 = *v12;
      v11[1] = v12[1];
      v18 = *(int *)(v13 + 20);
      v19 = (_QWORD *)((char *)v11 + v18);
      v20 = (_QWORD *)((char *)v12 + v18);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = sub_23BB88984();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        v22 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v23 = (char *)v19 + v22;
        v24 = (char *)v20 + v22;
        *(_OWORD *)v23 = *(_OWORD *)v24;
        *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
        *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
        *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
        *((_QWORD *)v23 + 5) = *((_QWORD *)v24 + 5);
        *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
        *((_QWORD *)v23 + 7) = *((_QWORD *)v24 + 7);
        *((_QWORD *)v23 + 8) = *((_QWORD *)v24 + 8);
        *((_QWORD *)v23 + 9) = *((_QWORD *)v24 + 9);
        *((_QWORD *)v23 + 10) = *((_QWORD *)v24 + 10);
        *((_QWORD *)v23 + 11) = *((_QWORD *)v24 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *v19 = *v20;
        v19[1] = v20[1];
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v33 = *(int *)(v13 + 24);
      v34 = (_QWORD *)((char *)v11 + v33);
      v35 = (_QWORD *)((char *)v12 + v33);
      *v34 = *v35;
      v34[1] = v35[1];
      v36 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56);
      swift_bridgeObjectRetain();
      v36(v11, 0, 1, v13);
      v9 = v132;
      goto LABEL_23;
    }
LABEL_14:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_23;
  }
  if (v17)
  {
    sub_23B989D9C((uint64_t)v11, type metadata accessor for SessionLocation.Description);
    goto LABEL_14;
  }
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v26 = *(int *)(v13 + 20);
    v27 = (_QWORD *)((char *)v11 + v26);
    v28 = (_QWORD *)((char *)v12 + v26);
    sub_23B989D60((uint64_t)v11 + v26, &qword_256A59C88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_23BB88984();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      v30 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v31 = (char *)v27 + v30;
      v32 = (char *)v28 + v30;
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
      *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 5) = *((_QWORD *)v32 + 5);
      *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
      *((_QWORD *)v31 + 7) = *((_QWORD *)v32 + 7);
      *((_QWORD *)v31 + 8) = *((_QWORD *)v32 + 8);
      *((_QWORD *)v31 + 9) = *((_QWORD *)v32 + 9);
      *((_QWORD *)v31 + 10) = *((_QWORD *)v32 + 10);
      *((_QWORD *)v31 + 11) = *((_QWORD *)v32 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *v27 = *v28;
      v27[1] = v28[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v9 = v132;
  }
  v37 = *(int *)(v13 + 24);
  v38 = (_QWORD *)((char *)v11 + v37);
  v39 = (_QWORD *)((char *)v12 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_23:
  v40 = v9[6];
  v41 = (char *)v5 + v40;
  v42 = (char *)v6 + v40;
  v43 = sub_23BB88984();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
LABEL_28:
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
LABEL_29:
  *(unint64_t *)((char *)v5 + v9[7]) = *(unint64_t *)((char *)v6 + v9[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = v9[8];
  v50 = (unint64_t *)((char *)v5 + v49);
  v51 = (unint64_t *)((char *)v6 + v49);
  *v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v9[9]) = *((_BYTE *)v6 + v9[9]);
  *((_BYTE *)v5 + v9[10]) = *((_BYTE *)v6 + v9[10]);
  v52 = v9[11];
  v53 = (uint64_t)v5 + v52;
  v54 = (char *)v6 + v52;
  v55 = type metadata accessor for DirectionsState();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 2, v55);
  v59 = v57((uint64_t)v54, 2, v55);
  if (v58)
  {
    if (!v59)
    {
      *(_BYTE *)v53 = *v54;
      v60 = *(_OWORD *)(v54 + 8);
      *(_BYTE *)(v53 + 24) = v54[24];
      *(_OWORD *)(v53 + 8) = v60;
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v53 + *(int *)(v55 + 24), &v54[*(int *)(v55 + 24)], v43);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 2, v55);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v59)
  {
    sub_23B989D9C(v53, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_34:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v53, v54, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_35;
  }
  *(_BYTE *)v53 = *v54;
  v130 = *(_OWORD *)(v54 + 8);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_OWORD *)(v53 + 8) = v130;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 24))(v53 + *(int *)(v55 + 24), &v54[*(int *)(v55 + 24)], v43);
LABEL_35:
  v62 = v134;
  *((_BYTE *)v5 + v132[12]) = *((_BYTE *)v6 + v132[12]);
  v63 = a3[6];
  v64 = (_QWORD *)((char *)v134 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = *(_QWORD *)((char *)a2 + v63 + 8);
  *v64 = *(_QWORD *)((char *)a2 + v63);
  v64[1] = v66;
  swift_retain();
  swift_release();
  v67 = v65[3];
  v64[2] = v65[2];
  v64[3] = v67;
  swift_retain();
  swift_release();
  v68 = v65[5];
  v64[4] = v65[4];
  v64[5] = v68;
  swift_retain();
  swift_release();
  v69 = v65[7];
  v64[6] = v65[6];
  v64[7] = v69;
  swift_retain();
  swift_release();
  v70 = v65[9];
  v64[8] = v65[8];
  v64[9] = v70;
  swift_retain();
  swift_release();
  v71 = v65[11];
  v64[10] = v65[10];
  v64[11] = v71;
  swift_retain();
  swift_release();
  v72 = v65[13];
  v64[12] = v65[12];
  v64[13] = v72;
  swift_retain();
  swift_release();
  v73 = v65[15];
  v64[14] = v65[14];
  v64[15] = v73;
  swift_retain();
  swift_release();
  v74 = v65[17];
  v64[16] = v65[16];
  v64[17] = v74;
  swift_retain();
  swift_release();
  v75 = a3[7];
  v76 = (char *)v134 + v75;
  v77 = (char *)a2 + v75;
  *(_QWORD *)((char *)v134 + v75) = *(_QWORD *)((char *)a2 + v75);
  swift_retain();
  swift_release();
  *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
  swift_retain();
  swift_release();
  v131 = type metadata accessor for DetailsAppView.Style(0);
  v78 = *(int *)(v131 + 24);
  v79 = &v76[v78];
  v80 = &v77[v78];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v76[v78], (uint64_t *)&v77[v78]);
  *((_QWORD *)v79 + 5) = *((_QWORD *)v80 + 5);
  swift_retain();
  swift_release();
  v81 = (int *)type metadata accessor for CustomControlStyle(0);
  v82 = v81[6];
  v83 = &v79[v82];
  v84 = &v80[v82];
  v85 = sub_23BB8A334();
  v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 24);
  v133(v83, v84, v85);
  if (v134 == a2)
  {
    v90 = v81 + 8;
    v91 = (int *)v131;
  }
  else
  {
    v86 = v81[7];
    v87 = &v79[v86];
    v88 = &v80[v86];
    sub_23B989D60((uint64_t)&v79[v86], qword_256A59CC0);
    if ((v88[40] & 1) != 0)
    {
      v89 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v89;
      v87[40] = 1;
      swift_retain();
    }
    else
    {
      v92 = *((_QWORD *)v88 + 3);
      *((_QWORD *)v87 + 3) = v92;
      *((_QWORD *)v87 + 4) = *((_QWORD *)v88 + 4);
      (**(void (***)(uint64_t, char *))(v92 - 8))((uint64_t)v87, v88);
      v87[40] = 0;
    }
    v91 = (int *)v131;
    v93 = v81[8];
    v94 = &v79[v93];
    v95 = &v80[v93];
    sub_23B989D9C((uint64_t)&v79[v93], type metadata accessor for CustomControlStyle.BackgroundSize);
    v96 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v97 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v94, v95, v97);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    v62 = v134;
    v90 = v81 + 8;
  }
  v79[v81[9]] = v80[v81[9]];
  v79[v81[10]] = v80[v81[10]];
  v98 = v81[11];
  v99 = &v79[v98];
  v100 = &v80[v98];
  v101 = *(_QWORD *)v100;
  v99[8] = v100[8];
  *(_QWORD *)v99 = v101;
  v102 = v91[7];
  v103 = &v76[v102];
  v104 = &v77[v102];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v76[v102], (uint64_t *)&v77[v102]);
  *((_QWORD *)v103 + 5) = *((_QWORD *)v104 + 5);
  swift_retain();
  swift_release();
  v133(&v103[v81[6]], &v104[v81[6]], v85);
  if (v62 != a2)
  {
    v105 = v81[7];
    v106 = &v103[v105];
    v107 = &v104[v105];
    sub_23B989D60((uint64_t)&v103[v105], qword_256A59CC0);
    if ((v107[40] & 1) != 0)
    {
      v108 = *((_QWORD *)v107 + 1);
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = v108;
      v106[40] = 1;
      swift_retain();
    }
    else
    {
      v109 = *((_QWORD *)v107 + 3);
      *((_QWORD *)v106 + 3) = v109;
      *((_QWORD *)v106 + 4) = *((_QWORD *)v107 + 4);
      (**(void (***)(uint64_t, char *))(v109 - 8))((uint64_t)v106, v107);
      v106[40] = 0;
    }
    v110 = *v90;
    v111 = &v103[v110];
    v112 = &v104[v110];
    sub_23B989D9C((uint64_t)&v103[v110], type metadata accessor for CustomControlStyle.BackgroundSize);
    v113 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v114 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v111, v112, v114);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    }
  }
  v103[v81[9]] = v104[v81[9]];
  v103[v81[10]] = v104[v81[10]];
  v115 = v81[11];
  v116 = &v103[v115];
  v117 = &v104[v115];
  v118 = *(_QWORD *)v117;
  v116[8] = v117[8];
  *(_QWORD *)v116 = v118;
  *(_QWORD *)&v76[v91[8]] = *(_QWORD *)&v77[v91[8]];
  *(_QWORD *)&v76[v91[9]] = *(_QWORD *)&v77[v91[9]];
  *(_QWORD *)&v76[v91[10]] = *(_QWORD *)&v77[v91[10]];
  v119 = a3[8];
  v120 = (_QWORD *)((char *)v62 + v119);
  v121 = (_QWORD *)((char *)a2 + v119);
  v122 = v121[1];
  *v120 = *v121;
  v120[1] = v122;
  swift_retain();
  swift_release();
  *((_BYTE *)v62 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v123 = a3[10];
  v124 = (char *)v62 + v123;
  v125 = (char *)a2 + v123;
  *v124 = *v125;
  *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
  swift_retain();
  swift_release();
  v126 = a3[11];
  v127 = (char *)v62 + v126;
  v128 = (char *)a2 + v126;
  *v127 = *v128;
  *((_QWORD *)v127 + 1) = *((_QWORD *)v128 + 1);
  swift_retain();
  swift_release();
  return v62;
}

__n128 sub_23BA98350(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t Action;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __n128 result;
  void (*v90)(char *, char *, uint64_t);
  _QWORD *v91;

  v3 = a1;
  *a1 = *a2;
  v4 = a3[5];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for DetailsAppView.State(0);
  v8 = v7[5];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = type metadata accessor for SessionLocation.Description(0);
  v12 = *(_QWORD *)(v11 - 8);
  v91 = v3;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v14 = *(int *)(v11 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      v19 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v20 = &v15[v19];
      v21 = &v16[v19];
      v22 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v22;
      v23 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v23;
      v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    *(_OWORD *)&v9[*(int *)(v11 + 24)] = *(_OWORD *)&v10[*(int *)(v11 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    v3 = v91;
  }
  v25 = v7[6];
  v26 = &v5[v25];
  v27 = &v6[v25];
  v28 = sub_23BB88984();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  *(_QWORD *)&v5[v7[7]] = *(_QWORD *)&v6[v7[7]];
  *(_OWORD *)&v5[v7[8]] = *(_OWORD *)&v6[v7[8]];
  v5[v7[9]] = v6[v7[9]];
  v5[v7[10]] = v6[v7[10]];
  v31 = v7[11];
  v32 = &v5[v31];
  v33 = &v6[v31];
  v34 = type metadata accessor for DirectionsState();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 2, v34))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
    v32[24] = v33[24];
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v32[*(int *)(v34 + 24)], &v33[*(int *)(v34 + 24)], v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 2, v34);
  }
  v5[v7[12]] = v6[v7[12]];
  v37 = a3[6];
  v38 = a3[7];
  v39 = (_OWORD *)((char *)v3 + v37);
  v40 = (_OWORD *)((char *)a2 + v37);
  v41 = v40[3];
  v39[2] = v40[2];
  v39[3] = v41;
  v42 = v40[1];
  *v39 = *v40;
  v39[1] = v42;
  v43 = v40[8];
  v44 = v40[6];
  v39[7] = v40[7];
  v39[8] = v43;
  v45 = v40[5];
  v39[4] = v40[4];
  v39[5] = v45;
  v39[6] = v44;
  v46 = (char *)v3 + v38;
  v47 = (char *)a2 + v38;
  *(_OWORD *)v46 = *(_OWORD *)((char *)a2 + v38);
  v48 = (int *)type metadata accessor for DetailsAppView.Style(0);
  v49 = v48[6];
  v50 = &v46[v49];
  v51 = &v47[v49];
  v52 = *(_OWORD *)&v47[v49 + 16];
  *(_OWORD *)v50 = *(_OWORD *)&v47[v49];
  *((_OWORD *)v50 + 1) = v52;
  v53 = *(_QWORD *)&v47[v49 + 40];
  *((_QWORD *)v50 + 4) = *(_QWORD *)&v47[v49 + 32];
  *((_QWORD *)v50 + 5) = v53;
  v54 = (int *)type metadata accessor for CustomControlStyle(0);
  v55 = v54[6];
  v56 = &v50[v55];
  v57 = &v51[v55];
  v58 = sub_23BB8A334();
  v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32);
  v90(v56, v57, v58);
  v59 = v54[7];
  v60 = &v50[v59];
  v61 = &v51[v59];
  v62 = *((_OWORD *)v61 + 1);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *((_OWORD *)v60 + 1) = v62;
  *(_OWORD *)(v60 + 25) = *(_OWORD *)(v61 + 25);
  v63 = v54[8];
  v64 = &v50[v63];
  v65 = &v51[v63];
  v66 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v67 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v64, v65, v67);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  v50[v54[9]] = v51[v54[9]];
  v50[v54[10]] = v51[v54[10]];
  v68 = v54[11];
  v69 = &v50[v68];
  v70 = &v51[v68];
  v69[8] = v70[8];
  *(_QWORD *)v69 = *(_QWORD *)v70;
  v71 = v48[7];
  v72 = &v46[v71];
  v73 = &v47[v71];
  v74 = *(_OWORD *)&v47[v71 + 16];
  *(_OWORD *)v72 = *(_OWORD *)&v47[v71];
  *((_OWORD *)v72 + 1) = v74;
  v75 = *(_QWORD *)&v47[v71 + 40];
  *((_QWORD *)v72 + 4) = *(_QWORD *)&v47[v71 + 32];
  *((_QWORD *)v72 + 5) = v75;
  v90(&v46[v71 + v54[6]], &v47[v71 + v54[6]], v58);
  v76 = v54[7];
  v77 = &v72[v76];
  v78 = &v73[v76];
  v79 = *((_OWORD *)v78 + 1);
  *(_OWORD *)v77 = *(_OWORD *)v78;
  *((_OWORD *)v77 + 1) = v79;
  *(_OWORD *)(v77 + 25) = *(_OWORD *)(v78 + 25);
  v80 = v54[8];
  v81 = &v72[v80];
  v82 = &v73[v80];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v83 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  v72[v54[9]] = v73[v54[9]];
  v72[v54[10]] = v73[v54[10]];
  v84 = v54[11];
  v85 = &v72[v84];
  v86 = &v73[v84];
  v85[8] = v86[8];
  *(_QWORD *)v85 = *(_QWORD *)v86;
  *(_QWORD *)&v46[v48[8]] = *(_QWORD *)&v47[v48[8]];
  *(_QWORD *)&v46[v48[9]] = *(_QWORD *)&v47[v48[9]];
  *(_QWORD *)&v46[v48[10]] = *(_QWORD *)&v47[v48[10]];
  v87 = a3[9];
  *(_OWORD *)((char *)v91 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)v91 + v87) = *((_BYTE *)a2 + v87);
  v88 = a3[11];
  *(_OWORD *)((char *)v91 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  result = *(__n128 *)((char *)a2 + v88);
  *(__n128 *)((char *)v91 + v88) = result;
  return result;
}

_QWORD *sub_23BA98900(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t Action;
  _QWORD *v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  int *v125;
  _QWORD *v126;

  *a1 = *a2;
  v4 = a3[5];
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = *(_QWORD *)((char *)a1 + v4);
  v8 = *(_QWORD *)((char *)a2 + v4);
  if (v7 < 2)
    goto LABEL_4;
  if (v8 < 2)
  {
    sub_23B989D60((uint64_t)v5, &qword_256A5A1B8);
    v8 = *v6;
LABEL_4:
    *v5 = v8;
    goto LABEL_6;
  }
  *v5 = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = (int *)type metadata accessor for DetailsAppView.State(0);
  v10 = v9[5];
  v11 = (unint64_t *)((char *)v5 + v10);
  v12 = (unint64_t *)((char *)v6 + v10);
  v13 = type metadata accessor for SessionLocation.Description(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  v126 = a1;
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      v18 = *(int *)(v13 + 20);
      v19 = (char *)v11 + v18;
      v20 = (char *)v12 + v18;
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v22 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
        v23 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v24 = &v19[v23];
        v25 = &v20[v23];
        v26 = *((_OWORD *)v25 + 3);
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        *((_OWORD *)v24 + 3) = v26;
        v27 = *((_OWORD *)v25 + 5);
        *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
        *((_OWORD *)v24 + 5) = v27;
        v28 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v28;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      *(_OWORD *)((char *)v11 + *(int *)(v13 + 24)) = *(_OWORD *)((char *)v12 + *(int *)(v13 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_20;
    }
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_20;
  }
  if (v17)
  {
    sub_23B989D9C((uint64_t)v11, type metadata accessor for SessionLocation.Description);
    goto LABEL_12;
  }
  v30 = v12[1];
  *v11 = *v12;
  v11[1] = v30;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v31 = *(int *)(v13 + 20);
    v32 = (char *)v11 + v31;
    v33 = (char *)v12 + v31;
    sub_23B989D60((uint64_t)v11 + v31, &qword_256A59C88);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      v36 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v37 = &v32[v36];
      v38 = &v33[v36];
      v39 = *((_OWORD *)v38 + 3);
      *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
      *((_OWORD *)v37 + 3) = v39;
      v40 = *((_OWORD *)v38 + 5);
      *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
      *((_OWORD *)v37 + 5) = v40;
      v41 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v41;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  v42 = *(int *)(v13 + 24);
  v43 = (_QWORD *)((char *)v11 + v42);
  v44 = (_QWORD *)((char *)v12 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
LABEL_20:
  v47 = v9[6];
  v48 = (char *)v5 + v47;
  v49 = (char *)v6 + v47;
  v50 = sub_23BB88984();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  v124 = v51;
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
LABEL_25:
    v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
LABEL_26:
  *(unint64_t *)((char *)v5 + v9[7]) = *(unint64_t *)((char *)v6 + v9[7]);
  swift_bridgeObjectRelease();
  v56 = v9[8];
  v57 = (unint64_t *)((char *)v5 + v56);
  v58 = (uint64_t *)((char *)v6 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + v9[9]) = *((_BYTE *)v6 + v9[9]);
  *((_BYTE *)v5 + v9[10]) = *((_BYTE *)v6 + v9[10]);
  v61 = v9[11];
  v62 = (uint64_t)v5 + v61;
  v63 = (char *)v6 + v61;
  v64 = type metadata accessor for DirectionsState();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 2, v64);
  v68 = v66((uint64_t)v63, 2, v64);
  if (v67)
  {
    if (!v68)
    {
      *(_BYTE *)v62 = *v63;
      *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
      *(_BYTE *)(v62 + 24) = v63[24];
      (*(void (**)(uint64_t, char *, uint64_t))(v124 + 32))(v62 + *(int *)(v64 + 24), &v63[*(int *)(v64 + 24)], v50);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 2, v64);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v68)
  {
    sub_23B989D9C(v62, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_31:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v62, v63, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_32;
  }
  *(_BYTE *)v62 = *v63;
  *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
  *(_BYTE *)(v62 + 24) = v63[24];
  (*(void (**)(uint64_t, char *, uint64_t))(v124 + 40))(v62 + *(int *)(v64 + 24), &v63[*(int *)(v64 + 24)], v50);
LABEL_32:
  *((_BYTE *)v5 + v9[12]) = *((_BYTE *)v6 + v9[12]);
  v70 = v126;
  v71 = a3[6];
  v72 = (_OWORD *)((char *)v126 + v71);
  v73 = (_OWORD *)((char *)a2 + v71);
  *(_OWORD *)((char *)v126 + v71) = *(_OWORD *)((char *)a2 + v71);
  swift_release();
  v72[1] = v73[1];
  swift_release();
  v72[2] = v73[2];
  swift_release();
  v72[3] = v73[3];
  swift_release();
  v72[4] = v73[4];
  swift_release();
  v72[5] = v73[5];
  swift_release();
  v72[6] = v73[6];
  swift_release();
  v72[7] = v73[7];
  swift_release();
  v72[8] = v73[8];
  swift_release();
  v74 = a3[7];
  v75 = (char *)v126 + v74;
  v76 = (char *)a2 + v74;
  *(_QWORD *)((char *)v126 + v74) = *(_QWORD *)((char *)a2 + v74);
  swift_release();
  *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
  swift_release();
  v125 = (int *)type metadata accessor for DetailsAppView.Style(0);
  v77 = v125[6];
  v78 = &v75[v77];
  v79 = &v76[v77];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75[v77]);
  v80 = *((_OWORD *)v79 + 1);
  *(_OWORD *)v78 = *(_OWORD *)v79;
  *((_OWORD *)v78 + 1) = v80;
  v81 = *((_QWORD *)v79 + 5);
  *((_QWORD *)v78 + 4) = *((_QWORD *)v79 + 4);
  *((_QWORD *)v78 + 5) = v81;
  swift_release();
  v82 = (int *)type metadata accessor for CustomControlStyle(0);
  v83 = v82[6];
  v84 = &v78[v83];
  v85 = &v79[v83];
  v86 = sub_23BB8A334();
  v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 40);
  v123(v84, v85, v86);
  if (v126 != a2)
  {
    v87 = v82[7];
    v88 = &v79[v87];
    v89 = &v78[v87];
    sub_23B989D60((uint64_t)&v78[v87], qword_256A59CC0);
    v90 = *((_OWORD *)v88 + 1);
    *(_OWORD *)v89 = *(_OWORD *)v88;
    *((_OWORD *)v89 + 1) = v90;
    *(_OWORD *)(v89 + 25) = *(_OWORD *)(v88 + 25);
    v91 = v82[8];
    v92 = &v78[v91];
    v93 = &v79[v91];
    sub_23B989D9C((uint64_t)&v78[v91], type metadata accessor for CustomControlStyle.BackgroundSize);
    v94 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v95 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v92, v93, v95);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
    v70 = v126;
  }
  v78[v82[9]] = v79[v82[9]];
  v78[v82[10]] = v79[v82[10]];
  v96 = v82[11];
  v97 = &v78[v96];
  v98 = &v79[v96];
  v97[8] = v98[8];
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v99 = v125[7];
  v100 = &v75[v99];
  v101 = &v76[v99];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75[v99]);
  v102 = *((_OWORD *)v101 + 1);
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *((_OWORD *)v100 + 1) = v102;
  v103 = *((_QWORD *)v101 + 5);
  *((_QWORD *)v100 + 4) = *((_QWORD *)v101 + 4);
  *((_QWORD *)v100 + 5) = v103;
  swift_release();
  v123(&v100[v82[6]], &v101[v82[6]], v86);
  if (v70 != a2)
  {
    v104 = v82[7];
    v105 = &v101[v104];
    v106 = &v100[v104];
    sub_23B989D60((uint64_t)&v100[v104], qword_256A59CC0);
    v107 = *((_OWORD *)v105 + 1);
    *(_OWORD *)v106 = *(_OWORD *)v105;
    *((_OWORD *)v106 + 1) = v107;
    *(_OWORD *)(v106 + 25) = *(_OWORD *)(v105 + 25);
    v108 = v82[8];
    v109 = &v100[v108];
    v110 = &v101[v108];
    sub_23B989D9C((uint64_t)&v100[v108], type metadata accessor for CustomControlStyle.BackgroundSize);
    v111 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v112 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v109, v110, v112);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
  }
  v100[v82[9]] = v101[v82[9]];
  v100[v82[10]] = v101[v82[10]];
  v113 = v82[11];
  v114 = &v100[v113];
  v115 = &v101[v113];
  v114[8] = v115[8];
  *(_QWORD *)v114 = *(_QWORD *)v115;
  *(_QWORD *)&v75[v125[8]] = *(_QWORD *)&v76[v125[8]];
  *(_QWORD *)&v75[v125[9]] = *(_QWORD *)&v76[v125[9]];
  *(_QWORD *)&v75[v125[10]] = *(_QWORD *)&v76[v125[10]];
  *(_OWORD *)((char *)v70 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  swift_release();
  v116 = a3[10];
  *((_BYTE *)v70 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v117 = (char *)v70 + v116;
  v118 = (char *)a2 + v116;
  *v117 = *v118;
  *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
  swift_release();
  v119 = a3[11];
  v120 = (char *)v70 + v119;
  v121 = (char *)a2 + v119;
  *v120 = *v121;
  *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
  swift_release();
  return v70;
}

uint64_t sub_23BA99214()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA99220(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = type metadata accessor for DetailsAppView.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for DetailsAppView.Style(0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_23BA992C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA992D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = type metadata accessor for DetailsAppView.State(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for DetailsAppView.Style(0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[7];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_23BA99370()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DetailsAppView.State(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DetailsAppView.Style(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23BA99430()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA99444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for DetailsAppView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 32) + ((v2 + 16) & ~v2)))();
}

unint64_t sub_23BA99488()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F568;
  if (!qword_256A5F568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F570);
    v2[0] = sub_23BA9950C();
    v2[1] = sub_23B996E1C(&qword_256A5F580, &qword_256A5F588, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F568);
  }
  return result;
}

unint64_t sub_23BA9950C()
{
  unint64_t result;

  result = qword_256A5F578;
  if (!qword_256A5F578)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8FE14, &type metadata for DetailsAppMapView);
    atomic_store(result, (unint64_t *)&qword_256A5F578);
  }
  return result;
}

uint64_t sub_23BA99550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return sub_23BA99560();
  return result;
}

uint64_t sub_23BA99560()
{
  return sub_23BA99568();
}

uint64_t sub_23BA99568()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t objectdestroyTm_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for DetailsAppView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = (_QWORD *)(v2 + *(int *)(v1 + 20));
  if (*v3 >= 2uLL)
    swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for DetailsAppView.State(0);
  v5 = (char *)v3 + v4[5];
  v6 = type metadata accessor for SessionLocation.Description(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = &v5[*(int *)(v6 + 20)];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23BB88984();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      type metadata accessor for FindMyRelativeDate();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = (char *)v3 + v4[6];
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (char *)v3 + v4[11];
  v13 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 2, v13))
    (*(void (**)(char *, uint64_t))(v11 + 8))(&v12[*(int *)(v13 + 24)], v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v14 = v2 + *(int *)(v1 + 28);
  swift_release();
  swift_release();
  v15 = type metadata accessor for DetailsAppView.Style(0);
  v16 = v14 + *(int *)(v15 + 24);
  __swift_destroy_boxed_opaque_existential_1(v16);
  swift_release();
  v17 = (int *)type metadata accessor for CustomControlStyle(0);
  v18 = v16 + v17[6];
  v19 = sub_23BB8A334();
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
  v20(v18, v19);
  v21 = v16 + v17[7];
  if ((*(_BYTE *)(v21 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v21);
  v22 = v16 + v17[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  }
  v24 = v14 + *(int *)(v15 + 28);
  __swift_destroy_boxed_opaque_existential_1(v24);
  swift_release();
  v20(v24 + v17[6], v19);
  v25 = v24 + v17[7];
  if ((*(_BYTE *)(v25 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v25);
  v26 = v24 + v17[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA99980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BA91670(v3);
}

uint64_t sub_23BA999E8()
{
  type metadata accessor for DetailsAppView(0);
  return sub_23BA918D0();
}

void sub_23BA99A18(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppView(0) - 8) + 80);
  sub_23BA91938(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_23BA99A64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F5B0;
  if (!qword_256A5F5B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F540);
    v2[0] = sub_23BA99AE8();
    v2[1] = sub_23B97D0C8((unint64_t *)&qword_256A5A208, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F5B0);
  }
  return result;
}

unint64_t sub_23BA99AE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A5F5B8;
  if (!qword_256A5F5B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F538);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F558);
    v2[3] = sub_23B9B9770(&qword_256A5F560, &qword_256A5F558, (uint64_t (*)(void))sub_23BA99488, MEMORY[0x24BDF0390]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A5F5C0, &qword_256A5F590, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F5B8);
  }
  return result;
}

uint64_t sub_23BA99BBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = type metadata accessor for DetailsAppView(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  v4 = (_QWORD *)(v0 + v2 + *(int *)(v1 + 20));
  if (*v4 >= 2uLL)
    swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for DetailsAppView.State(0);
  v6 = (char *)v4 + v5[5];
  v7 = type metadata accessor for SessionLocation.Description(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = &v6[*(int *)(v7 + 20)];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23BB88984();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      type metadata accessor for FindMyRelativeDate();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = (char *)v4 + v5[6];
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (char *)v4 + v5[11];
  v14 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 2, v14))
    (*(void (**)(char *, uint64_t))(v12 + 8))(&v13[*(int *)(v14 + 24)], v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v15 = v3 + *(int *)(v1 + 28);
  swift_release();
  swift_release();
  v16 = type metadata accessor for DetailsAppView.Style(0);
  v17 = v15 + *(int *)(v16 + 24);
  __swift_destroy_boxed_opaque_existential_1(v17);
  swift_release();
  v18 = (int *)type metadata accessor for CustomControlStyle(0);
  v19 = v17 + v18[6];
  v20 = sub_23BB8A334();
  v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
  v21(v19, v20);
  v22 = v17 + v18[7];
  if ((*(_BYTE *)(v22 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v22);
  v23 = v17 + v18[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  v25 = v15 + *(int *)(v16 + 28);
  __swift_destroy_boxed_opaque_existential_1(v25);
  swift_release();
  v21(v25 + v18[6], v20);
  v26 = v25 + v18[7];
  if ((*(_BYTE *)(v26 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v26);
  v27 = v25 + v18[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA99FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BA91AE0(a1, v5, v6, v7);
}

uint64_t sub_23BA9A034(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23BA9A054()
{
  return sub_23BA91DC0();
}

unint64_t sub_23BA9A06C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_256A5F608;
  if (!qword_256A5F608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F5F8);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F610);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
    v2[3] = sub_23BA9A13C();
    v2[4] = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F608);
  }
  return result;
}

unint64_t sub_23BA9A13C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F618;
  if (!qword_256A5F618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F610);
    v2[0] = sub_23B9B9770(&qword_256A5F620, &qword_256A5F628, (uint64_t (*)(void))sub_23BA9A1E0, MEMORY[0x24BDECC60]);
    v2[1] = sub_23B996E1C(&qword_256A5D598, &qword_256A5A310, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F618);
  }
  return result;
}

unint64_t sub_23BA9A1E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F630;
  if (!qword_256A5F630)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F638);
    v2[0] = sub_23B996E1C(&qword_256A5F640, &qword_256A5F648, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F630);
  }
  return result;
}

unint64_t sub_23BA9A264()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F650;
  if (!qword_256A5F650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F5E8);
    v2[0] = sub_23BA9A2E8();
    v2[1] = sub_23B996E1C(&qword_256A5D598, &qword_256A5A310, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F650);
  }
  return result;
}

unint64_t sub_23BA9A2E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F658;
  if (!qword_256A5F658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F5E0);
    v2[0] = sub_23B996E1C(&qword_256A5F660, &qword_256A5F5D8, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F658);
  }
  return result;
}

uint64_t sub_23BA9A374()
{
  return swift_deallocObject();
}

_BYTE *sub_23BA9A384(_BYTE *a1)
{
  uint64_t v1;

  return sub_23BA844E4(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_23BA9A390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BA94ECC(v3);
}

uint64_t sub_23BA9A3F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA9A418()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23BA9A438()
{
  return swift_deallocObject();
}

unint64_t sub_23BA9A448()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A5F6E0;
  if (!qword_256A5F6E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F6C8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E00);
    v2[3] = type metadata accessor for CustomButtonStyle(255);
    v2[4] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[5] = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v2[0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F6E0);
  }
  return result;
}

unint64_t sub_23BA9A530()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F6E8;
  if (!qword_256A5F6E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F6B0);
    v2[0] = sub_23BA9A5B4();
    v2[1] = sub_23B996E1C(&qword_256A5ED90, &qword_256A5ED98, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F6E8);
  }
  return result;
}

unint64_t sub_23BA9A5B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A5F6F0;
  if (!qword_256A5F6F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F6A8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E00);
    v2[3] = type metadata accessor for CustomButtonStyle(255);
    v2[4] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[5] = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F6F0);
  }
  return result;
}

uint64_t sub_23BA9A6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B97C964;
  return sub_23BA94ECC(v3);
}

uint64_t sub_23BA9A710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DetailsAppView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BA94E18(v3);
}

uint64_t sub_23BA9A774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DirectionsState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 24) + ((v2 + 16) & ~v2);
  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_23BA9A7FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23B996E5C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23BA9A82C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23B9967D0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23BA9A85C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F780;
  if (!qword_256A5F780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D608);
    v2[0] = sub_23B996E1C(&qword_256A5F788, &qword_256A5D600, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F780);
  }
  return result;
}

uint64_t sub_23BA9A8E0()
{
  return sub_23BA9A8FC(&qword_256A5F7A0, &qword_256A5F7A8, (uint64_t (*)(void))sub_23BA9A960);
}

uint64_t sub_23BA9A8FC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = v7[0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BA9A960()
{
  unint64_t result;

  result = qword_256A5F7B0;
  if (!qword_256A5F7B0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB92820, &type metadata for DetailsAppView.AvatarTextBackgroundTemplate);
    atomic_store(result, (unint64_t *)&qword_256A5F7B0);
  }
  return result;
}

uint64_t destroy for DetailsAppView.AvatarTextBackgroundTemplate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12FindMyUICore14DetailsAppViewV28AvatarTextBackgroundTemplateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DetailsAppView.AvatarTextBackgroundTemplate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetailsAppView.AvatarTextBackgroundTemplate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetailsAppView.AvatarTextBackgroundTemplate()
{
  return &type metadata for DetailsAppView.AvatarTextBackgroundTemplate;
}

uint64_t sub_23BA9AAC4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F548);
  sub_23B9B9770(&qword_256A5F5A8, &qword_256A5F548, (uint64_t (*)(void))sub_23BA99A64, MEMORY[0x24BDF0910]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA9AB44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA9AB54()
{
  return sub_23B9B9770(&qword_256A5F7B8, &qword_256A5F7C0, (uint64_t (*)(void))sub_23BA9AB88, MEMORY[0x24BDF0390]);
}

unint64_t sub_23BA9AB88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F7C8;
  if (!qword_256A5F7C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F7D0);
    v2[0] = sub_23B9B9770(&qword_256A5F7D8, &qword_256A5F7E0, sub_23BA9AC2C, MEMORY[0x24BDEDBB8]);
    v2[1] = sub_23B996E1C(&qword_256A5F800, &qword_256A5F808, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F7C8);
  }
  return result;
}

uint64_t sub_23BA9AC2C()
{
  return sub_23B9B9770(&qword_256A5F7E8, &qword_256A5F7F0, (uint64_t (*)(void))sub_23BA9AC50, MEMORY[0x24BDECC60]);
}

unint64_t sub_23BA9AC50()
{
  unint64_t result;

  result = qword_256A5F7F8;
  if (!qword_256A5F7F8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8DD34, &type metadata for AvatarTextTemplate);
    atomic_store(result, (unint64_t *)&qword_256A5F7F8);
  }
  return result;
}

void sub_23BA9ACBC()
{
  qword_256A73D68 = (uint64_t)&unk_250CA9CF8;
}

uint64_t sub_23BA9ACD0(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      type metadata accessor for FindMyUICore();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v3 = (void *)sub_23BB8A784();
      v4 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, 0, 0);

      v5 = sub_23BB8A7B4();
      return v5;
    default:
      sub_23BB8B1C8();
      __break(1u);
      JUMPOUT(0x23BA9AEC8);
  }
}

uint64_t sub_23BA9AED8(unint64_t a1)
{
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  id v5;
  uint64_t result;

  if (a1 - 2 < 2)
    return 0;
  if (a1 <= 1)
  {
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v4 = (void *)sub_23BB8A784();
    v5 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v4, 0, 0);

    v1 = sub_23BB8A7B4();
    return v1;
  }
  result = sub_23BB8B1C8();
  __break(1u);
  return result;
}

unint64_t ShareDuration.init(rawValue:)(unint64_t a1)
{
  return sub_23BA9B150(a1);
}

BOOL sub_23BA9B054(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23BA9B068()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BA9B0AC()
{
  return sub_23BB8B24C();
}

uint64_t sub_23BA9B0D4()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

unint64_t sub_23BA9B114@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_23BA9B150(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_23BA9B144(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

unint64_t sub_23BA9B150(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_23BA9B164()
{
  unint64_t result;

  result = qword_256A5F810;
  if (!qword_256A5F810)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ShareDuration, &type metadata for ShareDuration);
    atomic_store(result, (unint64_t *)&qword_256A5F810);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareDuration()
{
  return &type metadata for ShareDuration;
}

uint64_t FindMyUserDefaults.value<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  char v21;

  v9 = sub_23BB8ACA0();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v20[-1] - v12;
  v14 = *(_BYTE *)(a1 + 16);
  if ((*(_BYTE *)(v4 + 24) & 1) == 0 && *(_BYTE *)(a1 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 8))(a2, a3, v11);
  v16 = *(_QWORD *)(v4 + 16);
  v17 = *(_QWORD *)(a1 + 8);
  v20[0] = *(_QWORD *)a1;
  v20[1] = v17;
  v21 = v14;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, __n128))(a3 + 16))(v16, v20, a2, a3, v11);
  v18 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a4, v13, a2);
}

id static FindMyUserDefaults.standard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v6;

  if (qword_256A58CD8 != -1)
    swift_once();
  v2 = qword_256A5F820;
  v3 = qword_256A5F828;
  v6 = (id)qword_256A5F828;
  v4 = byte_256A5F830;
  *(_QWORD *)a1 = qword_256A5F818;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return v6;
}

Swift::Void __swiftcall FindMyUserDefaults.resetAllValues()()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (*(_QWORD *)(v0 + 8))
  {
    v1 = *(void **)(v0 + 16);
    v2 = (id)sub_23BB8A784();
    objc_msgSend(v1, sel_removePersistentDomainForName_, v2);

  }
  else
  {
    objc_msgSend((id)objc_opt_self(), sel_resetStandardUserDefaults);
  }
}

uint64_t FindMyUserDefaults.Key.init(rawValue:internalBuildOnly:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

void FindMyUserDefaults.set<A>(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  if ((*(_BYTE *)(v2 + 24) & 1) != 0 || !*(_BYTE *)(a2 + 16))
  {
    v3 = *(void **)(v2 + 16);
    v4 = sub_23BB8B18C();
    v5 = (id)sub_23BB8A784();
    objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
    swift_unknownObjectRelease();

  }
}

uint64_t static Bool.defaultValue.getter()
{
  swift_beginAccess();
  return byte_256A5F831;
}

uint64_t static Bool.defaultValue.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_256A5F831 = a1;
  return result;
}

uint64_t (*static Bool.defaultValue.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id static Bool.value(from:and:)(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(a1, sel_BOOLForKey_, v2);

  return v3;
}

uint64_t sub_23BA9B5C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_256A5F831;
  return result;
}

void sub_23BA9B608(void *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v4;

  v4 = (void *)sub_23BB8A784();
  LOBYTE(a1) = objc_msgSend(a1, sel_BOOLForKey_, v4);

  *a2 = (_BYTE)a1;
}

uint64_t static Int.defaultValue.getter()
{
  swift_beginAccess();
  return qword_256A5F838;
}

uint64_t static Int.defaultValue.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_256A5F838 = a1;
  return result;
}

uint64_t (*static Int.defaultValue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id static Int.value(from:and:)(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(a1, sel_integerForKey_, v2);

  return v3;
}

uint64_t sub_23BA9B780@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = qword_256A5F838;
  return result;
}

void sub_23BA9B7C8(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;

  v4 = (void *)sub_23BB8A784();
  v5 = objc_msgSend(a1, sel_integerForKey_, v4);

  *a2 = v5;
}

double static Double.defaultValue.getter()
{
  swift_beginAccess();
  return *(double *)&qword_256A5F840;
}

uint64_t static Double.defaultValue.setter(double a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_256A5F840 = *(_QWORD *)&a1;
  return result;
}

uint64_t (*static Double.defaultValue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double static Double.value(from:and:)(void *a1)
{
  void *v2;
  double v3;
  double v4;

  v2 = (void *)sub_23BB8A784();
  objc_msgSend(a1, sel_doubleForKey_, v2);
  v4 = v3;

  return v4;
}

double sub_23BA9B950@<D0>(_QWORD *a1@<X8>)
{
  double result;

  swift_beginAccess();
  result = *(double *)&qword_256A5F840;
  *a1 = qword_256A5F840;
  return result;
}

void sub_23BA9B998(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (void *)sub_23BB8A784();
  objc_msgSend(a1, sel_doubleForKey_, v4);
  v6 = v5;

  *a2 = v6;
}

uint64_t static Optional<A>.defaultValue.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_256A5F848;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Optional<A>.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_256A5F848 = a1;
  qword_256A5F850 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Optional<A>.defaultValue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static Optional<A>.value(from:and:)(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (!v3)
    return 0;
  v4 = sub_23BB8A7B4();

  return v4;
}

uint64_t sub_23BA9BB6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = qword_256A5F850;
  *a1 = qword_256A5F848;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_23BA9BBB8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)sub_23BB8A784();
  v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    v6 = sub_23BB8A7B4();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

ValueMetadata *type metadata accessor for FindMyUserDefaults()
{
  return &type metadata for FindMyUserDefaults;
}

uint64_t sub_23BA9BC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Handle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Handle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FindMyUserDefaults.Key(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FindMyUserDefaults.Key);
}

uint64_t dispatch thunk of static FindMyUserDefaultsValue.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static FindMyUserDefaultsValue.value(from:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t DeviceImageProvider.data.getter()
{
  return sub_23BA9C424();
}

uint64_t DeviceImageProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  return sub_23BA9C3B0(v3, a1);
}

uint64_t sub_23BA9BE94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  return sub_23BA9C3B0(v4, a2);
}

uint64_t sub_23BA9BF2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F8F0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BA9C3B0(a1, (uint64_t)v7);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23BA9C324();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60((uint64_t)v7, &qword_256A5F8F0);
}

uint64_t DeviceImageProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A5F8F0);
}

uint64_t sub_23BA9C0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  sub_23BA9E0FC(a2, v3);
  return swift_endAccess();
}

void (*DeviceImageProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BA9C200;
}

void sub_23BA9C200(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t sub_23BA9C268@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BA9C4AC(a1, &OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data, a2);
}

uint64_t sub_23BA9C280()
{
  swift_getKeyPath();
  sub_23BA9C324();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23BA9C324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A595F0;
  if (!qword_256A595F0)
  {
    v1 = type metadata accessor for DeviceImageProvider();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DeviceImageProvider, v1);
    atomic_store(result, (unint64_t *)&qword_256A595F0);
  }
  return result;
}

uint64_t type metadata accessor for DeviceImageProvider()
{
  uint64_t result;

  result = qword_256A5F990;
  if (!qword_256A5F990)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA9C3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA9C3F8()
{
  uint64_t v0;

  return sub_23BA9C0B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BA9C410()
{
  return sub_23BA9C424();
}

uint64_t sub_23BA9C424()
{
  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA9C4AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA9C548()
{
  swift_getKeyPath();
  sub_23BA9C324();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DeviceImageProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DeviceImageProvider.init(dependencies:)(a1);
  return v2;
}

uint64_t DeviceImageProvider.init(dependencies:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (**v28)();
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v40[2];
  __int128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[4];

  v2 = (uint64_t)v1;
  v40[1] = *v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v42 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v40 - v10;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v40 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5F8F0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 36);
  *(_QWORD *)&v19[v21] = sub_23B97E684(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v19[v16[10]] = MEMORY[0x24BEE4B08];
  v19[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v41 = *a1;
  v22(v19, v15, v4);
  v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v23(v11, v15, v4);
  v43 = v5;
  v24 = *(unsigned __int8 *)(v5 + 80);
  v25 = v4;
  v26 = (v24 + 16) & ~v24;
  v27 = swift_allocObject();
  v23((char *)(v27 + v26), v11, v4);
  v28 = (uint64_t (**)())&v19[v16[12]];
  *v28 = sub_23B988EB4;
  v28[1] = (uint64_t (*)())v27;
  v29 = (uint64_t)v19;
  v30 = v42;
  sub_23BA9D36C(v29, v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage);
  v31 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data) = sub_23B97E394(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__valuePublishers) = sub_23B97E510(v31);
  sub_23BB88A44();
  *(_OWORD *)(v2 + 16) = v41;
  swift_getKeyPath();
  v45[1] = v2;
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v32 = v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  v22(v30, (char *)v32, v4);
  swift_retain_n();
  v33 = sub_23BB891AC();
  v34 = sub_23BB8ABEC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v45[0] = v36;
    *(_DWORD *)v35 = 136315394;
    v44 = sub_23BB7B69C(0xD000000000000013, 0x800000023BB9B680, v45);
    sub_23BB8ACB8();
    *(_WORD *)(v35 + 12) = 2080;
    v44 = v2;
    swift_retain();
    v37 = sub_23BB8A7D8();
    v44 = sub_23BB7B69C(v37, v38, v45);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v33, v34, "DeviceImageProvider: %s - %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v35, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v25);
  return v2;
}

uint64_t sub_23BA9CA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[22] = a4;
  v5[23] = a5;
  v6 = sub_23BB891C4();
  v5[24] = v6;
  v5[25] = *(_QWORD *)(v6 - 8);
  v5[26] = swift_task_alloc();
  sub_23BB8A9F4();
  v5[27] = sub_23BB8A9E8();
  v5[28] = sub_23BB8A988();
  v5[29] = v7;
  return swift_task_switch();
}

uint64_t sub_23BA9CAF0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(int **)(*(_QWORD *)(v0 + 176) + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  v4 = *(_OWORD *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 48);
  v5 = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v1 + 64);
  *(_OWORD *)(v0 + 48) = v4;
  *(_OWORD *)(v0 + 64) = v3;
  *(_OWORD *)(v0 + 32) = v5;
  v8 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v6;
  *v6 = v0;
  v6[1] = sub_23BA9CB74;
  return v8(v0 + 16);
}

uint64_t sub_23BA9CB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 256) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA9CBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  void *v4;
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  id v8;
  void *v9;
  uint64_t v10;

  v9 = *(void **)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  v3 = 4.0;
  if (*(_BYTE *)(v1 + 64))
    v3 = 10.0;
  v4 = (void *)sub_23BB017E8(v3, v3, v3, v3);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 144) = v2;
  sub_23BA9DF68(v1);
  sub_23BA9C324();
  v8 = v4;
  sub_23BB88A20();
  swift_release();
  *(_QWORD *)(v0 + 152) = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v5;
  *v5 = 0x8000000000000000;
  sub_23BAB00C0((uint64_t)v4, v1, isUniquelyReferenced_nonNull_native);
  *v5 = v10;
  swift_bridgeObjectRelease();
  sub_23BA9DFB0(v1);
  swift_endAccess();
  *(_QWORD *)(v0 + 168) = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA9CDB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 160) = v5;
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v6 = v5 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  v7 = v1;
  v8 = v1;
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABD4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 248);
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = v11;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 136) = v15;
    sub_23BB8ACB8();
    *v13 = v15;

    _os_log_impl(&dword_23B979000, v9, v10, "SessionLive: didReceive error: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v12, -1, -1);

  }
  else
  {
    v16 = *(void **)(v0 + 248);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DeviceImageProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage, &qword_256A5F8F0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DeviceImageProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage, &qword_256A5F8F0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BA9D0F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  return sub_23BA9C3B0(v3, a1);
}

uint64_t sub_23BA9D18C(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A5F8F0);
}

void (*sub_23BA9D228(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DeviceImageProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23BA9D274@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23BA9C324();
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA9D30C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BA9D36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s12FindMyUICore19DeviceImageProviderC28didAddNewUniqueSubscriptions05addedK08wasEmptyyShyAC12SubscriptionVG_SbtF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char v55;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 56);
  v38 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v11 = v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider___observationRegistrar;
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__valuePublishers);
  v43 = a1;
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v14 = 0;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v41 = MEMORY[0x24BEE4AE0] + 8;
  v40 = v11;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v19 >= v39)
      return swift_release();
    v20 = *(_QWORD *)(v38 + 8 * v19);
    ++v14;
    if (!v20)
    {
      v14 = v19 + 1;
      if (v19 + 1 >= v39)
        return swift_release();
      v20 = *(_QWORD *)(v38 + 8 * v14);
      if (!v20)
      {
        v14 = v19 + 2;
        if (v19 + 2 >= v39)
          return swift_release();
        v20 = *(_QWORD *)(v38 + 8 * v14);
        if (!v20)
          break;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v43 + 48) + 72 * v18;
    v51 = *(_OWORD *)v22;
    v24 = *(_OWORD *)(v22 + 32);
    v23 = *(_OWORD *)(v22 + 48);
    v25 = *(_OWORD *)(v22 + 16);
    v55 = *(_BYTE *)(v22 + 64);
    v54 = v23;
    v52 = v25;
    v53 = v24;
    swift_getKeyPath();
    v46 = v2;
    sub_23BA9DF68((uint64_t)&v51);
    sub_23BA9DF68((uint64_t)&v51);
    sub_23BA9C324();
    sub_23BB88A20();
    swift_release();
    v26 = *(_QWORD *)(*v12 + 16);
    v44 = v14;
    if (v26)
    {
      swift_bridgeObjectRetain();
      sub_23B984960((double *)&v51);
      if ((v27 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        sub_23BA9DFB0((uint64_t)&v51);
        sub_23BB8AA78();
        swift_release();
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
    }
    sub_23BA9DFB0((uint64_t)&v51);
LABEL_28:
    v28 = sub_23BB8AA18();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v42, 1, 1, v28);
    sub_23BB8A9F4();
    sub_23BA9DF68((uint64_t)&v51);
    swift_retain();
    v31 = sub_23BB8A9E8();
    v32 = swift_allocObject();
    v33 = v51;
    *(_OWORD *)(v32 + 56) = v52;
    *(_OWORD *)(v32 + 72) = v53;
    *(_OWORD *)(v32 + 88) = v54;
    *(_QWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 24) = MEMORY[0x24BEE6930];
    *(_QWORD *)(v32 + 32) = v2;
    *(_BYTE *)(v32 + 104) = v55;
    *(_OWORD *)(v32 + 40) = v33;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28) == 1)
    {
      sub_23B989D60(v30, (uint64_t *)&unk_256A613D0);
    }
    else
    {
      sub_23BB8AA0C();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
    }
    if (*(_QWORD *)(v32 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v34 = sub_23BB8A988();
      v36 = v35;
      swift_unknownObjectRelease();
    }
    else
    {
      v34 = 0;
      v36 = 0;
    }
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = &unk_256A5FA48;
    *(_QWORD *)(v37 + 24) = v32;
    if (v36 | v34)
    {
      v47 = 0;
      v48 = 0;
      v49 = v34;
      v50 = v36;
    }
    v15 = swift_task_create();
    swift_getKeyPath();
    v46 = v2;
    sub_23BB88A20();
    swift_release();
    v46 = v2;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = *v12;
    *v12 = 0x8000000000000000;
    sub_23BAAEDCC(v15, (uint64_t)&v51, isUniquelyReferenced_nonNull_native);
    *v12 = v45;
    swift_bridgeObjectRelease();
    sub_23BA9DFB0((uint64_t)&v51);
    swift_endAccess();
    v46 = v2;
    swift_getKeyPath();
    sub_23BB88A2C();
    result = swift_release();
    v14 = v44;
  }
  v21 = v19 + 3;
  if (v21 >= v39)
    return swift_release();
  v20 = *(_QWORD *)(v38 + 8 * v21);
  if (v20)
  {
    v14 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v14 >= v39)
      return swift_release();
    v20 = *(_QWORD *)(v38 + 8 * v14);
    ++v21;
    if (v20)
      goto LABEL_21;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t _s12FindMyUICore19DeviceImageProviderC28didRemoveUniqueSubscriptions07removedJ07isEmptyyShyAC12SubscriptionVG_SbtF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t result;
  int64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64_t v18;
  char v19;
  void *v20;
  unint64_t v21;
  char v22;
  char v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v29;
  _OWORD v30[4];
  char v31;

  v26 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__valuePublishers);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v7 = 0;
  v27 = (unint64_t)(v2 + 63) >> 6;
  v8 = &unk_23BB92AE8;
  while (1)
  {
    if (v4)
    {
      v9 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_22;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return swift_release();
    v12 = *(_QWORD *)(v26 + 8 * v11);
    ++v7;
    if (!v12)
    {
      v7 = v11 + 1;
      if (v11 + 1 >= v27)
        return swift_release();
      v12 = *(_QWORD *)(v26 + 8 * v7);
      if (!v12)
      {
        v7 = v11 + 2;
        if (v11 + 2 >= v27)
          return swift_release();
        v12 = *(_QWORD *)(v26 + 8 * v7);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v4 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_22:
    v14 = *(_QWORD *)(a1 + 48) + 72 * v10;
    v30[0] = *(_OWORD *)v14;
    v16 = *(_OWORD *)(v14 + 32);
    v15 = *(_OWORD *)(v14 + 48);
    v17 = *(_OWORD *)(v14 + 16);
    v31 = *(_BYTE *)(v14 + 64);
    v30[2] = v16;
    v30[3] = v15;
    v30[1] = v17;
    swift_getKeyPath();
    sub_23BA9DF68((uint64_t)v30);
    sub_23BA9DF68((uint64_t)v30);
    sub_23BA9C324();
    sub_23BB88A20();
    swift_release();
    if (*(_QWORD *)(*v5 + 16))
    {
      swift_bridgeObjectRetain();
      sub_23B984960((double *)v30);
      v18 = v7;
      if ((v19 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        sub_23BA9DFB0((uint64_t)v30);
        sub_23BB8AA78();
        swift_release();
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v7;
    }
    sub_23BA9DFB0((uint64_t)v30);
LABEL_28:
    swift_getKeyPath();
    sub_23BB88A20();
    swift_release();
    v20 = v8;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v21 = sub_23B984960((double *)v30);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25 = *v5;
      v29 = *v5;
      *v5 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B987458();
        v25 = v29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B985A7C(v21, v25);
      *v5 = v25;
      swift_bridgeObjectRelease();
      sub_23BA9DFB0((uint64_t)v30);
      swift_release();
    }
    else
    {
      sub_23BA9DFB0((uint64_t)v30);
    }
    v8 = v20;
    v7 = v18;
    swift_endAccess();
    swift_getKeyPath();
    sub_23BB88A2C();
    result = swift_release();
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return swift_release();
  v12 = *(_QWORD *)(v26 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v27)
      return swift_release();
    v12 = *(_QWORD *)(v26 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_23BA9DDBC()
{
  unint64_t result;

  result = qword_256A5F900;
  if (!qword_256A5F900)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DeviceImageProvider.Subscription, &type metadata for DeviceImageProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A5F900);
  }
  return result;
}

unint64_t sub_23BA9DE00(uint64_t a1)
{
  unint64_t result;

  result = sub_23BA9C324();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23BA9DE24()
{
  return type metadata accessor for DeviceImageProvider();
}

void sub_23BA9DE2C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BA9DEE8(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DeviceImageProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceImageProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_23BA9DEE8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A5F9A0)
  {
    v2 = sub_23BA9DDBC();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for DeviceImageProvider.Subscription, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A5F9A0);
  }
}

uint64_t sub_23BA9DF40@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BA9C4AC(a1, &OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__valuePublishers, a2);
}

uint64_t sub_23BA9DF68(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23BA9DFB0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23BA9DFF8()
{
  uint64_t v0;

  return sub_23B97F948(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__valuePublishers);
}

uint64_t sub_23BA9E018()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BA9E05C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23BA9CA5C(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_23BA9E0D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA9E0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA9E144()
{
  uint64_t v0;

  return sub_23B97F948(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data);
}

uint64_t sub_23BA9E164()
{
  return sub_23BA9C3F8();
}

uint64_t sub_23BA9E178@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  __int128 v13;
  _BYTE v14[8];
  id v15;
  __int128 v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FA60);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v16 = *v1;
  v13 = *(__int128 *)((char *)v1 + 24);
  sub_23B990D24((uint64_t)&v13, (uint64_t)&v15, &qword_256A5FA58);
  sub_23B990D24((uint64_t)&v13 + 8, (uint64_t)v14, &qword_256A5FA68);
  v7 = swift_allocObject();
  v8 = v1[1];
  *(_OWORD *)(v7 + 16) = *v1;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v1 + 4);
  v9 = (uint64_t *)&v6[*(int *)(v3 + 60)];
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  swift_storeEnumTagMultiPayload();
  v10 = &v6[*(int *)(v3 + 64)];
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[8] = 0;
  *(_QWORD *)v6 = sub_23BA9EFBC;
  *((_QWORD *)v6 + 1) = v7;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 1;
  *((_QWORD *)v6 + 2) = sub_23BA9EFFC;
  *((_QWORD *)v6 + 3) = v11;
  v6[32] = -127;
  sub_23B990D24((uint64_t)v6, a1, &qword_256A5FA60);
  sub_23B9A14EC((uint64_t)&v16);
  sub_23B9C3134(&v15);
  return sub_23BA9F008((uint64_t)v14);
}

double sub_23BA9E304@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t KeyPath;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE __src[336];
  _BYTE v36[352];

  if (qword_256A58CE0 != -1)
    swift_once();
  v3 = qword_256A5FA50;
  sub_23BA9E4BC(v1, (uint64_t)__src);
  v36[344] = 1;
  memcpy(&v36[7], __src, 0x150uLL);
  v4 = sub_23BB899BC();
  v5 = sub_23BB89C80();
  KeyPath = swift_getKeyPath();
  v7 = sub_23BB89BF0();
  sub_23BB892A8();
  v33 = v9;
  v34 = v8;
  v31 = v11;
  v32 = v10;
  v12 = sub_23BB89BCC();
  sub_23BB892A8();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = sub_23BB89BE4();
  sub_23BB892A8();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  memcpy((void *)(a1 + 17), v36, 0x157uLL);
  *(_DWORD *)(a1 + 360) = v4;
  *(_QWORD *)(a1 + 368) = KeyPath;
  *(_QWORD *)(a1 + 376) = v5;
  *(_BYTE *)(a1 + 384) = v7;
  *(_QWORD *)(a1 + 392) = v34;
  *(_QWORD *)(a1 + 400) = v33;
  result = v31;
  *(_QWORD *)(a1 + 408) = v32;
  *(double *)(a1 + 416) = v31;
  *(_BYTE *)(a1 + 424) = 0;
  *(_BYTE *)(a1 + 432) = v12;
  *(_QWORD *)(a1 + 440) = v14;
  *(_QWORD *)(a1 + 448) = v16;
  *(_QWORD *)(a1 + 456) = v18;
  *(_QWORD *)(a1 + 464) = v20;
  *(_BYTE *)(a1 + 472) = 0;
  *(_BYTE *)(a1 + 480) = v21;
  *(_QWORD *)(a1 + 488) = v23;
  *(_QWORD *)(a1 + 496) = v25;
  *(_QWORD *)(a1 + 504) = v27;
  *(_QWORD *)(a1 + 512) = v29;
  *(_BYTE *)(a1 + 520) = 0;
  return result;
}

uint64_t sub_23BA9E4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;

  v3 = *(_BYTE *)(a1 + 16);
  if ((v3 & 1) != 0)
  {
    v46 = 0;
    v47 = 0;
    v53 = 0;
    v54 = 0;
    v42 = 0;
    v43 = 0;
    v51 = 0;
    v52 = 0;
    v49 = 0;
    v50 = 0;
    v48 = 0;
    v44 = 1;
    v45 = 0;
  }
  else
  {
    sub_23BA9E8DC((uint64_t)&v63);
    v46 = v65;
    v47 = v64;
    v44 = v63;
    v45 = v66;
    v53 = v68;
    v54 = v67;
    v42 = v70;
    v43 = v69;
    v51 = v72;
    v52 = v71;
    v49 = v74;
    v50 = v73;
    v48 = v75;
  }
  v4 = sub_23BB8A2E0();
  v41 = v5;
  sub_23BA9EAB4((uint64_t)&v63);
  v7 = v63;
  v6 = v64;
  v8 = v66;
  v39 = v68;
  v40 = v67;
  v37 = v71;
  v38 = v70;
  v35 = v73;
  v36 = v72;
  v34 = v74;
  v33 = v76;
  v9 = v65;
  v81 = v65;
  v10 = v69;
  v80 = v69;
  v11 = v75;
  v79 = v75;
  if ((v3 & 1) != 0)
  {
    sub_23BA9E8DC((uint64_t)&v63);
    v24 = v63;
    v12 = v64;
    v13 = v65;
    v14 = v66;
    v15 = v67;
    v16 = v68;
    v17 = v69;
    v18 = v70;
    v19 = v71;
    v20 = v72;
    v21 = v73;
    v22 = v74;
    v23 = v75;
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 1;
  }
  v32 = v24;
  *(_QWORD *)&v55 = v4;
  *((_QWORD *)&v55 + 1) = v41;
  *(_QWORD *)&v56 = v7;
  *((_QWORD *)&v56 + 1) = v6;
  LOBYTE(v57) = v9;
  *((_QWORD *)&v57 + 1) = v8;
  *(_QWORD *)&v58 = v40;
  *((_QWORD *)&v58 + 1) = v39;
  LOBYTE(v59) = v10;
  *((_QWORD *)&v59 + 1) = v38;
  *(_QWORD *)&v60 = v37;
  *((_QWORD *)&v60 + 1) = v36;
  *(_QWORD *)&v61 = v35;
  *((_QWORD *)&v61 + 1) = v34;
  LOBYTE(v62) = v11;
  *((_QWORD *)&v62 + 1) = v33;
  v25 = v55;
  v26 = v56;
  v27 = v57;
  *(_OWORD *)(a2 + 152) = v58;
  *(_OWORD *)(a2 + 136) = v27;
  *(_OWORD *)(a2 + 120) = v26;
  *(_OWORD *)(a2 + 104) = v25;
  v28 = v59;
  v29 = v60;
  v30 = v61;
  *(_OWORD *)(a2 + 216) = v62;
  *(_OWORD *)(a2 + 200) = v30;
  *(_OWORD *)(a2 + 184) = v29;
  *(_OWORD *)(a2 + 168) = v28;
  *(_QWORD *)a2 = v44;
  *(_QWORD *)(a2 + 8) = v47;
  *(_QWORD *)(a2 + 16) = v46;
  *(_QWORD *)(a2 + 24) = v45;
  *(_QWORD *)(a2 + 32) = v54;
  *(_QWORD *)(a2 + 40) = v53;
  *(_QWORD *)(a2 + 48) = v43;
  *(_QWORD *)(a2 + 56) = v42;
  *(_QWORD *)(a2 + 64) = v52;
  *(_QWORD *)(a2 + 72) = v51;
  *(_QWORD *)(a2 + 80) = v50;
  *(_QWORD *)(a2 + 88) = v49;
  *(_QWORD *)(a2 + 96) = v48;
  *(_QWORD *)(a2 + 232) = v24;
  *(_QWORD *)(a2 + 240) = v12;
  *(_QWORD *)(a2 + 248) = v13;
  *(_QWORD *)(a2 + 256) = v14;
  *(_QWORD *)(a2 + 264) = v15;
  *(_QWORD *)(a2 + 272) = v16;
  *(_QWORD *)(a2 + 280) = v17;
  *(_QWORD *)(a2 + 288) = v18;
  *(_QWORD *)(a2 + 296) = v19;
  *(_QWORD *)(a2 + 304) = v20;
  *(_QWORD *)(a2 + 312) = v21;
  *(_QWORD *)(a2 + 320) = v22;
  *(_QWORD *)(a2 + 328) = v23;
  sub_23BA9F038(v44);
  sub_23BA9F08C((uint64_t)&v55);
  sub_23BA9F038(v32);
  sub_23BA9F118(v32);
  v63 = v4;
  v64 = v41;
  v65 = v7;
  v66 = v6;
  LOBYTE(v67) = v9;
  v68 = v8;
  v69 = v40;
  v70 = v39;
  LOBYTE(v71) = v10;
  v72 = v38;
  v73 = v37;
  v74 = v36;
  v75 = v35;
  v76 = v34;
  v77 = v11;
  v78 = v33;
  sub_23BA9F16C((uint64_t)&v63);
  return sub_23BA9F118(v44);
}

void sub_23BA9E8DC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double (*v8)();
  double (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  double (*v21)();
  __int128 v22;
  uint64_t v23;
  unsigned __int8 v24;
  __int128 v25;

  v3 = sub_23BB8A070();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_OWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FA70);
  sub_23BB8A0D0();
  v8 = v21;
  if (v21)
  {
    v9 = v21;
    sub_23BB8A04C();
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDF3FD0], v3);
    v10 = sub_23BB8A094();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_23BB8A2F8();
    sub_23BB8938C();
    v11 = v22;
    v12 = BYTE8(v22);
    v13 = v23;
    v14 = v24;
    v20 = v25;
    v15 = sub_23BB89BA8();
    if (qword_256A58CE0 != -1)
      swift_once();
    v16 = qword_256A5FA50;

    v17 = v15;
    v8 = sub_23BA9EC84;
    v18 = 1;
    v19 = v20;
  }
  else
  {
    v10 = 0;
    v18 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v17 = 0;
    v16 = 0;
    v19 = 0uLL;
  }
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 56) = v19;
  *(_QWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = 0;
}

uint64_t sub_23BA9EAB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;

  sub_23BB897D0();
  v2 = sub_23BB89D1C();
  v17 = v3;
  v18 = v2;
  v5 = v4;
  v7 = v6;
  KeyPath = swift_getKeyPath();
  if (qword_256A58CE0 != -1)
    swift_once();
  v15 = qword_256A5FA50;
  sub_23B9967E0();
  swift_bridgeObjectRetain();
  v8 = sub_23BB89D28();
  v10 = v9;
  v12 = v11 & 1;
  *(_QWORD *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v17;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = KeyPath;
  *(_QWORD *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = sub_23BA9F2A4;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 96) = v11 & 1;
  *(_QWORD *)(a1 + 104) = v13;
  sub_23B996E5C(v18, v17, v5 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B996E5C(v8, v10, v12);
  swift_bridgeObjectRetain();
  sub_23B9967D0(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_23B9967D0(v18, v17, v5 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_23BA9EC84()
{
  double v0;

  sub_23BB89470();
  return v0 * 0.5;
}

uint64_t sub_23BA9ECB0()
{
  uint64_t result;

  sub_23BA9F200();
  result = sub_23BB89794();
  qword_256A5FA50 = result;
  return result;
}

void sub_23BA9ECDC(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;
  id v11;
  __int128 v12;

  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v10 = (void *)sub_23BB8A784();
  v11 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v10, v9);

  if (v11)
  {
    objc_msgSend(v11, sel__applicationIconImageForFormat_precomposed_, 16, 1);

    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FA58);
    sub_23BB8A0C4();
    *(_QWORD *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a2;
    *(_BYTE *)(a4 + 16) = a3 & 1;
    *(_OWORD *)(a4 + 24) = v12;
  }
  else
  {
    __break(1u);
  }
}

uint64_t destroy for StatusMessageView(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for StatusMessageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StatusMessageView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for StatusMessageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StatusMessageView()
{
  return &type metadata for StatusMessageView;
}

uint64_t sub_23BA9EF78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA9EF88()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

double sub_23BA9EFBC@<D0>(uint64_t a1@<X8>)
{
  return sub_23BA9E304(a1);
}

uint64_t sub_23BA9EFEC()
{
  return swift_deallocObject();
}

void sub_23BA9EFFC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

uint64_t sub_23BA9F008(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_23BA9F038(uint64_t result)
{
  if (result != 1)
    return sub_23BA9F060(result);
  return result;
}

uint64_t sub_23BA9F060(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23BA9F08C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_23B996E5C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23B996E5C(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23BA9F118(uint64_t result)
{
  if (result != 1)
    return sub_23BA9F140(result);
  return result;
}

uint64_t sub_23BA9F140(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BA9F16C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  sub_23B9967D0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B9967D0(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23BA9F200()
{
  unint64_t result;

  result = qword_256A5FA78;
  if (!qword_256A5FA78)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB92C4C, &_s26CenterOfFirstLineAlignmentON);
    atomic_store(result, (unint64_t *)&qword_256A5FA78);
  }
  return result;
}

ValueMetadata *_s26CenterOfFirstLineAlignmentOMa()
{
  return &_s26CenterOfFirstLineAlignmentON;
}

unint64_t sub_23BA9F258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5FA80;
  if (!qword_256A5FA80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5FA60);
    result = MEMORY[0x24260D8DC](&unk_23BB93810, v1);
    atomic_store(result, (unint64_t *)&qword_256A5FA80);
  }
  return result;
}

uint64_t RelativeDateText.init(forcingPastDate:displayStyle:capitalizationContext:localizerContainer:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t MyRelativeDate;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a4;
  v36 = a5;
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v35 - v17;
  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  MEMORY[0x24BDAC7A8](MyRelativeDate, v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v35 - v25;
  v27 = *a2;
  sub_23BB88978();
  sub_23BA9F904(a1, (uint64_t)v22);
  if ((sub_23BB888E8() & 1) != 0)
    v28 = v22;
  else
    v28 = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v28, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v22, v14, v10);
  sub_23BA9F948((uint64_t)v22, (uint64_t)v26);
  sub_23BA9F98C(a1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  sub_23BA9F948((uint64_t)v26, a6);
  v29 = (int *)type metadata accessor for RelativeDateText();
  *(_BYTE *)(a6 + v29[5]) = v27;
  v30 = a6 + v29[6];
  v31 = sub_23BB8881C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a3, v31);
  v33 = (_QWORD *)(a6 + v29[7]);
  v34 = v36;
  *v33 = v35;
  v33[1] = v34;
  return result;
}

uint64_t RelativeDateText.init(relativeDate:displayStyle:capitalizationContext:localizerContainer:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v10 = *a2;
  sub_23BA9F948(a1, a6);
  v11 = (int *)type metadata accessor for RelativeDateText();
  *(_BYTE *)(a6 + v11[5]) = v10;
  v12 = a6 + v11[6];
  v13 = sub_23BB8881C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a3, v13);
  v15 = (_QWORD *)(a6 + v11[7]);
  *v15 = a4;
  v15[1] = a5;
  return result;
}

double RelativeDateText.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  double result;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v3 = *(uint64_t (**)(void))(v1 + *(int *)(type metadata accessor for RelativeDateText() + 28));
  if (v3)
  {
    swift_retain();
    v4 = sub_23BA9F670();
    v6 = v5;
    v8 = v7 & 1;
    v9 = v3();
    v11 = v10;
    v16 = a1;
    v13 = v12 & 1;
    sub_23B9967D0(v4, v6, v8);
    swift_bridgeObjectRelease();
    sub_23B996E5C(v9, v11, v13);
    swift_bridgeObjectRetain();
    sub_23BB89944();
    sub_23B9BD73C((uint64_t)v3);
    v14 = v13;
    a1 = v16;
    sub_23B9967D0(v9, v11, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BA9F670();
    sub_23BB89944();
  }
  result = *(double *)&v17;
  *(_OWORD *)a1 = v17;
  *(_OWORD *)(a1 + 16) = v18;
  *(_BYTE *)(a1 + 32) = v19;
  return result;
}

uint64_t sub_23BA9F670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t MyRelativeDateFormatStyle;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v1 = v0;
  v2 = sub_23BB889FC();
  MEMORY[0x24BDAC7A8](v2, v3);
  v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB889E4();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23BB8881C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB88984();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
  MEMORY[0x24BDAC7A8](MyRelativeDateFormatStyle, v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FB20);
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23BB89458();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v1, v14);
  v24 = type metadata accessor for RelativeDateText();
  v25 = *(int *)(v24 + 24);
  v53 = *(_BYTE *)(v1 + *(int *)(v24 + 20));
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v1 + v25, v9);
  v26 = v1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v28 = *(_QWORD *)(v26 + 16);
  v27 = *(_QWORD *)(v26 + 24);
  v29 = *(_QWORD *)(v26 + 32);
  v30 = *(_QWORD *)(v26 + 40);
  v31 = *(_QWORD *)(v26 + 48);
  v32 = *(_QWORD *)(v26 + 56);
  v33 = *(_QWORD *)(v26 + 64);
  v34 = *(_QWORD *)(v26 + 72);
  v35 = *(_QWORD *)(v26 + 80);
  v36 = *(_QWORD *)(v26 + 88);
  v42 = *(_OWORD *)v26;
  v43 = v28;
  v44 = v27;
  v45 = v29;
  v46 = v30;
  v47 = v31;
  v48 = v32;
  v49 = v33;
  v50 = v34;
  v51 = v35;
  v52 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB889D8();
  v37 = (uint64_t)v41;
  sub_23BB889F0();
  FindMyRelativeDateFormatStyle.init(anchor:displayStyle:capitalizationContext:recencyKey:locale:calendar:)((uint64_t)v18, &v53, (uint64_t)v13, &v42, (uint64_t)v8, v37, (uint64_t)v21);
  sub_23BAA036C();
  return sub_23BB89D10();
}

uint64_t sub_23BA9F904(uint64_t a1, uint64_t a2)
{
  uint64_t MyRelativeDate;

  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(MyRelativeDate - 8) + 16))(a2, a1, MyRelativeDate);
  return a2;
}

uint64_t sub_23BA9F948(uint64_t a1, uint64_t a2)
{
  uint64_t MyRelativeDate;

  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(MyRelativeDate - 8) + 32))(a2, a1, MyRelativeDate);
  return a2;
}

uint64_t sub_23BA9F98C(uint64_t a1)
{
  uint64_t MyRelativeDate;

  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MyRelativeDate - 8) + 8))(a1, MyRelativeDate);
  return a1;
}

uint64_t type metadata accessor for RelativeDateText()
{
  uint64_t result;

  result = qword_256A5FAE0;
  if (!qword_256A5FAE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA9FA04()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for RelativeDateText(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BB88984();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v11 = *((_QWORD *)v10 + 3);
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 3) = v11;
    v12 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v12;
    v13 = *((_QWORD *)v10 + 7);
    *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
    *((_QWORD *)v9 + 7) = v13;
    v14 = *((_QWORD *)v10 + 9);
    *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
    *((_QWORD *)v9 + 9) = v14;
    v15 = *((_QWORD *)v10 + 11);
    *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
    *((_QWORD *)v9 + 11) = v15;
    v16 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v26 = (char *)a1 + v16;
    v25 = (char *)a2 + v16;
    v17 = sub_23BB8881C();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v26, v25, v17);
    v19 = a3[7];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    if (*v21)
    {
      v22 = v21[1];
      *v20 = *v21;
      v20[1] = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
  }
  return a1;
}

uint64_t destroy for RelativeDateText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for FindMyRelativeDate();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23BB8881C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for RelativeDateText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  v11 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  v12 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = v12;
  v13 = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = v13;
  v14 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 88) = v14;
  v15 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v24 = a1 + v15;
  v25 = a3;
  v16 = a2 + v15;
  v17 = sub_23BB8881C();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v24, v16, v17);
  v19 = *(int *)(v25 + 28);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  if (*v21)
  {
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  return a1;
}

uint64_t assignWithCopy for RelativeDateText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  v8[2] = *(_QWORD *)(a2 + v7 + 16);
  v8[3] = *(_QWORD *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  v8[7] = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[8] = v9[8];
  v8[9] = v9[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[10] = v9[10];
  v8[11] = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14);
  v18 = *v16;
  if (!v17)
  {
    if (v18)
    {
      v20 = v16[1];
      *v15 = v18;
      v15[1] = v20;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    return a1;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  v19 = v16[1];
  *v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for RelativeDateText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  v12 = v9[1];
  *v8 = *v9;
  v8[1] = v12;
  v13 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  if (*v19)
  {
    v21 = v19[1];
    *v18 = v20;
    v18[1] = v21;
  }
  else
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  return a1;
}

uint64_t assignWithTake for RelativeDateText(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = v9[5];
  *(_QWORD *)(v8 + 32) = v9[4];
  *(_QWORD *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  v12 = v9[7];
  *(_QWORD *)(v8 + 48) = v9[6];
  *(_QWORD *)(v8 + 56) = v12;
  swift_bridgeObjectRelease();
  v13 = v9[9];
  *(_QWORD *)(v8 + 64) = v9[8];
  *(_QWORD *)(v8 + 72) = v13;
  swift_bridgeObjectRelease();
  v14 = v9[11];
  *(_QWORD *)(v8 + 80) = v9[10];
  *(_QWORD *)(v8 + 88) = v14;
  swift_bridgeObjectRelease();
  v15 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19);
  v23 = *v21;
  if (!v22)
  {
    if (v23)
    {
      v25 = v21[1];
      *v20 = v23;
      v20[1] = v25;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (!v23)
  {
    swift_release();
    goto LABEL_7;
  }
  v24 = v21[1];
  *v20 = v23;
  v20[1] = v24;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RelativeDateText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAA0174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t MyRelativeDate;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  v7 = *(_QWORD *)(MyRelativeDate - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = MyRelativeDate;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23BB8881C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for RelativeDateText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAA0234(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t MyRelativeDate;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  v9 = *(_QWORD *)(MyRelativeDate - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = MyRelativeDate;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23BB8881C();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

uint64_t sub_23BAA02D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FindMyRelativeDate();
  if (v1 <= 0x3F)
  {
    result = sub_23BB8881C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_23BAA036C()
{
  unint64_t result;
  uint64_t MyRelativeDateFormatStyle;

  result = qword_256A5FB28;
  if (!qword_256A5FB28)
  {
    MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDateFormatStyle, MyRelativeDateFormatStyle);
    atomic_store(result, (unint64_t *)&qword_256A5FB28);
  }
  return result;
}

id sub_23BAA03B4()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for UIPeopleModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_256A5FB30 = 0x656C706F65504955;
  *(_QWORD *)algn_256A5FB38 = 0xE800000000000000;
  qword_256A5FB40 = (uint64_t)result;
  return result;
}

uint64_t static FindMyLocalizationTable.uiPeople.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  void *v3;
  id v4;

  if (qword_256A58CE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256A5FB38;
  v3 = (void *)qword_256A5FB40;
  *a1 = qword_256A5FB30;
  a1[1] = v2;
  a1[2] = v3;
  v4 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t PeopleRelationshipsProvider.RelationshipState.loadedState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v2, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23BAA0578((uint64_t)v7, a1);
    v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  else
  {
    v11 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
}

uint64_t type metadata accessor for PeopleRelationshipsProvider.RelationshipState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5FBD0);
}

uint64_t sub_23BAA0578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5FC60);
}

uint64_t PeopleRelationshipsProvider.RelationshipState.FollowerState.isActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v0, (uint64_t)v4, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = 0;
  if ((EnumCaseMultiPayload - 1) < 2)
    goto LABEL_4;
  if (!EnumCaseMultiPayload)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
    sub_23B989D60((uint64_t)&v4[*(int *)(v8 + 48)], (uint64_t *)&unk_256A5E6B0);
    v7 = 1;
LABEL_4:
    sub_23B989D60((uint64_t)v4, (uint64_t *)&unk_256A5E6B0);
  }
  return v7;
}

uint64_t type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5FE58);
}

uint64_t PeopleRelationshipsProvider.RelationshipState.FollowingState.isActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v0, (uint64_t)v4, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v7 = 0;
    v8 = 0;
    if (EnumCaseMultiPayload != 1)
      return v8;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
    sub_23B989D60((uint64_t)&v4[*(int *)(v9 + 48)], (uint64_t *)&unk_256A5E6B0);
    v7 = 1;
  }
  sub_23B989D60((uint64_t)v4, (uint64_t *)&unk_256A5E6B0);
  return v7;
}

uint64_t type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5FF00);
}

uint64_t PeopleRelationshipsProvider.Subscription.Identifier.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(result + 8);
  v3 = *(_BYTE *)(result + 16);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v3;
  return result;
}

uint64_t PeopleRelationshipsProvider.Subscription.Identifier.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

BOOL static PeopleRelationshipsProvider.Subscription.Identifier.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  return (v4 || (sub_23BB8B1A4() & 1) != 0) && v2 == v3;
}

uint64_t PeopleRelationshipsProvider.Subscription.Identifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  return swift_bridgeObjectRelease();
}

uint64_t PeopleRelationshipsProvider.Subscription.Identifier.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

BOOL sub_23BAA08DC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  return (v4 || (sub_23BB8B1A4() & 1) != 0) && v2 == v3;
}

uint64_t sub_23BAA093C()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BAA09AC()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B24C();
}

uint64_t sub_23BAA0A04()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t PeopleRelationshipsProvider.Subscription.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  return sub_23BB8B24C();
}

uint64_t PeopleRelationshipsProvider.Subscription.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23BB8B240();
  if (v1)
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BAA0B78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23BB8B240();
  if (v1)
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BAA0C00()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  return sub_23BB8B24C();
}

uint64_t sub_23BAA0C7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23BB8B240();
  if (v1)
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t PeopleRelationshipsProvider.RelationshipState.isLoading.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v1 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (unsigned __int8 *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v0, (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *v4;
  sub_23B989D9C((uint64_t)v4, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  return 0;
}

uint64_t PeopleRelationshipsProvider.RelationshipState.LoadedState.followerState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return sub_23B989CE8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
}

uint64_t PeopleRelationshipsProvider.RelationshipState.LoadedState.followerState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return sub_23BA44B18(a1, v1 + *(int *)(v3 + 20), type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
}

uint64_t (*PeopleRelationshipsProvider.RelationshipState.LoadedState.followerState.modify())(_QWORD)
{
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return nullsub_1;
}

uint64_t PeopleRelationshipsProvider.RelationshipState.LoadedState.followingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return sub_23B989CE8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
}

uint64_t PeopleRelationshipsProvider.RelationshipState.LoadedState.followingState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return sub_23BA44B18(a1, v1 + *(int *)(v3 + 24), type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
}

uint64_t (*PeopleRelationshipsProvider.RelationshipState.LoadedState.followingState.modify())(_QWORD)
{
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return nullsub_1;
}

uint64_t PeopleRelationshipsProvider.RelationshipState.LoadedState.favoriteOrder.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0)
                            + 28));
}

uint64_t PeopleRelationshipsProvider.RelationshipState.LoadedState.favoriteOrder.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v6 = v2 + *(int *)(result + 28);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PeopleRelationshipsProvider.RelationshipState.LoadedState.favoriteOrder.modify())(_QWORD)
{
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  return nullsub_1;
}

uint64_t _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V10identifierAC12SubscriptionO10IdentifierVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.friendshipType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

uint64_t PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.favoriteOrder.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.expiryDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + *(int *)(type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0) + 28);
  return sub_23BA2F0B0(v3, a1);
}

uint64_t PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + *(int *)(type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0) + 32);
  return sub_23BA2F0B0(v3, a1);
}

BOOL static PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t _s12FindMyUICore27PeopleRelationshipsProviderC12SubscriptionO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  BOOL v7;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (v3)
  {
    if (v4)
    {
      v5 = *(unsigned __int8 *)(a1 + 16);
      v6 = *(unsigned __int8 *)(a2 + 16);
      v7 = *(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v4;
      if ((v7 || (sub_23BB8B1A4() & 1) != 0) && v5 == v6)
        return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0;
  char v23;
  uint64_t v25;

  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v25 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FF38);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v19[*(int *)(v20 + 48)];
  sub_23B989CE8(a1, (uint64_t)v19, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  sub_23B989CE8(a2, (uint64_t)v21, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23B989CE8((uint64_t)v19, (uint64_t)v15, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v23 = *v15 ^ *v21;
      sub_23B989D9C((uint64_t)v19, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 = v23 ^ 1;
      return MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 & 1;
    }
LABEL_7:
    sub_23B989D60((uint64_t)v19, &qword_256A5FF38);
    MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 = 0;
    return MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 & 1;
  }
  sub_23B989CE8((uint64_t)v19, (uint64_t)v11, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23B989D9C((uint64_t)v11, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    goto LABEL_7;
  }
  sub_23BAA0578((uint64_t)v21, (uint64_t)v7);
  MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 = _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0((uint64_t)v11, (uint64_t)v7);
  sub_23B989D9C((uint64_t)v7, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
  sub_23B989D9C((uint64_t)v11, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
  sub_23B989D9C((uint64_t)v19, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  return MyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0 & 1;
}

uint64_t _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO09FollowingH0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;

  v103 = (char *)a2;
  v3 = sub_23BB88984();
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v95 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDF0);
  MEMORY[0x24BDAC7A8](v102, v6);
  v98 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v101 = (char *)&v92 - v10;
  MEMORY[0x24BDAC7A8](v11, v12);
  v96 = (uint64_t)&v92 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v94 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v97 = (char *)&v92 - v19;
  MEMORY[0x24BDAC7A8](v20, v21);
  v93 = (uint64_t)&v92 - v22;
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v92 - v25;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v92 - v29;
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v92 - v33;
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)&v92 - v37;
  v39 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  MEMORY[0x24BDAC7A8](v39, v40);
  v42 = (char *)&v92 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43, v44);
  v46 = (char *)&v92 - v45;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FF40);
  MEMORY[0x24BDAC7A8](v47, v48);
  v51 = (char *)&v92 + *(int *)(v50 + 48) - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  v53 = (char *)&v92 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v52, (uint64_t)v53, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
  sub_23B989CE8((uint64_t)v103, (uint64_t)v51, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
  v54 = (uint64_t)v53;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v97 = v26;
    v98 = v30;
    v103 = v34;
    v62 = (uint64_t)v38;
    v63 = (uint64_t)v101;
    sub_23B989CE8(v54, (uint64_t)v46, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23B989D60((uint64_t)&v46[v64], (uint64_t *)&unk_256A5E6B0);
      goto LABEL_13;
    }
    v94 = v54;
    sub_23BA31BCC((uint64_t)v51, (uint64_t)v38);
    v67 = (uint64_t)v103;
    sub_23BA31BCC((uint64_t)&v46[v64], (uint64_t)v103);
    v68 = (uint64_t)&v51[v64];
    v69 = (uint64_t)v98;
    sub_23BA31BCC(v68, (uint64_t)v98);
    v70 = v96;
    v71 = v96 + *(int *)(v102 + 48);
    sub_23BA31BCC((uint64_t)v46, v96);
    sub_23BA2F0B0(v62, v71);
    v73 = v99;
    v72 = v100;
    v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
    if (v74(v70, 1, v100) == 1)
    {
      if (v74(v71, 1, v72) == 1)
      {
        sub_23B989D60(v70, (uint64_t *)&unk_256A5E6B0);
        goto LABEL_29;
      }
    }
    else
    {
      v76 = (uint64_t)v97;
      sub_23BA2F0B0(v70, (uint64_t)v97);
      if (v74(v71, 1, v72) != 1)
      {
        v80 = v95;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v95, v71, v72);
        sub_23BAA8D10();
        v81 = sub_23BB8A760();
        v82 = *(void (**)(char *, uint64_t))(v73 + 8);
        v83 = v80;
        v67 = (uint64_t)v103;
        v82(v83, v72);
        v82((char *)v76, v72);
        v69 = (uint64_t)v98;
        sub_23B989D60(v70, (uint64_t *)&unk_256A5E6B0);
        if ((v81 & 1) != 0)
        {
LABEL_29:
          v84 = v63;
          v85 = v63 + *(int *)(v102 + 48);
          sub_23BA2F0B0(v67, v63);
          sub_23BA2F0B0(v69, v85);
          if (v74(v63, 1, v72) == 1)
          {
            sub_23B989D60(v69, (uint64_t *)&unk_256A5E6B0);
            sub_23B989D60(v67, (uint64_t *)&unk_256A5E6B0);
            sub_23B989D60(v62, (uint64_t *)&unk_256A5E6B0);
            if (v74(v85, 1, v72) == 1)
            {
              sub_23B989D60(v63, (uint64_t *)&unk_256A5E6B0);
              v65 = v94;
              goto LABEL_11;
            }
          }
          else
          {
            v86 = v63;
            v87 = v93;
            sub_23BA2F0B0(v86, v93);
            if (v74(v85, 1, v72) != 1)
            {
              v88 = v69;
              v89 = v95;
              (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v95, v85, v72);
              sub_23BAA8D10();
              v90 = sub_23BB8A760();
              v91 = *(void (**)(char *, uint64_t))(v73 + 8);
              v91(v89, v72);
              sub_23B989D60(v88, (uint64_t *)&unk_256A5E6B0);
              sub_23B989D60((uint64_t)v103, (uint64_t *)&unk_256A5E6B0);
              sub_23B989D60(v62, (uint64_t *)&unk_256A5E6B0);
              v91((char *)v87, v72);
              sub_23B989D60(v84, (uint64_t *)&unk_256A5E6B0);
              v65 = v94;
              if ((v90 & 1) != 0)
                goto LABEL_11;
              goto LABEL_36;
            }
            sub_23B989D60(v69, (uint64_t *)&unk_256A5E6B0);
            sub_23B989D60((uint64_t)v103, (uint64_t *)&unk_256A5E6B0);
            sub_23B989D60(v62, (uint64_t *)&unk_256A5E6B0);
            (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v87, v72);
          }
          sub_23B989D60(v84, &qword_256A5DDF0);
          v65 = v94;
LABEL_36:
          sub_23B989D9C(v65, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
          return 0;
        }
LABEL_25:
        sub_23B989D60(v69, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v67, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v62, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D9C(v94, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
        return 0;
      }
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v76, v72);
    }
    sub_23B989D60(v70, &qword_256A5DDF0);
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      goto LABEL_10;
    goto LABEL_14;
  }
  sub_23B989CE8((uint64_t)v53, (uint64_t)v42, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v56 = (uint64_t)v97;
    sub_23BA31BCC((uint64_t)v51, (uint64_t)v97);
    v57 = (uint64_t)v98;
    v58 = (uint64_t)&v98[*(int *)(v102 + 48)];
    sub_23BA31BCC((uint64_t)v42, (uint64_t)v98);
    sub_23BA2F0B0(v56, v58);
    v59 = v99;
    v60 = v100;
    v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
    if (v61(v57, 1, v100) == 1)
    {
      sub_23B989D60(v56, (uint64_t *)&unk_256A5E6B0);
      if (v61(v58, 1, v60) == 1)
      {
        sub_23B989D60(v57, (uint64_t *)&unk_256A5E6B0);
LABEL_10:
        v65 = v54;
LABEL_11:
        sub_23B989D9C(v65, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
        return 1;
      }
    }
    else
    {
      v75 = v94;
      sub_23BA2F0B0(v57, v94);
      if (v61(v58, 1, v60) != 1)
      {
        v77 = v95;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v95, v58, v60);
        sub_23BAA8D10();
        v78 = sub_23BB8A760();
        v79 = *(void (**)(char *, uint64_t))(v59 + 8);
        v79(v77, v60);
        sub_23B989D60(v56, (uint64_t *)&unk_256A5E6B0);
        v79((char *)v75, v60);
        sub_23B989D60(v57, (uint64_t *)&unk_256A5E6B0);
        if ((v78 & 1) != 0)
          goto LABEL_10;
        goto LABEL_27;
      }
      sub_23B989D60(v56, (uint64_t *)&unk_256A5E6B0);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v75, v60);
    }
    sub_23B989D60(v57, &qword_256A5DDF0);
LABEL_27:
    sub_23B989D9C(v54, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    return 0;
  }
  v46 = v42;
LABEL_13:
  sub_23B989D60((uint64_t)v46, (uint64_t *)&unk_256A5E6B0);
LABEL_14:
  sub_23B989D60(v54, &qword_256A5FF40);
  return 0;
}

void _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO08FollowerH0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  _QWORD v54[12];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a2;
  v3 = sub_23BB88984();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v54[7] = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDF0);
  MEMORY[0x24BDAC7A8](v55, v6);
  v54[9] = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v54[8] = (char *)v54 - v10;
  MEMORY[0x24BDAC7A8](v11, v12);
  v54[1] = (char *)v54 - v13;
  MEMORY[0x24BDAC7A8](v14, v15);
  v54[5] = (char *)v54 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v54[4] = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  MEMORY[0x24BDAC7A8](v22, v23);
  v54[3] = (char *)v54 - v24;
  MEMORY[0x24BDAC7A8](v25, v26);
  MEMORY[0x24BDAC7A8](v27, v28);
  v54[0] = (char *)v54 - v29;
  MEMORY[0x24BDAC7A8](v30, v31);
  v54[2] = (char *)v54 - v32;
  MEMORY[0x24BDAC7A8](v33, v34);
  v54[10] = (char *)v54 - v35;
  MEMORY[0x24BDAC7A8](v36, v37);
  v54[11] = (char *)v54 - v38;
  MEMORY[0x24BDAC7A8](v39, v40);
  v54[6] = (char *)v54 - v41;
  v42 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  MEMORY[0x24BDAC7A8](v42, v43);
  MEMORY[0x24BDAC7A8](v44, v45);
  MEMORY[0x24BDAC7A8](v46, v47);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5FF48);
  MEMORY[0x24BDAC7A8](v48, v49);
  v52 = (char *)v54 + *(int *)(v51 + 48) - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(a1, (uint64_t)v54 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  sub_23B989CE8(v58, (uint64_t)v52, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  v53 = (char *)sub_23BAA1F20 + 4 * byte_23BB92D30[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BAA1F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);

  sub_23B989CE8(v0, v1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
  if (!swift_getEnumCaseMultiPayload())
  {
    v5 = *(_QWORD *)(v3 - 160);
    sub_23BA31BCC(v2, v5);
    v6 = *(_QWORD *)(v3 - 120);
    sub_23BA31BCC(v1 + v4, v6);
    v7 = *(_QWORD *)(v3 - 128);
    sub_23BA31BCC(v2 + v4, v7);
    v8 = *(_QWORD *)(v3 - 112);
    v9 = *(_QWORD *)(v3 - 168) + *(int *)(v8 + 48);
    v10 = v1;
    v11 = *(_QWORD *)(v3 - 168);
    sub_23BA31BCC(v10, v11);
    sub_23BA2F0B0(v5, v9);
    v13 = *(_QWORD *)(v3 - 104);
    v12 = *(_QWORD *)(v3 - 96);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12) == 1)
    {
      if (v14(v9, 1, v12) == 1)
      {
        sub_23B989D60(v11, (uint64_t *)&unk_256A5E6B0);
LABEL_11:
        v20 = *(int *)(v8 + 48);
        v21 = v7;
        v22 = *(_QWORD *)(v3 - 200);
        v23 = v22 + v20;
        sub_23BA2F0B0(v6, v22);
        sub_23BA2F0B0(v21, v23);
        if (v14(v22, 1, v12) == 1)
        {
          sub_23B989D60(v21, (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v6, (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v5, (uint64_t *)&unk_256A5E6B0);
          if (v14(v23, 1, v12) == 1)
          {
            sub_23B989D60(v22, (uint64_t *)&unk_256A5E6B0);
LABEL_18:
            sub_23B989D9C(v0, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
            return 1;
          }
          goto LABEL_16;
        }
        v24 = *(_QWORD *)(v3 - 208);
        sub_23BA2F0B0(v22, v24);
        if (v14(v23, 1, v12) == 1)
        {
          sub_23B989D60(*(_QWORD *)(v3 - 128), (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v6, (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v5, (uint64_t *)&unk_256A5E6B0);
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v24, v12);
LABEL_16:
          sub_23B989D60(v22, &qword_256A5DDF0);
          goto LABEL_19;
        }
        v25 = *(_QWORD *)(v3 - 152);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v25, v23, v12);
        sub_23BAA8D10();
        v26 = sub_23BB8A760();
        v27 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v27(v25, v12);
        sub_23B989D60(*(_QWORD *)(v3 - 128), (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v6, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v5, (uint64_t *)&unk_256A5E6B0);
        v27(v24, v12);
        sub_23B989D60(v22, (uint64_t *)&unk_256A5E6B0);
        if ((v26 & 1) != 0)
          goto LABEL_18;
LABEL_19:
        sub_23B989D9C(v0, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
        return 0;
      }
    }
    else
    {
      v15 = *(_QWORD *)(v3 - 192);
      sub_23BA2F0B0(v11, v15);
      if (v14(v9, 1, v12) != 1)
      {
        v16 = *(_QWORD *)(v3 - 152);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v9, v12);
        sub_23BAA8D10();
        *(_DWORD *)(v3 - 88) = sub_23BB8A760();
        v17 = v11;
        v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v19 = v16;
        v7 = *(_QWORD *)(v3 - 128);
        v18(v19, v12);
        v18(v15, v12);
        sub_23B989D60(v17, (uint64_t *)&unk_256A5E6B0);
        v6 = *(_QWORD *)(v3 - 120);
        if ((*(_DWORD *)(v3 - 88) & 1) != 0)
          goto LABEL_11;
LABEL_9:
        sub_23B989D60(v7, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v6, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v5, (uint64_t *)&unk_256A5E6B0);
        goto LABEL_19;
      }
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
      v6 = *(_QWORD *)(v3 - 120);
    }
    sub_23B989D60(v11, &qword_256A5DDF0);
    goto LABEL_9;
  }
  sub_23B989D60(v1 + v4, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v1, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v0, &qword_256A5FF48);
  return 0;
}

uint64_t _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO06LoadedH0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v7;
  uint64_t result;
  int *v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  char v15;

  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v4 != v5)
      return 0;
LABEL_9:
    v9 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    _s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO08FollowerH0O2eeoiySbAG_AGtFZ_0(a1 + v9[5], a2 + v9[5]);
    if ((v10 & 1) == 0
      || (_s12FindMyUICore27PeopleRelationshipsProviderC17RelationshipStateO09FollowingH0O2eeoiySbAG_AGtFZ_0(a1 + v9[6], a2 + v9[6]) & 1) == 0)
    {
      return 0;
    }
    v11 = v9[7];
    v12 = (_QWORD *)(a1 + v11);
    v13 = *(_BYTE *)(a1 + v11 + 8);
    v14 = (_QWORD *)(a2 + v11);
    v15 = *(_BYTE *)(a2 + v11 + 8);
    if ((v13 & 1) != 0)
    {
      if ((v15 & 1) == 0)
        return 0;
    }
    else
    {
      if (*v12 != *v14)
        v15 = 1;
      if ((v15 & 1) != 0)
        return 0;
    }
    return 1;
  }
  v7 = sub_23BB8B1A4();
  result = 0;
  if ((v7 & 1) != 0 && v4 == v5)
    goto LABEL_9;
  return result;
}

uint64_t type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5FDA0);
}

unint64_t sub_23BAA2738()
{
  unint64_t result;

  result = qword_256A5FB48;
  if (!qword_256A5FB48)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleRelationshipsProvider.Subscription.Identifier, &type metadata for PeopleRelationshipsProvider.Subscription.Identifier);
    atomic_store(result, (unint64_t *)&qword_256A5FB48);
  }
  return result;
}

unint64_t sub_23BAA2780()
{
  unint64_t result;

  result = qword_256A5FB50;
  if (!qword_256A5FB50)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleRelationshipsProvider.Subscription, &type metadata for PeopleRelationshipsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A5FB50);
  }
  return result;
}

unint64_t sub_23BAA27C8()
{
  unint64_t result;

  result = qword_256A5FB58;
  if (!qword_256A5FB58)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType, &type metadata for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType);
    atomic_store(result, (unint64_t *)&qword_256A5FB58);
  }
  return result;
}

uint64_t _s12SubscriptionOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s12SubscriptionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_23BAA28BC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23BAA28D4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PeopleRelationshipsProvider.Subscription()
{
  return &type metadata for PeopleRelationshipsProvider.Subscription;
}

ValueMetadata *type metadata accessor for PeopleRelationshipsProvider.Subscription.Identifier()
{
  return &type metadata for PeopleRelationshipsProvider.Subscription.Identifier;
}

_QWORD *_s17RelationshipStateOwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v46;
  int *v47;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v8 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
      swift_bridgeObjectRetain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v19 = sub_23BB88984();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19))
        {
LABEL_11:
          v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
LABEL_19:
          swift_storeEnumTagMultiPayload();
          goto LABEL_23;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          }
          else
          {
            v14 = sub_23BB88984();
            v15 = *(_QWORD *)(v14 - 8);
            v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
            v46 = v8;
            if (v16(v11, 1, v14))
            {
              v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v11, v14);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
            }
            v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
            v23 = &v10[v22];
            v24 = &v11[v22];
            if (v16(v24, 1, v14))
            {
              v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v24, v14);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
            }
            swift_storeEnumTagMultiPayload();
            v8 = v46;
          }
LABEL_23:
          v26 = v8[6];
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
          v30 = swift_getEnumCaseMultiPayload();
          if (v30 == 1)
          {
            v35 = sub_23BB88984();
            v36 = *(_QWORD *)(v35 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v28, 1, v35))
            {
              v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v27, v28, v35);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v35);
            }
          }
          else
          {
            if (v30)
            {
              memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_37:
              v42 = v8[7];
              v43 = (char *)a1 + v42;
              v44 = (char *)a2 + v42;
              *(_QWORD *)v43 = *(_QWORD *)v44;
              v43[8] = v44[8];
              swift_storeEnumTagMultiPayload();
              return a1;
            }
            v31 = sub_23BB88984();
            v32 = *(_QWORD *)(v31 - 8);
            v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
            v47 = v8;
            if (v33(v28, 1, v31))
            {
              v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v27, v28, v31);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
            }
            v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
            v39 = &v27[v38];
            v40 = &v28[v38];
            if (v33(v40, 1, v31))
            {
              v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v39, v40, v31);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v39, 0, 1, v31);
            }
            v8 = v47;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_37;
        }
        v19 = sub_23BB88984();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19))
          goto LABEL_11;
      }
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v10, v11, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v10, 0, 1, v19);
      goto LABEL_19;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s17RelationshipStateOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 1)
    return result;
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v4 = a1 + *(int *)(v3 + 20);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      goto LABEL_11;
    goto LABEL_10;
  }
  if (!EnumCaseMultiPayload)
  {
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v4 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (!v8(v4, 1, v6))
LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
LABEL_11:
  v9 = a1 + *(int *)(v3 + 24);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v10 = sub_23BB88984();
    v11 = *(_QWORD *)(v10 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  else if (!(_DWORD)result)
  {
    v10 = sub_23BB88984();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v12(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v9 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v9, 1, v10);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return result;
}

_QWORD *_s17RelationshipStateOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v44;
  int *v45;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = sub_23BB88984();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17))
      {
LABEL_9:
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          v13 = sub_23BB88984();
          v14 = *(_QWORD *)(v13 - 8);
          v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
          v44 = v7;
          if (v15(v10, 1, v13))
          {
            v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v10, v13);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
          }
          v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v21 = &v9[v20];
          v22 = &v10[v20];
          if (v15(v22, 1, v13))
          {
            v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
          }
          swift_storeEnumTagMultiPayload();
          v7 = v44;
        }
LABEL_21:
        v24 = v7[6];
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v28 = swift_getEnumCaseMultiPayload();
        if (v28 == 1)
        {
          v33 = sub_23BB88984();
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33))
          {
            v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v25, v26, v33);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v25, 0, 1, v33);
          }
        }
        else
        {
          if (v28)
          {
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_35:
            v40 = v7[7];
            v41 = (char *)a1 + v40;
            v42 = (char *)a2 + v40;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v41[8] = v42[8];
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          v29 = sub_23BB88984();
          v30 = *(_QWORD *)(v29 - 8);
          v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
          v45 = v7;
          if (v31(v26, 1, v29))
          {
            v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v25, v26, v29);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
          }
          v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v37 = &v25[v36];
          v38 = &v26[v36];
          if (v31(v38, 1, v29))
          {
            v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v37, v38, v29);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v29);
          }
          v7 = v45;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
      v17 = sub_23BB88984();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17))
        goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v10, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *_s17RelationshipStateOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int *v44;
  int *v45;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v6 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
      swift_bridgeObjectRetain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v16 = sub_23BB88984();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
          goto LABEL_10;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            goto LABEL_22;
          }
          v12 = sub_23BB88984();
          v13 = *(_QWORD *)(v12 - 8);
          v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
          v44 = v6;
          if (v14(v9, 1, v12))
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
          }
          v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v20 = &v8[v19];
          v21 = &v9[v19];
          if (v14(v21, 1, v12))
          {
            v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
          }
          v6 = v44;
LABEL_21:
          swift_storeEnumTagMultiPayload();
LABEL_22:
          v23 = v6[6];
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          v26 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
          v27 = swift_getEnumCaseMultiPayload();
          if (v27 == 1)
          {
            v32 = sub_23BB88984();
            v33 = *(_QWORD *)(v32 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32))
            {
              v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v24, v25, v32);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v32);
            }
          }
          else
          {
            if (v27)
            {
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_36:
              v39 = v6[7];
              v40 = (char *)a1 + v39;
              v41 = (char *)a2 + v39;
              v42 = *(_QWORD *)v41;
              v40[8] = v41[8];
              *(_QWORD *)v40 = v42;
              swift_storeEnumTagMultiPayload();
              return a1;
            }
            v28 = sub_23BB88984();
            v29 = *(_QWORD *)(v28 - 8);
            v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
            v45 = v6;
            if (v30(v25, 1, v28))
            {
              v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v24, v25, v28);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
            }
            v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
            v36 = &v24[v35];
            v37 = &v25[v35];
            if (v30(v37, 1, v28))
            {
              v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v36, v37, v28);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v36, 0, 1, v28);
            }
            v6 = v45;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_36;
        }
        v16 = sub_23BB88984();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
        {
LABEL_10:
          v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_21;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v8, v9, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
      goto LABEL_21;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s17RelationshipStateOwtk(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v43;
  int *v44;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    v6 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
      {
LABEL_9:
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        else
        {
          v12 = sub_23BB88984();
          v13 = *(_QWORD *)(v12 - 8);
          v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
          v43 = v6;
          if (v14(v9, 1, v12))
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
          }
          v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v20 = &v8[v19];
          v21 = &v9[v19];
          if (v14(v21, 1, v12))
          {
            v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v21, v12);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
          }
          swift_storeEnumTagMultiPayload();
          v6 = v43;
        }
LABEL_21:
        v23 = v6[6];
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v27 = swift_getEnumCaseMultiPayload();
        if (v27 == 1)
        {
          v32 = sub_23BB88984();
          v33 = *(_QWORD *)(v32 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32))
          {
            v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v24, v25, v32);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v32);
          }
        }
        else
        {
          if (v27)
          {
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_35:
            v39 = v6[7];
            v40 = &a1[v39];
            v41 = &a2[v39];
            *(_QWORD *)v40 = *(_QWORD *)v41;
            v40[8] = v41[8];
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          v28 = sub_23BB88984();
          v29 = *(_QWORD *)(v28 - 8);
          v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
          v44 = v6;
          if (v30(v25, 1, v28))
          {
            v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v25, v28);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
          }
          v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v36 = &v24[v35];
          v37 = &v25[v35];
          if (v30(v37, 1, v28))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v36, v37, v28);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v36, 0, 1, v28);
          }
          v6 = v44;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
        goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *_s17RelationshipStateOwta(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v43;
  int *v44;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      v6 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      v7 = v6[5];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v16 = sub_23BB88984();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
          goto LABEL_10;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            goto LABEL_22;
          }
          v12 = sub_23BB88984();
          v13 = *(_QWORD *)(v12 - 8);
          v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
          v43 = v6;
          if (v14(v9, 1, v12))
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
          }
          v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v20 = &v8[v19];
          v21 = &v9[v19];
          if (v14(v21, 1, v12))
          {
            v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v21, v12);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
          }
          v6 = v43;
LABEL_21:
          swift_storeEnumTagMultiPayload();
LABEL_22:
          v23 = v6[6];
          v24 = &a1[v23];
          v25 = &a2[v23];
          v26 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
          v27 = swift_getEnumCaseMultiPayload();
          if (v27 == 1)
          {
            v32 = sub_23BB88984();
            v33 = *(_QWORD *)(v32 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32))
            {
              v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v24, v25, v32);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v32);
            }
          }
          else
          {
            if (v27)
            {
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_36:
              v39 = v6[7];
              v40 = &a1[v39];
              v41 = &a2[v39];
              *(_QWORD *)v40 = *(_QWORD *)v41;
              v40[8] = v41[8];
              swift_storeEnumTagMultiPayload();
              return a1;
            }
            v28 = sub_23BB88984();
            v29 = *(_QWORD *)(v28 - 8);
            v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
            v44 = v6;
            if (v30(v25, 1, v28))
            {
              v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v25, v28);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
            }
            v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
            v36 = &v24[v35];
            v37 = &v25[v35];
            if (v30(v37, 1, v28))
            {
              v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
              memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v36, v37, v28);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v36, 0, 1, v28);
            }
            v6 = v44;
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_36;
        }
        v16 = sub_23BB88984();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
        {
LABEL_10:
          v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_21;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
      goto LABEL_21;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23BAA44CC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *_s17RelationshipStateO11LoadedStateVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[5];
    v9 = (char *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_23BB88984();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18))
        goto LABEL_9;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          goto LABEL_20;
        }
        v13 = sub_23BB88984();
        v14 = *(_QWORD *)(v13 - 8);
        v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        if (v15(v10, 1, v13))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v10, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
        }
        v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        v22 = &v9[v21];
        v23 = &v10[v21];
        if (v15(v23, 1, v13))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v23, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
        }
LABEL_19:
        swift_storeEnumTagMultiPayload();
LABEL_20:
        v25 = a3[6];
        v26 = (char *)v4 + v25;
        v27 = (char *)a2 + v25;
        v28 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
        v29 = swift_getEnumCaseMultiPayload();
        if (v29 == 1)
        {
          v34 = sub_23BB88984();
          v35 = *(_QWORD *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v27, v34);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v34);
          }
        }
        else
        {
          if (v29)
          {
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_33:
            v41 = a3[7];
            v42 = (char *)v4 + v41;
            v43 = (uint64_t)a2 + v41;
            *(_QWORD *)v42 = *(_QWORD *)v43;
            v42[8] = *(_BYTE *)(v43 + 8);
            return v4;
          }
          v30 = sub_23BB88984();
          v31 = *(_QWORD *)(v30 - 8);
          v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
          if (v32(v27, 1, v30))
          {
            v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v26, v27, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
          }
          v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v38 = &v26[v37];
          v39 = &v27[v37];
          if (v32(v39, 1, v30))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
            memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v38, v39, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v30);
          }
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_33;
      }
      v18 = sub_23BB88984();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18))
      {
LABEL_9:
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        goto LABEL_19;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v9, v10, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v18);
    goto LABEL_19;
  }
  v17 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t _s17RelationshipStateO11LoadedStateVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      goto LABEL_10;
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v4 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (!v8(v4, 1, v6))
LABEL_9:
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
LABEL_10:
  v9 = a1 + *(int *)(a2 + 24);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  else if (!(_DWORD)result)
  {
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (!v13(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
    v9 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v9, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  return result;
}

uint64_t _s17RelationshipStateO11LoadedStateVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v16 = sub_23BB88984();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
    {
LABEL_7:
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      goto LABEL_17;
    }
LABEL_14:
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v8, v9, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v16 = sub_23BB88984();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
      goto LABEL_7;
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_18;
  }
  v12 = sub_23BB88984();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v9, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  }
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
  v20 = &v8[v19];
  v21 = &v9[v19];
  if (v14(v21, 1, v12))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
  }
LABEL_17:
  swift_storeEnumTagMultiPayload();
LABEL_18:
  v23 = a3[6];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v27 = swift_getEnumCaseMultiPayload();
  if (v27 == 1)
  {
    v32 = sub_23BB88984();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v24, v25, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v32);
    }
LABEL_30:
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  if (!v27)
  {
    v28 = sub_23BB88984();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v30(v25, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v24, v25, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
    }
    v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v36 = &v24[v35];
    v37 = &v25[v35];
    if (v30(v37, 1, v28))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v36, v37, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v36, 0, 1, v28);
    }
    goto LABEL_30;
  }
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_31:
  v39 = a3[7];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  return a1;
}

uint64_t _s17RelationshipStateO11LoadedStateVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 == a2)
    goto LABEL_32;
  v6 = a3[5];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  sub_23B989D9C(a1 + v6, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15))
      {
LABEL_8:
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_18:
        swift_storeEnumTagMultiPayload();
        goto LABEL_19;
      }
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v7, v8, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
      goto LABEL_18;
    case 1:
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15))
        goto LABEL_8;
      goto LABEL_12;
    case 0:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v13(v8, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v8, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v19 = &v7[v18];
      v20 = &v8[v18];
      if (v13(v20, 1, v11))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v20, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v19, 0, 1, v11);
      }
      goto LABEL_18;
  }
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_19:
  v22 = a3[6];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  sub_23B989D9C(a1 + v22, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
  v25 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v26 = swift_getEnumCaseMultiPayload();
  if (v26 == 1)
  {
    v31 = sub_23BB88984();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v23, v24, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v23, 0, 1, v31);
    }
LABEL_31:
    swift_storeEnumTagMultiPayload();
    goto LABEL_32;
  }
  if (!v26)
  {
    v27 = sub_23BB88984();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v24, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v23, v24, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
    }
    v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v35 = &v23[v34];
    v36 = &v24[v34];
    if (v29(v36, 1, v27))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v35, v36, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v35, 0, 1, v27);
    }
    goto LABEL_31;
  }
  memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_32:
  v38 = a3[7];
  v39 = a1 + v38;
  v40 = (uint64_t *)(a2 + v38);
  v41 = *v40;
  *(_BYTE *)(v39 + 8) = *((_BYTE *)v40 + 8);
  *(_QWORD *)v39 = v41;
  return a1;
}

uint64_t _s17RelationshipStateO11LoadedStateVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v15 = sub_23BB88984();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15))
    {
LABEL_7:
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      goto LABEL_17;
    }
LABEL_14:
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v7, v8, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v15 = sub_23BB88984();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15))
      goto LABEL_7;
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_18;
  }
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v8, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v7, v8, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  }
  v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
  v19 = &v7[v18];
  v20 = &v8[v18];
  if (v13(v20, 1, v11))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v20, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v19, 0, 1, v11);
  }
LABEL_17:
  swift_storeEnumTagMultiPayload();
LABEL_18:
  v22 = a3[6];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  v25 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v26 = swift_getEnumCaseMultiPayload();
  if (v26 == 1)
  {
    v31 = sub_23BB88984();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v23, v24, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v23, 0, 1, v31);
    }
LABEL_30:
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  if (!v26)
  {
    v27 = sub_23BB88984();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v24, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v23, v24, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
    }
    v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v35 = &v23[v34];
    v36 = &v24[v34];
    if (v29(v36, 1, v27))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v35, v36, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v35, 0, 1, v27);
    }
    goto LABEL_30;
  }
  memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_31:
  v38 = a3[7];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  return a1;
}

uint64_t _s17RelationshipStateO11LoadedStateVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 == a2)
    goto LABEL_32;
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  sub_23B989D9C(a1 + v7, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
      {
LABEL_8:
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_18:
        swift_storeEnumTagMultiPayload();
        goto LABEL_19;
      }
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
      goto LABEL_18;
    case 1:
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
        goto LABEL_8;
      goto LABEL_12;
    case 0:
      v12 = sub_23BB88984();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v14(v9, 1, v12))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v20 = &v8[v19];
      v21 = &v9[v19];
      if (v14(v21, 1, v12))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v21, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
      }
      goto LABEL_18;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_19:
  v23 = a3[6];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  sub_23B989D9C(a1 + v23, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
  v26 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v27 = swift_getEnumCaseMultiPayload();
  if (v27 == 1)
  {
    v32 = sub_23BB88984();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v24, v25, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v32);
    }
LABEL_31:
    swift_storeEnumTagMultiPayload();
    goto LABEL_32;
  }
  if (!v27)
  {
    v28 = sub_23BB88984();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v30(v25, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v25, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v24, 0, 1, v28);
    }
    v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v36 = &v24[v35];
    v37 = &v25[v35];
    if (v30(v37, 1, v28))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v36, v37, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v36, 0, 1, v28);
    }
    goto LABEL_31;
  }
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_32:
  v39 = a3[7];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  return a1;
}

uint64_t _s17RelationshipStateO11LoadedStateVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAA5F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s17RelationshipStateO11LoadedStateVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAA5FD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_23BAA606C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s24RelationshipStreamChangeOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v17;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v7 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v7;
        *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
        v9 = *(int *)(v8 + 28);
        v10 = (void *)(a1 + v9);
        v11 = (char *)a2 + v9;
        v12 = sub_23BB88984();
        v13 = *(_QWORD *)(v12 - 8);
        v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        if (v14(v11, 1, v12))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        v25 = *(int *)(v8 + 32);
        v26 = (void *)(a1 + v25);
        v27 = (char *)a2 + v25;
        if (!v14(v27, 1, v12))
        {
LABEL_16:
          (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
          goto LABEL_17;
        }
      }
      else
      {
        v18 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v18;
        *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        v19 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
        v20 = *(int *)(v19 + 28);
        v21 = (void *)(a1 + v20);
        v22 = (char *)a2 + v20;
        v12 = sub_23BB88984();
        v13 = *(_QWORD *)(v12 - 8);
        v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        if (v23(v22, 1, v12))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v21, v22, v12);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
        }
        v28 = *(int *)(v19 + 32);
        v26 = (void *)(a1 + v28);
        v27 = (char *)a2 + v28;
        if (!v23(v27, 1, v12))
          goto LABEL_16;
      }
      v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  v16 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t _s24RelationshipStreamChangeOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if (result <= 1)
  {
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
    v4 = a1 + *(int *)(v3 + 28);
    v5 = sub_23BB88984();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = a1 + *(int *)(v3 + 32);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t _s24RelationshipStreamChangeOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v13 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v13;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
    v6 = *(int *)(v5 + 28);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = sub_23BB88984();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v14 = *(int *)(v5 + 32);
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    if (v11(v16, 1, v9))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s24RelationshipStreamChangeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  void *__dst;

  if (a1 != a2)
  {
    sub_23B989D9C(a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
      v4 = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v4;
      v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
      v6 = *(int *)(v5 + 28);
      __dst = (void *)(a1 + v6);
      v7 = (const void *)(a2 + v6);
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      if (v10(v7, 1, v8))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(__dst, v7, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
      }
      v12 = *(int *)(v5 + 32);
      v13 = (void *)(a1 + v12);
      v14 = (const void *)(a2 + v12);
      if (v10(v14, 1, v8))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v13, v14, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5FD10);
}

_WORD *_s24RelationshipStreamChangeOwtk(_WORD *a1, _WORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[8] = a2[8];
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
    v16 = *(int *)(v15 + 28);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v19(v18, 1, v11))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    v24 = *(int *)(v15 + 32);
    v22 = (char *)a1 + v24;
    v23 = (char *)a2 + v24;
    if (v19(v23, 1, v11))
      goto LABEL_13;
    goto LABEL_14;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[8] = a2[8];
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
    v8 = *(int *)(v7 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = *(int *)(v7 + 32);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    if (v13(v23, 1, v11))
    {
LABEL_13:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_14:
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
    goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_WORD *_s24RelationshipStreamChangeOwta(_WORD *a1, _WORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[8] = a2[8];
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
      v16 = *(int *)(v15 + 28);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v19(v18, 1, v11))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v18, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
      }
      v24 = *(int *)(v15 + 32);
      v22 = (char *)a1 + v24;
      v23 = (char *)a2 + v24;
      if (v19(v23, 1, v11))
        goto LABEL_14;
      goto LABEL_15;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[8] = a2[8];
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v7 = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(0);
      v8 = *(int *)(v7 + 28);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v13(v10, 1, v11))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v21 = *(int *)(v7 + 32);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (v13(v23, 1, v11))
      {
LABEL_14:
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_15:
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
      goto LABEL_16;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23BAA6EA8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *_s24RelationshipStreamChangeO10FriendshipVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_QWORD *)(a1 + 24) = a2[3];
    v8 = *(int *)(a3 + 28);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 32);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13(v18, 1, v11))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 32);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 32);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 32);
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 32);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 32);
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAA7810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t _s24RelationshipStreamChangeO10FriendshipVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAA789C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_23BAA7914()
{
  unint64_t v0;

  sub_23BA19EA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s24RelationshipStreamChangeO10FriendshipV14FriendshipTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BAA79E8 + 4 * byte_23BB92D39[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BAA7A1C + 4 * byte_23BB92D34[v4]))();
}

uint64_t sub_23BAA7A1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAA7A24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BAA7A2CLL);
  return result;
}

uint64_t sub_23BAA7A38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BAA7A40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BAA7A44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAA7A4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType()
{
  return &type metadata for PeopleRelationshipsProvider.RelationshipStreamChange.Friendship.FriendshipType;
}

uint64_t *_s17RelationshipStateO13FollowerStateOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v14 = sub_23BB88984();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
LABEL_10:
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_17:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v14);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      goto LABEL_20;
    case 1:
      v14 = sub_23BB88984();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        goto LABEL_10;
      goto LABEL_17;
    case 0:
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
      if (v10(a2, 1, v8))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if (v10((uint64_t *)v19, 1, v8))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v18, v19, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v8);
      }
      goto LABEL_20;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t _s17RelationshipStateO13FollowerStateOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    v3 = sub_23BB88984();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_23BB88984();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

char *_s17RelationshipStateO13FollowerStateOwcp(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_7:
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_14:
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_17;
    case 1:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        goto LABEL_7;
      goto LABEL_14;
    case 0:
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *_s17RelationshipStateO13FollowerStateOwca(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 == a2)
    return a1;
  sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_8:
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_18:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_18;
    case 1:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        goto LABEL_8;
      goto LABEL_12;
    case 0:
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_18;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *_s17RelationshipStateO13FollowerStateOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_7:
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_14:
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_17;
    case 1:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        goto LABEL_7;
      goto LABEL_14;
    case 0:
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_17;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *_s17RelationshipStateO13FollowerStateOwta(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 == a2)
    return a1;
  sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_8:
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_18:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_18;
    case 1:
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        goto LABEL_8;
      goto LABEL_12;
    case 0:
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_18;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void sub_23BAA8864()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_23BA19EA8();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    v4 = &v3;
    v5 = v2;
    v6 = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

char *_s17RelationshipStateO14FollowingStateOwca(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s17RelationshipStateO14FollowingStateOwta(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_23BB88984();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

unint64_t sub_23BAA8D10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5DE00;
  if (!qword_256A5DE00)
  {
    v1 = sub_23BB88984();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDCE958], v1);
    atomic_store(result, &qword_256A5DE00);
  }
  return result;
}

uint64_t sub_23BAA8D5C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FindMyUICore()
{
  return objc_opt_self();
}

unint64_t DiscoveredAccessoryProductType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_23BAA8DA0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

BOOL static DiscoveredAccessoryPairingStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DiscoveredAccessoryPairingStatus.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t DiscoveredAccessoryPairingStatus.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BAA8E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v2 = sub_23BB8878C();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v43 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB88714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D950);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v43 - v16;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v43 - v20;
  v22 = v1[1];
  v23 = v1[2];
  v24 = v1[3];
  if (!v22)
    goto LABEL_12;
  v25 = *v1;
  v26 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v26 = v25 & 0xFFFFFFFFFFFFLL;
  if (v26)
  {
    sub_23BB88774();
    sub_23BB886F0();
    v28 = v44;
    v27 = v45;
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    if (!v29(v21, 1, v45))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D970);
      v30 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_23BB8C510;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 16))(v31 + v30, v9, v5);
      sub_23BB8872C();
    }
    if (v29(v21, 1, v27))
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v32 = sub_23BB8884C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v46, 1, 1, v32);
    }
    else
    {
      v42 = v43;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v43, v21, v27);
      sub_23BB88744();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v42, v27);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    return sub_23BAA9F64((uint64_t)v21);
  }
  else
  {
    if (!v24)
      goto LABEL_15;
LABEL_12:
    v33 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000) == 0)
      v33 = v23 & 0xFFFFFFFFFFFFLL;
    if (v33)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_23BB8C510;
      *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v34 + 64) = sub_23B9A5C8C();
      *(_QWORD *)(v34 + 32) = v23;
      *(_QWORD *)(v34 + 40) = v24;
      swift_bridgeObjectRetain();
      sub_23BB8A7CC();
      sub_23BB88774();
      swift_bridgeObjectRelease();
      sub_23BAA9F1C((uint64_t)v17, (uint64_t)v13);
      v36 = v44;
      v35 = v45;
      v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v45);
      v38 = v46;
      if (v37 == 1)
      {
        sub_23BAA9F64((uint64_t)v17);
        sub_23BAA9F64((uint64_t)v13);
        v39 = sub_23BB8884C();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
      }
      else
      {
        sub_23BB88744();
        sub_23BAA9F64((uint64_t)v17);
        return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v13, v35);
      }
    }
    else
    {
LABEL_15:
      v41 = sub_23BB8884C();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v46, 1, 1, v41);
    }
  }
}

id DiscoveredAccessory.__allocating_init(identifier:productType:productImage:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  double v16;
  CGFloat v17;
  UIImage *v18;
  char *v19;
  id v20;
  objc_super v22;
  CGSize v23;

  v4 = v3;
  v8 = (char *)objc_allocWithZone(v4);
  v9 = &v8[OBJC_IVAR___FMUIDiscoveredAccessory_identifier];
  v10 = sub_23BB889CC();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  *(_QWORD *)&v8[OBJC_IVAR___FMUIDiscoveredAccessory_productType] = a2;
  if (!a3)
  {
    v19 = v8;
LABEL_5:
    v18 = (UIImage *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
    goto LABEL_6;
  }
  v12 = (void *)objc_opt_self();
  v13 = v8;
  v14 = a3;
  v15 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v15, sel_scale);

  objc_msgSend(v14, sel_scale);
  v17 = v16;
  v23.width = 60.0;
  v23.height = 60.0;
  UIGraphicsBeginImageContextWithOptions(v23, 0, v17);
  objc_msgSend(v14, sel_drawInRect_, 0.0, 0.0, 60.0, 60.0);
  v18 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  if (!v18)
    goto LABEL_5;
LABEL_6:
  *(_QWORD *)&v8[OBJC_IVAR___FMUIDiscoveredAccessory_productImage] = v18;

  v22.receiver = v8;
  v22.super_class = v4;
  v20 = objc_msgSendSuper2(&v22, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);

  return v20;
}

id DiscoveredAccessory.init(identifier:productType:productImage:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = sub_23BAA95B4(a1, a2, a3);

  return v4;
}

id DiscoveredAccessory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DiscoveredAccessory.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DiscoveredAccessory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23BAA95B4(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  double v15;
  CGFloat v16;
  UIImage *v17;
  char *v18;
  id v19;
  objc_super v21;
  CGSize v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR___FMUIDiscoveredAccessory_identifier];
  v9 = sub_23BB889CC();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  *(_QWORD *)&v3[OBJC_IVAR___FMUIDiscoveredAccessory_productType] = a2;
  if (!a3)
  {
    v18 = v3;
LABEL_5:
    v17 = (UIImage *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
    goto LABEL_6;
  }
  v11 = (void *)objc_opt_self();
  v12 = v3;
  v13 = a3;
  v14 = objc_msgSend(v11, sel_mainScreen);
  objc_msgSend(v14, sel_scale);

  objc_msgSend(v13, sel_scale);
  v16 = v15;
  v22.width = 60.0;
  v22.height = 60.0;
  UIGraphicsBeginImageContextWithOptions(v22, 0, v16);
  objc_msgSend(v13, sel_drawInRect_, 0.0, 0.0, 60.0, 60.0);
  v17 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  if (!v17)
    goto LABEL_5;
LABEL_6:
  *(_QWORD *)&v3[OBJC_IVAR___FMUIDiscoveredAccessory_productImage] = v17;

  v21.receiver = v3;
  v21.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v19;
}

unint64_t sub_23BAA9760()
{
  unint64_t result;

  result = qword_256A5FFE8;
  if (!qword_256A5FFE8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DiscoveredAccessoryProductType, &type metadata for DiscoveredAccessoryProductType);
    atomic_store(result, (unint64_t *)&qword_256A5FFE8);
  }
  return result;
}

unint64_t sub_23BAA97A8()
{
  unint64_t result;

  result = qword_256A5FFF0;
  if (!qword_256A5FFF0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for DiscoveredAccessoryPairingStatus, &type metadata for DiscoveredAccessoryPairingStatus);
    atomic_store(result, (unint64_t *)&qword_256A5FFF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveredAccessoryProductType()
{
  return &type metadata for DiscoveredAccessoryProductType;
}

uint64_t getEnumTagSinglePayload for DiscoveredAccessoryPairingStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveredAccessoryPairingStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23BAA98D8 + 4 * byte_23BB930C5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23BAA990C + 4 * asc_23BB930C0[v4]))();
}

uint64_t sub_23BAA990C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAA9914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BAA991CLL);
  return result;
}

uint64_t sub_23BAA9928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BAA9930);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23BAA9934(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAA993C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveredAccessoryPairingStatus()
{
  return &type metadata for DiscoveredAccessoryPairingStatus;
}

uint64_t destroy for DiscoveredAccessoryPairingResult(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DiscoveredAccessoryPairingResult(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *v3 = *(_OWORD *)(a2 + 8);
    v3[1] = v5;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for DiscoveredAccessoryPairingResult(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 24);
      *v4 = *v5;
      *(_OWORD *)(a1 + 24) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_23BAA9AE8(a1 + 8);
    v8 = v5[1];
    *v4 = *v5;
    v4[1] = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_23BAA9AE8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DiscoveredAccessoryPairingResult(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v4 = (_OWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v8;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_23BAA9AE8((uint64_t)v3);
  }
  v7 = v4[1];
  *v3 = *v4;
  v3[1] = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveredAccessoryPairingResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveredAccessoryPairingResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveredAccessoryPairingResult()
{
  return &type metadata for DiscoveredAccessoryPairingResult;
}

uint64_t destroy for DiscoveredAccessoryLostModeInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DiscoveredAccessoryLostModeInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DiscoveredAccessoryLostModeInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DiscoveredAccessoryLostModeInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveredAccessoryLostModeInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveredAccessoryLostModeInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveredAccessoryLostModeInfo()
{
  return &type metadata for DiscoveredAccessoryLostModeInfo;
}

uint64_t sub_23BAA9E3C()
{
  return type metadata accessor for DiscoveredAccessory();
}

uint64_t type metadata accessor for DiscoveredAccessory()
{
  uint64_t result;

  result = qword_256A60020;
  if (!qword_256A60020)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BAA9E80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB889CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DiscoveredAccessory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiscoveredAccessory.__allocating_init(identifier:productType:productImage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_23BAA9F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAA9F64(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PeopleRelationshipsProvider.Dependencies.startRelationshipsStream.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t PeopleRelationshipsProvider.Dependencies.startRelationshipsStream.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PeopleRelationshipsProvider.Dependencies.startRelationshipsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BAAA014(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = &unk_256A60030;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t PeopleRelationshipsProvider.Dependencies.stopRelationshipsStream.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t PeopleRelationshipsProvider.Dependencies.stopRelationshipsStream.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PeopleRelationshipsProvider.Dependencies.stopRelationshipsStream.modify())()
{
  return nullsub_1;
}

uint64_t sub_23BAAA0E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = sub_23BAAA4E8;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t PeopleRelationshipsProvider.Dependencies.loadingStateResetDuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t PeopleRelationshipsProvider.Dependencies.loadingStateResetDuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PeopleRelationshipsProvider.Dependencies.loadingStateResetDuration.modify())()
{
  return nullsub_1;
}

uint64_t PeopleRelationshipsProvider.Dependencies.init(startRelationshipsStream:stopRelationshipsStream:loadingStateResetDuration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_23BAAA1CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_retain();
}

uint64_t sub_23BAAA1D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_retain();
  result = swift_release();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_23BAAA218@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = &unk_256A60038;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_23BAAA26C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_23BAAA4F0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;
  return swift_retain();
}

uint64_t _s12DependenciesVwxx()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s12DependenciesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s12DependenciesVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s12DependenciesVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t _s12DependenciesVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12DependenciesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PeopleRelationshipsProvider.Dependencies()
{
  return &type metadata for PeopleRelationshipsProvider.Dependencies;
}

uint64_t sub_23BAAA4C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAAA4E8()
{
  uint64_t v0;

  return sub_23BB7BDFC(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_23BAAA4F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23BB7BDD4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_23BAAA4F8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  return ((uint64_t (*)(int *))((char *)&dword_256A64970 + dword_256A64970))(v2);
}

uint64_t sub_23BAAA55C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B97C964;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A64978 + dword_256A64978))(a1, v4);
}

uint64_t _s16SubscriptionDataO4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BAAA624 + 4 * byte_23BB932D5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BAAA658 + 4 * asc_23BB932D0[v4]))();
}

uint64_t sub_23BAAA658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAAA660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BAAA668);
  return result;
}

uint64_t sub_23BAAA674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BAAA67CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BAAA680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAAA688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s16SubscriptionDataO4KindOMa()
{
  return &_s16SubscriptionDataO4KindON;
}

uint64_t _s16SubscriptionDataOwxx(uint64_t a1)
{
  return sub_23B9906D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_WORD *)(a1 + 16));
}

uint64_t _s16SubscriptionDataOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_WORD *)(a2 + 16);
  sub_23B9906EC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s16SubscriptionDataOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_WORD *)(a2 + 16);
  sub_23B9906EC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v5;
  sub_23B9906D4(v6, v7, v8);
  return a1;
}

uint64_t _s16SubscriptionDataOwta(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int16 v6;

  v3 = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_23B9906D4(v4, v5, v6);
  return a1;
}

uint64_t _s16SubscriptionDataOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1FFD && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 8189);
  v3 = (*(_WORD *)(a1 + 16) & 0xFC | (*(unsigned __int16 *)(a1 + 16) >> 14) | (*(unsigned __int16 *)(a1 + 16) >> 1) & 0x1F00) ^ 0x1FFF;
  if (v3 >> 2 >= 0x7FF)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s16SubscriptionDataOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x1FFC)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 8189;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x1FFD)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0x1FFD)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 2) & 0x7FF) - (a2 << 11);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (8 * v3) & 0xFE00 | (4 * (v3 & 0x3F));
    }
  }
  return result;
}

uint64_t sub_23BAAA86C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int16 *)(a1 + 16) >> 14;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_23BAAA888(uint64_t result)
{
  *(_WORD *)(result + 16) &= 0x3FFFu;
  return result;
}

uint64_t sub_23BAAA898(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x103 | ((_WORD)a2 << 14);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    *(_WORD *)(result + 16) = -16384;
  }
  return result;
}

ValueMetadata *_s16SubscriptionDataOMa()
{
  return &_s16SubscriptionDataON;
}

ValueMetadata *_s16SubscriptionDataO9LocationsVMa()
{
  return &_s16SubscriptionDataO9LocationsVN;
}

uint64_t sub_23BAAA8E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  int64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v25 = MEMORY[0x24BEE4AF8];
  sub_23BB004F4(0, v4, 0);
  v5 = v25;
  result = a3(a1);
  v9 = result;
  v11 = v10;
  v13 = v12 & 1;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v11)
      goto LABEL_14;
    v24 = v13;
    v14 = *(_QWORD *)(a1 + 48) + 24 * v9;
    v15 = *(_QWORD *)(v14 + 8);
    v23 = *(_QWORD *)v14;
    v16 = *(_BYTE *)(v14 + 16);
    v18 = *(_QWORD *)(v25 + 16);
    v17 = *(_QWORD *)(v25 + 24);
    swift_bridgeObjectRetain();
    if (v18 >= v17 >> 1)
      sub_23BB004F4(v17 > 1, v18 + 1, 1);
    *(_QWORD *)(v25 + 16) = v18 + 1;
    v19 = v25 + 24 * v18;
    *(_QWORD *)(v19 + 32) = v23;
    *(_QWORD *)(v19 + 40) = v15;
    *(_BYTE *)(v19 + 48) = v16;
    result = a4(v9, v11, v24 & 1, a1);
    v9 = result;
    v11 = v20;
    v13 = v21 & 1;
    if (!--v4)
    {
      sub_23BAADB78(result, v20, v13);
      return v5;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_23BAAAA84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23BAAAABC + 4 * byte_23BB932DA[*v0]))(0x7461636F4C796D2ELL, 0xEB000000006E6F69);
}

uint64_t sub_23BAAAABC()
{
  return 0x657265666572702ELL;
}

uint64_t sub_23BAAAADC()
{
  return 0x73646E656972662ELL;
}

uint64_t sub_23BAAAAFC()
{
  return 0x697463657269642ELL;
}

uint64_t sub_23BAAAB1C()
{
  return 0x6F697461636F6C2ELL;
}

uint64_t sub_23BAAAB48()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  sub_23BB8B258();
  return sub_23BB8B270();
}

uint64_t sub_23BAAABD0()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  return sub_23BB8B258();
}

uint64_t sub_23BAAAC3C()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  sub_23BB8B258();
  return sub_23BB8B270();
}

unint64_t sub_23BAAACC8()
{
  unint64_t result;

  result = qword_256A60040;
  if (!qword_256A60040)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9330C, &_s16SubscriptionDataO9LocationsVN);
    atomic_store(result, (unint64_t *)&qword_256A60040);
  }
  return result;
}

void sub_23BAAAD0C()
{
  __asm { BR              X10 }
}

uint64_t sub_23BAAAD48()
{
  unsigned __int16 v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B9906EC(v2, v1, v0);
  sub_23BB8A7D8();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  sub_23B9906D4(v2, v1, v0);
  sub_23BB8A82C();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23B9906D4(v2, v1, v0);
  sub_23BB8A82C();
  return 0x73646E656972662ELL;
}

void sub_23BAAB000()
{
  __asm { BR              X10 }
}

uint64_t sub_23BAAB040()
{
  unsigned __int16 v0;
  uint64_t v1;
  uint64_t v2;

  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23B9906D4(v2, v1, v0);
  return sub_23BB8B24C();
}

uint64_t sub_23BAAB0F8()
{
  sub_23BB8B240();
  sub_23BAAB000();
  return sub_23BB8B270();
}

uint64_t sub_23BAAB14C()
{
  sub_23BB8B240();
  sub_23BAAB000();
  return sub_23BB8B270();
}

unint64_t sub_23BAAB1A0()
{
  unint64_t result;

  result = qword_256A60048;
  if (!qword_256A60048)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB93374, &_s16SubscriptionDataON);
    atomic_store(result, (unint64_t *)&qword_256A60048);
  }
  return result;
}

unint64_t sub_23BAAB1E8()
{
  unint64_t result;

  result = qword_256A60050;
  if (!qword_256A60050)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB93448, &_s16SubscriptionDataO4KindON);
    atomic_store(result, (unint64_t *)&qword_256A60050);
  }
  return result;
}

unint64_t sub_23BAAB22C(uint64_t a1)
{
  unint64_t result;

  result = sub_23BA7D430();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23BAAB254()
{
  unint64_t result;

  result = qword_256A60080;
  if (!qword_256A60080)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB93488, &_s16SubscriptionDataO4KindON);
    atomic_store(result, (unint64_t *)&qword_256A60080);
  }
  return result;
}

unint64_t sub_23BAAB29C()
{
  unint64_t result;

  result = qword_256A60088;
  if (!qword_256A60088)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB93404, &_s16SubscriptionDataON);
    atomic_store(result, (unint64_t *)&qword_256A60088);
  }
  return result;
}

uint64_t sub_23BAAB2E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[8];
  _BYTE v50[8];
  _BYTE v51[16];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v46 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BEE4B08];
  v54 = MEMORY[0x24BEE4B08];
  v52 = MEMORY[0x24BEE4B08];
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v48 = 0;
  v45[1] = 0;
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_18;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(a1 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_17;
    v11 = 2;
    if (v8 <= 2)
      goto LABEL_19;
    v10 = *(_QWORD *)(a1 + 72);
    if (v10)
      goto LABEL_17;
    v11 = 3;
    if (v8 <= 3)
      goto LABEL_19;
    v10 = *(_QWORD *)(a1 + 80);
    if (v10)
    {
LABEL_17:
      v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v12 = 4;
    if (v8 > 4)
    {
      v10 = *(_QWORD *)(a1 + 88);
      if (v10)
      {
        v11 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v11 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          JUMPOUT(0x23BAAB8E0);
        }
        if (v11 >= v8)
          break;
        v10 = *(_QWORD *)(a1 + 56 + 8 * v11);
        ++v12;
        if (v10)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  swift_release();
  v13 = v47;
  if ((v48 & 1) != 0)
    sub_23BA6F8CC();
  v14 = MEMORY[0x24BEE6930];
  if ((v48 & 0x100000000) != 0)
  {
    v15 = sub_23BB8AA18();
    v16 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v46, 1, 1, v15);
    sub_23BB8A9F4();
    swift_retain();
    v17 = sub_23BB8A9E8();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v17;
    v18[3] = v14;
    v18[4] = v13;
    sub_23B989F54(v16, (uint64_t)&unk_256A60140, (uint64_t)v18);
    swift_release();
  }
  if (*(_QWORD *)(v53 + 16))
    sub_23BA5E6C4();
  if (*(_QWORD *)(v52 + 16))
  {
    v19 = (uint64_t *)(v13 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetLocations);
    swift_beginAccess();
    v20 = *v19;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v21 = swift_bridgeObjectRetain();
    sub_23BAAB9C4(v21);
    swift_endAccess();
    v22 = swift_bridgeObjectRetain();
    v23 = sub_23BAAA8E8(v22, (uint64_t)v51, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    swift_bridgeObjectRelease();
    sub_23BA69D48(v23);
    swift_bridgeObjectRelease();
    v24 = sub_23BB8AA18();
    v25 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v46, 1, 1, v24);
    sub_23BB8A9F4();
    swift_retain();
    v26 = sub_23BB8A9E8();
    v27 = v52;
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v26;
    v28[3] = v14;
    v28[4] = v20;
    v28[5] = v13;
    v28[6] = v27;
    swift_bridgeObjectRetain();
    sub_23B989F54(v25, (uint64_t)&unk_256A60120, (uint64_t)v28);
    swift_release();
  }
  if (*(_QWORD *)(v54 + 16))
  {
    v29 = (uint64_t *)(v13 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetFriendshipStatus);
    swift_beginAccess();
    v30 = *v29;
    swift_bridgeObjectRetain();
    v31 = swift_bridgeObjectRetain();
    v32 = sub_23BAAA8E8(v31, (uint64_t)v50, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v34 = (unsigned __int8 *)(v32 + 48);
      do
      {
        v35 = *((_QWORD *)v34 - 2);
        v36 = *((_QWORD *)v34 - 1);
        v37 = *v34;
        v34 += 24;
        swift_bridgeObjectRetain();
        sub_23BAD454C((uint64_t)v49, v35, v36, v37);
        swift_bridgeObjectRelease();
        --v33;
      }
      while (v33);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    v38 = *(_QWORD *)(v30 + 16);
    swift_bridgeObjectRelease();
    if (v38)
    {
      return sub_23BA60608();
    }
    else
    {
      v40 = sub_23BB8AA18();
      v41 = (uint64_t)v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v46, 1, 1, v40);
      sub_23BB8A9F4();
      v42 = v47;
      swift_retain();
      v43 = sub_23BB8A9E8();
      v44 = (_QWORD *)swift_allocObject();
      v44[2] = v43;
      v44[3] = v14;
      v44[4] = v42;
      sub_23B989F54(v41, (uint64_t)&unk_256A60130, (uint64_t)v44);
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23BAAB8F0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BAAB954;
  return sub_23BA71514();
}

uint64_t sub_23BAAB954()
{
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAAB9C4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  __int16 v14;
  __int16 v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _BYTE v19[8];

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v16 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v7)
      return swift_release();
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v2;
    if (!v17)
    {
      v2 = v16 + 1;
      if (v16 + 1 >= v7)
        return swift_release();
      v17 = *(_QWORD *)(v3 + 8 * v2);
      if (!v17)
      {
        v2 = v16 + 2;
        if (v16 + 2 >= v7)
          return swift_release();
        v17 = *(_QWORD *)(v3 + 8 * v2);
        if (!v17)
        {
          v2 = v16 + 3;
          if (v16 + 3 >= v7)
            return swift_release();
          v17 = *(_QWORD *)(v3 + 8 * v2);
          if (!v17)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v17 - 1) & v17;
    v9 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 24 * v9;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    v13 = *(unsigned __int8 *)(v10 + 16);
    if (*(_BYTE *)(v10 + 17))
      v14 = 256;
    else
      v14 = 0;
    v15 = v14 | v13;
    swift_bridgeObjectRetain();
    sub_23BAD3920((uint64_t)v19, v11, v12, v15);
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v7)
    return swift_release();
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v2 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v2 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v17 = *(_QWORD *)(v3 + 8 * v2);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23BAABB58(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];
  unsigned __int16 v18;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v14 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v2;
    if (!v15)
    {
      v2 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v2);
      if (!v15)
      {
        v2 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v2);
        if (!v15)
        {
          v2 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v2);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v15 - 1) & v15;
    v9 = __clz(__rbit64(v15)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 24 * v9;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    v13 = *(_WORD *)(v10 + 16);
    sub_23B9906EC(*(_QWORD *)v10, v12, v13);
    sub_23BAD4728((uint64_t)v17, v11, v12, v13);
    result = sub_23B9906D4(v17[0], v17[1], v18);
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v2 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v2);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23BAABCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  sub_23BB8A9F4();
  v6[9] = sub_23BB8A9E8();
  v6[10] = sub_23BB8A988();
  v6[11] = v7;
  return swift_task_switch();
}

uint64_t sub_23BAABD54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16))
  {
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v7;
    *v7 = v0;
    v7[1] = sub_23BAABF0C;
    return sub_23BA74480();
  }
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BAAD2A4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD588);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_23BAAA8E8(v2, v0 + 16, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 104) = v3;
    swift_release();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v4;
    *v4 = v0;
    v4[1] = sub_23BAAC0CC;
    v5 = v3;
    v6 = 0;
    return sub_23BA3907C(v5, v6);
  }
  swift_release();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_23BAAD2A4(v9, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD40C);
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = sub_23BAAA8E8(v10, v0 + 40, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 128) = v11;
    swift_release();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v12;
    *v12 = v0;
    v12[1] = sub_23BAAC46C;
    v5 = v11;
    v6 = 1;
    return sub_23BA3907C(v5, v6);
  }
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAABF0C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAABF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BAAD2A4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD588);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_23BAAA8E8(v2, v0 + 16, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 104) = v3;
    swift_release();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v4;
    *v4 = v0;
    v4[1] = sub_23BAAC0CC;
    v5 = v3;
    v6 = 0;
    return sub_23BA3907C(v5, v6);
  }
  swift_release();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23BAAD2A4(v7, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD40C);
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = sub_23BAAA8E8(v8, v0 + 40, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 128) = v9;
    swift_release();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v10;
    *v10 = v0;
    v10[1] = sub_23BAAC46C;
    v5 = v9;
    v6 = 1;
    return sub_23BA3907C(v5, v6);
  }
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAAC0CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BAAC138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BAAD2A4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD40C);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_23BAAA8E8(v2, v0 + 40, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 128) = v3;
    swift_release();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v4;
    *v4 = v0;
    v4[1] = sub_23BAAC46C;
    return sub_23BA3907C(v3, 1);
  }
  else
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BAAC218()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 120);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B7F0, &v13);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAAC46C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BAAC4D8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAAC508()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 144);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B7F0, &v13);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAAC75C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BA13CD0;
  return sub_23BA72E84();
}

uint64_t sub_23BAAC7C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  _BYTE v42[8];
  _BYTE v43[16];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v40[0] = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BEE4B08];
  v46 = MEMORY[0x24BEE4B08];
  v44 = MEMORY[0x24BEE4B08];
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v41 = 0;
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_18;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(a1 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_17;
    v11 = 2;
    if (v8 <= 2)
      goto LABEL_19;
    v10 = *(_QWORD *)(a1 + 72);
    if (v10)
      goto LABEL_17;
    v11 = 3;
    if (v8 <= 3)
      goto LABEL_19;
    v10 = *(_QWORD *)(a1 + 80);
    if (v10)
    {
LABEL_17:
      v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v12 = 4;
    if (v8 > 4)
    {
      v10 = *(_QWORD *)(a1 + 88);
      if (v10)
      {
        v11 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v11 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          JUMPOUT(0x23BAACD18);
        }
        if (v11 >= v8)
          break;
        v10 = *(_QWORD *)(a1 + 56 + 8 * v11);
        ++v12;
        if (v10)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  swift_release();
  v13 = v40[1];
  if ((v41 & 1) != 0)
    sub_23BA71240();
  v14 = v40[0];
  if ((v41 & 0x100000000) != 0)
    sub_23BA72BC4();
  v15 = v44;
  if (*(_QWORD *)(v44 + 16))
  {
    v16 = v13 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetLocations;
    swift_beginAccess();
    v17 = swift_bridgeObjectRetain();
    sub_23BADC2B4(v17);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(*(_QWORD *)v16 + 16);
    v19 = sub_23BB8AA18();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 1, 1, v19);
    sub_23BB8A9F4();
    swift_retain();
    v20 = sub_23BB8A9E8();
    if (v18)
    {
      v21 = (_QWORD *)swift_allocObject();
      v22 = MEMORY[0x24BEE6930];
      v21[2] = v20;
      v21[3] = v22;
      v21[4] = v15;
      v21[5] = v13;
      swift_bridgeObjectRetain();
      v23 = &unk_256A600F0;
      v24 = v14;
      v25 = v21;
    }
    else
    {
      v25 = (_QWORD *)swift_allocObject();
      v26 = MEMORY[0x24BEE6930];
      v25[2] = v20;
      v25[3] = v26;
      v25[4] = v13;
      v23 = &unk_256A60110;
      v24 = v14;
    }
    sub_23B989F54(v24, (uint64_t)v23, (uint64_t)v25);
    swift_release();
  }
  if (*(_QWORD *)(v46 + 16))
  {
    v27 = swift_bridgeObjectRetain();
    v28 = sub_23BAAA8E8(v27, (uint64_t)v43, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v13 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetFriendshipStatus;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v29 + 16))
    {
      v30 = *(_QWORD *)(v28 + 16);
      if (v30)
      {
        swift_bridgeObjectRetain();
        v31 = (unsigned __int8 *)(v28 + 48);
        do
        {
          v32 = *((_QWORD *)v31 - 2);
          v33 = *((_QWORD *)v31 - 1);
          v34 = *v31;
          v31 += 24;
          swift_bridgeObjectRetain();
          sub_23BAE01C8(v32, v33, v34, (uint64_t)v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease();
      }
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(*(_QWORD *)v29 + 16))
    {
      return sub_23BA60608();
    }
    else
    {
      v36 = sub_23BB8AA18();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v14, 1, 1, v36);
      sub_23BB8A9F4();
      swift_retain();
      v37 = sub_23BB8A9E8();
      v38 = (_QWORD *)swift_allocObject();
      v39 = MEMORY[0x24BEE6930];
      v38[2] = v37;
      v38[3] = v39;
      v38[4] = v13;
      sub_23B989F54(v14, (uint64_t)&unk_256A60100, (uint64_t)v38);
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23BAACD28()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BAAB954;
  return sub_23BA75D6C();
}

uint64_t sub_23BAACD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[4] = a4;
  v5[5] = a5;
  sub_23BB8A9F4();
  v5[6] = sub_23BB8A9E8();
  v5[7] = sub_23BB8A988();
  v5[8] = v6;
  return swift_task_switch();
}

uint64_t sub_23BAACDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BAAD2A4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD588);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_23BAAA8E8(v2, v0 + 16, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 72) = v3;
    swift_release();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v4;
    *v4 = v0;
    v4[1] = sub_23BAACF6C;
    v5 = v3;
    v6 = 0;
    return sub_23BA39668(v5, v6);
  }
  swift_release();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23BAAD2A4(v7, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD40C);
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = sub_23BAAA8E8(v8, v0 + 24, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 96) = v9;
    swift_release();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v10;
    *v10 = v0;
    v10[1] = sub_23BAAD1A0;
    v5 = v9;
    v6 = 1;
    return sub_23BA39668(v5, v6);
  }
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAACF6C()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23BAACFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BAAD2A4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD40C);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_23BAAA8E8(v2, v0 + 24, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 96) = v3;
    swift_release();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_23BAAD1A0;
    return sub_23BA39668(v3, 1);
  }
  else
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BAAD0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BAAD2A4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23BAAD40C);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = sub_23BAAA8E8(v2, v0 + 24, (uint64_t (*)(uint64_t))sub_23BAE6494, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23BAE6538);
    *(_QWORD *)(v0 + 96) = v3;
    swift_release();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_23BAAD1A0;
    return sub_23BA39668(v3, 1);
  }
  else
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BAAD1A0()
{
  void *v0;

  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23BAAD210()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAAD240()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BAAB954;
  return sub_23BA7406C();
}

uint64_t sub_23BAAD2A4(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x24260D9B4](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_23BAAD40C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 48) + 24 * v14 + 17) == 1)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23BAE495C(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23BAAD588(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if ((*(_BYTE *)(*(_QWORD *)(a3 + 48) + 24 * v14 + 17) & 1) == 0)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23BAE495C(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23BAAD700(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  char v7;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v4)
      return 0;
    return v3 ^ v5 ^ 1u;
  }
  v7 = sub_23BB8B1A4();
  result = 0;
  if ((v7 & 1) != 0 && v2 == v4)
    return v3 ^ v5 ^ 1u;
  return result;
}

void sub_23BAAD788(uint64_t a1)
{
  __asm { BR              X10 }
}

BOOL sub_23BAAD7CC()
{
  unsigned int v0;
  uint64_t v1;
  unsigned __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (v0 >= 0x4000 || (v5 == v3 ? (v6 = v4 == v1) : (v6 = 0), !v6 && (sub_23BB8B1A4() & 1) == 0))
  {
    sub_23B9906EC(v3, v1, v0);
    sub_23B9906EC(v5, v4, v2);
    sub_23B9906D4(v5, v4, v2);
    sub_23B9906D4(v3, v1, v0);
    return 0;
  }
  sub_23B9906EC(v3, v1, v0);
  sub_23B9906EC(v5, v4, v2);
  sub_23B9906D4(v5, v4, v2);
  sub_23B9906D4(v3, v1, v0);
  return v0 == v2;
}

uint64_t sub_23BAAD9EC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAADA20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BAACD8C(a1, v4, v5, v7, v6);
}

uint64_t sub_23BAADA9C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BAAD240();
}

uint64_t sub_23BAADB0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BAACD28();
}

uint64_t sub_23BAADB78(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23BAADB84()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BAADBC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B97C964;
  return sub_23BAABCE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23BAADC44()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BAAC75C();
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAADCE0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BAAB8F0();
}

ValueMetadata *_s16SubscriptionDataO10DirectionsVMa()
{
  return &_s16SubscriptionDataO10DirectionsVN;
}

ValueMetadata *_s16SubscriptionDataO10FriendshipVMa()
{
  return &_s16SubscriptionDataO10FriendshipVN;
}

unint64_t sub_23BAADD78()
{
  unint64_t result;

  result = qword_256A60148;
  if (!qword_256A60148)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB934E4, &_s16SubscriptionDataO10FriendshipVN);
    atomic_store(result, (unint64_t *)&qword_256A60148);
  }
  return result;
}

unint64_t sub_23BAADDC0()
{
  unint64_t result;

  result = qword_256A60150;
  if (!qword_256A60150)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9354C, &_s16SubscriptionDataO10DirectionsVN);
    atomic_store(result, (unint64_t *)&qword_256A60150);
  }
  return result;
}

uint64_t sub_23BAADE08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for RepositoryFactory();
  v0 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  type metadata accessor for RepositoryFactory.Barrier();
  v1 = swift_allocObject();
  result = swift_defaultActor_initialize();
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 112) = 1;
  *(_QWORD *)(v1 + 120) = v3;
  v4 = MEMORY[0x24BEE4B00];
  v0[14] = v1;
  v0[15] = &unk_256A60340;
  v0[16] = 0;
  v0[17] = v4;
  qword_256A73D88 = (uint64_t)v0;
  return result;
}

uint64_t sub_23BAADE84()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for SessionLive();
  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23BAADEE4;
  return SessionLive.init()();
}

uint64_t sub_23BAADEE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;

  v5 = *v1;
  swift_task_dealloc();
  v3 = sub_23BA44AD8(&qword_256A60348, 255, (uint64_t (*)(uint64_t))type metadata accessor for SessionLive, (uint64_t)&unk_23BB91368);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
}

uint64_t sub_23BAADF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_23BAADF74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 112);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

void sub_23BAADFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23BA44AD8(&qword_256A60338, 255, (uint64_t (*)(uint64_t))type metadata accessor for RepositoryFactory.Barrier, (uint64_t)&unk_23BB93610);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 96) = v5;
      *v5 = v0;
      v5[1] = sub_23BAAE094;
      sub_23BB8B168();
    }
    else
    {
      swift_task_switch();
    }
  }
}

uint64_t sub_23BAAE094()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAAE0E8()
{
  return swift_task_switch();
}

uint64_t sub_23BAAE0FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t (*v11)(void);

  v1 = v0[10];
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 136);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = v0[9];
    if (v3)
      v4 = v0[9];
    else
      v4 = 0xE400000000000000;
    if (v3)
      v5 = v0[8];
    else
      v5 = 1701736302;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_23B984B34(v5, v4);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v0[18] = v8;
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = (uint64_t (*)(void))(**(int **)(v0[10] + 120) + *(_QWORD *)(v0[10] + 120));
  v10 = (_QWORD *)swift_task_alloc();
  v0[13] = v10;
  *v10 = v0;
  v10[1] = sub_23BAAE230;
  return v11();
}

uint64_t sub_23BAAE230(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAAE290()
{
  uint64_t v0;

  sub_23BB8A9F4();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 128) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAAE310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[15];
  v2 = v0[14];
  v3 = v0[9];
  v4 = v0[8];
  swift_release();
  if (!v3)
  {
    v4 = 1701736302;
    v3 = 0xE400000000000000;
  }
  type metadata accessor for Repository();
  swift_allocObject();
  v0[17] = sub_23BA5D6CC(v2, v1, v4, v3);
  return swift_task_switch();
}

uint64_t sub_23BAAE3B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v1 = v0[17];
  v2 = v0[9];
  v3 = v0[10];
  if (v2)
    v4 = v0[9];
  else
    v4 = 0xE400000000000000;
  if (v2)
    v5 = v0[8];
  else
    v5 = 1701736302;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD *)(v3 + 136);
  *(_QWORD *)(v3 + 136) = 0x8000000000000000;
  sub_23BAAFC60(v1, v5, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 136) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v0[18] = v0[17];
  return swift_task_switch();
}

uint64_t sub_23BAAE49C()
{
  uint64_t v0;

  sub_23BAAE61C(1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_23BAAE4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60330);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v9 = (unint64_t *)(a2 + 120);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 120);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 120) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_23BB6449C(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_23BB6449C(v12 > 1, v13 + 1, 1, v10);
    *v9 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

uint64_t sub_23BAAE61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60330);
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v1 + 112);
  v10 = __OFADD__(v9, a1);
  v11 = v9 + a1;
  if (v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)(v1 + 112) = v11;
  if (a1 < 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (a1)
  {
    v12 = v1 + 120;
    result = swift_beginAccess();
    while (*(_QWORD *)(*(_QWORD *)v12 + 16))
    {
      result = swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)v12 + 16))
      {
        __break(1u);
        goto LABEL_10;
      }
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v4 + 16))(v8, *(_QWORD *)v12 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
      sub_23BAB06BC(0, 1);
      swift_endAccess();
      sub_23BB8A9A0();
      result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v8, v3);
      if (!--a1)
        return result;
    }
  }
  return result;
}

uint64_t sub_23BAAE758()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23BAAE77C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for RepositoryFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RepositoryFactory.Barrier()
{
  return objc_opt_self();
}

uint64_t sub_23BAAE7F0(uint64_t a1, uint64_t a2)
{
  return sub_23BA44AD8(&qword_256A60328, a2, (uint64_t (*)(uint64_t))type metadata accessor for RepositoryFactory, (uint64_t)&unk_23BB93678);
}

uint64_t sub_23BAAE81C()
{
  if (qword_256A58CF0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_23BAAE85C()
{
  type metadata accessor for RepositoryFactory();
  return sub_23BB8ADCC();
}

uint64_t sub_23BAAE880(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF270(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_23B984880, (void (*)(void))sub_23B986C94, (void (*)(void))sub_23BB49AF4);
}

uint64_t sub_23BAAE8A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23B984880(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
        return sub_23BA44B18(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B986CA0();
      goto LABEL_7;
    }
    sub_23BB49B00(v15, a4 & 1);
    v22 = sub_23B984880(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23BAB0230(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAE9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_23B984880(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_23B986EE4();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7] + 24 * v16;

      result = swift_bridgeObjectRelease();
      *(_QWORD *)v23 = a1;
      *(_QWORD *)(v23 + 8) = a2;
      *(_QWORD *)(v23 + 16) = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (_QWORD *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23BB49E90(v19, a6 & 1);
  v25 = sub_23B984880(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAEB70(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_23B984904(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23B9870C8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_23BB4A1E0(result, a3 & 1);
  result = sub_23B984904(v7);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAECA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23B984880(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_23BAB08AC(a1, v18[7] + 224 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B987268();
      goto LABEL_7;
    }
    sub_23BB4A4B0(v15, a4 & 1);
    v20 = sub_23B984880(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_23BAB08AC(a1, v18[7] + 224 * v12);
LABEL_11:
      sub_23BAB02C0(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAEDCC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v8 = *v3;
  v10 = sub_23B984960((double *)a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_23B987458();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v21 = v16[6] + 72 * v10;
    *(_OWORD *)v21 = *(_OWORD *)a2;
    v22 = *(_OWORD *)(a2 + 16);
    v23 = *(_OWORD *)(a2 + 32);
    v24 = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(v21 + 64) = *(_BYTE *)(a2 + 64);
    *(_OWORD *)(v21 + 32) = v23;
    *(_OWORD *)(v21 + 48) = v24;
    *(_OWORD *)(v21 + 16) = v22;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v25 = v16[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v16[2] = v27;
      return sub_23BA9DF68(a2);
    }
    goto LABEL_14;
  }
  sub_23BB4A7F0(v13, a3 & 1);
  v19 = sub_23B984960((double *)a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = v19;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAEF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;

  v6 = v5;
  v12 = *v5;
  v14 = sub_23B9849D0(a2, a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_23B987650();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      return sub_23BAB0870(a1, v20[7] + 136 * v14);
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = v20[6] + 24 * v14;
    *(_QWORD *)v24 = a2;
    *(_QWORD *)(v24 + 8) = a3;
    *(_BYTE *)(v24 + 16) = a4;
    v25 = v20[7] + 136 * v14;
    *(_OWORD *)v25 = *(_OWORD *)a1;
    v26 = *(_OWORD *)(a1 + 16);
    v27 = *(_OWORD *)(a1 + 32);
    v28 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v25 + 48) = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v25 + 64) = v28;
    *(_OWORD *)(v25 + 16) = v26;
    *(_OWORD *)(v25 + 32) = v27;
    v29 = *(_OWORD *)(a1 + 80);
    v30 = *(_OWORD *)(a1 + 96);
    v31 = *(_OWORD *)(a1 + 112);
    *(_QWORD *)(v25 + 128) = *(_QWORD *)(a1 + 128);
    *(_OWORD *)(v25 + 96) = v30;
    *(_OWORD *)(v25 + 112) = v31;
    *(_OWORD *)(v25 + 80) = v29;
    v32 = v20[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (!v33)
    {
      v20[2] = v34;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23BB4ABA8(v17, a5 & 1);
  v22 = sub_23B9849D0(a2, a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      return sub_23BAB0870(a1, v20[7] + 136 * v14);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAF0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char v25;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_23B9849D0(a2, a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
        return sub_23BA44B18(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_23B98787C();
      goto LABEL_7;
    }
    sub_23BB4AFA8(v17, a5 & 1);
    v24 = sub_23B9849D0(a2, a3, a4);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23BAB03C4(v14, a2, a3, a4, a1, v20, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAF24C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF270(a1, a2, a3, a4, sub_23B984880, (void (*)(void))sub_23B987A4C, (void (*)(void))sub_23BB4B6DC);
}

uint64_t sub_23BAAF270(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(uint64_t, uint64_t), void (*a6)(void), void (*a7)(void))
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v11 = v7;
  v15 = *v7;
  v17 = a5(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    a6();
LABEL_7:
    v23 = (_QWORD *)*v11;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];
      result = swift_release();
      *(_QWORD *)(v24 + 8 * v17) = a1;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (_QWORD *)(v23[6] + 16 * v17);
    *v28 = a2;
    v28[1] = a3;
    *(_QWORD *)(v23[7] + 8 * v17) = a1;
    v29 = v23[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v23[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  a7();
  v26 = a5(a2, a3);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v11;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAF3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_23BAAF474(a1, a2, a3, a4, a5, sub_23B9849D0, (void (*)(void))sub_23B987C04, (void (*)(void))sub_23BB4BA08);
}

uint64_t sub_23BAAF434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_23BAAF474(a1, a2, a3, a4, a5, sub_23B9849D0, (void (*)(void))sub_23B987C10, (void (*)(void))sub_23BB4BA14);
}

uint64_t sub_23BAAF474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t), void (*a7)(void), void (*a8)(void))
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v11 = v8;
  v16 = *v8;
  v18 = a6(a2, a3, a4);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v23 >= v21 && (a5 & 1) == 0)
  {
    a7();
LABEL_7:
    v24 = (_QWORD *)*v11;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7];
      result = swift_release();
      *(_QWORD *)(v25 + 8 * v18) = a1;
      return result;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    v29 = v24[6] + 24 * v18;
    *(_QWORD *)v29 = a2;
    *(_QWORD *)(v29 + 8) = a3;
    *(_BYTE *)(v29 + 16) = a4;
    *(_QWORD *)(v24[7] + 8 * v18) = a1;
    v30 = v24[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v24[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  a8();
  v27 = a6(a2, a3, a4);
  if ((v22 & 1) == (v28 & 1))
  {
    v18 = v27;
    v24 = (_QWORD *)*v11;
    if ((v22 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAF614(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B987DD4, (void (*)(void))sub_23BB4BD5C);
}

uint64_t sub_23BAAF628(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B987DE0, (void (*)(void))sub_23BB4BD68);
}

uint64_t sub_23BAAF63C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B987DEC, (void (*)(void))sub_23BB4BD74);
}

uint64_t sub_23BAAF650(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B987DF8, (void (*)(void))sub_23BB4BD80);
}

uint64_t sub_23BAAF664(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_23B984B98(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23B987E04();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_23BB4BD8C(result, a3 & 1);
  result = sub_23B984B98(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAF798(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for RepositorySubscriber();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23B984B9C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23B987FA4();
    goto LABEL_7;
  }
  sub_23BB4BD98(v17, a3 & 1);
  v23 = sub_23B984B9C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_23BB8B1E0();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23B989CE8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  return sub_23BAB032C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23BAAF8F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B9881DC, (void (*)(void))sub_23BB4C150);
}

uint64_t sub_23BAAF908(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B9881E8, (void (*)(void))sub_23BB4C15C);
}

uint64_t sub_23BAAF91C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23BAAF930(a1, a2, a3, a4, (void (*)(void))sub_23B9881F4, (void (*)(void))sub_23BB4C168);
}

uint64_t sub_23BAAF930(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v9 = v6;
  v14 = *v6;
  v16 = sub_23B984880(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (_QWORD *)(v22[6] + 16 * v16);
    *v27 = a2;
    v27[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v28 = v22[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v22[2] = v30;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  a6();
  v25 = sub_23B984880(a2, a3);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAFAA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, char a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;

  v9 = v8;
  v16 = *v8;
  v18 = sub_23B9849D4(a5, a6, a7);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a8 & 1) != 0)
    goto LABEL_7;
  if (v23 >= v21 && (a8 & 1) == 0)
  {
    sub_23B9883AC();
LABEL_7:
    v24 = (_QWORD *)*v9;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7] + 32 * v18;
      result = sub_23B9A13A4(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(void **)(v25 + 16));
      *(_QWORD *)v25 = a1;
      *(_QWORD *)(v25 + 8) = a2;
      *(_QWORD *)(v25 + 16) = a3;
      *(_BYTE *)(v25 + 24) = a4;
      return result;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    v29 = v24[6] + 24 * v18;
    *(_QWORD *)v29 = a5;
    *(_QWORD *)(v29 + 8) = a6;
    *(_BYTE *)(v29 + 16) = a7;
    v30 = v24[7] + 32 * v18;
    *(_QWORD *)v30 = a1;
    *(_QWORD *)(v30 + 8) = a2;
    *(_QWORD *)(v30 + 16) = a3;
    *(_BYTE *)(v30 + 24) = a4;
    v31 = v24[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (!v32)
    {
      v24[2] = v33;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23BB4C494(v21, a8 & 1);
  v27 = sub_23B9849D4(a5, a6, a7);
  if ((v22 & 1) == (v28 & 1))
  {
    v18 = v27;
    v24 = (_QWORD *)*v9;
    if ((v22 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAFC60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23B984B34(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23B9885A8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23BB4C818(v15, a4 & 1);
  v21 = sub_23B984B34(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAFDBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  return sub_23BAAFDF4(a1, a2, a3, a4, a5, (void (*)(void))sub_23B98875C, (void (*)(void))sub_23BB4CB2C, type metadata accessor for SessionFollowerState);
}

uint64_t sub_23BAAFDD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  return sub_23BAAFDF4(a1, a2, a3, a4, a5, (void (*)(void))sub_23B9889D8, (void (*)(void))sub_23BB4CB40, type metadata accessor for SessionFollowingState);
}

uint64_t sub_23BAAFDF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, void (*a6)(void), void (*a7)(void), uint64_t (*a8)(_QWORD))
{
  _QWORD *v8;
  _QWORD **v11;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;

  v11 = (_QWORD **)v8;
  v16 = (_QWORD *)*v8;
  v18 = sub_23B9849D4(a2, a3, a4);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = v16[3];
    if (v23 >= v21 && (a5 & 1) != 0)
    {
LABEL_7:
      v24 = *v11;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = v24[7];
        v26 = a8(0);
        return sub_23BA44B18(a1, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a8);
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a5 & 1) == 0)
    {
      a6();
      goto LABEL_7;
    }
    a7();
    v28 = sub_23B9849D4(a2, a3, a4);
    if ((v22 & 1) == (v29 & 1))
    {
      v18 = v28;
      v24 = *v11;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23BAB03C4(v18, a2, a3, a4, a1, v24, a8);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BAAFF68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  return sub_23BAAFDF4(a1, a2, a3, a4, a5, (void (*)(void))sub_23B9889EC, (void (*)(void))sub_23BB4CEF4, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
}

uint64_t sub_23BAAFF84(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23B984B34(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_23BB88984();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B988A00();
      goto LABEL_7;
    }
    sub_23BB4CF08(v15, a4 & 1);
    v22 = sub_23B984B34(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23BAB0464(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

void sub_23BAB00C0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v4 = v3;
  v8 = *v3;
  v10 = sub_23B984960((double *)a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_23B988C5C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = v16[6] + 72 * v10;
    *(_OWORD *)v20 = *(_OWORD *)a2;
    v21 = *(_OWORD *)(a2 + 16);
    v22 = *(_OWORD *)(a2 + 32);
    v23 = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(v20 + 64) = *(_BYTE *)(a2 + 64);
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v24 = v16[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v16[2] = v26;
      sub_23BA9DF68(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_23BB4D270(v13, a3 & 1);
  v18 = sub_23B984960((double *)a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23BB8B1E0();
  __break(1u);
}

uint64_t sub_23BAB0230(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  result = sub_23B989CA4(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for MapsDirectionsProvider.DirectionsState);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_23BAB02C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23B989684(a4, a5[7] + 224 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23BAB032C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for RepositorySubscriber();
  result = sub_23B989CA4(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23BAB03C4(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a6[6] + 24 * a1;
  *(_QWORD *)v11 = a2;
  *(_QWORD *)(v11 + 8) = a3;
  *(_BYTE *)(v11 + 16) = a4;
  v12 = a6[7];
  v13 = a7(0);
  result = sub_23B989CA4(a5, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a7);
  v15 = a6[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a6[2] = v17;
  return result;
}

uint64_t sub_23BAB0464(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_23BB88984();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_23BAB04F4(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_23BB631E8(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = *(_QWORD *)(type metadata accessor for SerialTaskQueue.WorkItem(0) - 8);
  v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_33;
  if (v19 < 0)
  {
LABEL_35:
    result = sub_23BB8B00C();
    __break(1u);
    return result;
  }
  v20 = v17 + v16;
  v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v9);
  v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1)
    sub_23B989CE8(a3, v17, type metadata accessor for SerialTaskQueue.WorkItem);
  return sub_23BAB08E8(a3);
}

uint64_t sub_23BAB06BC(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_23BB6449C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A60330) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BAB0868(uint64_t a1)
{
  uint64_t v1;

  return sub_23BAAE4D4(a1, v1);
}

uint64_t sub_23BAB0870(uint64_t a1, uint64_t a2)
{
  _s13LocationStateVwta(a2, a1);
  return a2;
}

uint64_t sub_23BAB08AC(uint64_t a1, uint64_t a2)
{
  _s11BeaconStateOwta(a2, a1);
  return a2;
}

uint64_t sub_23BAB08E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BAB092C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[1] = a6;
  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))((char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return sub_23BB892CC();
}

uint64_t sub_23BAB0A2C()
{
  unsigned __int8 v1;

  sub_23BAB19F0();
  sub_23BB8974C();
  return v1;
}

uint64_t sub_23BAB0A64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_23BAB19F0();
  result = sub_23BB8974C();
  *a1 = v3;
  return result;
}

uint64_t sub_23BAB0AB0()
{
  sub_23BAB19F0();
  return sub_23BB89758();
}

void sub_23BAB0AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  v8 = type metadata accessor for BubbleMessageTemplateBackgroundView(255, a6, a8, a4);
  MEMORY[0x24260D8DC](&unk_23BB93860, v8);
  type metadata accessor for BubbleMessageTemplate();
}

uint64_t sub_23BAB0B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t result;
  char v16;

  v10 = (uint64_t *)(v1 + *(int *)(a1 + 60));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  swift_storeEnumTagMultiPayload();
  v11 = v1 + *(int *)(a1 + 64);
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  *(_QWORD *)v1 = v8;
  *(_QWORD *)(v1 + 8) = v7;
  v12 = *(_QWORD *)(v2 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v6;
  *((_QWORD *)v14 + 3) = v2;
  *((_QWORD *)v14 + 4) = v5;
  *((_QWORD *)v14 + 5) = v4;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v14[v13], v3, v2);
  *(_QWORD *)(v1 + 16) = sub_23BAB19D0;
  *(_QWORD *)(v1 + 24) = v14;
  *(_BYTE *)(v1 + 32) = v16;
  return result;
}

uint64_t type metadata accessor for BubbleMessageTemplateBackgroundView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BubbleMessageTemplateBackgroundView);
}

void type metadata accessor for BubbleMessageTemplate()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23BAB0C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = v1 + *(int *)(a1 + 64);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_23BA2C1E8(*(_QWORD *)v2, v4);
  v5 = sub_23BA83F60(v3, v4);
  sub_23B9C62D4(v3, v4);
  return v5 & 1;
}

uint64_t sub_23BAB0CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  _QWORD v55[3];

  v47 = a2;
  v39 = *(_QWORD *)(a1 + 24);
  sub_23BB894AC();
  v38 = *(_QWORD *)(a1 + 16);
  sub_23BB894AC();
  sub_23BB894AC();
  swift_getTupleTypeMetadata2();
  v4 = sub_23BB8A364();
  v37[1] = MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v4);
  v5 = sub_23BB8A178();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v37 - v7;
  v9 = sub_23BB894AC();
  v10 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  v45 = v10;
  MEMORY[0x24BDAC7A8](v9, v9);
  v37[0] = (char *)v37 - v11;
  v40 = sub_23BB894AC();
  v46 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v12);
  v43 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v44 = (uint64_t)v37 - v16;
  v17 = sub_23BB894A0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_BYTE *)(v2 + 32);
  sub_23BA84118((uint64_t)v21);
  sub_23BA132F4((uint64_t)v21, 2, v22);
  v24 = v23;
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  v48 = v38;
  v49 = v39;
  v50 = *(_OWORD *)(a1 + 32);
  v51 = v2;
  v52 = v24;
  v53 = v26;
  sub_23BB8A2F8();
  sub_23BB8A16C();
  sub_23BAB0C60(a1);
  sub_23BB8A2F8();
  v27 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4750], v5);
  v28 = v37[0];
  sub_23BB89EA8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v5);
  sub_23BAB0C60(a1);
  sub_23BB8A2F8();
  v55[0] = v27;
  v55[1] = MEMORY[0x24BDEBEE0];
  v29 = MEMORY[0x24BDED308];
  v35 = v41;
  v36 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v41, v55);
  v30 = (uint64_t)v43;
  sub_23BB89EB4();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v28, v35);
  v54[0] = v36;
  v54[1] = MEMORY[0x24BDEDBB8];
  v31 = v40;
  MEMORY[0x24260D8DC](v29, v40, v54);
  v32 = v44;
  sub_23BAC5FD8(v30, v31, v44);
  v33 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v33(v30, v31);
  sub_23BAC2FCC(v32, v31, v47);
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v32, v31);
}

void sub_23BAB1118(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];

  v43 = a4;
  v52 = a6;
  v9 = *(_QWORD *)(a2 - 8);
  v39 = a2;
  v47 = v9;
  MEMORY[0x24BDAC7A8](a1, a2);
  v40 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23BB894AC();
  v12 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  v49 = v12;
  MEMORY[0x24BDAC7A8](v11, v11);
  v42 = (char *)v38 - v13;
  v44 = sub_23BB894AC();
  v50 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v14);
  v51 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v45 = (char *)v38 - v18;
  MEMORY[0x24BDAC7A8](v19, v20);
  v48 = (char *)v38 - v21;
  v22 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23BB894AC();
  v38[0] = *(_QWORD *)(v27 - 8);
  v28 = v38[0];
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = (char *)v38 - v35;
  v38[1] = (char *)v38 - v35;
  (*(void (**)(__n128))(a1 + 16))(v34);
  sub_23BB8A2F8();
  sub_23BB89EB4();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v26, a3);
  v57[0] = a5;
  v57[1] = MEMORY[0x24BDEDBB8];
  v38[2] = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v27, v57);
  sub_23BAC5FD8((uint64_t)v31, v27, (uint64_t)v36);
  v41 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  v37 = v41(v31, v27);
  (*(void (**)(uint64_t))a1)(v37);
  v53 = v39;
  v54 = a3;
  v55 = v43;
  v56 = a5;
  type metadata accessor for BubbleMessageTemplate();
}

uint64_t sub_23BAB1424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;

  sub_23BAB0C60(a1);
  sub_23BB8A2F8();
  v8 = *(_QWORD *)(v6 - 304);
  sub_23BB89EA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 264) + 8))(v2, v1);
  sub_23BAB0C60(a1);
  sub_23BB8A2F8();
  v9 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v6 - 168) = v5;
  *(_QWORD *)(v6 - 160) = v9;
  v10 = MEMORY[0x24BDED308];
  v24 = *(_QWORD *)(v6 - 272);
  v25 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v24, v6 - 168);
  v11 = *(_QWORD *)(v6 - 280);
  sub_23BB89EB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 248) + 8))(v8, v24);
  *(_QWORD *)(v6 - 184) = v25;
  *(_QWORD *)(v6 - 176) = MEMORY[0x24BDEDBB8];
  v12 = v10;
  v13 = *(_QWORD *)(v6 - 288);
  v14 = MEMORY[0x24260D8DC](v12, v13, v6 - 184);
  v15 = *(_QWORD *)(v6 - 256);
  v16 = v11;
  sub_23BAC5FD8(v11, v13, v15);
  v17 = *(_QWORD *)(v6 - 240);
  v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v18(v16, v13);
  v19 = *(_QWORD *)(v6 - 344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 352) + 16))(v4, v19, v3);
  *(_QWORD *)(v6 - 152) = v4;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v21 = *(_QWORD *)(v6 - 232);
  v20(v21, v15, v13);
  *(_QWORD *)(v6 - 144) = v21;
  *(_QWORD *)(v6 - 200) = v3;
  *(_QWORD *)(v6 - 192) = v13;
  *(_QWORD *)(v6 - 216) = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 208) = v14;
  sub_23BAF66B8((uint64_t *)(v6 - 152), 2uLL, v6 - 200);
  v18(v15, v13);
  v22 = *(void (**)(uint64_t, uint64_t))(v6 - 312);
  v22(v19, v3);
  v18(v21, v13);
  return ((uint64_t (*)(uint64_t, uint64_t))v22)(v4, v3);
}

uint64_t sub_23BAB1678@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_23BAB19F0();
  result = sub_23BB8974C();
  *a1 = v3;
  return result;
}

uint64_t sub_23BAB16C4()
{
  sub_23BAB19F0();
  return sub_23BB89758();
}

uint64_t sub_23BAB1710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[6];

  v3 = v2;
  v27 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_23BAB2568();
  v7 = *(_QWORD *)(a1 + 24);
  v8 = MEMORY[0x24BDF52F8];
  v28[2] = MEMORY[0x24BDF52F8];
  v28[3] = v5;
  v28[4] = v6;
  v28[5] = v7;
  v9 = sub_23BB892D8();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v24 - v11;
  v13 = sub_23BB894AC();
  v26 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v24 - v19;
  sub_23BAB092C(v3, 256, v8, v5, v6, v7);
  sub_23BB894C4();
  sub_23BB89BA8();
  v21 = MEMORY[0x24260D8DC](MEMORY[0x24BDEB358], v9);
  sub_23BB89E00();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
  v28[0] = v21;
  v28[1] = MEMORY[0x24BDF1050];
  MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v13, v28);
  sub_23BAC5FD8((uint64_t)v16, v13, (uint64_t)v20);
  v22 = *(void (**)(char *, uint64_t))(v26 + 8);
  v22(v16, v13);
  sub_23BAC2FCC((uint64_t)v20, v13, v27);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, v13);
}

uint64_t sub_23BAB18FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
}

uint64_t sub_23BAB1978()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_23BAB19D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_23BAB18FC(v1 + ((v3 + 48) & ~v3), v2, a1);
}

unint64_t sub_23BAB19F0()
{
  unint64_t result;

  result = qword_256A60350[0];
  if (!qword_256A60350[0])
  {
    result = MEMORY[0x24260D8DC](&unk_23BB937D8, &type metadata for ForceBubbleMessageTemplateSizeForDebug);
    atomic_store(result, qword_256A60350);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceBubbleMessageTemplateSizeForDebug()
{
  return &type metadata for ForceBubbleMessageTemplateSizeForDebug;
}

uint64_t sub_23BAB1A44(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BAB1AF4 + 4 * byte_23BB936A0[(v7 - 1)]))();
}

void sub_23BAB1B44(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_23BAB1CF4()
{
  unint64_t v0;

  sub_23BAB24AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23BAB1D80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = v5;
    v8 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = *(int *)(a3 + 60);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_23BB894A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 64);
    v14 = a1 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    sub_23BA2C1E8(*(_QWORD *)v15, v17);
    *(_QWORD *)v14 = v16;
    *(_BYTE *)(v14 + 8) = v17;
  }
  return a1;
}

uint64_t sub_23BAB1EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23BB894A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return sub_23B9C62D4(*(_QWORD *)(a1 + *(int *)(a2 + 64)), *(_BYTE *)(a1 + *(int *)(a2 + 64) + 8));
}

uint64_t sub_23BAB1F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 60);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB894A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = *(int *)(a3 + 64);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_23BA2C1E8(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v15;
  return a1;
}

uint64_t sub_23BAB2048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 60);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_23BAB2170(a1 + v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_23BB894A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v12 = *(int *)(a3 + 64);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_23BA2C1E8(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_23B9C62D4(v17, v18);
  return a1;
}

uint64_t sub_23BAB2170(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BAB21B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 60);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23BB894A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 64);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_23BAB228C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 60);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_23BAB2170(a1 + v6);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_23BB894A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 64);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  sub_23B9C62D4(v15, v16);
  return a1;
}

uint64_t sub_23BAB239C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAB23A8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256A603D8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 60)], a2, v8);
  }
}

uint64_t sub_23BAB2428()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23BAB2434(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256A603D8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 60)], a2, a2, v7);
  }
  return result;
}

void sub_23BAB24AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A60460)
  {
    sub_23BB894A0();
    v0 = sub_23BB892FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A60460);
  }
}

uint64_t sub_23BAB2500()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAB2534()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23BAB2568()
{
  unint64_t result;

  result = qword_256A60468;
  if (!qword_256A60468)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF52E0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_256A60468);
  }
  return result;
}

void sub_23BAB25AC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_23BAB1118(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_23BAB25C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_23BAB2568();
  v7[2] = MEMORY[0x24BDF52F8];
  v7[3] = v1;
  v7[4] = v3;
  v7[5] = v2;
  v4 = sub_23BB892D8();
  v5 = sub_23BB894AC();
  v7[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDEB358], v4);
  v7[1] = MEMORY[0x24BDF1050];
  return MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_23BAB2650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  sub_23BB894AC();
  sub_23BB894AC();
  sub_23BB894AC();
  swift_getTupleTypeMetadata2();
  v0 = sub_23BB8A364();
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v0);
  v1 = sub_23BB8A178();
  v2 = sub_23BB894AC();
  v3 = sub_23BB894AC();
  v7[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDF4750], v1);
  v7[1] = MEMORY[0x24BDEBEE0];
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v2, v7);
  v6[1] = MEMORY[0x24BDEDBB8];
  return MEMORY[0x24260D8DC](v4, v3, v6);
}

uint64_t PeopleLocationsProvider.data.getter()
{
  return sub_23BAB32DC();
}

uint64_t PeopleLocationsProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  return sub_23BAB30FC(v3, a1);
}

uint64_t sub_23BAB282C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  return sub_23BAB30FC(v4, a2);
}

uint64_t sub_23BAB28C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BAB30FC(a1, (uint64_t)v7);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23BAB3070();
  sub_23BB88A14();
  swift_release();
  return sub_23BAB315C((uint64_t)v7);
}

uint64_t PeopleLocationsProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A14();
  swift_release();
  return sub_23BAB315C(a1);
}

uint64_t sub_23BAB2A34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  sub_23BABA06C(a2, v3);
  return swift_endAccess();
}

void (*PeopleLocationsProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BAB2B80;
}

void sub_23BAB2B80(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t sub_23BAB2BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v29 = v0;
  v7 = sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v8 = v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v2);
  swift_retain_n();
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABC8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v28 = v23;
    v25 = v7;
    *(_DWORD *)v11 = 136315138;
    v21[1] = v11 + 4;
    swift_getKeyPath();
    v24 = v2;
    v27 = v1;
    sub_23BB88A20();
    swift_release();
    swift_beginAccess();
    sub_23BAB9A00();
    swift_bridgeObjectRetain();
    v12 = sub_23BB8A6C4();
    v22 = v3;
    v14 = v13;
    swift_bridgeObjectRelease();
    v26 = sub_23BB7B69C(v12, v14, &v28);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v9, v10, "PeopleLocationsProvider: data - %s", v11, 0xCu);
    v15 = v23;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v24);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  swift_getKeyPath();
  v28 = v1;
  sub_23BB88A20();
  result = swift_release();
  v17 = v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback;
  v18 = *(void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback);
  if (v18)
  {
    v19 = *(_QWORD *)(v17 + 8);
    v20 = swift_retain();
    v18(v20);
    return sub_23BA2EA10(v18, v19);
  }
  return result;
}

uint64_t sub_23BAB2F28()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback);
  sub_23BA2EA0C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback + 8));
  return v1;
}

uint64_t sub_23BAB2FB4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BAB3364(a1, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data, a2);
}

uint64_t sub_23BAB2FCC()
{
  swift_getKeyPath();
  sub_23BAB3070();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23BAB3070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A595A8;
  if (!qword_256A595A8)
  {
    v1 = type metadata accessor for PeopleLocationsProvider();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleLocationsProvider, v1);
    atomic_store(result, (unint64_t *)&qword_256A595A8);
  }
  return result;
}

uint64_t type metadata accessor for PeopleLocationsProvider()
{
  uint64_t result;

  result = qword_256A60570;
  if (!qword_256A60570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BAB30FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAB3144()
{
  uint64_t v0;

  return sub_23BAB2A34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BAB315C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BAB319C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_23BAB2BE8();
}

uint64_t sub_23BAB3214()
{
  return sub_23BAB32DC();
}

uint64_t sub_23BAB3228()
{
  swift_getKeyPath();
  sub_23BAB3070();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAB32C8()
{
  return sub_23BAB32DC();
}

uint64_t sub_23BAB32DC()
{
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAB3364@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAB3400()
{
  swift_getKeyPath();
  sub_23BAB3070();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAB34A0()
{
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  return swift_retain();
}

uint64_t sub_23BAB3518@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__valuePublisher);
  return swift_retain();
}

uint64_t sub_23BAB3598()
{
  swift_getKeyPath();
  sub_23BAB3070();
  swift_retain();
  sub_23BB88A14();
  swift_release();
  return swift_release();
}

uint64_t sub_23BAB3638@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback + 8);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23BAB9ABC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23BA2EA0C(v4, v5);
}

uint64_t sub_23BAB36F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BAB9ABC;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23BA2EA0C(v2, v1);
  sub_23BAB3070();
  sub_23BB88A14();
  sub_23BA2EA10(v4, v3);
  return swift_release();
}

uint64_t PeopleLocationsProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PeopleLocationsProvider.init(dependencies:)(a1);
  return v2;
}

_OWORD *PeopleLocationsProvider.init(dependencies:)(__int128 *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void (*v26)(char *, char *, uint64_t);
  unint64_t v27;
  uint64_t v28;
  uint64_t (**v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char *v44;

  v2 = v1;
  v4 = sub_23BB889CC();
  MEMORY[0x24BDAC7A8](v4, v5);
  v44 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v38 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 36);
  *(_QWORD *)&v19[v21] = sub_23B97E830(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v19[v16[10]] = MEMORY[0x24BEE4B08];
  v19[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23 = *a1;
  v42 = a1[1];
  v43 = v23;
  v24 = a1[2];
  v40 = a1[3];
  v41 = v24;
  v25 = a1[4];
  v38 = a1[5];
  v39 = v25;
  v22(v19, v15, v7);
  v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v26(v11, v15, v7);
  v27 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v28 = swift_allocObject();
  v26((char *)(v28 + v27), v11, v7);
  v29 = (uint64_t (**)())&v19[v16[12]];
  *v29 = sub_23B988EB4;
  v29[1] = (uint64_t (*)())v28;
  sub_23B990D24((uint64_t)v19, (uint64_t)v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage, &qword_256A595B0);
  v30 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data) = sub_23B97E690(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)((char *)v2
            + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateFallbackTaskBySubscription) = sub_23B97E824(v30);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription) = sub_23B97E824(v30);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__valuePublisher) = 0;
  v31 = OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider_taskQueue;
  v32 = (uint64_t)v44;
  sub_23BB889C0();
  type metadata accessor for SerialTaskQueue(0);
  swift_allocObject();
  *(_QWORD *)((char *)v2 + v31) = sub_23B9C7D14(0xD00000000000001CLL, 0x800000023BB9B970, v32);
  v33 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback);
  *v33 = 0;
  v33[1] = 0;
  sub_23BB88A44();
  v34 = v42;
  v2[1] = v43;
  v2[2] = v34;
  v35 = v40;
  v2[3] = v41;
  v2[4] = v35;
  v36 = v38;
  v2[5] = v39;
  v2[6] = v36;
  return v2;
}

uint64_t sub_23BAB3B4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[6] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60670);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 + 64);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = sub_23BB8A9F4();
  v1[13] = sub_23BB8A9E8();
  v1[14] = sub_23BB8A988();
  v1[15] = v4;
  return swift_task_switch();
}

uint64_t sub_23BAB3C20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v1 = v0[5];
  swift_getKeyPath();
  v2 = OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  v0[2] = v1;
  v0[16] = v2;
  v0[17] = sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v3 = v0[5];
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  v0[3] = v3;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  v7 = (uint64_t (*)(_QWORD))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = v5;
  *v5 = v0;
  v5[1] = sub_23BAB3D80;
  return v7(v0[11]);
}

uint64_t sub_23BAB3D80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAB3DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v20 = v5;
  v6 = *(_QWORD *)(v0 + 40);
  swift_release();
  v7 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = v3;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v11 = v2;
  v10(v2, v1, v4);
  swift_retain();
  v12 = sub_23BB8A9E8();
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v11, v4);
  *(_QWORD *)(v14 + ((v19 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  v16 = sub_23B989F54(v20, (uint64_t)&unk_256A60680, v14);
  swift_getKeyPath();
  v17 = swift_task_alloc();
  *(_QWORD *)(v17 + 16) = v6;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v0 + 32) = v6;
  sub_23BB88A14();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB3FE8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB4044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60688);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = sub_23BB8A9F4();
  v5[12] = sub_23BB8A9E8();
  v5[13] = sub_23BB8A988();
  v5[14] = v7;
  return swift_task_switch();
}

uint64_t sub_23BAB40E0()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A60670);
  sub_23BB8AA54();
  swift_beginAccess();
  *(_QWORD *)(v0 + 120) = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v1;
  *v1 = v0;
  v1[1] = sub_23BAB41A0;
  return sub_23BB8AA60();
}

uint64_t sub_23BAB41A0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAB41F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    if (swift_weakLoadStrong())
    {
      sub_23BAB42E8(v1);
      swift_release();
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 120) = sub_23BB8A9E8();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v2;
    *v2 = v0;
    v2[1] = sub_23BAB41A0;
    return sub_23BB8AA60();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BAB42E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint8_t *v45;
  uint64_t v46;
  __int128 v47[9];
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _OWORD v60[8];
  uint64_t v61;
  _OWORD v62[8];
  uint64_t v63;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v9 = v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  *(_QWORD *)&v50 = v2;
  v40 = sub_23BAB3070();
  v41 = v9;
  sub_23BB88A20();
  swift_release();
  v42 = v2;
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  v11 = v4;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v10, v4);
  swift_bridgeObjectRetain_n();
  v12 = sub_23BB891AC();
  v13 = sub_23BB8ABEC();
  v14 = os_log_type_enabled(v12, v13);
  v43 = a1;
  if (v14)
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    *(_QWORD *)&v50 = v46;
    *(_DWORD *)v15 = 136315138;
    v45 = v15 + 4;
    v16 = v15;
    v17 = swift_bridgeObjectRetain();
    v18 = MEMORY[0x24260C844](v17, &type metadata for PeopleLocationsProvider.LocationStreamValue);
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = v18;
    a1 = v43;
    *(_QWORD *)&v47[0] = sub_23BB7B69C(v21, v20, (uint64_t *)&v50);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v12, v13, "PeopleLocationsProvider: change - %s", v15, 0xCu);
    v22 = v46;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v22, -1, -1);
    MEMORY[0x24260D9B4](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v11);
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v25 = (uint64_t *)(v42 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
    v38 = (uint64_t)v60 + 8;
    v39 = (_QWORD *)&v51 + 1;
    swift_bridgeObjectRetain();
    v46 = v24 - 1;
    v26 = 32;
    v27 = v42;
    while (1)
    {
      v28 = v26;
      v29 = a1 + v26;
      v30 = *(_OWORD *)(v29 + 112);
      v56 = *(_OWORD *)(v29 + 96);
      v57 = v30;
      v58 = *(_OWORD *)(v29 + 128);
      v59 = *(_QWORD *)(v29 + 144);
      v31 = *(_OWORD *)(v29 + 48);
      v52 = *(_OWORD *)(v29 + 32);
      v53 = v31;
      v32 = *(_OWORD *)(v29 + 80);
      v54 = *(_OWORD *)(v29 + 64);
      v55 = v32;
      v33 = *(_OWORD *)(v29 + 16);
      v50 = *(_OWORD *)v29;
      v51 = v33;
      v34 = *((_QWORD *)&v50 + 1);
      v45 = (uint8_t *)v50;
      LOBYTE(v60[0]) = 0;
      v44 = v33;
      v35 = v39;
      sub_23B990D24((uint64_t)v39, v38, &qword_256A5AA50);
      v62[6] = v60[6];
      v62[7] = v60[7];
      v63 = v61;
      v62[2] = v60[2];
      v62[3] = v60[3];
      v62[4] = v60[4];
      v62[5] = v60[5];
      v62[0] = v60[0];
      v62[1] = v60[1];
      swift_getKeyPath();
      *(_QWORD *)&v47[0] = v27;
      sub_23BAB9C64((uint64_t)&v50);
      swift_bridgeObjectRetain();
      sub_23B9CAF00(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      sub_23BB88A20();
      swift_release();
      *(_QWORD *)&v47[0] = v27;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = *v25;
      *v25 = 0x8000000000000000;
      sub_23BAAEF3C((uint64_t)v62, (uint64_t)v45, v34, v44, isUniquelyReferenced_nonNull_native);
      *v25 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_23BAB2BE8();
      *(_QWORD *)&v47[0] = v27;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
      v47[6] = v56;
      v47[7] = v57;
      v47[8] = v58;
      v48 = v59;
      v47[2] = v52;
      v47[3] = v53;
      v47[4] = v54;
      v47[5] = v55;
      v47[0] = v50;
      v47[1] = v51;
      sub_23BAB56EC(v47);
      sub_23BAB9D1C((uint64_t)&v50);
      if (!v46)
        break;
      --v46;
      v26 = v28 + 152;
      a1 = v43;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BAB47A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[14] = v0;
  sub_23BB8A9F4();
  v1[15] = sub_23BB8A9E8();
  v1[16] = sub_23BB8A988();
  v1[17] = v2;
  return swift_task_switch();
}

uint64_t sub_23BAB4814()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t (*v36)(void);
  _QWORD *v37;

  v1 = v0;
  v2 = v0[14];
  swift_getKeyPath();
  v37 = v1;
  v1[10] = v2;
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v3 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription;
  swift_beginAccess();
  v4 = *(_QWORD *)v3 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(*(_QWORD *)v3 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(*(_QWORD *)v3 + 64);
  v8 = (unint64_t)(63 - v6) >> 6;
  result = swift_bridgeObjectRetain_n();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    if (v11 >= v8)
      goto LABEL_25;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v10;
    if (!v12)
    {
      v10 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_25;
      v12 = *(_QWORD *)(v4 + 8 * v10);
      if (!v12)
      {
        v10 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_25;
        v12 = *(_QWORD *)(v4 + 8 * v10);
        if (!v12)
        {
          v10 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_25;
          v12 = *(_QWORD *)(v4 + 8 * v10);
          if (!v12)
          {
            v10 = v11 + 4;
            if (v11 + 4 >= v8)
              goto LABEL_25;
            v12 = *(_QWORD *)(v4 + 8 * v10);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v7 = (v12 - 1) & v12;
LABEL_5:
    result = sub_23BB8AA78();
  }
  v13 = v11 + 5;
  if (v13 >= v8)
  {
LABEL_25:
    v14 = v1[14];
    swift_release();
    swift_bridgeObjectRelease();
    v15 = sub_23B97E824(MEMORY[0x24BEE4AF8]);
    swift_getKeyPath();
    v16 = swift_task_alloc();
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v15;
    v1[8] = v14;
    sub_23BB88A14();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    v1[9] = v14;
    sub_23BB88A20();
    swift_release();
    v17 = (uint64_t *)(v14
                    + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateFallbackTaskBySubscription);
    swift_beginAccess();
    v18 = *v17;
    v21 = *(_QWORD *)(*v17 + 64);
    v20 = *v17 + 64;
    v19 = v21;
    v22 = -1;
    v23 = -1 << *(_BYTE *)(v18 + 32);
    if (-v23 < 64)
      v22 = ~(-1 << -(char)v23);
    v24 = v22 & v19;
    v25 = (unint64_t)(63 - v23) >> 6;
    result = swift_bridgeObjectRetain_n();
    v26 = 0;
    while (1)
    {
      if (v24)
      {
        v24 &= v24 - 1;
      }
      else
      {
        v27 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_53;
        if (v27 >= v25)
        {
LABEL_49:
          v30 = v37[14];
          swift_release();
          swift_bridgeObjectRelease();
          v31 = sub_23B97E824(MEMORY[0x24BEE4AF8]);
          swift_getKeyPath();
          v32 = swift_task_alloc();
          *(_QWORD *)(v32 + 16) = v30;
          *(_QWORD *)(v32 + 24) = v31;
          v37[11] = v30;
          sub_23BB88A14();
          swift_bridgeObjectRelease();
          swift_release();
          swift_task_dealloc();
          swift_getKeyPath();
          v37[12] = v30;
          sub_23BB88A20();
          swift_release();
          if (*(_QWORD *)(v30 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__valuePublisher))
          {
            swift_retain();
            sub_23BB8AA78();
            swift_release();
          }
          v33 = v37[14];
          swift_getKeyPath();
          v34 = swift_task_alloc();
          *(_QWORD *)(v34 + 16) = v33;
          *(_QWORD *)(v34 + 24) = 0;
          v37[13] = v33;
          sub_23BB88A14();
          swift_release();
          swift_task_dealloc();
          v36 = (uint64_t (*)(void))(**(int **)(v33 + 32) + *(_QWORD *)(v33 + 32));
          v35 = (_QWORD *)swift_task_alloc();
          v37[18] = v35;
          *v35 = v37;
          v35[1] = sub_23BAB4DE8;
          return v36();
        }
        v28 = *(_QWORD *)(v20 + 8 * v27);
        ++v26;
        if (!v28)
        {
          v26 = v27 + 1;
          if (v27 + 1 >= v25)
            goto LABEL_49;
          v28 = *(_QWORD *)(v20 + 8 * v26);
          if (!v28)
          {
            v26 = v27 + 2;
            if (v27 + 2 >= v25)
              goto LABEL_49;
            v28 = *(_QWORD *)(v20 + 8 * v26);
            if (!v28)
            {
              v26 = v27 + 3;
              if (v27 + 3 >= v25)
                goto LABEL_49;
              v28 = *(_QWORD *)(v20 + 8 * v26);
              if (!v28)
              {
                v26 = v27 + 4;
                if (v27 + 4 >= v25)
                  goto LABEL_49;
                v28 = *(_QWORD *)(v20 + 8 * v26);
                if (!v28)
                {
                  v29 = v27 + 5;
                  if (v29 >= v25)
                    goto LABEL_49;
                  v28 = *(_QWORD *)(v20 + 8 * v29);
                  if (!v28)
                  {
                    while (1)
                    {
                      v26 = v29 + 1;
                      if (__OFADD__(v29, 1))
                        goto LABEL_55;
                      if (v26 >= v25)
                        goto LABEL_49;
                      v28 = *(_QWORD *)(v20 + 8 * v26);
                      ++v29;
                      if (v28)
                        goto LABEL_48;
                    }
                  }
                  v26 = v29;
                }
              }
            }
          }
        }
LABEL_48:
        v24 = (v28 - 1) & v28;
      }
      result = sub_23BB8AA78();
    }
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v10 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v8)
      goto LABEL_25;
    v12 = *(_QWORD *)(v4 + 8 * v10);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_23BAB4DE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAB4E48()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB4E7C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB4EB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[22] = a1;
  v2[23] = v1;
  sub_23BB8A9F4();
  v2[24] = sub_23BB8A9E8();
  v2[25] = sub_23BB8A988();
  v2[26] = v3;
  return swift_task_switch();
}

void *sub_23BAB4F1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  int64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;

  v1 = v0[23];
  v2 = v0[22];
  v3 = *(_QWORD *)(v2 + 56);
  v43 = v2 + 56;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription);
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateFallbackTaskBySubscription);
  v45 = v0[22];
  swift_bridgeObjectRetain();
  v46 = v7;
  swift_beginAccess();
  swift_beginAccess();
  v9 = 0;
  v44 = (unint64_t)(63 - v4) >> 6;
  result = &unk_23BB939F0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v13 = (v6 - 1) & v6;
      v14 = v12 | (v9 << 6);
      v15 = v46;
      goto LABEL_23;
    }
    v16 = v9 + 1;
    v15 = v46;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v16 >= v44)
      goto LABEL_40;
    v17 = *(_QWORD *)(v43 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v44)
        goto LABEL_40;
      v17 = *(_QWORD *)(v43 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v44)
          goto LABEL_40;
        v17 = *(_QWORD *)(v43 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v13 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_23:
    v19 = v0[23];
    v20 = *(_QWORD *)(v45 + 48) + 24 * v14;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(unsigned __int8 *)(v20 + 16);
    swift_getKeyPath();
    v0[20] = v19;
    sub_23BAB3070();
    swift_bridgeObjectRetain_n();
    sub_23BB88A20();
    swift_release();
    v47 = v13;
    v49 = v22;
    if (*(_QWORD *)(*v15 + 16))
    {
      swift_bridgeObjectRetain();
      sub_23B9849D0(v22, v21, v23);
      v24 = v23;
      if ((v25 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23BB8AA78();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = v23;
    }
    v26 = v0[23];
    swift_getKeyPath();
    v0[15] = v26;
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v0[14] = v26;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v48 = v24;
    v27 = sub_23B9849D0(v49, v21, v24);
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v31 = *v46;
      v51 = *v46;
      *v46 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B987C04();
        v31 = v51;
      }
      swift_bridgeObjectRelease();
      sub_23B98615C(v27, v31);
      *v46 = v31;
      swift_bridgeObjectRelease();
    }
    v32 = v0[23];
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    v0[16] = v32;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    swift_getKeyPath();
    v0[17] = v32;
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    if (*(_QWORD *)(*v8 + 16))
    {
      swift_bridgeObjectRetain();
      v33 = v49;
      sub_23B9849D0(v49, v21, v48);
      if ((v34 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23BB8AA78();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = v49;
    }
    v35 = v0[23];
    swift_getKeyPath();
    v0[18] = v35;
    sub_23BB88A20();
    swift_release();
    v0[19] = v35;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v36 = sub_23B9849D0(v33, v21, v48);
    v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
    {
      v39 = swift_isUniquelyReferenced_nonNull_native();
      v40 = *v8;
      v52 = *v8;
      *v8 = 0x8000000000000000;
      if ((v39 & 1) == 0)
      {
        sub_23B987C04();
        v40 = v52;
      }
      swift_bridgeObjectRelease();
      sub_23B98615C(v36, v40);
      *v8 = v40;
      swift_bridgeObjectRelease();
    }
    v11 = v0[23];
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    v0[21] = v11;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    result = &unk_23BB939F0;
    v6 = v47;
  }
  v18 = v16 + 3;
  if (v18 >= v44)
  {
LABEL_40:
    v41 = v0[23];
    swift_release();
    v50 = (uint64_t (*)(_QWORD))(**(int **)(v41 + 64) + *(_QWORD *)(v41 + 64));
    v42 = (_QWORD *)swift_task_alloc();
    v0[27] = v42;
    *v42 = v0;
    v42[1] = sub_23BAB5624;
    return (void *)v50(v0[22]);
  }
  v17 = *(_QWORD *)(v43 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v44)
      goto LABEL_40;
    v17 = *(_QWORD *)(v43 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BAB5624()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAB5684()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB56B8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_23BAB56EC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *result;
  uint64_t (*v21)(uint64_t *);
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  void *v43[16];
  _QWORD v44[16];
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[7];
  v53 = a1[6];
  v54 = v7;
  v55 = a1[8];
  v56 = *((_QWORD *)a1 + 18);
  v8 = a1[3];
  v49 = a1[2];
  v50 = v8;
  v9 = a1[5];
  v51 = a1[4];
  v52 = v9;
  v10 = a1[1];
  v47 = *a1;
  v48 = v10;
  v11 = v47;
  v12 = v10;
  swift_getKeyPath();
  v13 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  v45 = v2;
  sub_23BAB3070();
  swift_bridgeObjectRetain();
  v39 = v13;
  sub_23BB88A20();
  swift_release();
  v14 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription;
  swift_beginAccess();
  v15 = *(_QWORD *)(*(_QWORD *)v14 + 16);
  v40 = v11;
  if (v15)
  {
    swift_bridgeObjectRetain();
    sub_23B9849D0(v11, *((_QWORD *)&v11 + 1), v12);
    if ((v16 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8AA78();
      swift_release();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_getKeyPath();
  v45 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v45 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v17 = v40;
  sub_23BA77510(v40, *((uint64_t *)&v11 + 1), v12);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  v45 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_getKeyPath();
  v45 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v18 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateFallbackTaskBySubscription;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v18 + 16))
  {
    swift_bridgeObjectRetain();
    sub_23B9849D0(v17, *((_QWORD *)&v11 + 1), v12);
    if ((v19 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8AA78();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  v45 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v45 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  sub_23BA77510(v40, *((uint64_t *)&v11 + 1), v12);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  v45 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  sub_23B990D24((uint64_t)&v48 + 8, (uint64_t)v44, &qword_256A5AA50);
  sub_23B990D24((uint64_t)v44, (uint64_t)&v45, &qword_256A5AA50);
  result = (_QWORD *)sub_23B9B20A4(&v45);
  if ((_DWORD)result != 1)
  {
    sub_23B990D24((uint64_t)v44, (uint64_t)v43, &qword_256A5AA50);
    v21 = *(uint64_t (**)(uint64_t *))(v2 + 96);
    LOBYTE(v42[0]) = v46;
    sub_23BAB9DD4(v43);
    v22 = v21(v42);
    if ((v24 & 1) == 0)
    {
      v25 = v22;
      v26 = v23;
      v27 = sub_23BB8AA18();
      v28 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v38, 1, 1, v27);
      sub_23BB8A9F4();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_23BAB9C64((uint64_t)&v47);
      v29 = sub_23BB8A9E8();
      v30 = swift_allocObject();
      v31 = v54;
      *(_OWORD *)(v30 + 152) = v53;
      *(_OWORD *)(v30 + 168) = v31;
      *(_OWORD *)(v30 + 184) = v55;
      v32 = v50;
      *(_OWORD *)(v30 + 88) = v49;
      *(_OWORD *)(v30 + 104) = v32;
      v33 = v52;
      *(_OWORD *)(v30 + 120) = v51;
      *(_OWORD *)(v30 + 136) = v33;
      v34 = v48;
      *(_OWORD *)(v30 + 56) = v47;
      v35 = MEMORY[0x24BEE6930];
      *(_QWORD *)(v30 + 16) = v29;
      *(_QWORD *)(v30 + 24) = v35;
      *(_QWORD *)(v30 + 32) = v25;
      *(_QWORD *)(v30 + 40) = v26;
      *(_QWORD *)(v30 + 48) = v2;
      *(_QWORD *)(v30 + 200) = v56;
      *(_OWORD *)(v30 + 72) = v34;
      v38 = sub_23B989F54(v28, (uint64_t)&unk_256A60698, v30);
      swift_getKeyPath();
      v42[0] = v2;
      sub_23BB88A20();
      swift_release();
      v42[0] = v2;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = *(_QWORD *)v18;
      *(_QWORD *)v18 = 0x8000000000000000;
      sub_23BAAF3F4(v38, v40, *((uint64_t *)&v11 + 1), v12, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)v18 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v42[0] = v2;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
    }
    return sub_23B9CAF00(v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
  }
  return result;
}

uint64_t sub_23BAB5DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v8 = sub_23BB891C4();
  v7[18] = v8;
  v7[19] = *(_QWORD *)(v8 - 8);
  v7[20] = swift_task_alloc();
  v9 = sub_23BB8AF1C();
  v7[21] = v9;
  v7[22] = *(_QWORD *)(v9 - 8);
  v7[23] = swift_task_alloc();
  sub_23BB8A9F4();
  v7[24] = sub_23BB8A9E8();
  v7[25] = sub_23BB8A988();
  v7[26] = v10;
  return swift_task_switch();
}

uint64_t sub_23BAB5E74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  v0[27] = v1;
  *v1 = v0;
  v1[1] = sub_23BAB5EEC;
  return v3(v0[14], v0[15], 0, 0, 1);
}

uint64_t sub_23BAB5EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BAB5F74()
{
  uint64_t v0;
  __int128 *v1;
  __int128 v2;
  __int128 v4;
  char v5;

  v1 = *(__int128 **)(v0 + 136);
  swift_release();
  v2 = *v1;
  *(_BYTE *)(v0 + 80) = *((_BYTE *)v1 + 16);
  *(_OWORD *)(v0 + 64) = v2;
  v4 = *v1;
  v5 = *((_BYTE *)v1 + 16);
  sub_23B9A14EC(v0 + 64);
  sub_23BAB6300((uint64_t)&v4);
  sub_23BAB9F6C(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB6000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 88) = v4;
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v5 = v4 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_retain_n();
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABC8();
  if (os_log_type_enabled(v6, v7))
  {
    v18 = *(id *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v22 = v17;
    *(_DWORD *)v9 = 136315138;
    swift_getKeyPath();
    *(_QWORD *)(v0 + 96) = v8;
    sub_23BB88A20();
    swift_release();
    swift_beginAccess();
    sub_23BAB9A00();
    swift_bridgeObjectRetain();
    v10 = sub_23BB8A6C4();
    v12 = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(v10, v12, &v22);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B979000, v6, v7, "PeopleLocationsProvider: loadingStateTaskBySubscription was cancelled - %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 144);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_23BAB6300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  unsigned int v50;
  uint64_t *v51;
  uint64_t v52;
  _OWORD v53[8];
  uint64_t v54;
  _OWORD v55[8];
  uint64_t v56;
  _OWORD v57[8];
  uint64_t v58;
  _QWORD v59[16];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v10 = *(unsigned __int8 *)(a1 + 16);
  v11 = (*(uint64_t (**)(uint64_t))(v2 + 80))(v6);
  v46 = v12;
  v47 = v11;
  swift_getKeyPath();
  *(_QWORD *)&v60 = v2;
  v13 = sub_23BAB3070();
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription);
  swift_beginAccess();
  v51 = v14;
  if (*(_QWORD *)(*v14 + 16))
  {
    swift_bridgeObjectRetain();
    sub_23B9849D0(v9, v8, v10);
    if ((v15 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8AA78();
      swift_release();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_getKeyPath();
  *(_QWORD *)&v60 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  *(_QWORD *)&v60 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  sub_23BA77510(v9, v8, v10);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)&v60 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v60 = v2;
  swift_bridgeObjectRetain();
  v49 = v13;
  sub_23BB88A20();
  swift_release();
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  v17 = *v16;
  v18 = *(_QWORD *)(*v16 + 16);
  v50 = v10;
  if (!v18)
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v19 = sub_23B9849D0(v9, v8, v10);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    v21 = v9;
    sub_23B9BE144(&v60);
    sub_23B990D24((uint64_t)&v60, (uint64_t)v57 + 8, &qword_256A5AA50);
    v29 = (char *)&v60;
    goto LABEL_13;
  }
  v21 = v9;
  v22 = *(_QWORD *)(v17 + 56) + 136 * v19;
  v60 = *(_OWORD *)v22;
  v23 = *(_OWORD *)(v22 + 48);
  v24 = *(_OWORD *)(v22 + 64);
  v25 = *(_OWORD *)(v22 + 32);
  v61 = *(_OWORD *)(v22 + 16);
  v62 = v25;
  v63 = v23;
  v64 = v24;
  v26 = *(_OWORD *)(v22 + 80);
  v27 = *(_OWORD *)(v22 + 96);
  v28 = *(_OWORD *)(v22 + 112);
  v68 = *(_QWORD *)(v22 + 128);
  v66 = v27;
  v67 = v28;
  v65 = v26;
  sub_23BAB9998(&v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B990D24((uint64_t)&v60 + 8, (uint64_t)v57 + 8, &qword_256A5AA50);
  v29 = (char *)&v60 + 8;
LABEL_13:
  sub_23B990D24((uint64_t)v29, (uint64_t)v59, &qword_256A5AA50);
  LOBYTE(v57[0]) = 1;
  LOBYTE(v53[0]) = 1;
  sub_23B990D24((uint64_t)v59, (uint64_t)v53 + 8, &qword_256A5AA50);
  v66 = v53[6];
  v67 = v53[7];
  v68 = v54;
  v62 = v53[2];
  v63 = v53[3];
  v64 = v53[4];
  v65 = v53[5];
  v60 = v53[0];
  v61 = v53[1];
  swift_getKeyPath();
  *(_QWORD *)&v55[0] = v2;
  swift_bridgeObjectRetain();
  sub_23B9CAF00(v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
  sub_23BB88A20();
  swift_release();
  *(_QWORD *)&v55[0] = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52 = *v16;
  *v16 = 0x8000000000000000;
  v31 = v21;
  v32 = v21;
  v45 = v21;
  v33 = v50;
  sub_23BAAEF3C((uint64_t)&v60, v31, v8, v50, isUniquelyReferenced_nonNull_native);
  *v16 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_23BAB2BE8();
  *(_QWORD *)&v55[0] = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v34 = sub_23BB8AA18();
  v35 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v48, 1, 1, v34);
  sub_23BB8A9F4();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v36 = sub_23BB8A9E8();
  v37 = swift_allocObject();
  v38 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v37 + 16) = v36;
  *(_QWORD *)(v37 + 24) = v38;
  v39 = v46;
  *(_QWORD *)(v37 + 32) = v47;
  *(_QWORD *)(v37 + 40) = v39;
  *(_QWORD *)(v37 + 48) = v2;
  *(_QWORD *)(v37 + 56) = v32;
  *(_QWORD *)(v37 + 64) = v8;
  *(_BYTE *)(v37 + 72) = v33;
  v40 = sub_23B989F54(v35, (uint64_t)&unk_256A606A8, v37);
  swift_getKeyPath();
  *(_QWORD *)&v55[0] = v2;
  sub_23BB88A20();
  swift_release();
  *(_QWORD *)&v55[0] = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v41 = v51;
  swift_beginAccess();
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v52 = *v41;
  *v41 = 0x8000000000000000;
  sub_23BAAF3F4(v40, v45, v8, v33, v42);
  *v41 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  *(_QWORD *)&v55[0] = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v55[6] = v57[6];
  v55[7] = v57[7];
  v56 = v58;
  v55[2] = v57[2];
  v55[3] = v57[3];
  v55[4] = v57[4];
  v55[5] = v57[5];
  v55[0] = v57[0];
  v55[1] = v57[1];
  return sub_23BAB9998(v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
}

uint64_t sub_23BAB6A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  *(_BYTE *)(v8 + 57) = v13;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 80) = a4;
  v9 = sub_23BB891C4();
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  v10 = sub_23BB8AF1C();
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 168) = sub_23BB8A9E8();
  *(_QWORD *)(v8 + 176) = sub_23BB8A988();
  *(_QWORD *)(v8 + 184) = v11;
  return swift_task_switch();
}

uint64_t sub_23BAB6AFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = v1;
  *v1 = v0;
  v1[1] = sub_23BAB6B74;
  return v3(v0[10], v0[11], 0, 0, 1);
}

uint64_t sub_23BAB6B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BAB6BFC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  char v6;

  v1 = *(_BYTE *)(v0 + 57);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_release();
  v5[0] = v3;
  v5[1] = v2;
  v6 = v1;
  sub_23BAB6EEC((uint64_t)v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB6C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 64) = v4;
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v5 = v4 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_bridgeObjectRetain_n();
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABC8();
  if (os_log_type_enabled(v6, v7))
  {
    v19 = *(id *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 136);
    v9 = *(_BYTE *)(v0 + 57);
    v10 = *(_QWORD *)(v0 + 104);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v23 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v0 + 40) = v10;
    *(_QWORD *)(v0 + 48) = v8;
    *(_BYTE *)(v0 + 56) = v9;
    swift_bridgeObjectRetain();
    v13 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 72) = sub_23BB7B69C(v13, v14, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B979000, v6, v7, "PeopleLocationsProvider: loadingStateResetTaskBySubscription was cancelled - identifier: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v12, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 120);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_23BAB6EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _OWORD v20[8];
  uint64_t v21;
  _OWORD v22[8];
  uint64_t v23;
  _OWORD v24[8];
  uint64_t v25;
  _OWORD v26[8];
  uint64_t v27;
  _OWORD v28[8];
  uint64_t v29;

  v2 = v1;
  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  swift_getKeyPath();
  *(_QWORD *)&v28[0] = v1;
  sub_23BAB3070();
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_23B9849D0(v4, v3, v5);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 56) + 136 * v8;
      v20[0] = *(_OWORD *)v10;
      v11 = *(_OWORD *)(v10 + 48);
      v12 = *(_OWORD *)(v10 + 64);
      v13 = *(_OWORD *)(v10 + 32);
      v20[1] = *(_OWORD *)(v10 + 16);
      v20[2] = v13;
      v20[3] = v11;
      v20[4] = v12;
      v14 = *(_OWORD *)(v10 + 80);
      v15 = *(_OWORD *)(v10 + 96);
      v16 = *(_OWORD *)(v10 + 112);
      v21 = *(_QWORD *)(v10 + 128);
      v20[6] = v15;
      v20[7] = v16;
      v20[5] = v14;
      sub_23BAB9998(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B990D24((uint64_t)v20 + 8, (uint64_t)v26 + 8, &qword_256A5AA50);
      LOBYTE(v26[0]) = 0;
      LOBYTE(v22[0]) = 0;
      sub_23B990D24((uint64_t)v20 + 8, (uint64_t)v22 + 8, &qword_256A5AA50);
      v28[6] = v22[6];
      v28[7] = v22[7];
      v29 = v23;
      v28[2] = v22[2];
      v28[3] = v22[3];
      v28[4] = v22[4];
      v28[5] = v22[5];
      v28[0] = v22[0];
      v28[1] = v22[1];
      swift_getKeyPath();
      *(_QWORD *)&v24[0] = v2;
      swift_bridgeObjectRetain();
      sub_23BAB9998(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      sub_23BB88A20();
      swift_release();
      *(_QWORD *)&v24[0] = v2;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *v6;
      *v6 = 0x8000000000000000;
      sub_23BAAEF3C((uint64_t)v28, v4, v3, v5, isUniquelyReferenced_nonNull_native);
      *v6 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_23BAB2BE8();
      *(_QWORD *)&v24[0] = v2;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
      v24[6] = v26[6];
      v24[7] = v26[7];
      v25 = v27;
      v24[2] = v26[2];
      v24[3] = v26[3];
      v24[4] = v26[4];
      v24[5] = v26[5];
      v24[0] = v26[0];
      v24[1] = v26[1];
      return sub_23BAB9998(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
    }
    swift_bridgeObjectRelease();
  }
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t PeopleLocationsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t result;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void (*v44)(_QWORD *);
  char v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  int64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  char v69;
  _QWORD v70[16];
  _QWORD v71[2];
  char v72;
  uint64_t v73[16];
  _BYTE v74[136];
  _OWORD v75[8];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v3 = v2;
  v57 = a2;
  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v55 = v9;
  v56 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v53 - v11;
  swift_getKeyPath();
  v13 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  v77 = v3;
  v65 = sub_23BAB3070();
  v66 = v13;
  sub_23BB88A20();
  swift_release();
  v14 = (char *)(v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage);
  swift_beginAccess();
  v58 = v12;
  v59 = v6;
  v15 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v60 = v5;
  v54 = v15;
  v15(v12, v14, v5);
  v16 = *(_QWORD *)(a1 + 56);
  v62 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  v67 = a1;
  swift_bridgeObjectRetain();
  v64 = v20;
  result = swift_beginAccess();
  v22 = 0;
  v63 = (unint64_t)(v17 + 63) >> 6;
  v61 = &v78;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_23;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v26 >= v63)
      goto LABEL_33;
    v27 = *(_QWORD *)(v62 + 8 * v26);
    ++v22;
    if (!v27)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v63)
        goto LABEL_33;
      v27 = *(_QWORD *)(v62 + 8 * v22);
      if (!v27)
      {
        v22 = v26 + 2;
        if (v26 + 2 >= v63)
          goto LABEL_33;
        v27 = *(_QWORD *)(v62 + 8 * v22);
        if (!v27)
          break;
      }
    }
LABEL_22:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_23:
    v29 = *(_QWORD *)(v67 + 48) + 24 * v25;
    v30 = *(_QWORD *)v29;
    v31 = *(_QWORD *)(v29 + 8);
    v32 = *(unsigned __int8 *)(v29 + 16);
    v33 = *(_BYTE *)(v29 + 17);
    swift_getKeyPath();
    v77 = v3;
    swift_bridgeObjectRetain_n();
    sub_23BB88A20();
    swift_release();
    v34 = *v64;
    if (!*(_QWORD *)(*v64 + 16))
    {
      swift_bridgeObjectRelease();
      sub_23BA186FC((uint64_t)v75);
LABEL_28:
      sub_23B990D24((uint64_t)v75, (uint64_t)&v77, &qword_256A5AA48);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    v35 = sub_23B9849D0(v30, v31, v32);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BA186FC((uint64_t)v75);
      goto LABEL_28;
    }
    v37 = (_OWORD *)(*(_QWORD *)(v34 + 56) + 136 * v35);
    v75[0] = *v37;
    v38 = v37[3];
    v39 = v37[4];
    v40 = v37[2];
    v75[1] = v37[1];
    v75[2] = v40;
    v75[3] = v38;
    v75[4] = v39;
    v41 = v37[5];
    v42 = v37[6];
    v43 = v37[7];
    v76 = *((_QWORD *)v37 + 16);
    v75[6] = v42;
    v75[7] = v43;
    v75[5] = v41;
    memmove(&v77, v37, 0x88uLL);
    nullsub_1(&v77);
    sub_23BAB9998(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    sub_23B990D24((uint64_t)&v77, (uint64_t)v74, &qword_256A5AA48);
    sub_23B990D24((uint64_t)v74, (uint64_t)v75, &qword_256A5AA48);
    if (sub_23B9BE120((uint64_t)v75) == 1
      || (sub_23B990D24((uint64_t)v61, (uint64_t)v70, &qword_256A5AA50),
          sub_23B990D24((uint64_t)&v77, (uint64_t)v71, &qword_256A5AA48),
          sub_23B9CAF00(v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540), sub_23BAB90D0((uint64_t)v71), sub_23B990D24((uint64_t)v70, (uint64_t)v73, &qword_256A5AA50), sub_23B9B20A4(v73) == 1))
    {
      v71[0] = v30;
      v71[1] = v31;
      v72 = v32;
      v23 = v71;
LABEL_5:
      sub_23BAB6300((uint64_t)v23);
      goto LABEL_6;
    }
    sub_23B9CAF00(v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
    v44 = *(void (**)(_QWORD *))(v3 + 96);
    LOBYTE(v68[0]) = 0x1010102u >> (8 * v33);
    v44(v68);
    if ((v45 & 1) == 0)
    {
      v68[0] = v30;
      v68[1] = v31;
      v69 = v32;
      v23 = v68;
      goto LABEL_5;
    }
LABEL_6:
    result = swift_bridgeObjectRelease();
  }
  v28 = v26 + 3;
  if (v28 >= v63)
  {
LABEL_33:
    v46 = v67;
    swift_release();
    v47 = v56;
    v48 = v58;
    v49 = v60;
    v54(v56, v58, v60);
    v50 = v59;
    v51 = (*(unsigned __int8 *)(v59 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    v52 = swift_allocObject();
    *(_BYTE *)(v52 + 16) = v57 & 1;
    *(_QWORD *)(v52 + 24) = v3;
    *(_QWORD *)(v52 + 32) = v46;
    (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v52 + v51, v47, v49);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23B9C7824((uint64_t)&unk_256A604B8, v52);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v48, v49);
  }
  v27 = *(_QWORD *)(v62 + 8 * v28);
  if (v27)
  {
    v22 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v22 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v22 >= v63)
      goto LABEL_33;
    v27 = *(_QWORD *)(v62 + 8 * v22);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23BAB77C0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a2;
  if ((a1 & 1) != 0)
  {
    v5 = (_QWORD *)swift_task_alloc();
    v4[8] = v5;
    *v5 = v4;
    v5[1] = sub_23BAB7868;
    return sub_23BAB3B4C();
  }
  else
  {
    sub_23BB8A9F4();
    v4[10] = sub_23BB8A9E8();
    v4[11] = sub_23BB8A988();
    v4[12] = v7;
    return swift_task_switch();
  }
}

uint64_t sub_23BAB7868()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_23BB8A9F4();
    v2[10] = sub_23BB8A9E8();
    v2[11] = sub_23BB8A988();
    v2[12] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_23BAB7910()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v3 = (uint64_t (*)(_QWORD))(**(int **)(v0[5] + 48) + *(_QWORD *)(v0[5] + 48));
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_23BAB7970;
  return v3(v0[6]);
}

uint64_t sub_23BAB7970()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAB79D0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB7A00()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAB7A3C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 112);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v12);
    sub_23BB8ACB8();
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v9 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v9, v10, &v12);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB7C20()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v12);
    sub_23BB8ACB8();
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v9 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v9, v10, &v12);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PeopleLocationsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char *v36;
  int v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[2];
  char v41;
  uint64_t v42;

  v3 = v2;
  v37 = a2;
  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v35[1] = v9;
  v36 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v35 - v11;
  swift_getKeyPath();
  v42 = v2;
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v13 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v38 = v12;
  v39 = v5;
  v35[0] = v14;
  v14(v12, v13, v5);
  v15 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a1 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_5;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v27 >= v19)
      goto LABEL_21;
    v28 = *(_QWORD *)(v15 + 8 * v27);
    ++v21;
    if (!v28)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v19)
        goto LABEL_21;
      v28 = *(_QWORD *)(v15 + 8 * v21);
      if (!v28)
      {
        v21 = v27 + 2;
        if (v27 + 2 >= v19)
          goto LABEL_21;
        v28 = *(_QWORD *)(v15 + 8 * v21);
        if (!v28)
          break;
      }
    }
LABEL_20:
    v18 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_5:
    v24 = *(_QWORD *)(a1 + 48) + 24 * v23;
    v25 = *(_QWORD *)v24;
    v26 = *(_QWORD *)(v24 + 8);
    LOBYTE(v24) = *(_BYTE *)(v24 + 16);
    v40[0] = v25;
    v40[1] = v26;
    v41 = v24;
    swift_bridgeObjectRetain();
    sub_23BAB6EEC((uint64_t)v40);
    result = swift_bridgeObjectRelease();
  }
  v29 = v27 + 3;
  if (v29 >= v19)
  {
LABEL_21:
    swift_release();
    v30 = v36;
    v32 = v38;
    v31 = v39;
    ((void (*)(char *, char *, uint64_t))v35[0])(v36, v38, v39);
    v33 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = v37 & 1;
    *(_QWORD *)(v34 + 24) = v3;
    *(_QWORD *)(v34 + 32) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v34 + v33, v30, v31);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23B9C7824((uint64_t)&unk_256A604C8, v34);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v32, v31);
  }
  v28 = *(_QWORD *)(v15 + 8 * v29);
  if (v28)
  {
    v21 = v29;
    goto LABEL_20;
  }
  while (1)
  {
    v21 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v21 >= v19)
      goto LABEL_21;
    v28 = *(_QWORD *)(v15 + 8 * v21);
    ++v29;
    if (v28)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23BAB8100(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v8;

  v4[5] = a4;
  if ((a1 & 1) != 0)
  {
    v5 = (_QWORD *)swift_task_alloc();
    v4[6] = v5;
    *v5 = v4;
    v5[1] = sub_23BAB8188;
    return sub_23BAB47A8();
  }
  else
  {
    v8 = (_QWORD *)swift_task_alloc();
    v4[8] = v8;
    *v8 = v4;
    v8[1] = sub_23BAB81F4;
    return sub_23BAB4EB0(a3);
  }
}

uint64_t sub_23BAB8188()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23BAB81F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23BAB8260()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000003BLL, 0x800000023BB9AC00, &v12);
    sub_23BB8ACB8();
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v9 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v9, v10, &v12);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB8450()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000003BLL, 0x800000023BB9AC00, &v12);
    sub_23BB8ACB8();
    *(_WORD *)(v6 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v9 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v9, v10, &v12);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PeopleLocationsProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23BAB315C(v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_23BA2EA10(*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback), *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback + 8));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PeopleLocationsProvider.__deallocating_deinit()
{
  PeopleLocationsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23BAB8770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  return sub_23BAB30FC(v3, a1);
}

uint64_t sub_23BAB8808(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A14();
  swift_release();
  return sub_23BAB315C(a1);
}

void (*sub_23BAB889C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PeopleLocationsProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23BAB88E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAB8980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = sub_23BB891C4();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v5 = *(_QWORD *)(v31 + 64);
  MEMORY[0x24BDAC7A8](v4, v6);
  v7 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v30 = (char *)&v29 - v10;
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  LOBYTE(a1) = *(_BYTE *)(a1 + 16);
  swift_getKeyPath();
  v35 = v1;
  sub_23BAB3070();
  sub_23BB88A20();
  swift_release();
  v13 = v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_23BAB9614(v14, v11, v12, a1);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v15 + 16))
  {
    swift_getKeyPath();
    v34 = v1;
    sub_23BB88A20();
    swift_release();
    v16 = v31;
    v17 = v13;
    v18 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v7, v17, v32);
    v19 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v2;
    *(_QWORD *)(v20 + 24) = v15;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v20 + v19, v7, v18);
    swift_retain();
    sub_23B9C7824((uint64_t)&unk_256A60648, v20);
    return swift_release();
  }
  else
  {
    swift_release();
    swift_getKeyPath();
    v34 = v1;
    sub_23BB88A20();
    swift_release();
    v23 = v30;
    v22 = v31;
    v24 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v13, v32);
    v25 = sub_23BB891AC();
    v26 = sub_23BB8ABEC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v34 = v28;
      *(_DWORD *)v27 = 136315138;
      v33 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9BA10, &v34);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v25, v26, "PeopleLocationsProvider: %s - Received new capable person without existing subscription", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v28, -1, -1);
      MEMORY[0x24260D9B4](v27, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  }
}

uint64_t sub_23BAB8CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  sub_23BB8A9F4();
  v3[8] = sub_23BB8A9E8();
  v3[9] = sub_23BB8A988();
  v3[10] = v4;
  return swift_task_switch();
}

uint64_t sub_23BAB8D58()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v3 = (uint64_t (*)(_QWORD))(**(int **)(v0[5] + 48) + *(_QWORD *)(v0[5] + 48));
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_23BAB8DB8;
  return v3(v0[6]);
}

uint64_t sub_23BAB8DB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAB8E18()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB8E48()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAB8E84()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 96);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9BA10, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v10 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v10, v11, &v14);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 96);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAB9070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BAB90D0(uint64_t a1)
{
  sub_23B9BE424(*(_QWORD *)a1, *(void **)(a1 + 8));
  return a1;
}

uint64_t sub_23BAB912C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = v0 + ((v2 + 40) & ~v2);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23B990D68;
  return sub_23BAB77C0(v3, v4, v5, v6);
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BAB922C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = v0 + ((v2 + 40) & ~v2);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23B990D68;
  return sub_23BAB8100(v3, v4, v5, v6);
}

unint64_t sub_23BAB92B0(uint64_t a1)
{
  unint64_t result;

  result = sub_23BAB3070();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23BAB92D4()
{
  return type metadata accessor for PeopleLocationsProvider();
}

void sub_23BAB92DC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BAB93B8(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PeopleLocationsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleLocationsProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_23BAB93B8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A60580)
  {
    v2 = sub_23B990690();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for PeopleLocationsProvider.Subscription, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A60580);
  }
}

ValueMetadata *type metadata accessor for PeopleLocationsProvider.InputValue()
{
  return &type metadata for PeopleLocationsProvider.InputValue;
}

uint64_t sub_23BAB9420(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int v22;
  unint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v25 = (unint64_t *)result;
  v9 = 0;
  v10 = 0;
  v11 = a3 + 56;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = a6;
  v15 = v13 & *(_QWORD *)(a3 + 56);
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (2)
  {
    v26 = v9;
    while (1)
    {
      if (v15)
      {
        v16 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v17 = v16 | (v10 << 6);
      }
      else
      {
        if (__OFADD__(v10++, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        if (v10 >= v27)
          goto LABEL_30;
        v19 = *(_QWORD *)(v11 + 8 * v10);
        if (!v19)
        {
          v20 = v10 + 1;
          if (v10 + 1 >= v27)
            goto LABEL_30;
          v19 = *(_QWORD *)(v11 + 8 * v20);
          if (!v19)
          {
            v20 = v10 + 2;
            if (v10 + 2 >= v27)
              goto LABEL_30;
            v19 = *(_QWORD *)(v11 + 8 * v20);
            if (!v19)
            {
              v20 = v10 + 3;
              if (v10 + 3 >= v27)
              {
LABEL_30:
                swift_retain();
                return sub_23BAE43C0(v25, a2, v26, a3);
              }
              v19 = *(_QWORD *)(v11 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  v10 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_32;
                  if (v10 >= v27)
                    goto LABEL_30;
                  v19 = *(_QWORD *)(v11 + 8 * v10);
                  ++v20;
                  if (v19)
                    goto LABEL_19;
                }
              }
            }
          }
          v10 = v20;
        }
LABEL_19:
        v15 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v10 << 6);
      }
      v21 = *(_QWORD *)(a3 + 48) + 24 * v17;
      result = *(_QWORD *)v21;
      v22 = *(unsigned __int8 *)(v21 + 16);
      if (*(_QWORD *)v21 != a4 || *(_QWORD *)(v21 + 8) != a5)
      {
        result = sub_23BB8B1A4();
        if ((result & 1) == 0)
          continue;
      }
      if (v22 == v14)
        break;
    }
    *(unint64_t *)((char *)v25 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v9 = v26 + 1;
    if (!__OFADD__(v26, 1))
      continue;
    break;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23BAB9614(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v4;
  char v9;
  unsigned int v10;
  unint64_t v11;
  size_t v12;
  uint64_t isStackAllocationSafe;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x24BDAC8D0];
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  v12 = 8 * v11;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v14);
    bzero((char *)v18 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    swift_bridgeObjectRetain();
    v15 = sub_23BAB9420((uint64_t)v18 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, a1, a2, a3, a4);
    swift_release();
    swift_bridgeObjectRelease();
    if (v4)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = (void *)swift_slowAlloc();
    bzero(v16, v12);
    swift_bridgeObjectRetain();
    v15 = sub_23BAB9420((uint64_t)v16, v11, a1, a2, a3, a4);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x24260D9B4](v16, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v15;
}

uint64_t sub_23BAB97F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BAB9874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v0 + ((v2 + 32) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23B990D68;
  return sub_23BAB8CE8(v3, v4, v5);
}

uint64_t sub_23BAB98EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BAB3364(a1, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription, a2);
}

uint64_t sub_23BAB9914()
{
  uint64_t v0;

  return sub_23B97F948(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateResetTaskBySubscription);
}

uint64_t sub_23BAB9934@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BAB3364(a1, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateFallbackTaskBySubscription, a2);
}

uint64_t sub_23BAB995C()
{
  uint64_t v0;

  return sub_23B97F948(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__loadingStateFallbackTaskBySubscription);
}

uint64_t sub_23BAB9984()
{
  return sub_23BAB9C24();
}

_QWORD *sub_23BAB9998(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

unint64_t sub_23BAB9A00()
{
  unint64_t result;

  result = qword_256A60660;
  if (!qword_256A60660)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleLocationsProvider.Subscription.Identifier, &type metadata for PeopleLocationsProvider.Subscription.Identifier);
    atomic_store(result, &qword_256A60660);
  }
  return result;
}

uint64_t sub_23BAB9A44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = v0[4];
  v3 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__didChangeDataStorageCallback);
  v4 = *v3;
  v5 = v3[1];
  *v3 = v1;
  v3[1] = v2;
  sub_23BA2EA0C();
  return sub_23BA2EA10(v4, v5);
}

uint64_t sub_23BAB9A98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAB9ABC()
{
  uint64_t v0;

  return sub_23BB4F044(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23BAB9AC4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BAB9AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60670);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAB9B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A60670) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B97C964;
  return sub_23BAB4044(a1, v6, v7, v8, v9);
}

uint64_t sub_23BAB9C24()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__valuePublisher) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_23BAB9C64(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_23B989540(v3);
  return a1;
}

uint64_t sub_23BAB9D1C(uint64_t a1)
{
  void *v3;

  v3 = *(void **)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_23B990B20(v3);
  return a1;
}

void **sub_23BAB9DD4(void **a1)
{
  void *v2;
  id v3;

  v2 = *a1;
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23BAB9E64()
{
  uint64_t v0;
  void *v1;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 80);
  if (v1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23BAB9EDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B990D68;
  return sub_23BAB5DB4(a1, v4, v5, v6, v7, v8, (uint64_t)(v1 + 7));
}

uint64_t sub_23BAB9F6C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23BAB9F94()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BAB9FC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B990D68;
  return sub_23BAB6A2C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23BABA06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BABA0B4()
{
  uint64_t v0;

  return sub_23BAB319C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BABA0D0()
{
  return sub_23BAB3144();
}

uint64_t sub_23BABA0E4()
{
  return sub_23BAB995C();
}

uint64_t sub_23BABA0F8()
{
  return sub_23BAB9914();
}

uint64_t DeviceImageProvider.Dependencies.init(deviceImageForSubscription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

_QWORD *_s12DependenciesVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t _s12DependenciesVwxx_0()
{
  return swift_release();
}

_QWORD *_s12DependenciesVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s12DependenciesVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeviceImageProvider.Dependencies()
{
  return &type metadata for DeviceImageProvider.Dependencies;
}

_QWORD *sub_23BABA1C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v15;
      *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_23BABA334(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23BB88984();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23BABA3D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_23BB88984();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    *((_WORD *)v11 + 8) = *((_WORD *)v12 + 8);
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_23BABA51C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for ShareSentMessageView.ShareState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
      v11[16] = v12[16];
      v11[17] = v12[17];
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for ShareSentMessageView.ShareState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A60720);
}

char *sub_23BABA6B0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_23BABA7C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for ShareSentMessageView.ShareState);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23BB88984();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_23BABA8E8()
{
  unint64_t v0;
  _QWORD v1[6];

  sub_23BA19EA8();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[4] = v1;
    v1[5] = &unk_23BB93AD0;
    swift_initEnumMetadataMultiPayload();
  }
}

_QWORD *sub_23BABA968(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for ShareSentMessageView.ShareState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)v4 = *(_OWORD *)a2;
      v4[2] = a2[2];
      *((_WORD *)v4 + 12) = *((_WORD *)a2 + 12);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
        v17 = a3[5];
        v18 = a3[6];
        v19 = *(void **)((char *)a2 + v17);
        *(_QWORD *)((char *)v4 + v17) = v19;
        v20 = (_QWORD *)((char *)v4 + v18);
        v21 = (_QWORD *)((char *)a2 + v18);
        v22 = v21[1];
        *v20 = *v21;
        v20[1] = v22;
        v23 = a3[7];
        v24 = a3[8];
        v25 = (_QWORD *)((char *)v4 + v23);
        v26 = (_QWORD *)((char *)a2 + v23);
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        v28 = (_OWORD *)((char *)v4 + v24);
        v29 = (_OWORD *)((char *)a2 + v24);
        v30 = v29[1];
        *v28 = *v29;
        v28[1] = v30;
        v31 = a3[9];
        v32 = (char *)v4 + v31;
        v33 = (char *)a2 + v31;
        *v32 = *v33;
        *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
        v34 = v19;
        swift_retain();
        swift_retain();
        goto LABEL_13;
      }
      v9 = sub_23BB88984();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v4, a2, v9);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
      }
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
      v14 = (char *)v4 + v13;
      v15 = (char *)a2 + v13;
      v16 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  v12 = *a2;
  *a1 = *a2;
  v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_13:
  swift_retain();
  return v4;
}

uint64_t sub_23BABAB5C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for ShareSentMessageView.ShareState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    v5 = sub_23BB88984();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8);
    goto LABEL_6;
  }
LABEL_7:

  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_23BABAC3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  id v32;

  v6 = type metadata accessor for ShareSentMessageView.ShareState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  if (!EnumCaseMultiPayload)
  {
    v8 = sub_23BB88984();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_10:
  v15 = a3[5];
  v16 = a3[6];
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[7];
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v21);
  v24 = (_QWORD *)((char *)a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = (_OWORD *)((char *)a1 + v22);
  v27 = (_OWORD *)((char *)a2 + v22);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = a3[9];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  v32 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23BABAE08(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for ShareSentMessageView.ShareState);
    v6 = type metadata accessor for ShareSentMessageView.ShareState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      v12[16] = v13[16];
      v12[17] = v13[17];
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_11:
  v14 = a3[5];
  v15 = *(void **)((char *)a1 + v14);
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = v16;

  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
  *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
  v29 = a3[9];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_23BABB04C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;

  v6 = type metadata accessor for ShareSentMessageView.ShareState(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = sub_23BB88984();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
    v11 = &a1[v10];
    v12 = &a2[v10];
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_WORD *)v11 + 8) = *((_WORD *)v12 + 8);
    swift_storeEnumTagMultiPayload();
  }
  v13 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *sub_23BABB1A4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for ShareSentMessageView.ShareState);
    v6 = type metadata accessor for ShareSentMessageView.ShareState(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_23BB88984();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_WORD *)v11 + 8) = *((_WORD *)v12 + 8);
      swift_storeEnumTagMultiPayload();
    }
  }
  v13 = a3[5];
  v14 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];

  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  swift_release();
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  swift_release();
  v15 = a3[8];
  v16 = a3[9];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *v17 = *v18;
  *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
  *((_QWORD *)v17 + 3) = *((_QWORD *)v18 + 3);
  v19 = &a1[v16];
  v20 = &a2[v16];
  *v19 = *v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_release();
  return a1;
}

uint64_t sub_23BABB360()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BABB36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ShareSentMessageView.ShareState(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BABB3E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BABB3F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ShareSentMessageView.ShareState(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ShareSentMessageView(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A607B0);
}

uint64_t sub_23BABB480()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ShareSentMessageView.ShareState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BABB514()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_23BABB524(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void sub_23BABB534(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  char *v26;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A607F8);
  MEMORY[0x24BDAC7A8](v30, v2);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60800);
  MEMORY[0x24BDAC7A8](v38, v3);
  v32 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShareSentMessageView(0);
  v27[1] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60808);
  MEMORY[0x24BDAC7A8](v33, v7);
  v27[3] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60810);
  v27[5] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v9);
  v27[2] = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v27[4] = (char *)v27 - v13;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60818);
  MEMORY[0x24BDAC7A8](v34, v14);
  v36 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60820);
  MEMORY[0x24BDAC7A8](v28, v16);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60828);
  MEMORY[0x24BDAC7A8](v35, v17);
  v31 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60830);
  MEMORY[0x24BDAC7A8](v29, v19);
  MEMORY[0x24BDAC7A8](v20, v21);
  v22 = type metadata accessor for ShareSentMessageView.ShareState(0);
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23B989CE8(v1, (uint64_t)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
  v26 = (char *)sub_23BABB854 + 4 * word_23BB93AA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BABB854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;

  v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8) + 48);
  v7 = *(_QWORD *)v6;
  v8 = *(_QWORD *)(v6 + 8);
  *(_QWORD *)(v5 - 224) = v8;
  v9 = *(_QWORD *)(v5 - 280);
  sub_23BABC3C0(v7, v8, *(unsigned __int16 *)(v6 + 16), v3, 0, v9);
  v10 = v3 + *(int *)(v0 + 36);
  v11 = *(_BYTE *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  *(_BYTE *)(v5 - 160) = v11;
  *(_QWORD *)(v5 - 152) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0E8();
  sub_23B989CE8(v3, v2, type metadata accessor for ShareSentMessageView);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 296) + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject();
  sub_23BABE7F8(v2, v15 + v14);
  *(_QWORD *)(v5 - 240) = sub_23BABE3F4();
  v23 = sub_23BABE588();
  v16 = *(_QWORD *)(v5 - 288);
  v17 = *(_QWORD *)(v5 - 216);
  sub_23BB89EC0();
  swift_release();
  swift_release();
  swift_release();
  sub_23B989D60(v9, &qword_256A60808);
  v18 = *(_QWORD *)(v5 - 264);
  v19 = *(_QWORD *)(v5 - 272);
  v20 = *(_QWORD *)(v5 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v16, v20);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v1, v19, v20);
  swift_storeEnumTagMultiPayload();
  sub_23B996E1C(&qword_256A60890, &qword_256A60830, (uint64_t)&unk_23BB93810);
  *(_QWORD *)(v5 - 144) = v17;
  *(_QWORD *)(v5 - 136) = &type metadata for StopSharingView;
  *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 240);
  *(_QWORD *)(v5 - 120) = v23;
  swift_getOpaqueTypeConformance2();
  v21 = *(_QWORD *)(v5 - 232);
  sub_23BB89944();
  sub_23B989EFC(v21, *(_QWORD *)(v5 - 192), &qword_256A60828);
  swift_storeEnumTagMultiPayload();
  sub_23BABE648();
  sub_23BABE710();
  sub_23BB89944();
  sub_23B989D60(v21, &qword_256A60828);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  return sub_23B989D60(v4, (uint64_t *)&unk_256A5E6B0);
}

double sub_23BABC040@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  double result;
  __int128 v38;
  __int128 v39;
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(_BYTE *@<X8>);
  uint64_t v48;
  __int16 v49;
  char v50;
  char v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  unsigned __int16 v55;
  unsigned __int8 v56;
  char v57;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A780);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for ShareSentMessageView(0) + 32));
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  if (v7 == 1)
  {
    v10 = (void *)sub_23BB8A784();
    v11 = objc_msgSend(v9, sel_localizedStringForKey_value_table_, v10, 0, 0);

    v12 = sub_23BB8A7B4();
    v14 = v13;

    *(_QWORD *)&v52 = v12;
    *((_QWORD *)&v52 + 1) = v14;
    v43 = 10;
    v44 = 0xE100000000000000;
    v15 = sub_23BB889E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    sub_23B9967E0();
    sub_23BB8AD00();
    v17 = v16;
    v19 = v18;
    sub_23B989D60((uint64_t)v6, &qword_256A5A780);
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      v21 = 0;
      v23 = 0;
    }
    else
    {
      v20 = sub_23BB8A88C();
      v21 = MEMORY[0x24260C73C](v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      v24 = sub_23BABEBF4(v17, v12, v14);
      v26 = v25;
      v28 = v27;
      v30 = v29;
      swift_bridgeObjectRelease();
      v12 = MEMORY[0x24260C73C](v24, v26, v28, v30);
      v14 = v31;
      swift_bridgeObjectRelease();
    }
    v43 = v21;
    v44 = v23;
    v45 = v12;
    v46 = v14;
    v47 = sub_23B997724;
    v48 = 0;
    v50 = 65;
    v49 = 1;
    v51 = 0;
  }
  else
  {
    v32 = (void *)sub_23BB8A784();
    v33 = objc_msgSend(v9, sel_localizedStringForKey_value_table_, v32, 0, 0);

    v34 = sub_23BB8A7B4();
    v36 = v35;

    v43 = 0;
    v44 = 0;
    v45 = v34;
    v46 = v36;
    v47 = sub_23BAF98A0;
    v48 = 0;
    v50 = 65;
    v49 = 1;
    v51 = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A160);
  sub_23B996E1C((unint64_t *)&qword_256A5A170, &qword_256A5A160, (uint64_t)&unk_23BB94DB8);
  sub_23BB89944();
  result = *(double *)&v52;
  v38 = v53;
  v39 = v54;
  v40 = v55 | (v56 << 16);
  v41 = v57;
  *(_OWORD *)a1 = v52;
  *(_OWORD *)(a1 + 16) = v38;
  *(_OWORD *)(a1 + 32) = v39;
  *(_WORD *)(a1 + 48) = v40;
  *(_BYTE *)(a1 + 50) = BYTE2(v40);
  *(_BYTE *)(a1 + 51) = v41;
  return result;
}

uint64_t sub_23BABC3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  char *v48;
  uint64_t v49;
  uint64_t ObjCClassFromMetadata;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_BYTE *@<X8>);
  uint64_t v82;
  __int16 v83;
  char v84;

  v68 = a5;
  v71 = a4;
  LODWORD(v70) = a3;
  v67 = a1;
  v75 = a6;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60870);
  MEMORY[0x24BDAC7A8](v76, v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v66 - v12;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608A0);
  MEMORY[0x24BDAC7A8](v73, v14);
  v72 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608A8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60860);
  MEMORY[0x24BDAC7A8](v74, v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ShareSentMessageView(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v23, v26);
  v27 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v66 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608B0);
  MEMORY[0x24BDAC7A8](v32, v33);
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
  v69 = v16;
  if (a2)
  {
    v38 = v71;
    if ((v70 & 0x101) != 0)
    {
      v39 = v71;
      sub_23B989CE8(v71, (uint64_t)v31, type metadata accessor for ShareSentMessageView);
      v40 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v41 = swift_allocObject();
      sub_23BABE7F8((uint64_t)v31, v41 + v40);
      sub_23B989CE8(v39, (uint64_t)v27, type metadata accessor for ShareSentMessageView);
      v42 = swift_allocObject();
      sub_23BABE7F8((uint64_t)v27, v42 + v40);
      KeyPath = swift_getKeyPath();
      *(_QWORD *)v9 = sub_23BABEC94;
      *((_QWORD *)v9 + 1) = v41;
      *((_QWORD *)v9 + 2) = sub_23BABECA4;
      *((_QWORD *)v9 + 3) = v42;
      v9[32] = 64;
      v44 = v76;
      v45 = (uint64_t *)&v9[*(int *)(v76 + 60)];
      *v45 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
      swift_storeEnumTagMultiPayload();
      v46 = &v9[*(int *)(v44 + 64)];
      *(_QWORD *)v46 = KeyPath;
      v46[8] = 0;
      sub_23B990D24((uint64_t)v9, (uint64_t)v13, &qword_256A60870);
      sub_23B989EFC((uint64_t)v13, v72, &qword_256A60870);
      swift_storeEnumTagMultiPayload();
      sub_23BABE4DC();
      sub_23B996E1C(&qword_256A60868, &qword_256A60870, (uint64_t)&unk_23BB93810);
      sub_23BB89944();
      return sub_23B989D60((uint64_t)v13, &qword_256A60870);
    }
    v48 = (char *)&v66 - v37;
    v49 = v34;
    v70 = v35;
    v62 = sub_23BABCAE8(v68 & 1, v67, a2);
    v77 = 0;
    v78 = 0;
    v79 = v62;
    v80 = v63;
    v81 = sub_23BAF98A0;
    v82 = 0;
    v83 = 0;
    v84 = 64;
    sub_23B989CE8(v38, (uint64_t)v31, type metadata accessor for ShareSentMessageView);
    v64 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v65 = swift_allocObject();
    sub_23BABE7F8((uint64_t)v31, v65 + v64);
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A160);
    v60 = sub_23B996E1C((unint64_t *)&qword_256A5A170, &qword_256A5A160, (uint64_t)&unk_23BB94DB8);
    sub_23BB89DAC();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = v70;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v19, v48, v49);
  }
  else
  {
    v48 = (char *)&v66 - v37;
    v49 = v34;
    v70 = v35;
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v51 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v52 = (void *)sub_23BB8A784();
    v53 = objc_msgSend(v51, sel_localizedStringForKey_value_table_, v52, 0, 0);

    v54 = sub_23BB8A7B4();
    v56 = v55;

    v77 = 0;
    v78 = 0;
    v79 = v54;
    v80 = v56;
    v81 = sub_23BAF98A0;
    v82 = 0;
    v83 = 0;
    v84 = 64;
    sub_23B989CE8(v71, (uint64_t)v31, type metadata accessor for ShareSentMessageView);
    v57 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v58 = swift_allocObject();
    sub_23BABE7F8((uint64_t)v31, v58 + v57);
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A160);
    v60 = sub_23B996E1C((unint64_t *)&qword_256A5A170, &qword_256A5A160, (uint64_t)&unk_23BB94DB8);
    sub_23BB89DAC();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = v70;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v19, v48, v49);
  }
  swift_storeEnumTagMultiPayload();
  v77 = v59;
  v78 = v60;
  swift_getOpaqueTypeConformance2();
  sub_23BB89944();
  sub_23B989EFC((uint64_t)v22, v72, &qword_256A60860);
  swift_storeEnumTagMultiPayload();
  sub_23BABE4DC();
  sub_23B996E1C(&qword_256A60868, &qword_256A60870, (uint64_t)&unk_23BB93810);
  sub_23BB89944();
  sub_23B989D60((uint64_t)v22, &qword_256A60860);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v48, v49);
}

uint64_t sub_23BABCAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 64) = sub_23B9A5C8C();
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  v9 = (void *)sub_23BB8A784();
  v10 = objc_msgSend(v8, sel_localizedStringForKey_value_table_, v9, 0, 0);

  sub_23BB8A7B4();
  swift_bridgeObjectRetain();
  v11 = sub_23BB8A7CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23BABCC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608C0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ShareSentMessageView(0) + 32) + 16);
  *(_QWORD *)v7 = sub_23BB8983C();
  *((_QWORD *)v7 + 1) = v8;
  v7[16] = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608C8);
  sub_23BABCDA8(a1, (uint64_t)&v7[*(int *)(v9 + 44)]);
  LOBYTE(a1) = sub_23BB89BA8();
  sub_23BB892A8();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  sub_23B989EFC((uint64_t)v7, a2, &qword_256A608C0);
  v18 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A608D0) + 36);
  *(_BYTE *)v18 = a1;
  *(_QWORD *)(v18 + 8) = v11;
  *(_QWORD *)(v18 + 16) = v13;
  *(_QWORD *)(v18 + 24) = v15;
  *(_QWORD *)(v18 + 32) = v17;
  *(_BYTE *)(v18 + 40) = 0;
  return sub_23B989D60((uint64_t)v7, &qword_256A608C0);
}

uint64_t sub_23BABCDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, _QWORD, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t result;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[200];
  _OWORD v120[12];
  uint64_t v121;
  _OWORD v122[12];
  uint64_t v123;
  _QWORD v124[27];
  char v125;
  char v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;

  v118 = a2;
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608D8);
  MEMORY[0x24BDAC7A8](v100, v3);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v98 = (char *)&v93 - v8;
  v109 = sub_23BB894A0();
  v111 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v9);
  v108 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v107 = (char *)&v93 - v13;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608E0);
  MEMORY[0x24BDAC7A8](v101, v14);
  v97 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v99 = (uint64_t)&v93 - v18;
  v19 = sub_23BB89C98();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for ShareSentMessageView.ExpirationDatePill(0);
  MEMORY[0x24BDAC7A8](v110, v24);
  v112 = (uint64_t)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D610);
  v105 = *(_QWORD *)(v26 - 8);
  v106 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v104 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D618);
  v113 = *(_QWORD *)(v29 - 8);
  v114 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v103 = (uint64_t)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32, v33);
  v102 = (uint64_t)&v93 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608E8);
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (uint64_t *)((char *)&v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v41);
  v43 = (char *)&v93 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F8);
  MEMORY[0x24BDAC7A8](v44, v45);
  v117 = (uint64_t)&v93 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47, v48);
  v115 = (char *)&v93 - v49;
  v116 = a1;
  sub_23BABD6D8(v38);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
  {
    sub_23B989D60((uint64_t)v38, &qword_256A608E8);
    v50 = 1;
    v52 = (uint64_t)v115;
    v51 = v116;
  }
  else
  {
    v96 = v5;
    sub_23B990D24((uint64_t)v38, (uint64_t)v43, &qword_256A608F0);
    v95 = v43;
    sub_23B989EFC((uint64_t)v43, v112, &qword_256A608F0);
    v124[0] = 0x401A000000000000;
    v53 = *MEMORY[0x24BDF18E8];
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
    v54(v23, v53, v19);
    sub_23BA2C01C();
    sub_23BB89344();
    v124[0] = 0x4018000000000000;
    v54(v23, v53, v19);
    sub_23BB89344();
    v55 = *(void (**)(char *, _QWORD, uint64_t))(v111 + 104);
    v56 = v107;
    v57 = v109;
    v55(v107, *MEMORY[0x24BDECF10], v109);
    v58 = v108;
    v55(v108, *MEMORY[0x24BDECEA0], v57);
    sub_23B97D0C8((unint64_t *)&qword_256A60910, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    result = sub_23BB8A754();
    if ((result & 1) == 0)
    {
      __break(1u);
      return result;
    }
    v60 = v100;
    v61 = v98;
    v62 = &v98[*(int *)(v100 + 48)];
    v63 = v109;
    v64 = v111;
    v65 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
    v65(v98, v56, v109);
    v94 = v62;
    v65(v62, v58, v63);
    v66 = v96;
    v67 = &v96[*(int *)(v60 + 48)];
    v68 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v68(v96, v61, v63);
    v68(v67, v62, v63);
    v69 = (uint64_t)v97;
    v65(v97, v66, v63);
    v70 = *(void (**)(char *, uint64_t))(v64 + 8);
    v70(v67, v63);
    v71 = &v66[*(int *)(v60 + 48)];
    v65(v66, v61, v63);
    v65(v71, v94, v63);
    v65((char *)(v69 + *(int *)(v101 + 36)), v71, v63);
    v70(v66, v63);
    v72 = v99;
    sub_23B990D24(v69, v99, &qword_256A608E0);
    sub_23B97D0C8(&qword_256A60918, type metadata accessor for ShareSentMessageView.ExpirationDatePill, (uint64_t)&unk_23BB93C2C);
    sub_23B996E1C(&qword_256A60920, &qword_256A608E0, MEMORY[0x24BEE08F8]);
    v73 = v104;
    v74 = v112;
    sub_23BB89DF4();
    sub_23B989D60(v72, &qword_256A608E0);
    sub_23B989D9C(v74, type metadata accessor for ShareSentMessageView.ExpirationDatePill);
    v75 = type metadata accessor for ShareSentMessageView(0);
    v51 = v116;
    if (*(_BYTE *)(v116 + *(int *)(v75 + 32)) == 1)
      v76 = sub_23BB8A2E0();
    else
      v76 = sub_23BB8A2BC();
    v52 = (uint64_t)v115;
    v78 = v103;
    v79 = sub_23BA29E24(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v103, 0.0, 1, 0.0, 1, v76, v77);
    (*(void (**)(char *, uint64_t, double))(v105 + 8))(v73, v106, v79);
    sub_23B989D60((uint64_t)v95, &qword_256A608F0);
    v80 = v102;
    sub_23B990D24(v78, v102, &qword_256A5D618);
    sub_23B990D24(v80, v52, &qword_256A5D618);
    v50 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v52, v50, 1, v114);
  if ((*(_BYTE *)(v51 + *(int *)(type metadata accessor for ShareSentMessageView(0) + 32)) & 1) != 0)
  {
    sub_23BABEE2C((uint64_t)v122);
  }
  else
  {
    LOBYTE(v122[0]) = 0;
    sub_23BB8A0C4();
    v81 = v124[0];
    v82 = v124[1];
    v83 = sub_23BB89B9C();
    sub_23BB892A8();
    v124[25] = sub_23B994A30;
    v124[26] = 0;
    v125 = 0;
    v126 = v81;
    v127 = v82;
    v128 = v83;
    v129 = v84;
    v130 = v85;
    v131 = v86;
    v132 = v87;
    v133 = 0;
    sub_23BB8A2E0();
    sub_23BA29E7C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v120, 0.0, 1, 0.0, 1);
    swift_release();
    v122[10] = v120[10];
    v122[11] = v120[11];
    v123 = v121;
    v122[6] = v120[6];
    v122[7] = v120[7];
    v122[8] = v120[8];
    v122[9] = v120[9];
    v122[2] = v120[2];
    v122[3] = v120[3];
    v122[4] = v120[4];
    v122[5] = v120[5];
    v122[0] = v120[0];
    v122[1] = v120[1];
    nullsub_1(v122);
  }
  sub_23B990D24((uint64_t)v122, (uint64_t)v124, &qword_256A60900);
  v88 = v117;
  sub_23B989EFC(v52, v117, &qword_256A608F8);
  sub_23B990D24((uint64_t)v124, (uint64_t)v119, &qword_256A60900);
  v89 = v118;
  sub_23B989EFC(v88, v118, &qword_256A608F8);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60908);
  v91 = v89 + *(int *)(v90 + 48);
  sub_23B990D24((uint64_t)v119, (uint64_t)v120, &qword_256A60900);
  sub_23B990D24((uint64_t)v120, v91, &qword_256A60900);
  v92 = v89 + *(int *)(v90 + 64);
  *(_QWORD *)v92 = 0;
  *(_BYTE *)(v92 + 8) = 1;
  sub_23BABED8C(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BABED58);
  sub_23B989D60(v52, &qword_256A608F8);
  sub_23B990D24((uint64_t)v119, (uint64_t)v122, &qword_256A60900);
  sub_23BABED8C(v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23BABEDF8);
  return sub_23B989D60(v88, &qword_256A608F8);
}

uint64_t sub_23BABD6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t (*v21)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = sub_23BB88984();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v32 - v15;
  v17 = type metadata accessor for ShareSentMessageView.ShareState(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (unint64_t *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23B989CE8(v2, (uint64_t)v20, v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v24 = *v20;
    swift_bridgeObjectRelease();
    v25 = sub_23BA9AED8(v24);
    if (v26)
    {
      *a1 = v25;
      a1[1] = v26;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 0, 1, v27);
    }
    else
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 1, 1, v31);
    }
  }
  else if (EnumCaseMultiPayload)
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
    return sub_23B989D9C((uint64_t)v20, type metadata accessor for ShareSentMessageView.ShareState);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8);
    swift_bridgeObjectRelease();
    sub_23B990D24((uint64_t)v20, (uint64_t)v16, (uint64_t *)&unk_256A5E6B0);
    sub_23B989EFC((uint64_t)v16, (uint64_t)v12, (uint64_t *)&unk_256A5E6B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v12, v4);
      (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(a1, v8, v4);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 0, 1, v30);
    }
    return sub_23B989D60((uint64_t)v16, (uint64_t *)&unk_256A5E6B0);
  }
}

void sub_23BABD9D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(_QWORD);
  unint64_t v9;
  uint64_t v10;
  id v11;
  _BYTE v12[8];
  id v13;

  v2 = type metadata accessor for ShareSentMessageView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = *(void **)(a1 + *(int *)(v6 + 20));
  v12[0] = 1;
  v13 = v7;
  sub_23B989CE8(a1, (uint64_t)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  sub_23BABE7F8((uint64_t)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v10 + v9);
  sub_23BABED00();
  v11 = v7;
  sub_23BB89DAC();
  swift_release();

}

uint64_t sub_23BABDAE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void);
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;

  v2 = v1;
  v77 = a1;
  v3 = sub_23BB8A1CC();
  MEMORY[0x24BDAC7A8](v3, v4);
  v75 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A609F8);
  MEMORY[0x24BDAC7A8](v76, v6);
  v74 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A00);
  MEMORY[0x24BDAC7A8](v69, v8);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A08);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A10);
  MEMORY[0x24BDAC7A8](v70, v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A18);
  MEMORY[0x24BDAC7A8](v71, v19);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A20);
  MEMORY[0x24BDAC7A8](v72, v22);
  v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A28);
  MEMORY[0x24BDAC7A8](v73, v25);
  v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = sub_23BB89770();
  *((_QWORD *)v10 + 1) = 0x4000000000000000;
  v10[16] = 0;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A30);
  sub_23BABE030(v2, (uint64_t *)&v10[*(int *)(v28 + 44)]);
  sub_23B996E1C(&qword_256A60A38, &qword_256A60A00, MEMORY[0x24BDF4498]);
  sub_23BB89E0C();
  sub_23B989D60((uint64_t)v10, &qword_256A60A00);
  sub_23BB89C80();
  sub_23BB89C20();
  v29 = sub_23BB89C50();
  swift_release();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v15, v11);
  v31 = (uint64_t *)&v18[*(int *)(v70 + 36)];
  *v31 = KeyPath;
  v31[1] = v29;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v32 = sub_23BB89FE0();
  v33 = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v18, (uint64_t)v21, &qword_256A60A10);
  v34 = (uint64_t *)&v21[*(int *)(v71 + 36)];
  *v34 = v33;
  v34[1] = v32;
  sub_23B989D60((uint64_t)v18, &qword_256A60A10);
  LOBYTE(v12) = sub_23BB89BF0();
  type metadata accessor for ShareSentMessageView.ExpirationDatePill(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  sub_23BB89350();
  sub_23BB892A8();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_23B989EFC((uint64_t)v21, (uint64_t)v24, &qword_256A60A18);
  v43 = &v24[*(int *)(v72 + 36)];
  *v43 = v12;
  *((_QWORD *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  sub_23B989D60((uint64_t)v21, &qword_256A60A18);
  LOBYTE(v12) = sub_23BB89B9C();
  sub_23BB89350();
  sub_23BB892A8();
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;
  sub_23B989EFC((uint64_t)v24, (uint64_t)v27, &qword_256A60A20);
  v52 = &v27[*(int *)(v73 + 36)];
  *v52 = v12;
  *((_QWORD *)v52 + 1) = v45;
  *((_QWORD *)v52 + 2) = v47;
  *((_QWORD *)v52 + 3) = v49;
  *((_QWORD *)v52 + 4) = v51;
  v52[40] = 0;
  sub_23B989D60((uint64_t)v24, &qword_256A60A20);
  v53 = *MEMORY[0x24BDEEB68];
  v54 = sub_23BB89800();
  v55 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v75, v53, v54);
  v56 = sub_23BB89FEC();
  v57 = swift_getKeyPath();
  v58 = v74;
  v59 = MEMORY[0x24BDF48E8];
  sub_23B989CE8(v55, v74, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
  v60 = (uint64_t *)(v58 + *(int *)(v76 + 36));
  *v60 = v57;
  v60[1] = v56;
  sub_23B989D9C(v55, (uint64_t (*)(_QWORD))v59);
  v61 = sub_23BB8A2F8();
  v63 = v62;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A40);
  v65 = v77;
  v66 = v77 + *(int *)(v64 + 36);
  sub_23B989EFC(v58, v66, &qword_256A609F8);
  v67 = (uint64_t *)(v66 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A60A48) + 36));
  *v67 = v61;
  v67[1] = v63;
  sub_23B989EFC((uint64_t)v27, v65, &qword_256A60A28);
  sub_23B989D60(v58, &qword_256A609F8);
  return sub_23B989D60((uint64_t)v27, &qword_256A60A28);
}

uint64_t sub_23BABE030@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  v37 = a1;
  v40 = a2;
  v39 = type metadata accessor for CountDownTimerText(0);
  MEMORY[0x24BDAC7A8](v39, v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23BB88984();
  v5 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A50);
  MEMORY[0x24BDAC7A8](v38, v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A58);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v35 - v22;
  v24 = sub_23BB8A07C();
  sub_23B989EFC(v37, (uint64_t)v15, &qword_256A608F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = v36;
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v8, v15, v36);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v4, v8, v25);
    v26 = v39;
    v4[*(int *)(v39 + 20)] = 1;
    v27 = &v4[*(int *)(v26 + 24)];
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v27 + 1) = 0;
    sub_23B989CE8((uint64_t)v4, (uint64_t)v11, type metadata accessor for CountDownTimerText);
    swift_storeEnumTagMultiPayload();
    sub_23B97D0C8(&qword_256A60A60, type metadata accessor for CountDownTimerText, (uint64_t)&protocol conformance descriptor for CountDownTimerText);
    sub_23BB89944();
    sub_23B989D9C((uint64_t)v4, type metadata accessor for CountDownTimerText);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);
  }
  else
  {
    v28 = v15[1];
    v41 = *v15;
    v42 = v28;
    sub_23B9967E0();
    *(_QWORD *)v11 = sub_23BB89D28();
    *((_QWORD *)v11 + 1) = v29;
    v11[16] = v30 & 1;
    *((_QWORD *)v11 + 3) = v31;
    swift_storeEnumTagMultiPayload();
    sub_23B97D0C8(&qword_256A60A60, type metadata accessor for CountDownTimerText, (uint64_t)&protocol conformance descriptor for CountDownTimerText);
    sub_23BB89944();
  }
  sub_23B989EFC((uint64_t)v23, (uint64_t)v19, &qword_256A60A58);
  v32 = v40;
  *v40 = v24;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60A68);
  sub_23B989EFC((uint64_t)v19, (uint64_t)v32 + *(int *)(v33 + 48), &qword_256A60A58);
  swift_retain();
  sub_23B989D60((uint64_t)v23, &qword_256A60A58);
  sub_23B989D60((uint64_t)v19, &qword_256A60A58);
  return swift_release();
}

uint64_t sub_23BABE3C0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

unint64_t sub_23BABE3F4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256A60840;
  if (!qword_256A60840)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60808);
    v2 = sub_23BABE458();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A60840);
  }
  return result;
}

unint64_t sub_23BABE458()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60848;
  if (!qword_256A60848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60850);
    v2[0] = sub_23BABE4DC();
    v2[1] = sub_23B996E1C(&qword_256A60868, &qword_256A60870, (uint64_t)&unk_23BB93810);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60848);
  }
  return result;
}

unint64_t sub_23BABE4DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A60858;
  if (!qword_256A60858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60860);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A160);
    v2[3] = sub_23B996E1C((unint64_t *)&qword_256A5A170, &qword_256A5A160, (uint64_t)&unk_23BB94DB8);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v2[0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60858);
  }
  return result;
}

unint64_t sub_23BABE588()
{
  unint64_t result;

  result = qword_256A60878;
  if (!qword_256A60878)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB93C7C, &type metadata for StopSharingView);
    atomic_store(result, (unint64_t *)&qword_256A60878);
  }
  return result;
}

unint64_t sub_23BABE5CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60880;
  if (!qword_256A60880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60838);
    v2[0] = sub_23B996E1C((unint64_t *)&qword_256A5A170, &qword_256A5A160, (uint64_t)&unk_23BB94DB8);
    v2[1] = v2[0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60880);
  }
  return result;
}

unint64_t sub_23BABE648()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  result = qword_256A60888;
  if (!qword_256A60888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60828);
    v2 = sub_23B996E1C(&qword_256A60890, &qword_256A60830, (uint64_t)&unk_23BB93810);
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60808);
    v3[3] = &type metadata for StopSharingView;
    v3[4] = sub_23BABE3F4();
    v3[5] = sub_23BABE588();
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A60888);
  }
  return result;
}

unint64_t sub_23BABE710()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A60898;
  if (!qword_256A60898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60800);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60808);
    v2[3] = &type metadata for StopSharingView;
    v2[4] = sub_23BABE3F4();
    v2[5] = sub_23BABE588();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23BABE5CC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60898);
  }
  return result;
}

uint64_t sub_23BABE7C0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BABE7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareSentMessageView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ShareSentMessageView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  type metadata accessor for ShareSentMessageView.ShareState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    v5 = sub_23BB88984();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CB8);
    goto LABEL_6;
  }
LABEL_7:

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BABE968@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = type metadata accessor for ShareSentMessageView(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = (_QWORD *)(v1 + *(int *)(v3 + 24) + ((v4 + 16) & ~v4));
  v6 = v5[1];
  *a1 = *v5;
  a1[1] = v6;
  return swift_retain();
}

uint64_t sub_23BABE9C0(int *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1[2] = sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v5 = (uint64_t (*)(void))((char *)a1 + *a1);
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_23BA13CD0;
  return v5();
}

uint64_t sub_23BABEA3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_23BB89D1C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_23BABEB10@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  sub_23BB89284();
  v9 = sub_23BB8929C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v7;
  swift_retain();
  return sub_23BA8ED48((uint64_t)v6, (uint64_t)&unk_256A609F0, v10, (uint64_t)sub_23BABEA3C, 0, 0, a1);
}

unint64_t sub_23BABEBF4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_23BB8A88C();
  __break(1u);
  return result;
}

uint64_t sub_23BABEC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ShareSentMessageView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 28) + ((v2 + 16) & ~v2)))();
}

uint64_t sub_23BABEC94()
{
  return sub_23BABECB0((uint64_t (*)(uint64_t))sub_23BABCC88);
}

uint64_t sub_23BABECA4()
{
  return sub_23BABECB0((uint64_t (*)(uint64_t))sub_23BABD9D8);
}

uint64_t sub_23BABECB0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareSentMessageView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_23BABED00()
{
  unint64_t result;

  result = qword_256A608B8;
  if (!qword_256A608B8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB94AB8, &type metadata for ShareSentMessageMapView);
    atomic_store(result, (unint64_t *)&qword_256A608B8);
  }
  return result;
}

uint64_t type metadata accessor for ShareSentMessageView.ExpirationDatePill(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A60988);
}

uint64_t sub_23BABED58(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_23B996364(result, a2, a3 & 1);
    return swift_retain();
  }
  return result;
}

_QWORD *sub_23BABED8C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

uint64_t sub_23BABEDF8(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_23B9963A4(result, a2, a3 & 1);
    return swift_release();
  }
  return result;
}

double sub_23BABEE2C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 1;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  return result;
}

ValueMetadata *type metadata accessor for StopSharingView()
{
  return &type metadata for StopSharingView;
}

char *sub_23BABEE78(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v9 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    v14(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v13);
  }
  return a1;
}

uint64_t sub_23BABEF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v6);
}

char *sub_23BABF058(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
  return a1;
}

char *sub_23BABF150(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23B989D60((uint64_t)a1, &qword_256A608F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

char *sub_23BABF268(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
  return a1;
}

char *sub_23BABF35C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23B989D60((uint64_t)a1, &qword_256A608F0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
  return a1;
}

uint64_t sub_23BABF468()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BABF474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23BABF4F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BABF4FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608F0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23BABF580()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BABF604(319);
  if (v0 <= 0x3F)
  {
    sub_23BABF660();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23BABF604(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A60998)
  {
    v2 = sub_23BB88984();
    v4 = type metadata accessor for Either(a1, MEMORY[0x24BEE0D00], v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A60998);
  }
}

void sub_23BABF660()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A609A0)
  {
    sub_23BA2C01C();
    v0 = sub_23BB8935C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A609A0);
  }
}

uint64_t getEnumTagSinglePayload for ShareSentMessageView.Style(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[32])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareSentMessageView.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSentMessageView.Style()
{
  return &type metadata for ShareSentMessageView.Style;
}

unint64_t sub_23BABF764()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A609D8;
  if (!qword_256A609D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A609E0);
    v2[0] = sub_23BABE648();
    v2[1] = sub_23BABE710();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A609D8);
  }
  return result;
}

uint64_t sub_23BABF7D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BABF7E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BABF7F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BABF814()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B97C964;
  return sub_23BABE9C0(v2);
}

uint64_t sub_23BABF874()
{
  return sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
}

unint64_t sub_23BABF8A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60A70;
  if (!qword_256A60A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60A40);
    v2[0] = sub_23BABF95C(&qword_256A60A78, &qword_256A60A28, sub_23BABF940);
    v2[1] = sub_23B996E1C(&qword_256A60AA8, &qword_256A60A48, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60A70);
  }
  return result;
}

uint64_t sub_23BABF940()
{
  return sub_23BABF95C(&qword_256A60A80, &qword_256A60A20, (uint64_t (*)(void))sub_23BABF9C8);
}

uint64_t sub_23BABF95C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BABF9C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60A88;
  if (!qword_256A60A88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60A18);
    v2[0] = sub_23BABFA4C();
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60A88);
  }
  return result;
}

unint64_t sub_23BABFA4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A60A90;
  if (!qword_256A60A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60A10);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60A00);
    v2[3] = sub_23B996E1C(&qword_256A60A38, &qword_256A60A00, MEMORY[0x24BDF4498]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A60A98, &qword_256A60AA0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60A90);
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomBlurredBackground()
{
  return &type metadata for CustomBlurredBackground;
}

uint64_t sub_23BABFB28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BABFB38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60AB0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB8A2B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A60AB8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23BB93D30;
  sub_23BB89FD4();
  *(_QWORD *)(v11 + 32) = sub_23BB8A268();
  *(_QWORD *)(v11 + 40) = v12;
  sub_23BB89F98();
  *(_QWORD *)(v11 + 48) = sub_23BB8A268();
  *(_QWORD *)(v11 + 56) = v13;
  sub_23BB89FD4();
  *(_QWORD *)(v11 + 64) = sub_23BB8A268();
  *(_QWORD *)(v11 + 72) = v14;
  sub_23BB8A37C();
  MEMORY[0x24260C1C0](v11);
  sub_23BB89488();
  sub_23BB8A2A4();
  LOBYTE(v11) = sub_23BB89BA8();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v10, v6);
  v5[*(int *)(v2 + 36)] = v11;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60AC0);
  sub_23BABFD10((uint64_t)v5, a1 + *(int *)(v15 + 36));
  v16 = v19[1];
  *(_OWORD *)a1 = v19[0];
  *(_OWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 32) = v20;
  swift_bridgeObjectRetain();
  sub_23BABFD58((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return sub_23BABFD98((uint64_t)v19);
}

uint64_t sub_23BABFD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BABFD58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60AB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BABFD98(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23BABFDC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60AC8;
  if (!qword_256A60AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60AC0);
    v2[0] = sub_23BABFE30();
    v2[1] = sub_23BABFE74();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60AC8);
  }
  return result;
}

unint64_t sub_23BABFE30()
{
  unint64_t result;

  result = qword_256A60AD0;
  if (!qword_256A60AD0)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDECCF8], MEMORY[0x24BDECD08]);
    atomic_store(result, (unint64_t *)&qword_256A60AD0);
  }
  return result;
}

unint64_t sub_23BABFE74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A60AD8;
  if (!qword_256A60AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60AB0);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEFB18], v1);
    atomic_store(result, (unint64_t *)&qword_256A60AD8);
  }
  return result;
}

uint64_t MapsDirectionsProvider.InputValue.Destination.Identifier.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MapsDirectionsProvider.DirectionsState.ongoingRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B989EFC(v1, a1, &qword_256A593E0);
}

uint64_t MapsDirectionsProvider.DirectionsState.ongoingRequest.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA7FA40(a1, v1, &qword_256A593E0);
}

uint64_t (*MapsDirectionsProvider.DirectionsState.ongoingRequest.modify())()
{
  return nullsub_1;
}

uint64_t MapsDirectionsProvider.DirectionsState.lastRequestAndResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  return sub_23B989EFC(v1 + *(int *)(v3 + 20), a1, &qword_256A59400);
}

uint64_t type metadata accessor for MapsDirectionsProvider.DirectionsState(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A60B58);
}

uint64_t MapsDirectionsProvider.DirectionsState.lastRequestAndResult.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  return sub_23BA7FA40(a1, v1 + *(int *)(v3 + 20), &qword_256A59400);
}

uint64_t (*MapsDirectionsProvider.DirectionsState.lastRequestAndResult.modify())(_QWORD)
{
  type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  return nullsub_1;
}

uint64_t MapsDirectionsProvider.DirectionsState.isLoading.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MapsDirectionsProvider.DirectionsState(0) + 24));
}

uint64_t MapsDirectionsProvider.DirectionsState.isLoading.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*MapsDirectionsProvider.DirectionsState.isLoading.modify())(_QWORD)
{
  type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  return nullsub_1;
}

uint64_t MapsDirectionsProvider.DirectionsState.RequestAndResult.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAC0050(v1, a1);
}

uint64_t sub_23BAC0050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A60C90);
}

__n128 MapsDirectionsProvider.DirectionsState.RequestAndResult.result.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 result;

  v3 = v1 + *(int *)(type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0) + 20);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A60C00);
}

uint64_t static MapsDirectionsProvider.DirectionsState.Result.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_23BB8B36C();
  else
    return 0;
}

uint64_t MapsDirectionsProvider.DirectionsState.Request.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23BB88984();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id MapsDirectionsProvider.DirectionsState.Request.origin.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + *(int *)(type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0) + 20));
  *a1 = v3;
  return v3;
}

id MapsDirectionsProvider.DirectionsState.Request.destination.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  id v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0) + 24));
  v4 = v3[1];
  v6 = (id)v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t static MapsDirectionsProvider.InputValue.Origin.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  sub_23BAC0A64();
  v4 = v2;
  v5 = v3;
  v6 = sub_23BB8AC70();

  return v6 & 1;
}

void MapsDirectionsProvider.DirectionsState.Result.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t MapsDirectionsProvider.DirectionsState.Result.eta.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t MapsDirectionsProvider.DirectionsState.Result.formattedTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = sub_23BB8B180();
  v40 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB8B2D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8B2B8();
  v39 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23BB8B33C();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23BB8B348();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v0 + 8);
  v21 = *(_QWORD *)(v0 + 16);
  v34 = v20;
  v22 = sub_23BB8B360();
  result = 0;
  if ((v22 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D420);
    v33 = v21;
    sub_23BB8B300();
    v31 = v10;
    v32 = v5;
    v29 = v1;
    v24 = swift_allocObject();
    v30 = v6;
    v25 = v24;
    *(_OWORD *)(v24 + 16) = xmmword_23BB8FEC0;
    sub_23BB8B2E8();
    sub_23BB8B2F4();
    sub_23B98F57C(v25);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23BB8B324();
    sub_23BB8B2AC();
    v26 = v40;
    v27 = v29;
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v4, *MEMORY[0x24BEE38E0], v29);
    sub_23BB8B2C4();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v27);
    sub_23BB88618();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v32);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v31);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v37);
    sub_23BAC10E4();
    v28 = v38;
    sub_23BB8B354();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v28);
    return v41;
  }
  return result;
}

BOOL static MapsDirectionsProvider.DirectionsState.TransportType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23BAC05A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_23BB8B36C();
  else
    return 0;
}

uint64_t MapsDirectionsProvider.DirectionsState.TransportType.systemImage.getter()
{
  char *v0;

  return qword_23BB940B8[*v0];
}

uint64_t MapsDirectionsProvider.DirectionsState.TransportType.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t MapsDirectionsProvider.DirectionsState.TransportType.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

_QWORD *MapsDirectionsProvider.InputValue.Origin.init(location:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23BAC066C(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  sub_23BAC0A64();
  v4 = v2;
  v5 = v3;
  v6 = sub_23BB8AC70();

  return v6 & 1;
}

_QWORD *MapsDirectionsProvider.InputValue.Destination.init(identifier:location:)@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = result[1];
  v4 = *a2;
  *a3 = *result;
  a3[1] = v3;
  a3[2] = v4;
  return result;
}

uint64_t MapsDirectionsProvider.InputValue.Destination.Identifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t static MapsDirectionsProvider.InputValue.Destination.Identifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t MapsDirectionsProvider.InputValue.Destination.Identifier.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t _s12FindMyUICore22MapsDirectionsProviderC0E5StateV16RequestAndResultV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  BOOL v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  id v22;
  id v23;
  char v24;
  uint64_t v25;

  if ((sub_23BB88960() & 1) == 0)
    return 0;
  v4 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v5 = *(int *)(v4 + 20);
  v6 = *(void **)(a1 + v5);
  v7 = *(void **)(a2 + v5);
  sub_23BAC0A64();
  v8 = v6;
  v9 = v7;
  v10 = sub_23BB8AC70();

  if ((v10 & 1) == 0)
    return 0;
  v11 = *(int *)(v4 + 24);
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = *(void **)(a1 + v11 + 16);
  v15 = (_QWORD *)(a2 + v11);
  v16 = (void *)v15[2];
  v17 = v12 == *v15 && v13 == v15[1];
  if (v17 || (v18 = sub_23BB8B1A4(), result = 0, (v18 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v20 = v14;
    swift_bridgeObjectRetain();
    v21 = v16;
    v22 = v20;
    v23 = v21;
    v24 = sub_23BB8AC70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v24 & 1) != 0)
    {
      v25 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      if (*(unsigned __int8 *)(a1 + *(int *)(v25 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v25 + 20))
        && (sub_23BB8B36C() & 1) != 0)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL _s12FindMyUICore22MapsDirectionsProviderC0E5StateV7RequestV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  BOOL v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char v23;

  if ((sub_23BB88960() & 1) == 0)
    return 0;
  v4 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v5 = *(int *)(v4 + 20);
  v6 = *(void **)(a1 + v5);
  v7 = *(void **)(a2 + v5);
  sub_23BAC0A64();
  v8 = v6;
  v9 = v7;
  v10 = sub_23BB8AC70();

  if ((v10 & 1) == 0)
    return 0;
  v11 = *(int *)(v4 + 24);
  v12 = a1 + v11;
  v13 = *(_QWORD *)(a1 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 8);
  v15 = *(void **)(v12 + 16);
  v16 = (_QWORD *)(a2 + v11);
  v17 = (void *)v16[2];
  v18 = v13 == *v16 && v14 == v16[1];
  if (!v18 && (sub_23BB8B1A4() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  v19 = v15;
  swift_bridgeObjectRetain();
  v20 = v17;
  v21 = v19;
  v22 = v20;
  v23 = sub_23BB8AC70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (v23 & 1) != 0;
}

unint64_t sub_23BAC0A64()
{
  unint64_t result;

  result = qword_256A60AE0;
  if (!qword_256A60AE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A60AE0);
  }
  return result;
}

uint64_t _s12FindMyUICore22MapsDirectionsProviderC0E5StateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  BOOL MyUICore22MapsDirectionsProviderC0E5StateV7RequestV2eeoiySbAG_AGtFZ_0;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v55;
  char MyUICore22MapsDirectionsProviderC0E5StateV16RequestAndResultV2eeoiySbAG_AGtFZ_0;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v64 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v4);
  v58 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60CD0);
  MEMORY[0x24BDAC7A8](v61, v6);
  v65 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
  MEMORY[0x24BDAC7A8](v8, v9);
  v59 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v68 = (uint64_t)&v57 - v13;
  MEMORY[0x24BDAC7A8](v14, v15);
  v63 = (uint64_t)&v57 - v16;
  v17 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v60 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60CD8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v57 - v31;
  MEMORY[0x24BDAC7A8](v33, v34);
  v36 = (char *)&v57 - v35;
  v66 = a1;
  sub_23B989EFC(a1, (uint64_t)&v57 - v35, &qword_256A593E0);
  v67 = a2;
  sub_23B989EFC(a2, (uint64_t)v32, &qword_256A593E0);
  v37 = (uint64_t)&v24[*(int *)(v21 + 48)];
  sub_23B989EFC((uint64_t)v36, (uint64_t)v24, &qword_256A593E0);
  sub_23B989EFC((uint64_t)v32, v37, &qword_256A593E0);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v38((uint64_t)v24, 1, v17) != 1)
  {
    sub_23B989EFC((uint64_t)v24, (uint64_t)v28, &qword_256A593E0);
    if (v38(v37, 1, v17) != 1)
    {
      v41 = v60;
      sub_23B989CA4(v37, v60, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
      MyUICore22MapsDirectionsProviderC0E5StateV7RequestV2eeoiySbAG_AGtFZ_0 = _s12FindMyUICore22MapsDirectionsProviderC0E5StateV7RequestV2eeoiySbAG_AGtFZ_0((uint64_t)v28, v41);
      sub_23B989D9C(v41, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
      sub_23B989D60((uint64_t)v32, &qword_256A593E0);
      sub_23B989D60((uint64_t)v36, &qword_256A593E0);
      sub_23B989D9C((uint64_t)v28, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
      sub_23B989D60((uint64_t)v24, &qword_256A593E0);
      if (!MyUICore22MapsDirectionsProviderC0E5StateV7RequestV2eeoiySbAG_AGtFZ_0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_23B989D60((uint64_t)v32, &qword_256A593E0);
    sub_23B989D60((uint64_t)v36, &qword_256A593E0);
    sub_23B989D9C((uint64_t)v28, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
LABEL_6:
    v39 = &qword_256A60CD8;
    v40 = (uint64_t)v24;
LABEL_14:
    sub_23B989D60(v40, v39);
    goto LABEL_15;
  }
  sub_23B989D60((uint64_t)v32, &qword_256A593E0);
  sub_23B989D60((uint64_t)v36, &qword_256A593E0);
  if (v38(v37, 1, v17) != 1)
    goto LABEL_6;
  sub_23B989D60((uint64_t)v24, &qword_256A593E0);
LABEL_8:
  v43 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v44 = v66;
  v45 = v63;
  sub_23B989EFC(v66 + *(int *)(v43 + 20), v63, &qword_256A59400);
  v46 = v67;
  v47 = v68;
  sub_23B989EFC(v67 + *(int *)(v43 + 20), v68, &qword_256A59400);
  v48 = v65;
  v49 = v65 + *(int *)(v61 + 48);
  sub_23B989EFC(v45, v65, &qword_256A59400);
  sub_23B989EFC(v47, v49, &qword_256A59400);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  v51 = v64;
  if (v50(v48, 1, v64) == 1)
  {
    sub_23B989D60(v47, &qword_256A59400);
    sub_23B989D60(v45, &qword_256A59400);
    if (v50(v49, 1, v51) == 1)
    {
      sub_23B989D60(v48, &qword_256A59400);
LABEL_18:
      v53 = *(_BYTE *)(v44 + *(int *)(v43 + 24)) ^ *(_BYTE *)(v46 + *(int *)(v43 + 24)) ^ 1;
      return v53 & 1;
    }
    goto LABEL_13;
  }
  v52 = v59;
  sub_23B989EFC(v48, v59, &qword_256A59400);
  if (v50(v49, 1, v51) == 1)
  {
    sub_23B989D60(v68, &qword_256A59400);
    sub_23B989D60(v45, &qword_256A59400);
    sub_23B989D9C(v52, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
LABEL_13:
    v39 = &qword_256A60CD0;
    v40 = v48;
    goto LABEL_14;
  }
  v55 = v58;
  sub_23B989CA4(v49, v58, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
  MyUICore22MapsDirectionsProviderC0E5StateV16RequestAndResultV2eeoiySbAG_AGtFZ_0 = _s12FindMyUICore22MapsDirectionsProviderC0E5StateV16RequestAndResultV2eeoiySbAG_AGtFZ_0(v52, v55);
  sub_23B989D9C(v55, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
  sub_23B989D60(v68, &qword_256A59400);
  sub_23B989D60(v45, &qword_256A59400);
  sub_23B989D9C(v52, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
  sub_23B989D60(v48, &qword_256A59400);
  if ((MyUICore22MapsDirectionsProviderC0E5StateV16RequestAndResultV2eeoiySbAG_AGtFZ_0 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v53 = 0;
  return v53 & 1;
}

uint64_t _s12FindMyUICore22MapsDirectionsProviderC10InputValueO11DestinationV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  BOOL v4;
  id v5;
  id v6;
  char v7;

  v2 = (void *)a1[2];
  v3 = (void *)a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_23BB8B1A4() & 1) == 0)
    return 0;
  sub_23BAC0A64();
  v5 = v2;
  v6 = v3;
  v7 = sub_23BB8AC70();

  return v7 & 1;
}

unint64_t sub_23BAC10E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A60AE8;
  if (!qword_256A60AE8)
  {
    v1 = sub_23BB8B348();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDD0AE8], v1);
    atomic_store(result, (unint64_t *)&qword_256A60AE8);
  }
  return result;
}

unint64_t sub_23BAC1130()
{
  unint64_t result;

  result = qword_256A60AF0;
  if (!qword_256A60AF0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for MapsDirectionsProvider.DirectionsState.TransportType, &type metadata for MapsDirectionsProvider.DirectionsState.TransportType);
    atomic_store(result, (unint64_t *)&qword_256A60AF0);
  }
  return result;
}

unint64_t sub_23BAC1178()
{
  unint64_t result;

  result = qword_256A60AF8;
  if (!qword_256A60AF8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for MapsDirectionsProvider.InputValue.Destination.Identifier, &type metadata for MapsDirectionsProvider.InputValue.Destination.Identifier);
    atomic_store(result, (unint64_t *)&qword_256A60AF8);
  }
  return result;
}

uint64_t *_s14descr250CB21E1V15DirectionsStateVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  void (*v19)(uint64_t *, _QWORD, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  id v40;
  id v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_23BB88984();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      v14 = *(int *)(v7 + 24);
      v15 = (uint64_t *)((char *)a1 + v14);
      v16 = (uint64_t *)((char *)a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
      v18 = (void *)v16[2];
      v15[2] = v18;
      v19 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      v20 = v13;
      swift_bridgeObjectRetain();
      v21 = v18;
      v19(a1, 0, 1, v7);
    }
    v22 = *(int *)(a3 + 20);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v23, v24, v28);
      v29 = *(int *)(v7 + 20);
      v30 = *(void **)&v24[v29];
      *(_QWORD *)&v23[v29] = v30;
      v31 = *(int *)(v7 + 24);
      v32 = &v23[v31];
      v33 = &v24[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      v35 = (void *)*((_QWORD *)v33 + 2);
      *((_QWORD *)v32 + 2) = v35;
      v36 = *(int *)(v25 + 20);
      v37 = &v23[v36];
      v38 = &v24[v36];
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
      v40 = v30;
      swift_bridgeObjectRetain();
      v41 = v35;
      v39(v23, 0, 1, v25);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

void _s14descr250CB21E1V15DirectionsStateVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);

    v6 = a1 + *(int *)(v4 + 24);
    swift_bridgeObjectRelease();

  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

    v10 = v7 + *(int *)(v4 + 24);
    swift_bridgeObjectRelease();

  }
}

char *_s14descr250CB21E1V15DirectionsStateVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void (*v17)(char *, _QWORD, uint64_t, uint64_t);
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  id v38;
  id v39;

  v6 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = *(void **)&a2[v10];
    *(_QWORD *)&a1[v10] = v11;
    v12 = *(int *)(v6 + 24);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = (void *)*((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 2) = v16;
    v17 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    v18 = v11;
    swift_bridgeObjectRetain();
    v19 = v16;
    v17(a1, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 20);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
    v27 = *(int *)(v6 + 20);
    v28 = *(void **)&v22[v27];
    *(_QWORD *)&v21[v27] = v28;
    v29 = *(int *)(v6 + 24);
    v30 = &v21[v29];
    v31 = &v22[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = (void *)*((_QWORD *)v31 + 2);
    *((_QWORD *)v30 + 2) = v33;
    v34 = *(int *)(v23 + 20);
    v35 = &v21[v34];
    v36 = &v22[v34];
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
    v38 = v28;
    swift_bridgeObjectRetain();
    v39 = v33;
    v37(v21, 0, 1, v23);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *_s14descr250CB21E1V15DirectionsStateVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  char *v69;
  char *v70;

  v6 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v6 + 20);
      v13 = *(void **)&a2[v12];
      *(_QWORD *)&a1[v12] = v13;
      v14 = *(int *)(v6 + 24);
      v15 = &a1[v14];
      v16 = &a2[v14];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v17 = (void *)*((_QWORD *)v16 + 2);
      *((_QWORD *)v15 + 2) = v17;
      v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
      v19 = v13;
      swift_bridgeObjectRetain();
      v20 = v17;
      v18(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v46 = sub_23BB88984();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(a1, a2, v46);
  v47 = *(int *)(v6 + 20);
  v48 = *(void **)&a2[v47];
  v49 = *(void **)&a1[v47];
  *(_QWORD *)&a1[v47] = v48;
  v50 = v48;

  v51 = *(int *)(v6 + 24);
  v52 = &a1[v51];
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)&a2[v51];
  *((_QWORD *)v52 + 1) = *(_QWORD *)&a2[v51 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = (void *)*((_QWORD *)v53 + 2);
  v55 = (void *)*((_QWORD *)v52 + 2);
  *((_QWORD *)v52 + 2) = v54;
  v56 = v54;

LABEL_7:
  v22 = *(int *)(a3 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      v57 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v23, v24, v57);
      v58 = *(int *)(v6 + 20);
      v59 = *(void **)&v24[v58];
      v60 = *(void **)&v23[v58];
      *(_QWORD *)&v23[v58] = v59;
      v61 = v59;

      v62 = *(int *)(v6 + 24);
      v63 = &v23[v62];
      v64 = &v24[v62];
      *(_QWORD *)v63 = *(_QWORD *)&v24[v62];
      *((_QWORD *)v63 + 1) = *(_QWORD *)&v24[v62 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v65 = (void *)*((_QWORD *)v64 + 2);
      v66 = (void *)*((_QWORD *)v63 + 2);
      *((_QWORD *)v63 + 2) = v65;
      v67 = v65;

      v68 = *(int *)(v25 + 20);
      v69 = &v23[v68];
      v70 = &v24[v68];
      *v69 = *v70;
      *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
      *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
      goto LABEL_13;
    }
    sub_23B989D9C((uint64_t)v23, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_13;
  }
  v30 = sub_23BB88984();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
  v31 = *(int *)(v6 + 20);
  v32 = *(void **)&v24[v31];
  *(_QWORD *)&v23[v31] = v32;
  v33 = *(int *)(v6 + 24);
  v34 = &v23[v33];
  v35 = &v24[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  v36 = (void *)*((_QWORD *)v35 + 2);
  *((_QWORD *)v34 + 2) = v36;
  v37 = *(int *)(v25 + 20);
  v38 = &v23[v37];
  v39 = &v24[v37];
  v40 = *((_QWORD *)v39 + 2);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *((_QWORD *)v38 + 2) = v40;
  v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
  v42 = v32;
  swift_bridgeObjectRetain();
  v43 = v36;
  v41(v23, 0, 1, v25);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *_s14descr250CB21E1V15DirectionsStateVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v6 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    v10 = *(int *)(v6 + 24);
    v11 = &a1[v10];
    v12 = &a2[v10];
    *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
    *(_QWORD *)&v14[*(int *)(v6 + 20)] = *(_QWORD *)&v15[*(int *)(v6 + 20)];
    v20 = *(int *)(v6 + 24);
    v21 = &v14[v20];
    v22 = &v15[v20];
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v23 = *(int *)(v16 + 20);
    v24 = &v14[v23];
    v25 = &v15[v23];
    *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *_s14descr250CB21E1V15DirectionsStateVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  char *v51;

  v6 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
      v12 = *(int *)(v6 + 24);
      v13 = &a1[v12];
      v14 = &a2[v12];
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v33 = sub_23BB88984();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(a1, a2, v33);
  v34 = *(int *)(v6 + 20);
  v35 = *(void **)&a1[v34];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];

  v36 = *(int *)(v6 + 24);
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)&a2[v36 + 8];
  *(_QWORD *)v37 = *(_QWORD *)&a2[v36];
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v40 = (void *)*((_QWORD *)v37 + 2);
  *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);

LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v41 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v17, v18, v41);
      v42 = *(int *)(v6 + 20);
      v43 = *(void **)&v17[v42];
      *(_QWORD *)&v17[v42] = *(_QWORD *)&v18[v42];

      v44 = *(int *)(v6 + 24);
      v45 = &v17[v44];
      v46 = &v18[v44];
      v47 = *(_QWORD *)&v18[v44 + 8];
      *(_QWORD *)v45 = *(_QWORD *)&v18[v44];
      *((_QWORD *)v45 + 1) = v47;
      swift_bridgeObjectRelease();
      v48 = (void *)*((_QWORD *)v45 + 2);
      *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);

      v49 = *(int *)(v19 + 20);
      v50 = &v17[v49];
      v51 = &v18[v49];
      *v50 = *v51;
      *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
      goto LABEL_13;
    }
    sub_23B989D9C((uint64_t)v17, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v24 = sub_23BB88984();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
  *(_QWORD *)&v17[*(int *)(v6 + 20)] = *(_QWORD *)&v18[*(int *)(v6 + 20)];
  v25 = *(int *)(v6 + 24);
  v26 = &v17[v25];
  v27 = &v18[v25];
  *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = *(int *)(v19 + 20);
  v29 = &v17[v28];
  v30 = &v18[v28];
  *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAC1F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t _s14descr250CB21E1V15DirectionsStateVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAC2004(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_23BAC20B0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BA8ECC4(319, &qword_256A60B68, (void (*)(uint64_t))type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
  if (v0 <= 0x3F)
  {
    sub_23BA8ECC4(319, qword_256A60B70, (void (*)(uint64_t))type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *_s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BB88984();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v9 = *(int *)(v8 + 20);
    v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    v11 = *(int *)(v8 + 24);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (void *)v13[2];
    v12[2] = v15;
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v19 = v10;
    swift_bridgeObjectRetain();
    v20 = v15;
  }
  return a1;
}

void _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);

  v4 = a1 + *(int *)(v3 + 24);
  swift_bridgeObjectRelease();

}

uint64_t _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v10 = *(int *)(v7 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = (void *)v12[2];
  v11[2] = v14;
  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = v9;
  swift_bridgeObjectRetain();
  v19 = v14;
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  v12 = *(int *)(v7 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(void **)(v14 + 16);
  v16 = (void *)v13[2];
  v13[2] = v15;
  v17 = v15;

  v18 = *(int *)(a3 + 20);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = *(int *)(v7 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10 + 8);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v14 = (void *)v11[2];
  v11[2] = *(_QWORD *)(v12 + 16);

  v15 = *(int *)(a3 + 20);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAC259C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 5)
    return v9 - 4;
  else
    return 0;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV16RequestAndResultVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAC2620(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  return result;
}

uint64_t sub_23BAC2698()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s14descr250CB21E1V15DirectionsStateV7RequestVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BB88984();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (void *)v12[2];
    v11[2] = v14;
    v15 = v10;
    swift_bridgeObjectRetain();
    v16 = v14;
  }
  return a1;
}

void _s14descr250CB21E1V15DirectionsStateV7RequestVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();

}

uint64_t _s14descr250CB21E1V15DirectionsStateV7RequestVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (void *)v11[2];
  v10[2] = v13;
  v14 = v9;
  swift_bridgeObjectRetain();
  v15 = v13;
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV7RequestVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  id v16;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (void *)v13[2];
  v15 = (void *)v12[2];
  v12[2] = v14;
  v16 = v14;

  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV7RequestVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV7RequestVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v13 = (void *)v10[2];
  v10[2] = v11[2];

  return a1;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV7RequestVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAC2A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BB88984();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s14descr250CB21E1V15DirectionsStateV7RequestVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAC2AD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BB88984();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23BAC2B50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88984();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV6ResultVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && a1[24])
    return (*(_DWORD *)a1 + 252);
  v3 = *a1;
  v4 = v3 >= 5;
  v5 = v3 - 5;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14descr250CB21E1V15DirectionsStateV6ResultVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.DirectionsState.Result()
{
  return &type metadata for MapsDirectionsProvider.DirectionsState.Result;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV13TransportTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BAC2CB4 + 4 * byte_23BB93DC5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BAC2CE8 + 4 * byte_23BB93DC0[v4]))();
}

uint64_t sub_23BAC2CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAC2CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BAC2CF8);
  return result;
}

uint64_t sub_23BAC2D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BAC2D0CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BAC2D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BAC2D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.DirectionsState.TransportType()
{
  return &type metadata for MapsDirectionsProvider.DirectionsState.TransportType;
}

id sub_23BAC2D34(void *a1, uint64_t a2, void *a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    a1 = a3;
  }
  return a1;
}

void _s14descr250CB21E1V10InputValueOwxx(uint64_t a1)
{
  sub_23B988F28(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s14descr250CB21E1V10InputValueOwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23BAC2D34(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23BAC2D34(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_23B988F28(v7, v8, v9, v10);
  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_23B988F28(v5, v7, v6, v8);
  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14descr250CB21E1V10InputValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BAC2F18(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_23BAC2F20(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.InputValue()
{
  return &type metadata for MapsDirectionsProvider.InputValue;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.InputValue.Origin()
{
  return &type metadata for MapsDirectionsProvider.InputValue.Origin;
}

_QWORD *_s14descr250CB21E1V10InputValueO11DestinationVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.InputValue.Destination()
{
  return &type metadata for MapsDirectionsProvider.InputValue.Destination;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.InputValue.Destination.Identifier()
{
  return &type metadata for MapsDirectionsProvider.InputValue.Destination.Identifier;
}

uint64_t sub_23BAC2FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23BAC2FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v9;

  v4 = sub_23BB89938();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a2 - 8) + 16))((char *)&v9 - v7, a1, a2, v6);
  swift_storeEnumTagMultiPayload();
  return sub_23BB89944();
}

uint64_t sub_23BAC30A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_23BB89938();
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a3 - 8) + 16))((char *)&v10 - v8, a1, a3, v7);
  swift_storeEnumTagMultiPayload();
  return sub_23BB89944();
}

uint64_t Badge.init(title:systemSymbol:backgroundColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t Badge.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23BB89FB0();
  return swift_release();
}

uint64_t Badge.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Badge.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Badge.title.modify())()
{
  return nullsub_1;
}

uint64_t Badge.systemSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Badge.systemSymbol.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Badge.systemSymbol.modify())()
{
  return nullsub_1;
}

uint64_t Badge.backgroundColor.getter()
{
  return swift_retain();
}

uint64_t Badge.backgroundColor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*Badge.backgroundColor.modify())()
{
  return nullsub_1;
}

uint64_t Badge.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23BB89FB0();
  swift_release();
  return sub_23BB8B270();
}

uint64_t sub_23BAC33DC()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23BB89FB0();
  swift_release();
  return sub_23BB8B270();
}

uint64_t sub_23BAC3488()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23BB89FB0();
  return swift_release();
}

uint64_t sub_23BAC3518()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23BB89FB0();
  swift_release();
  return sub_23BB8B270();
}

uint64_t sub_23BAC35C4()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  result = sub_23BB89FF8();
  qword_256A60CE0 = v8;
  *(_QWORD *)algn_256A60CE8 = v10;
  qword_256A60CF0 = 1918989427;
  unk_256A60CF8 = 0xE400000000000000;
  qword_256A60D00 = result;
  return result;
}

uint64_t static Badge.favorite.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256A58CF8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256A60CE8;
  v3 = qword_256A60CF0;
  v4 = unk_256A60CF8;
  v5 = qword_256A60D00;
  *a1 = qword_256A60CE0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_23BAC37A0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  result = sub_23BB89FEC();
  qword_256A60D08 = v8;
  unk_256A60D10 = v10;
  qword_256A60D18 = 0x72656D6974;
  unk_256A60D20 = 0xE500000000000000;
  qword_256A60D28 = result;
  return result;
}

uint64_t static Badge.temporary.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256A58D00 != -1)
    swift_once();
  v2 = unk_256A60D10;
  v3 = qword_256A60D18;
  v4 = unk_256A60D20;
  v5 = qword_256A60D28;
  *a1 = qword_256A60D08;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_23BAC3980()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  result = sub_23BB8A01C();
  qword_256A60D30 = v8;
  *(_QWORD *)algn_256A60D38 = v10;
  qword_256A60D40 = 0x616C732E6C6C6562;
  unk_256A60D48 = 0xEA00000000006873;
  qword_256A60D50 = result;
  return result;
}

uint64_t static Badge.mute.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256A58D08 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256A60D38;
  v3 = qword_256A60D40;
  v4 = unk_256A60D48;
  v5 = qword_256A60D50;
  *a1 = qword_256A60D30;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_23BAC3B68()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  result = sub_23BB89FBC();
  qword_256A60D58 = v8;
  unk_256A60D60 = v10;
  qword_256A60D68 = 0xD000000000000010;
  unk_256A60D70 = 0x800000023BB99AB0;
  qword_256A60D78 = result;
  return result;
}

uint64_t static Badge.satellite.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256A58D10 != -1)
    swift_once();
  v2 = unk_256A60D60;
  v3 = qword_256A60D68;
  v4 = unk_256A60D70;
  v5 = qword_256A60D78;
  *a1 = qword_256A60D58;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 BadgeView.init(info:style:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *((_BYTE *)a2 + 9);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_QWORD *)(a3 + 16) = v3;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 40) = v4;
  *(_BYTE *)(a3 + 48) = v5;
  *(_BYTE *)(a3 + 49) = v6;
  return result;
}

uint64_t BadgeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t result;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, char *, _QWORD);
  char *v94;
  void (*v95)(char *, char *, _QWORD);
  void (*v96)(char *, void (*)(char *, uint64_t, uint64_t));
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v109 = a1;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608D8);
  MEMORY[0x24BDAC7A8](v106, v2);
  v124 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v105 = (char *)&v102 - v6;
  v110 = sub_23BB894A0();
  v127 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110, v7);
  v122 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v121 = (char *)&v102 - v11;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608E0);
  MEMORY[0x24BDAC7A8](v108, v12);
  v123 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v107 = (uint64_t)&v102 - v16;
  v17 = sub_23BB8944C();
  v118 = *(_QWORD *)(v17 - 8);
  v119 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v114 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v102 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60D88);
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD18);
  v115 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117, v28);
  v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60D90);
  MEMORY[0x24BDAC7A8](v113, v31);
  v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60D98);
  MEMORY[0x24BDAC7A8](v116, v34);
  v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60DA0);
  MEMORY[0x24BDAC7A8](v125, v37);
  v126 = (uint64_t)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60DA8);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104, v39);
  v102 = (char *)&v102 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)(v1 + 32);
  v111 = *(_QWORD *)(v1 + 40);
  v120 = *(unsigned __int8 *)(v1 + 48);
  v112 = *(unsigned __int8 *)(v1 + 49);
  swift_bridgeObjectRetain();
  sub_23BB8A07C();
  sub_23BB89854();
  v42 = sub_23BB89860();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v27, 0, 1, v42);
  v43 = sub_23BB8A088();
  swift_release();
  sub_23B989D60((uint64_t)v27, &qword_256A60D88);
  v128 = v43;
  sub_23BB89440();
  v44 = v114;
  sub_23BB8941C();
  v45 = *(void (**)(char *, uint64_t))(v118 + 8);
  v46 = v23;
  v47 = v119;
  v45(v46, v119);
  sub_23BB89DC4();
  v45(v44, v47);
  swift_release();
  v48 = sub_23BB89FE0();
  v49 = v115;
  v50 = v117;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v33, v30, v117);
  v51 = (uint64_t *)&v33[*(int *)(v113 + 36)];
  *v51 = v48;
  v51[1] = v41;
  v52 = *(void (**)(char *, uint64_t))(v49 + 8);
  swift_retain();
  v52(v30, v50);
  KeyPath = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v33, (uint64_t)v36, &qword_256A60D90);
  v54 = (uint64_t)v36;
  v55 = (uint64_t *)&v36[*(int *)(v116 + 36)];
  v56 = v111;
  *v55 = KeyPath;
  v55[1] = v56;
  swift_retain();
  sub_23B989D60((uint64_t)v33, &qword_256A60D90);
  v57 = sub_23BB8A2F8();
  v118 = v58;
  v119 = v57;
  v59 = 0;
  v60 = 0;
  v61 = 0;
  v62 = 0;
  v63 = 0;
  v64 = 0;
  v65 = 0;
  v66 = 0;
  v67 = 0;
  v68 = 0;
  v69 = 0;
  v70 = 0;
  if (v112 == 1)
  {
    v66 = sub_23BB89FE0();
    sub_23BB89320();
    v61 = v128;
    v62 = v129;
    v63 = v130;
    v64 = v131;
    v65 = v132;
    v67 = sub_23BB8A2F8();
    v68 = v71;
    v59 = sub_23BB89FE0();
    v69 = sub_23BB8A2F8();
    v60 = 256;
  }
  v114 = (char *)v66;
  v115 = v68;
  v116 = v70;
  v117 = v69;
  v72 = v67;
  v73 = v126;
  v74 = v60;
  sub_23B989EFC(v54, v126, &qword_256A60D98);
  v75 = (uint64_t *)(v73 + *(int *)(v125 + 36));
  *v75 = v59;
  v75[1] = v74;
  v75[2] = v61;
  v75[3] = v62;
  v75[4] = v63;
  v75[5] = v64;
  v76 = v114;
  v75[6] = v65;
  v75[7] = (uint64_t)v76;
  v75[8] = v74;
  v75[9] = v72;
  v77 = v117;
  v75[10] = v115;
  v75[11] = v77;
  v78 = v119;
  v75[12] = v116;
  v75[13] = v78;
  v75[14] = v118;
  sub_23B989D60(v54, &qword_256A60D98);
  v79 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 104);
  if (v120)
  {
    v80 = v121;
    v81 = (void (*)(char *, uint64_t, uint64_t))v110;
    v79(v121, *MEMORY[0x24BDECF20], v110);
    v82 = v122;
    v79(v122, *MEMORY[0x24BDECEC0], (uint64_t)v81);
    sub_23BAC553C();
    v79 = v81;
    v83 = sub_23BB8A754();
    v85 = (uint64_t)v123;
    v84 = v124;
    if ((v83 & 1) != 0)
    {
LABEL_7:
      v88 = v106;
      v89 = v105;
      v90 = &v105[*(int *)(v106 + 48)];
      v91 = v127;
      v92 = v80;
      v93 = *(void (**)(char *, char *, _QWORD))(v127 + 32);
      v93(v105, v92, v81);
      v93(v90, v82, v81);
      v94 = &v84[*(int *)(v88 + 48)];
      v95 = *(void (**)(char *, char *, _QWORD))(v91 + 16);
      v95(v84, v89, v81);
      v95(v94, v90, v81);
      v93((char *)v85, v84, v81);
      v96 = *(void (**)(char *, void (*)(char *, _QWORD, uint64_t)))(v91 + 8);
      v97 = v108;
      v96(v94, v81);
      v98 = &v84[*(int *)(v88 + 48)];
      v93(v84, v89, v81);
      v93(v98, v90, v81);
      v93((char *)(v85 + *(int *)(v97 + 36)), v98, v81);
      v96(v84, v81);
      v99 = v107;
      sub_23B990D24(v85, v107, &qword_256A608E0);
      sub_23BAC5584();
      sub_23B996E1C(&qword_256A60920, &qword_256A608E0, MEMORY[0x24BEE08F8]);
      v100 = v102;
      v101 = v126;
      sub_23BB89DF4();
      sub_23B989D60(v99, &qword_256A608E0);
      sub_23B989D60(v101, &qword_256A60DA0);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v103 + 32))(v109, v100, v104);
    }
    __break(1u);
  }
  v86 = *MEMORY[0x24BDECF00];
  v80 = v121;
  v81 = (void (*)(char *, uint64_t, uint64_t))v110;
  v79(v121, v86, v110);
  v82 = v122;
  v79(v122, v86, (uint64_t)v81);
  sub_23BAC553C();
  result = sub_23BB8A754();
  v85 = (uint64_t)v123;
  v84 = v124;
  if ((result & 1) != 0)
    goto LABEL_7;
  __break(1u);
  return result;
}

uint64_t BadgeView.Style.init(badgeIconFont:supportsDynamicSize:addsBorder:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 9) = a3;
  return result;
}

double static BadgeOffsetStyle.bottomTrailing.getter@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_256A58D18 != -1)
    swift_once();
  result = *(double *)&qword_256A60D80;
  *a1 = qword_256A60D80;
  return result;
}

uint64_t View.badge(_:offsetStyle:supportsDynamicSize:badgeIconFont:showsCutout:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v67[2];
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[2];
  _QWORD v85[2];
  _QWORD v86[2];
  _QWORD v87[2];
  _QWORD v88[2];
  _QWORD v89[2];
  _QWORD v90[2];
  _QWORD v91[2];
  char v92[8];

  v81 = a6;
  LODWORD(v72) = a5;
  v74 = a4;
  v73 = a3;
  v79 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60DE8);
  v9 = sub_23BB894AC();
  v69 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v67 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60DF0);
  v80 = v9;
  v13 = sub_23BB894AC();
  v70 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v71 = (char *)v67 - v19;
  v20 = sub_23BB894AC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)v67 - v27;
  v78 = sub_23BB89950();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v29);
  v76 = (char *)v67 - v30;
  v31 = sub_23B990D24(a1, (uint64_t)v92, &qword_256A60DF8);
  v33 = *a2;
  if ((v72 & 1) != 0)
  {
    v67[1] = v67;
    MEMORY[0x24BDAC7A8](v31, v32);
    v67[-4] = v92;
    v68 = v12;
    v72 = (_QWORD *)v13;
    v34 = v74;
    v67[-3] = v74;
    v35 = v73 & 1;
    LOBYTE(v67[-2]) = v73 & 1;
    v67[-1] = v33;
    sub_23BB8A2F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E30);
    sub_23BAC57D0();
    v36 = v81;
    sub_23BB89E84();
    v37 = sub_23BB8A2D4();
    v75 = v67;
    MEMORY[0x24BDAC7A8](v37, v38);
    v67[-4] = v92;
    v67[-3] = v34;
    v13 = (uint64_t)v72;
    LOBYTE(v67[-2]) = v35;
    v67[-1] = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E00);
    v39 = sub_23B996E1C(&qword_256A60E28, &qword_256A60DE8, MEMORY[0x24BDEF828]);
    v84[0] = v36;
    v84[1] = v39;
    v40 = v80;
    v41 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v80, v84);
    sub_23BAC5744();
    v42 = v68;
    sub_23BB89EE4();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v40);
    v43 = sub_23B996E1C(&qword_256A60E20, &qword_256A60DF0, MEMORY[0x24BDEDC10]);
    v83[0] = v41;
    v83[1] = v43;
    v44 = MEMORY[0x24BDED308];
    MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v13, v83);
    v45 = v70;
    v46 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    v47 = v71;
    v46(v71, v16, v13);
    v48 = *(void (**)(char *, uint64_t))(v45 + 8);
    v48(v16, v13);
    v46(v16, v47, v13);
    v82[0] = v81;
    v82[1] = v43;
    MEMORY[0x24260D8DC](v44, v20, v82);
    v49 = v76;
    sub_23BAC30A8((uint64_t)v16, v20, v13);
    v48(v16, v13);
    v48(v47, v13);
  }
  else
  {
    v50 = sub_23BB8A2D4();
    v72 = v67;
    MEMORY[0x24BDAC7A8](v50, v51);
    v67[-4] = v92;
    v67[-3] = v74;
    LOBYTE(v67[-2]) = v73 & 1;
    v67[-1] = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E00);
    sub_23BAC5744();
    v52 = v81;
    sub_23BB89EE4();
    v53 = sub_23B996E1C(&qword_256A60E20, &qword_256A60DF0, MEMORY[0x24BDEDC10]);
    v91[0] = v52;
    v91[1] = v53;
    v54 = MEMORY[0x24BDED308];
    v75 = (_QWORD *)MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v20, v91);
    v55 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v55(v28, v24, v20);
    v56 = *(void (**)(char *, uint64_t))(v21 + 8);
    v56(v24, v20);
    v55(v24, v28, v20);
    v57 = sub_23B996E1C(&qword_256A60E28, &qword_256A60DE8, MEMORY[0x24BDEF828]);
    v90[0] = v52;
    v90[1] = v57;
    v89[0] = MEMORY[0x24260D8DC](v54, v80, v90);
    v89[1] = v53;
    MEMORY[0x24260D8DC](v54, v13, v89);
    v49 = v76;
    sub_23BAC2FE4((uint64_t)v24, v20);
    v56(v24, v20);
    v56(v28, v20);
  }
  v58 = sub_23B996E1C(&qword_256A60E20, &qword_256A60DF0, MEMORY[0x24BDEDC10]);
  v59 = v81;
  v88[0] = v81;
  v88[1] = v58;
  v60 = MEMORY[0x24BDED308];
  v61 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v20, v88);
  v62 = sub_23B996E1C(&qword_256A60E28, &qword_256A60DE8, MEMORY[0x24BDEF828]);
  v87[0] = v59;
  v87[1] = v62;
  v86[0] = MEMORY[0x24260D8DC](v60, v80, v87);
  v86[1] = v58;
  v63 = MEMORY[0x24260D8DC](v60, v13, v86);
  v85[0] = v61;
  v85[1] = v63;
  v64 = v78;
  MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v78, v85);
  v65 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v79, v49, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v49, v64);
}

uint64_t *sub_23BAC4DCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t (**a4)()@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  sub_23B990D24((uint64_t)a1, (uint64_t)&v17, &qword_256A60DF8);
  v10 = v18;
  if (v18)
  {
    v11 = v17;
    v12 = v19;
    v13 = a3 & 1;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v10;
    *(_QWORD *)(v14 + 32) = v12;
    *(_OWORD *)(v14 + 40) = v20;
    *(_QWORD *)(v14 + 56) = a2;
    *(_BYTE *)(v14 + 64) = v13;
    *(_BYTE *)(v14 + 65) = 0;
    *(double *)(v14 + 72) = a5;
    swift_retain();
    v15 = sub_23BAC5FDC;
  }
  else
  {
    v15 = 0;
    v14 = 0;
  }
  *a4 = v15;
  a4[1] = (uint64_t (*)())v14;
  return sub_23BAC5F54(a1);
}

uint64_t sub_23BAC4EA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v19;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E48);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB8A2D4();
  v16 = v15;
  sub_23BAC4F88(a1, a2, a3, (uint64_t)v13, a5);
  v17 = (uint64_t *)&v13[*(int *)(v10 + 36)];
  *v17 = v14;
  v17[1] = v16;
  sub_23B989EFC((uint64_t)v13, a4, &qword_256A60E48);
  return sub_23B989D60((uint64_t)v13, &qword_256A60E48);
}

uint64_t sub_23BAC4F88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  v10 = sub_23BB89530();
  MEMORY[0x24BDAC7A8](v10, v11);
  v37 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23BB8A334();
  v13 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E58);
  v38 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (uint64_t *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23B990D24((uint64_t)a1, (uint64_t)&v39, &qword_256A60DF8);
  v21 = v40;
  v22 = 1;
  if (v40)
  {
    v34 = a1;
    v35 = a4;
    v23 = v39;
    v24 = v17;
    v25 = v41;
    v33 = v13;
    v26 = a3 & 1;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v21;
    *(_QWORD *)(v27 + 32) = v25;
    v17 = v24;
    *(_OWORD *)(v27 + 40) = v42;
    *(_QWORD *)(v27 + 56) = a2;
    *(_BYTE *)(v27 + 64) = v26;
    *(_BYTE *)(v27 + 65) = 1;
    *(double *)(v27 + 72) = a5;
    v28 = v33;
    a4 = v35;
    v29 = v36;
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v16, *MEMORY[0x24BDF50A0], v36);
    v30 = (uint64_t)v37;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v37, v16, v29);
    sub_23B9C64CC(v30, (uint64_t)v20 + *(int *)(v24 + 36));
    *v20 = sub_23BAC5FDC;
    v20[1] = v27;
    sub_23BAC5F54(v34);
    swift_retain();
    swift_retain();
    sub_23B9C6510(v30);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
    swift_release();
    sub_23B990D24((uint64_t)v20, a4, &qword_256A60E58);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(a4, v22, 1, v17);
}

uint64_t *sub_23BAC51D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, double (**a4)@<D0>(uint64_t a1@<X8>)@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  double (*v15)@<D0>(uint64_t@<X8>);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  sub_23B990D24((uint64_t)a1, (uint64_t)&v17, &qword_256A60DF8);
  v10 = v18;
  if (v18)
  {
    v11 = v17;
    v12 = v19;
    v13 = a3 & 1;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v10;
    *(_QWORD *)(v14 + 32) = v12;
    *(_OWORD *)(v14 + 40) = v20;
    *(_QWORD *)(v14 + 56) = a2;
    *(_BYTE *)(v14 + 64) = v13;
    *(_BYTE *)(v14 + 65) = 0;
    *(double *)(v14 + 72) = a5;
    swift_retain();
    v15 = sub_23BAC5F88;
  }
  else
  {
    v15 = 0;
    v14 = 0;
  }
  *a4 = v15;
  a4[1] = (double (*)@<D0>(uint64_t@<X8>))v14;
  return sub_23BAC5F54(a1);
}

void sub_23BAC52A8()
{
  qword_256A60D80 = 0x3FE6A09E667F3BCDLL;
}

uint64_t sub_23BAC52C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89698();
  *a1 = result;
  return result;
}

uint64_t sub_23BAC52EC()
{
  swift_retain();
  return sub_23BB896A4();
}

double sub_23BAC5314@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double result;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  __int128 v22;

  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = *((_BYTE *)a1 + 48);
  v17 = *((_BYTE *)a1 + 49);
  sub_23BB893C8();
  v13 = ceil(v12 * 0.5 * a3);
  sub_23BB893C8();
  v15 = ceil(v14 * 0.5 * a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23BB893C8();
  sub_23BB893C8();
  sub_23BB8A2F8();
  sub_23BB8938C();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = v11;
  *(_BYTE *)(a2 + 49) = v17;
  *(double *)(a2 + 56) = v13;
  *(double *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = v18;
  *(_BYTE *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v20;
  *(_BYTE *)(a2 + 96) = v21;
  result = *(double *)&v22;
  *(_OWORD *)(a2 + 104) = v22;
  return result;
}

uint64_t _s12FindMyUICore5BadgeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_23BB8B1A4() & 1) != 0) && (v2 == v4 ? (v7 = v3 == v5) : (v7 = 0), v7 || (sub_23BB8B1A4() & 1) != 0))
    return sub_23BB89F8C();
  else
    return 0;
}

uint64_t sub_23BAC54EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89698();
  *a1 = result;
  return result;
}

uint64_t sub_23BAC5514()
{
  swift_retain();
  return sub_23BB896A4();
}

unint64_t sub_23BAC553C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A60910;
  if (!qword_256A60910)
  {
    v1 = sub_23BB894A0();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDECF70], v1);
    atomic_store(result, (unint64_t *)&qword_256A60910);
  }
  return result;
}

unint64_t sub_23BAC5584()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60DB0;
  if (!qword_256A60DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60DA0);
    v2[0] = sub_23BAC5608();
    v2[1] = sub_23B996E1C(&qword_256A60DD8, &qword_256A60DE0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60DB0);
  }
  return result;
}

unint64_t sub_23BAC5608()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60DB8;
  if (!qword_256A60DB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60D98);
    v2[0] = sub_23BAC568C();
    v2[1] = sub_23B996E1C(&qword_256A60A98, &qword_256A60AA0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60DB8);
  }
  return result;
}

unint64_t sub_23BAC568C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A60DC0;
  if (!qword_256A60DC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60D90);
    v2[2] = MEMORY[0x24BDF4108];
    v2[3] = MEMORY[0x24BDF40E8];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A60DC8, &qword_256A60DD0, MEMORY[0x24BDF0978]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60DC0);
  }
  return result;
}

uint64_t *sub_23BAC5734@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;

  return sub_23BAC4DCC(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1, *(double *)(v1 + 40));
}

unint64_t sub_23BAC5744()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A60E08;
  if (!qword_256A60E08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60E00);
    v2 = sub_23B996E1C(&qword_256A60E10, &qword_256A60E18, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A60E08);
  }
  return result;
}

uint64_t sub_23BAC57C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAC4EA4(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1, *(double *)(v1 + 40));
}

unint64_t sub_23BAC57D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A60E38;
  if (!qword_256A60E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60E30);
    v2[0] = sub_23B9B97D8();
    v2[1] = sub_23B996E1C(&qword_256A60E40, &qword_256A60E48, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A60E38);
  }
  return result;
}

uint64_t *sub_23BAC5854@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;

  return sub_23BAC51D0(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1, *(double *)(v1 + 40));
}

unint64_t sub_23BAC5868()
{
  unint64_t result;

  result = qword_256A60E50;
  if (!qword_256A60E50)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Badge, &type metadata for Badge);
    atomic_store(result, (unint64_t *)&qword_256A60E50);
  }
  return result;
}

uint64_t sub_23BAC58AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for Badge()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for Badge(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for Badge(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Badge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t destroy for BadgeView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for BadgeView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BadgeView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BadgeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for BadgeView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BadgeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BadgeView()
{
  return &type metadata for BadgeView;
}

uint64_t sub_23BAC5C9C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BadgeView.Style(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for BadgeView.Style(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

ValueMetadata *type metadata accessor for BadgeView.Style()
{
  return &type metadata for BadgeView.Style;
}

ValueMetadata *type metadata accessor for BadgeOffsetStyle()
{
  return &type metadata for BadgeOffsetStyle;
}

uint64_t sub_23BAC5D88()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60DA0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A608E0);
  sub_23BAC5584();
  sub_23B996E1C(&qword_256A60920, &qword_256A608E0, MEMORY[0x24BEE08F8]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAC5E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60DF0);
  v2 = sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A60DE8);
  v3 = sub_23BB894AC();
  v4 = sub_23BB894AC();
  v5 = sub_23BB89950();
  v6 = sub_23B996E1C(&qword_256A60E20, &qword_256A60DF0, MEMORY[0x24BDEDC10]);
  v13[0] = v1;
  v13[1] = v6;
  v7 = MEMORY[0x24BDED308];
  v8 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v2, v13);
  v12[0] = v1;
  v12[1] = sub_23B996E1C(&qword_256A60E28, &qword_256A60DE8, MEMORY[0x24BDEF828]);
  v11[0] = MEMORY[0x24260D8DC](v7, v3, v12);
  v11[1] = v6;
  v10[0] = v8;
  v10[1] = MEMORY[0x24260D8DC](v7, v4, v11);
  return MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v5, v10);
}

uint64_t *sub_23BAC5F54(uint64_t *a1)
{
  sub_23BA2F17C(*a1, a1[1]);
  return a1;
}

double sub_23BAC5F88@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAC5314((uint64_t *)(v1 + 16), a1, *(double *)(v1 + 72));
}

uint64_t objectdestroyTm_11()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t ConditionsProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
  swift_beginAccess();
  return sub_23BAC6288(v3, a1);
}

uint64_t sub_23BAC6078@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
  swift_beginAccess();
  return sub_23BAC6288(v4, a2);
}

uint64_t sub_23BAC6114(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E78);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BAC6288(a1, (uint64_t)v7);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23BAC6204();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60((uint64_t)v7, &qword_256A60E78);
}

unint64_t sub_23BAC6204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A60E68;
  if (!qword_256A60E68)
  {
    v1 = type metadata accessor for ConditionsProvider();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ConditionsProvider, v1);
    atomic_store(result, (unint64_t *)&qword_256A60E68);
  }
  return result;
}

uint64_t type metadata accessor for ConditionsProvider()
{
  uint64_t result;

  result = qword_256A60F20;
  if (!qword_256A60F20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BAC6288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ConditionsProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A60E78);
}

uint64_t sub_23BAC636C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
  swift_beginAccess();
  sub_23BAC91C0(a2, v3);
  return swift_endAccess();
}

uint64_t sub_23BAC63D4()
{
  uint64_t v0;

  return sub_23BAC636C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*ConditionsProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BAC64D0;
}

void sub_23BAC64D0(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t ConditionsProvider.data.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  result = swift_release();
  *a1 = *(_WORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data);
  return result;
}

uint64_t sub_23BAC65B4@<X0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  result = swift_release();
  *a2 = *(_WORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data);
  return result;
}

uint64_t sub_23BAC6634()
{
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BAC66C8()
{
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAC6758@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__valuePublishers);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAC67F0()
{
  swift_getKeyPath();
  sub_23BAC6204();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAC6890(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__valuePublishers);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t ConditionsProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ConditionsProvider.init(dependencies:)(a1);
  return v2;
}

uint64_t ConditionsProvider.init(dependencies:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  __int128 v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  __int128 v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43[4];

  v2 = (uint64_t)v1;
  v37[1] = *v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v41 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v37 - v10;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v37 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A60E78);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 36);
  *(_QWORD *)&v19[v21] = sub_23B97E83C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v19[v16[10]] = MEMORY[0x24BEE4B08];
  v19[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v23 = *a1;
  v38 = a1[1];
  v39 = v23;
  v22(v19, v15, v4);
  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v24(v11, v15, v4);
  v40 = v5;
  v25 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v26 = swift_allocObject();
  v24((char *)(v26 + v25), v11, v4);
  v27 = (uint64_t (**)())&v19[v16[12]];
  *v27 = sub_23B988EB4;
  v27[1] = (uint64_t (*)())v26;
  sub_23BAC7EEC((uint64_t)v19, v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage);
  *(_WORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data) = 514;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__valuePublishers) = sub_23B989054(MEMORY[0x24BEE4AF8]);
  sub_23BB88A44();
  v28 = v38;
  *(_OWORD *)(v2 + 16) = v39;
  *(_OWORD *)(v2 + 32) = v28;
  swift_getKeyPath();
  v43[1] = v2;
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  v29 = v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
  swift_beginAccess();
  v22(v41, (char *)v29, v4);
  swift_retain_n();
  v30 = sub_23BB891AC();
  v31 = sub_23BB8ABEC();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v43[0] = v33;
    *(_DWORD *)v32 = 136315394;
    v42 = sub_23BB7B69C(0xD000000000000013, 0x800000023BB9B680, v43);
    sub_23BB8ACB8();
    *(_WORD *)(v32 + 12) = 2080;
    v42 = v2;
    swift_retain();
    v34 = sub_23BB8A7D8();
    v42 = sub_23BB7B69C(v34, v35, v43);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v30, v31, "ContactsProvider: %s - %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v33, -1, -1);
    MEMORY[0x24260D9B4](v32, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v4);
  return v2;
}

uint64_t sub_23BAC6D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[14] = a4;
  v5[15] = a5;
  v6 = sub_23BB891C4();
  v5[16] = v6;
  v5[17] = *(_QWORD *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60FF8);
  v5[20] = v7;
  v5[21] = *(_QWORD *)(v7 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = sub_23BB8A9F4();
  v5[24] = sub_23BB8A9E8();
  v5[25] = sub_23BB8A988();
  v5[26] = v8;
  return swift_task_switch();
}

uint64_t sub_23BAC6E40()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 216) = Strong;
  if (Strong)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98);
    sub_23BB8AA54();
    v2 = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
    *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider___observationRegistrar;
    *(_QWORD *)(v0 + 232) = v2;
    *(_QWORD *)(v0 + 240) = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data;
    swift_beginAccess();
    *(_QWORD *)(v0 + 248) = sub_23BB8A9E8();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v3;
    *v3 = v0;
    v3[1] = sub_23BAC6F8C;
    return sub_23BB8AA60();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BAC6F8C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAC6FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);
  if (*(_BYTE *)(v0 + 264) == 2)
  {
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 72) = v2;
    sub_23BAC6204();
    sub_23BB88A20();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2 + v1, v4);
    v6 = sub_23BB891AC();
    v7 = sub_23BB8ABEC();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 136);
    if (v8)
    {
      v32 = *(_QWORD *)(v0 + 128);
      v30 = *(_QWORD *)(v0 + 152);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v33 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v33);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v6, v7, "ConditionsProvider: %s - Finished", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v32);
    }
    else
    {
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v31 = *(_BYTE *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 144);
    v16 = v2 + v1;
    v17 = *(_QWORD *)(v0 + 128);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 80) = v2;
    sub_23BAC6204();
    sub_23BB88A20();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v16, v17);
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABEC();
    v20 = os_log_type_enabled(v18, v19);
    v22 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 128);
    if (v20)
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v33 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)(v24 + 4) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v33);
      _os_log_impl(&dword_23B979000, v18, v19, "ConditionsProvider: %s - new stream value", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v25, -1, -1);
      MEMORY[0x24260D9B4](v24, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v26 = *(_QWORD *)(v0 + 240);
    v27 = *(_QWORD *)(v0 + 216);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 88) = v27;
    sub_23BB88A20();
    swift_release();
    *(_QWORD *)(v0 + 96) = v27;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    *(_BYTE *)(v27 + v26) = v31;
    *(_QWORD *)(v0 + 104) = v27;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    *(_QWORD *)(v0 + 248) = sub_23BB8A9E8();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v28;
    *v28 = v0;
    v28[1] = sub_23BAC6F8C;
    return sub_23BB8AA60();
  }
}

uint64_t sub_23BAC7474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[14] = a4;
  v5[15] = a5;
  v6 = sub_23BB891C4();
  v5[16] = v6;
  v5[17] = *(_QWORD *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60FF8);
  v5[20] = v7;
  v5[21] = *(_QWORD *)(v7 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = sub_23BB8A9F4();
  v5[24] = sub_23BB8A9E8();
  v5[25] = sub_23BB8A988();
  v5[26] = v8;
  return swift_task_switch();
}

uint64_t sub_23BAC7548()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 216) = Strong;
  if (Strong)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98);
    sub_23BB8AA54();
    v2 = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
    *(_QWORD *)(v0 + 224) = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider___observationRegistrar;
    *(_QWORD *)(v0 + 232) = v2;
    *(_QWORD *)(v0 + 240) = OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data;
    swift_beginAccess();
    *(_QWORD *)(v0 + 248) = sub_23BB8A9E8();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v3;
    *v3 = v0;
    v3[1] = sub_23BAC7694;
    return sub_23BB8AA60();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BAC7694()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAC76E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 216);
  if (*(_BYTE *)(v0 + 264) == 2)
  {
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 72) = v2;
    sub_23BAC6204();
    sub_23BB88A20();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2 + v1, v4);
    v6 = sub_23BB891AC();
    v7 = sub_23BB8ABEC();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 136);
    if (v8)
    {
      v32 = *(_QWORD *)(v0 + 128);
      v30 = *(_QWORD *)(v0 + 152);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v33 = v13;
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v33);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v6, v7, "ConditionsProvider: %s - Finished", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v30, v32);
    }
    else
    {
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v31 = *(_BYTE *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 144);
    v16 = v2 + v1;
    v17 = *(_QWORD *)(v0 + 128);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 80) = v2;
    sub_23BAC6204();
    sub_23BB88A20();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v16, v17);
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABEC();
    v20 = os_log_type_enabled(v18, v19);
    v22 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 128);
    if (v20)
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v33 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)(v24 + 4) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v33);
      _os_log_impl(&dword_23B979000, v18, v19, "ConditionsProvider: %s - new stream value", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v25, -1, -1);
      MEMORY[0x24260D9B4](v24, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v26 = *(_QWORD *)(v0 + 216);
    v27 = v26 + *(_QWORD *)(v0 + 240);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 88) = v26;
    sub_23BB88A20();
    swift_release();
    *(_QWORD *)(v0 + 96) = v26;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    *(_BYTE *)(v27 + 1) = v31;
    *(_QWORD *)(v0 + 104) = v26;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    *(_QWORD *)(v0 + 248) = sub_23BB8A9E8();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v28;
    *v28 = v0;
    v28[1] = sub_23BAC7694;
    return sub_23BB8AA60();
  }
}

uint64_t ConditionsProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage, &qword_256A60E78);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ConditionsProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage, &qword_256A60E78);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BAC7C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
  swift_beginAccess();
  return sub_23BAC6288(v3, a1);
}

uint64_t sub_23BAC7D28(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A60E78);
}

void (*sub_23BAC7DC4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ConditionsProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23BAC7E10@<X0>(_WORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  swift_getKeyPath();
  sub_23BAC6204();
  sub_23BB88A20();
  result = swift_release();
  *a1 = *(_WORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data);
  return result;
}

uint64_t sub_23BAC7E8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BAC7EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s12FindMyUICore18ConditionsProviderC28didRemoveUniqueSubscriptions07removedI07isEmptyyShyAC12SubscriptionOG_SbtF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];
  uint64_t v40;

  v2 = v1;
  v36 = a1;
  v3 = sub_23BB891C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v40 = v1;
  sub_23BAC6204();
  sub_23BB88A20();
  swift_release();
  v8 = v1 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v35 = v3;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v39[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v34 = v12 + 4;
    v38 = sub_23BB7B69C(0xD00000000000003BLL, 0x800000023BB9AC00, v39);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v9, v10, "ConditionsProvider: %s - isEmpty", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v12, -1, -1);

    (*(void (**)(char *, int64_t))(v4 + 8))(v7, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  v14 = *(_QWORD *)(v36 + 56);
  v34 = (uint8_t *)(v36 + 56);
  v15 = 1 << *(_BYTE *)(v36 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__valuePublishers);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v20 = 0;
  v35 = (unint64_t)(v15 + 63) >> 6;
  v33 = MEMORY[0x24BEE4AE0] + 8;
  while (v17)
  {
    v21 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v22 = v21 | (v20 << 6);
LABEL_25:
    v26 = *(_BYTE *)(*(_QWORD *)(v36 + 48) + v22);
    swift_getKeyPath();
    v38 = v2;
    sub_23BB88A20();
    swift_release();
    if (*(_QWORD *)(*v18 + 16))
    {
      sub_23B984904(v26);
      if ((v27 & 1) != 0)
      {
        swift_retain();
        sub_23BB8AA78();
        swift_release();
      }
    }
    swift_getKeyPath();
    v38 = v2;
    sub_23BB88A20();
    swift_release();
    v38 = v2;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    v28 = sub_23B984904(v26);
    if ((v29 & 1) != 0)
    {
      v30 = v28;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = *v18;
      v37 = *v18;
      *v18 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B9870C8();
        v32 = v37;
      }
      sub_23B9858C4(v30, v32);
      *v18 = v32;
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v38 = v2;
    swift_getKeyPath();
    sub_23BB88A2C();
    result = swift_release();
  }
  v23 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v23 >= v35)
    return swift_release();
  v24 = *(_QWORD *)&v34[8 * v23];
  ++v20;
  if (v24)
    goto LABEL_24;
  v20 = v23 + 1;
  if (v23 + 1 >= v35)
    return swift_release();
  v24 = *(_QWORD *)&v34[8 * v20];
  if (v24)
    goto LABEL_24;
  v20 = v23 + 2;
  if (v23 + 2 >= v35)
    return swift_release();
  v24 = *(_QWORD *)&v34[8 * v20];
  if (v24)
  {
LABEL_24:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_25;
  }
  v25 = v23 + 3;
  if (v25 >= v35)
    return swift_release();
  v24 = *(_QWORD *)&v34[8 * v25];
  if (v24)
  {
    v20 = v25;
    goto LABEL_24;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v35)
      return swift_release();
    v24 = *(_QWORD *)&v34[8 * v20];
    ++v25;
    if (v24)
      goto LABEL_24;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t _s12FindMyUICore18ConditionsProviderC28didAddNewUniqueSubscriptions05addedJ08wasEmptyyShyAC12SubscriptionOG_SbtF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t result;
  int64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  int64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v75 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v81 = (uint64_t)&v74 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98);
  v90 = *(_QWORD *)(v10 - 8);
  v91 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v84 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v83 = (char *)&v74 - v15;
  v85 = v16;
  MEMORY[0x24BDAC7A8](v17, v18);
  v82 = (char *)&v74 - v19;
  v20 = *(_QWORD *)(a1 + 56);
  v76 = a1 + 56;
  v21 = 1 << *(_BYTE *)(a1 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v24 = v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider___observationRegistrar;
  v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__valuePublishers);
  v86 = a1;
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v27 = 0;
  v77 = (unint64_t)(v21 + 63) >> 6;
  v74 = MEMORY[0x24BEE4AE0] + 8;
  v80 = v2;
  v79 = v24;
  v78 = v25;
  while (v23)
  {
    v31 = __clz(__rbit64(v23));
    v32 = (v23 - 1) & v23;
    v33 = v31 | (v27 << 6);
LABEL_22:
    v37 = *(_BYTE *)(*(_QWORD *)(v86 + 48) + v33);
    swift_getKeyPath();
    v97 = v2;
    v38 = sub_23BAC6204();
    sub_23BB88A20();
    v39 = swift_release();
    if (*(_QWORD *)(*v25 + 16))
    {
      v39 = sub_23B984904(v37);
      if ((v40 & 1) != 0)
      {
        swift_retain();
        sub_23BB8AA78();
        v39 = swift_release();
      }
    }
    v88 = v32;
    v89 = v27;
    v87 = v38;
    if ((v37 & 1) != 0)
    {
      v41 = v84;
      (*(void (**)(unint64_t))(v2 + 32))(v39);
      v42 = sub_23BB8AA18();
      v43 = *(_QWORD *)(v42 - 8);
      v44 = (uint64_t)v75;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v75, 1, 1, v42);
      v45 = swift_allocObject();
      swift_weakInit();
      v47 = v90;
      v46 = v91;
      v48 = v83;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v83, v41, v91);
      sub_23BB8A9F4();
      swift_retain();
      v49 = sub_23BB8A9E8();
      v50 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      v51 = (char *)swift_allocObject();
      *((_QWORD *)v51 + 2) = v49;
      *((_QWORD *)v51 + 3) = MEMORY[0x24BEE6930];
      *((_QWORD *)v51 + 4) = v45;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v51[v50], v48, v46);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) == 1)
      {
        sub_23B989D60(v44, (uint64_t *)&unk_256A613D0);
      }
      else
      {
        sub_23BB8AA0C();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
      }
      v2 = v80;
      v25 = v78;
      if (*((_QWORD *)v51 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v63 = sub_23BB8A988();
        v65 = v64;
        swift_unknownObjectRelease();
      }
      else
      {
        v63 = 0;
        v65 = 0;
      }
      v23 = v88;
      v27 = v89;
      v70 = swift_allocObject();
      *(_QWORD *)(v70 + 16) = &unk_256A60FD8;
      *(_QWORD *)(v70 + 24) = v51;
      if (v65 | v63)
      {
        v98 = 0;
        v99 = 0;
        v100 = v63;
        v101 = v65;
      }
      v28 = swift_task_create();
      swift_getKeyPath();
      v97 = v2;
      sub_23BB88A20();
      swift_release();
      v97 = v2;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v96 = *v25;
      *v25 = 0x8000000000000000;
      sub_23BAAEB70(v28, 1, isUniquelyReferenced_nonNull_native);
      *v25 = v96;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v97 = v2;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
      v30 = v84;
    }
    else
    {
      v52 = v82;
      (*(void (**)(unint64_t))(v2 + 16))(v39);
      v53 = sub_23BB8AA18();
      v54 = *(_QWORD *)(v53 - 8);
      v55 = v81;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v81, 1, 1, v53);
      v56 = swift_allocObject();
      swift_weakInit();
      v57 = v90;
      v58 = v91;
      v59 = v83;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v83, v52, v91);
      sub_23BB8A9F4();
      swift_retain();
      v60 = sub_23BB8A9E8();
      v61 = (*(unsigned __int8 *)(v57 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      v62 = (char *)swift_allocObject();
      *((_QWORD *)v62 + 2) = v60;
      *((_QWORD *)v62 + 3) = MEMORY[0x24BEE6930];
      *((_QWORD *)v62 + 4) = v56;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v62[v61], v59, v58);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v55, 1, v53) == 1)
      {
        sub_23B989D60(v81, (uint64_t *)&unk_256A613D0);
      }
      else
      {
        v66 = v81;
        sub_23BB8AA0C();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v66, v53);
      }
      v2 = v80;
      v25 = v78;
      if (*((_QWORD *)v62 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v67 = sub_23BB8A988();
        v69 = v68;
        swift_unknownObjectRelease();
      }
      else
      {
        v67 = 0;
        v69 = 0;
      }
      v71 = swift_allocObject();
      *(_QWORD *)(v71 + 16) = &unk_256A60FE8;
      *(_QWORD *)(v71 + 24) = v62;
      if (v69 | v67)
      {
        v92 = 0;
        v93 = 0;
        v94 = v67;
        v95 = v69;
      }
      v23 = v88;
      v72 = swift_task_create();
      swift_getKeyPath();
      v97 = v2;
      sub_23BB88A20();
      swift_release();
      v97 = v2;
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      v73 = swift_isUniquelyReferenced_nonNull_native();
      v96 = *v25;
      *v25 = 0x8000000000000000;
      sub_23BAAEB70(v72, 0, v73);
      *v25 = v96;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v97 = v2;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
      v30 = v82;
      v27 = v89;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v30, v91);
  }
  v34 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v34 >= v77)
    return swift_release();
  v35 = *(_QWORD *)(v76 + 8 * v34);
  ++v27;
  if (v35)
    goto LABEL_21;
  v27 = v34 + 1;
  if (v34 + 1 >= v77)
    return swift_release();
  v35 = *(_QWORD *)(v76 + 8 * v27);
  if (v35)
    goto LABEL_21;
  v27 = v34 + 2;
  if (v34 + 2 >= v77)
    return swift_release();
  v35 = *(_QWORD *)(v76 + 8 * v27);
  if (v35)
  {
LABEL_21:
    v32 = (v35 - 1) & v35;
    v33 = __clz(__rbit64(v35)) + (v27 << 6);
    goto LABEL_22;
  }
  v36 = v34 + 3;
  if (v36 >= v77)
    return swift_release();
  v35 = *(_QWORD *)(v76 + 8 * v36);
  if (v35)
  {
    v27 = v36;
    goto LABEL_21;
  }
  while (1)
  {
    v27 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v27 >= v77)
      return swift_release();
    v35 = *(_QWORD *)(v76 + 8 * v27);
    ++v36;
    if (v35)
      goto LABEL_21;
  }
LABEL_45:
  __break(1u);
  return result;
}

unint64_t sub_23BAC8E00()
{
  unint64_t result;

  result = qword_256A60E90;
  if (!qword_256A60E90)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ConditionsProvider.Subscription, &type metadata for ConditionsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A60E90);
  }
  return result;
}

unint64_t sub_23BAC8E44(uint64_t a1)
{
  unint64_t result;

  result = sub_23BAC6204();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23BAC8E68()
{
  return type metadata accessor for ConditionsProvider();
}

void sub_23BAC8E70()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BAC8F30(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ConditionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConditionsProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_23BAC8F30(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A60F30)
  {
    v2 = sub_23BAC8E00();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for ConditionsProvider.Subscription, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A60F30);
  }
}

uint64_t sub_23BAC8F90()
{
  uint64_t v0;

  return sub_23BAC6890(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BAC8FA8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BAC8FD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B97C964;
  return sub_23BAC7474(a1, v5, v6, v7, v8);
}

uint64_t sub_23BAC9068()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BAC9110(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B990D68;
  return sub_23BAC6D6C(a1, v5, v6, v7, v8);
}

void sub_23BAC91A8()
{
  uint64_t v0;

  *(_WORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore18ConditionsProvider__data) = *(_WORD *)(v0 + 24);
}

uint64_t sub_23BAC91C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60E78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAC920C()
{
  return sub_23BAC63D4();
}

uint64_t sub_23BAC9220(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_OWORD *__return_ptr))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t i;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v27[12];
  _OWORD v28[2];
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v29 = MEMORY[0x24BEE4AF8];
    sub_23BB006D4(0, v4, 0);
    v5 = v29;
    v9 = *(_QWORD *)(a3(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    for (i = v4 - 1; ; --i)
    {
      a4(v27);
      v29 = v5;
      v14 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23BB006D4(v13 > 1, v14 + 1, 1);
        v5 = v29;
      }
      *(_QWORD *)(v5 + 16) = v14 + 1;
      v15 = (_OWORD *)(v5 + 224 * v14);
      v16 = v27[1];
      v15[2] = v27[0];
      v15[3] = v16;
      v17 = v27[2];
      v18 = v27[3];
      v19 = v27[5];
      v15[6] = v27[4];
      v15[7] = v19;
      v15[4] = v17;
      v15[5] = v18;
      v20 = v27[6];
      v21 = v27[7];
      v22 = v27[9];
      v15[10] = v27[8];
      v15[11] = v22;
      v15[8] = v20;
      v15[9] = v21;
      v23 = v27[10];
      v24 = v27[11];
      v25 = v28[0];
      *(_OWORD *)((char *)v15 + 233) = *(_OWORD *)((char *)v28 + 9);
      v15[13] = v24;
      v15[14] = v25;
      v15[12] = v23;
      if (!i)
        break;
      v10 += v11;
    }
  }
  return v5;
}

uint64_t sub_23BAC937C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = sub_23BB889E4();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_23BB8A5C8();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23BB8A610();
  sub_23BB8A5BC();
  sub_23BB8A604();
  sub_23BB8A5E0();
  swift_release();
  sub_23BB8A604();
  sub_23BB8A5F8();
  swift_release();
  sub_23BB8A5EC();
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82BF0]), sel_init);
  sub_23BB8A430();
  swift_allocObject();
  result = sub_23BB8A3E8();
  qword_256A61000 = result;
  return result;
}

uint64_t sub_23BAC94C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for FMIPManagerDelegateTrampoline();
  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_256A61070);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_256A61008 = v0;
  return result;
}

uint64_t static BeaconsInfoProvider.live()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAC9598()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v1 = &unk_256A61018;
  v1[1] = 0;
  v1[2] = &unk_256A61020;
  v1[3] = 0;
  v1[4] = sub_23BAC9B50;
  v1[5] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAC95EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v1[4] = sub_23BB8A988();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23BAC9658()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_256A58D28 != -1)
    swift_once();
  if (qword_256A58D20 != -1)
    swift_once();
  v1 = qword_256A61000;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_23BAC9708;
  return sub_23BAC97D0(*(_QWORD *)(v0 + 16), v1);
}

uint64_t sub_23BAC9708()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAC9768()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAC979C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAC97D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_23BB8A5C8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61130);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61140);
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BAC9894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 104))(*(_QWORD *)(v0 + 120), *MEMORY[0x24BEE6A10], *(_QWORD *)(v0 + 104));
  sub_23BB8AA6C();
  v4 = v3
     + OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation;
  swift_beginAccess();
  sub_23B989EFC(v4, v1, &qword_256A61130);
  sub_23B97D0C8(&qword_256A61148, (uint64_t (*)(uint64_t))type metadata accessor for FMIPManagerDelegateTrampoline, (uint64_t)&unk_23BB943A0);
  swift_unknownObjectRetain();
  sub_23BB8A424();
  sub_23B989EFC(v1, v2, &qword_256A61130);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_256A61070);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5);
  v8 = *(_QWORD *)(v0 + 88);
  if (v7 == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 88), &qword_256A61130);
  }
  else
  {
    swift_retain();
    sub_23BB8AA24();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 64);
  sub_23BB8A5BC();
  sub_23BB8A400();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  sub_23B989D60(v9, &qword_256A61130);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAC9A80()
{
  uint64_t v0;

  sub_23BB8A9F4();
  *(_QWORD *)(v0 + 16) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAC9AE8()
{
  uint64_t v0;

  swift_release();
  if (qword_256A58D20 != -1)
    swift_once();
  sub_23BB8A3F4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAC9B50()
{
  return 5000000000000000000;
}

uint64_t sub_23BAC9B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61130);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256A61070);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v10 = a2
      + OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation;
  swift_beginAccess();
  sub_23BACB028((uint64_t)v7, v10);
  return swift_endAccess();
}

uint64_t sub_23BAC9C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  char v21;
  uint64_t v22;
  char v23[8];
  char v24[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_256A61070);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A610F0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23BB8A418();
  v12 = sub_23BAC9220(v11, (uint64_t)v24, (uint64_t (*)(_QWORD))MEMORY[0x24BE2FF00], (void (*)(_OWORD *__return_ptr))sub_23BAC9E50);
  swift_bridgeObjectRelease();
  v13 = sub_23BB8A40C();
  v14 = sub_23BAC9220(v13, (uint64_t)v23, MEMORY[0x24BE30180], (void (*)(_OWORD *__return_ptr))sub_23BACA458);
  swift_bridgeObjectRelease();
  v22 = v12;
  sub_23BA79C94(v14);
  v15 = v22;
  v16 = v1
      + OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v16, 1, v2))
  {
    swift_bridgeObjectRelease();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v16, v2);
    v20[1] = v15;
    v20[2] = 0;
    v21 = 0;
    sub_23BB8AA3C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61100);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 1, v18);
  }
  return sub_23B989D60((uint64_t)v10, &qword_256A610F0);
}

uint64_t sub_23BAC9E50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  double v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  char v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _OWORD v86[8];
  _BYTE v87[136];

  v67 = a1;
  v82 = sub_23BB8A5D4();
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82, v2);
  v78 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8A4A8();
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v75 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v74 = (char *)&v66 - v9;
  v84 = sub_23BB8A46C();
  v68 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84, v10);
  v69 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61108);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v83 = (uint64_t)&v66 - v18;
  v19 = sub_23BB8A4C0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23BB8A3C4();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23BB8A664();
  v79 = *(_QWORD *)(v81 - 8);
  v30 = MEMORY[0x24BDAC7A8](v81, v29);
  v32 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v25 + 16))(v28, v1, v24, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x24BE2FFD0], v19);
  v33 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v33, sel_scale);

  v85 = v32;
  v34 = v83;
  sub_23BB8A64C();
  sub_23BB8A394();
  v35 = sub_23BB8A7E4();
  v37 = v36;
  swift_bridgeObjectRelease();
  v38 = sub_23BB8A3A0();
  v40 = v39;
  sub_23BB8A3B8();
  sub_23B989EFC(v34, (uint64_t)v15, &qword_256A61108);
  v41 = v68;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48))(v15, 1, v84);
  v72 = v37;
  v73 = v35;
  v70 = v40;
  v71 = v38;
  if (v42 == 1)
  {
    sub_23B9BE144(v86);
    sub_23BACABCC((uint64_t)v86, (uint64_t)v87);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v69, v15, v84);
    v66 = v1;
    v43 = sub_23BACAA28(MEMORY[0x24BE2FEF0], (uint64_t)v87);
    (*(void (**)(char *, uint64_t, double))(v41 + 8))(v69, v84, v43);
    nullsub_1(v87);
  }
  sub_23B989D60(v83, &qword_256A61108);
  sub_23BACABCC((uint64_t)v87, (uint64_t)v86);
  v44 = v74;
  sub_23BB8A3AC();
  v45 = v75;
  sub_23BB8A49C();
  sub_23B97D0C8(&qword_256A61128, (uint64_t (*)(uint64_t))MEMORY[0x24BE2FFB8], MEMORY[0x24BE2FFC0]);
  v46 = v77;
  v47 = sub_23BB8AD24();
  v48 = *(void (**)(char *, uint64_t))(v76 + 8);
  v48(v45, v46);
  v48(v44, v46);
  v49 = sub_23BB8A628();
  v51 = v50;
  v52 = sub_23BB8A640();
  v54 = v53;
  v55 = sub_23BB8A634();
  v57 = v56;
  v58 = v78;
  sub_23BB8A658();
  v59 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v58, v82);
  if (v59 == *MEMORY[0x24BE300C8])
  {
    v60 = v47;
    v61 = 0;
LABEL_22:
    (*(void (**)(char *, uint64_t))(v79 + 8))(v85, v81);
    v62 = v67;
    v63 = v72;
    *v67 = v73;
    v62[1] = v63;
    v64 = v70;
    v62[2] = v71;
    v62[3] = v64;
    result = sub_23BACABCC((uint64_t)v86, (uint64_t)(v62 + 4));
    *((_BYTE *)v62 + 160) = v60 & 1;
    *((_BYTE *)v62 + 161) = 0;
    v62[21] = v49;
    v62[22] = v51;
    v62[23] = v52;
    v62[24] = v54;
    v62[25] = v55;
    v62[26] = v57;
    *((_BYTE *)v62 + 216) = v61;
    return result;
  }
  if (v59 == *MEMORY[0x24BE300D8])
  {
    v60 = v47;
    v61 = 1;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300C0])
  {
    v60 = v47;
    v61 = 2;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300D0])
  {
    v60 = v47;
    v61 = 3;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300E0])
  {
    v60 = v47;
    v61 = 4;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300B8])
  {
    v60 = v47;
    v61 = 5;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300A0])
  {
    v60 = v47;
    v61 = 6;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300A8])
  {
    v60 = v47;
    v61 = 7;
    goto LABEL_22;
  }
  if (v59 == *MEMORY[0x24BE300B0])
  {
    v60 = v47;
    v61 = 8;
    goto LABEL_22;
  }
  result = sub_23BB8B198();
  __break(1u);
  return result;
}

double sub_23BACA458@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[8];
  _BYTE v52[136];

  v2 = sub_23BB8A448();
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB8A490();
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v41 - v10;
  v12 = sub_23BB8A46C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61108);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v41 - v23;
  sub_23BB8A670();
  v25 = sub_23BB8A7E4();
  v43 = v26;
  v44 = v25;
  swift_bridgeObjectRelease();
  v27 = sub_23BB8A67C();
  v41 = v28;
  v42 = v27;
  sub_23BB8A6A0();
  sub_23B989EFC((uint64_t)v24, (uint64_t)v20, &qword_256A61108);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12) == 1)
  {
    sub_23B9BE144(v51);
    sub_23BACABCC((uint64_t)v51, (uint64_t)v52);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v20, v12);
    v29 = sub_23BACAA28(MEMORY[0x24BE30170], (uint64_t)v52);
    (*(void (**)(char *, uint64_t, double))(v13 + 8))(v16, v12, v29);
    nullsub_1(v52);
  }
  sub_23B989D60((uint64_t)v24, &qword_256A61108);
  sub_23BACABCC((uint64_t)v52, (uint64_t)v51);
  sub_23BB8A694();
  v30 = v45;
  sub_23BB8A484();
  sub_23B97D0C8(&qword_256A61110, (uint64_t (*)(uint64_t))MEMORY[0x24BE2FFA0], MEMORY[0x24BE2FFA8]);
  v31 = v47;
  v32 = sub_23BB8AD24();
  v33 = *(void (**)(char *, uint64_t))(v46 + 8);
  v33(v30, v31);
  v33(v11, v31);
  v34 = v48;
  sub_23BB8A688();
  v35 = sub_23BB8A43C();
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v50);
  v38 = v43;
  *(_QWORD *)a1 = v44;
  *(_QWORD *)(a1 + 8) = v38;
  v39 = v41;
  *(_QWORD *)(a1 + 16) = v42;
  *(_QWORD *)(a1 + 24) = v39;
  sub_23BACABCC((uint64_t)v51, a1 + 32);
  *(_BYTE *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 161) = v32 & 1;
  *(_QWORD *)(a1 + 168) = v35;
  *(_QWORD *)(a1 + 176) = v37;
  result = 0.0;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_BYTE *)(a1 + 216) = 0x80;
  return result;
}

uint64_t sub_23BACA79C()
{
  uint64_t v0;

  sub_23B989D60(v0+ OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation, &qword_256A61130);
  return swift_deallocClassInstance();
}

uint64_t sub_23BACA7D4()
{
  return type metadata accessor for FMIPManagerDelegateTrampoline();
}

uint64_t type metadata accessor for FMIPManagerDelegateTrampoline()
{
  uint64_t result;

  result = qword_256A61058;
  if (!qword_256A61058)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BACA818()
{
  unint64_t v0;

  sub_23BACA884();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23BACA884()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A61068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256A61070);
    v0 = sub_23BB8ACA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A61068);
  }
}

uint64_t sub_23BACA8E0()
{
  return sub_23BB8A598();
}

uint64_t sub_23BACA8E8()
{
  return sub_23BB8A520();
}

uint64_t sub_23BACA8F0(uint64_t a1, uint64_t a2)
{
  return sub_23BACAE68(a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE2FF00], (void (*)(_OWORD *__return_ptr))sub_23BAC9E50);
}

uint64_t sub_23BACA918(uint64_t a1, uint64_t a2)
{
  return sub_23BACAC14(a2, &qword_256A61120, (uint64_t (*)(_QWORD))MEMORY[0x24BE2FF00], (void (*)(_OWORD *__return_ptr))sub_23BAC9E50);
}

uint64_t sub_23BACA948()
{
  return sub_23BB8A4E4();
}

uint64_t sub_23BACA950()
{
  return sub_23BB8A4F0();
}

uint64_t sub_23BACA958()
{
  return sub_23BB8A544();
}

uint64_t sub_23BACA960()
{
  return sub_23BB8A4CC();
}

uint64_t sub_23BACA968()
{
  return sub_23BB8A58C();
}

uint64_t sub_23BACA970()
{
  return sub_23BB8A5A4();
}

uint64_t sub_23BACA978()
{
  return sub_23BB8A508();
}

uint64_t sub_23BACA980()
{
  return sub_23BB8A574();
}

uint64_t sub_23BACA988(uint64_t a1, uint64_t a2)
{
  return sub_23BACAE68(a2, MEMORY[0x24BE30180], (void (*)(_OWORD *__return_ptr))sub_23BACA458);
}

uint64_t sub_23BACA9B0(uint64_t a1, uint64_t a2)
{
  return sub_23BACAC14(a2, &qword_256A610F8, MEMORY[0x24BE30180], (void (*)(_OWORD *__return_ptr))sub_23BACA458);
}

uint64_t sub_23BACA9E0()
{
  return sub_23BB8A4D8();
}

uint64_t sub_23BACA9E8()
{
  return sub_23BB8A52C();
}

uint64_t sub_23BACA9F0()
{
  return sub_23BB8A538();
}

uint64_t sub_23BACA9F8()
{
  return sub_23BB8A514();
}

uint64_t sub_23BACAA00()
{
  return sub_23BB8A568();
}

uint64_t sub_23BACAA08()
{
  return sub_23BB8A550();
}

uint64_t sub_23BACAA10()
{
  return sub_23BB8A580();
}

uint64_t sub_23BACAA18()
{
  return sub_23BB8A4FC();
}

uint64_t sub_23BACAA20()
{
  return sub_23BB8A55C();
}

double sub_23BACAA28@<D0>(void (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61118);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BB8A4B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BB8A460();
  sub_23BB8A454();
  v14 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  a1(v14);
  v15 = sub_23BB8A3DC();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    sub_23B989D60((uint64_t)v7, &qword_256A61118);
LABEL_8:
    v17 = 0;
    v19 = 0;
    goto LABEL_10;
  }
  v17 = sub_23BB8A3D0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
  if (!v19)
  {
    v17 = 0;
    goto LABEL_10;
  }
  v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_10:
  *(_QWORD *)a2 = v13;
  *(_BYTE *)(a2 + 8) = 5;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_QWORD *)(a2 + 64) = v17;
  *(_QWORD *)(a2 + 72) = v19;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  return result;
}

uint64_t sub_23BACABCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BACAC14(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), void (*a4)(_OWORD *__return_ptr))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(_OWORD *__return_ptr);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25[4])(_OWORD *__return_ptr);
  char v26;
  _BYTE v27[16];

  v25[0] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256A61070);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A610F0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v16 = a3(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23BB8C510;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16))(v19 + v18, a1, v16);
  v20 = (void (*)(_OWORD *__return_ptr))sub_23BAC9220(v19, (uint64_t)v27, a3, v25[0]);
  v21 = (char *)v25[1]
      + OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7))
  {
    swift_bridgeObjectRelease();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 1, 1, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v21, v7);
    v25[2] = v20;
    v25[3] = 0;
    v26 = 1;
    sub_23BB8AA3C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61100);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 0, 1, v23);
  }
  sub_23B989D60((uint64_t)v15, &qword_256A610F0);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23BACAE68(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_OWORD *__return_ptr))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  char v22;
  _BYTE v23[16];

  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256A61070);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A610F0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BAC9220(a1, (uint64_t)v23, a2, a3);
  v17 = v3
      + OBJC_IVAR____TtC12FindMyUICoreP33_BD8FBCC753F95AEA729A7DD6D75071AA29FMIPManagerDelegateTrampoline_newStreamContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7))
  {
    swift_bridgeObjectRelease();
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    v21[0] = v16;
    v21[1] = 0;
    v22 = 1;
    sub_23BB8AA3C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61100);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 0, 1, v19);
  }
  return sub_23B989D60((uint64_t)v15, &qword_256A610F0);
}

uint64_t sub_23BACB01C(uint64_t a1)
{
  uint64_t v1;

  return sub_23BAC9B64(a1, v1);
}

uint64_t sub_23BACB028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BACB070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD);
  void (*v42)(_QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t *);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  void (*v126)(char *, uint64_t, uint64_t);
  void (*v127)(_QWORD, _QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v4 = v3;
  v136 = a3;
  v130 = a2;
  v6 = sub_23BB891C4();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v122 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v120 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v125 = (char *)&v120 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v121 = (char *)&v120 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v120 - v22;
  swift_getKeyPath();
  v24 = v3 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider___observationRegistrar;
  v140 = v3;
  v25 = sub_23B97D0C8((unint64_t *)&qword_256A595F0, (uint64_t (*)(uint64_t))type metadata accessor for DeviceImageProvider, (uint64_t)&protocol conformance descriptor for DeviceImageProvider);
  sub_23BB88A20();
  swift_release();
  v26 = v3 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  v128 = v7;
  v129 = v6;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v131 = v26;
  v126 = v27;
  v27(v23, v26, v6);
  v133 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v127 = (void (*)(_QWORD, _QWORD))v23;
  v28 = sub_23BB891AC();
  v29 = sub_23BB8ABEC();
  v30 = os_log_type_enabled(v28, v29);
  v134 = v24;
  v135 = v4;
  v132 = v25;
  v124 = v14;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v137 = (char *)v32;
    *(_DWORD *)v31 = 136315394;
    sub_23BA9DDBC();
    swift_bridgeObjectRetain();
    v33 = sub_23BB8AAFC();
    v34 = v136;
    v35 = v33;
    v37 = v36;
    swift_bridgeObjectRelease();
    v138 = sub_23BB7B69C(v35, v37, (uint64_t *)&v137);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v138 = v130;
    v139 = v34;
    swift_bridgeObjectRetain();
    v38 = sub_23BB8A7D8();
    v138 = sub_23BB7B69C(v38, v39, (uint64_t *)&v137);
    v40 = v129;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v28, v29, "Provider: subscriptions\n- subscriptions: %s\n- subscriber: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v32, -1, -1);
    MEMORY[0x24260D9B4](v31, -1, -1);

    v41 = v127;
    v42 = *(void (**)(_QWORD, _QWORD))(v128 + 8);
    v43 = v40;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v41 = v127;
    v42 = *(void (**)(_QWORD, _QWORD))(v128 + 8);
    v43 = v129;
  }
  v127 = v42;
  v42(v41, v43);
  swift_getKeyPath();
  v138 = v135;
  sub_23BB88A20();
  swift_release();
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F8F0);
  v45 = v131;
  v46 = *(_QWORD *)(v131 + *(int *)(v44 + 40));
  v47 = *(_QWORD *)(v133 + 16);
  swift_getKeyPath();
  v128 = v46;
  v48 = v135;
  if (v47)
  {
    v138 = v135;
    v49 = v44;
    v50 = v133;
    swift_bridgeObjectRetain();
    v51 = v136;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v138 = v48;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    v52 = *(int *)(v49 + 36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v137 = *(char **)(v45 + v52);
    *(_QWORD *)(v45 + v52) = 0x8000000000000000;
    sub_23BAAF614(v50, v130, v51, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v45 + v52) = v137;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BAD1278(&qword_256A5F8F0, &qword_256A612C0);
    swift_endAccess();
    v138 = v48;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
  }
  else
  {
    v54 = v136;
    v138 = v135;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v138 = v48;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    sub_23BA7763C(v130, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BAD1278(&qword_256A5F8F0, &qword_256A612C0);
    swift_endAccess();
    v138 = v48;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    v49 = v44;
  }
  v55 = v125;
  swift_getKeyPath();
  v56 = v135;
  v138 = v135;
  sub_23BB88A20();
  swift_release();
  v57 = swift_bridgeObjectRetain();
  v58 = sub_23BAD1100(v57, sub_23BA77C08);
  swift_bridgeObjectRelease();
  v59 = sub_23BAE6620(v58);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v138 = v56;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v138 = v56;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v123 = v49;
  v60 = *(int *)(v49 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + v60) = v59;
  sub_23BAD1494(&qword_256A5F8F0, (void (*)(void))sub_23BA9DDBC);
  swift_endAccess();
  v138 = v56;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v61 = v128;
  if (*(_QWORD *)(v128 + 16) <= *(_QWORD *)(v133 + 16) >> 3)
  {
    v138 = v133;
    swift_bridgeObjectRetain();
    sub_23BADBBD4(v61);
    v125 = (char *)v138;
  }
  else
  {
    v62 = v133;
    swift_bridgeObjectRetain();
    v125 = (char *)sub_23BADCB94(v61, v62);
  }
  v63 = v129;
  v64 = v131;
  if (*(_QWORD *)(v59 + 16) <= *(_QWORD *)(v61 + 16) >> 3)
  {
    v138 = v61;
    swift_bridgeObjectRetain();
    sub_23BADBBD4(v59);
    v65 = v138;
    if (*(_QWORD *)(v138 + 16))
      goto LABEL_12;
LABEL_15:
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v138 = v135;
    sub_23BB88A20();
    swift_release();
    v79 = v121;
    v126(v121, v64, v63);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v80 = sub_23BB891AC();
    v81 = sub_23BB8ABEC();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc();
      v83 = swift_slowAlloc();
      v137 = (char *)v83;
      *(_DWORD *)v82 = 136315651;
      sub_23BA9DDBC();
      swift_bridgeObjectRetain();
      v84 = sub_23BB8AAFC();
      v86 = v85;
      swift_bridgeObjectRelease();
      v138 = sub_23BB7B69C(v84, v86, (uint64_t *)&v137);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v87 = v79;
      v88 = v136;
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2160;
      v138 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v82 + 22) = 2081;
      v138 = v130;
      v139 = v88;
      swift_bridgeObjectRetain();
      v89 = sub_23BB8A7D8();
      v138 = sub_23BB7B69C(v89, v90, (uint64_t *)&v137);
      v63 = v129;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v80, v81, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v82, 0x20u);
      swift_arrayDestroy();
      v91 = v83;
      v64 = v131;
      MEMORY[0x24260D9B4](v91, -1, -1);
      MEMORY[0x24260D9B4](v82, -1, -1);

      v92 = v87;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v92 = v79;
    }
    v127(v92, v63);
    v93 = v124;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v65 = sub_23BADCB94(v59, v61);
  if (!*(_QWORD *)(v65 + 16))
    goto LABEL_15;
LABEL_12:
  swift_getKeyPath();
  v138 = v135;
  sub_23BB88A20();
  swift_release();
  v126(v55, v64, v63);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v66 = sub_23BB891AC();
  v67 = sub_23BB8ABEC();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = swift_slowAlloc();
    v121 = (char *)swift_slowAlloc();
    v137 = v121;
    *(_DWORD *)v68 = 136315651;
    sub_23BA9DDBC();
    swift_bridgeObjectRetain();
    v69 = sub_23BB8AAFC();
    v71 = v70;
    swift_bridgeObjectRelease();
    v138 = sub_23BB7B69C(v69, v71, (uint64_t *)&v137);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2160;
    v138 = 1752392040;
    v72 = v55;
    v73 = v136;
    sub_23BB8ACB8();
    *(_WORD *)(v68 + 22) = 2081;
    v138 = v130;
    v139 = v73;
    swift_bridgeObjectRetain();
    v74 = sub_23BB8A7D8();
    v138 = sub_23BB7B69C(v74, v75, (uint64_t *)&v137);
    v63 = v129;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v66, v67, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- SubscriptionsThatDoNotExistAnymore: %s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v68, 0x20u);
    v76 = v121;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v76, -1, -1);
    v77 = v68;
    v64 = v131;
    MEMORY[0x24260D9B4](v77, -1, -1);

    v78 = v72;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v78 = v55;
  }
  v127(v78, v63);
  swift_bridgeObjectRelease();
  v93 = v124;
  _s12FindMyUICore19DeviceImageProviderC28didRemoveUniqueSubscriptions07removedJ07isEmptyyShyAC12SubscriptionVG_SbtF_0(v65);
LABEL_21:
  v94 = (uint64_t)v125;
  if (*((_QWORD *)v125 + 2))
  {
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v138 = v135;
    sub_23BB88A20();
    swift_release();
    v95 = v122;
    v126(v122, v64, v63);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v96 = sub_23BB891AC();
    v97 = sub_23BB8ABEC();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = swift_slowAlloc();
      v99 = swift_slowAlloc();
      v137 = (char *)v99;
      *(_DWORD *)v98 = 136315394;
      sub_23BA9DDBC();
      swift_bridgeObjectRetain();
      v100 = sub_23BB8AAFC();
      v102 = v101;
      swift_bridgeObjectRelease();
      v138 = sub_23BB7B69C(v100, v102, (uint64_t *)&v137);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 12) = 2080;
      v103 = v130;
      v138 = v130;
      v139 = v136;
      swift_bridgeObjectRetain();
      v104 = sub_23BB8A7D8();
      v138 = sub_23BB7B69C(v104, v105, (uint64_t *)&v137);
      sub_23BB8ACB8();
      v94 = (uint64_t)v125;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v96, v97, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistBefore: %s\n- subscriber: %s", (uint8_t *)v98, 0x16u);
      swift_arrayDestroy();
      v106 = v99;
      v64 = v131;
      MEMORY[0x24260D9B4](v106, -1, -1);
      MEMORY[0x24260D9B4](v98, -1, -1);

      v127(v122, v63);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v127(v95, v63);
      swift_bridgeObjectRelease();
      v103 = v130;
    }
    _s12FindMyUICore19DeviceImageProviderC28didAddNewUniqueSubscriptions05addedK08wasEmptyyShyAC12SubscriptionVG_SbtF_0(v94);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v138 = v135;
    sub_23BB88A20();
    swift_release();
    v126(v93, v64, v63);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v107 = sub_23BB891AC();
    v108 = sub_23BB8ABEC();
    if (os_log_type_enabled(v107, v108))
    {
      v109 = swift_slowAlloc();
      v110 = swift_slowAlloc();
      v137 = (char *)v110;
      *(_DWORD *)v109 = 136315651;
      sub_23BA9DDBC();
      swift_bridgeObjectRetain();
      v111 = sub_23BB8AAFC();
      v113 = v112;
      swift_bridgeObjectRelease();
      v138 = sub_23BB7B69C(v111, v113, (uint64_t *)&v137);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v114 = v136;
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 12) = 2160;
      v138 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v109 + 22) = 2081;
      v103 = v130;
      v138 = v130;
      v139 = v114;
      swift_bridgeObjectRetain();
      v115 = sub_23BB8A7D8();
      v138 = sub_23BB7B69C(v115, v116, (uint64_t *)&v137);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v107, v108, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v109, 0x20u);
      swift_arrayDestroy();
      v117 = v110;
      v64 = v131;
      MEMORY[0x24260D9B4](v117, -1, -1);
      MEMORY[0x24260D9B4](v109, -1, -1);

      v127(v124, v129);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v127(v93, v63);
      v103 = v130;
    }
  }
  swift_getKeyPath();
  v138 = v135;
  sub_23BB88A20();
  swift_release();
  v118 = *(void (**)(uint64_t, uint64_t *))(v64 + *(int *)(v123 + 48));
  v138 = v103;
  v139 = v136;
  swift_retain();
  v118(v133, &v138);
  return swift_release();
}

uint64_t sub_23BACC320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD);
  void (*v42)(_QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t *);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  void (*v127)(char *, uint64_t, uint64_t);
  void (*v128)(_QWORD, _QWORD);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v4 = v3;
  v137 = a3;
  v131 = a2;
  v6 = sub_23BB891C4();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v123 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v121 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v126 = (char *)&v121 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v122 = (char *)&v121 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v121 - v22;
  swift_getKeyPath();
  v24 = v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  v141 = v3;
  v25 = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v26 = v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  v129 = v7;
  v130 = v6;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v132 = v26;
  v127 = v27;
  v27(v23, v26, v6);
  v134 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v128 = (void (*)(_QWORD, _QWORD))v23;
  v28 = sub_23BB891AC();
  v29 = sub_23BB8ABEC();
  v30 = os_log_type_enabled(v28, v29);
  v135 = v24;
  v136 = v4;
  v133 = v25;
  v125 = v14;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v138 = (char *)v32;
    *(_DWORD *)v31 = 136315394;
    sub_23B9892EC();
    swift_bridgeObjectRetain();
    v33 = sub_23BB8AAFC();
    v34 = v137;
    v35 = v33;
    v37 = v36;
    swift_bridgeObjectRelease();
    v139 = sub_23BB7B69C(v35, v37, (uint64_t *)&v138);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v139 = v131;
    v140 = v34;
    swift_bridgeObjectRetain();
    v38 = sub_23BB8A7D8();
    v139 = sub_23BB7B69C(v38, v39, (uint64_t *)&v138);
    v40 = v130;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v28, v29, "Provider: subscriptions\n- subscriptions: %s\n- subscriber: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v32, -1, -1);
    MEMORY[0x24260D9B4](v31, -1, -1);

    v41 = v128;
    v42 = *(void (**)(_QWORD, _QWORD))(v129 + 8);
    v43 = v40;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v41 = v128;
    v42 = *(void (**)(_QWORD, _QWORD))(v129 + 8);
    v43 = v130;
  }
  v128 = v42;
  v42(v41, v43);
  swift_getKeyPath();
  v139 = v136;
  sub_23BB88A20();
  swift_release();
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  v45 = v132;
  v46 = *(_QWORD *)(v132 + *(int *)(v44 + 40));
  v47 = *(_QWORD *)(v134 + 16);
  swift_getKeyPath();
  v129 = v46;
  v48 = v136;
  if (v47)
  {
    v139 = v136;
    v49 = v44;
    v50 = v134;
    swift_bridgeObjectRetain();
    v51 = v137;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v139 = v48;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    v52 = *(int *)(v49 + 36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v138 = *(char **)(v45 + v52);
    *(_QWORD *)(v45 + v52) = 0x8000000000000000;
    sub_23BAAF628(v50, v131, v51, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v45 + v52) = v138;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BAD1278(&qword_256A59148, qword_256A612C8);
    swift_endAccess();
    v139 = v48;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
  }
  else
  {
    v54 = v137;
    v139 = v136;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v139 = v48;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    sub_23BA77650(v131, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BAD1278(&qword_256A59148, qword_256A612C8);
    swift_endAccess();
    v139 = v48;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    v49 = v44;
  }
  v55 = v126;
  swift_getKeyPath();
  v56 = v136;
  v139 = v136;
  sub_23BB88A20();
  swift_release();
  v57 = swift_bridgeObjectRetain();
  v58 = sub_23BAD1100(v57, sub_23BA78128);
  swift_bridgeObjectRelease();
  v59 = sub_23BAE6840(v58);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v139 = v56;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v139 = v56;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v124 = v49;
  v60 = *(int *)(v49 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v45 + v60) = v59;
  sub_23BAD1494(&qword_256A59148, (void (*)(void))sub_23B9892EC);
  swift_endAccess();
  v139 = v56;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v61 = v129;
  if (*(_QWORD *)(v129 + 16) <= *(_QWORD *)(v134 + 16) >> 3)
  {
    v139 = v134;
    swift_bridgeObjectRetain();
    sub_23BADBD8C(v61);
    v126 = (char *)v139;
  }
  else
  {
    v62 = v134;
    swift_bridgeObjectRetain();
    v126 = (char *)sub_23BADD284(v61, v62);
  }
  v63 = v130;
  v64 = v132;
  if (*(_QWORD *)(v59 + 16) <= *(_QWORD *)(v61 + 16) >> 3)
  {
    v139 = v61;
    swift_bridgeObjectRetain();
    sub_23BADBD8C(v59);
    v65 = v139;
    if (*(_QWORD *)(v139 + 16))
      goto LABEL_12;
LABEL_15:
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v139 = v136;
    sub_23BB88A20();
    swift_release();
    v79 = v122;
    v127(v122, v64, v63);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v80 = sub_23BB891AC();
    v81 = sub_23BB8ABEC();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc();
      v83 = swift_slowAlloc();
      v138 = (char *)v83;
      *(_DWORD *)v82 = 136315651;
      sub_23B9892EC();
      swift_bridgeObjectRetain();
      v84 = sub_23BB8AAFC();
      v86 = v85;
      swift_bridgeObjectRelease();
      v139 = sub_23BB7B69C(v84, v86, (uint64_t *)&v138);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v87 = v79;
      v88 = v137;
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2160;
      v139 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v82 + 22) = 2081;
      v139 = v131;
      v140 = v88;
      swift_bridgeObjectRetain();
      v89 = sub_23BB8A7D8();
      v139 = sub_23BB7B69C(v89, v90, (uint64_t *)&v138);
      v63 = v130;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v80, v81, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v82, 0x20u);
      swift_arrayDestroy();
      v91 = v83;
      v64 = v132;
      MEMORY[0x24260D9B4](v91, -1, -1);
      MEMORY[0x24260D9B4](v82, -1, -1);

      v92 = v87;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v92 = v79;
    }
    v128(v92, v63);
    v93 = v125;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v65 = sub_23BADD284(v59, v61);
  if (!*(_QWORD *)(v65 + 16))
    goto LABEL_15;
LABEL_12:
  swift_getKeyPath();
  v139 = v136;
  sub_23BB88A20();
  swift_release();
  v127(v55, v64, v63);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v66 = sub_23BB891AC();
  v67 = sub_23BB8ABEC();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = swift_slowAlloc();
    v122 = (char *)swift_slowAlloc();
    v138 = v122;
    *(_DWORD *)v68 = 136315651;
    sub_23B9892EC();
    swift_bridgeObjectRetain();
    v69 = sub_23BB8AAFC();
    v71 = v70;
    swift_bridgeObjectRelease();
    v139 = sub_23BB7B69C(v69, v71, (uint64_t *)&v138);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2160;
    v139 = 1752392040;
    v72 = v55;
    v73 = v137;
    sub_23BB8ACB8();
    *(_WORD *)(v68 + 22) = 2081;
    v139 = v131;
    v140 = v73;
    swift_bridgeObjectRetain();
    v74 = sub_23BB8A7D8();
    v139 = sub_23BB7B69C(v74, v75, (uint64_t *)&v138);
    v63 = v130;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v66, v67, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- SubscriptionsThatDoNotExistAnymore: %s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v68, 0x20u);
    v76 = v122;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v76, -1, -1);
    v77 = v68;
    v64 = v132;
    MEMORY[0x24260D9B4](v77, -1, -1);

    v78 = v72;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v78 = v55;
  }
  v128(v78, v63);
  v93 = v125;
  v94 = *(_QWORD *)(v59 + 16);
  swift_bridgeObjectRelease();
  MapsDirectionsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(v65, v94 == 0);
LABEL_21:
  v95 = (uint64_t)v126;
  if (*((_QWORD *)v126 + 2))
  {
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v139 = v136;
    sub_23BB88A20();
    swift_release();
    v96 = v123;
    v127(v123, v64, v63);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v97 = sub_23BB891AC();
    v98 = sub_23BB8ABEC();
    if (os_log_type_enabled(v97, v98))
    {
      v99 = swift_slowAlloc();
      v100 = swift_slowAlloc();
      v138 = (char *)v100;
      *(_DWORD *)v99 = 136315394;
      sub_23B9892EC();
      swift_bridgeObjectRetain();
      v101 = sub_23BB8AAFC();
      v103 = v102;
      swift_bridgeObjectRelease();
      v139 = sub_23BB7B69C(v101, v103, (uint64_t *)&v138);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v99 + 12) = 2080;
      v104 = v131;
      v139 = v131;
      v140 = v137;
      swift_bridgeObjectRetain();
      v105 = sub_23BB8A7D8();
      v139 = sub_23BB7B69C(v105, v106, (uint64_t *)&v138);
      sub_23BB8ACB8();
      v95 = (uint64_t)v126;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v97, v98, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistBefore: %s\n- subscriber: %s", (uint8_t *)v99, 0x16u);
      swift_arrayDestroy();
      v107 = v100;
      v64 = v132;
      MEMORY[0x24260D9B4](v107, -1, -1);
      MEMORY[0x24260D9B4](v99, -1, -1);

      v128(v123, v63);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v128(v96, v63);
      swift_bridgeObjectRelease();
      v104 = v131;
    }
    _s12FindMyUICore22MapsDirectionsProviderC28didAddNewUniqueSubscriptions05addedK08wasEmptyyShyAC10InputValueO11DestinationV10IdentifierVG_SbtF_0(v95);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v139 = v136;
    sub_23BB88A20();
    swift_release();
    v127(v93, v64, v63);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v108 = sub_23BB891AC();
    v109 = sub_23BB8ABEC();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = swift_slowAlloc();
      v111 = swift_slowAlloc();
      v138 = (char *)v111;
      *(_DWORD *)v110 = 136315651;
      sub_23B9892EC();
      swift_bridgeObjectRetain();
      v112 = sub_23BB8AAFC();
      v114 = v113;
      swift_bridgeObjectRelease();
      v139 = sub_23BB7B69C(v112, v114, (uint64_t *)&v138);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v115 = v137;
      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2160;
      v139 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v110 + 22) = 2081;
      v104 = v131;
      v139 = v131;
      v140 = v115;
      swift_bridgeObjectRetain();
      v116 = sub_23BB8A7D8();
      v139 = sub_23BB7B69C(v116, v117, (uint64_t *)&v138);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v108, v109, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v110, 0x20u);
      swift_arrayDestroy();
      v118 = v111;
      v64 = v132;
      MEMORY[0x24260D9B4](v118, -1, -1);
      MEMORY[0x24260D9B4](v110, -1, -1);

      v128(v125, v130);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v128(v93, v63);
      v104 = v131;
    }
  }
  swift_getKeyPath();
  v139 = v136;
  sub_23BB88A20();
  swift_release();
  v119 = *(void (**)(uint64_t, uint64_t *))(v64 + *(int *)(v124 + 48));
  v139 = v104;
  v140 = v137;
  swift_retain();
  v119(v134, &v139);
  return swift_release();
}

uint64_t sub_23BACD5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t *);
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v4 = v3;
  v121 = a2;
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v110 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v114 = (char *)&v108 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v109 = (char *)&v108 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v108 = (char *)&v108 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v108 - v22;
  swift_getKeyPath();
  v24 = v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider___observationRegistrar;
  v128 = v4;
  v25 = sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  v122 = v24;
  sub_23BB88A20();
  swift_release();
  v26 = v4 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v118 = v26;
  v116 = v27;
  v27(v23, v26, v7);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v28 = sub_23BB891AC();
  v29 = sub_23BB8ABEC();
  v30 = os_log_type_enabled(v28, v29);
  v119 = a1;
  v123 = v25;
  v124 = a3;
  v115 = v4;
  v117 = v7;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v125 = v32;
    *(_DWORD *)v31 = 136315394;
    sub_23B990770();
    swift_bridgeObjectRetain();
    v33 = sub_23BB8AAFC();
    v35 = v34;
    swift_bridgeObjectRelease();
    v126 = sub_23BB7B69C(v33, v35, &v125);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v126 = v121;
    v127 = v124;
    swift_bridgeObjectRetain();
    v36 = sub_23BB8A7D8();
    v126 = sub_23BB7B69C(v36, v37, &v125);
    a1 = v119;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v28, v29, "Provider: subscriptions\n- subscriptions: %s\n- subscriber: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    v38 = v32;
    v4 = v115;
    MEMORY[0x24260D9B4](v38, -1, -1);
    MEMORY[0x24260D9B4](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v39 = *(void (**)(char *, uint64_t))(v8 + 8);
  v39(v23, v7);
  swift_getKeyPath();
  v126 = v4;
  sub_23BB88A20();
  swift_release();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  v41 = v118;
  v42 = *(_QWORD *)(v118 + *(int *)(v40 + 40));
  v43 = *(_QWORD *)(a1 + 16);
  swift_getKeyPath();
  v112 = v39;
  v120 = v42;
  v126 = v4;
  if (v43)
  {
    swift_bridgeObjectRetain();
    v44 = v124;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v126 = v4;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    v45 = *(int *)(v40 + 36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v125 = *(_QWORD *)(v41 + v45);
    *(_QWORD *)(v41 + v45) = 0x8000000000000000;
    sub_23BAAF63C(a1, v121, v44, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v41 + v45) = v125;
  }
  else
  {
    v47 = v124;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v126 = v4;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    sub_23BA77664(v121, v47);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23BAD1278(&qword_256A59610, &qword_256A61240);
  swift_endAccess();
  v126 = v4;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_getKeyPath();
  v126 = v4;
  sub_23BB88A20();
  swift_release();
  v48 = swift_bridgeObjectRetain();
  v49 = sub_23BAD1100(v48, (uint64_t (*)(uint64_t))sub_23BA7852C);
  swift_bridgeObjectRelease();
  v50 = sub_23BAE6768(v49);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v126 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v126 = v4;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v113 = v40;
  v51 = *(int *)(v40 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + v51) = v50;
  sub_23BAD1494(&qword_256A59610, (void (*)(void))sub_23B990770);
  swift_endAccess();
  v126 = v4;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v52 = v120;
  if (*(_QWORD *)(v120 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
  {
    v126 = a1;
    swift_bridgeObjectRetain();
    sub_23BADBF30(v52);
    v111 = v126;
  }
  else
  {
    swift_bridgeObjectRetain();
    v111 = sub_23BADD6F8(v52, a1);
  }
  v53 = v117;
  if (*(_QWORD *)(v50 + 16) <= *(_QWORD *)(v52 + 16) >> 3)
  {
    v126 = v52;
    swift_bridgeObjectRetain();
    sub_23BADBF30(v50);
    if (*(_QWORD *)(v126 + 16))
      goto LABEL_12;
LABEL_15:
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v126 = v4;
    sub_23BB88A20();
    swift_release();
    v66 = v108;
    v116(v108, v41, v53);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v67 = sub_23BB891AC();
    v68 = sub_23BB8ABEC();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc();
      v70 = swift_slowAlloc();
      v125 = v70;
      *(_DWORD *)v69 = 136315651;
      sub_23B990770();
      swift_bridgeObjectRetain();
      v71 = sub_23BB8AAFC();
      v73 = v72;
      swift_bridgeObjectRelease();
      v126 = sub_23BB7B69C(v71, v73, &v125);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2160;
      v126 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v69 + 22) = 2081;
      v74 = v66;
      v62 = v121;
      v126 = v121;
      v127 = v124;
      swift_bridgeObjectRetain();
      v75 = sub_23BB8A7D8();
      v126 = sub_23BB7B69C(v75, v76, &v125);
      v53 = v117;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v4 = v115;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v67, v68, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v69, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v70, -1, -1);
      MEMORY[0x24260D9B4](v69, -1, -1);

      v65 = v112;
      v112(v74, v53);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v65 = v112;
      v112(v66, v53);
      v62 = v121;
    }
    v80 = v118;
    v77 = v114;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  if (!*(_QWORD *)(sub_23BADD6F8(v50, v52) + 16))
    goto LABEL_15;
LABEL_12:
  swift_getKeyPath();
  v126 = v4;
  sub_23BB88A20();
  swift_release();
  v54 = v109;
  v116(v109, v41, v53);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v55 = sub_23BB891AC();
  v56 = sub_23BB8ABEC();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v125 = v58;
    *(_DWORD *)v57 = 136315651;
    sub_23B990770();
    swift_bridgeObjectRetain();
    v59 = sub_23BB8AAFC();
    v61 = v60;
    swift_bridgeObjectRelease();
    v126 = sub_23BB7B69C(v59, v61, &v125);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2160;
    v126 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v57 + 22) = 2081;
    v62 = v121;
    v126 = v121;
    v127 = v124;
    swift_bridgeObjectRetain();
    v63 = sub_23BB8A7D8();
    v126 = sub_23BB7B69C(v63, v64, &v125);
    v53 = v117;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    v4 = v115;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v55, v56, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- SubscriptionsThatDoNotExistAnymore: %s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v57, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v58, -1, -1);
    MEMORY[0x24260D9B4](v57, -1, -1);

    v65 = v112;
    v112(v109, v53);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v65 = v112;
    v112(v54, v53);
    v62 = v121;
  }
  v77 = v114;
  v78 = *(_QWORD *)(v50 + 16);
  swift_bridgeObjectRelease();
  v79 = swift_allocObject();
  *(_BYTE *)(v79 + 16) = v78 == 0;
  *(_QWORD *)(v79 + 24) = v4;
  swift_retain();
  sub_23B9C7824((uint64_t)&unk_256A59770, v79);
  swift_release();
  v80 = v118;
LABEL_21:
  if (*(_QWORD *)(v111 + 16))
  {
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v126 = v4;
    sub_23BB88A20();
    swift_release();
    v81 = v110;
    v116(v110, v80, v53);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v82 = sub_23BB891AC();
    v83 = sub_23BB8ABEC();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = swift_slowAlloc();
      v85 = swift_slowAlloc();
      v125 = v85;
      *(_DWORD *)v84 = 136315394;
      sub_23B990770();
      swift_bridgeObjectRetain();
      v86 = sub_23BB8AAFC();
      v87 = v65;
      v89 = v88;
      swift_bridgeObjectRelease();
      v126 = sub_23BB7B69C(v86, v89, &v125);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 12) = 2080;
      v126 = v62;
      v127 = v124;
      swift_bridgeObjectRetain();
      v90 = sub_23BB8A7D8();
      v126 = sub_23BB7B69C(v90, v91, &v125);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v4 = v115;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v82, v83, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistBefore: %s\n- subscriber: %s", (uint8_t *)v84, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v85, -1, -1);
      MEMORY[0x24260D9B4](v84, -1, -1);

      v80 = v118;
      v87(v110, v117);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v65(v81, v53);
    }
    v102 = v119;
    v103 = *(_QWORD *)(v120 + 16);
    swift_bridgeObjectRelease();
    v104 = v103 == 0;
    v105 = swift_allocObject();
    *(_BYTE *)(v105 + 16) = v104;
    *(_QWORD *)(v105 + 24) = v4;
    swift_retain();
    sub_23B9C7824((uint64_t)&unk_256A59760, v105);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v126 = v4;
    sub_23BB88A20();
    swift_release();
    v116(v77, v80, v53);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v92 = sub_23BB891AC();
    v93 = sub_23BB8ABEC();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = swift_slowAlloc();
      v95 = swift_slowAlloc();
      v125 = v95;
      *(_DWORD *)v94 = 136315651;
      sub_23B990770();
      swift_bridgeObjectRetain();
      v96 = sub_23BB8AAFC();
      v97 = v65;
      v99 = v98;
      swift_bridgeObjectRelease();
      v126 = sub_23BB7B69C(v96, v99, &v125);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2160;
      v126 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v94 + 22) = 2081;
      v62 = v121;
      v126 = v121;
      v127 = v124;
      swift_bridgeObjectRetain();
      v100 = sub_23BB8A7D8();
      v126 = sub_23BB7B69C(v100, v101, &v125);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v4 = v115;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v92, v93, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v94, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v95, -1, -1);
      MEMORY[0x24260D9B4](v94, -1, -1);

      v80 = v118;
      v97(v114, v117);
      v102 = v119;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v65(v77, v53);
      v102 = v119;
      v62 = v121;
    }
  }
  swift_getKeyPath();
  v126 = v4;
  sub_23BB88A20();
  swift_release();
  v106 = *(void (**)(uint64_t, uint64_t *))(v80 + *(int *)(v113 + 48));
  v126 = v62;
  v127 = v124;
  swift_retain();
  v106(v102, &v126);
  return swift_release();
}

uint64_t sub_23BACE898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BACEA28(a1, a2, a3, (uint64_t)&unk_23BB94520, &OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar, (unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider, &OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage, (void (*)(void))sub_23B9907B4, (uint64_t)&type metadata for BeaconsInfoProvider.BeaconsSubscription, &qword_256A59628, (void (*)(uint64_t, uint64_t))sub_23BA77678, &qword_256A61230, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BAAF650, sub_23BA78894, sub_23BAE66D4, (uint64_t *)sub_23BADDA3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BADC114,
           (char *)BeaconsInfoProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:),
           (uint64_t (*)(uint64_t))BeaconsInfoProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:));
}

uint64_t sub_23BACE960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BACEA28(a1, a2, a3, (uint64_t)&unk_23BB94548, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar, (unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage, (void (*)(void))sub_23B990690, (uint64_t)&type metadata for PeopleLocationsProvider.Subscription, &qword_256A595B0, (void (*)(uint64_t, uint64_t))sub_23BA77778, &qword_256A61238, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BAAF908, sub_23BA7925C, sub_23BAE696C, (uint64_t *)sub_23BADF250, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BADC81C,
           (char *)PeopleLocationsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:),
           (uint64_t (*)(uint64_t))PeopleLocationsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:));
}

uint64_t sub_23BACEA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, unint64_t *a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t *a9, void (*a10)(void), uint64_t a11, uint64_t *a12, void (*a13)(uint64_t, uint64_t), uint64_t *a14, void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a16)(uint64_t), uint64_t (*a17)(uint64_t), uint64_t *a18, void (*a19)(uint64_t, uint64_t, uint64_t, uint64_t), char *a20,uint64_t (*a21)(uint64_t))
{
  uint64_t v21;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  unint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(void);
  void (*v55)(char *, uint64_t, uint64_t);
  NSObject *v56;
  os_log_type_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  void (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t *v117;
  char *v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t *);
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  void (*v153)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v154;
  uint64_t (*v155)(uint64_t);
  uint64_t (*v156)(uint64_t);
  void (*v157)(char *, uint64_t);
  char *v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t, uint64_t);
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(void);
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v27 = v21;
  v165 = a3;
  v169 = a2;
  v156 = a16;
  v154 = a14;
  v161 = a12;
  v170 = a11;
  v167 = a10;
  v168 = a9;
  v29 = sub_23BB891C4();
  v30 = *(_QWORD *)(v29 - 8);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v152 = (char *)&v149 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v151 = (char *)&v149 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v158 = (char *)&v149 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v150 = (char *)&v149 - v42;
  MEMORY[0x24BDAC7A8](v41, v43);
  v45 = (char *)&v149 - v44;
  v171 = a4;
  swift_getKeyPath();
  v46 = (uint64_t *)(v27 + *a5);
  v177 = v27;
  v47 = a6;
  v48 = v46;
  v49 = a8;
  v50 = a1;
  v172 = sub_23B97D0C8(v47, a7, v49);
  sub_23BB88A20();
  swift_release();
  v51 = *v168;
  v52 = v165;
  v163 = v27;
  v53 = v27 + v51;
  v54 = v167;
  swift_beginAccess();
  v166 = v30;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v164 = v53;
  v160 = v55;
  v55(v45, v53, v29);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v56 = sub_23BB891AC();
  v57 = sub_23BB8ABEC();
  v58 = os_log_type_enabled(v56, v57);
  v173 = v50;
  v162 = v29;
  v168 = v48;
  if (v58)
  {
    v59 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v174 = v60;
    *(_DWORD *)v59 = 136315394;
    v54();
    swift_bridgeObjectRetain();
    v61 = sub_23BB8AAFC();
    v62 = v29;
    v64 = v63;
    swift_bridgeObjectRelease();
    v175 = sub_23BB7B69C(v61, v64, &v174);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2080;
    v175 = v169;
    v176 = v52;
    swift_bridgeObjectRetain();
    v65 = sub_23BB8A7D8();
    v175 = sub_23BB7B69C(v65, v66, &v174);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v56, v57, "Provider: subscriptions\n- subscriptions: %s\n- subscriber: %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v60, -1, -1);
    MEMORY[0x24260D9B4](v59, -1, -1);

    v67 = *(void (**)(char *, uint64_t))(v166 + 8);
    v67(v45, v62);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v67 = *(void (**)(char *, uint64_t))(v166 + 8);
    v67(v45, v29);
  }
  v155 = a17;
  swift_getKeyPath();
  v68 = v163;
  v175 = v163;
  sub_23BB88A20();
  swift_release();
  v166 = __swift_instantiateConcreteTypeFromMangledName(v161);
  v69 = v164;
  v70 = *(_QWORD *)(v164 + *(int *)(v166 + 40));
  v71 = *(_QWORD *)(v173 + 16);
  swift_getKeyPath();
  v157 = v67;
  v159 = v70;
  if (v71)
  {
    v153 = a15;
    v175 = v68;
    v72 = v173;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v175 = v68;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    v73 = *(int *)(v166 + 36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v174 = *(_QWORD *)(v69 + v73);
    *(_QWORD *)(v69 + v73) = 0x8000000000000000;
    v153(v72, v169, v52, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v69 + v73) = v174;
  }
  else
  {
    v175 = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v175 = v68;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    a13(v169, v52);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75 = v161;
  sub_23BAD1278(v161, v154);
  swift_endAccess();
  v175 = v68;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v153 = a19;
  v154 = a18;
  swift_getKeyPath();
  v175 = v68;
  sub_23BB88A20();
  swift_release();
  v76 = v166;
  v77 = swift_bridgeObjectRetain();
  v78 = sub_23BAD1100(v77, v156);
  swift_bridgeObjectRelease();
  v79 = v155(v78);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v175 = v68;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v175 = v68;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v80 = *(int *)(v76 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v69 + v80) = v79;
  sub_23BAD1494(v75, v167);
  swift_endAccess();
  v81 = v68;
  v175 = v68;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v82 = v159;
  v83 = v173;
  if (*(_QWORD *)(v159 + 16) <= *(_QWORD *)(v173 + 16) >> 3)
  {
    v175 = v173;
    swift_bridgeObjectRetain();
    v87 = (void (*)(uint64_t))v153;
    ((void (*)(uint64_t))v153)(v82);
    v161 = (uint64_t *)v175;
    v86 = v158;
    v85 = v154;
  }
  else
  {
    swift_bridgeObjectRetain();
    v84 = v83;
    v85 = v154;
    v161 = (uint64_t *)((uint64_t (*)(uint64_t, uint64_t))v154)(v82, v84);
    v86 = v158;
    v87 = (void (*)(uint64_t))v153;
  }
  if (*(_QWORD *)(v79 + 16) <= *(_QWORD *)(v82 + 16) >> 3)
  {
    v175 = v82;
    swift_bridgeObjectRetain();
    v87(v79);
    v88 = v175;
  }
  else
  {
    swift_bridgeObjectRetain();
    v88 = ((uint64_t (*)(uint64_t, uint64_t))v85)(v79, v82);
  }
  v89 = v81;
  if (*(_QWORD *)(v88 + 16))
  {
    v156 = a21;
    swift_getKeyPath();
    v175 = v81;
    sub_23BB88A20();
    swift_release();
    v90 = v162;
    v160(v86, v69, v162);
    v91 = v165;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v92 = sub_23BB891AC();
    v93 = sub_23BB8ABEC();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = swift_slowAlloc();
      v95 = swift_slowAlloc();
      v174 = v95;
      *(_DWORD *)v94 = 136315651;
      v167();
      swift_bridgeObjectRetain();
      v96 = sub_23BB8AAFC();
      v98 = v97;
      swift_bridgeObjectRelease();
      v175 = sub_23BB7B69C(v96, v98, &v174);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2160;
      v175 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v94 + 22) = 2081;
      v175 = v169;
      v176 = v91;
      swift_bridgeObjectRetain();
      v99 = sub_23BB8A7D8();
      v175 = sub_23BB7B69C(v99, v100, &v174);
      v90 = v162;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v92, v93, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- SubscriptionsThatDoNotExistAnymore: %s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v94, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v95, -1, -1);
      v101 = v94;
      v89 = v163;
      MEMORY[0x24260D9B4](v101, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v115 = v157;
    v157(v158, v90);
    v116 = *(_QWORD *)(v79 + 16);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, BOOL))v156)(v88, v116 == 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v175 = v81;
    sub_23BB88A20();
    swift_release();
    v102 = v150;
    v90 = v162;
    v160(v150, v69, v162);
    v103 = v165;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v104 = sub_23BB891AC();
    v105 = sub_23BB8ABEC();
    if (os_log_type_enabled(v104, v105))
    {
      v106 = swift_slowAlloc();
      v107 = swift_slowAlloc();
      v174 = v107;
      *(_DWORD *)v106 = 136315651;
      v167();
      swift_bridgeObjectRetain();
      v108 = sub_23BB8AAFC();
      v110 = v109;
      swift_bridgeObjectRelease();
      v175 = sub_23BB7B69C(v108, v110, &v174);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v106 + 12) = 2160;
      v175 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v106 + 22) = 2081;
      v175 = v169;
      v176 = v103;
      swift_bridgeObjectRetain();
      v111 = sub_23BB8A7D8();
      v175 = sub_23BB7B69C(v111, v112, &v174);
      v90 = v162;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v104, v105, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v106, 0x20u);
      swift_arrayDestroy();
      v113 = v107;
      v89 = v163;
      MEMORY[0x24260D9B4](v113, -1, -1);
      MEMORY[0x24260D9B4](v106, -1, -1);

      v114 = v150;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v114 = v102;
    }
    v115 = v157;
    v157(v114, v90);
  }
  v117 = v161;
  if (v161[2])
  {
    v158 = a20;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v175 = v89;
    sub_23BB88A20();
    swift_release();
    v118 = v152;
    v160(v152, v164, v90);
    v119 = v165;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v120 = sub_23BB891AC();
    v121 = sub_23BB8ABEC();
    if (os_log_type_enabled(v120, v121))
    {
      v122 = swift_slowAlloc();
      v123 = swift_slowAlloc();
      v174 = v123;
      *(_DWORD *)v122 = 136315394;
      v167();
      swift_bridgeObjectRetain();
      v124 = sub_23BB8AAFC();
      v126 = v125;
      swift_bridgeObjectRelease();
      v175 = sub_23BB7B69C(v124, v126, &v174);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v122 + 12) = 2080;
      v175 = v169;
      v176 = v119;
      swift_bridgeObjectRetain();
      v127 = sub_23BB8A7D8();
      v175 = sub_23BB7B69C(v127, v128, &v174);
      v129 = v119;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v89 = v163;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v120, v121, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistBefore: %s\n- subscriber: %s", (uint8_t *)v122, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v123, -1, -1);
      MEMORY[0x24260D9B4](v122, -1, -1);

      v157(v118, v162);
      v130 = v173;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v115(v118, v90);
      v130 = v173;
      v129 = v119;
    }
    v146 = *(_QWORD *)(v159 + 16);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, BOOL))v158)(v117, v146 == 0);
    swift_bridgeObjectRelease();
    v141 = v169;
    v145 = v166;
    v132 = v164;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v175 = v89;
    sub_23BB88A20();
    swift_release();
    v131 = v151;
    v132 = v164;
    v160(v151, v164, v90);
    v133 = v165;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v134 = sub_23BB891AC();
    v135 = sub_23BB8ABEC();
    if (os_log_type_enabled(v134, v135))
    {
      v136 = swift_slowAlloc();
      v137 = swift_slowAlloc();
      v174 = v137;
      *(_DWORD *)v136 = 136315651;
      v167();
      swift_bridgeObjectRetain();
      v138 = sub_23BB8AAFC();
      v140 = v139;
      swift_bridgeObjectRelease();
      v175 = sub_23BB7B69C(v138, v140, &v174);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 12) = 2160;
      v175 = 1752392040;
      v129 = v133;
      sub_23BB8ACB8();
      *(_WORD *)(v136 + 22) = 2081;
      v141 = v169;
      v175 = v169;
      v176 = v133;
      swift_bridgeObjectRetain();
      v142 = sub_23BB8A7D8();
      v175 = sub_23BB7B69C(v142, v143, &v174);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v134, v135, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v136, 0x20u);
      swift_arrayDestroy();
      v144 = v137;
      v89 = v163;
      MEMORY[0x24260D9B4](v144, -1, -1);
      MEMORY[0x24260D9B4](v136, -1, -1);

      v157(v151, v162);
      v130 = v173;
      v145 = v166;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v115(v131, v90);
      v130 = v173;
      v141 = v169;
      v145 = v166;
      v129 = v133;
    }
  }
  swift_getKeyPath();
  v175 = v89;
  sub_23BB88A20();
  swift_release();
  v147 = *(void (**)(uint64_t, uint64_t *))(v132 + *(int *)(v145 + 48));
  v175 = v141;
  v176 = v129;
  swift_retain();
  v147(v130, &v175);
  return swift_release();
}

uint64_t sub_23BACFD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  void (*v114)(uint64_t, uint64_t *);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  void (*v122)(char *, uint64_t, uint64_t);
  char *v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v4 = v3;
  v132 = a3;
  v125 = a2;
  v6 = sub_23BB891C4();
  v7 = *(void (**)(char *, uint64_t))(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v119 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v121 = (char *)&v116 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v118 = (char *)&v116 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v120 = (char *)&v116 - v19;
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v116 - v21;
  swift_getKeyPath();
  v23 = v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
  v136 = v3;
  v24 = sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v25 = v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  v124 = v7;
  v26 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v7 + 2);
  v126 = v6;
  v122 = v26;
  v26(v22, v25, v6);
  v129 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v123 = v22;
  v27 = sub_23BB891AC();
  v28 = sub_23BB8ABEC();
  v29 = os_log_type_enabled(v27, v28);
  v130 = v23;
  v131 = v4;
  v127 = v24;
  v128 = v25;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v133 = v31;
    *(_DWORD *)v30 = 136315394;
    sub_23B9900F8();
    swift_bridgeObjectRetain();
    v32 = sub_23BB8AAFC();
    v33 = v132;
    v34 = v32;
    v36 = v35;
    swift_bridgeObjectRelease();
    v134 = sub_23BB7B69C(v34, v36, &v133);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    v134 = v125;
    v135 = v33;
    swift_bridgeObjectRetain();
    v37 = sub_23BB8A7D8();
    v134 = sub_23BB7B69C(v37, v38, &v133);
    v39 = v126;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    v25 = v128;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v27, v28, "Provider: subscriptions\n- subscriptions: %s\n- subscriber: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v31, -1, -1);
    MEMORY[0x24260D9B4](v30, -1, -1);

    v40 = v123;
    v41 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
    v42 = v39;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v40 = v123;
    v41 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
    v42 = v126;
  }
  v124 = v41;
  v41(v40, v42);
  swift_getKeyPath();
  v134 = v131;
  sub_23BB88A20();
  swift_release();
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  v44 = *(char **)(v25 + *(int *)(v43 + 40));
  v45 = *(_QWORD *)(v129 + 16);
  swift_getKeyPath();
  v123 = v44;
  v46 = v131;
  if (v45)
  {
    v134 = v131;
    v47 = (char *)v43;
    v48 = v129;
    swift_bridgeObjectRetain();
    v49 = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v134 = v46;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    v50 = *((int *)v47 + 9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v133 = *(_QWORD *)(v25 + v50);
    *(_QWORD *)(v25 + v50) = 0x8000000000000000;
    sub_23BAAF8F4(v48, v125, v49, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v25 + v50) = v133;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BAD1278(&qword_256A59590, &qword_256A61290);
    swift_endAccess();
    v134 = v46;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
  }
  else
  {
    v52 = v132;
    v134 = v131;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v134 = v46;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    sub_23BA77764(v125, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BAD1278(&qword_256A59590, &qword_256A61290);
    swift_endAccess();
    v134 = v46;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    v47 = (char *)v43;
  }
  v53 = v120;
  swift_getKeyPath();
  v54 = v131;
  v134 = v131;
  sub_23BB88A20();
  swift_release();
  v55 = swift_bridgeObjectRetain();
  v56 = sub_23BAD1100(v55, sub_23BA78DFC);
  swift_bridgeObjectRelease();
  v57 = sub_23BAE6A0C(v56);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v134 = v54;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v134 = v54;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  v120 = v47;
  v58 = *((int *)v47 + 10);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + v58) = v57;
  sub_23BAD1494(&qword_256A59590, (void (*)(void))sub_23B9900F8);
  swift_endAccess();
  v134 = v54;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v59 = (uint64_t)v123;
  if (*((_QWORD *)v123 + 2) <= *(_QWORD *)(v129 + 16) >> 3)
  {
    v134 = v129;
    swift_bridgeObjectRetain();
    sub_23BADC650(v59);
    v61 = v134;
  }
  else
  {
    v60 = v129;
    swift_bridgeObjectRetain();
    v61 = sub_23BADEC18(v59, v60);
  }
  v62 = v126;
  if (*(_QWORD *)(v57 + 16) > *(_QWORD *)(v59 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(sub_23BADEC18(v57, v59) + 16))
      goto LABEL_12;
LABEL_15:
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v134 = v131;
    sub_23BB88A20();
    swift_release();
    v122(v53, v128, v62);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v75 = sub_23BB891AC();
    v76 = sub_23BB8ABEC();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc();
      v78 = swift_slowAlloc();
      v133 = v78;
      *(_DWORD *)v77 = 136315651;
      sub_23B9900F8();
      v117 = v61;
      swift_bridgeObjectRetain();
      v79 = sub_23BB8AAFC();
      v81 = v80;
      swift_bridgeObjectRelease();
      v134 = sub_23BB7B69C(v79, v81, &v133);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v82 = v53;
      v83 = v132;
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2160;
      v134 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v77 + 22) = 2081;
      v134 = v125;
      v135 = v83;
      swift_bridgeObjectRetain();
      v84 = sub_23BB8A7D8();
      v134 = sub_23BB7B69C(v84, v85, &v133);
      v62 = v126;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v61 = v117;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v75, v76, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v77, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v78, -1, -1);
      MEMORY[0x24260D9B4](v77, -1, -1);

      v86 = v82;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v86 = v53;
    }
    v124(v86, v62);
    v89 = v128;
    v87 = v121;
    if (*(_QWORD *)(v61 + 16))
      goto LABEL_19;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v134 = v131;
    sub_23BB88A20();
    swift_release();
    v122(v87, v89, v62);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v103 = sub_23BB891AC();
    v104 = sub_23BB8ABEC();
    if (os_log_type_enabled(v103, v104))
    {
      v105 = swift_slowAlloc();
      v106 = swift_slowAlloc();
      v133 = v106;
      *(_DWORD *)v105 = 136315651;
      sub_23B9900F8();
      swift_bridgeObjectRetain();
      v107 = sub_23BB8AAFC();
      v109 = v108;
      swift_bridgeObjectRelease();
      v134 = sub_23BB7B69C(v107, v109, &v133);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      v110 = v132;
      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2160;
      v134 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v105 + 22) = 2081;
      v99 = v125;
      v134 = v125;
      v135 = v110;
      swift_bridgeObjectRetain();
      v111 = sub_23BB8A7D8();
      v134 = sub_23BB7B69C(v111, v112, &v133);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v103, v104, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- Skipping notification due to%s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v105, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v106, -1, -1);
      MEMORY[0x24260D9B4](v105, -1, -1);

      v124(v121, v126);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v124(v87, v62);
      v99 = v125;
    }
    goto LABEL_28;
  }
  v134 = v59;
  swift_bridgeObjectRetain();
  sub_23BADC650(v57);
  if (!*(_QWORD *)(v134 + 16))
    goto LABEL_15;
LABEL_12:
  swift_getKeyPath();
  v134 = v131;
  sub_23BB88A20();
  swift_release();
  v63 = v118;
  v122(v118, v128, v62);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v64 = sub_23BB891AC();
  v65 = sub_23BB8ABEC();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc();
    v116 = swift_slowAlloc();
    v133 = v116;
    *(_DWORD *)v66 = 136315651;
    sub_23B9900F8();
    swift_bridgeObjectRetain();
    v67 = sub_23BB8AAFC();
    v117 = v61;
    v69 = v68;
    swift_bridgeObjectRelease();
    v134 = sub_23BB7B69C(v67, v69, &v133);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2160;
    v134 = 1752392040;
    v70 = v132;
    sub_23BB8ACB8();
    *(_WORD *)(v66 + 22) = 2081;
    v134 = v125;
    v135 = v70;
    swift_bridgeObjectRetain();
    v71 = sub_23BB8A7D8();
    v134 = sub_23BB7B69C(v71, v72, &v133);
    v62 = v126;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    v61 = v117;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v64, v65, "Provider: setSubscriptions-didRemoveUniqueSubscriptions\n- SubscriptionsThatDoNotExistAnymore: %s\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v66, 0x20u);
    v73 = v116;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v73, -1, -1);
    MEMORY[0x24260D9B4](v66, -1, -1);

    v74 = v118;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v74 = v63;
  }
  v124(v74, v62);
  v87 = v121;
  v88 = *(_QWORD *)(v57 + 16);
  swift_bridgeObjectRelease();
  sub_23BB4DB04(v88 == 0);
  v89 = v128;
  if (!*(_QWORD *)(v61 + 16))
    goto LABEL_25;
LABEL_19:
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v134 = v131;
  sub_23BB88A20();
  swift_release();
  v90 = v119;
  v122(v119, v89, v62);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v91 = sub_23BB891AC();
  v92 = sub_23BB8ABEC();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = swift_slowAlloc();
    v94 = swift_slowAlloc();
    v133 = v94;
    *(_DWORD *)v93 = 136315394;
    sub_23B9900F8();
    swift_bridgeObjectRetain();
    v95 = sub_23BB8AAFC();
    v96 = v61;
    v98 = v97;
    swift_bridgeObjectRelease();
    v134 = sub_23BB7B69C(v95, v98, &v133);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 12) = 2080;
    v99 = v125;
    v134 = v125;
    v135 = v132;
    swift_bridgeObjectRetain();
    v100 = sub_23BB8A7D8();
    v134 = sub_23BB7B69C(v100, v101, &v133);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v91, v92, "Provider: setSubscriptions-didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistBefore: %s\n- subscriber: %s", (uint8_t *)v93, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v94, -1, -1);
    MEMORY[0x24260D9B4](v93, -1, -1);

    v124(v119, v126);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v124(v90, v62);
    v96 = v61;
    v99 = v125;
  }
  v102 = *((_QWORD *)v123 + 2);
  swift_bridgeObjectRelease();
  ContactsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(v96, v102 == 0);
  swift_bridgeObjectRelease();
LABEL_28:
  v113 = v120;
  swift_getKeyPath();
  v134 = v131;
  sub_23BB88A20();
  swift_release();
  v114 = *(void (**)(uint64_t, uint64_t *))(v128 + *((int *)v113 + 12));
  v134 = v99;
  v135 = v132;
  swift_retain();
  v114(v129, &v134);
  return swift_release();
}

uint64_t sub_23BAD1038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BACEA28(a1, a2, a3, (uint64_t)&unk_23BB94610, &OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar, (unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider, &OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage, (void (*)(void))sub_23B99070C, (uint64_t)&type metadata for PeopleRelationshipsProvider.Subscription, &qword_256A595D8, (void (*)(uint64_t, uint64_t))sub_23BA7778C, &qword_256A61288, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BAAF91C, sub_23BA796D4, sub_23BAE68D4, (uint64_t *)sub_23BADF6F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BADC9D8,
           (char *)PeopleRelationshipsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:),
           (uint64_t (*)(uint64_t))PeopleRelationshipsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:));
}

uint64_t sub_23BAD1100(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v9;
    if (!v12)
    {
      v9 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_23;
      v12 = *(_QWORD *)(v3 + 8 * v9);
      if (!v12)
      {
        v9 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_23;
        v12 = *(_QWORD *)(v3 + 8 * v9);
        if (!v12)
        {
          v9 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_23;
          v12 = *(_QWORD *)(v3 + 8 * v9);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v12 - 1) & v12;
LABEL_5:
    v10 = swift_bridgeObjectRetain();
    result = a2(v10);
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_23:
    swift_release();
    return v14;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v9 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v9 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 8 * v9);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23BAD1278(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = v2;
  v6 = sub_23BB891C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v5, v6);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    *(_DWORD *)v13 = 136315138;
    v19 = v13 + 4;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a2);
    sub_23BA87CB8();
    v14 = sub_23BB8A6C4();
    v16 = v15;
    swift_bridgeObjectRelease();
    v21 = sub_23BB7B69C(v14, v16, &v22);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "SubscriptionManagerStorage: subscriptionsBySubscriber - %s", v13, 0xCu);
    v17 = v20;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_23BAD1494(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = v2;
  v6 = sub_23BB891C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v5, v6);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  if (os_log_type_enabled(v11, v12))
  {
    v21 = v6;
    v13 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v23 = v20;
    *(_DWORD *)v13 = 136315138;
    v19[1] = v13 + 4;
    a2();
    swift_bridgeObjectRetain();
    v14 = sub_23BB8AAFC();
    v16 = v15;
    swift_bridgeObjectRelease();
    v22 = sub_23BB7B69C(v14, v16, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "SubscriptionManagerStorage: uniqueSubscriptions - %s", v13, 0xCu);
    v17 = v20;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v21);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t static ProvidersMediator.shared.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ProvidersMediator.shared.setter(uint64_t a1)
{
  swift_beginAccess();
  qword_256A61150 = a1;
  return swift_release();
}

uint64_t (*static ProvidersMediator.shared.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *ProvidersMediator.__allocating_init(peopleRelationshipsProvider:peopleLocationsProvider:beaconsInfoProvider:userLocationProvider:contactsProvider:mapsDirectionsProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  swift_allocObject();
  v12 = sub_23BAE6B54(a1, a2, a3, a4, a5, a6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

_QWORD *ProvidersMediator.init(peopleRelationshipsProvider:peopleLocationsProvider:beaconsInfoProvider:userLocationProvider:contactsProvider:mapsDirectionsProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6 = sub_23BAE6B54(a1, a2, a3, a4, a5, a6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_23BAD18B4()
{
  swift_allocObject();
  swift_weakInit();
  swift_getKeyPath();
  sub_23B97D0C8((unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider);
  swift_retain();
  sub_23BB88A14();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23BAD199C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t (**v8)(uint64_t, uint64_t);

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v6 + 2) = v2;
  *((_QWORD *)v6 + 3) = v3;
  *((_QWORD *)v6 + 4) = v5;
  swift_getKeyPath();
  sub_23B97D0C8((unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23BB88A20();
  swift_release();
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v7 = v4 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  v8 = (uint64_t (**)(uint64_t, uint64_t))(v7
                                                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0)
                                                          + 48));
  *v8 = sub_23BAE6FB8;
  v8[1] = v6;
  swift_release();
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_release();
  return sub_23BB88A08();
}

uint64_t sub_23BAD1B60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (**v9)(uint64_t, uint64_t);

  v1 = v0[9];
  v2 = v0[10];
  v3 = v0[11];
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v7 + 2) = v1;
  *((_QWORD *)v7 + 3) = v2;
  *((_QWORD *)v7 + 4) = v4;
  *((_QWORD *)v7 + 5) = v5;
  *((_QWORD *)v7 + 6) = v6;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23BB88A20();
  swift_release();
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v8 = v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  v9 = (uint64_t (**)(uint64_t, uint64_t))(v8
                                                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59148)
                                                          + 48));
  *v9 = sub_23BAE6DDC;
  v9[1] = v7;
  swift_release();
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BAD1D64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  _QWORD v5[2];
  char v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v2;
    v5[1] = v1;
    v6 = v3;
    swift_bridgeObjectRetain();
    sub_23BAB8980((uint64_t)v5);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BAD1DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;

  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  v5 = a3;
  v6 = a4;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v24 = a3;
    v28 = MEMORY[0x24BEE4AF8];
    sub_23BB006F0(0, v7, 0);
    result = sub_23BAE6498(a1);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(a1 + 36) != v11)
        goto LABEL_18;
      v14 = *(_QWORD *)(a1 + 48) + 24 * v9;
      v15 = *(_QWORD *)v14;
      v16 = *(_QWORD *)(v14 + 8);
      v25 = *(_BYTE *)(v14 + 16);
      v26 = v13;
      v18 = *(_QWORD *)(v28 + 16);
      v17 = *(_QWORD *)(v28 + 24);
      swift_bridgeObjectRetain();
      if (v18 >= v17 >> 1)
        sub_23BB006F0(v17 > 1, v18 + 1, 1);
      *(_QWORD *)(v28 + 16) = v18 + 1;
      v19 = v28 + 24 * v18;
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = v16;
      *(_BYTE *)(v19 + 48) = v25;
      result = sub_23BAE653C(v9, v11, v26 & 1, a1);
      v9 = result;
      v11 = v20;
      v13 = v21 & 1;
      if (!--v7)
      {
        v22 = v28;
        sub_23BAADB78(result, v20, v13);
        v5 = v24;
        v6 = a4;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
    v22 = MEMORY[0x24BEE4AF8];
LABEL_12:
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v23 = sub_23BAE68D4(v22);
      swift_bridgeObjectRelease();
      sub_23BACEA28(v23, v5, v6, (uint64_t)&unk_23BB94610, &OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar, (unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider, &OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage, (void (*)(void))sub_23B99070C, (uint64_t)&type metadata for PeopleRelationshipsProvider.Subscription, &qword_256A595D8, (void (*)(uint64_t, uint64_t))sub_23BA7778C, &qword_256A61288, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BAAF91C, sub_23BA796D4, sub_23BAE68D4, (uint64_t *)sub_23BADF6F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BADC9D8,
        (char *)PeopleRelationshipsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:),
        (uint64_t (*)(uint64_t))PeopleRelationshipsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:));
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BAD20F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26;
  id v27;
  uint64_t v28[3];
  _OWORD v29[8];
  uint64_t v30;
  id v31[16];

  v1 = *(_QWORD *)(a1 + 40);
  swift_getKeyPath();
  *(_QWORD *)&v29[0] = v1;
  sub_23B97D0C8((unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider);
  sub_23BB88A20();
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  v3 = *v2;
  v4 = *v2 + 64;
  v5 = 1 << *(_BYTE *)(*v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*v2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_20:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 24 * v12);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(v3 + 56) + 136 * v12;
    v29[0] = *(_OWORD *)v19;
    v20 = *(_OWORD *)(v19 + 64);
    v22 = *(_OWORD *)(v19 + 16);
    v21 = *(_OWORD *)(v19 + 32);
    v29[3] = *(_OWORD *)(v19 + 48);
    v29[4] = v20;
    v29[1] = v22;
    v29[2] = v21;
    v24 = *(_OWORD *)(v19 + 96);
    v23 = *(_OWORD *)(v19 + 112);
    v25 = *(_OWORD *)(v19 + 80);
    v30 = *(_QWORD *)(v19 + 128);
    v29[6] = v24;
    v29[7] = v23;
    v29[5] = v25;
    sub_23BACABCC((uint64_t)v29 + 8, (uint64_t)v31);
    result = sub_23B9B20A4((uint64_t *)v31);
    if ((_DWORD)result != 1)
    {
      v28[0] = v18;
      v28[1] = v17;
      v28[2] = (uint64_t)v31[0];
      v26 = v31[0];
      swift_bridgeObjectRetain();
      sub_23BAB9998(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
      swift_bridgeObjectRetain();
      v27 = v26;
      sub_23B980490(v28);

      swift_bridgeObjectRelease();
      sub_23BAB9998(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);

      result = swift_bridgeObjectRelease();
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v13 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_19;
  v10 = v13 + 1;
  if (v13 + 1 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_19;
  v10 = v13 + 2;
  if (v13 + 2 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_19:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_20;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23BAD2398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23BAD23B0()
{
  uint64_t v0;

  sub_23BB8A9F4();
  *(_QWORD *)(v0 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAD2418()
{
  uint64_t v0;

  swift_release();
  sub_23BB88A08();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAD2470(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22[3];
  id v23[16];
  _BYTE v24[224];
  _QWORD v25[28];

  v1 = *(_QWORD *)(a1 + 48);
  swift_getKeyPath();
  v25[0] = v1;
  sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
  sub_23BB88A20();
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  v3 = *v2;
  v4 = *v2 + 64;
  v5 = 1 << *(_BYTE *)(*v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*v2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_21:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v12);
    v18 = *v16;
    v17 = v16[1];
    sub_23B989684(*(_QWORD *)(v3 + 56) + 224 * v12, (uint64_t)v24);
    sub_23B989684((uint64_t)v24, (uint64_t)v25);
    if (sub_23B990938((uint64_t)v25) == 1)
    {
      v19 = sub_23B990944((uint64_t)v25);
      sub_23BACABCC(v19 + 32, (uint64_t)v23);
      result = sub_23B9B20A4((uint64_t *)v23);
      if ((_DWORD)result != 1)
      {
        v22[0] = v18;
        v22[1] = v17;
        v22[2] = (uint64_t)v23[0];
        v20 = v23[0];
        swift_bridgeObjectRetain();
        sub_23B990954((uint64_t)v24, sub_23B989738);
        swift_bridgeObjectRetain();
        v21 = v20;
        sub_23B980490(v22);

        swift_bridgeObjectRelease();
        sub_23B990954((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);

        result = swift_bridgeObjectRelease();
      }
    }
    else
    {
      result = sub_23B990944((uint64_t)v25);
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v13 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_20;
  v10 = v13 + 1;
  if (v13 + 1 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_20;
  v10 = v13 + 2;
  if (v13 + 2 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_20:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_21;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23BAD270C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23BAD2724()
{
  uint64_t v0;

  sub_23BB8A9F4();
  *(_QWORD *)(v0 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAD278C()
{
  uint64_t v0;

  swift_release();
  sub_23BB88A08();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BAD27E4(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;

  v1 = *(char **)(a1 + 56);
  swift_getKeyPath();
  v4 = v1;
  sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  sub_23BB88A20();
  swift_release();
  v2 = *(void **)&v1[OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data];
  if (v2)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data];
    v3 = v2;
    sub_23B97FCBC(&v4);

  }
}

uint64_t sub_23BAD2894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8AA18();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  swift_retain();
  if (v13 == 1)
  {
    sub_23B9907F8((uint64_t)v9);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    sub_23BB8AA0C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (v12[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_23BB8A988();
      v15 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = v12;
  if (v15 | v14)
  {
    v19[0] = 0;
    v19[1] = 0;
    v19[2] = v14;
    v19[3] = v15;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23BAD2A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23BAD2A7C()
{
  uint64_t v0;

  sub_23BB8A9F4();
  *(_QWORD *)(v0 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BAD2AE4()
{
  uint64_t v0;

  swift_release();
  sub_23BB88A08();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAD2B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  char v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  int v36;
  int v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;

  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  v6 = a3;
  v5 = a4;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v51 = a3;
    v59 = MEMORY[0x24BEE4AF8];
    sub_23BB005DC(0, v7, 0);
    v9 = v59;
    result = sub_23BAE6498(a1);
    v11 = result;
    v13 = v12;
    v15 = v14 & 1;
    v57 = a1 + 56;
    do
    {
      if (v11 < 0 || v11 >= 1 << *(_BYTE *)(a1 + 32))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      if (((*(_QWORD *)(v57 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_44;
      if (*(_DWORD *)(a1 + 36) != v13)
        goto LABEL_45;
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v17 = *v16;
      v18 = v16[1];
      v19 = sub_23BB8A7E4();
      v21 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v21 = v17 & 0xFFFFFFFFFFFFLL;
      if (v21)
      {
        v52 = v20;
        v53 = v19;
        v55 = v9;
        sub_23BA44A58();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_23BB8C510;
        *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v22 + 64) = sub_23B9A5C8C();
        *(_QWORD *)(v22 + 32) = 0xD000000000000029;
        *(_QWORD *)(v22 + 40) = 0x800000023BB9A7A0;
        swift_bridgeObjectRetain();
        v23 = (void *)sub_23BB8ABB0();
        v24 = (void *)sub_23BB8A784();
        v25 = objc_msgSend(v23, sel_evaluateWithObject_, v24);

        if ((v25 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v26 = 1;
        }
        else
        {
          v27 = sub_23BB4E730(v17, v18);
          swift_bridgeObjectRelease();
          if (v27)
            v26 = 0;
          else
            v26 = 2;
        }
        v9 = v55;
        v20 = v52;
        v19 = v53;
      }
      else
      {
        v26 = 2;
      }
      v29 = *(_QWORD *)(v9 + 16);
      v28 = *(_QWORD *)(v9 + 24);
      if (v29 >= v28 >> 1)
      {
        v54 = v19;
        v33 = v20;
        sub_23BB005DC(v28 > 1, v29 + 1, 1);
        v20 = v33;
        v19 = v54;
      }
      *(_QWORD *)(v9 + 16) = v29 + 1;
      v30 = v9 + 24 * v29;
      *(_QWORD *)(v30 + 32) = v19;
      *(_QWORD *)(v30 + 40) = v20;
      *(_BYTE *)(v30 + 48) = v26;
      *(_BYTE *)(v30 + 49) = 1;
      result = sub_23BAE653C(v11, v13, v15 & 1, a1);
      v11 = result;
      v13 = v31;
      v15 = v32 & 1;
      --v7;
    }
    while (v7);
    v56 = v9;
    sub_23BAADB78(result, v31, v32 & 1);
    v34 = *(_QWORD *)(a1 + 16);
    v8 = MEMORY[0x24BEE4AF8];
    if (!v34)
    {
LABEL_31:
      v6 = v51;
      v5 = a4;
      goto LABEL_32;
    }
    v60 = MEMORY[0x24BEE4AF8];
    sub_23BB0071C(0, v34, 0);
    result = sub_23BAE6498(a1);
    v35 = result;
    v37 = v36;
    v39 = v38 & 1;
    while ((v35 & 0x8000000000000000) == 0 && v35 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v57 + (((unint64_t)v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
        goto LABEL_47;
      if (*(_DWORD *)(a1 + 36) != v37)
        goto LABEL_48;
      v40 = sub_23BB8A7E4();
      v42 = v41;
      v44 = *(_QWORD *)(v60 + 16);
      v43 = *(_QWORD *)(v60 + 24);
      if (v44 >= v43 >> 1)
        sub_23BB0071C(v43 > 1, v44 + 1, 1);
      *(_QWORD *)(v60 + 16) = v44 + 1;
      v45 = v60 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v40;
      *(_QWORD *)(v45 + 40) = v42;
      result = sub_23BAE653C(v35, v37, v39 & 1, a1);
      v35 = result;
      v37 = v46;
      v39 = v47 & 1;
      if (!--v34)
      {
        v8 = v60;
        sub_23BAADB78(result, v46, v47 & 1);
        goto LABEL_31;
      }
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
  else
  {
    v56 = MEMORY[0x24BEE4AF8];
LABEL_32:
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      if (*(_QWORD *)(a1 + 16))
        v48 = sub_23B98F234((uint64_t)&unk_250CA9D30);
      else
        v48 = MEMORY[0x24BEE4B08];
      sub_23BACD5DC(v48, v6, v5);
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v49 = sub_23BAE696C(v56);
      swift_bridgeObjectRelease();
      sub_23BACEA28(v49, v6, v5, (uint64_t)&unk_23BB94548, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar, (unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider, &OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage, (void (*)(void))sub_23B990690, (uint64_t)&type metadata for PeopleLocationsProvider.Subscription, &qword_256A595B0, (void (*)(uint64_t, uint64_t))sub_23BA77778, &qword_256A61238, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BAAF908, sub_23BA7925C, sub_23BAE696C, (uint64_t *)sub_23BADF250, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BADC81C,
        (char *)PeopleLocationsProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:),
        (uint64_t (*)(uint64_t))PeopleLocationsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:));
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v50 = sub_23BAE66D4(v8);
      swift_bridgeObjectRelease();
      sub_23BACEA28(v50, v6, v5, (uint64_t)&unk_23BB94520, &OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar, (unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider, &OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage, (void (*)(void))sub_23B9907B4, (uint64_t)&type metadata for BeaconsInfoProvider.BeaconsSubscription, &qword_256A59628, (void (*)(uint64_t, uint64_t))sub_23BA77678, &qword_256A61230, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BAAF650, sub_23BA78894, sub_23BAE66D4, (uint64_t *)sub_23BADDA3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BADC114,
        (char *)BeaconsInfoProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:),
        (uint64_t (*)(uint64_t))BeaconsInfoProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:));
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ProvidersMediator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ProvidersMediator.__deallocating_deinit()
{
  ProvidersMediator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23BAD32A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  double v18;
  int v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *v2;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  DeviceImageProvider.Subscription.hash(into:)();
  v6 = sub_23BB8B270();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v46 = v5 + 56;
  v38 = a2;
  v39 = a1;
  v37 = v2;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v44 = ~v7;
    v45 = *(_QWORD *)(v5 + 48);
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    v47 = *(_QWORD *)(a2 + 24);
    v48 = *(_QWORD *)(a2 + 16);
    v42 = *(_QWORD *)(a2 + 32);
    v43 = *(_QWORD *)(a2 + 40);
    v11 = *(double *)(a2 + 56);
    v40 = *(unsigned __int8 *)(a2 + 64);
    v41 = *(unsigned __int8 *)(a2 + 48);
    do
    {
      v12 = v45 + 72 * v8;
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      v16 = *(_QWORD *)(v12 + 32);
      v15 = *(_QWORD *)(v12 + 40);
      v17 = *(unsigned __int8 *)(v12 + 48);
      v18 = *(double *)(v12 + 56);
      v19 = *(unsigned __int8 *)(v12 + 64);
      v20 = *(_QWORD *)v12 == v9 && *(_QWORD *)(v12 + 8) == v10;
      if (!v20 && (sub_23BB8B1A4() & 1) == 0)
        goto LABEL_4;
      v21 = v14 == v48 && v13 == v47;
      if (!v21 && (sub_23BB8B1A4() & 1) == 0)
        goto LABEL_4;
      if (v15)
      {
        if (!v43)
          goto LABEL_4;
        v22 = v16 == v42 && v15 == v43;
        if (!v22 && (sub_23BB8B1A4() & 1) == 0)
          goto LABEL_4;
      }
      else if (v43)
      {
        goto LABEL_4;
      }
      v23 = v17 == v41 && v18 == v11;
      if (v23 && ((v40 ^ v19) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23BA9DFB0(v38);
        v24 = *(_QWORD *)(*v37 + 48) + 72 * v8;
        v25 = *(_QWORD *)v24;
        v26 = *(_QWORD *)(v24 + 8);
        v27 = *(_QWORD *)(v24 + 16);
        v28 = *(_QWORD *)(v24 + 24);
        v30 = *(_QWORD *)(v24 + 32);
        v29 = *(_QWORD *)(v24 + 40);
        v31 = *(_BYTE *)(v24 + 48);
        v32 = *(_QWORD *)(v24 + 56);
        LOBYTE(v24) = *(_BYTE *)(v24 + 64);
        *(_QWORD *)v39 = v25;
        *(_QWORD *)(v39 + 8) = v26;
        *(_QWORD *)(v39 + 16) = v27;
        *(_QWORD *)(v39 + 24) = v28;
        *(_QWORD *)(v39 + 32) = v30;
        *(_QWORD *)(v39 + 40) = v29;
        *(_BYTE *)(v39 + 48) = v31;
        *(_QWORD *)(v39 + 56) = v32;
        *(_BYTE *)(v39 + 64) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return 0;
      }
LABEL_4:
      v8 = (v8 + 1) & v44;
    }
    while (((*(_QWORD *)(v46 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49 = *v37;
  *v37 = 0x8000000000000000;
  sub_23BA9DF68(v38);
  sub_23BAD71B0(v38, v8, isUniquelyReferenced_nonNull_native);
  *v37 = v49;
  swift_bridgeObjectRelease();
  v35 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v39 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v39 + 48) = v35;
  *(_BYTE *)(v39 + 64) = *(_BYTE *)(v38 + 64);
  v36 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v38;
  *(_OWORD *)(v39 + 16) = v36;
  return 1;
}

uint64_t sub_23BAD358C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  v8 = sub_23BB8B270();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23BB8B1A4() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23BB8B1A4() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23BAD7444(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23BAD3748(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v7 = *v3;
  sub_23BB8B240();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  v8 = sub_23BB8B270();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_23BAD76E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v10);
    v13 = v12[1];
    if (!v13)
      break;
    if (a3)
    {
      v14 = *v12 == a2 && v13 == a3;
      if (v14 || (sub_23BB8B1A4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_15;
  }
  if (a3)
    goto LABEL_6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_17:
  v17 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v18 = v17[1];
  *a1 = *v17;
  a1[1] = v18;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_23BAD3920(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v5 = v4;
  v29 = a4;
  v30 = a4 & 0x100;
  v10 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  sub_23BB8B258();
  v11 = sub_23BB8B270();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  v27 = v5;
  v28 = a1;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    do
    {
      v17 = v16 + 24 * v13;
      v18 = *(unsigned __int8 *)(v17 + 16);
      v19 = *(unsigned __int8 *)(v17 + 17);
      if (*(_QWORD *)v17 == a2 && *(_QWORD *)(v17 + 8) == a3)
      {
        if (v18 == v29 && (((v30 != 0) ^ v19) & 1) == 0)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v21 = *(_QWORD *)(*v27 + 48) + 24 * v13;
          v23 = *(_QWORD *)v21;
          v22 = *(_QWORD *)(v21 + 8);
          v24 = *(_BYTE *)(v21 + 16);
          LOBYTE(v21) = *(_BYTE *)(v21 + 17);
          *(_QWORD *)v28 = v23;
          *(_QWORD *)(v28 + 8) = v22;
          *(_BYTE *)(v28 + 16) = v24;
          *(_BYTE *)(v28 + 17) = v21;
          swift_bridgeObjectRetain();
          return 0;
        }
      }
      else if ((sub_23BB8B1A4() & 1) != 0 && v18 == v29 && (((v30 != 0) ^ v19) & 1) == 0)
      {
        goto LABEL_14;
      }
      v13 = (v13 + 1) & v15;
    }
    while (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = *v27;
  *v27 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23BAD78A8(a2, a3, a4 & 0x1FF, v13, isUniquelyReferenced_nonNull_native);
  *v27 = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)v28 = a2;
  *(_QWORD *)(v28 + 8) = a3;
  *(_BYTE *)(v28 + 16) = v29;
  result = 1;
  *(_BYTE *)(v28 + 17) = BYTE1(v30);
  return result;
}

uint64_t sub_23BAD3B70(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_23BAD3B98(a1, a2, a3, a4, &qword_256A612B8);
}

uint64_t sub_23BAD3B84(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_23BAD3B98(a1, a2, a3, a4, &qword_256A612B0);
}

uint64_t sub_23BAD3B98(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v11 = *v5;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  v12 = sub_23BB8B270();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  v14 = v12 & ~v13;
  v25 = a5;
  if (((*(_QWORD *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v11 + 48);
    while (1)
    {
      v17 = v16 + 24 * v14;
      v18 = *(unsigned __int8 *)(v17 + 16);
      v19 = *(_QWORD *)v17 == a2 && *(_QWORD *)(v17 + 8) == a3;
      if ((v19 || (sub_23BB8B1A4() & 1) != 0) && v18 == a4)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(*v5 + 48) + 24 * v14;
    v24 = *(_QWORD *)v22;
    v23 = *(_QWORD *)(v22 + 8);
    LOBYTE(v22) = *(_BYTE *)(v22 + 16);
    *(_QWORD *)a1 = v24;
    *(_QWORD *)(a1 + 8) = v23;
    *(_BYTE *)(a1 + 16) = v22;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v5;
    *v5 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_23BAD7AC4(a2, a3, a4, v14, isUniquelyReferenced_nonNull_native, v25);
    *v5 = v26;
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = a3;
    result = 1;
    *(_BYTE *)(a1 + 16) = a4;
  }
  return result;
}

uint64_t sub_23BAD3D84(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = *v4;
  sub_23BB8B240();
  v25 = v4;
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  if ((a4 & 0x80) != 0)
  {
    sub_23BB8A808();
  }
  else
  {
    sub_23B9894D4();
    sub_23BB8A808();
    sub_23B9894DC();
    sub_23BB8B24C();
  }
  v9 = sub_23BB8B270();
  v10 = -1 << *(_BYTE *)(v28 + 32);
  v11 = v9 & ~v10;
  v12 = v28 + 56;
  v26 = a1;
  if (((*(_QWORD *)(v28 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = *v25;
    *v25 = 0x8000000000000000;
    sub_23B9894D4();
    sub_23BAD7C8C(a2, a3, a4, v11, isUniquelyReferenced_nonNull_native);
    *v25 = v29;
    swift_bridgeObjectRelease();
    *(_QWORD *)v26 = a2;
    *(_QWORD *)(v26 + 8) = a3;
    result = 1;
    *(_BYTE *)(v26 + 16) = a4;
    return result;
  }
  v13 = ~v10;
  while (1)
  {
    v14 = *(_QWORD *)(v28 + 48) + 24 * v11;
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v17 = *(char *)(v14 + 16);
    if (v17 < 0)
      break;
    if ((a4 & 0x80) != 0 || (v16 == a2 ? (v18 = v15 == a3) : (v18 = 0), !v18 && (sub_23BB8B1A4() & 1) == 0))
    {
LABEL_7:
      sub_23B9894D4();
      sub_23B9894D4();
      sub_23B9894DC();
      sub_23B9894DC();
      goto LABEL_8;
    }
    v27 = 24 * v11;
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    v12 = v28 + 56;
    if (v17 == a4)
      goto LABEL_26;
LABEL_8:
    v11 = (v11 + 1) & v13;
    if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_24;
  }
  if ((a4 & 0x80) == 0)
    goto LABEL_7;
  v27 = 24 * v11;
  if (v16 != a2 || v15 != a3)
  {
    v20 = sub_23BB8B1A4();
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    if ((v20 & 1) != 0)
      goto LABEL_26;
    goto LABEL_8;
  }
  sub_23B9894D4();
  sub_23B9894D4();
  sub_23B9894DC();
  sub_23B9894DC();
LABEL_26:
  swift_bridgeObjectRelease();
  sub_23B9894DC();
  v23 = *(_QWORD *)(*v25 + 48) + v27;
  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v23;
  *(_QWORD *)(v26 + 8) = v24;
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v23 + 16);
  sub_23B9894D4();
  return 0;
}

uint64_t sub_23BAD4120(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  _QWORD *v4;
  _QWORD *v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  int v20;
  int v21;
  BOOL v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v5 = v4;
  v30 = a4;
  v10 = HIBYTE(a4);
  v11 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  v12 = sub_23BB8B270();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  v14 = v12 & ~v13;
  v15 = v11 + 56;
  v28 = v5;
  v29 = a1;
  if (((*(_QWORD *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v16 = ~v13;
    v17 = *(_QWORD *)(v11 + 48);
    while (1)
    {
      v19 = v17 + 24 * v14;
      v20 = *(unsigned __int8 *)(v19 + 16);
      v21 = *(unsigned __int8 *)(v19 + 17);
      v22 = *(_QWORD *)v19 == a2 && *(_QWORD *)(v19 + 8) == a3;
      if ((v22 || (sub_23BB8B1A4() & 1) != 0) && v20 == v30 && v10 == v21)
        break;
      v14 = (v14 + 1) & v16;
      if (((*(_QWORD *)(v15 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(*v28 + 48) + 24 * v14;
    v27 = *(_QWORD *)v25;
    v26 = *(_QWORD *)(v25 + 8);
    LOWORD(v25) = *(_WORD *)(v25 + 16);
    *(_QWORD *)v29 = v27;
    *(_QWORD *)(v29 + 8) = v26;
    *(_WORD *)(v29 + 16) = v25;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *v28;
    *v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_23BAD7FCC(a2, a3, a4, v14, isUniquelyReferenced_nonNull_native);
    *v28 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)v29 = a2;
    *(_QWORD *)(v29 + 8) = a3;
    *(_BYTE *)(v29 + 16) = v30;
    result = 1;
    *(_BYTE *)(v29 + 17) = HIBYTE(a4);
  }
  return result;
}

uint64_t sub_23BAD4330(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v8 = *v4;
  sub_23BB8B240();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
  }
  v9 = sub_23BB8B270();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v4;
    *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_23BAD81C4(a2, a3, a4, v11, isUniquelyReferenced_nonNull_native);
    *v4 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = a3;
    result = 1;
    *(_BYTE *)(a1 + 16) = a4;
    return result;
  }
  v12 = ~v10;
  while (1)
  {
    v13 = *(_QWORD *)(v8 + 48) + 24 * v11;
    v14 = *(_QWORD *)(v13 + 8);
    if (!v14)
      break;
    if (a3)
    {
      v15 = *(unsigned __int8 *)(v13 + 16);
      v16 = *(_QWORD *)v13 == a2 && v14 == a3;
      if ((v16 || (sub_23BB8B1A4() & 1) != 0) && v15 == a4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
LABEL_6:
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_16;
  }
  if (a3)
    goto LABEL_6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_18:
  v19 = *(_QWORD *)(*v4 + 48) + 24 * v11;
  v21 = *(_QWORD *)v19;
  v20 = *(_QWORD *)(v19 + 8);
  LOBYTE(v19) = *(_BYTE *)(v19 + 16);
  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = v20;
  *(_BYTE *)(a1 + 16) = v19;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_23BAD454C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  v10 = sub_23BB8B270();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v9 + 48);
    while (1)
    {
      v15 = v14 + 24 * v12;
      v16 = *(unsigned __int8 *)(v15 + 16);
      v17 = *(_QWORD *)v15 == a2 && *(_QWORD *)(v15 + 8) == a3;
      if ((v17 || (sub_23BB8B1A4() & 1) != 0) && v16 == a4)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(*v4 + 48) + 24 * v12;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    LOBYTE(v20) = *(_BYTE *)(v20 + 16);
    *(_QWORD *)a1 = v22;
    *(_QWORD *)(a1 + 8) = v21;
    *(_BYTE *)(a1 + 16) = v20;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v4;
    *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_23BAD83B0(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    *v4 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = a3;
    result = 1;
    *(_BYTE *)(a1 + 16) = a4;
  }
  return result;
}

uint64_t sub_23BAD4728(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v12;
  uint64_t v14;

  v8 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BAAB000();
  v9 = sub_23BB8B270() & ~(-1 << *(_BYTE *)(v8 + 32));
  if (((*(_QWORD *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v12;
  *v12 = 0x8000000000000000;
  sub_23B9906EC(a2, a3, a4);
  sub_23BAD8578(a2, a3, a4, v9, isUniquelyReferenced_nonNull_native);
  *v12 = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  result = 1;
  *(_WORD *)(a1 + 16) = a4;
  return result;
}

uint64_t sub_23BAD4B14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  char v43;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59650);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v38 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v36 = v1;
    v37 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    for (i = v2; ; v2 = i)
    {
      if (v7)
      {
        v40 = (v7 - 1) & v7;
        v42 = v10;
        v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v14 >= v37)
          goto LABEL_36;
        v15 = v38[v14];
        v16 = v10 + 1;
        if (!v15)
        {
          v16 = v10 + 2;
          if (v10 + 2 >= v37)
            goto LABEL_36;
          v15 = v38[v16];
          if (!v15)
          {
            v16 = v10 + 3;
            if (v10 + 3 >= v37)
              goto LABEL_36;
            v15 = v38[v16];
            if (!v15)
            {
              v17 = v10 + 4;
              if (v10 + 4 >= v37)
              {
LABEL_36:
                swift_release();
                v1 = v36;
                v35 = 1 << *(_BYTE *)(v2 + 32);
                if (v35 > 63)
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v35;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v38[v17];
              if (!v15)
              {
                while (1)
                {
                  v16 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v16 >= v37)
                    goto LABEL_36;
                  v15 = v38[v16];
                  ++v17;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v16 = v10 + 4;
            }
          }
        }
LABEL_23:
        v40 = (v15 - 1) & v15;
        v42 = v16;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 72 * v13;
      v20 = *(_QWORD *)v18;
      v19 = *(_QWORD *)(v18 + 8);
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      v24 = *(_QWORD *)(v18 + 40);
      v25 = *(_BYTE *)(v18 + 48);
      v26 = *(_QWORD *)(v18 + 56);
      v43 = *(_BYTE *)(v18 + 64);
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v41 = v20;
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      if (v24)
      {
        sub_23BB8B258();
        swift_bridgeObjectRetain();
        v27 = v23;
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      else
      {
        v27 = v23;
        sub_23BB8B258();
      }
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8B264();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v28 = -1 << *(_BYTE *)(v4 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v8 + 8 * v30);
        }
        while (v34 == -1);
        v11 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 72 * v11;
      v10 = v42;
      *(_QWORD *)v12 = v41;
      *(_QWORD *)(v12 + 8) = v19;
      v7 = v40;
      *(_QWORD *)(v12 + 16) = v21;
      *(_QWORD *)(v12 + 24) = v22;
      *(_QWORD *)(v12 + 32) = v27;
      *(_QWORD *)(v12 + 40) = v24;
      *(_BYTE *)(v12 + 48) = v25;
      *(_QWORD *)(v12 + 56) = v26;
      *(_BYTE *)(v12 + 64) = v43;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD4F48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59608);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      result = sub_23BB8B270();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD5234()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59620);
  result = sub_23BB8ADE4();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v23 = v2;
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (!v9)
      {
        v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v13 >= v10)
          goto LABEL_31;
        v9 = v6[v13];
        ++v5;
        if (!v9)
        {
          v5 = v13 + 1;
          if (v13 + 1 >= v10)
            goto LABEL_31;
          v9 = v6[v5];
          if (!v9)
          {
            v5 = v13 + 2;
            if (v13 + 2 >= v10)
              goto LABEL_31;
            v9 = v6[v5];
            if (!v9)
            {
              v14 = v13 + 3;
              if (v14 >= v10)
              {
LABEL_31:
                v22 = 1 << *(_BYTE *)(v23 + 32);
                if (v22 > 63)
                  bzero(v6, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v22;
                v1 = v0;
                *(_QWORD *)(v23 + 16) = 0;
                break;
              }
              v9 = v6[v14];
              if (!v9)
              {
                while (1)
                {
                  v5 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_37;
                  if (v5 >= v10)
                    goto LABEL_31;
                  v9 = v6[v5];
                  ++v14;
                  if (v9)
                    goto LABEL_22;
                }
              }
              v5 = v14;
            }
          }
        }
      }
LABEL_22:
      sub_23BB8B240();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v15 = -1 << *(_BYTE *)(v4 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v18 = 0;
        v19 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v19 && (v18 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v20 = v17 == v19;
          if (v17 == v19)
            v17 = 0;
          v18 |= v20;
          v21 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v21 == -1);
        v12 = __clz(__rbit64(~v21)) + (v17 << 6);
      }
      v9 &= v9 - 1;
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD54A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59638);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_35;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_35;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_35;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v11 >= v8)
                    goto LABEL_35;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v21 = *v19;
      v20 = v19[1];
      sub_23BB8B240();
      sub_23BB8B24C();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      result = sub_23BB8B270();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v21;
      v13[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD57B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A612A0);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_33;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_33;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_33;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v31)
                    goto LABEL_33;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_BYTE *)(v19 + 16);
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD5AD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A612A8);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_BYTE *)(v19 + 16);
      v23 = *(_BYTE *)(v19 + 17);
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      sub_23BB8B24C();
      sub_23BB8B258();
      result = sub_23BB8B270();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + 17) = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD5E1C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23BB8ADE4();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v34 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 56);
    v33 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v33)
          goto LABEL_33;
        v18 = v34[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v33)
            goto LABEL_33;
          v18 = v34[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v33)
              goto LABEL_33;
            v18 = v34[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v33)
              {
LABEL_33:
                swift_release();
                v3 = v2;
                v32 = 1 << *(_BYTE *)(v4 + 32);
                if (v32 > 63)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v34[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v12 >= v33)
                    goto LABEL_33;
                  v18 = v34[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_23:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = v4;
      v21 = *(_QWORD *)(v4 + 48) + 24 * v16;
      v22 = *(_QWORD *)v21;
      v23 = *(_QWORD *)(v21 + 8);
      v24 = *(_BYTE *)(v21 + 16);
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v25 = -1 << *(_BYTE *)(v6 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v10 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v6 + 48) + 24 * v13;
      *(_QWORD *)v14 = v22;
      *(_QWORD *)(v14 + 8) = v23;
      *(_BYTE *)(v14 + 16) = v24;
      ++*(_QWORD *)(v6 + 16);
      v4 = v20;
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23BAD6140()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  _QWORD *v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C8);
  v3 = sub_23BB8ADE4();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v15 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v14 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v14 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v14 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v14 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v14 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x23BAD6518);
              }
              if (v9 >= v14)
                break;
              v8 = v15[v9];
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int16 *)(*(_QWORD *)(v2 + 48) + 24 * v7 + 16);
        sub_23BB8B240();
        __asm { BR              X9 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v12 = 1 << *(_BYTE *)(v2 + 32);
  if (v12 > 63)
    bzero(v15, ((unint64_t)(v12 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v15 = -1 << v12;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_23BAD6528()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595A0);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v31 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v30 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v30)
          goto LABEL_36;
        v16 = v31[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v30)
            goto LABEL_36;
          v16 = v31[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v30)
              goto LABEL_36;
            v16 = v31[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v30)
              {
LABEL_36:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v31 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v31[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v10 >= v30)
                    goto LABEL_36;
                  v16 = v31[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v21 = *(char *)(v18 + 16);
      sub_23BB8B240();
      sub_23BB8B24C();
      if (v21 < 0)
      {
        sub_23BB8A808();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23B9894DC();
        sub_23BB8B24C();
      }
      result = sub_23BB8B270();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v24);
        }
        while (v28 == -1);
        v11 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v19;
      *(_QWORD *)(v12 + 8) = v20;
      *(_BYTE *)(v12 + 16) = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD6890()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C0);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_BYTE *)(v19 + 16);
      v23 = *(_BYTE *)(v19 + 17);
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + 17) = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD6BD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595E8);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_35;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_35;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_35;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v10 >= v31)
                    goto LABEL_35;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v21 = *(_QWORD *)v19;
      v20 = *(_QWORD *)(v19 + 8);
      v22 = *(_BYTE *)(v19 + 16);
      sub_23BB8B240();
      if (v20)
      {
        sub_23BB8B24C();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v21;
      *(_QWORD *)(v12 + 8) = v20;
      *(_BYTE *)(v12 + 16) = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD6F14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61298);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_23BB8AC64();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23BAD71B0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  double v20;
  int v21;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v35 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_36;
  if ((a3 & 1) != 0)
  {
    sub_23BAD4B14();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23BAD892C();
      goto LABEL_36;
    }
    sub_23BAD9A40();
  }
  v8 = *v3;
  sub_23BB8B240();
  DeviceImageProvider.Subscription.hash(into:)();
  result = sub_23BB8B270();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  v41 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v40 = ~v9;
    v10 = *(_QWORD *)v5;
    v11 = *(_QWORD *)(v5 + 8);
    v12 = *(_QWORD *)(v5 + 24);
    v42 = *(_QWORD *)(v5 + 16);
    v37 = *(_QWORD *)(v5 + 32);
    v38 = *(_QWORD *)(v5 + 40);
    v39 = *(_QWORD *)(v8 + 48);
    v36 = *(unsigned __int8 *)(v5 + 48);
    v13 = *(double *)(v5 + 56);
    v33 = *(unsigned __int8 *)(v5 + 64);
    do
    {
      v14 = v39 + 72 * a2;
      result = *(_QWORD *)v14;
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      v17 = *(_QWORD *)(v14 + 32);
      v18 = *(_QWORD *)(v14 + 40);
      v19 = *(unsigned __int8 *)(v14 + 48);
      v20 = *(double *)(v14 + 56);
      v21 = *(unsigned __int8 *)(v14 + 64);
      if (*(_QWORD *)v14 != v10 || *(_QWORD *)(v14 + 8) != v11)
      {
        result = sub_23BB8B1A4();
        if ((result & 1) == 0)
          goto LABEL_11;
      }
      if (v16 != v42 || v15 != v12)
      {
        result = sub_23BB8B1A4();
        if ((result & 1) == 0)
          goto LABEL_11;
      }
      if (v18)
      {
        if (!v38)
          goto LABEL_11;
        if (v17 != v37 || v18 != v38)
        {
          result = sub_23BB8B1A4();
          if ((result & 1) == 0)
            goto LABEL_11;
        }
      }
      else if (v38)
      {
        goto LABEL_11;
      }
      v25 = v19 == v36 && v20 == v13;
      if (v25 && ((v33 ^ v21) & 1) == 0)
      {
        result = sub_23BB8B1D4();
        __break(1u);
        break;
      }
LABEL_11:
      a2 = (a2 + 1) & v40;
    }
    while (((*(_QWORD *)(v41 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_36:
  v26 = *v34;
  *(_QWORD *)(*v34 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v27 = *(_QWORD *)(v26 + 48) + 72 * a2;
  *(_BYTE *)(v27 + 64) = *(_BYTE *)(v35 + 64);
  v28 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v27 + 48) = v28;
  v29 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v35;
  *(_OWORD *)(v27 + 16) = v29;
  v30 = *(_QWORD *)(v26 + 16);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (v31)
    __break(1u);
  else
    *(_QWORD *)(v26 + 16) = v32;
  return result;
}

uint64_t sub_23BAD7444(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23BAD4F48();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23BAD8B20();
      goto LABEL_22;
    }
    sub_23BAD9E3C();
  }
  v11 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  result = sub_23BB8B270();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23BB8B1A4(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23BB8B1D4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23BB8B1A4();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_23BAD75EC(uint64_t result, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v3 = result;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *(_QWORD *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      sub_23BAD5234();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_23BADA0F4();
LABEL_8:
      v6 = *v2;
      sub_23BB8B240();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v3 = result & ~(-1 << *(_BYTE *)(v6 + 32));
      if (((*(_QWORD *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v3) & 1) != 0)
        goto LABEL_12;
      goto LABEL_9;
    }
    result = (uint64_t)sub_23BAD8CD0();
  }
LABEL_9:
  v7 = *v2;
  *(_QWORD *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    *(_QWORD *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  result = sub_23BB8B1D4();
  __break(1u);
  return result;
}

uint64_t sub_23BAD76E8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_23BAD54A8();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_23BAD8E2C();
        goto LABEL_22;
      }
      sub_23BADA334();
    }
    v10 = *v4;
    sub_23BB8B240();
    sub_23BB8B24C();
    if (a2)
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    result = sub_23BB8B270();
    v11 = -1 << *(_BYTE *)(v10 + 32);
    a3 = result & ~v11;
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v12 = ~v11;
      do
      {
        v13 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * a3);
        v14 = v13[1];
        if (v14)
        {
          if (a2)
          {
            if (*v13 == v7 && v14 == a2)
              goto LABEL_26;
            result = sub_23BB8B1A4();
            if ((result & 1) != 0)
              goto LABEL_26;
          }
        }
        else if (!a2)
        {
          goto LABEL_25;
        }
        a3 = (a3 + 1) & v12;
      }
      while (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_22:
  v16 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v17 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * a3);
  *v17 = v7;
  v17[1] = a2;
  v18 = *(_QWORD *)(v16 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease_n();
LABEL_26:
    result = sub_23BB8B1D4();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v16 + 16) = v20;
  }
  return result;
}

uint64_t sub_23BAD78A8(uint64_t result, uint64_t a2, __int16 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;

  v8 = result;
  LOBYTE(v9) = a3;
  v10 = a3 & 0x100;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    v27 = a3;
    if ((a5 & 1) != 0)
    {
      sub_23BAD5AD8();
    }
    else
    {
      if (v12 > v11)
      {
        result = (uint64_t)sub_23BAD8FD8();
        goto LABEL_22;
      }
      sub_23BADA8F4();
    }
    v13 = *v5;
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    sub_23BB8B258();
    result = sub_23BB8B270();
    v14 = -1 << *(_BYTE *)(v13 + 32);
    a4 = result & ~v14;
    if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v15 = ~v14;
      v16 = *(_QWORD *)(v13 + 48);
      v9 = v27;
      while (1)
      {
        v17 = v16 + 24 * a4;
        result = *(_QWORD *)v17;
        v18 = *(unsigned __int8 *)(v17 + 16);
        v19 = *(unsigned __int8 *)(v17 + 17);
        if (*(_QWORD *)v17 == v8 && *(_QWORD *)(v17 + 8) == a2)
        {
          if (v18 == v9 && (((v10 != 0) ^ v19) & 1) == 0)
          {
LABEL_21:
            result = sub_23BB8B1D4();
            __break(1u);
            break;
          }
        }
        else
        {
          result = sub_23BB8B1A4();
          v9 = v27;
          if ((result & 1) != 0 && v18 == v27 && (((v10 != 0) ^ v19) & 1) == 0)
            goto LABEL_21;
        }
        a4 = (a4 + 1) & v15;
        if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
          goto LABEL_23;
      }
    }
LABEL_22:
    LOBYTE(v9) = v27;
  }
LABEL_23:
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_QWORD *)v22 = v8;
  *(_QWORD *)(v22 + 8) = a2;
  *(_BYTE *)(v22 + 16) = v9;
  *(_BYTE *)(v22 + 17) = BYTE1(v10);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
  return result;
}

uint64_t sub_23BAD7AC4(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4, char a5, uint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = v6;
  v10 = result;
  v11 = a3;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a5 & 1) != 0)
    goto LABEL_18;
  v14 = v12 + 1;
  if ((a5 & 1) != 0)
  {
    sub_23BAD5E1C(v14, a6);
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_23BAD919C(a6);
      goto LABEL_18;
    }
    sub_23BADABF8(v14, a6);
  }
  v15 = *v6;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  result = sub_23BB8B270();
  v16 = -1 << *(_BYTE *)(v15 + 32);
  a4 = result & ~v16;
  v17 = v15 + 56;
  if (((*(_QWORD *)(v15 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v18 = ~v16;
    v19 = *(_QWORD *)(v15 + 48);
    do
    {
      v20 = v19 + 24 * a4;
      result = *(_QWORD *)v20;
      v21 = *(unsigned __int8 *)(v20 + 16);
      v22 = *(_QWORD *)v20 == v10 && *(_QWORD *)(v20 + 8) == a2;
      if (v22 || (result = sub_23BB8B1A4(), (result & 1) != 0))
      {
        if (v21 == v11)
          goto LABEL_21;
      }
      a4 = (a4 + 1) & v18;
    }
    while (((*(_QWORD *)(v17 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  v23 = *v7;
  *(_QWORD *)(*v7 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v24 = *(_QWORD *)(v23 + 48) + 24 * a4;
  *(_QWORD *)v24 = v10;
  *(_QWORD *)(v24 + 8) = a2;
  *(_BYTE *)(v24 + 16) = v11;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_21:
  result = sub_23BB8B1D4();
  __break(1u);
  return result;
}

uint64_t sub_23BAD7C8C(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 <= v10 || (a5 & 1) == 0)
  {
    if ((a5 & 1) != 0)
    {
      sub_23BAD6528();
    }
    else
    {
      if (v11 > v10)
      {
        result = (uint64_t)sub_23BAD950C();
        goto LABEL_31;
      }
      sub_23BADB298();
    }
    v27 = *v5;
    sub_23BB8B240();
    sub_23BB8B24C();
    if ((a3 & 0x80) != 0)
    {
      sub_23BB8A808();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      sub_23B9894DC();
      sub_23BB8B24C();
    }
    result = sub_23BB8B270();
    v12 = -1 << *(_BYTE *)(v27 + 32);
    a4 = result & ~v12;
    if (((*(_QWORD *)(v27 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v13 = ~v12;
      do
      {
        v14 = *(_QWORD *)(v27 + 48) + 24 * a4;
        v16 = *(_QWORD *)v14;
        v15 = *(_QWORD *)(v14 + 8);
        v17 = *(char *)(v14 + 16);
        if (v17 < 0)
        {
          if ((a3 & 0x80) == 0)
            goto LABEL_14;
          if (v16 == v9 && v15 == a2)
            goto LABEL_34;
          v20 = sub_23BB8B1A4();
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          result = sub_23B9894DC();
          if ((v20 & 1) != 0)
            goto LABEL_35;
        }
        else
        {
          if ((a3 & 0x80) != 0 || (v16 == v9 ? (v18 = v15 == a2) : (v18 = 0), !v18 && (sub_23BB8B1A4() & 1) == 0))
          {
LABEL_14:
            sub_23B9894D4();
            sub_23B9894D4();
            sub_23B9894DC();
            result = sub_23B9894DC();
            goto LABEL_15;
          }
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          result = sub_23B9894DC();
          if (v17 == a3)
            goto LABEL_35;
        }
LABEL_15:
        a4 = (a4 + 1) & v13;
      }
      while (((*(_QWORD *)(v27 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_31:
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_QWORD *)v22 = v9;
  *(_QWORD *)(v22 + 8) = a2;
  *(_BYTE *)(v22 + 16) = a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
LABEL_34:
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
LABEL_35:
    result = sub_23BB8B1D4();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v25;
  }
  return result;
}

uint64_t sub_23BAD7FCC(uint64_t result, uint64_t a2, __int16 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  unsigned __int8 v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;

  v7 = HIBYTE(a3);
  v9 = result;
  LOBYTE(v10) = a3;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0)
    goto LABEL_22;
  v13 = a3;
  if ((a5 & 1) != 0)
  {
    sub_23BAD6890();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_23BADB5CC();
LABEL_8:
    v14 = v7;
    v15 = *v5;
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23BB8B24C();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v16 = -1 << *(_BYTE *)(v15 + 32);
    a4 = result & ~v16;
    v17 = v15 + 56;
    if (((*(_QWORD *)(v15 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v18 = ~v16;
      v19 = *(_QWORD *)(v15 + 48);
      v10 = v13;
      while (1)
      {
        v21 = v19 + 24 * a4;
        result = *(_QWORD *)v21;
        v22 = *(unsigned __int8 *)(v21 + 16);
        v23 = *(unsigned __int8 *)(v21 + 17);
        v24 = *(_QWORD *)v21 == v9 && *(_QWORD *)(v21 + 8) == a2;
        if (v24 || (v25 = v10, result = sub_23BB8B1A4(), v10 = v25, (result & 1) != 0))
        {
          if (v22 == (_DWORD)v10 && v14 == v23)
            goto LABEL_25;
        }
        a4 = (a4 + 1) & v18;
        if (((*(_QWORD *)(v17 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
          goto LABEL_22;
      }
    }
    goto LABEL_21;
  }
  result = (uint64_t)sub_23BAD96C8();
LABEL_21:
  LOBYTE(v10) = v13;
LABEL_22:
  v26 = *v32;
  *(_QWORD *)(*v32 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v27 = *(_QWORD *)(v26 + 48) + 24 * a4;
  *(_QWORD *)v27 = v9;
  *(_QWORD *)(v27 + 8) = a2;
  *(_BYTE *)(v27 + 16) = v10;
  *(_BYTE *)(v27 + 17) = v31;
  v28 = *(_QWORD *)(v26 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (!v29)
  {
    *(_QWORD *)(v26 + 16) = v30;
    return result;
  }
  __break(1u);
LABEL_25:
  result = sub_23BB8B1D4();
  __break(1u);
  return result;
}

uint64_t sub_23BAD81C4(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v8 = result;
  v9 = a3;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 <= v10 || (a5 & 1) == 0)
  {
    if ((a5 & 1) != 0)
    {
      sub_23BAD6BD4();
    }
    else
    {
      if (v11 > v10)
      {
        result = (uint64_t)sub_23BAD9884();
        goto LABEL_23;
      }
      sub_23BADB8D0();
    }
    v12 = *v5;
    sub_23BB8B240();
    if (a2)
    {
      sub_23BB8B24C();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v13 = -1 << *(_BYTE *)(v12 + 32);
    a4 = result & ~v13;
    if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v14 = ~v13;
      do
      {
        v15 = *(_QWORD *)(v12 + 48) + 24 * a4;
        v16 = *(_QWORD *)(v15 + 8);
        if (v16)
        {
          if (a2)
          {
            result = *(_QWORD *)v15;
            v17 = *(unsigned __int8 *)(v15 + 16);
            v18 = *(_QWORD *)v15 == v8 && v16 == a2;
            if (v18 || (result = sub_23BB8B1A4(), (result & 1) != 0))
            {
              if (v17 == v9)
                goto LABEL_27;
            }
          }
        }
        else if (!a2)
        {
          goto LABEL_26;
        }
        a4 = (a4 + 1) & v14;
      }
      while (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_23:
  v19 = *v5;
  *(_QWORD *)(*v5 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v20 = *(_QWORD *)(v19 + 48) + 24 * a4;
  *(_QWORD *)v20 = v8;
  *(_QWORD *)(v20 + 8) = a2;
  *(_BYTE *)(v20 + 16) = v9;
  v21 = *(_QWORD *)(v19 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRelease_n();
LABEL_27:
    result = sub_23BB8B1D4();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_23BAD83B0(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v5;
  v9 = result;
  v10 = a3;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0)
    goto LABEL_18;
  if ((a5 & 1) != 0)
  {
    sub_23BAD57B0();
  }
  else
  {
    if (v12 > v11)
    {
      result = (uint64_t)sub_23BAD919C(&qword_256A612A0);
      goto LABEL_18;
    }
    sub_23BADA608();
  }
  v13 = *v5;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  result = sub_23BB8B270();
  v14 = -1 << *(_BYTE *)(v13 + 32);
  a4 = result & ~v14;
  v15 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v13 + 48);
    do
    {
      v18 = v17 + 24 * a4;
      result = *(_QWORD *)v18;
      v19 = *(unsigned __int8 *)(v18 + 16);
      v20 = *(_QWORD *)v18 == v9 && *(_QWORD *)(v18 + 8) == a2;
      if (v20 || (result = sub_23BB8B1A4(), (result & 1) != 0))
      {
        if (v19 == v10)
          goto LABEL_21;
      }
      a4 = (a4 + 1) & v16;
    }
    while (((*(_QWORD *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  v21 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_QWORD *)v22 = v9;
  *(_QWORD *)(v22 + 8) = a2;
  *(_BYTE *)(v22 + 16) = v10;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_21:
  result = sub_23BB8B1D4();
  __break(1u);
  return result;
}

uint64_t sub_23BAD8578(uint64_t result, uint64_t a2, __int16 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t *v18;

  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 <= v10 || (a5 & 1) == 0)
  {
    if ((a5 & 1) != 0)
    {
      sub_23BAD6140();
    }
    else
    {
      if (v11 > v10)
      {
        result = (uint64_t)sub_23BAD9350();
        goto LABEL_10;
      }
      sub_23BADAEE0();
    }
    v12 = *v5;
    sub_23BB8B240();
    sub_23BAAB000();
    result = sub_23BB8B270();
    a4 = result & ~(-1 << *(_BYTE *)(v12 + 32));
    if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v18;
  *(_QWORD *)(*v18 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v14 = *(_QWORD *)(v13 + 48) + 24 * a4;
  *(_QWORD *)v14 = v9;
  *(_QWORD *)(v14 + 8) = a2;
  *(_WORD *)(v14 + 16) = a3;
  v15 = *(_QWORD *)(v13 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    JUMPOUT(0x23BAD88E4);
  }
  *(_QWORD *)(v13 + 16) = v17;
  return result;
}

void *sub_23BAD892C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59650);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v13)
      goto LABEL_28;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_28;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
      {
        v9 = v27 + 2;
        if (v27 + 2 >= v13)
          goto LABEL_28;
        v28 = *(_QWORD *)(v6 + 8 * v9);
        if (!v28)
          break;
      }
    }
LABEL_27:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 72 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v23 = *(_QWORD *)(v17 + 32);
    v22 = *(_QWORD *)(v17 + 40);
    v24 = *(_BYTE *)(v17 + 48);
    v25 = *(_QWORD *)(v17 + 56);
    LOBYTE(v17) = *(_BYTE *)(v17 + 64);
    v26 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v26 = v18;
    *(_QWORD *)(v26 + 8) = v19;
    *(_QWORD *)(v26 + 16) = v20;
    *(_QWORD *)(v26 + 24) = v21;
    *(_QWORD *)(v26 + 32) = v23;
    *(_QWORD *)(v26 + 40) = v22;
    *(_BYTE *)(v26 + 48) = v24;
    *(_QWORD *)(v26 + 56) = v25;
    *(_BYTE *)(v26 + 64) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 3;
  if (v29 >= v13)
    goto LABEL_28;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD8B20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59608);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD8CD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59620);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_27:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13)
        goto LABEL_27;
      v12 = *(_QWORD *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        v9 = v14 + 1;
        if (v14 + 1 >= v13)
          goto LABEL_27;
        v12 = *(_QWORD *)(v6 + 8 * v9);
        if (!v12)
        {
          v9 = v14 + 2;
          if (v14 + 2 >= v13)
            goto LABEL_27;
          v12 = *(_QWORD *)(v6 + 8 * v9);
          if (!v12)
            break;
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  v15 = v14 + 3;
  if (v15 >= v13)
    goto LABEL_27;
  v12 = *(_QWORD *)(v6 + 8 * v15);
  if (v12)
  {
    v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v12 = *(_QWORD *)(v6 + 8 * v9);
    ++v15;
    if (v12)
      goto LABEL_12;
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_23BAD8E2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59638);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD8FD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A612A8);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    LOBYTE(v17) = *(_BYTE *)(v17 + 17);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v19;
    *(_QWORD *)(v21 + 8) = v18;
    *(_BYTE *)(v21 + 16) = v20;
    *(_BYTE *)(v21 + 17) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD919C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23BB8ADD8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v14)
      goto LABEL_28;
    v23 = *(_QWORD *)(v7 + 8 * v22);
    ++v10;
    if (!v23)
    {
      v10 = v22 + 1;
      if (v22 + 1 >= v14)
        goto LABEL_28;
      v23 = *(_QWORD *)(v7 + 8 * v10);
      if (!v23)
      {
        v10 = v22 + 2;
        if (v22 + 2 >= v14)
          goto LABEL_28;
        v23 = *(_QWORD *)(v7 + 8 * v10);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v13 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_12:
    v17 = 24 * v16;
    v18 = *(_QWORD *)(v3 + 48) + v17;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    LOBYTE(v18) = *(_BYTE *)(v18 + 16);
    v21 = *(_QWORD *)(v5 + 48) + v17;
    *(_QWORD *)v21 = v20;
    *(_QWORD *)(v21 + 8) = v19;
    *(_BYTE *)(v21 + 16) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v14)
    goto LABEL_28;
  v23 = *(_QWORD *)(v7 + 8 * v24);
  if (v23)
  {
    v10 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v23 = *(_QWORD *)(v7 + 8 * v10);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD9350()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C8);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_WORD *)(v17 + 16);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_QWORD *)(v20 + 8) = v19;
    *(_WORD *)(v20 + 16) = v21;
    result = (void *)sub_23B9906EC(v18, v19, v21);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD950C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595A0);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    v20 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v19 = *(_QWORD *)v17;
    *(_QWORD *)(v19 + 8) = v18;
    *(_BYTE *)(v19 + 16) = v20;
    result = (void *)sub_23B9894D4();
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD96C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C0);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    LOWORD(v17) = *(_WORD *)(v17 + 16);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v20 = v19;
    *(_QWORD *)(v20 + 8) = v18;
    *(_WORD *)(v20 + 16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23BAD9884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595E8);
  v2 = *v0;
  v3 = sub_23BB8ADD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 16);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v20 = v19;
    *(_QWORD *)(v20 + 8) = v18;
    *(_BYTE *)(v20 + 16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23BAD9A40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  char v44;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59650);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v37 = v1;
  v38 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v39 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v40 = v2;
  v41 = v4;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v14 = (v7 - 1) & v7;
      v43 = v10;
      v15 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v39)
      goto LABEL_36;
    v17 = *(_QWORD *)(v38 + 8 * v16);
    v18 = v10 + 1;
    if (!v17)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v39)
        goto LABEL_36;
      v17 = *(_QWORD *)(v38 + 8 * v18);
      if (!v17)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v39)
          goto LABEL_36;
        v17 = *(_QWORD *)(v38 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v14 = (v17 - 1) & v17;
    v43 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_24:
    v42 = v14;
    v20 = *(_QWORD *)(v2 + 48) + 72 * v15;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v24 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    v26 = *(_QWORD *)(v20 + 40);
    v27 = *(_BYTE *)(v20 + 48);
    v28 = *(_QWORD *)(v20 + 56);
    v44 = *(_BYTE *)(v20 + 64);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    if (v26)
    {
      sub_23BB8B258();
      swift_bridgeObjectRetain();
      v29 = v25;
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = v25;
      sub_23BB8B258();
    }
    sub_23BB8B24C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BB8B264();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v4 = v41;
    v30 = -1 << *(_BYTE *)(v41 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v8 + 8 * (v31 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v8 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v8 + 8 * v32);
      }
      while (v36 == -1);
      v11 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v41 + 48) + 72 * v11;
    v10 = v43;
    *(_QWORD *)v12 = v22;
    *(_QWORD *)(v12 + 8) = v21;
    *(_QWORD *)(v12 + 16) = v24;
    *(_QWORD *)(v12 + 24) = v23;
    *(_QWORD *)(v12 + 32) = v29;
    *(_QWORD *)(v12 + 40) = v26;
    *(_BYTE *)(v12 + 48) = v27;
    *(_QWORD *)(v12 + 56) = v28;
    *(_BYTE *)(v12 + 64) = v44;
    ++*(_QWORD *)(v41 + 16);
    v2 = v40;
    v7 = v42;
  }
  v19 = v10 + 4;
  if (v10 + 4 >= v39)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v37;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v38 + 8 * v19);
  if (v17)
  {
    v18 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v39)
      goto LABEL_36;
    v17 = *(_QWORD *)(v38 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23BAD9E3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59608);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BADA0F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59620);
  result = sub_23BB8ADE4();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (!v9)
    {
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v13 >= v10)
        goto LABEL_31;
      v9 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v9)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v10)
          goto LABEL_31;
        v9 = *(_QWORD *)(v6 + 8 * v5);
        if (!v9)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v10)
            goto LABEL_31;
          v9 = *(_QWORD *)(v6 + 8 * v5);
          if (!v9)
            break;
        }
      }
    }
LABEL_22:
    sub_23BB8B240();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v15 = -1 << *(_BYTE *)(v4 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = 0;
      v19 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v19 && (v18 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v20 = v17 == v19;
        if (v17 == v19)
          v17 = 0;
        v18 |= v20;
        v21 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v21 == -1);
      v12 = __clz(__rbit64(~v21)) + (v17 << 6);
    }
    v9 &= v9 - 1;
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    ++*(_QWORD *)(v4 + 16);
  }
  v14 = v13 + 3;
  if (v14 >= v10)
  {
LABEL_31:
    result = swift_release();
    v1 = v0;
    goto LABEL_33;
  }
  v9 = *(_QWORD *)(v6 + 8 * v14);
  if (v9)
  {
    v5 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v10)
      goto LABEL_31;
    v9 = *(_QWORD *)(v6 + 8 * v5);
    ++v14;
    if (v9)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23BADA334()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59638);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_35;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_35;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v19;
    v20 = v19[1];
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v20)
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23BADA608()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A612A0);
  v2 = sub_23BB8ADE4();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v9);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v1 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = *(_QWORD *)(v3 + 48) + 24 * v10;
    *(_QWORD *)v11 = v18;
    *(_QWORD *)(v11 + 8) = v19;
    *(_BYTE *)(v11 + 16) = v20;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BADA8F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A612A8);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    v22 = *(_BYTE *)(v18 + 17);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    sub_23BB8B258();
    result = sub_23BB8B270();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_BYTE *)(v12 + 16) = v21;
    *(_BYTE *)(v12 + 17) = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BADABF8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v3 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = sub_23BB8ADE4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release();
LABEL_35:
    *v2 = v5;
    return result;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v30 = v3 + 56;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v31 = (unint64_t)(v6 + 63) >> 6;
  v9 = v4 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v31)
      goto LABEL_33;
    v17 = *(_QWORD *)(v30 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v31)
        goto LABEL_33;
      v17 = *(_QWORD *)(v30 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v31)
          goto LABEL_33;
        v17 = *(_QWORD *)(v30 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = *(_QWORD *)(v3 + 48) + 24 * v15;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v23 = -1 << *(_BYTE *)(v5 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = *(_QWORD *)(v5 + 48) + 24 * v12;
    *(_QWORD *)v13 = v20;
    *(_QWORD *)(v13 + 8) = v21;
    *(_BYTE *)(v13 + 16) = v22;
    ++*(_QWORD *)(v5 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v30 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v31)
      goto LABEL_33;
    v17 = *(_QWORD *)(v30 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BADAEE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t result;
  int64_t v12;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C8);
  v2 = sub_23BB8ADE4();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v12 > 1)
  {
    v7 = *(_QWORD *)(v1 + 64);
    v8 = 1;
    if (v7)
      goto LABEL_19;
    v8 = 2;
    if (v12 > 2)
    {
      v7 = *(_QWORD *)(v1 + 72);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if (v12 > 3)
      {
        v7 = *(_QWORD *)(v1 + 80);
        if (!v7)
        {
          v9 = 4;
          if (v12 > 4)
          {
            v7 = *(_QWORD *)(v1 + 88);
            if (v7)
            {
              v8 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v8 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                JUMPOUT(0x23BADB288);
              }
              if (v8 >= v12)
                break;
              v7 = *(_QWORD *)(v1 + 56 + 8 * v8);
              ++v9;
              if (v7)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_20:
        v10 = *(unsigned __int16 *)(*(_QWORD *)(v1 + 48) + 24 * v6 + 16);
        sub_23BB8B240();
        __asm { BR              X9 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
LABEL_23:
  *v0 = v2;
  return result;
}

uint64_t sub_23BADB298()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595A0);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v29 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v30 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v30)
      goto LABEL_36;
    v16 = *(_QWORD *)(v29 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v30)
        goto LABEL_36;
      v16 = *(_QWORD *)(v29 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v30)
          goto LABEL_36;
        v16 = *(_QWORD *)(v29 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(char *)(v18 + 16);
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v21 < 0)
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23B9894DC();
      sub_23BB8B24C();
    }
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_BYTE *)(v12 + 16) = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v29 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v16 = *(_QWORD *)(v29 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23BADB5CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C0);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    v22 = *(_BYTE *)(v18 + 17);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    sub_23BB8B24C();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_BYTE *)(v12 + 16) = v21;
    *(_BYTE *)(v12 + 17) = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23BADB8D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595E8);
  v3 = sub_23BB8ADE4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v29 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v30 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v30)
      goto LABEL_35;
    v16 = *(_QWORD *)(v29 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v30)
        goto LABEL_35;
      v16 = *(_QWORD *)(v29 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v30)
          goto LABEL_35;
        v16 = *(_QWORD *)(v29 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    sub_23BB8B240();
    if (v19)
    {
      sub_23BB8B24C();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v8 + 8 * v24);
      }
      while (v28 == -1);
      v11 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v20;
    *(_QWORD *)(v12 + 8) = v19;
    *(_BYTE *)(v12 + 16) = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v30)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v29 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v30)
      goto LABEL_35;
    v16 = *(_QWORD *)(v29 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23BADBBD4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[2];
  _OWORD v19[4];
  char v20;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 72 * v10;
    v19[0] = *(_OWORD *)v11;
    v13 = *(_OWORD *)(v11 + 32);
    v12 = *(_OWORD *)(v11 + 48);
    v14 = *(_OWORD *)(v11 + 16);
    v20 = *(_BYTE *)(v11 + 64);
    v19[2] = v13;
    v19[3] = v12;
    v19[1] = v14;
    sub_23BA9DF68((uint64_t)v19);
    sub_23BADFB88((double *)v19, (uint64_t)v18);
    sub_23BAE710C(v18[0], v18[1]);
    result = sub_23BA9DFB0((uint64_t)v19);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADBD8C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23BADFE50(v12, v13, &v17);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADBF30(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  if (!*(_QWORD *)(*v1 + 16))
    return result;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (!v5)
    {
      v8 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v8 >= v6)
        return swift_release();
      v5 = *(_QWORD *)(v2 + 8 * v8);
      ++v7;
      if (!v5)
      {
        v7 = v8 + 1;
        if (v8 + 1 >= v6)
          return swift_release();
        v5 = *(_QWORD *)(v2 + 8 * v7);
        if (!v5)
        {
          v7 = v8 + 2;
          if (v8 + 2 >= v6)
            return swift_release();
          v5 = *(_QWORD *)(v2 + 8 * v7);
          if (!v5)
          {
            v7 = v8 + 3;
            if (v8 + 3 >= v6)
              return swift_release();
            v5 = *(_QWORD *)(v2 + 8 * v7);
            if (!v5)
              break;
          }
        }
      }
    }
LABEL_22:
    v5 &= v5 - 1;
    v10 = *v1;
    sub_23BB8B240();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v11 = result & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v11) & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v13 = *v1;
      *v1 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23BAD8CD0();
      sub_23BAE5318(v11);
      *v1 = v13;
      result = swift_bridgeObjectRelease();
    }
  }
  v9 = v8 + 4;
  if (v9 >= v6)
    return swift_release();
  v5 = *(_QWORD *)(v2 + 8 * v9);
  if (v5)
  {
    v7 = v9;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v7 >= v6)
      return swift_release();
    v5 = *(_QWORD *)(v2 + 8 * v7);
    ++v9;
    if (v5)
      goto LABEL_22;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23BADC114(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23BAE0008(v12, v13, &v17);
    sub_23BAE6DFC(v17, *((uint64_t *)&v17 + 1));
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADC2B4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  __int16 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _BYTE v20[8];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v7)
      return swift_release();
    v18 = *(_QWORD *)(v3 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v7)
        return swift_release();
      v18 = *(_QWORD *)(v3 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v7)
          return swift_release();
        v18 = *(_QWORD *)(v3 + 8 * v8);
        if (!v18)
        {
          v8 = v17 + 3;
          if (v17 + 3 >= v7)
            return swift_release();
          v18 = *(_QWORD *)(v3 + 8 * v8);
          if (!v18)
            break;
        }
      }
    }
LABEL_26:
    v6 = (v18 - 1) & v18;
    v10 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(unsigned __int8 *)(v11 + 16);
    if (*(_BYTE *)(v11 + 17))
      v15 = 256;
    else
      v15 = 0;
    v16 = v15 | v14;
    swift_bridgeObjectRetain();
    sub_23BAE03A0(v12, v13, v16, (uint64_t)v20);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v7)
    return swift_release();
  v18 = *(_QWORD *)(v3 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v18 = *(_QWORD *)(v3 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23BADC484(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[2];
  unsigned __int16 v19;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_WORD *)(v11 + 16);
    sub_23B9906EC(*(_QWORD *)v11, v13, v14);
    sub_23BAE05D4((uint64_t)v18);
    sub_23BAE70F0(v18[0], v18[1], v19);
    result = sub_23B9906D4(v12, v13, v14);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADC650(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[2];
  unsigned __int8 v19;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_BYTE *)(v11 + 16);
    sub_23B9894D4();
    sub_23BAE097C(v12, v13, v14, (uint64_t)v18);
    sub_23BAE70DC(v18[0], v18[1], v19);
    result = sub_23B9894DC();
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADC81C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _BYTE v18[8];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_WORD *)(v11 + 16);
    swift_bridgeObjectRetain();
    sub_23BAE0CEC(v12, v13, v14, (uint64_t)v18);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADC9D8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18[2];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v3 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v3 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v3 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_BYTE *)(v11 + 16);
    swift_bridgeObjectRetain();
    sub_23BAE0EDC(v12, v13, v14, (uint64_t)v18);
    sub_23BAE6DFC(v18[0], v18[1]);
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v3 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v3 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BADCB94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  double v35;
  int v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  uint64_t isStackAllocationSafe;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  size_t v46;
  void *v47;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[7];

  v2 = a2;
  v64[5] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v3 = *(_QWORD *)(a1 + 56);
  v51 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v49 = ~v4;
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v50 = (unint64_t)(63 - v4) >> 6;
  v60 = (char *)(a2 + 56);
  v7 = swift_bridgeObjectRetain();
  v53 = 0;
  v52 = v7;
  v54 = v2;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v9 = (v6 - 1) & v6;
      v10 = v8 | (v53 << 6);
    }
    else
    {
      v11 = v53 + 1;
      if (__OFADD__(v53, 1))
      {
        __break(1u);
        goto LABEL_62;
      }
      if (v11 >= v50)
        goto LABEL_59;
      v12 = *(_QWORD *)(v51 + 8 * v11);
      v13 = v53 + 1;
      if (!v12)
      {
        v13 = v53 + 2;
        if (v53 + 2 >= v50)
          goto LABEL_59;
        v12 = *(_QWORD *)(v51 + 8 * v13);
        if (!v12)
        {
          v13 = v53 + 3;
          if (v53 + 3 >= v50)
            goto LABEL_59;
          v12 = *(_QWORD *)(v51 + 8 * v13);
          if (!v12)
          {
            v13 = v53 + 4;
            if (v53 + 4 >= v50)
              goto LABEL_59;
            v12 = *(_QWORD *)(v51 + 8 * v13);
            if (!v12)
            {
              v14 = v53 + 5;
              if (v53 + 5 >= v50)
              {
LABEL_59:
                sub_23BA7D474();
                return v2;
              }
              v12 = *(_QWORD *)(v51 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    break;
                  if (v13 >= v50)
                    goto LABEL_59;
                  v12 = *(_QWORD *)(v51 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_24;
                }
LABEL_62:
                __break(1u);
              }
              v13 = v53 + 5;
            }
          }
        }
      }
LABEL_24:
      v9 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
      v53 = v13;
    }
    v15 = *(_QWORD *)(v7 + 48) + 72 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v19 = *(_QWORD *)(v15 + 16);
    v18 = *(_QWORD *)(v15 + 24);
    v21 = *(_QWORD *)(v15 + 32);
    v20 = *(_QWORD *)(v15 + 40);
    v58 = *(unsigned __int8 *)(v15 + 48);
    v22 = *(double *)(v15 + 56);
    v56 = *(unsigned __int8 *)(v15 + 64);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v63 = v16;
    sub_23BB8A808();
    v23 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v61 = v19;
    sub_23BB8A808();
    v62 = v18;
    swift_bridgeObjectRelease();
    v55 = v9;
    v57 = v21;
    sub_23BB8B258();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    sub_23BB8B24C();
    v59 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BB8B264();
    sub_23BB8B24C();
    v24 = sub_23BB8B270();
    v25 = -1 << *(_BYTE *)(v2 + 32);
    v26 = v24 & ~v25;
    if (((*(_QWORD *)&v60[(v26 >> 3) & 0xFFFFFFFFFFFFF8] >> v26) & 1) != 0)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v54;
    v7 = v52;
    v6 = v55;
  }
  v27 = ~v25;
  v28 = *(_QWORD *)(v54 + 48);
  while (1)
  {
    v29 = v28 + 72 * v26;
    v31 = *(_QWORD *)(v29 + 16);
    v30 = *(_QWORD *)(v29 + 24);
    v33 = *(_QWORD *)(v29 + 32);
    v32 = *(_QWORD *)(v29 + 40);
    v34 = *(unsigned __int8 *)(v29 + 48);
    v35 = *(double *)(v29 + 56);
    v36 = *(unsigned __int8 *)(v29 + 64);
    v37 = *(_QWORD *)v29 == v63 && *(_QWORD *)(v29 + 8) == v23;
    if (!v37 && (sub_23BB8B1A4() & 1) == 0)
      goto LABEL_30;
    v38 = v31 == v61 && v30 == v62;
    if (!v38 && (sub_23BB8B1A4() & 1) == 0)
      goto LABEL_30;
    if (v32)
      break;
    if (!v59)
      goto LABEL_48;
LABEL_30:
    v26 = (v26 + 1) & v27;
    if (((*(_QWORD *)&v60[(v26 >> 3) & 0xFFFFFFFFFFFFF8] >> v26) & 1) == 0)
      goto LABEL_6;
  }
  if (!v59)
    goto LABEL_30;
  v39 = v33 == v57 && v32 == v59;
  if (!v39 && (sub_23BB8B1A4() & 1) == 0)
    goto LABEL_30;
LABEL_48:
  v40 = v34 == (_DWORD)v58 && v35 == v22;
  if (!v40 || ((v56 ^ v36) & 1) != 0)
    goto LABEL_30;
  v64[0] = v52;
  v64[1] = v51;
  v64[2] = v49;
  v64[3] = v53;
  v64[4] = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  isStackAllocationSafe = swift_bridgeObjectRelease();
  v43 = v54;
  v44 = *(_BYTE *)(v54 + 32);
  v45 = (unint64_t)((1 << v44) + 63) >> 6;
  v46 = 8 * v45;
  if ((v44 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v42);
    memcpy((char *)&v49 - ((v46 + 15) & 0x3FFFFFFFFFFFFFF0), v60, v46);
    v2 = sub_23BAE10E0((uint64_t)&v49 - ((v46 + 15) & 0x3FFFFFFFFFFFFFF0), v45, v43, v26, v64);
    swift_release();
    sub_23BA7D474();
  }
  else
  {
    v47 = (void *)swift_slowAlloc();
    memcpy(v47, v60, v46);
    v2 = sub_23BAE10E0((uint64_t)v47, v45, v54, v26, v64);
    swift_release();
    sub_23BA7D474();
    MEMORY[0x24260D9B4](v47, -1, -1);
  }
  return v2;
}

uint64_t sub_23BADD284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v38 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v36 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v37 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37)
          goto LABEL_47;
        v13 = *(_QWORD *)(v38 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v37)
            goto LABEL_47;
          v13 = *(_QWORD *)(v38 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v37)
              goto LABEL_47;
            v13 = *(_QWORD *)(v38 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v37)
                goto LABEL_47;
              v13 = *(_QWORD *)(v38 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_23BA7D474();
                  return v2;
                }
                v13 = *(_QWORD *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v37)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v38 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      v19 = sub_23BB8B270();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_23BB8B1A4() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_23BB8B1A4() & 1) == 0);
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v30 = *(_BYTE *)(v2 + 32);
    v31 = (unint64_t)((1 << v30) + 63) >> 6;
    v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      v33 = sub_23BAE1538((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_23BA7D474();
    }
    else
    {
      v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      v33 = sub_23BAE1538((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_23BA7D474();
      MEMORY[0x24260D9B4](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23BADD6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t isStackAllocationSafe;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  _QWORD v27[6];

  v2 = a2;
  v27[5] = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v5 = a1 + 56;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v7 = ~v6;
    if (-v6 < 64)
      v8 = ~(-1 << -(char)v6);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a1 + 56);
    v10 = (unint64_t)(63 - v6) >> 6;
    do
    {
      v14 = v4;
      if (!v9)
      {
        v15 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_33;
        }
        if (v15 >= v10)
          goto LABEL_28;
        v9 = *(_QWORD *)(v5 + 8 * v15);
        ++v4;
        if (!v9)
        {
          v4 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_28;
          v9 = *(_QWORD *)(v5 + 8 * v4);
          if (!v9)
          {
            v4 = v14 + 3;
            if (v14 + 3 >= v10)
              goto LABEL_28;
            v9 = *(_QWORD *)(v5 + 8 * v4);
            if (!v9)
            {
              v4 = v14 + 4;
              if (v14 + 4 >= v10)
                goto LABEL_28;
              v9 = *(_QWORD *)(v5 + 8 * v4);
              if (!v9)
              {
                v16 = v14 + 5;
                if (v14 + 5 >= v10)
                {
LABEL_28:
                  swift_bridgeObjectRetain();
                  sub_23BA7D474();
                  return v2;
                }
                v9 = *(_QWORD *)(v5 + 8 * v16);
                if (!v9)
                {
                  while (1)
                  {
                    v4 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      break;
                    if (v4 >= v10)
                      goto LABEL_28;
                    v9 = *(_QWORD *)(v5 + 8 * v4);
                    ++v16;
                    if (v9)
                      goto LABEL_6;
                  }
LABEL_33:
                  __break(1u);
                }
                v4 = v14 + 5;
              }
            }
          }
        }
      }
LABEL_6:
      v9 &= v9 - 1;
      sub_23BB8B240();
      sub_23BB8B24C();
      v11 = sub_23BB8B270();
      v12 = -1 << *(_BYTE *)(v2 + 32);
      v13 = v11 & ~v12;
    }
    while (((*(_QWORD *)(v2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0);
    v27[0] = a1;
    v27[1] = v5;
    v27[2] = v7;
    v27[3] = v4;
    v27[4] = v9;
    v17 = (unint64_t)(63 - v12) >> 6;
    v18 = 8 * v17;
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v17 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v20);
      v22 = (char *)v27 - v21 + 64;
      memcpy((char *)v27 - v21 + 64, (const void *)(v2 + 56), v18);
      v23 = sub_23BAE1814((uint64_t)v22, v17, v2, v13, v27);
      swift_release();
      sub_23BA7D474();
    }
    else
    {
      v24 = (void *)swift_slowAlloc();
      memcpy(v24, (const void *)(v2 + 56), v18);
      v23 = sub_23BAE1814((uint64_t)v24, v17, v2, v13, v27);
      swift_release();
      sub_23BA7D474();
      MEMORY[0x24260D9B4](v24, -1, -1);
    }
    return v23;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23BADDA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t isStackAllocationSafe;
  uint64_t v28;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  _QWORD v37[6];

  v2 = a2;
  v37[5] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v5 = a1 + 56;
  v4 = *(_QWORD *)(a1 + 56);
  v6 = -1 << *(_BYTE *)(a1 + 32);
  v35 = ~v6;
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & v4;
  v36 = (unint64_t)(63 - v6) >> 6;
  v9 = a2 + 56;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
    }
    else
    {
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v13 >= v36)
        goto LABEL_47;
      v14 = *(_QWORD *)(v5 + 8 * v13);
      v15 = v10 + 1;
      if (!v14)
      {
        v15 = v10 + 2;
        if (v10 + 2 >= v36)
          goto LABEL_47;
        v14 = *(_QWORD *)(v5 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 3;
          if (v10 + 3 >= v36)
            goto LABEL_47;
          v14 = *(_QWORD *)(v5 + 8 * v15);
          if (!v14)
          {
            v15 = v10 + 4;
            if (v10 + 4 >= v36)
              goto LABEL_47;
            v14 = *(_QWORD *)(v5 + 8 * v15);
            if (!v14)
            {
              v16 = v10 + 5;
              if (v10 + 5 >= v36)
              {
LABEL_47:
                sub_23BA7D474();
                return v2;
              }
              v14 = *(_QWORD *)(v5 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  v15 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    break;
                  if (v15 >= v36)
                    goto LABEL_47;
                  v14 = *(_QWORD *)(v5 + 8 * v15);
                  ++v16;
                  if (v14)
                    goto LABEL_24;
                }
LABEL_49:
                __break(1u);
              }
              v15 = v10 + 5;
            }
          }
        }
      }
LABEL_24:
      v8 = (v14 - 1) & v14;
      v12 = __clz(__rbit64(v14)) + (v15 << 6);
      v10 = v15;
    }
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    v20 = sub_23BB8B270();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
  }
  v23 = ~v21;
  while (1)
  {
    v24 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v22);
    v25 = v24[1];
    if (!v25)
      break;
    if (v18)
    {
      v26 = *v24 == v19 && v25 == v18;
      if (v26 || (sub_23BB8B1A4() & 1) != 0)
      {
        isStackAllocationSafe = swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
LABEL_30:
    v22 = (v22 + 1) & v23;
    if (((*(_QWORD *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_6;
  }
  if (v18)
    goto LABEL_30;
  isStackAllocationSafe = swift_bridgeObjectRelease_n();
LABEL_41:
  v37[0] = a1;
  v37[1] = v5;
  v37[2] = v35;
  v37[3] = v10;
  v37[4] = v8;
  v29 = *(_BYTE *)(v2 + 32);
  v30 = (unint64_t)((1 << v29) + 63) >> 6;
  v31 = 8 * v30;
  if ((v29 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v28);
    memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
    v32 = sub_23BAE1A00((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v22, v37);
    swift_release();
    sub_23BA7D474();
  }
  else
  {
    v33 = (void *)swift_slowAlloc();
    memcpy(v33, (const void *)(v2 + 56), v31);
    v32 = sub_23BAE1A00((uint64_t)v33, v30, v2, v22, v37);
    swift_release();
    sub_23BA7D474();
    MEMORY[0x24260D9B4](v33, -1, -1);
  }
  return v32;
}

uint64_t sub_23BADDE84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v5 = a1 + 32;
      swift_bridgeObjectRetain();
      v3 = *(unsigned __int16 *)(v5 + 16);
      sub_23BB8B240();
      __asm { BR              X9 }
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_23BADE460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int64_t v13;
  _QWORD *v14;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v14 = (_QWORD *)(a1 + 56);
    v3 = -1 << *(_BYTE *)(a1 + 32);
    if (-v3 < 64)
      v4 = ~(-1 << -(char)v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v13 = (unint64_t)(63 - v3) >> 6;
    v6 = swift_bridgeObjectRetain();
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      goto LABEL_22;
    }
    if (v13 > 1)
    {
      v8 = v14[1];
      v9 = 1;
      if (v8)
        goto LABEL_21;
      v9 = 2;
      if (v13 > 2)
      {
        v8 = v14[2];
        if (v8)
          goto LABEL_21;
        v9 = 3;
        if (v13 > 3)
        {
          v8 = v14[3];
          if (v8)
            goto LABEL_21;
          v9 = 4;
          if (v13 > 4)
          {
            v8 = v14[4];
            if (!v8)
            {
              v10 = 5;
              if (v13 > 5)
              {
                v8 = v14[5];
                if (v8)
                {
                  v9 = 5;
                  goto LABEL_21;
                }
                while (1)
                {
                  v9 = v10 + 1;
                  if (__OFADD__(v10, 1))
                    __break(1u);
                  if (v9 >= v13)
                    break;
                  v8 = v14[v9];
                  ++v10;
                  if (v8)
                    goto LABEL_21;
                }
              }
              goto LABEL_24;
            }
LABEL_21:
            v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
            v11 = *(unsigned __int16 *)(*(_QWORD *)(v6 + 48) + 24 * v7 + 16);
            sub_23BB8B240();
            __asm { BR              X9 }
          }
        }
      }
    }
LABEL_24:
    sub_23BA7D474();
    return v2;
  }
  swift_release();
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23BADEC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  char v28;
  uint64_t isStackAllocationSafe;
  uint64_t v30;
  char v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[7];

  v2 = a2;
  v45[5] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v3 = *(_QWORD *)(a1 + 56);
  v40 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v38 = ~v4;
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v39 = (unint64_t)(63 - v4) >> 6;
  v44 = (char *)(a2 + 56);
  v7 = swift_bridgeObjectRetain();
  v41 = v7;
  v42 = 0;
  while (1)
  {
    if (v6)
    {
      v43 = (v6 - 1) & v6;
      v8 = __clz(__rbit64(v6)) | (v42 << 6);
    }
    else
    {
      v9 = v42 + 1;
      if (__OFADD__(v42, 1))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v9 >= v39)
        goto LABEL_54;
      v10 = *(_QWORD *)(v40 + 8 * v9);
      v11 = v42 + 1;
      if (!v10)
      {
        v11 = v42 + 2;
        if (v42 + 2 >= v39)
          goto LABEL_54;
        v10 = *(_QWORD *)(v40 + 8 * v11);
        if (!v10)
        {
          v11 = v42 + 3;
          if (v42 + 3 >= v39)
            goto LABEL_54;
          v10 = *(_QWORD *)(v40 + 8 * v11);
          if (!v10)
          {
            v11 = v42 + 4;
            if (v42 + 4 >= v39)
              goto LABEL_54;
            v10 = *(_QWORD *)(v40 + 8 * v11);
            if (!v10)
            {
              v12 = v42 + 5;
              if (v42 + 5 >= v39)
              {
LABEL_54:
                sub_23BA7D474();
                return v2;
              }
              v10 = *(_QWORD *)(v40 + 8 * v12);
              if (!v10)
              {
                while (1)
                {
                  v11 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    break;
                  if (v11 >= v39)
                    goto LABEL_54;
                  v10 = *(_QWORD *)(v40 + 8 * v11);
                  ++v12;
                  if (v10)
                    goto LABEL_24;
                }
LABEL_57:
                __break(1u);
              }
              v11 = v42 + 5;
            }
          }
        }
      }
LABEL_24:
      v42 = v11;
      v43 = (v10 - 1) & v10;
      v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    v13 = *(_QWORD *)(v7 + 48) + 24 * v8;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(char *)(v13 + 16);
    v17 = *(unsigned __int8 *)(v13 + 16);
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v16 < 0)
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23B9894DC();
      sub_23BB8B24C();
    }
    v18 = sub_23BB8B270();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)&v44[(v20 >> 3) & 0xFFFFFFFFFFFFF8] >> v20) & 1) != 0)
      break;
LABEL_6:
    sub_23B9894DC();
    v7 = v41;
    v6 = v43;
  }
  v21 = ~v19;
  while (1)
  {
    v22 = *(_QWORD *)(v2 + 48) + 24 * v20;
    v24 = *(_QWORD *)v22;
    v23 = *(_QWORD *)(v22 + 8);
    v25 = *(char *)(v22 + 16);
    if (v25 < 0)
      break;
    if ((v17 & 0x80) != 0 || (v24 == v14 ? (v26 = v23 == v15) : (v26 = 0), !v26 && (sub_23BB8B1A4() & 1) == 0))
    {
LABEL_31:
      sub_23B9894D4();
      sub_23B9894D4();
      sub_23B9894DC();
      sub_23B9894DC();
      goto LABEL_32;
    }
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    if (v17 == v25)
      goto LABEL_50;
LABEL_32:
    v20 = (v20 + 1) & v21;
    if (((*(_QWORD *)&v44[(v20 >> 3) & 0xFFFFFFFFFFFFF8] >> v20) & 1) == 0)
      goto LABEL_6;
  }
  if ((v17 & 0x80) == 0)
    goto LABEL_31;
  if (v24 != v14 || v23 != v15)
  {
    v28 = sub_23BB8B1A4();
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    if ((v28 & 1) != 0)
      goto LABEL_50;
    goto LABEL_32;
  }
  sub_23B9894D4();
  sub_23B9894D4();
  sub_23B9894DC();
  sub_23B9894DC();
LABEL_50:
  isStackAllocationSafe = sub_23B9894DC();
  v45[0] = v41;
  v45[1] = v40;
  v45[2] = v38;
  v45[3] = v42;
  v45[4] = v43;
  v31 = *(_BYTE *)(v2 + 32);
  v32 = (unint64_t)((1 << v31) + 63) >> 6;
  v33 = 8 * v32;
  if ((v31 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v30);
    memcpy((char *)&v38 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), v44, v33);
    v34 = sub_23BAE2774((uint64_t)&v38 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), v32, v2, v20, v45);
    swift_release();
    sub_23BA7D474();
    return v34;
  }
  else
  {
    v35 = (void *)swift_slowAlloc();
    memcpy(v35, v44, v33);
    v36 = sub_23BAE2774((uint64_t)v35, v32, v2, v20, v45);
    swift_release();
    sub_23BA7D474();
    MEMORY[0x24260D9B4](v35, -1, -1);
    return v36;
  }
}

uint64_t sub_23BADF250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  BOOL v28;
  uint64_t isStackAllocationSafe;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  size_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD v46[7];

  v2 = a2;
  v46[5] = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v41 = a1 + 56;
    v4 = -1 << *(_BYTE *)(a1 + 32);
    v39 = ~v4;
    if (-v4 < 64)
      v5 = ~(-1 << -(char)v4);
    else
      v5 = -1;
    v6 = v5 & v3;
    v40 = (unint64_t)(63 - v4) >> 6;
    v7 = (char *)(a2 + 56);
    v8 = swift_bridgeObjectRetain();
    v9 = 0;
    v42 = v8;
    v43 = v2;
    while (1)
    {
      if (v6)
      {
        v44 = (v6 - 1) & v6;
        v45 = v9;
        v10 = __clz(__rbit64(v6)) | (v9 << 6);
      }
      else
      {
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        if (v11 >= v40)
          goto LABEL_45;
        v12 = *(_QWORD *)(v41 + 8 * v11);
        v13 = v9 + 1;
        if (!v12)
        {
          v13 = v9 + 2;
          if (v9 + 2 >= v40)
            goto LABEL_45;
          v12 = *(_QWORD *)(v41 + 8 * v13);
          if (!v12)
          {
            v13 = v9 + 3;
            if (v9 + 3 >= v40)
              goto LABEL_45;
            v12 = *(_QWORD *)(v41 + 8 * v13);
            if (!v12)
            {
              v13 = v9 + 4;
              if (v9 + 4 >= v40)
                goto LABEL_45;
              v12 = *(_QWORD *)(v41 + 8 * v13);
              if (!v12)
              {
                v14 = v9 + 5;
                if (v9 + 5 >= v40)
                {
LABEL_45:
                  sub_23BA7D474();
                  return v2;
                }
                v12 = *(_QWORD *)(v41 + 8 * v14);
                if (!v12)
                {
                  while (1)
                  {
                    v13 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      break;
                    if (v13 >= v40)
                      goto LABEL_45;
                    v12 = *(_QWORD *)(v41 + 8 * v13);
                    ++v14;
                    if (v12)
                      goto LABEL_24;
                  }
LABEL_47:
                  __break(1u);
                }
                v13 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v44 = (v12 - 1) & v12;
        v45 = v13;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
      }
      v15 = *(_QWORD *)(v8 + 48) + 24 * v10;
      v17 = *(_QWORD *)v15;
      v16 = *(_QWORD *)(v15 + 8);
      v18 = *(unsigned __int8 *)(v15 + 16);
      v19 = *(unsigned __int8 *)(v15 + 17);
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      sub_23BB8B24C();
      v20 = sub_23BB8B270();
      v21 = -1 << *(_BYTE *)(v2 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)&v7[(v22 >> 3) & 0xFFFFFFFFFFFFF8] >> v22) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
      v8 = v42;
      v2 = v43;
      v6 = v44;
      v9 = v45;
    }
    v23 = ~v21;
    v24 = *(_QWORD *)(v43 + 48);
    while (1)
    {
      v25 = v24 + 24 * v22;
      v26 = *(unsigned __int8 *)(v25 + 16);
      v27 = *(unsigned __int8 *)(v25 + 17);
      v28 = *(_QWORD *)v25 == v17 && *(_QWORD *)(v25 + 8) == v16;
      if ((v28 || (sub_23BB8B1A4() & 1) != 0) && v26 == v18 && v27 == v19)
        break;
      v22 = (v22 + 1) & v23;
      if (((*(_QWORD *)&v7[(v22 >> 3) & 0xFFFFFFFFFFFFF8] >> v22) & 1) == 0)
        goto LABEL_6;
    }
    v46[0] = v42;
    v46[1] = v41;
    v46[2] = v39;
    v46[3] = v45;
    v46[4] = v44;
    isStackAllocationSafe = swift_bridgeObjectRelease();
    v32 = v43;
    v33 = *(_BYTE *)(v43 + 32);
    v34 = (unint64_t)((1 << v33) + 63) >> 6;
    v35 = 8 * v34;
    if ((v33 & 0x3Fu) <= 0xD
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v31);
      memcpy((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v35);
      v36 = sub_23BAE2BDC((uint64_t)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v32, v22, v46);
      swift_release();
      sub_23BA7D474();
    }
    else
    {
      v37 = (void *)swift_slowAlloc();
      memcpy(v37, v7, v35);
      v36 = sub_23BAE2BDC((uint64_t)v37, v34, v43, v22, v46);
      swift_release();
      sub_23BA7D474();
      MEMORY[0x24260D9B4](v37, -1, -1);
    }
    return v36;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23BADF6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  uint64_t isStackAllocationSafe;
  uint64_t v28;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD v41[7];

  v2 = a2;
  v41[5] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v3 = *(_QWORD *)(a1 + 56);
  v38 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v36 = ~v4;
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v37 = (unint64_t)(63 - v4) >> 6;
  v7 = a2 + 56;
  v8 = swift_bridgeObjectRetain();
  v39 = v8;
  v40 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v40 << 6);
    }
    else
    {
      v11 = v40 + 1;
      if (__OFADD__(v40, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v11 >= v37)
        goto LABEL_46;
      v12 = *(_QWORD *)(v38 + 8 * v11);
      v13 = v40 + 1;
      if (!v12)
      {
        v13 = v40 + 2;
        if (v40 + 2 >= v37)
          goto LABEL_46;
        v12 = *(_QWORD *)(v38 + 8 * v13);
        if (!v12)
        {
          v13 = v40 + 3;
          if (v40 + 3 >= v37)
            goto LABEL_46;
          v12 = *(_QWORD *)(v38 + 8 * v13);
          if (!v12)
          {
            v13 = v40 + 4;
            if (v40 + 4 >= v37)
              goto LABEL_46;
            v12 = *(_QWORD *)(v38 + 8 * v13);
            if (!v12)
            {
              v14 = v40 + 5;
              if (v40 + 5 >= v37)
              {
LABEL_46:
                sub_23BA7D474();
                return v2;
              }
              v12 = *(_QWORD *)(v38 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    break;
                  if (v13 >= v37)
                    goto LABEL_46;
                  v12 = *(_QWORD *)(v38 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_24;
                }
LABEL_49:
                __break(1u);
              }
              v13 = v40 + 5;
            }
          }
        }
      }
LABEL_24:
      v6 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
      v40 = v13;
    }
    v15 = *(_QWORD *)(v8 + 48) + 24 * v10;
    v17 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v18 = *(unsigned __int8 *)(v15 + 16);
    sub_23BB8B240();
    if (v16)
    {
      sub_23BB8B24C();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    sub_23BB8B24C();
    v19 = sub_23BB8B270();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
    v8 = v39;
  }
  v22 = ~v20;
  while (1)
  {
    v23 = *(_QWORD *)(v2 + 48) + 24 * v21;
    v24 = *(_QWORD *)(v23 + 8);
    if (!v24)
      break;
    if (v16)
    {
      v25 = *(unsigned __int8 *)(v23 + 16);
      v26 = *(_QWORD *)v23 == v17 && v24 == v16;
      if ((v26 || (sub_23BB8B1A4() & 1) != 0) && v25 == v18)
      {
        isStackAllocationSafe = swift_bridgeObjectRelease();
        goto LABEL_42;
      }
    }
LABEL_30:
    v21 = (v21 + 1) & v22;
    if (((*(_QWORD *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_6;
  }
  if (v16)
    goto LABEL_30;
  isStackAllocationSafe = swift_bridgeObjectRelease_n();
LABEL_42:
  v41[0] = v39;
  v41[1] = v38;
  v41[2] = v36;
  v41[3] = v40;
  v41[4] = v6;
  v29 = *(_BYTE *)(v2 + 32);
  v30 = (unint64_t)((1 << v29) + 63) >> 6;
  v31 = 8 * v30;
  if ((v29 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v28);
    memcpy((char *)&v36 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
    v32 = sub_23BAE2EC0((uint64_t)&v36 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, v41);
    swift_release();
    sub_23BA7D474();
    return v32;
  }
  else
  {
    v33 = (void *)swift_slowAlloc();
    memcpy(v33, (const void *)(v2 + 56), v31);
    v34 = sub_23BAE2EC0((uint64_t)v33, v30, v2, v21, v41);
    swift_release();
    sub_23BA7D474();
    MEMORY[0x24260D9B4](v33, -1, -1);
    return v34;
  }
}

double sub_23BADFB88@<D0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  double v17;
  int v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  double result;
  uint64_t *v32;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *v2;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  DeviceImageProvider.Subscription.hash(into:)();
  v5 = sub_23BB8B270();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  v40 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    *(_BYTE *)(a2 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v38 = ~v6;
  v39 = *(_QWORD *)(v4 + 48);
  v8 = *a1;
  v9 = *((_QWORD *)a1 + 1);
  v41 = *((_QWORD *)a1 + 3);
  v42 = *((_QWORD *)a1 + 2);
  v36 = *((_QWORD *)a1 + 4);
  v37 = *((_QWORD *)a1 + 5);
  v10 = a1[7];
  v34 = *((unsigned __int8 *)a1 + 64);
  v35 = *((unsigned __int8 *)a1 + 48);
  while (1)
  {
    v11 = v39 + 72 * v7;
    v12 = *(_QWORD *)(v11 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    v14 = *(_QWORD *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 40);
    v16 = *(unsigned __int8 *)(v11 + 48);
    v17 = *(double *)(v11 + 56);
    v18 = *(unsigned __int8 *)(v11 + 64);
    v19 = *(_QWORD *)v11 == *(_QWORD *)&v8 && *(_QWORD *)(v11 + 8) == v9;
    if (!v19 && (sub_23BB8B1A4() & 1) == 0)
      goto LABEL_4;
    v20 = v12 == v42 && v13 == v41;
    if (!v20 && (sub_23BB8B1A4() & 1) == 0)
      goto LABEL_4;
    if (v15)
      break;
    if (!v37)
      goto LABEL_22;
LABEL_4:
    v7 = (v7 + 1) & v38;
    if (((*(_QWORD *)(v40 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_31;
  }
  if (!v37)
    goto LABEL_4;
  v21 = v14 == v36 && v15 == v37;
  if (!v21 && (sub_23BB8B1A4() & 1) == 0)
    goto LABEL_4;
LABEL_22:
  v22 = v16 == v35 && v17 == v10;
  if (!v22 || ((v34 ^ v18) & 1) != 0)
    goto LABEL_4;
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v32;
  v43 = *v32;
  *v32 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23BAD892C();
    v24 = v43;
  }
  v25 = *(_QWORD *)(v24 + 48) + 72 * v7;
  v26 = *(_QWORD *)(v25 + 16);
  v27 = *(_QWORD *)(v25 + 24);
  v28 = *(_BYTE *)(v25 + 48);
  v29 = *(_QWORD *)(v25 + 56);
  v30 = *(_BYTE *)(v25 + 64);
  *(_OWORD *)a2 = *(_OWORD *)v25;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v27;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v25 + 32);
  *(_BYTE *)(a2 + 48) = v28;
  *(_QWORD *)(a2 + 56) = v29;
  *(_BYTE *)(a2 + 64) = v30;
  sub_23BAE4E90(v7);
  *v32 = v43;
  swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23BADFE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;

  v7 = *v3;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  v8 = sub_23BB8B270();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v11 = *(_QWORD *)(v7 + 48);
  v12 = (_QWORD *)(v11 + 16 * v10);
  v13 = *v12 == a1 && v12[1] == a2;
  if (!v13 && (sub_23BB8B1A4() & 1) == 0)
  {
    v20 = ~v9;
    do
    {
      v10 = (v10 + 1) & v20;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_18;
      v21 = (_QWORD *)(v11 + 16 * v10);
      v22 = *v21 == a1 && v21[1] == a2;
    }
    while (!v22 && (sub_23BB8B1A4() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v3;
  v23 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23BAD8B20();
    v15 = v23;
  }
  v16 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v10);
  v18 = *v16;
  v17 = v16[1];
  *a3 = v18;
  a3[1] = v17;
  sub_23BAE5154(v10);
  *v3 = v23;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAE0008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v7 = *v3;
  sub_23BB8B240();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  v8 = sub_23BB8B270();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_15:
    result = swift_bridgeObjectRelease();
    *a3 = xmmword_23BB8F630;
    return result;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v10);
    v13 = v12[1];
    if (!v13)
      break;
    if (a2)
    {
      v14 = *v12 == a1 && v13 == a2;
      if (v14 || (sub_23BB8B1A4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_15;
  }
  if (a2)
    goto LABEL_6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_17:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v3;
  v18 = *v3;
  *v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23BAD8E2C();
    v17 = v18;
  }
  *a3 = *(_OWORD *)(*(_QWORD *)(v17 + 48) + 16 * v10);
  sub_23BAE54BC(v10);
  *v3 = v18;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAE01C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;

  v8 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  v9 = sub_23BB8B270();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v8 + 48);
    while (1)
    {
      v14 = v13 + 24 * v11;
      v15 = *(unsigned __int8 *)(v14 + 16);
      v16 = *(_QWORD *)v14 == a1 && *(_QWORD *)(v14 + 8) == a2;
      if ((v16 || (sub_23BB8B1A4() & 1) != 0) && v15 == a3)
        break;
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v23;
    v25 = *v23;
    *v23 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23BAD919C(&qword_256A612A0);
      v19 = v25;
    }
    v20 = *(_QWORD *)(v19 + 48) + 24 * v11;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    LOBYTE(v20) = *(_BYTE *)(v20 + 16);
    *(_QWORD *)a4 = v21;
    *(_QWORD *)(a4 + 8) = v22;
    *(_BYTE *)(a4 + 16) = v20;
    sub_23BAE56A4(v11);
    *v23 = v25;
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 16) = 0;
  }
  return result;
}

uint64_t sub_23BAE03A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v31;
  uint64_t v32;

  v8 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  sub_23BB8B258();
  v9 = sub_23BB8B270();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  v31 = v8;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_WORD *)(a4 + 16) = 0;
    return result;
  }
  v13 = a3 & 0x100;
  v14 = ~v10;
  v15 = *(_QWORD *)(v31 + 48);
  while (1)
  {
    v16 = v15 + 24 * v11;
    v17 = *(unsigned __int8 *)(v16 + 16);
    v18 = *(unsigned __int8 *)(v16 + 17);
    if (*(_QWORD *)v16 == a1 && *(_QWORD *)(v16 + 8) == a2)
      break;
    v20 = v15;
    v21 = sub_23BB8B1A4();
    v15 = v20;
    if ((v21 & 1) != 0 && v17 == a3 && (((v13 != 0) ^ v18) & 1) == 0)
      goto LABEL_13;
LABEL_5:
    v11 = (v11 + 1) & v14;
    if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_16;
  }
  if (v17 != a3 || (((v13 != 0) ^ v18) & 1) != 0)
    goto LABEL_5;
LABEL_13:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v29;
  v32 = *v29;
  *v29 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23BAD8FD8();
    v23 = v32;
  }
  v24 = *(_QWORD *)(v23 + 48) + 24 * v11;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_BYTE *)(v24 + 16);
  LOBYTE(v24) = *(_BYTE *)(v24 + 17);
  *(_QWORD *)a4 = v25;
  *(_QWORD *)(a4 + 8) = v26;
  *(_BYTE *)(a4 + 16) = v27;
  *(_BYTE *)(a4 + 17) = v24;
  sub_23BAE58A0(v11);
  *v29 = v32;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAE05D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;

  v2 = *v1;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BAAB000();
  v3 = sub_23BB8B270() & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = -260;
  return result;
}

uint64_t sub_23BAE097C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  char v21;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = *v4;
  sub_23BB8B240();
  v27 = v4;
  v28 = a4;
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  if ((a3 & 0x80) != 0)
  {
    sub_23BB8A808();
  }
  else
  {
    sub_23B9894D4();
    sub_23BB8A808();
    sub_23B9894DC();
    sub_23BB8B24C();
  }
  v10 = v9;
  v11 = sub_23BB8B270();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  v13 = v11 & ~v12;
  v14 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_24:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v28 = 0;
    *(_QWORD *)(v28 + 8) = 0;
    *(_BYTE *)(v28 + 16) = -4;
    return result;
  }
  v30 = ~v12;
  while (1)
  {
    v15 = *(_QWORD *)(v10 + 48) + 24 * v13;
    v17 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v18 = *(char *)(v15 + 16);
    if (v18 < 0)
      break;
    if ((a3 & 0x80) != 0 || (v17 == a1 ? (v19 = v16 == a2) : (v19 = 0), !v19 && (sub_23BB8B1A4() & 1) == 0))
    {
LABEL_7:
      sub_23B9894D4();
      sub_23B9894D4();
      sub_23B9894DC();
      sub_23B9894DC();
      goto LABEL_8;
    }
    v29 = 24 * v13;
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    if (v18 == a3)
      goto LABEL_26;
LABEL_8:
    v13 = (v13 + 1) & v30;
    if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_24;
  }
  if ((a3 & 0x80) == 0)
    goto LABEL_7;
  v29 = 24 * v13;
  if (v17 != a1 || v16 != a2)
  {
    v21 = sub_23BB8B1A4();
    sub_23B9894D4();
    sub_23B9894D4();
    sub_23B9894DC();
    sub_23B9894DC();
    if ((v21 & 1) != 0)
      goto LABEL_26;
    goto LABEL_8;
  }
  sub_23B9894D4();
  sub_23B9894D4();
  sub_23B9894DC();
  sub_23B9894DC();
LABEL_26:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v27;
  v31 = *v27;
  *v27 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23BAD950C();
    v24 = v31;
  }
  v25 = *(_QWORD *)(v24 + 48) + v29;
  v26 = *(_BYTE *)(v25 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v25;
  *(_BYTE *)(v28 + 16) = v26;
  sub_23BAE5DB4(v13);
  *v27 = v31;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAE0CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  unsigned __int8 v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  BOOL v19;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;

  v5 = a3;
  v8 = HIBYTE(a3);
  v9 = *v4;
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  v10 = sub_23BB8B270();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  v13 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v14 = ~v11;
    v15 = *(_QWORD *)(v9 + 48);
    while (1)
    {
      v16 = v15 + 24 * v12;
      v17 = *(unsigned __int8 *)(v16 + 16);
      v18 = *(unsigned __int8 *)(v16 + 17);
      v19 = *(_QWORD *)v16 == a1 && *(_QWORD *)(v16 + 8) == a2;
      if ((v19 || (sub_23BB8B1A4() & 1) != 0) && v17 == v5 && v8 == v18)
        break;
      v12 = (v12 + 1) & v14;
      if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v27;
    v29 = *v27;
    *v27 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23BAD96C8();
      v23 = v29;
    }
    v24 = *(_QWORD *)(v23 + 48) + 24 * v12;
    v25 = *(_QWORD *)v24;
    v26 = *(_QWORD *)(v24 + 8);
    LOWORD(v24) = *(_WORD *)(v24 + 16);
    *(_QWORD *)a4 = v25;
    *(_QWORD *)(a4 + 8) = v26;
    *(_WORD *)(a4 + 16) = v24;
    sub_23BAE601C(v12);
    *v27 = v29;
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_13:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_WORD *)(a4 + 16) = 0;
  }
  return result;
}

uint64_t sub_23BAE0EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v7 = a3;
  v8 = *v4;
  sub_23BB8B240();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
  }
  v9 = sub_23BB8B270();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)a4 = xmmword_23BB8F630;
    *(_BYTE *)(a4 + 16) = 0;
    return result;
  }
  v12 = ~v10;
  while (1)
  {
    v13 = *(_QWORD *)(v8 + 48) + 24 * v11;
    v14 = *(_QWORD *)(v13 + 8);
    if (!v14)
      break;
    if (a2)
    {
      v15 = *(unsigned __int8 *)(v13 + 16);
      v16 = *(_QWORD *)v13 == a1 && v14 == a2;
      if ((v16 || (sub_23BB8B1A4() & 1) != 0) && v15 == v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
LABEL_6:
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_16;
  }
  if (a2)
    goto LABEL_6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_18:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v4;
  v23 = *v4;
  *v4 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23BAD9884();
    v19 = v23;
  }
  v20 = *(_QWORD *)(v19 + 48) + 24 * v11;
  v21 = *(_BYTE *)(v20 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v20;
  *(_BYTE *)(a4 + 16) = v21;
  sub_23BAE6264(v11);
  *v4 = v23;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAE10E0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  double v36;
  int v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  unint64_t *v46;
  _QWORD *v47;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = a3;
  v6 = *(_QWORD *)(a3 + 16);
  v46 = (unint64_t *)result;
  v47 = a5;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v53 = a3 + 56;
LABEL_2:
  v45 = v7;
LABEL_4:
  while (2)
  {
    v9 = a5[3];
    v8 = a5[4];
    if (v8)
    {
      v10 = (v8 - 1) & v8;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_22:
      v17 = *(_QWORD *)(*a5 + 48) + 72 * v11;
      v19 = *(_QWORD *)v17;
      v18 = *(_QWORD *)(v17 + 8);
      v21 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v17 + 24);
      v23 = *(_QWORD *)(v17 + 32);
      v22 = *(_QWORD *)(v17 + 40);
      v51 = *(unsigned __int8 *)(v17 + 48);
      v24 = *(double *)(v17 + 56);
      v49 = *(unsigned __int8 *)(v17 + 64);
      a5[3] = v9;
      a5[4] = v10;
      sub_23BB8B240();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v56 = v19;
      sub_23BB8A808();
      v57 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v54 = v21;
      sub_23BB8A808();
      v55 = v20;
      swift_bridgeObjectRelease();
      sub_23BB8B258();
      if (v22)
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      v52 = v22;
      sub_23BB8B24C();
      sub_23BB8B264();
      sub_23BB8B24C();
      v25 = sub_23BB8B270();
      v26 = -1 << *(_BYTE *)(v5 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v53 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        a5 = v47;
        v5 = a3;
        continue;
      }
      v50 = v23;
      v28 = ~v26;
      v29 = *(_QWORD *)(v5 + 48);
      while (1)
      {
        v30 = v29 + 72 * v27;
        v31 = *(_QWORD *)(v30 + 16);
        v32 = *(_QWORD *)(v30 + 24);
        v34 = *(_QWORD *)(v30 + 32);
        v33 = *(_QWORD *)(v30 + 40);
        v35 = *(unsigned __int8 *)(v30 + 48);
        v36 = *(double *)(v30 + 56);
        v37 = *(unsigned __int8 *)(v30 + 64);
        v38 = *(_QWORD *)v30 == v56 && *(_QWORD *)(v30 + 8) == v57;
        if (!v38 && (sub_23BB8B1A4() & 1) == 0)
          goto LABEL_27;
        v39 = v31 == v54 && v32 == v55;
        if (!v39 && (sub_23BB8B1A4() & 1) == 0)
          goto LABEL_27;
        if (v33)
        {
          if (!v52)
            goto LABEL_27;
          v40 = v34 == v50 && v33 == v52;
          if (!v40 && (sub_23BB8B1A4() & 1) == 0)
            goto LABEL_27;
        }
        else if (v52)
        {
          goto LABEL_27;
        }
        v41 = v35 == v51 && v36 == v24;
        if (v41 && ((v49 ^ v37) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v42 = (v27 >> 3) & 0x1FFFFFFFFFFFFFF8;
          a5 = v47;
          v43 = *(unint64_t *)((char *)v46 + v42);
          *(unint64_t *)((char *)v46 + v42) = v43 & ~(1 << v27);
          v5 = a3;
          if ((v43 & (1 << v27)) != 0)
          {
            v7 = v45 - 1;
            if (__OFSUB__(v45, 1))
              goto LABEL_60;
            if (v45 == 1)
              return MEMORY[0x24BEE4B08];
            goto LABEL_2;
          }
          goto LABEL_4;
        }
LABEL_27:
        v27 = (v27 + 1) & v28;
        if (((*(_QWORD *)(v53 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
          goto LABEL_3;
      }
    }
    break;
  }
  v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    v13 = (unint64_t)(a5[2] + 64) >> 6;
    if (v12 >= v13)
    {
      v12 = a5[3];
LABEL_56:
      a5[3] = v12;
      a5[4] = 0;
      swift_retain();
      return sub_23BAE31C4(v46, a2, v45, v5);
    }
    v14 = a5[1];
    v15 = *(_QWORD *)(v14 + 8 * v12);
    if (!v15)
    {
      if (v9 + 2 >= v13)
        goto LABEL_56;
      v15 = *(_QWORD *)(v14 + 8 * (v9 + 2));
      if (v15)
      {
        v12 = v9 + 2;
      }
      else
      {
        if (v9 + 3 >= v13)
        {
          v12 = v9 + 2;
          goto LABEL_56;
        }
        v15 = *(_QWORD *)(v14 + 8 * (v9 + 3));
        if (v15)
        {
          v12 = v9 + 3;
        }
        else
        {
          v12 = v9 + 4;
          if (v9 + 4 >= v13)
          {
            v12 = v9 + 3;
            goto LABEL_56;
          }
          v15 = *(_QWORD *)(v14 + 8 * v12);
          if (!v15)
          {
            v12 = v13 - 1;
            v16 = v9 + 5;
            while (v13 != v16)
            {
              v15 = *(_QWORD *)(v14 + 8 * v16++);
              if (v15)
              {
                v12 = v16 - 1;
                goto LABEL_21;
              }
            }
            goto LABEL_56;
          }
        }
      }
    }
LABEL_21:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    v9 = v12;
    goto LABEL_22;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_23BAE1538(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_23BAE359C(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        v22 = sub_23BB8B270();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_23BB8B1A4() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_23BB8B1A4() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23BAE1814(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v23;

  v7 = (uint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v11 = a5[3];
    v12 = a5[4];
    if (v12)
      goto LABEL_13;
    v13 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    v14 = (unint64_t)(a5[2] + 64) >> 6;
    if (v13 >= v14)
    {
      v13 = a5[3];
LABEL_25:
      a5[3] = v13;
      a5[4] = 0;
      swift_retain();
      return sub_23BAE383C(v7, a2, v9, a3);
    }
    v15 = a5[1];
    v12 = *(_QWORD *)(v15 + 8 * v13);
    if (v12)
      goto LABEL_6;
    if (v11 + 2 >= v14)
      goto LABEL_25;
    v12 = *(_QWORD *)(v15 + 8 * (v11 + 2));
    if (v12)
    {
      v11 += 2;
    }
    else
    {
      if (v11 + 3 >= v14)
      {
        v13 = v11 + 2;
        goto LABEL_25;
      }
      v12 = *(_QWORD *)(v15 + 8 * (v11 + 3));
      if (!v12)
      {
        v13 = v11 + 4;
        if (v11 + 4 >= v14)
        {
          v13 = v11 + 3;
          goto LABEL_25;
        }
        v12 = *(_QWORD *)(v15 + 8 * v13);
        if (!v12)
        {
          v13 = v14 - 1;
          v23 = v11 + 5;
          while (v14 != v23)
          {
            v12 = *(_QWORD *)(v15 + 8 * v23++);
            if (v12)
            {
              v11 = v23 - 1;
              goto LABEL_13;
            }
          }
          goto LABEL_25;
        }
LABEL_6:
        v11 = v13;
        goto LABEL_13;
      }
      v11 += 3;
    }
LABEL_13:
    a5[3] = v11;
    a5[4] = (v12 - 1) & v12;
    sub_23BB8B240();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v16 = result & ~(-1 << *(_BYTE *)(a3 + 32));
    v17 = v16 >> 6;
    v18 = *(_QWORD *)(v10 + 8 * (v16 >> 6));
    v19 = 1 << v16;
    if ((v19 & v18) != 0)
    {
      v20 = v17;
      v21 = v7[v20];
      v7[v20] = v21 & ~v19;
      if ((v21 & v19) != 0)
      {
        if (__OFSUB__(v9--, 1))
          goto LABEL_29;
        if (!v9)
          return MEMORY[0x24BEE4B08];
      }
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23BAE1A00(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
LABEL_2:
  v33 = v9;
LABEL_4:
  while (2)
  {
    v12 = a5[3];
    v11 = a5[4];
    if (v11)
    {
      v13 = (v11 - 1) & v11;
      v14 = __clz(__rbit64(v11)) | (v12 << 6);
LABEL_22:
      v20 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v14);
      v22 = *v20;
      v21 = v20[1];
      a5[3] = v12;
      a5[4] = v13;
      sub_23BB8B240();
      sub_23BB8B24C();
      if (v21)
      {
        swift_bridgeObjectRetain_n();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      v23 = sub_23BB8B270();
      v24 = -1 << *(_BYTE *)(a3 + 32);
      v25 = v23 & ~v24;
      if (((*(_QWORD *)(v10 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      {
LABEL_3:
        result = swift_bridgeObjectRelease();
        continue;
      }
      v26 = ~v24;
      while (1)
      {
        v27 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v25);
        v28 = v27[1];
        if (v28)
        {
          if (v21)
          {
            v29 = *v27 == v22 && v28 == v21;
            if (v29 || (sub_23BB8B1A4() & 1) != 0)
            {
              result = swift_bridgeObjectRelease();
              goto LABEL_37;
            }
          }
        }
        else if (!v21)
        {
          result = swift_bridgeObjectRelease_n();
LABEL_37:
          v30 = (v25 >> 3) & 0x1FFFFFFFFFFFFFF8;
          v31 = *(unint64_t *)((char *)v7 + v30);
          *(unint64_t *)((char *)v7 + v30) = v31 & ~(1 << v25);
          if ((v31 & (1 << v25)) != 0)
          {
            v9 = v33 - 1;
            if (__OFSUB__(v33, 1))
              goto LABEL_46;
            if (v33 == 1)
              return MEMORY[0x24BEE4B08];
            goto LABEL_2;
          }
          goto LABEL_4;
        }
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)(v10 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_3;
      }
    }
    break;
  }
  v15 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    v16 = (unint64_t)(a5[2] + 64) >> 6;
    if (v15 >= v16)
    {
      v15 = a5[3];
LABEL_42:
      a5[3] = v15;
      a5[4] = 0;
      swift_retain();
      return sub_23BAE3A68(v7, a2, v33, a3);
    }
    v17 = a5[1];
    v18 = *(_QWORD *)(v17 + 8 * v15);
    if (!v18)
    {
      if (v12 + 2 >= v16)
        goto LABEL_42;
      v18 = *(_QWORD *)(v17 + 8 * (v12 + 2));
      if (v18)
      {
        v15 = v12 + 2;
      }
      else
      {
        if (v12 + 3 >= v16)
        {
          v15 = v12 + 2;
          goto LABEL_42;
        }
        v18 = *(_QWORD *)(v17 + 8 * (v12 + 3));
        if (v18)
        {
          v15 = v12 + 3;
        }
        else
        {
          v15 = v12 + 4;
          if (v12 + 4 >= v16)
          {
            v15 = v12 + 3;
            goto LABEL_42;
          }
          v18 = *(_QWORD *)(v17 + 8 * v15);
          if (!v18)
          {
            v15 = v16 - 1;
            v19 = v12 + 5;
            while (v16 != v19)
            {
              v18 = *(_QWORD *)(v17 + 8 * v19++);
              if (v18)
              {
                v15 = v19 - 1;
                goto LABEL_21;
              }
            }
            goto LABEL_42;
          }
        }
      }
    }
LABEL_21:
    v13 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v15 << 6);
    v12 = v15;
    goto LABEL_22;
  }
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_23BAE1CD8(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v10;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v13 = v6 - 1;
  v7 = a5[1];
  v8 = *(_QWORD *)(*a5 + 16);
  if (v7 != v8)
  {
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < v8)
    {
      v10 = *(unsigned __int16 *)(*a5 + 24 * v7 + 48);
      a5[1] = v7 + 1;
      sub_23BB8B240();
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x23BAE219CLL);
  }
  swift_retain();
  return sub_23BAE3D24(a1, a2, v13, a3);
}

uint64_t sub_23BAE21C0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  int64_t v17;
  uint64_t v20;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v20 = v6 - 1;
  v8 = a5[3];
  v7 = a5[4];
  if (v7)
  {
    v9 = (v7 - 1) & v7;
    v10 = __clz(__rbit64(v7)) | (v8 << 6);
    goto LABEL_13;
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x23BAE2750);
  }
  v12 = (unint64_t)(a5[2] + 64) >> 6;
  if (v11 >= v12)
  {
    v11 = a5[3];
  }
  else
  {
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
    {
LABEL_12:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v11 << 6);
      v8 = v11;
LABEL_13:
      v16 = *(unsigned __int16 *)(*(_QWORD *)(*a5 + 48) + 24 * v10 + 16);
      a5[3] = v8;
      a5[4] = v9;
      sub_23BB8B240();
      __asm { BR              X9 }
    }
    v15 = v8 + 2;
    if (v8 + 2 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
      {
LABEL_8:
        v11 = v15;
        goto LABEL_12;
      }
      if (v8 + 3 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v11 = v8 + 3;
          goto LABEL_12;
        }
        v15 = v8 + 4;
        if (v8 + 4 >= v12)
        {
          v11 = v8 + 3;
          goto LABEL_23;
        }
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (v14)
          goto LABEL_8;
        v11 = v8 + 5;
        if (v8 + 5 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v11);
          if (!v14)
          {
            v11 = v12 - 1;
            v17 = v8 + 6;
            do
            {
              if (v12 == v17)
                goto LABEL_23;
              v14 = *(_QWORD *)(v13 + 8 * v17++);
            }
            while (!v14);
            v11 = v17 - 1;
          }
          goto LABEL_12;
        }
      }
      v11 = v15;
    }
  }
LABEL_23:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain();
  return sub_23BAE3D24(a1, a2, v20, a3);
}

uint64_t sub_23BAE2774(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  _QWORD *v37;
  uint64_t v38;

  v5 = *(_QWORD *)(a3 + 16);
  v36 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v6 = v5 - 1;
  v37 = a5;
  v38 = a3 + 56;
LABEL_2:
  v35 = v6;
LABEL_4:
  while (2)
  {
    v8 = a5[3];
    v7 = a5[4];
    if (v7)
    {
      v9 = (v7 - 1) & v7;
      v10 = __clz(__rbit64(v7)) | (v8 << 6);
LABEL_22:
      v16 = *(_QWORD *)(*a5 + 48) + 24 * v10;
      v17 = *(_QWORD *)v16;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = *(char *)(v16 + 16);
      v20 = *(unsigned __int8 *)(v16 + 16);
      a5[3] = v8;
      a5[4] = v9;
      sub_23BB8B240();
      sub_23BB8B24C();
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      if ((v19 & 0x80000000) == 0)
        sub_23BB8B24C();
      v21 = sub_23BB8B270();
      v22 = -1 << *(_BYTE *)(a3 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v38 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      {
LABEL_3:
        result = sub_23B9894DC();
        a5 = v37;
        continue;
      }
      v24 = ~v22;
      while (1)
      {
        v25 = *(_QWORD *)(a3 + 48) + 24 * v23;
        v27 = *(_QWORD *)v25;
        v26 = *(_QWORD *)(v25 + 8);
        v28 = *(char *)(v25 + 16);
        if (v28 < 0)
        {
          if ((v20 & 0x80) == 0)
            goto LABEL_27;
          if (v27 == v17 && v26 == v18)
          {
            sub_23B9894D4();
            sub_23B9894D4();
            sub_23B9894DC();
            sub_23B9894DC();
LABEL_45:
            result = sub_23B9894DC();
            v32 = (v23 >> 3) & 0x1FFFFFFFFFFFFFF8;
            a5 = v37;
            v33 = *(unint64_t *)((char *)v36 + v32);
            *(unint64_t *)((char *)v36 + v32) = v33 & ~(1 << v23);
            if ((v33 & (1 << v23)) != 0)
            {
              v6 = v35 - 1;
              if (__OFSUB__(v35, 1))
                goto LABEL_54;
              if (v35 == 1)
                return MEMORY[0x24BEE4B08];
              goto LABEL_2;
            }
            goto LABEL_4;
          }
          v31 = sub_23BB8B1A4();
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          sub_23B9894DC();
          if ((v31 & 1) != 0)
            goto LABEL_45;
        }
        else
        {
          if ((v20 & 0x80) != 0 || (v27 == v17 ? (v29 = v26 == v18) : (v29 = 0), !v29 && (sub_23BB8B1A4() & 1) == 0))
          {
LABEL_27:
            sub_23B9894D4();
            sub_23B9894D4();
            sub_23B9894DC();
            sub_23B9894DC();
            goto LABEL_28;
          }
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          sub_23B9894DC();
          if (v20 == v28)
            goto LABEL_45;
        }
LABEL_28:
        v23 = (v23 + 1) & v24;
        if (((*(_QWORD *)(v38 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          goto LABEL_3;
      }
    }
    break;
  }
  v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    v12 = (unint64_t)(a5[2] + 64) >> 6;
    if (v11 >= v12)
    {
      v11 = a5[3];
LABEL_50:
      a5[3] = v11;
      a5[4] = 0;
      swift_retain();
      return sub_23BAE40AC(v36, a2, v35, a3);
    }
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (!v14)
    {
      if (v8 + 2 >= v12)
        goto LABEL_50;
      v14 = *(_QWORD *)(v13 + 8 * (v8 + 2));
      if (v14)
      {
        v11 = v8 + 2;
      }
      else
      {
        if (v8 + 3 >= v12)
        {
          v11 = v8 + 2;
          goto LABEL_50;
        }
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v11 = v8 + 3;
        }
        else
        {
          v11 = v8 + 4;
          if (v8 + 4 >= v12)
          {
            v11 = v8 + 3;
            goto LABEL_50;
          }
          v14 = *(_QWORD *)(v13 + 8 * v11);
          if (!v14)
          {
            v11 = v12 - 1;
            v15 = v8 + 5;
            while (v12 != v15)
            {
              v14 = *(_QWORD *)(v13 + 8 * v15++);
              if (v14)
              {
                v11 = v15 - 1;
                goto LABEL_21;
              }
            }
            goto LABEL_50;
          }
        }
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
    v8 = v11;
    goto LABEL_22;
  }
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_23BAE2BDC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  BOOL v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  _QWORD *v37;
  uint64_t v39;

  v5 = a3;
  v6 = *(_QWORD *)(a3 + 16);
  v36 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v39 = a3 + 56;
  v37 = a5;
  while (2)
  {
    v35 = v7;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v8 = a5[4];
        if (v8)
        {
          v10 = (v8 - 1) & v8;
          v11 = __clz(__rbit64(v8)) | (v9 << 6);
        }
        else
        {
          v12 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_44;
          }
          v13 = (unint64_t)(a5[2] + 64) >> 6;
          if (v12 >= v13)
          {
            v12 = a5[3];
LABEL_40:
            a5[3] = v12;
            a5[4] = 0;
            swift_retain();
            return sub_23BAE43C0(v36, a2, v35, v5);
          }
          v14 = a5[1];
          v15 = *(_QWORD *)(v14 + 8 * v12);
          if (!v15)
          {
            if (v9 + 2 >= v13)
              goto LABEL_40;
            v15 = *(_QWORD *)(v14 + 8 * (v9 + 2));
            if (v15)
            {
              v12 = v9 + 2;
            }
            else
            {
              if (v9 + 3 >= v13)
              {
                v12 = v9 + 2;
                goto LABEL_40;
              }
              v15 = *(_QWORD *)(v14 + 8 * (v9 + 3));
              if (v15)
              {
                v12 = v9 + 3;
              }
              else
              {
                v12 = v9 + 4;
                if (v9 + 4 >= v13)
                {
                  v12 = v9 + 3;
                  goto LABEL_40;
                }
                v15 = *(_QWORD *)(v14 + 8 * v12);
                if (!v15)
                {
                  v12 = v13 - 1;
                  v16 = v9 + 5;
                  while (v13 != v16)
                  {
                    v15 = *(_QWORD *)(v14 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_21;
                    }
                  }
                  goto LABEL_40;
                }
              }
            }
          }
LABEL_21:
          v10 = (v15 - 1) & v15;
          v11 = __clz(__rbit64(v15)) + (v12 << 6);
          v9 = v12;
        }
        v17 = *(_QWORD *)(*a5 + 48) + 24 * v11;
        v19 = *(_QWORD *)v17;
        v18 = *(_QWORD *)(v17 + 8);
        v20 = *(unsigned __int8 *)(v17 + 16);
        v21 = *(unsigned __int8 *)(v17 + 17);
        a5[3] = v9;
        a5[4] = v10;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        sub_23BB8B24C();
        v22 = sub_23BB8B270();
        v23 = -1 << *(_BYTE *)(v5 + 32);
        v24 = v22 & ~v23;
        if (((*(_QWORD *)(v39 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
        a5 = v37;
        v5 = a3;
      }
      v25 = ~v23;
      v26 = *(_QWORD *)(v5 + 48);
      while (1)
      {
        v27 = v26 + 24 * v24;
        v28 = *(unsigned __int8 *)(v27 + 16);
        v29 = *(unsigned __int8 *)(v27 + 17);
        v30 = *(_QWORD *)v27 == v19 && *(_QWORD *)(v27 + 8) == v18;
        if ((v30 || (sub_23BB8B1A4() & 1) != 0) && v28 == v20 && v29 == v21)
          break;
        v24 = (v24 + 1) & v25;
        if (((*(_QWORD *)(v39 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
      v32 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v37;
      v33 = *(unint64_t *)((char *)v36 + v32);
      *(unint64_t *)((char *)v36 + v32) = v33 & ~(1 << v24);
      v5 = a3;
    }
    while ((v33 & (1 << v24)) == 0);
    v7 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v35 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23BAE2EC0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t *v35;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  v35 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v9 = a3 + 56;
LABEL_2:
  v34 = v8;
LABEL_4:
  while (2)
  {
    v11 = v5[3];
    v10 = v5[4];
    if (v10)
    {
      v12 = (v10 - 1) & v10;
      v13 = __clz(__rbit64(v10)) | (v11 << 6);
LABEL_22:
      v19 = *(_QWORD *)(*v5 + 48) + 24 * v13;
      v21 = *(_QWORD *)v19;
      v20 = *(_QWORD *)(v19 + 8);
      v22 = *(unsigned __int8 *)(v19 + 16);
      v5[3] = v11;
      v5[4] = v12;
      sub_23BB8B240();
      if (v20)
      {
        sub_23BB8B24C();
        swift_bridgeObjectRetain_n();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      sub_23BB8B24C();
      v23 = sub_23BB8B270();
      v24 = -1 << *(_BYTE *)(a3 + 32);
      v25 = v23 & ~v24;
      if (((*(_QWORD *)(v9 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      {
LABEL_3:
        result = swift_bridgeObjectRelease();
        v5 = a5;
        continue;
      }
      v26 = ~v24;
      while (1)
      {
        v27 = *(_QWORD *)(a3 + 48) + 24 * v25;
        v28 = *(_QWORD *)(v27 + 8);
        if (v28)
        {
          if (v20)
          {
            v29 = *(unsigned __int8 *)(v27 + 16);
            v30 = *(_QWORD *)v27 == v21 && v28 == v20;
            if ((v30 || (sub_23BB8B1A4() & 1) != 0) && v29 == v22)
            {
              result = swift_bridgeObjectRelease();
              goto LABEL_38;
            }
          }
        }
        else if (!v20)
        {
          result = swift_bridgeObjectRelease_n();
LABEL_38:
          v5 = a5;
          v31 = (v25 >> 3) & 0x1FFFFFFFFFFFFFF8;
          v32 = *(unint64_t *)((char *)v35 + v31);
          *(unint64_t *)((char *)v35 + v31) = v32 & ~(1 << v25);
          if ((v32 & (1 << v25)) != 0)
          {
            v8 = v34 - 1;
            if (__OFSUB__(v34, 1))
              goto LABEL_47;
            if (v34 == 1)
              return MEMORY[0x24BEE4B08];
            goto LABEL_2;
          }
          goto LABEL_4;
        }
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)(v9 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_3;
      }
    }
    break;
  }
  v14 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    v15 = (unint64_t)(v5[2] + 64) >> 6;
    if (v14 >= v15)
    {
      v14 = v5[3];
LABEL_43:
      v5[3] = v14;
      v5[4] = 0;
      swift_retain();
      return sub_23BAE4698(v35, a2, v34, a3);
    }
    v16 = v5[1];
    v17 = *(_QWORD *)(v16 + 8 * v14);
    if (!v17)
    {
      if (v11 + 2 >= v15)
        goto LABEL_43;
      v17 = *(_QWORD *)(v16 + 8 * (v11 + 2));
      if (v17)
      {
        v14 = v11 + 2;
      }
      else
      {
        if (v11 + 3 >= v15)
        {
          v14 = v11 + 2;
          goto LABEL_43;
        }
        v17 = *(_QWORD *)(v16 + 8 * (v11 + 3));
        if (v17)
        {
          v14 = v11 + 3;
        }
        else
        {
          v14 = v11 + 4;
          if (v11 + 4 >= v15)
          {
            v14 = v11 + 3;
            goto LABEL_43;
          }
          v17 = *(_QWORD *)(v16 + 8 * v14);
          if (!v17)
          {
            v14 = v15 - 1;
            v18 = v11 + 5;
            while (v15 != v18)
            {
              v17 = *(_QWORD *)(v16 + 8 * v18++);
              if (v17)
              {
                v14 = v18 - 1;
                goto LABEL_21;
              }
            }
            goto LABEL_43;
          }
        }
      }
    }
LABEL_21:
    v12 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v14 << 6);
    v11 = v14;
    goto LABEL_22;
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_23BAE31C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x24BEE4B08];
LABEL_39:
    swift_release();
    return v7;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59650);
  result = sub_23BB8ADF0();
  v7 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 56;
  v38 = v4;
  v39 = result;
  while (1)
  {
    if (v8)
    {
      v40 = (v8 - 1) & v8;
      v41 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_42;
    if (v12 >= a2)
      goto LABEL_39;
    v13 = a1[v12];
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= a2)
        goto LABEL_39;
      v13 = a1[v14];
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= a2)
          goto LABEL_39;
        v13 = a1[v14];
        if (!v13)
          break;
      }
    }
LABEL_23:
    v40 = (v13 - 1) & v13;
    v41 = v14;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_24:
    v16 = *(_QWORD *)(v4 + 48) + 72 * v11;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v22 = *(_QWORD *)(v16 + 32);
    v21 = *(_QWORD *)(v16 + 40);
    v23 = *(_BYTE *)(v16 + 48);
    v24 = *(_QWORD *)(v16 + 56);
    v43 = *(_BYTE *)(v16 + 64);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v42 = v18;
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_23BB8B258();
      swift_bridgeObjectRetain();
      v25 = v22;
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = v22;
      sub_23BB8B258();
    }
    sub_23BB8B24C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23BB8B264();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v7 = v39;
    v26 = -1 << *(_BYTE *)(v39 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v10 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v10 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = *(_QWORD *)(v39 + 48) + 72 * v29;
    *(_QWORD *)v34 = v42;
    *(_QWORD *)(v34 + 8) = v17;
    *(_QWORD *)(v34 + 16) = v19;
    *(_QWORD *)(v34 + 24) = v20;
    *(_QWORD *)(v34 + 32) = v25;
    *(_QWORD *)(v34 + 40) = v21;
    *(_BYTE *)(v34 + 48) = v23;
    *(_QWORD *)(v34 + 56) = v24;
    *(_BYTE *)(v34 + 64) = v43;
    ++*(_QWORD *)(v39 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v4 = v38;
    v8 = v40;
    v9 = v41;
    if (!v5)
      goto LABEL_39;
  }
  v15 = v9 + 4;
  if (v9 + 4 >= a2)
    goto LABEL_39;
  v13 = a1[v15];
  if (v13)
  {
    v14 = v9 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= a2)
      goto LABEL_39;
    v13 = a1[v14];
    ++v15;
    if (v13)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23BAE359C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59608);
  result = sub_23BB8ADF0();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    result = sub_23BB8B270();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23BAE383C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_34:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59620);
  result = sub_23BB8ADF0();
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (!v10)
    {
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_37;
      if (v13 >= a2)
        goto LABEL_34;
      v10 = a1[v13];
      ++v11;
      if (!v10)
      {
        v11 = v13 + 1;
        if (v13 + 1 >= a2)
          goto LABEL_34;
        v10 = a1[v11];
        if (!v10)
        {
          v11 = v13 + 2;
          if (v13 + 2 >= a2)
            goto LABEL_34;
          v10 = a1[v11];
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    sub_23BB8B240();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v15 = -1 << *(_BYTE *)(v9 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v19 = 0;
      v20 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v21 = v17 == v20;
        if (v17 == v20)
          v17 = 0;
        v19 |= v21;
        v22 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v22 == -1);
      v18 = __clz(__rbit64(~v22)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v10 &= v10 - 1;
    if (!v5)
      goto LABEL_34;
  }
  v14 = v13 + 3;
  if (v14 >= a2)
    goto LABEL_34;
  v10 = a1[v14];
  if (v10)
  {
    v11 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v11 >= a2)
      goto LABEL_34;
    v10 = a1[v11];
    ++v14;
    if (v10)
      goto LABEL_22;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23BAE3A68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_38:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59638);
  result = sub_23BB8ADF0();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_41;
    if (v14 >= v30)
      goto LABEL_38;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_38;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_38;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v18)
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    result = sub_23BB8B270();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v19;
    v28[1] = v18;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (!v5)
      goto LABEL_38;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_38;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_38;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BAE3D24(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v4 = a4;
  if (!a3)
  {
    v6 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C8);
    v6 = sub_23BB8ADF0();
    v14 = a2;
    if (a2 < 1)
      v7 = 0;
    else
      v7 = *a1;
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      goto LABEL_24;
    }
    if (v14 > 1)
    {
      v10 = a1[1];
      v11 = 1;
      if (v10)
        goto LABEL_23;
      v11 = 2;
      if (v14 > 2)
      {
        v10 = a1[2];
        if (v10)
          goto LABEL_23;
        v11 = 3;
        if (v14 > 3)
        {
          v10 = a1[3];
          if (!v10)
          {
            v12 = 4;
            if (v14 > 4)
            {
              v10 = a1[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_23;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x23BAE409CLL);
                }
                if (v11 >= v14)
                  break;
                v10 = a1[v11];
                ++v12;
                if (v10)
                  goto LABEL_23;
              }
            }
            goto LABEL_6;
          }
LABEL_23:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_24:
          v13 = *(unsigned __int16 *)(*(_QWORD *)(v4 + 48) + 24 * v9 + 16);
          sub_23BB8B240();
          __asm { BR              X9 }
        }
      }
    }
LABEL_6:
    swift_release();
    return v6;
  }
  return v4;
}

uint64_t sub_23BAE40AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_39:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595A0);
  result = sub_23BB8ADF0();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v34 = v10;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_42;
    if (v14 >= v32)
      goto LABEL_39;
    v15 = a1[v14];
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v32)
        goto LABEL_39;
      v15 = a1[v16];
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v32)
          goto LABEL_39;
        v15 = a1[v16];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v34 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v4 + 48) + 24 * v13;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(char *)(v18 + 16);
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v21 < 0)
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23B9894DC();
      sub_23BB8B24C();
    }
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v8 + 48) + 24 * v25;
    *(_QWORD *)v30 = v19;
    *(_QWORD *)(v30 + 8) = v20;
    *(_BYTE *)(v30 + 16) = v21;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v10 = v34;
    if (!v5)
      goto LABEL_39;
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v32)
    goto LABEL_39;
  v15 = a1[v17];
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v32)
      goto LABEL_39;
    v15 = a1[v16];
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23BAE43C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C0);
  result = sub_23BB8ADF0();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  v34 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v32)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v32)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v32)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v4 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_BYTE *)(v17 + 17);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    sub_23BB8B24C();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v8 + 48) + 24 * v25;
    *(_QWORD *)v30 = v18;
    *(_QWORD *)(v30 + 8) = v19;
    *(_BYTE *)(v30 + 16) = v20;
    *(_BYTE *)(v30 + 17) = v21;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v34;
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v32)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v32)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23BAE4698(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v32;
  uint64_t v33;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_38:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A595E8);
  result = sub_23BB8ADF0();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_41;
    if (v15 >= v33)
      goto LABEL_38;
    v16 = v32[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v33)
        goto LABEL_38;
      v16 = v32[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v33)
          goto LABEL_38;
        v16 = v32[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v4 + 48) + 24 * v14;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    sub_23BB8B240();
    if (v19)
    {
      sub_23BB8B24C();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v9 + 48) + 24 * v25;
    *(_QWORD *)v30 = v20;
    *(_QWORD *)(v30 + 8) = v19;
    *(_BYTE *)(v30 + 16) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (!v5)
      goto LABEL_38;
  }
  v17 = v15 + 3;
  if (v17 >= v33)
    goto LABEL_38;
  v16 = v32[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v33)
      goto LABEL_38;
    v16 = v32[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BAE495C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A612A8);
  result = sub_23BB8ADF0();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  v34 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v32)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v32)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v32)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v4 + 48) + 24 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_BYTE *)(v17 + 17);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    sub_23BB8B258();
    result = sub_23BB8B270();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v8 + 48) + 24 * v25;
    *(_QWORD *)v30 = v18;
    *(_QWORD *)(v30 + 8) = v19;
    *(_BYTE *)(v30 + 16) = v20;
    *(_BYTE *)(v30 + 17) = v21;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v34;
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v32)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v32)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23BAE4C34(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61298);
  result = sub_23BB8ADF0();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_23BB8AC64();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_23BAE4E90(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v19 = v4;
      v20 = v3;
      v18 = (v8 + 1) & v7;
      do
      {
        v21 = 72 * v6;
        v22 = v2;
        v9 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 72 * v6 + 40);
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
        sub_23BB8B258();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_23BB8A808();
          swift_bridgeObjectRelease();
        }
        sub_23BB8B24C();
        sub_23BB8B264();
        sub_23BB8B24C();
        v10 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        v4 = v19;
        v3 = v20;
        if (v2 >= (uint64_t)v18)
        {
          if (v11 < v18)
            goto LABEL_5;
        }
        else if (v11 >= v18)
        {
          goto LABEL_13;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_13:
          v12 = *(_QWORD *)(v20 + 48);
          v13 = (char *)(v12 + 72 * v2);
          v14 = (char *)(v12 + v21);
          if (72 * v2 < v21 || v13 >= v14 + 72 || (v2 = v6, v22 != v6))
          {
            memmove(v13, v14, 0x48uLL);
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v19 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE5154(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        v10 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE5318(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23BB8B240();
        sub_23BB8B24C();
        v10 = sub_23BB8B270() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_BYTE *)(v11 + v2);
          v13 = (_BYTE *)(v11 + v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE54BC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v6 + 8);
        sub_23BB8B240();
        sub_23BB8B24C();
        if (v10)
        {
          swift_bridgeObjectRetain();
          sub_23BB8A808();
        }
        v11 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9)
            goto LABEL_5;
        }
        else if (v12 >= v9)
        {
          goto LABEL_13;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_13:
          v13 = *(_QWORD *)(v3 + 48);
          v14 = (_OWORD *)(v13 + 16 * v2);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE56A4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v11 = 24 * v6;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        v12 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9)
            goto LABEL_5;
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(v3 + 48);
          v15 = v14 + 24 * v2;
          v16 = (__int128 *)(v14 + v11);
          if (24 * v2 < v11 || v15 >= (unint64_t)v16 + 24 || (v17 = v2 == v6, v2 = v6, !v17))
          {
            v10 = *v16;
            *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
            *(_OWORD *)v15 = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE58A0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v23 = v4;
      do
      {
        v11 = 24 * v6;
        v12 = v3;
        v13 = v9;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        sub_23BB8B258();
        v14 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        v9 = v13;
        v15 = v14 & v7;
        if (v2 >= (uint64_t)v13)
        {
          if (v15 < v13)
          {
            v4 = v23;
            v3 = v12;
          }
          else
          {
            v4 = v23;
            v3 = v12;
            if (v2 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v4 = v23;
          v3 = v12;
          if (v15 >= v9 || v2 >= (uint64_t)v15)
          {
LABEL_12:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = v16 + 24 * v2;
            v18 = (__int128 *)(v16 + v11);
            if (24 * v2 < v11 || v17 >= (unint64_t)v18 + 24 || (v19 = v2 == v6, v2 = v6, !v19))
            {
              v10 = *v18;
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
              *(_OWORD *)v17 = v10;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE5AE8(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(*v1 + 32));
  if (((1 << v5) & *(_QWORD *)(v4 + 8 * (v5 >> 6))) != 0)
  {
    swift_retain();
    sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int16 *)(*(_QWORD *)(v3 + 48) + 24 * v5 + 16);
      sub_23BB8B240();
      __asm { BR              X9 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    JUMPOUT(0x23BAE5DA4);
  }
  *(_QWORD *)(v3 + 16) = v9;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_23BAE5DB4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v22 = v4;
      do
      {
        v11 = 24 * v6;
        v12 = *(char *)(*(_QWORD *)(v3 + 48) + 24 * v6 + 16);
        sub_23BB8B240();
        sub_23BB8B24C();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        if ((v12 & 0x80000000) == 0)
          sub_23BB8B24C();
        v13 = sub_23BB8B270();
        sub_23B9894DC();
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          v4 = v22;
          if (v14 < v9)
            goto LABEL_5;
        }
        else
        {
          v4 = v22;
          if (v14 >= v9)
            goto LABEL_13;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_13:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = v15 + 24 * v2;
          v17 = (__int128 *)(v15 + v11);
          if (24 * v2 < v11 || v16 >= (unint64_t)v17 + 24 || (v18 = v2 == v6, v2 = v6, !v18))
          {
            v10 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE601C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v23 = v4;
      do
      {
        v11 = 24 * v6;
        v12 = v3;
        v13 = v9;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        sub_23BB8B24C();
        v14 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        v9 = v13;
        v15 = v14 & v7;
        if (v2 >= (uint64_t)v13)
        {
          if (v15 < v13)
          {
            v4 = v23;
            v3 = v12;
          }
          else
          {
            v4 = v23;
            v3 = v12;
            if (v2 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v4 = v23;
          v3 = v12;
          if (v15 >= v9 || v2 >= (uint64_t)v15)
          {
LABEL_12:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = v16 + 24 * v2;
            v18 = (__int128 *)(v16 + v11);
            if (24 * v2 < v11 || v17 >= (unint64_t)v18 + 24 || (v19 = v2 == v6, v2 = v6, !v19))
            {
              v10 = *v18;
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
              *(_OWORD *)v17 = v10;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23BAE6264(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v23 = v4;
      do
      {
        v11 = v9;
        v12 = 24 * v6;
        v13 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v6 + 8);
        sub_23BB8B240();
        if (v13)
        {
          sub_23BB8B24C();
          swift_bridgeObjectRetain();
          sub_23BB8A808();
        }
        sub_23BB8B24C();
        v14 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        v15 = v14 & v7;
        v9 = v11;
        if (v2 >= (uint64_t)v11)
        {
          v4 = v23;
          if (v15 < v11)
            goto LABEL_5;
        }
        else
        {
          v4 = v23;
          if (v15 >= v11)
            goto LABEL_13;
        }
        if (v2 >= (uint64_t)v15)
        {
LABEL_13:
          v16 = *(_QWORD *)(v3 + 48);
          v17 = v16 + 24 * v2;
          v18 = (__int128 *)(v16 + v12);
          if (24 * v2 < v12 || v17 >= (unint64_t)v18 + 24 || (v19 = v2 == v6, v2 = v6, !v19))
          {
            v10 = *v18;
            *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
            *(_OWORD *)v17 = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23BAE6498(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_23BAE653C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23BAE6620(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23BA9DDBC();
  result = sub_23BB8AB14();
  v8 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 48);
      v9[2] = *(_OWORD *)(v4 + 32);
      v9[3] = v5;
      v10 = *(_BYTE *)(v4 + 64);
      v6 = *(_OWORD *)(v4 + 16);
      v9[0] = *(_OWORD *)v4;
      v9[1] = v6;
      sub_23BA9DF68((uint64_t)v9);
      sub_23BAD32A4((uint64_t)&v7, (uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 72;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23BAE66D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B9907B4();
  result = sub_23BB8AB14();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23BAD3748(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23BAE6768(uint64_t a1)
{
  uint64_t v1;
  uint64_t i;
  unint64_t v3;
  char isUniquelyReferenced_nonNull_native;

  v1 = *(_QWORD *)(a1 + 16);
  sub_23B990770();
  for (i = sub_23BB8AB14(); v1; --v1)
  {
    sub_23BB8B240();
    sub_23BB8B24C();
    v3 = sub_23BB8B270() & ~(-1 << *(_BYTE *)(i + 32));
    if (((*(_QWORD *)(i + ((v3 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v3) & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_23BAD75EC(v3, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
    }
  }
  return i;
}

uint64_t sub_23BAE6840(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B9892EC();
  result = sub_23BB8AB14();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23BAD358C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23BAE68D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B99070C();
  result = sub_23BB8AB14();
  v9 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v4 += 24;
      swift_bridgeObjectRetain();
      sub_23BAD4330((uint64_t)&v8, v5, v6, v7);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_23BAE696C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B990690();
  result = sub_23BB8AB14();
  v9 = result;
  if (v2)
  {
    v4 = a1 + 49;
    do
    {
      v5 = *(_QWORD *)(v4 - 17);
      v6 = *(_QWORD *)(v4 - 9);
      v7 = *(_WORD *)(v4 - 1);
      swift_bridgeObjectRetain();
      sub_23BAD4120((uint64_t)&v8, v5, v6, v7);
      swift_bridgeObjectRelease();
      v4 += 24;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_23BAE6A0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B9900F8();
  result = sub_23BB8AB14();
  v9 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v4 += 24;
      sub_23B9894D4();
      sub_23BAD3D84((uint64_t)&v8, v5, v6, v7);
      sub_23B9894DC();
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_23BAE6AB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8[2];
  unsigned __int16 v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23BA7D430();
  result = sub_23BB8AB14();
  v10 = result;
  if (v2)
  {
    v4 = (_WORD *)(a1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      v4 += 12;
      sub_23B9906EC(v5, v6, v7);
      sub_23BAD4728((uint64_t)v8, v5, v6, v7);
      sub_23B9906D4(v8[0], v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

_QWORD *sub_23BAE6B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v7 = v6;
  v27 = a5;
  v28 = a6;
  v12 = sub_23BB889CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB889C0();
  v17 = sub_23BB88990();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v7[3] = v17;
  v7[4] = v19;
  sub_23BB889C0();
  v21 = sub_23BB88990();
  v23 = v22;
  v20(v16, v12);
  v7[9] = v21;
  v7[10] = v23;
  v7[2] = a1;
  v7[5] = a2;
  v7[6] = a3;
  v25 = v27;
  v24 = v28;
  v7[7] = a4;
  v7[8] = v25;
  v7[11] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23BAD18B4();
  sub_23BAD199C();
  sub_23BB88A08();
  sub_23BB88A08();
  sub_23BAD1B60();
  return v7;
}

uint64_t type metadata accessor for ProvidersMediator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvidersMediator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvidersMediator.__allocating_init(peopleRelationshipsProvider:peopleLocationsProvider:beaconsInfoProvider:userLocationProvider:contactsProvider:mapsDirectionsProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_23BAE6D0C()
{
  uint64_t v0;

  return sub_23BAD2470(v0);
}

uint64_t (*sub_23BAE6D14())()
{
  swift_retain();
  return sub_23BAE6EE8;
}

void sub_23BAE6D44()
{
  uint64_t v0;

  sub_23BAD27E4(v0);
}

uint64_t (*sub_23BAE6D4C())()
{
  swift_retain();
  return sub_23BAE6E44;
}

uint64_t sub_23BAE6D7C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BAE6DA0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAE6DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BAD2B3C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23BAE6DFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23BAE6E20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAE6E44()
{
  uint64_t v0;

  return sub_23BAD2894(v0, (uint64_t)&unk_250CB2780, (uint64_t)&unk_250CB27A8, (uint64_t)&unk_256A61250);
}

uint64_t sub_23BAE6E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23BAE6EE8()
{
  uint64_t v0;

  return sub_23BAD2894(v0, (uint64_t)&unk_250CB27D0, (uint64_t)&unk_250CB27F8, (uint64_t)&unk_256A61260);
}

uint64_t sub_23BAE6F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B97C964;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23BAE6F8C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAE6FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23BAD1DE4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23BAE6FC4()
{
  uint64_t v0;

  return sub_23BAD20F0(v0);
}

uint64_t (*sub_23BAE6FCC())()
{
  swift_retain();
  return sub_23BAE6FFC;
}

uint64_t sub_23BAE6FFC()
{
  uint64_t v0;

  return sub_23BAD2894(v0, (uint64_t)&unk_250CB2870, (uint64_t)&unk_250CB2898, (uint64_t)&unk_256A61278);
}

uint64_t sub_23BAE7038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23BAE70A8(uint64_t *a1)
{
  return sub_23BAD1D64(a1);
}

uint64_t sub_23BAE70B8()
{
  uint64_t *v0;

  return sub_23BB4F7AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_23BAE70DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xFBu)
    return sub_23B9894DC();
  return result;
}

uint64_t sub_23BAE70F0(uint64_t a1, uint64_t a2, int a3)
{
  if ((~a3 & 0xFEFC) != 0)
    return sub_23B9906D4(a1, a2, a3);
  return a1;
}

uint64_t sub_23BAE710C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BAE7170()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23BAE71F4(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 48) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (_QWORD *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
    *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
    *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
    v13 = (v11 + v6 + 32) & ~v6;
    v14 = (v12 + v6 + 32) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_23BAE7304(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_23BAE7360(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v5 = *(_QWORD *)v6;
  *(_QWORD *)(v5 + 8) = *(_QWORD *)(v6 + 8);
  *(_BYTE *)(v5 + 16) = *(_BYTE *)(v6 + 16);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v6 + 24);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32 + v5) & ~v9;
  v11 = (v9 + 32 + v6) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_23BAE7418(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))((*(unsigned __int8 *)(v9 + 80) + 32 + v7) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), (*(unsigned __int8 *)(v9 + 80) + 32 + v8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_OWORD *sub_23BAE74E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_23BAE7544(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = (unint64_t)a2 + 23;
  *a1 = *a2;
  swift_release();
  v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v6 = *(_QWORD *)v5;
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(v5 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v5 + 16);
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 32 + v6) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 32 + v5) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23BAE75E8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 48) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v7
                                                                      + 32) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BAE76BC + 4 * byte_23BB946B0[(v9 - 1)]))();
}

void sub_23BAE7734(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for ShareMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShareMenu);
}

uint64_t sub_23BAE7940()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAE7974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A720);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_23B996E1C(&qword_256A61350, &qword_256A5A720, MEMORY[0x24BDF41A8]);
  v6 = *(_QWORD *)(a1 + 24);
  v30 = v3;
  v31 = v4;
  v32 = v5;
  v33 = v6;
  v7 = MEMORY[0x24260D864](255, &v30, MEMORY[0x24BDF2188], 0);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61358);
  v30 = v3;
  v31 = v4;
  v32 = v5;
  v33 = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v10 = sub_23BAE8700();
  v30 = v7;
  v31 = v8;
  v32 = OpaqueTypeConformance2;
  v33 = v10;
  v11 = sub_23BB89CBC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v22 - v18;
  v27 = v4;
  v28 = v6;
  v29 = v22;
  v24 = v4;
  v25 = v6;
  v26 = v22;
  sub_23BB89CB0();
  MEMORY[0x24260D8DC](MEMORY[0x24BDF1A70], v11);
  sub_23BAC5FD8((uint64_t)v15, v11, (uint64_t)v19);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  sub_23BAC2FCC((uint64_t)v19, v11, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v11);
}

uint64_t sub_23BAE7B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61370);
  MEMORY[0x24BDAC7A8](v6, v7);
  v11 = a2;
  v12 = a3;
  v13 = a1;
  sub_23BAE8188((uint64_t)&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61390);
  sub_23BAE8778();
  sub_23BAE87FC();
  return sub_23BB8A220();
}

uint64_t sub_23BAE7C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v7 = type metadata accessor for ShareMenu(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v15 - v10;
  if (qword_256A58CD0 != -1)
    swift_once();
  v15[1] = qword_256A73D68;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A613A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  sub_23B996E1C(&qword_256A613A8, &qword_256A613A0, MEMORY[0x24BEE12D8]);
  sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
  sub_23BAE8A4C();
  return sub_23BB8A208();
}

uint64_t sub_23BAE7DCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a5;
  v9 = type metadata accessor for ShareMenu(0, a3, a4, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v25 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v20 = sub_23BB8929C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v18, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a2, v9);
  v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a3;
  *(_QWORD *)(v22 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v22 + v21, v14, v9);
  *(_QWORD *)(v22 + ((v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  return sub_23BA8ED10((uint64_t)v18, (uint64_t)&unk_256A613C0, v22, (uint64_t)sub_23BAE8BDC, v23, 0, v26);
}

uint64_t sub_23BAE7F60(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23BAE7FCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v3 = (uint64_t (*)(_QWORD))(***(int ***)(v0 + 16) + **(_QWORD **)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_23B9A559C;
  return v3(*(_QWORD *)(v0 + 24));
}

uint64_t sub_23BAE802C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A720);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[2] = sub_23BA9ACD0(a1);
  v11[3] = v9;
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_23B9967E0();
      sub_23BB8A0B8();
      result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
      break;
    default:
      v11[1] = a1;
      result = sub_23BB8B1C8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_23BAE8188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  _QWORD v24[2];

  v24[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61380);
  MEMORY[0x24BDAC7A8](v24[0], v2);
  v4 = (_QWORD *)((char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61398);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_23BB89D1C();
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = *MEMORY[0x24BDF1D90];
  v19 = sub_23BB89CEC();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v8, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  KeyPath = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v8, (uint64_t)v4 + *(int *)(v24[0] + 28), &qword_256A61398);
  *v4 = KeyPath;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61370);
  sub_23B989EFC((uint64_t)v4, a1 + *(int *)(v22 + 36), &qword_256A61380);
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v13;
  *(_BYTE *)(a1 + 16) = v17;
  *(_QWORD *)(a1 + 24) = v15;
  sub_23B996E5C(v11, v13, v17);
  swift_bridgeObjectRetain();
  sub_23B989D60((uint64_t)v4, &qword_256A61380);
  sub_23B989D60((uint64_t)v8, &qword_256A61398);
  sub_23B9967D0(v11, v13, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAE83E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A720);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B996E1C(&qword_256A61350, &qword_256A5A720, MEMORY[0x24BDF41A8]);
  v29 = v7;
  v30 = a2;
  v31 = v11;
  v32 = a3;
  v12 = MEMORY[0x24260D864](0, &v29, MEMORY[0x24BDF2188], 0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v24 - v19;
  v26 = a2;
  v27 = a3;
  v28 = a1;
  sub_23BB8A0AC();
  type metadata accessor for ShareMenu(0, a2, a3, v21);
  sub_23BB89D88();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v7);
  v29 = v7;
  v30 = a2;
  v31 = v11;
  v32 = a3;
  swift_getOpaqueTypeConformance2();
  sub_23BAC5FD8((uint64_t)v16, v12, (uint64_t)v20);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v16, v12);
  sub_23BAC2FCC((uint64_t)v20, v12, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, v12);
}

uint64_t sub_23BAE85F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_23BB89D1C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_23BAE86C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB8A064();
  *a1 = result;
  return result;
}

unint64_t sub_23BAE8700()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256A61360;
  if (!qword_256A61360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61358);
    v2[0] = sub_23BAE8778();
    v2[1] = sub_23BAE87FC();
    v2[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF4AF8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61360);
  }
  return result;
}

unint64_t sub_23BAE8778()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256A61368;
  if (!qword_256A61368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61370);
    v2 = sub_23B996E1C(&qword_256A61378, &qword_256A61380, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A61368);
  }
  return result;
}

unint64_t sub_23BAE87FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A61388;
  if (!qword_256A61388)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61390);
    v2 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A61388);
  }
  return result;
}

uint64_t sub_23BAE8878()
{
  uint64_t *v0;

  return sub_23BAE7B4C(v0[4], v0[2], v0[3]);
}

uint64_t sub_23BAE8884@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23BAE83E0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23BAE8890@<X0>(uint64_t a1@<X8>)
{
  return sub_23BAE85F0(a1);
}

uint64_t sub_23BAE889C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_23BAE7C1C(v4[4], v4[2], v4[3], a4);
}

uint64_t sub_23BAE88A8()
{
  return sub_23BB896D4();
}

uint64_t sub_23BAE88C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61398);
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23B989EFC(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A61398);
  return sub_23BB896E0();
}

uint64_t sub_23BAE894C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ShareMenu(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 40), v5);
  return swift_deallocObject();
}

uint64_t sub_23BAE89E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareMenu(0, v6, v7, a2) - 8) + 80);
  return sub_23BAE7DCC(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

unint64_t sub_23BAE8A4C()
{
  unint64_t result;

  result = qword_256A613B0;
  if (!qword_256A613B0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ShareDuration, &type metadata for ShareDuration);
    atomic_store(result, &qword_256A613B0);
  }
  return result;
}

uint64_t sub_23BAE8A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ShareMenu(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 40), v5);
  return swift_deallocObject();
}

uint64_t sub_23BAE8B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(type metadata accessor for ShareMenu(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v4 + v7;
  v9 = *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23B97C964;
  return sub_23BAE7F60(v8, v9);
}

uint64_t sub_23BAE8BCC()
{
  return swift_deallocObject();
}

uint64_t sub_23BAE8BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAE802C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BAE8BE4(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A720);
  v4 = sub_23B996E1C(&qword_256A61350, &qword_256A5A720, MEMORY[0x24BDF41A8]);
  v11 = v3;
  v12 = v1;
  v13 = v4;
  v14 = v2;
  v5 = MEMORY[0x24260D864](255, &v11, MEMORY[0x24BDF2188], 0);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61358);
  v11 = v3;
  v12 = v1;
  v13 = v4;
  v14 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v8 = sub_23BAE8700();
  v11 = v5;
  v12 = v6;
  v13 = OpaqueTypeConformance2;
  v14 = v8;
  v9 = sub_23BB89CBC();
  return MEMORY[0x24260D8DC](MEMORY[0x24BDF1A70], v9);
}

uint64_t static ContactsProvider.live()@<X0>(id (**a1)(uint64_t *a1)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v17 - v9;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  sub_23BB891B8();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v13(v6, v10, v2);
  v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = swift_allocObject();
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v13)(v15 + v14, v6, v2);
  *a1 = sub_23BAE92A8;
  a1[1] = (id (*)(uint64_t *))v12;
  a1[2] = (id (*)(uint64_t *))sub_23BAE99B8;
  a1[3] = (id (*)(uint64_t *))v15;
  return result;
}

id sub_23BAE8E2C(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  id v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *a1;
  v3 = a1[1];
  v5 = *((unsigned __int8 *)a1 + 16);
  if ((char)a1[2] < 0)
  {
    v9 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23BB8C510;
    *(_QWORD *)(v10 + 32) = v4;
    *(_QWORD *)(v10 + 40) = v3;
    swift_bridgeObjectRetain();
    v7 = (id)sub_23BB8A8E0();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v9, sel_predicateForContactsWithIdentifiers_, v7);
  }
  else if (*((_BYTE *)a1 + 16))
  {
    v6 = (void *)objc_opt_self();
    v7 = (id)sub_23BB8A784();
    if (v5 == 1)
      v8 = objc_msgSend(v6, sel_predicateForContactsMatchingEmailAddress_, v7);
    else
      v8 = objc_msgSend(v6, sel_predicateForContactsMatchingName_options_, v7, 1);
  }
  else
  {
    v11 = (void *)objc_opt_self();
    v12 = objc_allocWithZone(MEMORY[0x24BDBAD88]);
    swift_bridgeObjectRetain();
    v13 = (void *)sub_23BB8A784();
    sub_23B9894DC();
    v7 = objc_msgSend(v12, sel_initWithStringValue_, v13);

    v8 = objc_msgSend(v11, sel_predicateForContactsMatchingPhoneNumber_, v7);
  }
  v14 = v8;

  sub_23BAE92C0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A641B0);
  v15 = (void *)sub_23BB8A8E0();
  swift_bridgeObjectRelease();
  v29[0] = 0;
  v16 = objc_msgSend(a2, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v14, v15, v29);

  v17 = v29[0];
  if (!v16)
  {
    v22 = v29[0];
    sub_23BB887C8();

    swift_willThrow();
    return v16;
  }
  sub_23B9C7670();
  v18 = sub_23BB8A8EC();
  v19 = v17;

  if (!(v18 >> 62))
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_11;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v23 = sub_23BB8AFD0();
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    if ((v5 & 0x80) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_23BB8C510;
      *(_QWORD *)(v24 + 32) = v4;
      *(_QWORD *)(v24 + 40) = v3;
      swift_bridgeObjectRetain_n();
      v25 = (void *)sub_23BB8A8E0();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend((id)objc_opt_self(), sel_contactWithDisplayName_handleStrings_, 0, v25);

      sub_23B9894DC();
      return v26;
    }
    v27 = objc_allocWithZone(MEMORY[0x24BDBACA0]);
    swift_bridgeObjectRetain();
    v28 = (void *)sub_23BB8A784();
    v16 = objc_msgSend(v27, sel_initWithIdentifier_, v28);

    sub_23B9894DC();
    return v16;
  }
LABEL_11:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x24260CD9C](0, v18);

    swift_bridgeObjectRelease();
    return v16;
  }
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    __break(1u);
  v20 = *(id *)(v18 + 32);

  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23BAE9284()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23BAE92A8(uint64_t *a1)
{
  uint64_t v1;

  return sub_23BAE8E2C(a1, *(void **)(v1 + 16));
}

uint64_t sub_23BAE92C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void **v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v27;
  void *v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23BB94780;
  v1 = (void *)*MEMORY[0x24BDBA3F0];
  v2 = (void *)*MEMORY[0x24BDBA2E0];
  v3 = (void **)MEMORY[0x24BDBA2C8];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x24BDBA3F0];
  *(_QWORD *)(v0 + 40) = v2;
  v4 = *v3;
  v5 = (void *)*MEMORY[0x24BDBA2C0];
  *(_QWORD *)(v0 + 48) = *v3;
  *(_QWORD *)(v0 + 56) = v5;
  v6 = (void *)*MEMORY[0x24BDBA310];
  v7 = (void *)*MEMORY[0x24BDBA328];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x24BDBA310];
  *(_QWORD *)(v0 + 72) = v7;
  v8 = (void *)*MEMORY[0x24BDBA288];
  v9 = (void *)*MEMORY[0x24BDBA348];
  v10 = (void **)MEMORY[0x24BDBA3E8];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x24BDBA288];
  *(_QWORD *)(v0 + 88) = v9;
  v11 = *v10;
  v27 = (void *)*MEMORY[0x24BDBA2F0];
  v12 = *MEMORY[0x24BDBA2F0];
  *(_QWORD *)(v0 + 96) = v11;
  *(_QWORD *)(v0 + 104) = v12;
  v28 = (void *)*MEMORY[0x24BDBA378];
  v29 = v0;
  *(_QWORD *)(v0 + 112) = *MEMORY[0x24BDBA378];
  sub_23BB8A904();
  v13 = (void *)objc_opt_self();
  v14 = v1;
  v15 = v2;
  v16 = v4;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v11;
  v23 = v27;
  v24 = v28;
  v25 = objc_msgSend(v13, sel_descriptorForRequiredKeysForStyle_, 0);
  MEMORY[0x24260C820]();
  if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23BB8A928();
  sub_23BB8A958();
  sub_23BB8A904();
  return v29;
}

uint64_t sub_23BAE9490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v64 = a2;
  v3 = sub_23BB891C4();
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  v4 = *(_QWORD *)(v62 + 64);
  MEMORY[0x24BDAC7A8](v3, v5);
  v61 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E360);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E0);
  v59 = *(_QWORD *)(v15 - 8);
  v60 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E8);
  v54 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v20);
  v56 = (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v52 - v24;
  v55 = v26;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v52 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v66 = v30;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BEE6A10], v10);
  v58 = v18;
  sub_23BB8AA6C();
  v57 = v30;
  v65 = v25;
  sub_23BAE9A70((uint64_t)v30, (uint64_t)v25);
  v32 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v53 = sub_23BB8AC58();

  v33 = sub_23BB891AC();
  v34 = sub_23BB8ABEC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = a1;
    v37 = swift_slowAlloc();
    v68 = v37;
    *(_DWORD *)v35 = 136315138;
    v67 = sub_23BB7B69C(0x29286576696CLL, 0xE600000000000000, &v68);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v33, v34, "ContactsProvider: didReceive %s", v35, 0xCu);
    swift_arrayDestroy();
    v38 = v37;
    a1 = v36;
    MEMORY[0x24260D9B4](v38, -1, -1);
    MEMORY[0x24260D9B4](v35, -1, -1);
  }

  v39 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v9, 1, 1, v39);
  v52 = v9;
  v41 = v61;
  v40 = v62;
  v42 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, a1, v63);
  v43 = v56;
  sub_23BAE9A70((uint64_t)v65, v56);
  sub_23BB8A9F4();
  v44 = v53;
  swift_retain();
  v45 = sub_23BB8A9E8();
  v46 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v47 = (v4 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = (*(unsigned __int8 *)(v54 + 80) + v47 + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v49 = swift_allocObject();
  v50 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v49 + 16) = v45;
  *(_QWORD *)(v49 + 24) = v50;
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v49 + v46, v41, v42);
  *(_QWORD *)(v49 + v47) = v44;
  sub_23BAEA2E8(v43, v49 + v48);
  sub_23B989F54((uint64_t)v52, (uint64_t)&unk_256A61400, v49);
  swift_release();
  swift_release();
  sub_23B989D60((uint64_t)v65, &qword_256A613E8);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v64, v58, v60);
  return sub_23B989D60((uint64_t)v57, &qword_256A613E8);
}

uint64_t sub_23BAE9958()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BAE99B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  return sub_23BAE9490(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_23BAE99F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23B989D60(a2, &qword_256A613E8);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_23BAE9A68(uint64_t a1)
{
  uint64_t v1;

  return sub_23BAE99F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23BAE9A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAE9AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61408);
  v6[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E8);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61410);
  v6[10] = swift_task_alloc();
  v7 = sub_23BB8AC4C();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = sub_23BB8A9F4();
  v6[15] = sub_23BB8A9E8();
  v6[16] = sub_23BB8A988();
  v6[17] = v8;
  return swift_task_switch();
}

uint64_t sub_23BAE9BD0()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136315138;
    v0[3] = sub_23BB7B69C(0x29286576696CLL, 0xE600000000000000, &v7);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "ContactsProvider: %s - will await", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  swift_retain();
  sub_23BB8AC40();
  v0[18] = sub_23BB8A9E8();
  sub_23BAEA3FC();
  v5 = (_QWORD *)swift_task_alloc();
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_23BAE9D64;
  return sub_23BB8A9C4();
}

uint64_t sub_23BAE9D64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 144);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    sub_23BB8A988();
  }
  return swift_task_switch();
}

uint64_t sub_23BAE9E28()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAE9E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_23BB886E4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_release();
    sub_23BAE9A70(v4, v3);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5);
    v8 = *(_QWORD *)(v0 + 72);
    if (v7 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 72), &qword_256A613E8);
    }
    else
    {
      sub_23BB8AA48();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = sub_23BB891AC();
    v10 = sub_23BB8ABC8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v24 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_23BB7B69C(0x29286576696CLL, 0xE600000000000000, &v24);
      _os_log_impl(&dword_23B979000, v9, v10, "ContactsProvider: %s - New Value)", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v12, -1, -1);
      MEMORY[0x24260D9B4](v11, -1, -1);
    }

    v13 = *(_QWORD *)(v0 + 64);
    sub_23BAE9A70(*(_QWORD *)(v0 + 48), v13);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 64);
    if (v16 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 64), &qword_256A613E8);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E378);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
    }
    else
    {
      sub_23BB8AA30();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E378);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 0, 1, v21);
    }
    v22 = *(_QWORD *)(v0 + 80);
    sub_23B989D60(*(_QWORD *)(v0 + 56), &qword_256A61408);
    sub_23B989D60(v22, &qword_256A61410);
    *(_QWORD *)(v0 + 144) = sub_23BB8A9E8();
    sub_23BAEA3FC();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v23;
    *v23 = v0;
    v23[1] = sub_23BAE9D64;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23BAEA190()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 160);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_23BAEA1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A613E8) - 8) + 80);
  v6 = (v4 + v5 + 8) & ~v5;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23BAEA2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAEA330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_23BB891C4() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A613E8) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_23B97C964;
  return sub_23BAE9AB8(a1, v9, v10, v11, v12, v13);
}

unint64_t sub_23BAEA3FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A61418;
  if (!qword_256A61418)
  {
    v1 = sub_23BB8AC4C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDD0038], v1);
    atomic_store(result, (unint64_t *)&qword_256A61418);
  }
  return result;
}

MSMessage __swiftcall MessagePayload.createMSMessage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  __int16 v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD0C0]), sel_init);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD0D8]), sel_init);
  v8 = *(unsigned __int16 *)(v0 + 16);
  if ((v8 & 0xFF00) == 0x200)
  {
    v9 = 0;
    LOWORD(v10) = 2;
  }
  else
  {
    v9 = *(_WORD *)(v0 + 16);
    v10 = (v8 >> 8) & 1 | ((*(_BYTE *)(v1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 32)) & 1) << 8);
  }
  v21 = v9;
  v22 = v10;
  sub_23BB14AEC();
  v11 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setCaption_, v11);

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD0C8]), sel_initWithAlternateLayout_, v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23BB8C510;
  if (qword_256A58CC0 != -1)
    swift_once();
  v14 = *(_QWORD *)algn_256A73D38;
  *(_QWORD *)(v13 + 32) = qword_256A73D30;
  *(_QWORD *)(v13 + 40) = v14;
  swift_bridgeObjectRetain();
  v15 = (void *)sub_23BB8A8E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setRequiredCapabilities_, v15);

  objc_msgSend(v6, sel_setLayout_, v12);
  v16 = objc_msgSend(v7, sel_caption);
  objc_msgSend(v6, sel_setSummaryText_, v16);

  MessagePayload.url.getter((uint64_t)v5);
  v17 = sub_23BB8884C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17) != 1)
  {
    v19 = (void *)sub_23BB88828();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v17);
  }
  objc_msgSend(v6, sel_setURL_, v19);

  objc_msgSend(v6, sel_setRequiresValidation_, 1);
  return (MSMessage)v6;
}

id sub_23BAEA6F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return (id)_sSo9MSMessageC12FindMyUICoreE04findC20LocationShareMessage8durationAbC0G8DurationO_tFZ_0(a3);
}

Class sub_23BAEA710()
{
  return _sSo9MSMessageC12FindMyUICoreE04findC22LocationRequestMessageAByFZ_0();
}

uint64_t MessagePayload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61448);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23BB8884C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v19 = MEMORY[0x24BDAC7A8](v17, v18).n128_u64[0];
  v21 = (char *)&v31 - v20;
  v22 = objc_msgSend(a1, sel_URL, v19);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  v23 = v22;
  sub_23BB88834();

  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v24(v11, v16, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:

    v27 = &qword_256A599B8;
    v28 = (uint64_t)v11;
    goto LABEL_7;
  }
  v24(v21, v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v21, v12);
  MessagePayload.init(from:)(v16, (uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
  v25 = type metadata accessor for MessagePayload(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) != 1)
  {
    sub_23BAEAC94((uint64_t)v7, a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(a2, 0, 1, v25);
  }
  v27 = &qword_256A61448;
  v28 = (uint64_t)v7;
LABEL_7:
  sub_23B989D60(v28, v27);
  v29 = type metadata accessor for MessagePayload(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a2, 1, 1, v29);
}

uint64_t _sSo9MSMessageC12FindMyUICoreE04findC20LocationShareMessage8durationAbC0G8DurationO_tFZ_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  char *v20;
  Class isa;
  uint64_t result;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB889CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MessagePayload(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB889C0();
  v15 = sub_23BB88990();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v18 = sub_23BB88984();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
  if (a1 >= 4)
  {
    v23[1] = a1;
    result = sub_23BB8B1C8();
    __break(1u);
  }
  else
  {
    *(_QWORD *)v14 = v15;
    *((_QWORD *)v14 + 1) = v17;
    *((_WORD *)v14 + 8) = a1;
    v19 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
    sub_23BA31BCC((uint64_t)v5, (uint64_t)&v14[v19[6]]);
    v20 = &v14[v19[7]];
    *((_OWORD *)v20 + 3) = 0u;
    *((_OWORD *)v20 + 4) = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    *((_OWORD *)v20 + 2) = 0u;
    *(_OWORD *)v20 = 0u;
    v20[80] = 1;
    v14[v19[8]] = 0;
    isa = MessagePayload.createMSMessage()().super.isa;
    sub_23BAEACD8((uint64_t)v14);
    return (uint64_t)isa;
  }
  return result;
}

Class _sSo9MSMessageC12FindMyUICoreE04findC22LocationRequestMessageAByFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  Class isa;
  uint64_t v18;

  v0 = sub_23BB889CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MessagePayload(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB889C0();
  v9 = sub_23BB88990();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v12 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  v13 = &v8[v12[6]];
  v14 = sub_23BB88984();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)v8 = v9;
  *((_QWORD *)v8 + 1) = v11;
  *((_WORD *)v8 + 8) = 512;
  v15 = &v8[v12[7]];
  *((_OWORD *)v15 + 3) = 0u;
  *((_OWORD *)v15 + 4) = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  *(_OWORD *)v15 = 0u;
  v15[80] = 1;
  v8[v12[8]] = 0;
  isa = MessagePayload.createMSMessage()().super.isa;
  sub_23BAEACD8((uint64_t)v8);
  return isa;
}

uint64_t sub_23BAEAC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessagePayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAEACD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MessagePayload(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CancelButton.init(customAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v6;
  uint64_t result;

  v6 = (_QWORD *)((char *)a3 + *(int *)(type metadata accessor for CancelButton() + 20));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  result = swift_storeEnumTagMultiPayload();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t type metadata accessor for CancelButton()
{
  uint64_t result;

  result = qword_256A614A8;
  if (!qword_256A614A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CancelButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v2 = v1;
  v20[1] = a1;
  v3 = sub_23BB894F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CancelButton();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59998);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAEB030(v2, (uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = swift_allocObject();
  sub_23BAEB078((uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  sub_23BB8A10C();
  sub_23BB894E8();
  sub_23BAEB1AC();
  sub_23BB89E24();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_23BAEAF60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_23BB893B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(uint64_t))a1;
  if (*(_QWORD *)a1)
  {
    v8 = *(_QWORD *)(a1 + 8);
    v9 = swift_retain();
    v7(v9);
    return sub_23BA2EA10(v7, v8);
  }
  else
  {
    type metadata accessor for CancelButton();
    sub_23BA83AFC((uint64_t)v6);
    sub_23BB893A4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_23BAEB030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CancelButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAEB078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CancelButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAEB0C0@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_23BB897D0();
  if (qword_256A58D30 != -1)
    swift_once();
  v2 = (id)qword_256A61B50;
  swift_bridgeObjectRetain();
  result = sub_23BB89D1C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

unint64_t sub_23BAEB1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5A360;
  if (!qword_256A5A360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59998);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF43B0], v1);
    atomic_store(result, (unint64_t *)&qword_256A5A360);
  }
  return result;
}

uint64_t sub_23BAEB1F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAEB208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v4 = v2;
  v22[1] = a2;
  v5 = sub_23BB894F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59998);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAEB030(v4, (uint64_t)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = swift_allocObject();
  sub_23BAEB078((uint64_t)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  sub_23BB8A10C();
  sub_23BB894E8();
  sub_23BAEB1AC();
  sub_23BB89E24();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for CancelButton(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)v4 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for CancelButton(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if (*a1)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_23BB893B0();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CancelButton(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB893B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for CancelButton(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_23BA46880((uint64_t)a1 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for CancelButton(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23BB893B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t *assignWithTake for CancelButton(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_23BA46880((uint64_t)a1 + v9);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_23BB893B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CancelButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAEB8B0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for CancelButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23BAEB948(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23BAEB9C0()
{
  unint64_t v0;

  sub_23B9B1F04();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23BAEBA34()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59998);
  sub_23BAEB1AC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for CancelButton();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (_QWORD *)(v0 + ((v2 + 16) & ~v2));
  if (*v3)
    swift_release();
  v4 = (char *)v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23BB893B0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_23BAEBB3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CancelButton() - 8) + 80);
  return sub_23BAEAF60(v0 + ((v1 + 16) & ~v1));
}

uint64_t destroy for AccessoryPairedContentView()
{
  return swift_release();
}

uint64_t initializeWithCopy for AccessoryPairedContentView(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;

  v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AccessoryPairedContentView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  a1[12] = a2[12];
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AccessoryPairedContentView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryPairedContentView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryPairedContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryPairedContentView()
{
  return &type metadata for AccessoryPairedContentView;
}

uint64_t sub_23BAEBD90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAEBDA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = (uint64_t)v1;
  v56 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D650);
  MEMORY[0x24BDAC7A8](v3, v4);
  v50 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D658);
  MEMORY[0x24BDAC7A8](v6, v7);
  v53 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A614E0);
  MEMORY[0x24BDAC7A8](v55, v9);
  v52 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v54 = (uint64_t)&v48 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A614E8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A614F0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v48 - v24;
  v51 = (uint64_t)&v48 - v24;
  sub_23BAEC22C((uint64_t)v1, (uint64_t)v17);
  v27 = *v1;
  v26 = v1[1];
  v28 = *(_QWORD *)(v2 + 24);
  v49 = *(_QWORD *)(v2 + 32);
  v29 = sub_23BB89BA8();
  sub_23B989EFC((uint64_t)v17, (uint64_t)v21, &qword_256A614E8);
  v30 = &v21[*(int *)(v18 + 36)];
  *v30 = v29;
  *((_QWORD *)v30 + 1) = v27;
  *((_QWORD *)v30 + 2) = v28;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v28;
  v30[40] = 0;
  sub_23B989D60((uint64_t)v17, &qword_256A614E8);
  sub_23B990D24((uint64_t)v21, (uint64_t)v25, &qword_256A614F0);
  v31 = sub_23BB89848();
  v32 = v49;
  v33 = (uint64_t)v50;
  *v50 = v31;
  *(_QWORD *)(v33 + 8) = v32;
  *(_BYTE *)(v33 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A614F8);
  v57 = sub_23BB7126C();
  v34 = swift_allocObject();
  v35 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v34 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v34 + 96) = v35;
  *(_QWORD *)(v34 + 112) = *(_QWORD *)(v2 + 96);
  v36 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v34 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v34 + 32) = v36;
  v37 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v34 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v34 + 64) = v37;
  sub_23BAED3F0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61500);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61508);
  sub_23B996E1C(&qword_256A61510, &qword_256A61500, MEMORY[0x24BEE12D8]);
  sub_23B996E1C(&qword_256A61518, &qword_256A61508, MEMORY[0x24BDF4498]);
  sub_23BAED418();
  sub_23BB8A208();
  v38 = sub_23BB8A304();
  v39 = v53;
  sub_23BA2A03C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v53, 0.0, 1, 0.0, 1, v38, v40);
  sub_23B989D60(v33, &qword_256A5D650);
  LOBYTE(v26) = sub_23BB89BA8();
  v41 = v52;
  sub_23B989EFC(v39, v52, &qword_256A5D658);
  v42 = v41 + *(int *)(v55 + 36);
  *(_BYTE *)v42 = v26;
  *(_QWORD *)(v42 + 8) = 0;
  *(_QWORD *)(v42 + 16) = v28;
  *(_QWORD *)(v42 + 24) = 0;
  *(_QWORD *)(v42 + 32) = v28;
  *(_BYTE *)(v42 + 40) = 0;
  sub_23B989D60(v39, &qword_256A5D658);
  v43 = v54;
  sub_23B990D24(v41, v54, &qword_256A614E0);
  v44 = v51;
  sub_23B989EFC(v51, (uint64_t)v21, &qword_256A614F0);
  sub_23B989EFC(v43, v41, &qword_256A614E0);
  v45 = v56;
  sub_23B989EFC((uint64_t)v21, v56, &qword_256A614F0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61528);
  sub_23B989EFC(v41, v45 + *(int *)(v46 + 48), &qword_256A614E0);
  sub_23B989D60(v43, &qword_256A614E0);
  sub_23B989D60(v44, &qword_256A614F0);
  sub_23B989D60(v41, &qword_256A614E0);
  return sub_23B989D60((uint64_t)v21, &qword_256A614F0);
}

uint64_t sub_23BAEC22C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v73 = a2;
  v69 = sub_23BB89524();
  MEMORY[0x24BDAC7A8](v69, v3);
  v70 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23BB88FCC();
  MEMORY[0x24BDAC7A8](v61, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB89080();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23BB88F9C();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D660);
  v62 = *(_QWORD *)(v17 - 8);
  v63 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D668);
  MEMORY[0x24BDAC7A8](v21, v22);
  v65 = (uint64_t)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61558);
  MEMORY[0x24BDAC7A8](v72, v24);
  v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61560);
  v68 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v27);
  v64 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v66 = (char *)&v60 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61568);
  MEMORY[0x24BDAC7A8](v32, v32);
  v35 = (char *)&v60 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 80) + 128) & 1) != 0)
  {
    swift_storeEnumTagMultiPayload();
    v36 = sub_23BAED46C();
    v74 = v72;
    v75 = v36;
    swift_getOpaqueTypeConformance2();
    return sub_23BB89944();
  }
  else
  {
    v60 = v33;
    sub_23BB89074();
    sub_23BB88F78();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    sub_23BB88F30();
    v38 = sub_23BB88F3C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v9, 0, 1, v38);
    v74 = MEMORY[0x24BEE4AF8];
    sub_23BA8CF4C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
    sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
    v39 = sub_23BB8AD84();
    MEMORY[0x24BDAC7A8](v39, v40);
    v41 = v67;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A61588);
    sub_23BAED57C();
    sub_23BB88EE8();
    v42 = *(double *)(v41 + 48);
    v43 = *(_QWORD *)(v41 + 56);
    v44 = sub_23BB8A2F8();
    v45 = v65;
    v47 = sub_23BA2A094(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v65, v42, 0, 0.0, 1, v44, v46);
    (*(void (**)(char *, uint64_t, double))(v62 + 8))(v20, v63, v47);
    v48 = v70;
    v49 = &v70[*(int *)(v69 + 20)];
    v50 = *MEMORY[0x24BDEEB68];
    v51 = sub_23BB89800();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v49, v50, v51);
    *v48 = v43;
    v48[1] = v43;
    v52 = v72;
    v53 = (uint64_t)&v26[*(int *)(v72 + 36)];
    sub_23BAED650((uint64_t)v48, v53);
    *(_WORD *)(v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5D538) + 36)) = 256;
    sub_23B989EFC(v45, (uint64_t)v26, &qword_256A5D668);
    sub_23BAED694((uint64_t)v48);
    sub_23B989D60(v45, &qword_256A5D668);
    v54 = sub_23BAED46C();
    v55 = v64;
    sub_23BB89D4C();
    sub_23B989D60((uint64_t)v26, &qword_256A61558);
    v56 = v68;
    v57 = v66;
    v58 = v55;
    v59 = v71;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v58, v71);
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v35, v57, v59);
    swift_storeEnumTagMultiPayload();
    v74 = v52;
    v75 = v54;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  }
}

uint64_t sub_23BAEC86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A615A0);
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61598);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A615B0);
  v14 = *(_QWORD *)(v13 - 8);
  v18 = MEMORY[0x24BDAC7A8](v13, v15);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 80) + 128) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(a2, 1, 1, v13, v18);
  v24 = (uint64_t)&v24;
  v28 = 0x697461746F6E6E61;
  v29 = 0xEF6567616D496E6FLL;
  MEMORY[0x24BDAC7A8](v16, v17);
  v26 = a2;
  *(&v24 - 2) = a1;
  sub_23BB8A37C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A615B8);
  sub_23BAED6D8();
  v25 = v9;
  sub_23B9967E0();
  sub_23BB8911C();
  v22 = sub_23B996E1C(&qword_256A615A8, &qword_256A615A0, MEMORY[0x24BDFBF10]);
  sub_23BB890E0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v4);
  v28 = v4;
  v29 = v22;
  swift_getOpaqueTypeConformance2();
  sub_23BB890EC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v8);
  v23 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v26, v20, v13);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
}

__n128 sub_23BAECB44@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  double v9;
  _OWORD v10[2];

  v4 = sub_23BB8A2F8();
  v6 = v5;
  sub_23BAECBA8(a1, (uint64_t)v10);
  v8 = v10[0];
  result = (__n128)v10[1];
  v9 = -*(double *)(a1 + 64);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_OWORD *)(a2 + 16) = v8;
  *(__n128 *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 48) = 0;
  *(double *)(a2 + 56) = v9;
  return result;
}

double sub_23BAECBA8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  double result;

  type metadata accessor for AccessoryOnboardingModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = sub_23BB8A0A0();
  v7 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 104) + OBJC_IVAR___FMUIDiscoveredAccessory_productImage);
  v8 = sub_23BB8A04C();
  result = -*(double *)(a1 + 72);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = 0;
  *(double *)(a2 + 24) = result;
  return result;
}

uint64_t sub_23BAECC64@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *a1;
  *(_QWORD *)a3 = sub_23BB89788();
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61530);
  return sub_23BAECCC0(v6, a2, a3 + *(int *)(v7 + 44));
}

uint64_t sub_23BAECCC0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;

  v53 = a2;
  v55 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61538);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23BB8944C();
  v8 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD18);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61540);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61548);
  MEMORY[0x24BDAC7A8](v52, v21);
  v57 = (uint64_t)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v50 - v25;
  MEMORY[0x24BDAC7A8](v27, v28);
  v56 = (uint64_t)&v50 - v29;
  v54 = a1;
  v58[0] = sub_23BB8A064();
  sub_23BB89440();
  sub_23BB89DC4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v51);
  swift_release();
  v30 = sub_23BB89F98();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v16, v12);
  v32 = (uint64_t *)&v20[*(int *)(v17 + 36)];
  *v32 = KeyPath;
  v32[1] = v30;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v33 = sub_23BB89C14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v7, 1, 1, v33);
  v34 = sub_23BB89C44();
  sub_23B989D60((uint64_t)v7, &qword_256A61538);
  v35 = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v20, (uint64_t)v26, &qword_256A61540);
  v36 = (uint64_t *)&v26[*(int *)(v52 + 36)];
  *v36 = v35;
  v36[1] = v34;
  sub_23B989D60((uint64_t)v20, &qword_256A61540);
  v37 = v56;
  sub_23B990D24((uint64_t)v26, v56, &qword_256A61548);
  v53 = sub_23BB89848();
  sub_23BAED12C(v54, (uint64_t)v58);
  v38 = v58[0];
  v39 = v58[1];
  LOBYTE(v26) = v59;
  v41 = v60;
  v40 = v61;
  v42 = v62;
  LOBYTE(v7) = v63;
  v43 = v64;
  v44 = v37;
  v45 = v57;
  sub_23B989EFC(v44, v57, &qword_256A61548);
  v46 = v45;
  v47 = v55;
  sub_23B989EFC(v46, v55, &qword_256A61548);
  v48 = v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A61550) + 48);
  *(_QWORD *)v48 = v53;
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 1;
  *(_QWORD *)(v48 + 24) = v38;
  *(_QWORD *)(v48 + 32) = v39;
  *(_BYTE *)(v48 + 40) = (_BYTE)v26;
  *(_QWORD *)(v48 + 48) = v41;
  *(_QWORD *)(v48 + 56) = v40;
  *(_QWORD *)(v48 + 64) = v42;
  *(_BYTE *)(v48 + 72) = (_BYTE)v7;
  *(_QWORD *)(v48 + 80) = v43;
  sub_23B996E5C(v38, v39, (char)v26);
  swift_bridgeObjectRetain();
  sub_23B996E5C(v40, v42, (char)v7);
  swift_bridgeObjectRetain();
  sub_23B989D60(v56, &qword_256A61548);
  sub_23B9967D0(v38, v39, (char)v26);
  swift_bridgeObjectRelease();
  sub_23B9967D0(v40, v42, (char)v7);
  swift_bridgeObjectRelease();
  return sub_23B989D60(v57, &qword_256A61548);
}

uint64_t sub_23BAED12C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23BB36214(a1);
  sub_23B9967E0();
  v3 = sub_23BB89D28();
  v5 = v4;
  v7 = v6 & 1;
  v8 = sub_23BB89CF8();
  v10 = v9;
  v12 = v11 & 1;
  sub_23B9967D0(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_23BB89C08();
  v13 = sub_23BB89D04();
  v37 = v14;
  v38 = v13;
  LOBYTE(v3) = v15;
  v39 = v16;
  swift_release();
  v36 = v3 & 1;
  sub_23B9967D0(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_23BB36564(a1);
  v17 = sub_23BB89D28();
  v19 = v18;
  v21 = v20 & 1;
  sub_23BB89C08();
  v22 = sub_23BB89D04();
  v24 = v23;
  v26 = v25;
  swift_release();
  sub_23B9967D0(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_23BB8A01C();
  v27 = sub_23BB89CD4();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release();
  sub_23B9967D0(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v38;
  *(_QWORD *)(a2 + 8) = v37;
  *(_BYTE *)(a2 + 16) = v36;
  *(_QWORD *)(a2 + 24) = v39;
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v29;
  *(_BYTE *)(a2 + 48) = v31 & 1;
  *(_QWORD *)(a2 + 56) = v33;
  sub_23B996E5C(v38, v37, v36);
  swift_bridgeObjectRetain();
  sub_23B996E5C(v27, v29, v31 & 1);
  swift_bridgeObjectRetain();
  sub_23B9967D0(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  sub_23B9967D0(v38, v37, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAED37C@<X0>(uint64_t a1@<X8>)
{
  return sub_23BAEBDA0(a1);
}

uint64_t sub_23BAED3C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAED3E8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BAECC64(a1, v2 + 16, a2);
}

uint64_t sub_23BAED3F0(uint64_t a1)
{
  swift_retain();
  return a1;
}

unint64_t sub_23BAED418()
{
  unint64_t result;

  result = qword_256A61520;
  if (!qword_256A61520)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB968E0, &type metadata for OnboardingBulletPoint);
    atomic_store(result, (unint64_t *)&qword_256A61520);
  }
  return result;
}

unint64_t sub_23BAED46C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61570;
  if (!qword_256A61570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61558);
    v2[0] = sub_23BAED4F0();
    v2[1] = sub_23B996E1C(&qword_256A5D5A0, &qword_256A5D538, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61570);
  }
  return result;
}

unint64_t sub_23BAED4F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61578;
  if (!qword_256A61578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D668);
    v2[0] = sub_23B996E1C(&qword_256A61580, &qword_256A5D660, MEMORY[0x24BDFBC78]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61578);
  }
  return result;
}

uint64_t sub_23BAED574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAEC86C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BAED57C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_256A61590;
  if (!qword_256A61590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61588);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61598);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A615A0);
    sub_23B996E1C(&qword_256A615A8, &qword_256A615A0, MEMORY[0x24BDFBF10]);
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDFC058], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A61590);
  }
  return result;
}

uint64_t sub_23BAED650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB89524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAED694(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB89524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_23BAED6D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_23BAECB44(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_23BAED6D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A615C0;
  if (!qword_256A615C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A615B8);
    v2[0] = sub_23B996E1C(&qword_256A615C8, &qword_256A615D0, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A615C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryPairedContentViewConstants()
{
  return &type metadata for AccessoryPairedContentViewConstants;
}

uint64_t sub_23BAED76C()
{
  return sub_23B996E1C(&qword_256A615D8, &qword_256A615E0, MEMORY[0x24BDF5428]);
}

uint64_t destroy for CompositeAppView(uint64_t a1)
{
  sub_23B9B7C98();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for CompositeAppView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23B9B7C48();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[3];
  if (v7 != 1)
    v7 = swift_bridgeObjectRetain();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CompositeAppView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23B9B7C48();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23B9B7C98();
  v7 = (uint64_t *)(a1 + 24);
  v8 = a2[3];
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v8 != 1)
    {
      *v7 = v8;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
    v9 = 1;
  }
  else
  {
    if (v8 != 1)
    {
      *v7 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    sub_23BAED920(a1 + 24);
    v9 = a2[3];
  }
  *v7 = v9;
LABEL_9:
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BAED920(uint64_t a1)
{
  destroy for FullScreenLocationDetailView.SelectionType();
  return a1;
}

uint64_t assignWithTake for CompositeAppView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23B9B7C98();
  v5 = (uint64_t *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    if (v6 != 1)
    {
      *v5 = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23BAED920(a1 + 24);
    v6 = 1;
  }
  *v5 = v6;
LABEL_6:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CompositeAppView()
{
  return &type metadata for CompositeAppView;
}

uint64_t sub_23BAEDA00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAEDA10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23BAEDA8C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  sub_23BB8923C();
  return sub_23BA5C6C8();
}

uint64_t sub_23BAEDB04()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v8[4];
  __int128 v9;
  char v10;
  __int128 v11;
  _BYTE v12[8];
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A615E8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BAEDD10((uint64_t)v4);
  v11 = *(__int128 *)((char *)v0 + 24);
  sub_23B990D24((uint64_t)&v11, (uint64_t)&v13, &qword_256A5D740);
  sub_23B990D24((uint64_t)&v11 + 8, (uint64_t)v12, &qword_256A615F0);
  v9 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A615F8);
  sub_23BB8A0E8();
  v9 = *v0;
  v10 = *((_BYTE *)v0 + 16);
  v5 = swift_allocObject();
  v6 = v0[1];
  *(_OWORD *)(v5 + 16) = *v0;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 48) = *((_QWORD *)v0 + 4);
  sub_23BAF14E8((uint64_t)&v9);
  sub_23BAF1518(&v13);
  sub_23BA9F008((uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61600);
  sub_23B9B93C0(&qword_256A61608, &qword_256A615E8, sub_23BAF1550, sub_23BAF1694);
  sub_23BAF196C();
  sub_23B996E1C(&qword_256A616F0, &qword_256A61600, MEMORY[0x24BDED358]);
  sub_23BB89ECC();
  swift_release();
  swift_release();
  swift_release();
  sub_23BA7FDB0(v8[3]);
  return sub_23B989D60((uint64_t)v4, &qword_256A615E8);
}

void sub_23BAEDD10(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  _QWORD v104[13];
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;

  v167 = a1;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61700);
  MEMORY[0x24BDAC7A8](v109, v2);
  v110 = (char *)v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A616D0);
  MEMORY[0x24BDAC7A8](v119, v4);
  v113 = (char *)v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for RequestReceivedMessageView(0);
  MEMORY[0x24BDAC7A8](v112, v6);
  v104[12] = (char *)v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61708);
  MEMORY[0x24BDAC7A8](v106, v8);
  v107 = (char *)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ShareSentMessageView.ShareState(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v104[11] = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v104[2] = (char *)v104 - v15;
  v105 = type metadata accessor for ShareSentMessageView(0);
  MEMORY[0x24BDAC7A8](v105, v16);
  v104[5] = (char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v104[6] = (char *)v104 - v20;
  MEMORY[0x24BDAC7A8](v21, v22);
  v104[3] = (char *)v104 - v23;
  MEMORY[0x24BDAC7A8](v24, v25);
  v104[4] = (char *)v104 - v26;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A616B8);
  MEMORY[0x24BDAC7A8](v117, v27);
  v108 = (char *)v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61710);
  MEMORY[0x24BDAC7A8](v120, v29);
  v122 = (char *)v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61718);
  MEMORY[0x24BDAC7A8](v115, v31);
  v116 = (char *)v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A616A0);
  MEMORY[0x24BDAC7A8](v121, v33);
  v118 = (char *)v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for ShareReceivedMessageView.State(0);
  MEMORY[0x24BDAC7A8](v35, v36);
  v111 = (char *)v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for ShareReceivedMessageView(0);
  MEMORY[0x24BDAC7A8](v114, v38);
  v104[10] = (char *)v104 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61690);
  MEMORY[0x24BDAC7A8](v141, v40);
  v124 = (char *)v104 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  v104[7] = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133, v42);
  v104[9] = (char *)v104 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44, v45);
  v126 = (char *)v104 - v46;
  v104[8] = v47;
  MEMORY[0x24BDAC7A8](v48, v49);
  v134 = (char *)v104 - v50;
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61720);
  MEMORY[0x24BDAC7A8](v142, v51);
  v144 = (char *)v104 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61728);
  MEMORY[0x24BDAC7A8](v136, v53);
  v138 = (char *)v104 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61678);
  MEMORY[0x24BDAC7A8](v143, v55);
  v139 = (char *)v104 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61668);
  MEMORY[0x24BDAC7A8](v166, v57);
  v140 = (char *)v104 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for FullScreenLocationDetailView(0);
  MEMORY[0x24BDAC7A8](v137, v59);
  v129 = (char *)v104 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61, v62);
  v131 = (char *)v104 - v63;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F3D0);
  MEMORY[0x24BDAC7A8](v64, v65);
  v130 = (char *)v104 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for DetailsAppView.State(0);
  MEMORY[0x24BDAC7A8](v67, v68);
  v154 = (char *)v104 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for DetailsAppView(0);
  MEMORY[0x24BDAC7A8](v148, v70);
  v132 = (char *)v104 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61730);
  MEMORY[0x24BDAC7A8](v145, v72);
  v147 = (char *)v104 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61648);
  MEMORY[0x24BDAC7A8](v158, v74);
  v150 = (char *)v104 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for QuickSendAppView(0);
  MEMORY[0x24BDAC7A8](v146, v76);
  v128 = (char *)v104 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61638);
  MEMORY[0x24BDAC7A8](v153, v78);
  v127 = (char *)v104 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61738);
  MEMORY[0x24BDAC7A8](v163, v80);
  v165 = (char *)v104 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61740);
  MEMORY[0x24BDAC7A8](v155, v82);
  v157 = (char *)v104 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61748);
  MEMORY[0x24BDAC7A8](v149, v84);
  v151 = (char *)v104 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61628);
  MEMORY[0x24BDAC7A8](v156, v86);
  v152 = (char *)v104 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61618);
  MEMORY[0x24BDAC7A8](v164, v88);
  v159 = (char *)v104 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v90, v91);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61750);
  MEMORY[0x24BDAC7A8](v92, v93);
  v123 = (char *)v104 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v95, v96);
  v125 = (char *)v104 - v97;
  v98 = type metadata accessor for CompositeAppViewState(0);
  MEMORY[0x24BDAC7A8](v98, v99);
  v101 = *v1;
  v100 = v1[1];
  v135 = v1;
  v102 = type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  v161 = v101;
  v162 = v100;
  v160 = v102;
  sub_23BB89308();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  swift_release();
  v103 = (char *)&loc_23BAEE73C + *((int *)qword_23BAF07C0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BAEE74C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *v1;
  *(_QWORD *)(v0 + 488) = *v1;
  *(_QWORD *)(v2 - 256) = v3;
  sub_23BB89308();
  sub_23B99AE00(*(_QWORD *)(v0 + 496));
  swift_release();
  v4 = sub_23BB89308();
  *(_QWORD *)(v2 - 240) = &unk_256A617E8;
  *(_QWORD *)(v2 - 232) = v4;
  *(_QWORD *)(v2 - 224) = sub_23B9B9118;
  *(_QWORD *)(v2 - 216) = v4;
  *(_QWORD *)(v2 - 208) = sub_23B9B9120;
  *(_QWORD *)(v2 - 200) = v4;
  *(_QWORD *)(v2 - 192) = sub_23BB75EDC;
  *(_QWORD *)(v2 - 184) = 0;
  *(_QWORD *)(v2 - 176) = sub_23B9B9128;
  *(_QWORD *)(v2 - 168) = v4;
  *(_QWORD *)(v2 - 160) = &unk_256A617F0;
  *(_QWORD *)(v2 - 152) = v4;
  *(_QWORD *)(v2 - 144) = &unk_256A617F8;
  *(_QWORD *)(v2 - 136) = v4;
  *(_QWORD *)(v2 - 128) = &unk_256A61800;
  *(_QWORD *)(v2 - 120) = v4;
  *(_QWORD *)(v2 - 112) = sub_23B9B9268;
  *(_QWORD *)(v2 - 104) = v4;
  v5 = type metadata accessor for DetailsAppView.Style(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  swift_retain();
  v7 = *(_QWORD *)(v0 + 304);
  v6(v7, 1, 1, v5);
  v8 = *(_QWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 608) = *(_OWORD *)(v8 + 24);
  sub_23B990D24(v0 + 608, v0 + 672, &qword_256A5D740);
  sub_23B990D24((v0 + 608) | 8, v2 - 248, &qword_256A615F0);
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v8;
  *(_OWORD *)(v9 + 32) = v10;
  v11 = *(_QWORD *)(v0 + 488);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v9 + 56) = v11;
  swift_retain_n();
  sub_23B9B7C48();
  sub_23BAF1518((uint64_t *)(v0 + 672));
  sub_23BA9F008(v2 - 248);
  sub_23BB89308();
  v12 = sub_23BB071FC();
  swift_release();
  v13 = *(_QWORD **)(v0 + 320);
  sub_23BA8F524((uint64_t *)(v2 - 256), *(_QWORD *)(v0 + 496), (_OWORD *)(v2 - 240), v7, (uint64_t)sub_23BAF1F3C, v9, v12 & 1, v13);
  sub_23B989CE8((uint64_t)v13, *(_QWORD *)(v0 + 440), type metadata accessor for DetailsAppView);
  swift_storeEnumTagMultiPayload();
  sub_23B97D0C8(&qword_256A61650, type metadata accessor for QuickSendAppView, (uint64_t)&unk_23BB957E8);
  sub_23B97D0C8(&qword_256A61658, type metadata accessor for DetailsAppView, (uint64_t)&unk_23BB92720);
  v14 = *(_QWORD *)(v0 + 464);
  sub_23BB89944();
  sub_23B989EFC(v14, *(_QWORD *)(v0 + 520), &qword_256A61648);
  swift_storeEnumTagMultiPayload();
  sub_23BAF1574();
  sub_23BAF15F8();
  v15 = *(_QWORD *)(v0 + 536);
  sub_23BB89944();
  sub_23B989D60(v14, &qword_256A61648);
  sub_23B989EFC(v15, *(_QWORD *)(v0 + 584), &qword_256A61618);
  swift_storeEnumTagMultiPayload();
  sub_23BAF1550();
  sub_23BAF1694();
  sub_23BB89944();
  sub_23B989D60(v15, &qword_256A61618);
  return sub_23B989D9C((uint64_t)v13, type metadata accessor for DetailsAppView);
}

uint64_t sub_23BAF07D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);

  v48 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v3, v4);
  v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v43 = (uint64_t)&v39 - v8;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v39 - v15;
  type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  v17 = sub_23BB89308() + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v17, (uint64_t)v16, &qword_256A59C70);
  swift_release();
  v18 = type metadata accessor for CompositeAppViewInitialInfo();
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  if (v49(v16, 1, v18) == 1)
  {
    sub_23B989D60((uint64_t)v16, &qword_256A59C70);
    v45 = 0;
    v46 = 0;
    v44 = 0;
  }
  else
  {
    v19 = *(_QWORD *)v16;
    v45 = *((_QWORD *)v16 + 1);
    v46 = v19;
    v44 = v16[16];
    swift_bridgeObjectRetain();
    sub_23B989D9C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }
  v20 = sub_23BB89308() + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v20, (uint64_t)v12, &qword_256A59C70);
  swift_release();
  if (v49(v12, 1, v18) == 1)
  {
    sub_23B989D60((uint64_t)v12, &qword_256A59C70);
    v41 = 0;
    v42 = 0;
  }
  else
  {
    v21 = *((_QWORD *)v12 + 3);
    v41 = *((_QWORD *)v12 + 4);
    v42 = v21;
    swift_bridgeObjectRetain();
    sub_23B989D9C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }
  v22 = sub_23BB89308() + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  v23 = v22;
  v24 = v43;
  sub_23B989EFC(v23, v43, &qword_256A59C70);
  swift_release();
  if (v49((char *)v24, 1, v18) == 1)
  {
    sub_23B989D60(v24, &qword_256A59C70);
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v40 = *(_QWORD *)(v24 + 40);
    swift_bridgeObjectRetain();
    sub_23B989D9C(v24, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }
  v25 = (uint64_t)v47;
  v26 = sub_23BB89308() + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v26, v25, &qword_256A59C70);
  swift_release();
  if (v49((char *)v25, 1, v18) == 1)
  {
    sub_23B989D60(v25, &qword_256A59C70);
    LODWORD(v49) = 1;
  }
  else
  {
    LODWORD(v49) = *(unsigned __int8 *)(v25 + *(int *)(v18 + 32));
    sub_23B989D9C(v25, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }
  v27 = sub_23BB89308();
  v28 = *(_QWORD *)(v27 + 32);
  v47 = *(char **)(v27 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v29 = sub_23BB89308();
  v31 = *(_QWORD *)(v29 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler + 8);
  sub_23B9B7598(v31);
  swift_release();
  v32 = sub_23BB89308();
  v33 = *(_QWORD *)(v32 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
  v34 = *(_QWORD *)(v32 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler + 8);
  sub_23B9B7598(v33);
  swift_release();
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = v47;
  v35[3] = v28;
  v35[4] = v31;
  v35[5] = v30;
  v35[6] = v33;
  v35[7] = v34;
  *(_QWORD *)a2 = sub_23BAF1A40;
  *(_QWORD *)(a2 + 8) = v35;
  *(_BYTE *)(a2 + 16) = 0;
  v36 = v46;
  *(_QWORD *)(a2 + 24) = v48;
  *(_QWORD *)(a2 + 32) = v36;
  *(_QWORD *)(a2 + 40) = v45;
  *(_BYTE *)(a2 + 48) = v44;
  v37 = v41;
  *(_QWORD *)(a2 + 56) = v42;
  *(_QWORD *)(a2 + 64) = v37;
  *(_QWORD *)(a2 + 72) = v40;
  *(_BYTE *)(a2 + 80) = (_BYTE)v49;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAF0D08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD v25[7];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE98);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61830);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v25 - v13;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)v25 - v17;
  sub_23BB89338();
  sub_23BB8A2F8();
  sub_23BB8953C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v14, v6, v2);
  v19 = &v14[*(int *)(v7 + 36)];
  v20 = v25[5];
  *((_OWORD *)v19 + 4) = v25[4];
  *((_OWORD *)v19 + 5) = v20;
  *((_OWORD *)v19 + 6) = v25[6];
  v21 = v25[1];
  *(_OWORD *)v19 = v25[0];
  *((_OWORD *)v19 + 1) = v21;
  v22 = v25[3];
  *((_OWORD *)v19 + 2) = v25[2];
  *((_OWORD *)v19 + 3) = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_23B990D24((uint64_t)v14, (uint64_t)v18, &qword_256A61830);
  sub_23B989EFC((uint64_t)v18, (uint64_t)v10, &qword_256A61830);
  *(_QWORD *)a1 = 1;
  *(_WORD *)(a1 + 8) = 256;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61838);
  sub_23B989EFC((uint64_t)v10, a1 + *(int *)(v23 + 48), &qword_256A61830);
  sub_23B989D60((uint64_t)v18, &qword_256A61830);
  return sub_23B989D60((uint64_t)v10, &qword_256A61830);
}

void sub_23BAF0F04(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CompositeAppViewInitialInfo();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  v22[1] = v13;
  v22[2] = v12;
  v14 = sub_23BB89308() + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v14, (uint64_t)v6, &qword_256A59C70);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23B989D60((uint64_t)v6, &qword_256A59C70);
    if (qword_256A58E00 != -1)
      swift_once();
    v15 = sub_23BB891C4();
    __swift_project_value_buffer(v15, (uint64_t)qword_256A73E80);
    v16 = sub_23BB891AC();
    v17 = sub_23BB8ABD4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v24 = v19;
      *(_DWORD *)v18 = 136315138;
      v25 = sub_23BB7B69C(1702060386, 0xE400000000000000, (uint64_t *)&v24);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v16, v17, "CompositeAppViewModel: %s - Can't run action with no initialInfo", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v19, -1, -1);
      MEMORY[0x24260D9B4](v18, -1, -1);
    }

  }
  else
  {
    sub_23B989CA4((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    if ((v23 & 0x10) != 0)
    {
      v21 = *((_QWORD *)v11 + 5);
      v24 = *(_OWORD *)(a1 + 3);
      v25 = v21;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A615F8);
      sub_23BB8A0DC();
    }
    else if ((v23 & 0x20) != 0)
    {
      sub_23BB89308();
      v20 = swift_bridgeObjectRetain();
      sub_23BB2AB04(v20, 0, 0);
      swift_release();
      swift_bridgeObjectRelease();
    }
    sub_23B989D9C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }
}

uint64_t sub_23BAF1250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  id v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23BB8C510;
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(void **)(a2 + 80);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(v3 + 56) = v4;
  *(_BYTE *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 72) = v6;
  *(_QWORD *)(v3 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A615F8);
  return sub_23BB8A0DC();
}

uint64_t sub_23BAF131C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23BAF1388()
{
  uint64_t *v0;
  _QWORD *v1;

  type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  v0[7] = sub_23BB89308();
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23BAF1434;
  return sub_23BB73EE8(v0[2], 1);
}

uint64_t sub_23BAF1434()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BAF148C()
{
  return objectdestroyTm_13();
}

uint64_t sub_23BAF1494()
{
  sub_23BAF19B8();
  return sub_23BB894B8();
}

uint64_t sub_23BAF14E8(uint64_t a1)
{
  sub_23B9B7C48();
  return a1;
}

uint64_t *sub_23BAF1518(uint64_t *a1)
{
  sub_23BAF1540(*a1);
  return a1;
}

uint64_t sub_23BAF1540(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23BAF1550()
{
  return sub_23B9B93C0(&qword_256A61610, &qword_256A61618, (uint64_t (*)(void))sub_23BAF1574, (uint64_t (*)(void))sub_23BAF15F8);
}

unint64_t sub_23BAF1574()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61620;
  if (!qword_256A61620)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61628);
    v2[0] = sub_23BABE5CC();
    v2[1] = sub_23B996E1C(&qword_256A61630, &qword_256A61638, MEMORY[0x24BDF4750]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61620);
  }
  return result;
}

unint64_t sub_23BAF15F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61640;
  if (!qword_256A61640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61648);
    v2[0] = sub_23B97D0C8(&qword_256A61650, type metadata accessor for QuickSendAppView, (uint64_t)&unk_23BB957E8);
    v2[1] = sub_23B97D0C8(&qword_256A61658, type metadata accessor for DetailsAppView, (uint64_t)&unk_23BB92720);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61640);
  }
  return result;
}

uint64_t sub_23BAF1694()
{
  return sub_23B9B93C0(&qword_256A61660, &qword_256A61668, (uint64_t (*)(void))sub_23BAF16B8, sub_23BAF1780);
}

unint64_t sub_23BAF16B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61670;
  if (!qword_256A61670)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61678);
    v2[0] = sub_23B97D0C8(&qword_256A5A778, type metadata accessor for FullScreenLocationDetailView, (uint64_t)&unk_23BB8D558);
    v2[1] = sub_23BAF173C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61670);
  }
  return result;
}

unint64_t sub_23BAF173C()
{
  unint64_t result;

  result = qword_256A61680;
  if (!qword_256A61680)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB92B24, &type metadata for StatusMessageView);
    atomic_store(result, (unint64_t *)&qword_256A61680);
  }
  return result;
}

uint64_t sub_23BAF1780()
{
  return sub_23B9B93C0(&qword_256A61688, &qword_256A61690, (uint64_t (*)(void))sub_23BAF17A4, (uint64_t (*)(void))sub_23BAF18A4);
}

unint64_t sub_23BAF17A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61698;
  if (!qword_256A61698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A616A0);
    v2[0] = sub_23B97D0C8(&qword_256A616A8, type metadata accessor for ShareReceivedMessageView, (uint64_t)&unk_23BB8D3B0);
    v2[1] = sub_23BAF1828();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61698);
  }
  return result;
}

unint64_t sub_23BAF1828()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A616B0;
  if (!qword_256A616B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A616B8);
    v2[0] = sub_23B97D0C8(&qword_256A616C0, type metadata accessor for ShareSentMessageView, (uint64_t)&unk_23BB93B50);
    v2[1] = v2[0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A616B0);
  }
  return result;
}

unint64_t sub_23BAF18A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A616C8;
  if (!qword_256A616C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A616D0);
    v2[0] = sub_23B97D0C8(&qword_256A616D8, type metadata accessor for RequestReceivedMessageView, (uint64_t)&unk_23BB8D228);
    v2[1] = sub_23BAF1928();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A616C8);
  }
  return result;
}

unint64_t sub_23BAF1928()
{
  unint64_t result;

  result = qword_256A616E0;
  if (!qword_256A616E0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8D7E8, &type metadata for RequestSentMessageView);
    atomic_store(result, (unint64_t *)&qword_256A616E0);
  }
  return result;
}

unint64_t sub_23BAF196C()
{
  unint64_t result;

  result = qword_256A616E8;
  if (!qword_256A616E8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8D520, &type metadata for FullScreenLocationDetailView.SelectionType);
    atomic_store(result, (unint64_t *)&qword_256A616E8);
  }
  return result;
}

uint64_t sub_23BAF19B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAF07D8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BAF19B8()
{
  unint64_t result;

  result = qword_256A616F8;
  if (!qword_256A616F8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8D708, &type metadata for FullScreenLocationDetailViewStandalone);
    atomic_store(result, (unint64_t *)&qword_256A616F8);
  }
  return result;
}

uint64_t sub_23BAF19FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

_QWORD *sub_23BAF1A40()
{
  uint64_t *v0;

  return sub_23B9B4D00(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_23BAF1A50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  return swift_release();
}

uint64_t sub_23BAF1ABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = type metadata accessor for CompositeAppViewState(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v11 - v8;
  sub_23B989CE8(a1, (uint64_t)&v11 - v8, type metadata accessor for CompositeAppViewState);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23B989CE8((uint64_t)v9, (uint64_t)v5, type metadata accessor for CompositeAppViewState);
  swift_retain();
  sub_23BB8923C();
  return sub_23B989D9C((uint64_t)v9, type metadata accessor for CompositeAppViewState);
}

uint64_t sub_23BAF1BB8(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_23BAF1BE0()
{
  return objectdestroyTm_13();
}

uint64_t sub_23BAF1BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B97C964;
  return sub_23BAF131C(a1, v1 + 16);
}

uint64_t sub_23BAF1C3C(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B990D68;
  return sub_23BB76288(a1, a2);
}

uint64_t sub_23BAF1C9C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_23BAF1D44()
{
  return objectdestroyTm_13();
}

uint64_t sub_23BAF1D4C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A615F8);
  return sub_23BB8A0DC();
}

uint64_t sub_23BAF1D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 56) & ~v2;
  sub_23B9B7C98();
  if (*(_QWORD *)(v0 + 40) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 44);
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_23BAF1EB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) - 8) + 80);
  return sub_23BAF1250(v0 + 16, v0 + ((v1 + 56) & ~v1));
}

uint64_t sub_23BAF1EE8()
{
  return objectdestroyTm_13();
}

uint64_t objectdestroyTm_13()
{
  uint64_t v0;

  sub_23B9B7C98();
  if (*(_QWORD *)(v0 + 40) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23BAF1F3C()
{
  uint64_t v0;

  sub_23BAF0F04((uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23BAF1F48()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A615E8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61600);
  sub_23B9B93C0(&qword_256A61608, &qword_256A615E8, sub_23BAF1550, sub_23BAF1694);
  sub_23BAF196C();
  sub_23B996E1C(&qword_256A616F0, &qword_256A61600, MEMORY[0x24BDED358]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for ShareSentMessageMapView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for ShareSentMessageMapView(uint64_t a1)
{

}

uint64_t assignWithCopy for ShareSentMessageMapView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = v4;

  return a1;
}

uint64_t assignWithTake for ShareSentMessageMapView(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSentMessageMapView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareSentMessageMapView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSentMessageMapView()
{
  return &type metadata for ShareSentMessageMapView;
}

uint64_t sub_23BAF2178()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BAF2188@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v42 = a2;
  v43 = a3;
  v41 = a1;
  v3 = sub_23BB88FCC();
  MEMORY[0x24BDAC7A8](v3, v4);
  v37[1] = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB88F9C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61840);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61848);
  v39 = *(_QWORD *)(v21 - 8);
  v40 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61850);
  MEMORY[0x24BDAC7A8](v38, v25);
  v27 = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88F90();
  sub_23BB88F48();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_23BB88F30();
  v28 = sub_23BB88F3C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
  v46 = MEMORY[0x24BEE4AF8];
  sub_23B97D0C8((unint64_t *)&qword_256A5D0D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFBD48], MEMORY[0x24BDFBD58]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
  sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
  sub_23BB8AD84();
  v44 = v41;
  v45 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D150);
  sub_23BAF25D4();
  sub_23BB88EE8();
  sub_23BB89BA8();
  sub_23BB892A8();
  v46 = v29;
  v47 = v30;
  v48 = v31;
  v49 = v32;
  v50 = 0;
  sub_23BB89A4C();
  sub_23BAF2650();
  sub_23BB89D4C();
  sub_23B989D60((uint64_t)v20, &qword_256A61840);
  v34 = v39;
  v33 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v27, v24, v40);
  v27[*(int *)(v38 + 36)] = 0;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v33);
  v35 = v43;
  sub_23BAF26EC((uint64_t)v27, v43);
  *(_BYTE *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A61880) + 36)) = 0;
  return sub_23B989D60((uint64_t)v27, &qword_256A61850);
}

uint64_t sub_23BAF254C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    sub_23BB89128();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 0;
  }
  else
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 1;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t sub_23BAF25BC@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_23BAF2188(*v1, *((_QWORD *)v1 + 1), a1);
}

uint64_t sub_23BAF25C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAF254C(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_23BAF25D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A61858;
  if (!qword_256A61858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D150);
    v2 = sub_23B996E1C(&qword_256A61860, &qword_256A5D158, MEMORY[0x24BDFBF40]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDFC058], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A61858);
  }
  return result;
}

unint64_t sub_23BAF2650()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61868;
  if (!qword_256A61868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61840);
    v2[0] = sub_23B996E1C(&qword_256A61870, &qword_256A61878, MEMORY[0x24BDFBC78]);
    v2[1] = sub_23B97D0C8((unint64_t *)&qword_256A5AF28, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61868);
  }
  return result;
}

uint64_t sub_23BAF26EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BAF2738()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61888;
  if (!qword_256A61888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61880);
    v2[0] = sub_23BAF27BC();
    v2[1] = sub_23B996E1C(&qword_256A5D120, &qword_256A5D128, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61888);
  }
  return result;
}

unint64_t sub_23BAF27BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A61890;
  if (!qword_256A61890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61850);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61840);
    v2[3] = sub_23BAF2650();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23BA223CC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61890);
  }
  return result;
}

uint64_t sub_23BAF2858(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for MockError(uint64_t a1)
{
  return sub_23BAF2880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23BAF2880(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12FindMyUICore9MockErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BAF2858(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MockError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23BAF2858(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23BAF2880(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MockError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23BAF2880(v4, v5, v6);
  return a1;
}

uint64_t _s19BeaconsStreamChangeOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s19BeaconsStreamChangeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BAF2A04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23BAF2A1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MockError()
{
  return &type metadata for MockError;
}

id sub_23BAF2A44()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82BB8]), sel_init);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_23BAF2AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    sub_23BB88B1C();
    swift_allocObject();
    v1 = sub_23BB88B10();
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t OnboardingSessionLive.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_23BB891B8();
  return v0;
}

uint64_t OnboardingSessionLive.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_23BB891B8();
  return v0;
}

uint64_t sub_23BAF2BF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[17] = a1;
  v2[18] = v1;
  v3 = sub_23BB88984();
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v4 = sub_23BB88E40();
  v2[22] = v4;
  v2[23] = *(_QWORD *)(v4 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

id sub_23BAF2C88()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_aa_primaryAppleAccount);

    if (v3 && (v4 = sub_23BB06F64(), v3, v4 == (id)4))
    {
      v5 = *(id *)(v0 + 136);
      v6 = sub_23BB891AC();
      v7 = sub_23BB8ABEC();
      v8 = os_log_type_enabled(v6, v7);
      v9 = *(void **)(v0 + 136);
      if (v8)
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        v19 = v11;
        *(_DWORD *)v10 = 136315138;
        sub_23BB889CC();
        sub_23B9C92A0();
        v12 = sub_23BB8B150();
        *(_QWORD *)(v0 + 128) = sub_23BB7B69C(v12, v13, &v19);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23B979000, v6, v7, "OnboardingSessionLive: Starting pairing session for identifier: %s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v11, -1, -1);
        MEMORY[0x24260D9B4](v10, -1, -1);

      }
      else
      {

      }
      v15 = sub_23BAF2A44();
      *(_QWORD *)(v0 + 208) = v15;
      v16 = sub_23BB8899C();
      *(_QWORD *)(v0 + 216) = v16;
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23BAF2F90;
      v17 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v18 = (_QWORD *)(v0 + 80);
      v18[1] = 0x40000000;
      v18[2] = sub_23BAF33BC;
      v18[3] = &block_descriptor_2;
      v18[4] = v17;
      objc_msgSend(v15, sel_initiatePairingAndLocateAccessoryWith_completion_, v16, v18);
      return (id)swift_continuation_await();
    }
    else
    {
      sub_23BAF41B0();
      swift_allocError();
      *v14 = 0;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BAF2F90()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23BAF2FF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD, uint64_t);

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 232) = v3;

  if (!v3)
    goto LABEL_4;
  v4 = v3;
  if ((sub_23BB885D0() & 1) != 0)
  {

LABEL_4:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v6 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 240) = sub_23BAF2AAC();
  sub_23BAF345C(v4, v6);
  sub_23BB88BDC();
  swift_allocObject();
  v7 = sub_23BB88BD0();
  *(_QWORD *)(v0 + 248) = v7;
  v9 = (uint64_t (*)(_QWORD, uint64_t))((int)*MEMORY[0x24BE31E08] + MEMORY[0x24BE31E08]);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v8;
  *v8 = v0;
  v8[1] = sub_23BAF311C;
  return v9(*(_QWORD *)(v0 + 200), v7);
}

uint64_t sub_23BAF311C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_23BAF3190()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  id v22;

  v1 = *(void **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 152);
  sub_23BB88E1C();
  v9 = v8;
  sub_23BB88E28();
  v11 = v10;
  sub_23BB88E04();
  v13 = v12;
  sub_23BB88DC8();
  v15 = v14;
  sub_23BB88DBC();
  v17 = v16;
  sub_23BB88DE0();
  v19 = v18;
  sub_23BB88E34();
  sub_23BB88900();
  v20 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v21 = (void *)sub_23BB888D0();
  v22 = objc_msgSend(v20, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v21, v9, v11, v13, v15, v17, 0.0, 0.0, v19, 0);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v22);
}

uint64_t sub_23BAF32EC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 208);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAF3350()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 232);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAF33BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    swift_allocError();
    *v5 = a2;
    v6 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a3;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a3;
    sub_23BAF41F4((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

void sub_23BAF345C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v22 = sub_23BB88B88();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB88AEC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDB0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BB88984();
  objc_msgSend(a1, sel_coordinate, MEMORY[0x24BDAC7A8](v16, v17).n128_f64[0]);
  objc_msgSend(a1, sel_coordinate);
  objc_msgSend(a1, sel_horizontalAccuracy);
  objc_msgSend(a1, sel_verticalAccuracy);
  objc_msgSend(a1, sel_speed);
  objc_msgSend(a1, sel_altitude);
  v18 = objc_msgSend(a1, sel_floor);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_level);

  }
  v20 = objc_msgSend(a1, sel_timestamp, v22, v23);
  sub_23BB8896C();

  v21 = sub_23BB88EA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v15, 1, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BE31D98], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BE31EF0], v22);
  sub_23BB88E10();

}

uint64_t sub_23BAF370C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 136) = a2;
  *(_QWORD *)(v4 + 144) = v3;
  *(_BYTE *)(v4 + 192) = a3;
  *(_QWORD *)(v4 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_23BAF372C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;

  v1 = v0 + 80;
  v2 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 152) = OBJC_IVAR____TtC12FindMyUICore21OnboardingSessionLive_logger;
  v3 = v2;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 136);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v18 = v9;
    sub_23BB889CC();
    sub_23B9C92A0();
    v1 = v0 + 80;
    v10 = sub_23BB8B150();
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v10, v11, &v18);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "OnboardingSessionLive: Getting pairing status for identifier: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);

  }
  else
  {

  }
  v12 = *(unsigned __int8 *)(v0 + 192);
  *(_QWORD *)(v0 + 160) = OBJC_IVAR___FMUIDiscoveredAccessory_identifier;
  v13 = objc_allocWithZone(MEMORY[0x24BE82BC0]);
  v14 = (void *)sub_23BB8899C();
  v15 = objc_msgSend(v13, sel_initWithIdentifier_, v14);
  *(_QWORD *)(v0 + 168) = v15;

  objc_msgSend(v15, sel_setWantsLostModeInfo_, v12);
  v16 = sub_23BAF2A44();
  *(_QWORD *)(v0 + 176) = v16;
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23BAF39B0;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_23BAF3D74;
  *(_QWORD *)(v0 + 104) = &block_descriptor_5;
  objc_msgSend(v16, sel_pairingStatusWithRequest_completion_, v15, v1);
  return swift_continuation_await();
}

uint64_t sub_23BAF39B0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23BAF3A10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v1 = *(void **)(v0 + 136);
  v2 = *(void **)(v0 + 120);

  v3 = v1;
  v4 = v2;
  v5 = v3;
  v6 = v4;
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 136);
    v10 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v36 = v35;
    *(_DWORD *)v10 = 136315394;
    sub_23BB889CC();
    sub_23B9C92A0();
    v11 = sub_23BB8B150();
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v11, v12, &v36);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)(v0 + 80) = objc_msgSend(v6, sel_pairingStatus);
    type metadata accessor for SPAccessoryPairingStatus(0);
    v13 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v13, v14, &v36);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v7, v8, "OnboardingSessionLive: Pairing Status for ID: %s: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v35, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);

  }
  else
  {
    v15 = *(void **)(v0 + 136);

  }
  v16 = objc_msgSend(v6, sel_pairingStatus);
  if ((unint64_t)v16 >= 7)
    v17 = 0;
  else
    v17 = (char)v16;
  v18 = objc_msgSend(v6, sel_lostModeInfo);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, sel_phoneNumber);
    if (v20)
    {
      v21 = v20;
      v22 = sub_23BB8A7B4();
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v27 = objc_msgSend(v19, sel_email);
    v28 = *(void **)(v0 + 168);
    if (v27)
    {
      v29 = v27;
      v30 = sub_23BB8A7B4();
      v32 = v31;

    }
    else
    {

      v30 = 0;
      v32 = 0;
    }
    v33 = *(_QWORD *)(v0 + 128);
    *(_BYTE *)v33 = v17;
    *(_QWORD *)(v33 + 8) = v22;
    *(_QWORD *)(v33 + 16) = v24;
    *(_QWORD *)(v33 + 24) = v30;
    *(_QWORD *)(v33 + 32) = v32;
  }
  else
  {
    v25 = *(void **)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 128);

    *(_BYTE *)v26 = v17;
    *(_OWORD *)(v26 + 8) = xmmword_23BB8F630;
    *(_QWORD *)(v26 + 24) = 0;
    *(_QWORD *)(v26 + 32) = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAF3D2C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 168);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAF3D74(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v7;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    v7 = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t OnboardingSessionLive.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore21OnboardingSessionLive_logger;
  v2 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t OnboardingSessionLive.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore21OnboardingSessionLive_logger;
  v2 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BAF3EB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23BAF3F00;
  return sub_23BAF2BF0(a1);
}

uint64_t sub_23BAF3F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23BAF3F58()
{
  return type metadata accessor for OnboardingSessionLive();
}

uint64_t type metadata accessor for OnboardingSessionLive()
{
  uint64_t result;

  result = qword_256A618D0;
  if (!qword_256A618D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BAF3F9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB891C4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OnboardingSessionLive()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnboardingSessionLive.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_23BAF4028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8884C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88840();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_23BA86FBC((uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v10)
  {
    v11 = v10;
    v12 = (void *)sub_23BB88828();
    v13 = (void *)sub_23BB8A6B8();
    objc_msgSend(v11, sel_openSensitiveURL_withOptions_, v12, v13);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_23BAF41B0()
{
  unint64_t result;

  result = qword_256A61970;
  if (!qword_256A61970)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98DD0, &type metadata for PairingError);
    atomic_store(result, &qword_256A61970);
  }
  return result;
}

uint64_t sub_23BAF41F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for Actions()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Actions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v3 = *(_QWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for Actions(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_OWORD *assignWithTake for Actions(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t sub_23BAF4634()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 64);
  sub_23B9B7598(v1);
  return v1;
}

uint64_t sub_23BAF46B4@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v3 + 72);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23BA192A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, uint64_t))v6;
  return sub_23B9B7598(v4);
}

uint64_t sub_23BAF4764(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char, char, uint64_t, uint64_t, char);
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BA1929C;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23BAF6388();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

uint64_t sub_23BAF4870()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__shouldShowAlert);
}

uint64_t sub_23BAF48E4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__shouldShowAlert);
  return result;
}

uint64_t sub_23BAF4960()
{
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BAF49F0(uint64_t result, char a2)
{
  *(_BYTE *)(result + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__shouldShowAlert) = a2;
  return result;
}

uint64_t sub_23BAF4A00()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__subtitle);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BAF4A88@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__subtitle + 8);
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__subtitle);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAF4B0C()
{
  swift_getKeyPath();
  sub_23BAF6388();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BAF4BB0()
{
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  swift_getKeyPath();
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BAF4CB0()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state);
}

uint64_t sub_23BAF4D24@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state);
  return result;
}

uint64_t sub_23BAF4DA0()
{
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BAF4E30()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    if (qword_256A58DB0 != -1)
      swift_once();
    v2 = (void *)qword_256A73DF8;
    if (qword_256A73DF8)
      goto LABEL_11;
LABEL_12:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_13;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_12;
LABEL_11:
  swift_bridgeObjectRetain();
  v3 = v2;
  v4 = v3;
LABEL_13:
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  v10 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_23BAF5070()
{
  _QWORD *v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t result;

  v1 = *(_QWORD *)(v0[7] + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    v3 = v0[5];
    v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4) & 1) != 0)
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v2 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_17;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v2 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_17;
    }
LABEL_18:
    v7 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v7, sel_mainBundle);
    v5 = 0;
    goto LABEL_19;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_18;
LABEL_17:
  swift_bridgeObjectRetain();
  v5 = v2;
  v6 = v5;
LABEL_19:
  v8 = v5;
  v9 = (void *)sub_23BB8A784();
  v10 = (void *)sub_23BB8A784();
  v11 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v9, 0, v10);

  v12 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t sub_23BAF5368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  void (*v7)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v0;
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state) == 5)
  {
    swift_getKeyPath();
    v13 = v0;
    sub_23BB88A20();
    result = swift_release();
    v7 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v0 + 64);
    if (v7)
    {
      swift_retain();
      v7(1, 1, 0, 0, 1);
      return sub_23B9BD73C((uint64_t)v7);
    }
  }
  else
  {
    v8 = sub_23BB8AA18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    sub_23BB8A9F4();
    swift_retain();
    v9 = sub_23BB8A9E8();
    v10 = (_QWORD *)swift_allocObject();
    v11 = MEMORY[0x24BEE6930];
    v10[2] = v9;
    v10[3] = v11;
    v10[4] = v1;
    sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A61AA0, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_23BAF550C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a4;
  sub_23BB8A9F4();
  v4[13] = sub_23BB8A9E8();
  v4[14] = sub_23BB8A988();
  v4[15] = v5;
  return swift_task_switch();
}

uint64_t sub_23BAF5578()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[12];
  swift_getKeyPath();
  v2 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 24) = 3;
  v0[16] = OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel___observationRegistrar;
  v0[2] = v1;
  v0[17] = sub_23BAF6388();
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v5 = v1[7];
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 40) + *(_QWORD *)(v4 + 40));
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_23BAF5688;
  return v8(v5, v3, v4);
}

uint64_t sub_23BAF5688(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BAF56F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, BOOL);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = *(void **)(v0 + 152);
  swift_release();
  v3 = v2;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 152);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v7 = 136315138;
    *(_QWORD *)(v1 + 88) = v6;
    v9 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E488);
    v10 = sub_23BB8A7D8();
    *(_QWORD *)(v1 + 32) = sub_23BB7B69C(v10, v11, &v21);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "AccessoryOnboarding: Pairing completed successfully, location? %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)(v1 + 96);
  swift_getKeyPath();
  v13 = swift_task_alloc();
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = 5;
  *(_QWORD *)(v1 + 72) = v12;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  *(_QWORD *)(v1 + 80) = v12;
  sub_23BB88A20();
  swift_release();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, BOOL))(v12 + 64);
  if (v14)
  {
    v15 = *(_QWORD *)(v1 + 152);
    swift_retain();
    if (v15)
    {
      objc_msgSend(v3, sel_coordinate);
      v17 = v16;
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    v14(1, 1, v17, v19, v15 == 0);

    sub_23B9BD73C((uint64_t)v14);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23BAF59B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  char v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void *v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 160);
  swift_release();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 160);
  if ((v3 & 1) != 0)
  {

    v5 = *(_BYTE *)(v0 + 168);
    v6 = sub_23BB891AC();
    v7 = sub_23BB8ABEC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      sub_23BAF41B0();
      swift_allocError();
      *v10 = v5;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 64) = v11;
      sub_23BB8ACB8();
      *v9 = v11;
      _os_log_impl(&dword_23B979000, v6, v7, "AccessoryOnboarding: Error pairing: %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v9, -1, -1);
      MEMORY[0x24260D9B4](v8, -1, -1);
    }

    v12 = *(_QWORD *)(v0 + 96);
    swift_getKeyPath();
    v13 = swift_task_alloc();
    *(_QWORD *)(v13 + 16) = v12;
    *(_BYTE *)(v13 + 24) = v5;
    *(_QWORD *)(v0 + 56) = v12;
    sub_23BB88A14();
    swift_release();
    swift_task_dealloc();

  }
  else
  {

    v14 = v4;
    v15 = v4;
    v16 = sub_23BB891AC();
    v17 = sub_23BB8ABEC();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void **)(v0 + 160);
    if (v18)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v20 = 138412290;
      v22 = v19;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 48) = v23;
      sub_23BB8ACB8();
      *v21 = v23;

      _os_log_impl(&dword_23B979000, v16, v17, "AccessoryOnboarding: Error pairing: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v21, -1, -1);
      MEMORY[0x24260D9B4](v20, -1, -1);

    }
    else
    {

    }
    v24 = *(void **)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 96);
    swift_getKeyPath();
    v26 = swift_task_alloc();
    *(_QWORD *)(v26 + 16) = v25;
    *(_BYTE *)(v26 + 24) = 1;
    *(_QWORD *)(v0 + 40) = v25;
    sub_23BB88A14();
    swift_release();

    swift_task_dealloc();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAF5DC0()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t);

  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  result = swift_release();
  v2 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))(v0 + 64);
  if (v2)
  {
    swift_retain();
    v2(1, 0, 0, 0, 1);
    return sub_23B9BD73C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_23BAF5E88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 < 3)
  {
    v2 = (3u >> (v1 & 7)) & 1;
    swift_getKeyPath();
    sub_23BAF6388();
    sub_23BB88A20();
    swift_release();
    v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state);
    if ((v3 - 2) >= 2)
    {
      if (v3 == 4)
        return v2;
      if (v3 != 5)
      {
        if ((_DWORD)v2)
          v4 = 16640;
        else
          v4 = 0x4000;
        if ((_DWORD)v2)
          v5 = 16641;
        else
          v5 = 16385;
        if ((v3 & 1) != 0)
          return v5;
        else
          return v4;
      }
    }
    if ((_DWORD)v2)
      return 16641;
    else
      return 16385;
  }
  result = sub_23BB8B1C8();
  __break(1u);
  return result;
}

uint64_t sub_23BAF5FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  sub_23B9BD73C(*(_QWORD *)(v0 + 64));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel_logger;
  v2 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel___observationRegistrar;
  v4 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_23BAF6048()
{
  return type metadata accessor for AccessoryUnpairedViewModel();
}

uint64_t type metadata accessor for AccessoryUnpairedViewModel()
{
  uint64_t result;

  result = qword_256A619D0;
  if (!qword_256A619D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BAF608C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23BB891C4();
  if (v1 <= 0x3F)
  {
    result = sub_23BB88A50();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_23BAF6148()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__subtitle);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23BAF61D0()
{
  return sub_23BAF5070();
}

uint64_t sub_23BAF61F0()
{
  return sub_23BAF4E30();
}

BOOL sub_23BAF6210()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_getKeyPath();
  sub_23BAF6388();
  sub_23BB88A20();
  swift_release();
  return *(_BYTE *)(v1 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state) == 3;
}

uint64_t sub_23BAF628C(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B9B7598(a1);
  sub_23BAF6388();
  sub_23BB88A14();
  sub_23B9BD73C(a1);
  return swift_release();
}

uint64_t sub_23BAF6340()
{
  return sub_23BAF5368();
}

uint64_t sub_23BAF6360()
{
  return sub_23BAF5DC0();
}

unint64_t sub_23BAF6388()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A61A90;
  if (!qword_256A61A90)
  {
    v1 = type metadata accessor for AccessoryUnpairedViewModel();
    result = MEMORY[0x24260D8DC](&unk_23BB94C70, v1);
    atomic_store(result, &qword_256A61A90);
  }
  return result;
}

uint64_t sub_23BAF63D0()
{
  return sub_23BAF6518();
}

uint64_t sub_23BAF63E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAF6410()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAF643C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23BAF550C(a1, v4, v5, v6);
}

uint64_t sub_23BAF64A8()
{
  return sub_23BAF64DC();
}

void sub_23BAF64C4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__shouldShowAlert) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_23BAF64DC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__state) = *(_BYTE *)(v0 + 24);
  return sub_23BAF4BB0();
}

uint64_t sub_23BAF6518()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = v3;
  sub_23B9B7598(v1);
  return sub_23B9BD73C(v4);
}

uint64_t sub_23BAF6568()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  v2 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__subtitle);
  *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_23BAF65B4()
{
  sub_23BAF64C4();
}

uint64_t type metadata accessor for UIBaseModule()
{
  return objc_opt_self();
}

id sub_23BAF65E8()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for UIBaseModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_256A61B40 = 0x657361424955;
  *(_QWORD *)algn_256A61B48 = 0xE600000000000000;
  qword_256A61B50 = (uint64_t)result;
  return result;
}

uint64_t static FindMyLocalizationTable.uiBase.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  void *v3;
  id v4;

  if (qword_256A58D30 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256A61B48;
  v3 = (void *)qword_256A61B50;
  *a1 = qword_256A61B40;
  a1[1] = v2;
  a1[2] = v3;
  v4 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BAF66B8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1, 1);
    v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v23 = 32;
    v24 = a2;
    do
    {
      if (a2 == 1)
        v25 = 0;
      else
        v25 = *(_DWORD *)(TupleTypeMetadata + v23);
      v27 = *v5++;
      v26 = v27;
      v28 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(&v8[v25], v28);
      v23 += 16;
      --v24;
    }
    while (v24);
    return sub_23BB8A370();
  }
  MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata, v21);
  v8 = (char *)&v30 - v22;
  if (a2)
    goto LABEL_12;
  return sub_23BB8A370();
}

uint64_t sub_23BAF686C(__int16 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_23BB89F80();
  v5 = MEMORY[0x24BDAC7A8](v2, v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x101) != 1)
    return sub_23BB8A010();
  (*(void (**)(char *, _QWORD, __n128))(v4 + 104))(v7, *MEMORY[0x24BDF3C28], v5);
  return MEMORY[0x24260BF74](v7, 0.0, 0.627, 0.992, 1.0);
}

uint64_t sub_23BAF691C(__int16 a1)
{
  id v1;
  void *v2;
  id v3;
  _QWORD v5[6];

  if ((a1 & 0x101) == 1)
  {
    v1 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v5[4] = sub_23B9AFD50;
    v5[5] = 0;
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 1107296256;
    v5[2] = sub_23BAF8B18;
    v5[3] = &block_descriptor_3;
    v2 = _Block_copy(v5);
    v3 = objc_msgSend(v1, sel_initWithDynamicProvider_, v2);
    _Block_release(v2);
    swift_release();
    v5[0] = MEMORY[0x24260BEB4](v3);
  }
  else
  {
    v5[0] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ABC0);
    sub_23B996E1C(&qword_256A5ABC8, &qword_256A5ABC0, MEMORY[0x24BDF0F90]);
  }
  return sub_23BB89398();
}

double sub_23BAF6A30@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  double result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  __int128 v19;

  v2 = sub_23BB8A070();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BB8A0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDF3FD0], v2);
  v9 = sub_23BB8A094();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  sub_23BB89350();
  sub_23BB89350();
  sub_23BB8A2F8();
  sub_23BB8938C();
  v10 = v15;
  v11 = v16;
  v12 = v17;
  v13 = v18;
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  result = *(double *)&v19;
  *(_OWORD *)(a1 + 40) = v19;
  return result;
}

uint64_t sub_23BAF6BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v8 = sub_23BB89C98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = a4;
  type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(0, a1, a2, v13);
  v15[1] = 0x3FF0000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BDF1880], v8);
  sub_23BA2C01C();
  return sub_23BB89344();
}

void sub_23BAF6CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(255, *(_QWORD *)(a1 + 16), v4, a4);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
  v7 = MEMORY[0x24260D8DC](&unk_23BB94F20, v5);
  v8 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  v33 = v5;
  v34 = v6;
  v35 = v7;
  v36 = v8;
  v9 = MEMORY[0x24BDF2800];
  MEMORY[0x24260D864](255, &v33, MEMORY[0x24BDF2800], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BD8);
  sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE0);
  swift_getTupleTypeMetadata2();
  v10 = sub_23BB8A364();
  v11 = MEMORY[0x24BDF5428];
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v10);
  v12 = sub_23BB8A160();
  v13 = sub_23BB894AC();
  v32[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v12);
  v32[1] = MEMORY[0x24BDEDBB8];
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v13, v32);
  v33 = v13;
  v34 = v6;
  v35 = v15;
  v36 = v8;
  MEMORY[0x24260D864](255, &v33, v9, 0);
  v16 = sub_23BB8ACA0();
  v31 = v4;
  v17 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v16, &v31);
  v33 = v16;
  v34 = v6;
  v35 = v17;
  v36 = v8;
  MEMORY[0x24260D864](255, &v33, v9, 0);
  swift_getTupleTypeMetadata2();
  v18 = sub_23BB8A364();
  MEMORY[0x24260D8DC](v11, v18);
  v19 = sub_23BB8A160();
  v20 = sub_23BB894AC();
  v21 = sub_23BB894AC();
  v22 = sub_23BB894AC();
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE8);
  v24 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v19);
  v25 = MEMORY[0x24BDECC60];
  v30[0] = v24;
  v30[1] = MEMORY[0x24BDECC60];
  v29[0] = MEMORY[0x24260D8DC](v14, v20, v30);
  v29[1] = v25;
  v28[0] = MEMORY[0x24260D8DC](v14, v21, v29);
  v28[1] = v25;
  v26 = MEMORY[0x24260D8DC](v14, v22, v28);
  v27 = sub_23B996E1C(&qword_256A61BF0, &qword_256A61BE8, (uint64_t)&unk_23BB93860);
  v33 = v22;
  v34 = v23;
  v35 = v26;
  v36 = v27;
  type metadata accessor for BubbleMessageTemplate();
}

void sub_23BAF6FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int16 v12;
  int v13;
  __int16 v14;

  MEMORY[0x24BDAC7A8](a1, a2);
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v4;
  v11 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)v2;
  *(_OWORD *)(v10 + 48) = v11;
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(v2 + 32);
  *(_DWORD *)(v10 + 79) = *(_DWORD *)(v2 + 47);
  v12 = *(unsigned __int8 *)(v2 + 48);
  v13 = *(unsigned __int8 *)(v2 + 49);
  sub_23BAF8AD0(v2);
  if (v13)
    v14 = 256;
  else
    v14 = 0;
  *(_QWORD *)(v7 - 112) = sub_23BAF691C(v14 | v12);
  sub_23BAB0AF8((uint64_t)sub_23BAF8A9C, v10, v7 - 112, *(unsigned __int8 *)(v2 + 50), v5, MEMORY[0x24BDEBF80], v6, MEMORY[0x24BDEBF68]);
}

uint64_t sub_23BAF70AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  MEMORY[0x24260D8DC](&unk_23BB93810, v0);
  sub_23BAC5FD8(v2, v0, v1);
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v0);
  sub_23BAC2FCC(v1, v0, *(_QWORD *)(v4 - 192));
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v1, v0);
}

uint64_t sub_23BAF7124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[2];
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v42 = a3;
  v4 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 16);
  v5 = v4;
  v38 = v4;
  v6 = type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(255, v39, v4, a2);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
  v8 = MEMORY[0x24260D8DC](&unk_23BB94F20, v6);
  v9 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  v50 = v6;
  v51 = v7;
  v52 = v8;
  v53 = v9;
  v10 = MEMORY[0x24BDF2800];
  MEMORY[0x24260D864](255, &v50, MEMORY[0x24BDF2800], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BD8);
  sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE0);
  swift_getTupleTypeMetadata2();
  v11 = sub_23BB8A364();
  v12 = MEMORY[0x24BDF5428];
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v11);
  v13 = sub_23BB8A160();
  v14 = sub_23BB894AC();
  v49[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v13);
  v49[1] = MEMORY[0x24BDEDBB8];
  v15 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v14, v49);
  v50 = v14;
  v51 = v7;
  v52 = v15;
  v53 = v9;
  MEMORY[0x24260D864](255, &v50, v10, 0);
  v16 = sub_23BB8ACA0();
  v48 = v5;
  v17 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v16, &v48);
  v50 = v16;
  v51 = v7;
  v52 = v17;
  v53 = v9;
  MEMORY[0x24260D864](255, &v50, v10, 0);
  swift_getTupleTypeMetadata2();
  v18 = sub_23BB8A364();
  MEMORY[0x24260D8DC](v12, v18);
  v19 = sub_23BB8A160();
  v37 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v37 - v21;
  v23 = sub_23BB894AC();
  v40 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v37 - v25;
  v27 = sub_23BB894AC();
  v41 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v37 - v29;
  LODWORD(v13) = *(unsigned __int8 *)(v3 + 49);
  v43 = v39;
  v44 = v38;
  v45 = v3;
  sub_23BB8983C();
  v31 = 0x4034000000000000;
  if ((_DWORD)v13)
    v31 = 0x4028000000000000;
  v39 = v31;
  sub_23BB8A154();
  sub_23BB89BB4();
  v32 = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v19);
  sub_23BB89EF0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v19);
  sub_23BB89BC0();
  v33 = MEMORY[0x24BDECC60];
  v47[0] = v32;
  v47[1] = MEMORY[0x24BDECC60];
  v34 = MEMORY[0x24BDED308];
  v35 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v23, v47);
  sub_23BB89EF0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v23);
  sub_23BB89B9C();
  v46[0] = v35;
  v46[1] = v33;
  MEMORY[0x24260D8DC](v34, v27, v46);
  sub_23BB89EF0();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v30, v27);
}

uint64_t sub_23BAF7590@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  unint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t OpaqueTypeConformance2;
  void (**v54)(uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  void (**v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(_QWORD, _QWORD, _QWORD);
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (**v88)(uint64_t);
  unint64_t v89;
  void (*v90)(_QWORD, _QWORD, _QWORD);
  void (**v91)(uint64_t);
  unint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  _QWORD v95[2];
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v88 = a1;
  v77 = a4;
  v83 = a2;
  v6 = sub_23BB8ACA0();
  v72 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v80 = (char *)&v69 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
  v100 = a3;
  v82 = (void (*)(_QWORD, _QWORD, _QWORD))a3;
  v10 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v6, &v100);
  v11 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  v74 = v6;
  v96 = (char *)v6;
  v97 = v9;
  v70 = v10;
  v98 = v10;
  v99 = v11;
  v12 = MEMORY[0x24BDF2800];
  v76 = MEMORY[0x24260D864](0, &v96, MEMORY[0x24BDF2800], 0);
  v71 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76, v13);
  v75 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v73 = (uint64_t)&v69 - v17;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(255, a2, a3, v22);
  v24 = MEMORY[0x24260D8DC](&unk_23BB94F20, v23);
  v96 = (char *)v23;
  v97 = v9;
  v98 = v24;
  v99 = v11;
  MEMORY[0x24260D864](255, &v96, v12, 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BD8);
  sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE0);
  swift_getTupleTypeMetadata2();
  v25 = sub_23BB8A364();
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v25);
  v26 = sub_23BB8A160();
  v81 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v69 - v28;
  v30 = sub_23BB894AC();
  v79 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v34 = (char *)&v69 - v33;
  v95[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v26, v32);
  v95[1] = MEMORY[0x24BDEDBB8];
  v35 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v30, v95);
  v96 = (char *)v30;
  v97 = v9;
  v87 = v9;
  v78 = v35;
  v98 = v35;
  v99 = v11;
  v86 = v11;
  v36 = MEMORY[0x24260D864](0, &v96, MEMORY[0x24BDF2800], 0);
  v84 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v69 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40, v41);
  v85 = (uint64_t)&v69 - v42;
  v89 = v83;
  v90 = v82;
  v91 = v88;
  sub_23BB8983C();
  sub_23BB8A154();
  sub_23BB8A2F8();
  sub_23BB89EB4();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v26);
  v43 = *MEMORY[0x24BDECED0];
  v44 = sub_23BB894A0();
  v45 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104);
  v45(v21, v43, v44);
  v46 = sub_23BAF8B98();
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    v48 = v87;
    v83 = v46;
    v49 = v36;
    v50 = v78;
    v82 = (void (*)(_QWORD, _QWORD, _QWORD))v45;
    v51 = v86;
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v21, &qword_256A599C0);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v34, v30);
    v96 = (char *)v30;
    v97 = v48;
    v98 = v50;
    v99 = v51;
    v52 = v49;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_23BAC5FD8((uint64_t)v39, v49, v85);
    v54 = *(void (***)(uint64_t))(v84 + 8);
    v55 = ((uint64_t (*)(char *, uint64_t))v54)(v39, v49);
    v56 = v80;
    v88[4](v55);
    v82(v21, *MEMORY[0x24BDECEC0], v44);
    result = sub_23BB8A760();
    if ((result & 1) != 0)
    {
      v57 = (uint64_t)v75;
      v58 = v74;
      v59 = v87;
      v88 = v54;
      v60 = v70;
      v83 = OpaqueTypeConformance2;
      v61 = v86;
      sub_23BB89DF4();
      sub_23B989D60((uint64_t)v21, &qword_256A599C0);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v56, v58);
      v96 = (char *)v58;
      v97 = v59;
      v98 = v60;
      v99 = v61;
      v62 = swift_getOpaqueTypeConformance2();
      v63 = v73;
      v64 = v76;
      sub_23BAC5FD8(v57, v76, v73);
      v65 = v71;
      v66 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v66(v57, v64);
      v67 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v39, v85, v52);
      v96 = v39;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v57, v63, v64);
      v97 = v57;
      v94[0] = v52;
      v94[1] = v64;
      v92 = v83;
      v93 = v62;
      sub_23BAF66B8((uint64_t *)&v96, 2uLL, (uint64_t)v94);
      v66(v63, v64);
      v68 = v88;
      ((void (*)(uint64_t, uint64_t))v88)(v67, v52);
      v66(v57, v64);
      return ((uint64_t (*)(char *, uint64_t))v68)(v39, v52);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23BAF7CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD v94[2];
  uint64_t v95[2];
  _QWORD v96[2];
  __int128 v97;
  _BYTE v98[96];
  __int128 v99;
  char v100;

  v90 = a4;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61BF8);
  MEMORY[0x24BDAC7A8](v82, v7);
  v86 = (uint64_t *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = sub_23BB89CC8();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85, v9);
  v83 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61C00);
  MEMORY[0x24BDAC7A8](v81, v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61BE0);
  MEMORY[0x24BDAC7A8](v87, v14);
  v89 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v88 = (uint64_t)&v70 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(0, a2, a3, v23);
  v74 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (double *)((char *)&v70 - v27);
  v29 = MEMORY[0x24260D8DC](&unk_23BB94F20, v24, v26);
  v30 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  *(_QWORD *)&v97 = v24;
  *((_QWORD *)&v97 + 1) = v19;
  v73 = v29;
  *(_QWORD *)v98 = v29;
  *(_QWORD *)&v98[8] = v30;
  v71 = v30;
  v31 = MEMORY[0x24260D864](0, &v97, MEMORY[0x24BDF2800], 0);
  *(_QWORD *)&v72 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v70 - v33;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BD8);
  v79 = sub_23BB894AC();
  v91 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v35);
  v76 = (char *)&v70 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v38);
  v75 = (uint64_t)&v70 - v39;
  *(_QWORD *)&v77 = a1;
  v40 = 56.0;
  if (*(_BYTE *)(a1 + 49))
    v40 = 44.0;
  *(_QWORD *)&v78 = a2;
  *(_QWORD *)&v80 = a3;
  sub_23BAF6BF4(a2, a3, v28, v40);
  v41 = *MEMORY[0x24BDECEA8];
  v42 = sub_23BB894A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v22, v41, v42);
  sub_23BAF8B98();
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    v44 = v73;
    v45 = v71;
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v22, &qword_256A599C0);
    (*(void (**)(double *, uint64_t))(v74 + 8))(v28, v24);
    *(_QWORD *)&v97 = v24;
    *((_QWORD *)&v97 + 1) = v19;
    *(_QWORD *)v98 = v44;
    *(_QWORD *)&v98[8] = v45;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v47 = (uint64_t)v76;
    sub_23BB89DDC();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v34, v31);
    v48 = sub_23B996E1C(&qword_256A61C08, &qword_256A61BD8, MEMORY[0x24BDEFB48]);
    v96[0] = OpaqueTypeConformance2;
    v96[1] = v48;
    v49 = v79;
    v73 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v79, v96);
    v50 = v75;
    sub_23BAC5FD8(v47, v49, v75);
    v74 = *(_QWORD *)(v91 + 8);
    ((void (*)(uint64_t, uint64_t))v74)(v47, v49);
    v51 = sub_23BB8983C();
    sub_23BAF846C(v77, (uint64_t)&v97);
    v80 = v97;
    v78 = *(_OWORD *)v98;
    v77 = *(_OWORD *)&v98[16];
    v72 = *(_OWORD *)&v98[32];
    v52 = *(_OWORD *)&v98[48];
    v53 = v98[64];
    v54 = *(_QWORD *)&v98[72];
    KeyPath = swift_getKeyPath();
    v97 = (unint64_t)v51;
    v98[0] = 1;
    *(_OWORD *)&v98[8] = v80;
    *(_OWORD *)&v98[24] = v78;
    *(_OWORD *)&v98[40] = v77;
    *(_OWORD *)&v98[56] = v72;
    *(_OWORD *)&v98[72] = v52;
    v98[88] = v53;
    *(_QWORD *)&v99 = v54;
    *((_QWORD *)&v99 + 1) = KeyPath;
    v100 = 1;
    v56 = v84;
    v57 = v83;
    v58 = v85;
    (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, *MEMORY[0x24BDF1CD8], v85);
    v59 = swift_getKeyPath();
    v60 = v86;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)v86 + *(int *)(v82 + 28), v57, v58);
    *v60 = v59;
    sub_23B989EFC((uint64_t)v60, (uint64_t)&v13[*(int *)(v81 + 36)], &qword_256A61BF8);
    v61 = v99;
    *((_OWORD *)v13 + 6) = *(_OWORD *)&v98[80];
    *((_OWORD *)v13 + 7) = v61;
    v13[128] = v100;
    v62 = *(_OWORD *)&v98[32];
    *((_OWORD *)v13 + 2) = *(_OWORD *)&v98[16];
    *((_OWORD *)v13 + 3) = v62;
    v63 = *(_OWORD *)&v98[64];
    *((_OWORD *)v13 + 4) = *(_OWORD *)&v98[48];
    *((_OWORD *)v13 + 5) = v63;
    v64 = *(_OWORD *)v98;
    *(_OWORD *)v13 = v97;
    *((_OWORD *)v13 + 1) = v64;
    sub_23BAF8CCC((uint64_t)&v97);
    sub_23B989D60((uint64_t)v60, &qword_256A61BF8);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    sub_23BAF8D70((uint64_t)&v97);
    v65 = v89;
    sub_23B989EFC((uint64_t)v13, v89, &qword_256A61C00);
    v66 = v87;
    *(_QWORD *)(v65 + *(int *)(v87 + 36)) = 0;
    sub_23B989D60((uint64_t)v13, &qword_256A61C00);
    v67 = v88;
    sub_23BAF8E14(v65, v88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v47, v50, v49);
    v95[0] = v47;
    sub_23B989EFC(v67, v65, &qword_256A61BE0);
    v95[1] = v65;
    v94[0] = v49;
    v94[1] = v66;
    v92 = v73;
    v93 = sub_23BAF8E5C();
    sub_23BAF66B8(v95, 2uLL, (uint64_t)v94);
    sub_23B989D60(v67, &qword_256A61BE0);
    v68 = v50;
    v69 = (uint64_t (*)(uint64_t, uint64_t))v74;
    ((void (*)(uint64_t, uint64_t))v74)(v68, v49);
    sub_23B989D60(v65, &qword_256A61BE0);
    return v69(v47, v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BAF846C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  int v9;
  __int16 v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = sub_23BB89C5C();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v49 = *(_QWORD *)a1;
    v50 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v49 = 0;
    v50 = 0;
  }
  v8 = *(unsigned __int8 *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 49);
  v53 = v7;
  swift_bridgeObjectRetain();
  v52 = sub_23BB89C8C();
  KeyPath = swift_getKeyPath();
  if (v9)
    v10 = 256;
  else
    v10 = 0;
  v11 = v10 | v8;
  v45 = sub_23BAF686C(v10 | v8);
  v44 = swift_getKeyPath();
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v54 = v12;
  v55 = v13;
  sub_23B9967E0();
  swift_bridgeObjectRetain();
  v14 = sub_23BB89D28();
  v16 = v15;
  v18 = v17 & 1;
  sub_23BAF686C(v11);
  v19 = sub_23BB89CD4();
  v21 = v20;
  v23 = v22;
  swift_release();
  v24 = v23 & 1;
  sub_23B9967D0(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_23BB89C68();
  v26 = v46;
  v25 = v47;
  v27 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, *MEMORY[0x24BDF17C8], v48);
  sub_23BB89C74();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  v48 = sub_23BB89D04();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release();
  LOBYTE(v13) = v31 & 1;
  LODWORD(v47) = v31 & 1;
  sub_23B9967D0(v19, v21, v24);
  swift_bridgeObjectRelease();
  v34 = v50;
  v35 = v49;
  v37 = v52;
  v36 = v53;
  *(_QWORD *)a2 = v49;
  *(_QWORD *)(a2 + 8) = v36;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v34;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = v37;
  v38 = v45;
  *(_QWORD *)(a2 + 48) = v44;
  *(_QWORD *)(a2 + 56) = v38;
  v39 = v48;
  *(_QWORD *)(a2 + 64) = v48;
  *(_QWORD *)(a2 + 72) = v29;
  *(_BYTE *)(a2 + 80) = v13;
  *(_QWORD *)(a2 + 88) = v33;
  v40 = v35;
  sub_23BA9A7FC(v35, v36, 0, v34);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v41 = v39;
  v42 = v39;
  LOBYTE(v39) = v47;
  sub_23B996E5C(v42, v29, v47);
  swift_bridgeObjectRetain();
  sub_23B9967D0(v41, v29, v39);
  swift_bridgeObjectRelease();
  sub_23BA9A82C(v40, v53, 0, v34);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23BAF8770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23BAF6CD8(a1, a2, a3, a4);
}

uint64_t sub_23BAF87B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23BAF87E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23BAF8854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23BAF890C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t sub_23BAF8980(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 51))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23BAF89C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 51) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for IconTextBubbleMessageTemplate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconTextBubbleMessageTemplate);
}

uint64_t sub_23BAF8A28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconTextBubbleMessageTemplate.DynamicScaledIcon);
}

uint64_t sub_23BAF8A68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAF8A9C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for IconTextBubbleMessageTemplate(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  return sub_23BAF7124(v4, v5, a2);
}

uint64_t sub_23BAF8AD0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

id sub_23BAF8B18(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_23BAF8B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BAF7590(*(void (***)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BAF8B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23BAF7CCC(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_23BAF8B98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A59A20;
  if (!qword_256A59A20)
  {
    v1 = sub_23BB894A0();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDECF78], v1);
    atomic_store(result, (unint64_t *)&qword_256A59A20);
  }
  return result;
}

uint64_t sub_23BAF8BE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89680();
  *a1 = result;
  return result;
}

uint64_t sub_23BAF8C08()
{
  return sub_23BB8968C();
}

uint64_t sub_23BAF8C2C()
{
  return sub_23BB895D8();
}

uint64_t sub_23BAF8C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_23BB89CC8();
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  return sub_23BB895E4();
}

uint64_t sub_23BAF8CCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_BYTE *)(a1 + 104);
  sub_23BA9A7FC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23B996E5C(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23BAF8D70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_BYTE *)(a1 + 104);
  sub_23BA9A82C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23B9967D0(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23BAF8E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BAF8E5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61C10;
  if (!qword_256A61C10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE0);
    v2[0] = sub_23BAF8EE0();
    v2[1] = sub_23B996E1C(&qword_256A61C08, &qword_256A61BD8, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61C10);
  }
  return result;
}

unint64_t sub_23BAF8EE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61C18;
  if (!qword_256A61C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61C00);
    v2[0] = sub_23BAF8F64();
    v2[1] = sub_23B996E1C(qword_256A61C40, &qword_256A61BF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61C18);
  }
  return result;
}

unint64_t sub_23BAF8F64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61C20;
  if (!qword_256A61C20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61C28);
    v2[0] = sub_23B996E1C(&qword_256A61C30, &qword_256A61C38, MEMORY[0x24BDF4700]);
    v2[1] = sub_23B996E1C(&qword_256A5ACF0, &qword_256A5ACF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61C20);
  }
  return result;
}

void sub_23BAF9010()
{
  unint64_t v0;

  sub_23BABF660();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_23BAF9088(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 36);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23BAF9114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_23BAF9150(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23BAF91B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23BAF9210(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23BAF9270(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23BAF92D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAF92DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 36);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23BAF9320()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BAF932C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 36);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A60928);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t _s4SortVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23BAF9418(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BAF9464 + 4 * byte_23BB94D55[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_23BAF9498 + 4 * asc_23BB94D50[v4]))();
}

uint64_t sub_23BAF9498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BAF94A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23BAF94A8);
  return result;
}

uint64_t sub_23BAF94B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23BAF94BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BAF94C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BAF94C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t type metadata accessor for IconTextBubbleMessageTemplate.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconTextBubbleMessageTemplate.Style);
}

void sub_23BAF94E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a1[1];
  v5 = type metadata accessor for IconTextBubbleMessageTemplate.DynamicScaledIcon(255, *a1, v4, a4);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
  v7 = MEMORY[0x24260D8DC](&unk_23BB94F20, v5);
  v8 = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  v34 = v5;
  v35 = v6;
  v36 = v7;
  v37 = v8;
  v9 = MEMORY[0x24BDF2800];
  MEMORY[0x24260D864](255, &v34, MEMORY[0x24BDF2800], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BD8);
  sub_23BB894AC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE0);
  swift_getTupleTypeMetadata2();
  v10 = sub_23BB8A364();
  v11 = MEMORY[0x24BDF5428];
  MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v10);
  v12 = sub_23BB8A160();
  v13 = sub_23BB894AC();
  v14 = MEMORY[0x24BDF4700];
  v33[0] = MEMORY[0x24260D8DC](MEMORY[0x24BDF4700], v12);
  v33[1] = MEMORY[0x24BDEDBB8];
  v15 = MEMORY[0x24BDED308];
  v16 = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v13, v33);
  v34 = v13;
  v35 = v6;
  v36 = v16;
  v37 = v8;
  MEMORY[0x24260D864](255, &v34, v9, 0);
  v17 = sub_23BB8ACA0();
  v32 = v4;
  v18 = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v17, &v32);
  v34 = v17;
  v35 = v6;
  v36 = v18;
  v37 = v8;
  MEMORY[0x24260D864](255, &v34, v9, 0);
  swift_getTupleTypeMetadata2();
  v19 = sub_23BB8A364();
  MEMORY[0x24260D8DC](v11, v19);
  v20 = sub_23BB8A160();
  v21 = sub_23BB894AC();
  v22 = sub_23BB894AC();
  v23 = sub_23BB894AC();
  v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61BE8);
  v25 = MEMORY[0x24260D8DC](v14, v20);
  v26 = MEMORY[0x24BDECC60];
  v31[0] = v25;
  v31[1] = MEMORY[0x24BDECC60];
  v30[0] = MEMORY[0x24260D8DC](v15, v21, v31);
  v30[1] = v26;
  v29[0] = MEMORY[0x24260D8DC](v15, v22, v30);
  v29[1] = v26;
  v27 = MEMORY[0x24260D8DC](v15, v23, v29);
  v28 = sub_23B996E1C(&qword_256A61BF0, &qword_256A61BE8, (uint64_t)&unk_23BB93860);
  v34 = v23;
  v35 = v24;
  v36 = v27;
  v37 = v28;
  type metadata accessor for BubbleMessageTemplate();
}

uint64_t sub_23BAF97D4(uint64_t a1)
{
  return MEMORY[0x24260D8DC](&unk_23BB93810, a1);
}

uint64_t sub_23BAF9804()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23BAF983C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A61D48;
  if (!qword_256A61D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61D50);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A61D48);
  }
  return result;
}

uint64_t sub_23BAF98A4()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BAFA6E8();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 104);
  sub_23B9B7598(v1);
  return v1;
}

uint64_t sub_23BAF9924@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  v3 = *a1;
  swift_getKeyPath();
  sub_23BAFA6E8();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 104);
  v5 = *(_QWORD *)(v3 + 112);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23BA192A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, uint64_t))v6;
  return sub_23B9B7598(v4);
}

uint64_t sub_23BAF99D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char, char, uint64_t, uint64_t, char);
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BA1929C;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23BAFA6E8();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

unint64_t sub_23BAF9AE0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v1 = v0[10];
  v2 = v0[11];
  v3 = v0[12];
  if (v1)
  {
    if (v1 == 1)
      return 0;
    v4 = HIBYTE(v1) & 0xF;
    if ((v1 & 0x2000000000000000) == 0)
      v4 = v0[9] & 0xFFFFFFFFFFFFLL;
    if (v4)
    {
      v3 = v0[10];
      v2 = v0[9];
      goto LABEL_11;
    }
  }
  if (!v3)
    return v3;
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
LABEL_11:
  swift_bridgeObjectRetain();
  if (qword_256A58DA8 != -1)
    swift_once();
  v6 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v7 = v6;
    v8 = v7;
  }
  else
  {
    v9 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v8 = objc_msgSend(v9, sel_mainBundle);
    v7 = 0;
  }
  v10 = v7;
  v11 = (void *)sub_23BB8A784();
  v12 = (void *)sub_23BB8A784();
  v13 = objc_msgSend(v8, sel_localizedStringForKey_value_table_, v11, 0, v12);

  sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v14 + 64) = sub_23B9A5C8C();
  *(_QWORD *)(v14 + 32) = v2;
  *(_QWORD *)(v14 + 40) = v3;
  v3 = sub_23BB8A790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23BAF9CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD v18[2];
  __int128 v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 80);
  if (v5 == 1)
  {
    v6 = sub_23BB8884C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
LABEL_4:
    sub_23BA86FBC((uint64_t)v4);
    return 0;
  }
  v18[0] = *(_QWORD *)(v0 + 72);
  v18[1] = v5;
  v19 = *(_OWORD *)(v0 + 88);
  sub_23BAA8E3C((uint64_t)v4);
  v7 = sub_23BB8884C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7) == 1)
    goto LABEL_4;
  sub_23BA86FBC((uint64_t)v4);
  if (qword_256A58DA8 != -1)
    swift_once();
  v9 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v10 = v9;
    v11 = v10;
  }
  else
  {
    v12 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v12, sel_mainBundle);
    v10 = 0;
  }
  v13 = v10;
  v14 = (void *)sub_23BB8A784();
  v15 = (void *)sub_23BB8A784();
  v16 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v14, 0, v15);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_23BAF9F18()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    if (qword_256A58DB0 != -1)
      swift_once();
    v2 = (void *)qword_256A73DF8;
    if (qword_256A73DF8)
      goto LABEL_11;
LABEL_12:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_13;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_12;
LABEL_11:
  swift_bridgeObjectRetain();
  v3 = v2;
  v4 = v3;
LABEL_13:
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  v10 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_23BAFA158()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);

  swift_getKeyPath();
  sub_23BAFA6E8();
  sub_23BB88A20();
  result = swift_release();
  v2 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v0 + 104);
  if (v2)
  {
    swift_retain();
    v2(2, 2, 0, 0, 1);
    return sub_23B9BD73C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_23BAFA1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);
  id v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[2];
  __int128 v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB8884C();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + 80);
  if (v11 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v4, 1, 1, v5, v8);
    return sub_23BA86FBC((uint64_t)v4);
  }
  v18[0] = *(_QWORD *)(v0 + 72);
  v18[1] = v11;
  v19 = *(_OWORD *)(v0 + 88);
  sub_23BAA8E3C((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_23BA86FBC((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  swift_getKeyPath();
  v18[0] = v0;
  sub_23BAFA6E8();
  sub_23BB88A20();
  swift_release();
  v13 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v0 + 104);
  if (v13)
  {
    swift_retain();
    v13(2, 2, 0, 0, 1);
    sub_23B9BD73C((uint64_t)v13);
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v14)
  {
    v15 = v14;
    v16 = (void *)sub_23BB88828();
    v17 = (void *)sub_23BB8A6B8();
    objc_msgSend(v15, sel_openSensitiveURL_withOptions_, v16, v17);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_23BAFA424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  sub_23BAFA8F8(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  sub_23B9BD73C(*(_QWORD *)(v0 + 104));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore24AccessoryLockedViewModel___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BAFA498()
{
  return type metadata accessor for AccessoryLockedViewModel();
}

uint64_t type metadata accessor for AccessoryLockedViewModel()
{
  uint64_t result;

  result = qword_256A61D88;
  if (!qword_256A61D88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BAFA4DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88A50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_23BAFA58C()
{
  return sub_23BAF9AE0();
}

uint64_t sub_23BAFA5AC()
{
  return sub_23BAF9F18();
}

uint64_t sub_23BAFA5CC()
{
  return sub_23BAF9CF8();
}

uint64_t sub_23BAFA5EC(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B9B7598(a1);
  sub_23BAFA6E8();
  sub_23BB88A14();
  sub_23B9BD73C(a1);
  return swift_release();
}

uint64_t sub_23BAFA6A0()
{
  return sub_23BAFA158();
}

uint64_t sub_23BAFA6C0()
{
  return sub_23BAFA1F8();
}

unint64_t sub_23BAFA6E8()
{
  unint64_t result;
  uint64_t locked;

  result = qword_256A61E48;
  if (!qword_256A61E48)
  {
    locked = type metadata accessor for AccessoryLockedViewModel();
    result = MEMORY[0x24260D8DC](&unk_23BB95038, locked);
    atomic_store(result, (unint64_t *)&qword_256A61E48);
  }
  return result;
}

uint64_t sub_23BAFA730()
{
  return sub_23BAFA768();
}

uint64_t sub_23BAFA744()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BAFA768()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 104) = v1;
  *(_QWORD *)(v2 + 112) = v3;
  sub_23B9B7598(v1);
  return sub_23B9BD73C(v4);
}

uint64_t sub_23BAFA7B0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_23BAFA8F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OnboardingErrorMessage(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3FFE)
    goto LABEL_17;
  if (a2 + 49154 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 49154 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 49154;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 49154;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 49154;
  }
LABEL_17:
  v6 = (*a1 & 0x3E00 | (*a1 >> 14) & 0xFFFFFE03 | (4 * (*a1 >> 1))) ^ 0x3FFF;
  if (v6 >= 0x3FFD)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for OnboardingErrorMessage(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49154 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49154 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0x3FFE)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0x3FFD)
    return ((uint64_t (*)(void))((char *)&loc_23BAFAA34 + 4 * byte_23BB95095[v5]))();
  *a1 = a2 - 16382;
  return ((uint64_t (*)(void))((char *)sub_23BAFAA6C + 4 * byte_23BB95090[v5]))();
}

uint64_t sub_23BAFAA6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BAFAA74(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23BAFAA7CLL);
  return result;
}

uint64_t sub_23BAFAA9C(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23BAFAAA4);
  v2 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_23BAFAAA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BAFAAB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BAFAABC(unsigned __int16 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (__int16)v1;
  v3 = v1 >> 14;
  v4 = (v1 & 1 | (2 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_WORD *sub_23BAFAAE4(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_23BAFAAF4(_WORD *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0x101 | ((_WORD)a2 << 14);
  else
    *result = (a2 & 1 | (((a2 >> 1) & 1) << 8)) ^ 0x8100;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingErrorMessage()
{
  return &type metadata for OnboardingErrorMessage;
}

uint64_t sub_23BAFAB3C(unsigned __int16 a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  if (!(a1 >> 14))
  {
    if ((a1 & 1) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_17;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_17;
    }
    goto LABEL_21;
  }
  if (a1 >> 14 == 1)
  {
    if ((a1 & 0x100) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_17;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
      {
LABEL_17:
        swift_bridgeObjectRetain();
        v3 = v1;
        v4 = v3;
LABEL_22:
        v6 = v3;
        v7 = (void *)sub_23BB8A784();
        v8 = (void *)sub_23BB8A784();
        v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

        v2 = sub_23BB8A7B4();
        swift_bridgeObjectRelease();

        return v2;
      }
    }
LABEL_21:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_22;
  }
  return 0;
}

uint64_t sub_23BAFAEA4(unsigned __int16 a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  if (!(a1 >> 14))
  {
    if ((a1 & 1) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_26;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_26;
    }
    goto LABEL_27;
  }
  if (a1 >> 14 == 1)
  {
    if ((a1 & 0x100) != 0)
    {
      if (qword_256A58DA8 != -1)
        swift_once();
      v1 = (void *)qword_256A73DE0;
      if (qword_256A73DE0)
        goto LABEL_26;
    }
    else if ((a1 & 1) != 0)
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
        goto LABEL_26;
    }
    else
    {
      if (qword_256A58DB0 != -1)
        swift_once();
      v1 = (void *)qword_256A73DF8;
      if (qword_256A73DF8)
      {
LABEL_26:
        swift_bridgeObjectRetain();
        v3 = v1;
        v4 = v3;
LABEL_28:
        v6 = v3;
        v7 = (void *)sub_23BB8A784();
        v8 = (void *)sub_23BB8A784();
        v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

        v2 = sub_23BB8A7B4();
        swift_bridgeObjectRelease();

        return v2;
      }
    }
LABEL_27:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_28;
  }
  return 0;
}

uint64_t sub_23BAFB2AC()
{
  unsigned __int16 *v0;
  unsigned int v1;

  v1 = *v0;
  sub_23BB8B240();
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1)
    {
      sub_23BB8B24C();
      sub_23BB8B24C();
    }
  }
  else
  {
    sub_23BB8B24C();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BAFB344()
{
  unsigned __int16 *v0;
  int v1;

  v1 = *v0 >> 14;
  if (v1)
  {
    if (v1 == 1)
    {
      sub_23BB8B24C();
      sub_23BB8B24C();
    }
  }
  else
  {
    sub_23BB8B24C();
  }
  return sub_23BB8B24C();
}

uint64_t sub_23BAFB3B8()
{
  unsigned __int16 *v0;
  unsigned int v1;

  v1 = *v0;
  sub_23BB8B240();
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1)
    {
      sub_23BB8B24C();
      sub_23BB8B24C();
    }
  }
  else
  {
    sub_23BB8B24C();
  }
  sub_23BB8B24C();
  return sub_23BB8B270();
}

void sub_23BAFB44C(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

BOOL sub_23BAFB458(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_23BAFB4F4(*a1, *a2);
}

unint64_t sub_23BAFB468()
{
  unint64_t result;

  result = qword_256A61E50;
  if (!qword_256A61E50)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB95118, &type metadata for OnboardingErrorMessage);
    atomic_store(result, (unint64_t *)&qword_256A61E50);
  }
  return result;
}

unint64_t sub_23BAFB4B0()
{
  unint64_t result;

  result = qword_256A61E58;
  if (!qword_256A61E58)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB950B8, &type metadata for OnboardingErrorMessage);
    atomic_store(result, (unint64_t *)&qword_256A61E58);
  }
  return result;
}

BOOL sub_23BAFB4F4(unsigned __int16 a1, unsigned __int16 a2)
{
  if (!(a1 >> 14))
  {
    if (a2 < 0x4000u)
      return ((a2 ^ a1) & 1) == 0;
    return 0;
  }
  if (a1 >> 14 != 1)
    return a2 == 0x8000;
  if ((a2 & 0xC000) != 0x4000)
    return 0;
  return ((a2 ^ a1) & 1) == 0 && ((a2 ^ a1) & 0x100) == 0;
}

uint64_t sub_23BAFB560(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  objc_super v13;
  objc_super v14;

  v3 = type metadata accessor for LocationDetailViewController.ViewOptions();
  v4 = *(_QWORD *)&a1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v5 = (char *)objc_allocWithZone((Class)v3);
  *(_QWORD *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v4;
  v14.receiver = v5;
  v14.super_class = (Class)v3;
  v6 = a1;
  v7 = (char *)objc_msgSendSuper2(&v14, sel_init);
  v8 = *(_QWORD *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v9 = *(_QWORD *)(v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v8;
  v10 = (char *)objc_allocWithZone((Class)v3);
  *(_QWORD *)&v10[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v9;
  v13.receiver = v10;
  v13.super_class = (Class)v3;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  LOBYTE(v3) = sub_23BB8AC70();
  return v3 & 1;
}

id LocationDetailViewController.ViewOptions.__allocating_init(rawValue:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id LocationDetailViewController.ViewOptions.init(rawValue:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for LocationDetailViewController.ViewOptions();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for LocationDetailViewController.ViewOptions()
{
  return objc_opt_self();
}

id sub_23BAFB720()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E60 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showLocationDetails.getter()
{
  return sub_23BAFB824(&qword_256A58D38, (id *)&qword_256A61E60);
}

id sub_23BAFB7B0()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 2;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E68 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showShareLocationButton.getter()
{
  return sub_23BAFB824(&qword_256A58D40, (id *)&qword_256A61E68);
}

id sub_23BAFB824(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id sub_23BAFB878(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

id sub_23BAFB8B4()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 4;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E70 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showRequestLocationButton.getter()
{
  return sub_23BAFB824(&qword_256A58D48, (id *)&qword_256A61E70);
}

id sub_23BAFB944()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 8;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E78 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.showLocateButtons.getter()
{
  return sub_23BAFB824(&qword_256A58D50, (id *)&qword_256A61E78);
}

id sub_23BAFB9D4()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 16;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E80 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.presentFullScreenWhenTapped.getter()
{
  return sub_23BAFB824(&qword_256A58D58, (id *)&qword_256A61E80);
}

id sub_23BAFBA64()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 32;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E88 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.punchOutToFindMyWhenTapped.getter()
{
  return sub_23BAFB824(&qword_256A58D60, (id *)&qword_256A61E88);
}

id sub_23BAFBAF4()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 64;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_256A61E90 = (uint64_t)result;
  return result;
}

id static LocationDetailViewController.ViewOptions.useCompactInterface.getter()
{
  return sub_23BAFB824(&qword_256A58D68, (id *)&qword_256A61E90);
}

void sub_23BAFBB84()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  objc_class *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  id v53;
  objc_super v54;
  objc_super v55;
  objc_super v56;
  objc_super v57;
  objc_super v58;
  objc_super v59;
  objc_super v60;
  objc_super v61;
  objc_super v62;
  objc_super v63;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB95160;
  if (qword_256A58D38 != -1)
    swift_once();
  v1 = (void *)qword_256A61E60;
  *(_QWORD *)(inited + 32) = qword_256A61E60;
  v2 = qword_256A58D60;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_256A61E88;
  *(_QWORD *)(inited + 40) = qword_256A61E88;
  v5 = qword_256A58D68;
  v52 = v4;
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_256A61E90;
  *(_QWORD *)(inited + 48) = qword_256A61E90;
  v7 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v63.receiver = v8;
  v63.super_class = v7;
  v53 = v6;
  v9 = (char *)objc_msgSendSuper2(&v63, sel_init);
  v10 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  v11 = *(_QWORD *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v12 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11;
  v62.receiver = v12;
  v62.super_class = v7;
  v13 = (char *)v3;
  v14 = v9;
  v15 = (char *)objc_msgSendSuper2(&v62, sel_init);
  v16 = *(_QWORD *)&v15[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v17 = *(_QWORD *)&v13[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v18 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17 & v16;
  v61.receiver = v18;
  v61.super_class = v7;
  v19 = objc_msgSendSuper2(&v61, sel_init);

  v20 = sub_23BB8AC70();
  if ((v20 & 1) == 0)
  {
    v21 = *(_QWORD *)&v9[v10];
    v22 = v13;

    v23 = (char *)objc_allocWithZone(v7);
    *(_QWORD *)&v23[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v21 | v17;
    v60.receiver = v23;
    v60.super_class = v7;
    v14 = (char *)objc_msgSendSuper2(&v60, sel_init);

  }
  v24 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  v25 = *(_QWORD *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v26 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v26[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v25;
  v59.receiver = v26;
  v59.super_class = v7;
  v27 = (char *)v52;
  v28 = v14;
  v29 = (char *)objc_msgSendSuper2(&v59, sel_init);
  v30 = *(_QWORD *)&v29[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v31 = *(_QWORD *)&v27[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v32 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v32[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v31 & v30;
  v58.receiver = v32;
  v58.super_class = v7;
  v33 = objc_msgSendSuper2(&v58, sel_init);

  v34 = sub_23BB8AC70();
  if ((v34 & 1) == 0)
  {
    v35 = *(_QWORD *)&v14[v24];
    v36 = v27;

    v37 = (char *)objc_allocWithZone(v7);
    *(_QWORD *)&v37[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v35 | v31;
    v57.receiver = v37;
    v57.super_class = v7;
    v28 = (char *)objc_msgSendSuper2(&v57, sel_init);

  }
  v38 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  v39 = *(_QWORD *)&v28[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v40 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v40[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v39;
  v56.receiver = v40;
  v56.super_class = v7;
  v41 = (char *)v53;
  v42 = v28;
  v43 = (char *)objc_msgSendSuper2(&v56, sel_init);
  v44 = *(_QWORD *)&v43[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v45 = *(_QWORD *)&v41[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v46 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v46[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v45 & v44;
  v55.receiver = v46;
  v55.super_class = v7;
  v47 = objc_msgSendSuper2(&v55, sel_init);

  v48 = sub_23BB8AC70();
  if ((v48 & 1) == 0)
  {
    v49 = *(_QWORD *)&v28[v38];
    v50 = v41;

    v51 = (char *)objc_allocWithZone(v7);
    *(_QWORD *)&v51[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v49 | v45;
    v54.receiver = v51;
    v54.super_class = v7;
    v42 = (char *)objc_msgSendSuper2(&v54, sel_init);

  }
  swift_release();

  qword_256A61E98 = (uint64_t)v42;
}

id static LocationDetailViewController.ViewOptions.spotlightWidget.getter()
{
  return sub_23BAFB824(&qword_256A58D70, (id *)&qword_256A61E98);
}

uint64_t sub_23BAFBFA0(uint64_t a1)
{
  return sub_23BAFBFF0(a1, &qword_256A61EA0);
}

id static LocationDetailViewController.ViewOptions.messagesChatDetails.getter()
{
  return sub_23BAFB824(&qword_256A58D78, (id *)&qword_256A61EA0);
}

uint64_t sub_23BAFBFE4(uint64_t a1)
{
  return sub_23BAFBFF0(a1, (char **)&qword_256A61EA8);
}

uint64_t sub_23BAFBFF0(uint64_t a1, char **a2)
{
  uint64_t inited;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t result;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  objc_super v41;
  objc_super v42;
  objc_super v43;
  objc_super v44;
  uint64_t v45;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB95170;
  if (qword_256A58D38 != -1)
    swift_once();
  v3 = (void *)qword_256A61E60;
  *(_QWORD *)(inited + 32) = qword_256A61E60;
  v4 = qword_256A58D40;
  v5 = v3;
  if (v4 != -1)
    swift_once();
  v6 = (void *)qword_256A61E68;
  *(_QWORD *)(inited + 40) = qword_256A61E68;
  v7 = qword_256A58D48;
  v8 = v6;
  if (v7 != -1)
    swift_once();
  v9 = (void *)qword_256A61E70;
  *(_QWORD *)(inited + 48) = qword_256A61E70;
  v10 = qword_256A58D50;
  v11 = v9;
  if (v10 != -1)
    swift_once();
  v12 = (void *)qword_256A61E78;
  *(_QWORD *)(inited + 56) = qword_256A61E78;
  v13 = qword_256A58D58;
  v14 = v12;
  if (v13 != -1)
    swift_once();
  v15 = (void *)qword_256A61E80;
  *(_QWORD *)(inited + 64) = qword_256A61E80;
  v45 = inited;
  sub_23BB8A904();
  v16 = inited;
  v17 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v44.receiver = v18;
  v44.super_class = v17;
  v19 = v15;
  v20 = (char *)objc_msgSendSuper2(&v44, sel_init);
  v21 = 0;
  v38 = v16 & 0xC000000000000001;
  v39 = v16;
  do
  {
    if (v38)
      v22 = (char *)MEMORY[0x24260CD9C](v21, v39);
    else
      v22 = (char *)*(id *)(v39 + 8 * v21 + 32);
    v23 = v22;
    v24 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
    v25 = *(_QWORD *)&v20[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
    v26 = (char *)objc_allocWithZone(v17);
    *(_QWORD *)&v26[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v25;
    v43.receiver = v26;
    v43.super_class = v17;
    v40 = v20;
    v20 = v20;
    v27 = (char *)objc_msgSendSuper2(&v43, sel_init);
    v28 = *(_QWORD *)&v27[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

    v29 = *(_QWORD *)&v23[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
    v30 = (char *)objc_allocWithZone(v17);
    *(_QWORD *)&v30[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v29 & v28;
    v42.receiver = v30;
    v42.super_class = v17;
    v31 = objc_msgSendSuper2(&v42, sel_init);

    v32 = sub_23BB8AC70();
    if ((v32 & 1) == 0)
    {
      v33 = *(_QWORD *)&v40[v24];
      v34 = v23;

      v35 = (char *)objc_allocWithZone(v17);
      *(_QWORD *)&v35[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v33 | v29;
      v41.receiver = v35;
      v41.super_class = v17;
      v20 = (char *)objc_msgSendSuper2(&v41, sel_init);

    }
    ++v21;
  }
  while (v21 != 5);
  result = swift_bridgeObjectRelease();
  *a2 = v20;
  return result;
}

id static LocationDetailViewController.ViewOptions.default.getter()
{
  return sub_23BAFB824(&qword_256A58D80, (id *)&qword_256A61EA8);
}

uint64_t _s12FindMyUICore28LocationDetailViewControllerC0F7OptionsC8rawValueSivg_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
}

BOOL sub_23BAFC33C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_23BAFC3C4(a1, (uint64_t)v6);
  if (v7)
  {
    type metadata accessor for LocationDetailViewController.ViewOptions();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = *(_QWORD *)(v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
      v3 = *(_QWORD *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

      return v2 == v3;
    }
  }
  else
  {
    sub_23BAFC40C((uint64_t)v6);
  }
  return 0;
}

uint64_t sub_23BAFC3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BAFC40C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E7F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id LocationDetailViewController.ViewOptions.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LocationDetailViewController.ViewOptions.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LocationDetailViewController.ViewOptions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationDetailViewController.ViewOptions();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23BAFC56C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  objc_class *v4;
  char *v5;
  id result;
  objc_super v7;

  v3 = *a1;
  v4 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  result = objc_msgSendSuper2(&v7, sel_init);
  *a2 = result;
  return result;
}

uint64_t sub_23BAFC5CC(uint64_t a1)
{
  MEMORY[0x24260D8DC](&protocol conformance descriptor for LocationDetailViewController.ViewOptions, a1);
  sub_23BB0167C();
  return sub_23BB8B3CC();
}

uint64_t sub_23BAFC61C(char **a1)
{
  return sub_23BAFB560(*a1) & 1;
}

void sub_23BAFC644(id *a1, uint64_t a2, uint64_t a3)
{
  sub_23BAFC6AC(a1, a2, a3, MEMORY[0x24BEE4A50]);
}

void sub_23BAFC650()
{
  id *v0;

  MEMORY[0x24260D8DC](&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
  sub_23BB8B3B4();

}

void sub_23BAFC6A0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_23BAFC6AC(a1, a2, a3, MEMORY[0x24BEE4A48]);
}

void sub_23BAFC6AC(id *a1, uint64_t a2, uint64_t a3, void (*a4)(id *, uint64_t, uint64_t))
{
  id *v4;
  uint64_t v8;

  v8 = MEMORY[0x24260D8DC](&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
  a4(a1, a2, v8);

}

BOOL sub_23BAFC710(char **a1, char **a2)
{
  char *v2;
  BOOL v3;

  v2 = *a2;
  v3 = sub_23BB15004(a1, *a2);

  return v3;
}

id sub_23BAFC740@<X0>(char **a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_23BAFC768(*a1);
  *a2 = result;
  return result;
}

id sub_23BAFC768(char *a1)
{
  void **v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  _QWORD *v31;
  objc_super v32;
  objc_super v33;
  objc_super v34;
  objc_super v35;
  objc_super v36;
  objc_super v37;

  v3 = (char *)*v1;
  v4 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  v5 = *(_QWORD *)((char *)*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  v6 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v37.receiver = v7;
  v37.super_class = v6;
  v8 = v3;
  v9 = (char *)objc_msgSendSuper2(&v37, sel_init);
  v10 = *(_QWORD *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v11 = *(_QWORD *)&a1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v12 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11 & v10;
  v36.receiver = v12;
  v36.super_class = v6;
  v13 = objc_msgSendSuper2(&v36, sel_init);

  v14 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v35.receiver = v14;
  v35.super_class = v6;
  v15 = objc_msgSendSuper2(&v35, sel_init);
  v16 = sub_23BB8AC70();

  if ((v16 & 1) != 0)
  {

    return 0;
  }
  else
  {
    v17 = *(_QWORD *)&v3[v4];
    v18 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17;
    v34.receiver = v18;
    v34.super_class = v6;
    v19 = v8;
    v20 = a1;
    v21 = (char *)objc_msgSendSuper2(&v34, sel_init);
    v22 = *(_QWORD *)&v21[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
    v23 = v20;

    v24 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v24[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v22 ^ v11;
    v33.receiver = v24;
    v33.super_class = v6;
    v25 = objc_msgSendSuper2(&v33, sel_init);

    v26 = *(_QWORD *)&v3[v4];
    v27 = *(_QWORD *)((_BYTE *)v25 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue) & v26;
    v28 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v28[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v27;
    v32.receiver = v28;
    v32.super_class = v6;
    v29 = objc_msgSendSuper2(&v32, sel_init);

    *v31 = v29;
  }
  return v13;
}

void sub_23BAFC950(char **a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  id v4;

  v3 = *a1;
  v4 = sub_23BAFC98C(*a1);

  *a2 = v4;
}

id sub_23BAFC98C(char *a1)
{
  void **v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  objc_super v21;
  objc_super v22;
  objc_super v23;
  objc_super v24;

  v3 = (char *)*v1;
  v4 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  v5 = *(_QWORD *)((char *)*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  v6 = type metadata accessor for LocationDetailViewController.ViewOptions();
  v7 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v7[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v5;
  v24.receiver = v7;
  v24.super_class = (Class)v6;
  v8 = v3;
  v9 = (char *)objc_msgSendSuper2(&v24, sel_init);
  v10 = *(_QWORD *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v11 = *(_QWORD *)&a1[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v12 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v12[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v11 & v10;
  v23.receiver = v12;
  v23.super_class = (Class)v6;
  v13 = objc_msgSendSuper2(&v23, sel_init);

  v14 = *(_QWORD *)&v3[v4];
  v15 = a1;

  v16 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v16[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v14 | v11;
  v22.receiver = v16;
  v22.super_class = (Class)v6;
  v17 = objc_msgSendSuper2(&v22, sel_init);

  *v1 = v17;
  v18 = (char *)objc_allocWithZone((Class)v6);
  *(_QWORD *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v21.receiver = v18;
  v21.super_class = (Class)v6;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  LOBYTE(v6) = sub_23BB8AC70();

  if ((v6 & 1) != 0)
  {

    return 0;
  }
  return v13;
}

void sub_23BAFCAE0(id *a1, uint64_t a2, uint64_t a3)
{
  sub_23BAFCB44(a1, a2, a3, MEMORY[0x24BEE4A68]);
}

uint64_t sub_23BAFCAEC()
{
  MEMORY[0x24260D8DC](&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
  sub_23BB0167C();
  return sub_23BB8B3C0();
}

void sub_23BAFCB38(id *a1, uint64_t a2, uint64_t a3)
{
  sub_23BAFCB44(a1, a2, a3, MEMORY[0x24BEE4A60]);
}

void sub_23BAFCB44(id *a1, uint64_t a2, uint64_t a3, void (*a4)(id *, uint64_t, uint64_t, unint64_t))
{
  uint64_t v7;
  unint64_t v8;

  v7 = MEMORY[0x24260D8DC](&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
  v8 = sub_23BB0167C();
  a4(a1, a2, v7, v8);

}

void sub_23BAFCBA4()
{
  id *v0;

  sub_23BB8AD48();

}

uint64_t sub_23BAFCBCC()
{
  return sub_23BB8AD78();
}

void sub_23BAFCBE8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_QWORD *)(*v1 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
}

uint64_t sub_23BAFCC00@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_23BB16F80(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

id LocationDetailViewController.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  objc_class *v11;
  uint64_t v12;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v0;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v6 = 138412546;
    v11 = ObjectType;
    v9 = v3;
    sub_23BB8ACB8();
    *v7 = v3;

    *(_WORD *)(v6 + 12) = 2080;
    sub_23BB7B69C(0x74696E696564, 0xE600000000000000, &v12);
    ObjectType = v11;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v4, v5, "LocationDetailViewController: %@ - %s", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  LocationDetailViewController.stopObserving()();
  v13.receiver = v3;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

Swift::Void __swiftcall LocationDetailViewController.stopObserving()()
{
  sub_23BAFE83C(0x6573624F706F7473, 0xEF2928676E697672, sub_23BB077BC);
}

void LocationDetailViewController.setViewOptions(_:)(void *a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;

  if (qword_256A58E00 != -1)
    swift_once();
  v3 = sub_23BB891C4();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A73E80);
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v14 = a1;
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v7 = 138412546;
    v10 = v4;
    sub_23BB8ACB8();
    *v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    sub_23BB7B69C(0xD000000000000012, 0x800000023BB9C300, &v15);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v5, v6, "LocationDetailViewController: %@ - %s", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    v11 = v9;
    a1 = v14;
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {

  }
  v12 = *(void **)&v4[OBJC_IVAR___FMUILocationDetailViewController_viewOptions];
  *(_QWORD *)&v4[OBJC_IVAR___FMUILocationDetailViewController_viewOptions] = a1;
  v13 = a1;

}

Swift::Void __swiftcall LocationDetailViewController.set(remoteParticipantHandles:localParticipantHandle:)(Swift::OpaquePointer remoteParticipantHandles, Swift::String localParticipantHandle)
{
  void *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *rawValue;
  id v13;
  Swift::String_optional v14;
  uint64_t v15;
  uint64_t v16;

  object = localParticipantHandle._object;
  countAndFlagsBits = localParticipantHandle._countAndFlagsBits;
  if (qword_256A58E00 != -1)
    swift_once();
  v6 = sub_23BB891C4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
  v7 = v2;
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v10 = 138412546;
    rawValue = remoteParticipantHandles._rawValue;
    v13 = v7;
    sub_23BB8ACB8();
    *v11 = v7;

    remoteParticipantHandles._rawValue = rawValue;
    *(_WORD *)(v10 + 12) = 2080;
    sub_23BB7B69C(0xD000000000000035, 0x800000023BB9C320, &v16);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v8, v9, "LocationDetailViewController: %@ - %s", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);

  }
  else
  {

  }
  v14.value._countAndFlagsBits = countAndFlagsBits;
  v14.value._object = object;
  LocationDetailViewController.startObserving(handles:from:groupName:)(remoteParticipantHandles, v14, (Swift::String_optional)0);
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(handles:from:)(Swift::OpaquePointer handles, Swift::String_optional from)
{
  LocationDetailViewController.startObserving(handles:from:groupName:)(handles, from, (Swift::String_optional)0);
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(handles:from:groupName:)(Swift::OpaquePointer handles, Swift::String_optional from, Swift::String_optional groupName)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  unsigned __int8 v31;
  int v32;
  BOOL v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  Swift::String v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t countAndFlagsBits;
  id v56;
  void *object;
  Swift::String_optional v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  int v64;
  uint64_t v65;
  void *rawValue;
  uint64_t v67;
  void *v68;
  char v69;
  uint64_t v70;

  v58 = groupName;
  object = from.value._object;
  countAndFlagsBits = from.value._countAndFlagsBits;
  v5 = sub_23BB886D8();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v59 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
    swift_once();
  v8 = sub_23BB891C4();
  __swift_project_value_buffer(v8, (uint64_t)qword_256A73E80);
  v9 = v3;
  v10 = sub_23BB891AC();
  v11 = sub_23BB8ABEC();
  v12 = os_log_type_enabled(v10, v11);
  v56 = v9;
  if (v12)
  {
    v13 = swift_slowAlloc();
    rawValue = handles._rawValue;
    v14 = v13;
    v15 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v67 = v16;
    *(_DWORD *)v14 = 138412546;
    v70 = (uint64_t)v9;
    v17 = v9;
    sub_23BB8ACB8();
    *v15 = v9;

    *(_WORD *)(v14 + 12) = 2080;
    v70 = sub_23BB7B69C(0xD000000000000027, 0x800000023BB9C360, &v67);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v10, v11, "LocationDetailViewController: %@ - %s", (uint8_t *)v14, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v16, -1, -1);
    v18 = v14;
    handles._rawValue = rawValue;
    MEMORY[0x24260D9B4](v18, -1, -1);

  }
  else
  {

  }
  v19 = *((_QWORD *)handles._rawValue + 2);
  v20 = MEMORY[0x24BEE4AF8];
  if (v19)
  {
    v70 = MEMORY[0x24BEE4AF8];
    sub_23BB00738(0, v19, 0);
    v21 = (unint64_t *)((char *)handles._rawValue + 40);
    v63 = xmmword_23BB8C510;
    v62 = 0x800000023BB9A7A0;
    while (1)
    {
      v23 = *(v21 - 1);
      v22 = *v21;
      v24 = sub_23BB8A7E4();
      v65 = v25;
      rawValue = (void *)v24;
      v26 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0)
        v26 = v23 & 0xFFFFFFFFFFFFLL;
      if (v26)
      {
        sub_23B9C60B4(0, (unint64_t *)&qword_256A5DDD0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
        v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = v63;
        *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v27 + 64) = sub_23B9A5C8C();
        v28 = v62;
        *(_QWORD *)(v27 + 32) = 0xD000000000000029;
        *(_QWORD *)(v27 + 40) = v28;
        swift_bridgeObjectRetain_n();
        v29 = (void *)sub_23BB8ABB0();
        v30 = (void *)sub_23BB8A784();
        v31 = objc_msgSend(v29, sel_evaluateWithObject_, v30);

        if ((v31 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v32 = 1;
        }
        else
        {
          v33 = sub_23BB4E730(v23, v22);
          swift_bridgeObjectRelease();
          if (v33)
            v32 = 0;
          else
            v32 = 2;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v32 = 2;
      }
      v64 = v32;
      v34 = sub_23BB55594((void *)v23, (void *)v22);
      swift_bridgeObjectRelease();
      if (qword_256A58DC8 != -1)
        swift_once();
      v35 = objc_msgSend((id)qword_256A64190, sel_stringFromContact_, v34);
      if (!v35)
        break;
      v36 = v35;
      v37 = sub_23BB8A7B4();
      v39 = v38;

      sub_23BB54C44();
      v41 = v40;
      if (!v39)
        goto LABEL_23;
      v67 = v37;
      v68 = v39;
      v42 = v59;
      sub_23BB8869C();
      sub_23B9967E0();
      v37 = sub_23BB8ACE8();
      v44 = v43;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v61);
      swift_bridgeObjectRelease();
LABEL_24:
      v20 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BB00738(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v70;
      }
      v47 = *(_QWORD *)(v20 + 16);
      v46 = *(_QWORD *)(v20 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_23BB00738(v46 > 1, v47 + 1, 1);
        v20 = v70;
      }
      v21 += 2;
      *(_QWORD *)(v20 + 16) = v47 + 1;
      v48 = v20 + 56 * v47;
      *(_QWORD *)(v48 + 32) = v37;
      *(_QWORD *)(v48 + 40) = v44;
      v49 = v65;
      *(_QWORD *)(v48 + 48) = rawValue;
      *(_QWORD *)(v48 + 56) = v49;
      *(_BYTE *)(v48 + 64) = v64;
      *(_QWORD *)(v48 + 72) = v41;
      *(_QWORD *)(v48 + 80) = v34;
      if (!--v19)
        goto LABEL_29;
    }
    sub_23BB54C44();
    v41 = v45;
    v37 = 0;
LABEL_23:
    v44 = 0;
    goto LABEL_24;
  }
LABEL_29:
  v50 = object;
  if (object)
  {
    swift_bridgeObjectRetain();
    v51._countAndFlagsBits = countAndFlagsBits;
    v51._object = v50;
    Handle.init(rawValue:)(v51);
    v52 = v67;
    v50 = v68;
    v53 = v69;
  }
  else
  {
    v52 = 0;
    v53 = 0;
  }
  v67 = v52;
  v68 = v50;
  v69 = v53;
  sub_23BAFDAE4(v20, &v67, v58.value._countAndFlagsBits, (uint64_t)v58.value._object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_23BAFDAE4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a3;
  v8 = type metadata accessor for CompositeAppViewInitialInfo();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[1];
  v32 = *a2;
  v31 = *((unsigned __int8 *)a2 + 16);
  if (qword_256A58E00 != -1)
    swift_once();
  v13 = sub_23BB891C4();
  __swift_project_value_buffer(v13, (uint64_t)qword_256A73E80);
  v14 = v4;
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v27 = v8;
    v18 = v17;
    v25 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v33 = (uint64_t)v14;
    v34 = v26;
    *(_DWORD *)v18 = 138412546;
    v28 = a4;
    v29 = a1;
    v19 = v12;
    v20 = v14;
    sub_23BB8ACB8();
    v21 = v25;
    *v25 = v14;

    v12 = v19;
    *(_WORD *)(v18 + 12) = 2080;
    v33 = sub_23BB7B69C(0xD000000000000027, 0x800000023BB9C720, &v34);
    a4 = v28;
    a1 = v29;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v15, v16, "LocationDetailViewController: %@ - %s", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v21, -1, -1);
    v22 = v26;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v22, -1, -1);
    v23 = v18;
    v8 = v27;
    MEMORY[0x24260D9B4](v23, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)&v11[*(int *)(v8 + 28)] = *(_QWORD *)(*(_QWORD *)&v14[OBJC_IVAR___FMUILocationDetailViewController_viewOptions]
                                                 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  type metadata accessor for CompositeAppViewState(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v11 = v32;
  *((_QWORD *)v11 + 1) = v12;
  v11[16] = v31;
  *((_QWORD *)v11 + 3) = v30;
  *((_QWORD *)v11 + 4) = a4;
  *((_QWORD *)v11 + 5) = a1;
  v11[*(int *)(v8 + 32)] = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB07280((uint64_t)v11);
  return sub_23BB0179C((uint64_t)v11);
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(contacts:)(Swift::OpaquePointer contacts)
{
  LocationDetailViewController.startObserving(contacts:from:groupName:)(contacts, (Swift::String_optional)0, (Swift::String_optional)0);
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(contacts:from:)(Swift::OpaquePointer contacts, Swift::String_optional from)
{
  LocationDetailViewController.startObserving(contacts:from:groupName:)(contacts, from, (Swift::String_optional)0);
}

Swift::Void __swiftcall LocationDetailViewController.startObserving(contacts:from:groupName:)(Swift::OpaquePointer contacts, Swift::String_optional from, Swift::String_optional groupName)
{
  void *v3;
  void *object;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  char v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t countAndFlagsBits;
  unint64_t v53;
  id v54;
  void *v55;
  Swift::String_optional v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *rawValue;
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char v67;

  v56 = groupName;
  object = from.value._object;
  countAndFlagsBits = from.value._countAndFlagsBits;
  v6 = sub_23BB886D8();
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v57 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
    swift_once();
  v9 = sub_23BB891C4();
  v10 = __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
  v11 = v3;
  v51 = v10;
  v12 = sub_23BB891AC();
  v13 = sub_23BB8ABEC();
  v14 = os_log_type_enabled(v12, v13);
  rawValue = contacts._rawValue;
  v54 = v11;
  v55 = object;
  if (v14)
  {
    v15 = swift_slowAlloc();
    v16 = v11;
    v17 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v64 = (uint64_t)v16;
    v65 = v18;
    *(_DWORD *)v15 = 138412546;
    v19 = v16;
    sub_23BB8ACB8();
    *v17 = v16;

    *(_WORD *)(v15 + 12) = 2080;
    v64 = sub_23BB7B69C(0xD000000000000028, 0x800000023BB9C390, &v65);
    contacts._rawValue = rawValue;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v12, v13, "LocationDetailViewController: %@ - %s", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v18, -1, -1);
    MEMORY[0x24260D9B4](v15, -1, -1);

  }
  else
  {

  }
  if ((unint64_t)contacts._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_23BB8AFD0();
    v53 = (unint64_t)contacts._rawValue >> 62;
    if (v20)
      goto LABEL_8;
LABEL_29:
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_30:
    swift_bridgeObjectRelease();
    v41 = v22[2];
    if (v53)
    {
      swift_bridgeObjectRetain();
      v42 = sub_23BB8AFD0();
      swift_bridgeObjectRelease();
      if (v41 == v42)
      {
LABEL_32:
        v43 = v55;
        if (v55)
        {
LABEL_33:
          swift_bridgeObjectRetain();
          v44._countAndFlagsBits = countAndFlagsBits;
          v44._object = v43;
          Handle.init(rawValue:)(v44);
          v45 = v65;
          v43 = v66;
          v46 = v67;
LABEL_40:
          v65 = v45;
          v66 = v43;
          v67 = v46;
          sub_23BAFDAE4((uint64_t)v22, &v65, v56.value._countAndFlagsBits, (uint64_t)v56.value._object);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
LABEL_39:
        v45 = 0;
        v46 = 0;
        goto LABEL_40;
      }
    }
    else
    {
      v42 = *(_QWORD *)(((unint64_t)contacts._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v41 == v42)
        goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = sub_23BB891AC();
    v48 = sub_23BB8ABD4();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v65 = v50;
      *(_DWORD *)v49 = 136315650;
      v64 = sub_23BB7B69C(0xD000000000000028, 0x800000023BB9C390, &v65);
      sub_23BB8ACB8();
      *(_WORD *)(v49 + 12) = 2048;
      v64 = v41;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2048;
      v64 = v42;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v47, v48, "FindMyMessagesAppViewController: %s - Couldn't map all friends - mapped: %ld - unmapped: %ld", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v50, -1, -1);
      MEMORY[0x24260D9B4](v49, -1, -1);

      v43 = v55;
      if (v55)
        goto LABEL_33;
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v55;
      if (v55)
        goto LABEL_33;
    }
    goto LABEL_39;
  }
  v20 = *(_QWORD *)(((unint64_t)contacts._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v53 = (unint64_t)contacts._rawValue >> 62;
  if (!v20)
    goto LABEL_29;
LABEL_8:
  if (v20 >= 1)
  {
    v21 = 0;
    v61 = (unint64_t)contacts._rawValue & 0xC000000000000001;
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v23 = v61 ? (id)MEMORY[0x24260CD9C](v21, contacts._rawValue) : *((id *)contacts._rawValue + v21 + 4);
      v24 = v23;
      sub_23BB54C44();
      if (*(_QWORD *)(v25 + 16))
        break;

      swift_bridgeObjectRelease();
LABEL_11:
      if (v20 == ++v21)
        goto LABEL_30;
    }
    v26 = *(_QWORD *)(v25 + 40);
    v63 = *(_QWORD *)(v25 + 32);
    v62 = *(unsigned __int8 *)(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_256A58DC8 != -1)
      swift_once();
    v27 = objc_msgSend((id)qword_256A64190, sel_stringFromContact_, v24);
    if (v27)
    {
      v28 = v27;
      v29 = sub_23BB8A7B4();
      v31 = v30;

      sub_23BB54C44();
      v33 = v32;
      if (v31)
      {
        v65 = v29;
        v66 = v31;
        v34 = v57;
        sub_23BB8869C();
        sub_23B9967E0();
        v29 = sub_23BB8ACE8();
        v36 = v35;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v59);
        swift_bridgeObjectRelease();
LABEL_23:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_23BB64720(0, v22[2] + 1, 1, v22);
        v39 = v22[2];
        v38 = v22[3];
        if (v39 >= v38 >> 1)
          v22 = sub_23BB64720((_QWORD *)(v38 > 1), v39 + 1, 1, v22);
        v22[2] = v39 + 1;
        v40 = &v22[7 * v39];
        v40[4] = v29;
        v40[5] = v36;
        v40[6] = v63;
        v40[7] = v26;
        *((_BYTE *)v40 + 64) = v62;
        v40[9] = v33;
        v40[10] = v24;
        contacts._rawValue = rawValue;
        goto LABEL_11;
      }
    }
    else
    {
      sub_23BB54C44();
      v33 = v37;
      v29 = 0;
    }
    v36 = 0;
    goto LABEL_23;
  }
  __break(1u);
}

Swift::Void __swiftcall LocationDetailViewController.pauseSubscriptions()()
{
  sub_23BAFE83C(0xD000000000000014, 0x800000023BB9A5B0, (uint64_t (*)(void))sub_23BB09C04);
}

Swift::Void __swiftcall LocationDetailViewController.resumeSubscriptions()()
{
  sub_23BAFE83C(0xD000000000000015, 0x800000023BB9A5D0, (uint64_t (*)(void))sub_23BB09F18);
}

uint64_t sub_23BAFE83C(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  void *v3;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_256A58E00 != -1)
    swift_once();
  v7 = sub_23BB891C4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256A73E80);
  v8 = v3;
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v11 = 138412546;
    v12 = v8;
    sub_23BB8ACB8();
    *v14 = v8;

    *(_WORD *)(v11 + 12) = 2080;
    sub_23BB7B69C(a1, a2, &v16);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v9, v10, "LocationDetailViewController: %@ - %s", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

  }
  else
  {

  }
  return a3();
}

Swift::Void __swiftcall LocationDetailViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  sub_23BAFEB30(a1, (SEL *)&selRef_viewIsAppearing_, 0xD000000000000013, 0x800000023BB9C3C0, (uint64_t (*)(void))LocationDetailViewController.resumeSubscriptions());
}

Swift::Void __swiftcall LocationDetailViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_23BAFEB30(a1, (SEL *)&selRef_viewDidDisappear_, 0xD000000000000014, 0x800000023BB9C3E0, (uint64_t (*)(void))LocationDetailViewController.pauseSubscriptions());
}

uint64_t sub_23BAFEB30(char a1, SEL *a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void))
{
  void *v5;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v21.receiver = v5;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, *a2, a1 & 1);
  if (qword_256A58E00 != -1)
    swift_once();
  v11 = sub_23BB891C4();
  __swift_project_value_buffer(v11, (uint64_t)qword_256A73E80);
  v12 = v5;
  v13 = sub_23BB891AC();
  v14 = sub_23BB8ABEC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v15 = 138412546;
    v16 = v12;
    sub_23BB8ACB8();
    *v18 = v12;

    *(_WORD *)(v15 + 12) = 2080;
    sub_23BB7B69C(a3, a4, &v20);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v13, v14, "LocationDetailViewController: %@ - %s", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v19, -1, -1);
    MEMORY[0x24260D9B4](v15, -1, -1);

  }
  else
  {

  }
  return a5();
}

id LocationDetailViewController.navigationItem.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR___FMUILocationDetailViewController_hostingViewController), sel_navigationItem);
}

void __swiftcall LocationDetailViewController.contentScrollView(for:)(UIScrollView_optional *__return_ptr retstr, NSDirectionalRectEdge a2)
{
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(*(id *)(v2 + OBJC_IVAR___FMUILocationDetailViewController_hostingViewController), sel_contentScrollViewForEdge_, a2);
}

Swift::Void __swiftcall LocationDetailViewController.viewDidLoad()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v36.receiver = v0;
  v36.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v36, sel_viewDidLoad);
  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = v0;
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v35 = v7;
    *(_DWORD *)v5 = 138412546;
    v8 = v2;
    sub_23BB8ACB8();
    *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    sub_23BB7B69C(0x4C64694477656976, 0xED0000292864616FLL, &v35);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "LocationDetailViewController: %@ - %s", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }
  else
  {

  }
  v9 = *(void **)&v2[OBJC_IVAR___FMUILocationDetailViewController_hostingViewController];
  v10 = objc_msgSend(v9, sel_view);
  if (!v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = v10;
  objc_msgSend(v10, sel_setAutoresizingMask_, 18);

  v12 = objc_msgSend(v9, sel_view);
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v13 = v12;
  v14 = objc_msgSend(v2, sel_view);
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14;
  objc_msgSend(v14, sel_bounds);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  objc_msgSend(v13, sel_setFrame_, v17, v19, v21, v23);
  v24 = objc_msgSend(v2, sel_view);
  if (!v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v25 = v24;
  v26 = objc_msgSend(v9, sel_view);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v25, sel_addSubview_, v26);

    objc_msgSend(v2, sel_addChildViewController_, v9);
    objc_msgSend(v9, sel_didMoveToParentViewController_, v2);
    v28 = *(_QWORD *)&v2[OBJC_IVAR___FMUILocationDetailViewController_viewModel];
    v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v30 = (_QWORD *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
    v31 = *(_QWORD *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
    *v30 = &unk_256A61ED8;
    v30[1] = v29;
    sub_23B9BD73C(v31);
    v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = (_QWORD *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
    v34 = *(_QWORD *)(v28 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
    *v33 = &unk_256A61EE8;
    v33[1] = v32;
    sub_23B9BD73C(v34);
    return;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_23BAFF290(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_23BB8A9F4();
  v2[8] = sub_23BB8A9E8();
  v2[9] = sub_23BB8A988();
  v2[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23BAFF300()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[5];
  v2 = v0[6] + 16;
  v0[11] = sub_23BB8A9E8();
  v3 = swift_allocObject();
  v0[12] = v3;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x24260DA50](v2);
  swift_unknownObjectWeakInit();

  v5 = swift_task_alloc();
  v0[13] = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  v0[14] = v6;
  *v6 = v0;
  v6[1] = sub_23BAFF41C;
  return sub_23BB8B1BC();
}

uint64_t sub_23BAFF41C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23BAFF4A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAFF4D8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BAFF534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;
  _QWORD *v17;
  Class isa;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  uint8_t *v23;
  _QWORD *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F98);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  swift_beginAccess();
  v10 = MEMORY[0x24260DA50](a2 + 16);
  if (!v10)
    goto LABEL_8;
  v11 = (void *)v10;
  v28 = (id)MEMORY[0x24260DA50](v10 + OBJC_IVAR___FMUILocationDetailViewController_delegate);
  if (!v28)
  {

LABEL_8:
    sub_23BB8A9A0();
    return;
  }
  if (qword_256A58E00 != -1)
    swift_once();
  v12 = sub_23BB891C4();
  __swift_project_value_buffer(v12, (uint64_t)qword_256A73E80);
  v29 = v11;
  v13 = sub_23BB891AC();
  v14 = sub_23BB8ABEC();
  if (os_log_type_enabled(v13, v14))
  {
    v27 = a1;
    v15 = (uint8_t *)swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = v15;
    *(_DWORD *)v15 = 138412290;
    v23 = v15 + 4;
    aBlock[0] = v29;
    v26 = a3;
    v16 = v29;
    a1 = v27;
    sub_23BB8ACB8();
    v17 = v24;
    *v24 = v11;

    _os_log_impl(&dword_23B979000, v13, v14, "LocationDetailViewController: %@ - forwarding didSelectSendLocationMessage", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    MEMORY[0x24260D9B4](v25, -1, -1);
  }
  else
  {

    v13 = v29;
  }

  isa = MessagePayload.createMSMessage()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_23BB016CC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23BAFF858;
  aBlock[3] = &block_descriptor_19;
  v21 = _Block_copy(aBlock);
  swift_release();
  v22 = v29;
  objc_msgSend(v28, sel_detailsController_didSelectSendLocationMessage_completion_, v29, isa, v21);
  _Block_release(v21);

  swift_unknownObjectRelease();
}

void sub_23BAFF858(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_23BAFF8AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  v1[6] = sub_23BB8A9F4();
  v1[7] = sub_23BB8A9E8();
  v1[8] = sub_23BB8A988();
  v1[9] = v2;
  return swift_task_switch();
}

uint64_t sub_23BAFF91C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;

  v1 = v0[5] + 16;
  v0[10] = sub_23BB8A9E8();
  v0[11] = swift_allocObject();
  swift_beginAccess();
  v2 = (void *)MEMORY[0x24260DA50](v1);
  swift_unknownObjectWeakInit();

  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_23BAFFA20;
  return sub_23BB8B1BC();
}

uint64_t sub_23BAFFA20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_23BAFFA94()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAFFAC8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BAFFB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  NSObject *v21;
  NSObject *v22;
  _QWORD *v23;
  uint8_t *v24;
  id v26;
  unsigned __int8 v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  _QWORD *v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  id v40;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F98);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v8 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v34 - v11;
  swift_beginAccess();
  v13 = MEMORY[0x24260DA50](a2 + 16);
  if (!v13)
    return sub_23BB8A9A0();
  v14 = (void *)v13;
  v40 = (id)MEMORY[0x24260DA50](v13 + OBJC_IVAR___FMUILocationDetailViewController_delegate);
  if (!v40)
  {

    return sub_23BB8A9A0();
  }
  if (qword_256A58E00 != -1)
    swift_once();
  v15 = sub_23BB891C4();
  __swift_project_value_buffer(v15, (uint64_t)qword_256A73E80);
  v16 = v14;
  v17 = sub_23BB891AC();
  v18 = sub_23BB8ABEC();
  v19 = os_log_type_enabled(v17, v18);
  v38 = v12;
  v39 = v16;
  if (v19)
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    v35 = v20;
    v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_DWORD *)v20 = 138412290;
    aBlock[0] = v16;
    v21 = v16;
    v37 = v5;
    v22 = v21;
    v8 = v36;
    sub_23BB8ACB8();
    v23 = v34;
    *v34 = v14;

    v5 = v37;
    v24 = v35;
    _os_log_impl(&dword_23B979000, v17, v18, "LocationDetailViewController: %@ - forwarding didSelectStopSharingWithCompletion", v35, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v23, -1, -1);
    MEMORY[0x24260D9B4](v24, -1, -1);
  }
  else
  {

    v17 = v16;
  }

  v26 = v40;
  v27 = objc_msgSend(v40, sel_respondsToSelector_, sel_detailsController_didSelectStopSharingWithCompletion_);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  if ((v27 & 1) != 0)
  {
    v29 = v38;
    v28(v38, a1, v4);
    v30 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v31 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v31 + v30, v29, v4);
    aBlock[4] = sub_23BB016CC;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23BAFF858;
    aBlock[3] = &block_descriptor_4;
    v32 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    v33 = v39;
    objc_msgSend(v26, (SEL)0x250CBC556, v39, v32);
    _Block_release(v32);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    v28(v8, a1, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

    return swift_unknownObjectRelease();
  }
  else
  {
    v28(v8, a1, v4);
    sub_23BB8A9A0();

    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_23BAFFEEC(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F98);
    return sub_23BB8A994();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F98);
    return sub_23BB8A9A0();
  }
}

id LocationDetailViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id LocationDetailViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  objc_class *ObjectType;
  objc_super v24;
  uint64_t (*v25)();
  _QWORD *v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = OBJC_IVAR___FMUILocationDetailViewController_viewModel;
  v8 = OBJC_IVAR___FMUILocationDetailViewController_hostingViewController;
  v9 = qword_256A58CF0;
  v10 = v4;
  if (v9 != -1)
    swift_once();
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  v11 = swift_retain();
  v12 = sub_23BB0ABC8(v11, 0, 0, 0, 0, 0, 0, 0, 0);
  v30 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D740);
  sub_23BB8A0C4();
  v13 = (uint64_t)v25;
  v14 = v26;
  v25 = sub_23BB0154C;
  v26 = v12;
  v27 = 0;
  v28 = v13;
  v29 = v14;
  v15 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_256A61EF0));
  swift_retain();
  sub_23BAF1540(v13);
  swift_retain();
  v16 = sub_23BB8989C();
  sub_23BB89890();
  swift_release();
  sub_23BA7FDB0(v13);
  swift_release();
  *(_QWORD *)&v4[v7] = v12;
  *(_QWORD *)&v4[v8] = v16;
  swift_unknownObjectWeakInit();
  v17 = OBJC_IVAR___FMUILocationDetailViewController_viewOptions;
  if (qword_256A58D80 != -1)
    swift_once();
  v18 = (void *)qword_256A61EA8;
  *(_QWORD *)&v10[v17] = qword_256A61EA8;
  v19 = v18;

  if (a2)
  {
    v20 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v24.receiver = v10;
  v24.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, v20, a3);

  return v21;
}

id LocationDetailViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LocationDetailViewController.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  objc_super v20;
  uint64_t (*v21)();
  _QWORD *v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR___FMUILocationDetailViewController_viewModel;
  v6 = OBJC_IVAR___FMUILocationDetailViewController_hostingViewController;
  v7 = qword_256A58CF0;
  v8 = v2;
  if (v7 != -1)
    swift_once();
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  v9 = swift_retain();
  v10 = sub_23BB0ABC8(v9, 0, 0, 0, 0, 0, 0, 0, 0);
  v26 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D740);
  sub_23BB8A0C4();
  v11 = (uint64_t)v21;
  v12 = v22;
  v21 = sub_23BB0154C;
  v22 = v10;
  v23 = 0;
  v24 = v11;
  v25 = v12;
  v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_256A61EF0));
  swift_retain();
  sub_23BAF1540(v11);
  swift_retain();
  v14 = sub_23BB8989C();
  sub_23BB89890();
  swift_release();
  sub_23BA7FDB0(v11);
  swift_release();
  *(_QWORD *)&v2[v5] = v10;
  *(_QWORD *)&v2[v6] = v14;
  swift_unknownObjectWeakInit();
  v15 = OBJC_IVAR___FMUILocationDetailViewController_viewOptions;
  if (qword_256A58D80 != -1)
    swift_once();
  v16 = (void *)qword_256A61EA8;
  *(_QWORD *)&v8[v15] = qword_256A61EA8;
  v17 = v16;

  v20.receiver = v8;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, sel_initWithCoder_, a1);

  return v18;
}

uint64_t sub_23BB004F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00ED8(a1, a2, a3, *v3, (uint64_t *)&unk_256A5E6A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB00520(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00754(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB0053C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23BB00B7C(a1, a2, a3, (_QWORD *)*v3, &qword_256A61FB8, (uint64_t (*)(_QWORD))type metadata accessor for DeviceInfo);
  *v3 = result;
  return result;
}

uint64_t sub_23BB00568(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB008BC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB00584(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23BB00B7C(a1, a2, a3, (_QWORD *)*v3, &qword_256A61FA8, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
  *v3 = result;
  return result;
}

uint64_t sub_23BB005B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00ED8(a1, a2, a3, *v3, &qword_256A5EFC8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB005DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00ED8(a1, a2, a3, *v3, &qword_256A5EFC0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB00608(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23BB00B7C(a1, a2, a3, (_QWORD *)*v3, &qword_256A61FA0, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  *v3 = result;
  return result;
}

uint64_t sub_23BB00634(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00A24(a1, a2, a3, *v3, &qword_256A61F90);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB00658(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00A24(a1, a2, a3, *v3, &qword_256A61F88);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB0067C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00ED8(a1, a2, a3, *v3, &qword_256A5E9D8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB006A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23BB00B7C(a1, a2, a3, (_QWORD *)*v3, &qword_256A61F70, (uint64_t (*)(_QWORD))MEMORY[0x24BE32118]);
  *v3 = result;
  return result;
}

uint64_t sub_23BB006D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00D5C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB006F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB00ED8(a1, a2, a3, *v3, &qword_256A5EFB8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB0071C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB01054(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB00738(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23BB01308(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23BB00754(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB008BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FB0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8])
      memmove(v13, v14, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB00A24(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB00B7C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size_0(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB00D5C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F78);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 224);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 224 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB00ED8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB01054(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59470);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB011BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FC0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB01308(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BB01490()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BB014B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B97C964;
  return sub_23BAFF290(a1, v1);
}

uint64_t sub_23BB01504()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B990D68;
  return sub_23BAFF8AC(v0);
}

uint64_t sub_23BB0154C()
{
  return swift_retain();
}

uint64_t sub_23BB01554()
{
  return sub_23BB015E4(&qword_256A61F00, (uint64_t)&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
}

uint64_t sub_23BB01578()
{
  return sub_23BB015E4(&qword_256A61F08, (uint64_t)&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
}

uint64_t sub_23BB0159C()
{
  return sub_23BB015E4(&qword_256A61F10, MEMORY[0x24BEE5BE0]);
}

uint64_t sub_23BB015C0()
{
  return sub_23BB015E4(&qword_256A61F18, (uint64_t)&protocol conformance descriptor for LocationDetailViewController.ViewOptions);
}

uint64_t sub_23BB015E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LocationDetailViewController.ViewOptions();
    result = MEMORY[0x24260D8DC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for LocationDetailViewController.ViewOptions()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocationDetailViewController.ViewOptions.__allocating_init(rawValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for LocationDetailViewController()
{
  return objc_opt_self();
}

uint64_t sub_23BB01658(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_23BB0167C()
{
  unint64_t result;

  result = qword_256A61F80;
  if (!qword_256A61F80)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256A61F80);
  }
  return result;
}

uint64_t sub_23BB016C0(uint64_t a1)
{
  uint64_t v1;

  return sub_23BAFFB10(a1, v1);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void sub_23BB016E8(uint64_t a1)
{
  uint64_t v1;

  sub_23BAFF534(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F98);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BB01758(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61F98);
  return sub_23BAFFEEC(a1);
}

uint64_t sub_23BB0179C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CompositeAppViewInitialInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB017E8(double a1, double a2, double a3, double a4)
{
  void *v4;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t result;
  _QWORD v22[6];

  objc_msgSend(v4, sel_size);
  v10 = v9 + a2 + a4;
  objc_msgSend(v4, sel_size);
  v12 = v11 + a1 + a3;
  v13 = objc_msgSend(v4, sel_traitCollection);
  v14 = objc_msgSend((id)objc_opt_self(), sel_formatForTraitCollection_, v13);

  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD618]), sel_initWithSize_format_, v14, v10, v12);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v4;
  *(double *)(v16 + 24) = a1;
  *(double *)(v16 + 32) = a2;
  *(double *)(v16 + 40) = a3;
  *(double *)(v16 + 48) = a4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_23BB01A14;
  *(_QWORD *)(v17 + 24) = v16;
  v22[4] = sub_23BB01A78;
  v22[5] = v17;
  v22[0] = MEMORY[0x24BDAC760];
  v22[1] = 1107296256;
  v22[2] = sub_23BB01A98;
  v22[3] = &block_descriptor_5;
  v18 = _Block_copy(v22);
  v19 = v4;
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v15, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v15 & 1) == 0)
    return (uint64_t)v20;
  __break(1u);
  return result;
}

uint64_t sub_23BB019F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23BB01A14()
{
  double *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = (void *)*((_QWORD *)v0 + 2);
  v2 = v0[3];
  v3 = v0[4];
  objc_msgSend(v1, sel_size);
  return objc_msgSend(v1, sel_drawInRect_, v3, v2, v4, v5);
}

uint64_t sub_23BB01A68()
{
  return swift_deallocObject();
}

uint64_t sub_23BB01A78()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_23BB01A98(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t destroy for ShareReceivedMessageMapView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s12FindMyUICore27ShareReceivedMessageMapViewVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ShareReceivedMessageMapView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShareReceivedMessageMapView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShareReceivedMessageMapView()
{
  return &type metadata for ShareReceivedMessageMapView;
}

uint64_t sub_23BB01C34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB01C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;

  v78 = a2;
  v79 = a3;
  v70 = a1;
  v75 = a4;
  v65 = sub_23BB8A2B0();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65, v4);
  v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C530);
  v7 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  v74 = v7;
  MEMORY[0x24BDAC7A8](v6, v8);
  v62 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB88FCC();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFBD48];
  MEMORY[0x24BDAC7A8](v10, v12);
  v66 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23BB88F9C();
  MEMORY[0x24BDAC7A8](v18, v19);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FC8);
  MEMORY[0x24BDAC7A8](v69, v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FD0);
  MEMORY[0x24BDAC7A8](v68, v23);
  v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FD8);
  MEMORY[0x24BDAC7A8](v67, v26);
  v28 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FE0);
  v71 = *(_QWORD *)(v29 - 8);
  v72 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  v76 = (char *)&v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FE8);
  MEMORY[0x24BDAC7A8](v32, v33);
  v77 = (char *)&v62 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88F90();
  sub_23BB88F30();
  v35 = sub_23BB88F3C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v17, 0, 1, v35);
  v84 = MEMORY[0x24BEE4AF8];
  sub_23B97D0C8((unint64_t *)&qword_256A5D0D8, v11, MEMORY[0x24BDFBD58]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
  sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
  sub_23BB8AD84();
  v36 = v70;
  v80 = v70;
  v81 = v78;
  v82 = v79;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A61FF0);
  sub_23B996E1C(&qword_256A61FF8, &qword_256A61FF0, MEMORY[0x24BDFBC20]);
  v37 = v36;
  v38 = v76;
  sub_23BB88EE8();
  sub_23BB89BA8();
  sub_23BB892A8();
  v84 = v39;
  v85 = v40;
  v86 = v41;
  v87 = v42;
  v88 = 0;
  sub_23BB89A4C();
  sub_23B989EFC((uint64_t)v22, (uint64_t)v25, &qword_256A61FC8);
  v25[*(int *)(v68 + 36)] = 0;
  sub_23B989D60((uint64_t)v22, &qword_256A61FC8);
  sub_23B989EFC((uint64_t)v25, (uint64_t)v28, &qword_256A61FD0);
  v28[*(int *)(v67 + 36)] = 0;
  v43 = (uint64_t)v25;
  v44 = (uint64_t)v77;
  sub_23B989D60(v43, &qword_256A61FD0);
  sub_23BB02A9C();
  sub_23BB89D4C();
  v45 = (uint64_t)v28;
  v46 = v73;
  sub_23B989D60(v45, &qword_256A61FD8);
  v47 = sub_23BB8A2F8();
  v49 = v48;
  v50 = 1;
  v51 = v44 + *(int *)(v32 + 36);
  if (!*(_QWORD *)(v37 + 16))
  {
    v52 = v63;
    sub_23BB8A2A4();
    v53 = v64;
    v54 = v62;
    v55 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v62, v52, v65);
    *(_WORD *)&v54[*(int *)(v46 + 56)] = 256;
    v56 = *(void (**)(char *, uint64_t))(v53 + 8);
    v44 = (uint64_t)v77;
    v56(v52, v55);
    v57 = (uint64_t)v54;
    v38 = v76;
    sub_23BB02D14(v57, v51);
    v50 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v51, v50, 1, v46);
  v58 = (uint64_t *)(v51 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62028) + 36));
  *v58 = v47;
  v58[1] = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v44, v38, v72);
  v83 = v37;
  v59 = (_QWORD *)swift_allocObject();
  v60 = v78;
  v59[2] = v37;
  v59[3] = v60;
  v59[4] = v79;
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BB02C68();
  sub_23BA22410();
  sub_23BB89F14();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23B989D60(v44, &qword_256A61FE8);
}

uint64_t sub_23BB022AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62040);
  v3 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v33 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
  v39 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v33 - v17;
  v36 = (char *)&v33 - v17;
  sub_23BB89128();
  v44 = a1;
  swift_bridgeObjectRetain();
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62048);
  sub_23B996E1C(&qword_256A5D160, &qword_256A5A1B8, MEMORY[0x24BEE12D8]);
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62050);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62058);
  v21 = sub_23B996E1C(&qword_256A62060, &qword_256A62058, MEMORY[0x24BDFBF10]);
  v42 = v20;
  v43 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v42 = v19;
  v43 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_23B97D0C8(&qword_256A5D170, (uint64_t (*)(uint64_t))type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
  v23 = v10;
  v34 = v10;
  sub_23BB8A1F0();
  v24 = v39;
  v25 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v35 = v14;
  v25(v14, v18, v11);
  v26 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v27 = v40;
  v26(v6, v23, v40);
  v28 = v41;
  v25(v41, v14, v11);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62068);
  v26(&v28[*(int *)(v29 + 48)], v6, v27);
  v30 = *(void (**)(char *, uint64_t))(v3 + 8);
  v30(v34, v27);
  v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  v31(v36, v11);
  v30(v6, v27);
  return ((uint64_t (*)(char *, uint64_t))v31)(v35, v11);
}

uint64_t sub_23BB02574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62058);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62050);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = v12;
  v16 = a1;
  swift_bridgeObjectRetain();
  sub_23BB8A37C();
  type metadata accessor for AnnotationView();
  sub_23B97D0C8((unint64_t *)&qword_256A5F1A8, (uint64_t (*)(uint64_t))type metadata accessor for AnnotationView, (uint64_t)&unk_23BB96430);
  sub_23B9967E0();
  sub_23BB8911C();
  v13 = sub_23B996E1C(&qword_256A62060, &qword_256A62058, MEMORY[0x24BDFBF10]);
  sub_23BB890E0();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  v17 = v2;
  v18 = v13;
  swift_getOpaqueTypeConformance2();
  sub_23BB890EC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

double sub_23BB02754@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v4 = sub_23BB89F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA2252C(a1, a2);
  v9 = (int *)type metadata accessor for AnnotationView();
  v10 = a2 + v9[5];
  *(_OWORD *)v10 = xmmword_23BB92480;
  *(_OWORD *)(v10 + 16) = xmmword_23BB92490;
  *(_OWORD *)(v10 + 32) = xmmword_23BB924A0;
  *(_QWORD *)(v10 + 48) = 0x3FF8000000000000;
  v11 = a2 + v9[6];
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  *(_QWORD *)&v22 = MEMORY[0x24260BF80](v12);
  v13 = sub_23BB89398();
  *(_QWORD *)&v22 = sub_23BB89FE0();
  v14 = sub_23BB89398();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BDF3C28], v4);
  v15 = MEMORY[0x24260BF74](v8, 0.882, 0.882, 0.882, 1.0);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = 0;
  *(_QWORD *)(v11 + 16) = v14;
  *(_QWORD *)(v11 + 24) = 0x4010000000000000;
  *(_QWORD *)(v11 + 32) = v15;
  *(_OWORD *)(v11 + 40) = xmmword_23BB924B0;
  *(_BYTE *)(a2 + v9[7]) = 0;
  *(_BYTE *)(a2 + v9[8]) = 0;
  v16 = a2 + v9[9];
  LOBYTE(v21) = 0;
  sub_23BB8A0C4();
  v17 = *((_QWORD *)&v22 + 1);
  *(_BYTE *)v16 = v22;
  *(_QWORD *)(v16 + 8) = v17;
  v18 = v9[10];
  v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1C8);
  sub_23BB8A0C4();
  result = *(double *)&v22;
  *(_OWORD *)(a2 + v18) = v22;
  return result;
}

uint64_t sub_23BB02950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16) && *(_QWORD *)(*(_QWORD *)a2 + 16))
  {
    v2 = sub_23BB8A31C();
    MEMORY[0x24BDAC7A8](v2, v3);
    sub_23BB893F8();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
    return sub_23BB8A0DC();
  }
}

uint64_t sub_23BB02A30()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  return sub_23BB8A0DC();
}

uint64_t sub_23BB02A84@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23BB01C44(*v1, v1[1], v1[2], a1);
}

uint64_t sub_23BB02A90@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23BB022AC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BB02A9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62000;
  if (!qword_256A62000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61FD8);
    v2[0] = sub_23BB02B20();
    v2[1] = sub_23B996E1C(&qword_256A5D120, &qword_256A5D128, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62000);
  }
  return result;
}

unint64_t sub_23BB02B20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62008;
  if (!qword_256A62008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61FD0);
    v2[0] = sub_23BB02B8C();
    v2[1] = sub_23BA223CC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62008);
  }
  return result;
}

unint64_t sub_23BB02B8C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62010;
  if (!qword_256A62010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61FC8);
    v2[0] = sub_23B996E1C(&qword_256A62018, &qword_256A62020, MEMORY[0x24BDFBC78]);
    v2[1] = sub_23B97D0C8((unint64_t *)&qword_256A5AF28, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62010);
  }
  return result;
}

uint64_t sub_23BB02C28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB02C5C(uint64_t a1, uint64_t a2)
{
  return sub_23BB02950(a1, a2);
}

unint64_t sub_23BB02C68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A62030;
  if (!qword_256A62030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61FE8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61FD8);
    v2[3] = sub_23BB02A9C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A62038, &qword_256A62028, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62030);
  }
  return result;
}

uint64_t sub_23BB02D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB02D5C()
{
  return sub_23BB02A30();
}

double sub_23BB02D78@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BB02754(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23BB02D80()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A61FE8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A1B8);
  sub_23BB02C68();
  sub_23BA22410();
  return swift_getOpaqueTypeConformance2();
}

uint64_t static PeopleLocationsProvider.live()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = sub_23BB88AE0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_23BB88AF8();
  v1[6] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[7] = sub_23BB8A9E8();
  v1[8] = sub_23BB8A988();
  v1[9] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB02EA4()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[4] + 104))(v0[5], *MEMORY[0x24BE31D60], v0[3]);
  sub_23BB88B04();
  sub_23BB88D8C();
  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = v1;
  *v1 = v0;
  v1[1] = sub_23BB02F38;
  return sub_23BB88D98();
}

uint64_t sub_23BB02F38(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB02F90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = &unk_256A62080;
  v2[1] = v1;
  v2[2] = &unk_256A62090;
  v2[3] = v1;
  v2[4] = &unk_256A620A0;
  v2[5] = v1;
  v2[6] = &unk_256A620B0;
  v2[7] = v1;
  v2[8] = sub_23BB04A14;
  v2[9] = 0;
  v2[10] = sub_23BB04A28;
  v2[11] = 0;
  swift_retain_n();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB03038(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v1[2] = sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_23BB030B0;
  return sub_23BB031C0(a1);
}

uint64_t sub_23BB030B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB03138()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB0316C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B97C964;
  return sub_23BB03038(a1);
}

uint64_t sub_23BB031C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v2[4] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A620D0);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A620D8) - 8);
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v5 = sub_23BB88AC8();
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF48);
  v2[16] = swift_task_alloc();
  v2[17] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A620E0);
  v2[18] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A620E8);
  v2[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[20] = v7;
  v2[21] = *(_QWORD *)(v7 + 64);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BB0333C()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 104))(v0[14], *MEMORY[0x24BE31D08], v0[12]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = v1;
  *v1 = v0;
  v1[1] = sub_23BB033BC;
  return sub_23BB88D14();
}

uint64_t sub_23BB033BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BB03440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 40);
  sub_23B996E1C(&qword_256A5DF80, &qword_256A5DF48, MEMORY[0x24BEE6AA8]);
  sub_23BB8B144();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62100);
  sub_23B996E1C(&qword_256A62108, &qword_256A620E0, MEMORY[0x24BEE7030]);
  sub_23BB8AF94();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62110);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  *(_QWORD *)(swift_task_alloc() + 16) = v2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BEE6A10], v12);
  sub_23BB8AA6C();
  swift_task_dealloc();
  v7 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v1, v15);
  sub_23BB06310(v2, v14);
  v8 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v9 = (v18 + *(unsigned __int8 *)(v17 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v10 + v8, v16, v15);
  sub_23B990D24(v14, v10 + v9, &qword_256A620D8);
  sub_23B989F54(v5, (uint64_t)&unk_256A62120, v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v15);
  sub_23B989D60(v2, &qword_256A620D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB0373C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB037E0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BB03848;
  return sub_23BB88D08();
}

uint64_t sub_23BB03848()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB038D0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BB037E0();
}

uint64_t sub_23BB03918(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v1[2] = sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_23BB03848;
  return sub_23BB039DC(a1);
}

uint64_t sub_23BB0398C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  return sub_23BB03918(a1);
}

uint64_t sub_23BB039DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23BB88C78();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = sub_23BB88AC8();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BB03A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BB05FA4(v1);
  *(_QWORD *)(v0 + 96) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 160) = v3;
  v4 = *(_QWORD *)(v2 + 64);
  *(_DWORD *)(v0 + 144) = *MEMORY[0x24BE31CF0];
  v5 = -1;
  v6 = -1 << v3;
  *(_DWORD *)(v0 + 148) = *MEMORY[0x24BE31CF8];
  *(_DWORD *)(v0 + 152) = *MEMORY[0x24BE31D08];
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  *(_DWORD *)(v0 + 156) = *MEMORY[0x24BE31D00];
  v7 = v5 & v4;
  if (v7)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v7));
    v10 = (v7 - 1) & v7;
    goto LABEL_5;
  }
  v22 = 63 - v6;
  if (v22 > 0x7F)
  {
    v23 = *(_QWORD *)(v2 + 72);
    if (v23)
    {
      v8 = 1;
LABEL_14:
      v10 = (v23 - 1) & v23;
      v9 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_5:
      *(_QWORD *)(v0 + 104) = v8;
      *(_QWORD *)(v0 + 112) = v10;
      v11 = *(_QWORD *)(v2 + 48);
      v12 = *(unsigned __int8 *)(v11 + v9);
      v13 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v9);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v28 = *(unsigned __int8 *)(v11 + v9);
        *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_23BB006A8(0, v14, 0);
        v15 = *(_QWORD *)(v0 + 16);
        v16 = v13 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_23BB88C6C();
          *(_QWORD *)(v0 + 16) = v15;
          v18 = *(_QWORD *)(v15 + 16);
          v17 = *(_QWORD *)(v15 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_23BB006A8(v17 > 1, v18 + 1, 1);
            v15 = *(_QWORD *)(v0 + 16);
          }
          v20 = *(_QWORD *)(v0 + 48);
          v19 = *(_QWORD *)(v0 + 56);
          v21 = *(_QWORD *)(v0 + 40);
          *(_QWORD *)(v15 + 16) = v18 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v18, v19, v21);
          v16 += 24;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        v12 = v28;
      }
      else
      {
        v15 = MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)(v0 + 120) = v15;
      __asm { BR              X9 }
    }
    if (v22 >= 0xC0)
    {
      v23 = *(_QWORD *)(v2 + 80);
      if (v23)
      {
        v8 = 2;
        goto LABEL_14;
      }
      if (v22 >= 0x100)
      {
        v23 = *(_QWORD *)(v2 + 88);
        if (v23)
        {
          v8 = 3;
          goto LABEL_14;
        }
        if (v22 >= 0x140)
        {
          v23 = *(_QWORD *)(v2 + 96);
          if (v23)
          {
            v8 = 4;
          }
          else
          {
            v24 = 0;
            v25 = v22 >> 6;
            if (v25 <= 5)
              v25 = 5;
            v26 = v25 - 5;
            do
            {
              if (v26 == v24)
                goto LABEL_32;
              v23 = *(_QWORD *)(v2 + 104 + 8 * v24++);
            }
            while (!v23);
            v8 = v24 + 4;
          }
          goto LABEL_14;
        }
      }
    }
  }
LABEL_32:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB03E08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[9] + 8))(v2[11], v2[8]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_23BB03E90()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  if (!v2)
  {
    v16 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
    }
    else
    {
      v17 = (unint64_t)((1 << *(_BYTE *)(v0 + 160)) + 63) >> 6;
      v5 = *(_QWORD *)(v0 + 96);
      if (v16 >= v17)
        goto LABEL_25;
      v18 = v5 + 64;
      v19 = *(_QWORD *)(v5 + 64 + 8 * v16);
      ++v1;
      if (v19)
      {
LABEL_12:
        v3 = (v19 - 1) & v19;
        v4 = __clz(__rbit64(v19)) + (v1 << 6);
        goto LABEL_3;
      }
      v1 = v16 + 1;
      if (v16 + 1 >= v17)
        goto LABEL_25;
      v19 = *(_QWORD *)(v18 + 8 * v1);
      if (v19)
        goto LABEL_12;
      v1 = v16 + 2;
      if (v16 + 2 >= v17)
        goto LABEL_25;
      v19 = *(_QWORD *)(v18 + 8 * v1);
      if (v19)
        goto LABEL_12;
      v25 = v16 + 3;
      if (v25 >= v17)
      {
LABEL_25:
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v19 = *(_QWORD *)(v18 + 8 * v25);
      if (v19)
      {
        v1 = v25;
        goto LABEL_12;
      }
      while (1)
      {
        v1 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        if (v1 >= v17)
          goto LABEL_25;
        v19 = *(_QWORD *)(v18 + 8 * v1);
        ++v25;
        if (v19)
          goto LABEL_12;
      }
    }
    __break(1u);
    return;
  }
  v3 = (v2 - 1) & v2;
  v4 = __clz(__rbit64(v2)) | (v1 << 6);
  v5 = *(_QWORD *)(v0 + 96);
LABEL_3:
  *(_QWORD *)(v0 + 104) = v1;
  *(_QWORD *)(v0 + 112) = v3;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v4);
  v7 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v26 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v4);
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23BB006A8(0, v8, 0);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23BB88C6C();
      *(_QWORD *)(v0 + 16) = v9;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_23BB006A8(v11 > 1, v12 + 1, 1);
        v9 = *(_QWORD *)(v0 + 16);
      }
      v14 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 56);
      v15 = *(_QWORD *)(v0 + 40);
      *(_QWORD *)(v9 + 16) = v12 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v9+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, v13, v15);
      v10 += 24;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v6 = v26;
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 120) = v9;
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v20, *(unsigned int *)(v0 - 4 * v6 + 156), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v21, v20, v22);
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v24;
  *v24 = v0;
  v24[1] = sub_23BB03E08;
  sub_23BB88D2C();
}

uint64_t sub_23BB0416C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB041C8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v1[2] = sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_23BB03848;
  return sub_23BB0428C(a1);
}

uint64_t sub_23BB0423C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  return sub_23BB041C8(a1);
}

uint64_t sub_23BB0428C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23BB88C78();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v4 = sub_23BB88AC8();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BB04324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23BB05FA4(v1);
  *(_QWORD *)(v0 + 96) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 160) = v3;
  v4 = *(_QWORD *)(v2 + 64);
  *(_DWORD *)(v0 + 144) = *MEMORY[0x24BE31CF0];
  v5 = -1;
  v6 = -1 << v3;
  *(_DWORD *)(v0 + 148) = *MEMORY[0x24BE31CF8];
  *(_DWORD *)(v0 + 152) = *MEMORY[0x24BE31D08];
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  *(_DWORD *)(v0 + 156) = *MEMORY[0x24BE31D00];
  v7 = v5 & v4;
  if (v7)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v7));
    v10 = (v7 - 1) & v7;
    goto LABEL_5;
  }
  v22 = 63 - v6;
  if (v22 > 0x7F)
  {
    v23 = *(_QWORD *)(v2 + 72);
    if (v23)
    {
      v8 = 1;
LABEL_14:
      v10 = (v23 - 1) & v23;
      v9 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_5:
      *(_QWORD *)(v0 + 104) = v8;
      *(_QWORD *)(v0 + 112) = v10;
      v11 = *(_QWORD *)(v2 + 48);
      v12 = *(unsigned __int8 *)(v11 + v9);
      v13 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v9);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v28 = *(unsigned __int8 *)(v11 + v9);
        *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_23BB006A8(0, v14, 0);
        v15 = *(_QWORD *)(v0 + 16);
        v16 = v13 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_23BB88C6C();
          *(_QWORD *)(v0 + 16) = v15;
          v18 = *(_QWORD *)(v15 + 16);
          v17 = *(_QWORD *)(v15 + 24);
          if (v18 >= v17 >> 1)
          {
            sub_23BB006A8(v17 > 1, v18 + 1, 1);
            v15 = *(_QWORD *)(v0 + 16);
          }
          v20 = *(_QWORD *)(v0 + 48);
          v19 = *(_QWORD *)(v0 + 56);
          v21 = *(_QWORD *)(v0 + 40);
          *(_QWORD *)(v15 + 16) = v18 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v18, v19, v21);
          v16 += 24;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        v12 = v28;
      }
      else
      {
        v15 = MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)(v0 + 120) = v15;
      __asm { BR              X9 }
    }
    if (v22 >= 0xC0)
    {
      v23 = *(_QWORD *)(v2 + 80);
      if (v23)
      {
        v8 = 2;
        goto LABEL_14;
      }
      if (v22 >= 0x100)
      {
        v23 = *(_QWORD *)(v2 + 88);
        if (v23)
        {
          v8 = 3;
          goto LABEL_14;
        }
        if (v22 >= 0x140)
        {
          v23 = *(_QWORD *)(v2 + 96);
          if (v23)
          {
            v8 = 4;
          }
          else
          {
            v24 = 0;
            v25 = v22 >> 6;
            if (v25 <= 5)
              v25 = 5;
            v26 = v25 - 5;
            do
            {
              if (v26 == v24)
                goto LABEL_32;
              v23 = *(_QWORD *)(v2 + 104 + 8 * v24++);
            }
            while (!v23);
            v8 = v24 + 4;
          }
          goto LABEL_14;
        }
      }
    }
  }
LABEL_32:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB046B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[9] + 8))(v2[11], v2[8]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_23BB0473C()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  if (!v2)
  {
    v16 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
    }
    else
    {
      v17 = (unint64_t)((1 << *(_BYTE *)(v0 + 160)) + 63) >> 6;
      v5 = *(_QWORD *)(v0 + 96);
      if (v16 >= v17)
        goto LABEL_25;
      v18 = v5 + 64;
      v19 = *(_QWORD *)(v5 + 64 + 8 * v16);
      ++v1;
      if (v19)
      {
LABEL_12:
        v3 = (v19 - 1) & v19;
        v4 = __clz(__rbit64(v19)) + (v1 << 6);
        goto LABEL_3;
      }
      v1 = v16 + 1;
      if (v16 + 1 >= v17)
        goto LABEL_25;
      v19 = *(_QWORD *)(v18 + 8 * v1);
      if (v19)
        goto LABEL_12;
      v1 = v16 + 2;
      if (v16 + 2 >= v17)
        goto LABEL_25;
      v19 = *(_QWORD *)(v18 + 8 * v1);
      if (v19)
        goto LABEL_12;
      v25 = v16 + 3;
      if (v25 >= v17)
      {
LABEL_25:
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v19 = *(_QWORD *)(v18 + 8 * v25);
      if (v19)
      {
        v1 = v25;
        goto LABEL_12;
      }
      while (1)
      {
        v1 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        if (v1 >= v17)
          goto LABEL_25;
        v19 = *(_QWORD *)(v18 + 8 * v1);
        ++v25;
        if (v19)
          goto LABEL_12;
      }
    }
    __break(1u);
    return;
  }
  v3 = (v2 - 1) & v2;
  v4 = __clz(__rbit64(v2)) | (v1 << 6);
  v5 = *(_QWORD *)(v0 + 96);
LABEL_3:
  *(_QWORD *)(v0 + 104) = v1;
  *(_QWORD *)(v0 + 112) = v3;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v4);
  v7 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v26 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v4);
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23BB006A8(0, v8, 0);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23BB88C6C();
      *(_QWORD *)(v0 + 16) = v9;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_23BB006A8(v11 > 1, v12 + 1, 1);
        v9 = *(_QWORD *)(v0 + 16);
      }
      v14 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 56);
      v15 = *(_QWORD *)(v0 + 40);
      *(_QWORD *)(v9 + 16) = v12 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v9+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, v13, v15);
      v10 += 24;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v6 = v26;
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 120) = v9;
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v20, *(unsigned int *)(v0 - 4 * v6 + 156), v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v21, v20, v22);
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v24;
  *v24 = v0;
  v24[1] = sub_23BB046B4;
  sub_23BB88CFC();
}

unint64_t sub_23BB04A14()
{
  return 0xA055690D9DB80000;
}

unint64_t sub_23BB04A28(_BYTE *a1)
{
  if (*a1 == 2)
    return 0xA055690D9DB80000;
  else
    return 0;
}

uint64_t sub_23BB04A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  int v47;
  char *v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  int v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  char *v65;
  id v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  Swift::String v74;
  __int128 v75;
  char v76;
  uint64_t v77;
  int v78;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  int v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  FindMyUICore::Handle v188;

  v147 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDB0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v148 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v137 = (char *)&v128 - v6;
  MEMORY[0x24BDAC7A8](v7, v8);
  v146 = (char *)&v128 - v9;
  MEMORY[0x24BDAC7A8](v10, v11);
  v139 = (char *)&v128 - v12;
  MEMORY[0x24BDAC7A8](v13, v14);
  v138 = (char *)&v128 - v15;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v128 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(qword_256A62160);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23BB88AEC();
  v144 = *(_QWORD *)(v24 - 8);
  v145 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v143 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23BB88984();
  v141 = *(_QWORD *)(v27 - 8);
  v142 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v140 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_23BB88C78();
  v30 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152, v31);
  v33 = (char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v35);
  v150 = (char *)&v128 - v36;
  v149 = sub_23BB88E40();
  v37 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149, v38);
  v40 = (char *)&v128 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23BB88BA0();
  v42 = *(_QWORD *)(v41 - 8);
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v46 = (char *)&v128 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v42 + 16))(v46, v151, v41, v44);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v46, v41);
  if (v47 == *MEMORY[0x24BE31F40])
  {
    v129 = v23;
    v151 = v19;
    (*(void (**)(char *, uint64_t))(v42 + 96))(v46, v41);
    v48 = &v46[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFB8) + 48)];
    v49 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v46, v149);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v150, v48, v152);
    v50._countAndFlagsBits = sub_23BB88C54();
    Handle.init(rawValue:)(v50);
    v51 = *((_QWORD *)&v178 + 1);
    v132 = v178;
    v52 = v179;
    sub_23BB88E1C();
    v54 = v53;
    sub_23BB88E28();
    v56 = v55;
    sub_23BB88E04();
    v58 = v57;
    sub_23BB88DC8();
    v60 = v59;
    sub_23BB88DBC();
    v62 = v61;
    sub_23BB88DE0();
    v64 = v63;
    sub_23BB88E34();
    v65 = v140;
    sub_23BB88900();
    v66 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
    v67 = (void *)sub_23BB888D0();
    v131 = objc_msgSend(v66, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v67, v54, v56, v58, v60, v62, 0.0, 0.0, v64, 0);

    (*(void (**)(char *, uint64_t))(v141 + 8))(v65, v142);
    v68 = v143;
    sub_23BB88DB0();
    v70 = v144;
    v69 = v145;
    v71 = (*(uint64_t (**)(char *, uint64_t))(v144 + 88))(v68, v145);
    v72 = *MEMORY[0x24BE31DA8];
    v133 = v49;
    v136 = v51;
    v135 = v52;
    if (v71 == v72)
    {
      LODWORD(v140) = 0;
    }
    else
    {
      if (v71 == *MEMORY[0x24BE31D98])
      {
        v78 = 1;
      }
      else
      {
        if (v71 != *MEMORY[0x24BE31DA0])
        {
          v80 = v40;
          v81 = (uint64_t)v146;
          v82 = (uint64_t)v151;
          if (v71 == *MEMORY[0x24BE31DB0])
          {
            v101 = 3;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
            v101 = 5;
          }
          LODWORD(v140) = v101;
          goto LABEL_13;
        }
        v78 = 2;
      }
      LODWORD(v140) = v78;
    }
    v80 = v40;
    v81 = (uint64_t)v146;
    v82 = (uint64_t)v151;
LABEL_13:
    v83 = (_QWORD *)sub_23BB88DEC();
    v84 = v83[2];
    v134 = v30;
    if (v84)
    {
      v86 = v83[4];
      v85 = v83[5];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v87 = (uint64_t)v129;
      sub_23BB88B64();
      v88 = sub_23BB88B70();
      v89 = *(_QWORD *)(v88 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88) == 1)
      {
        v130 = v86;
        v144 = v85;
        sub_23B989D60(v87, qword_256A62160);
      }
      else
      {
        v130 = sub_23BB88B58();
        v93 = v92;
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
        swift_bridgeObjectRelease();
        v144 = v93;
      }
      v91 = (uint64_t)v138;
      v90 = (uint64_t)v139;
      v82 = (uint64_t)v151;
    }
    else
    {
      swift_bridgeObjectRelease();
      v130 = 0;
      v144 = 0;
      v91 = (uint64_t)v138;
      v90 = (uint64_t)v139;
    }
    sub_23BB88DF8();
    v94 = sub_23BB88EA0();
    v95 = *(_QWORD *)(v94 - 8);
    v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
    if (v96(v82, 1, v94) == 1)
    {
      sub_23B989D60(v82, &qword_256A5DDB0);
      v143 = 0;
      v139 = 0;
      goto LABEL_31;
    }
    v151 = v80;
    v97 = sub_23BB88E70();
    v99 = (unint64_t)v98;
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v82, v94);
    if (v99)
    {
      v100 = HIBYTE(v99) & 0xF;
      if ((v99 & 0x2000000000000000) == 0)
        v100 = v97 & 0xFFFFFFFFFFFFLL;
      if (v100)
      {
        v139 = (char *)v99;
        v143 = (char *)v97;
LABEL_30:
        v81 = (uint64_t)v146;
        v80 = v151;
LABEL_31:
        sub_23BB88DF8();
        if (v96(v91, 1, v94) == 1)
        {
          sub_23B989D60(v91, &qword_256A5DDB0);
LABEL_33:
          v142 = 0;
          v102 = 0;
          goto LABEL_40;
        }
        v103 = sub_23BB88E88();
        v102 = v104;
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v91, v94);
        if (v102)
        {
          v105 = ((unint64_t)v102 >> 56) & 0xF;
          if (((unint64_t)v102 & 0x2000000000000000) == 0)
            v105 = v103 & 0xFFFFFFFFFFFFLL;
          if (!v105)
          {
            swift_bridgeObjectRelease();
            goto LABEL_33;
          }
          v142 = v103;
        }
        else
        {
          v142 = 0;
        }
LABEL_40:
        sub_23BB88DF8();
        if (v96(v90, 1, v94) == 1)
        {
          sub_23B989D60(v90, &qword_256A5DDB0);
LABEL_42:
          v141 = 0;
          v106 = 0;
          goto LABEL_49;
        }
        v107 = sub_23BB88E64();
        v106 = v108;
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v90, v94);
        if (v106)
        {
          v109 = HIBYTE(v106) & 0xF;
          if ((v106 & 0x2000000000000000) == 0)
            v109 = v107 & 0xFFFFFFFFFFFFLL;
          if (!v109)
          {
            swift_bridgeObjectRelease();
            goto LABEL_42;
          }
          v141 = v107;
        }
        else
        {
          v141 = 0;
        }
LABEL_49:
        sub_23BB88DF8();
        if (v96(v81, 1, v94) == 1)
        {
          sub_23B989D60(v81, &qword_256A5DDB0);
LABEL_51:
          v146 = 0;
          v110 = 0;
          goto LABEL_58;
        }
        v111 = sub_23BB88E7C();
        v110 = v112;
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v81, v94);
        if (v110)
        {
          v113 = HIBYTE(v110) & 0xF;
          if ((v110 & 0x2000000000000000) == 0)
            v113 = v111 & 0xFFFFFFFFFFFFLL;
          if (!v113)
          {
            swift_bridgeObjectRelease();
            goto LABEL_51;
          }
          v146 = (char *)v111;
        }
        else
        {
          v146 = 0;
        }
LABEL_58:
        v114 = (uint64_t)v137;
        sub_23BB88DF8();
        v115 = v96(v114, 1, v94);
        v151 = v102;
        v145 = v106;
        if (v115 == 1)
        {
          sub_23B989D60(v114, &qword_256A5DDB0);
LABEL_60:
          v116 = 0;
          v117 = 0;
          goto LABEL_67;
        }
        v116 = sub_23BB88E58();
        v117 = v118;
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v114, v94);
        if (v117)
        {
          v119 = HIBYTE(v117) & 0xF;
          if ((v117 & 0x2000000000000000) == 0)
            v119 = v116 & 0xFFFFFFFFFFFFLL;
          if (!v119)
          {
            swift_bridgeObjectRelease();
            goto LABEL_60;
          }
        }
        else
        {
          v116 = 0;
        }
LABEL_67:
        sub_23BB88DF8();
        v120 = (uint64_t)v148;
        if (v96((uint64_t)v148, 1, v94) == 1)
        {
          (*(void (**)(char *, uint64_t))(v134 + 8))(v150, v152);
          (*(void (**)(char *, uint64_t))(v133 + 8))(v80, v149);
          sub_23B989D60(v120, &qword_256A5DDB0);
        }
        else
        {
          v123 = v80;
          v121 = sub_23BB88E4C();
          v122 = v124;
          (*(void (**)(char *, uint64_t))(v134 + 8))(v150, v152);
          (*(void (**)(char *, uint64_t))(v133 + 8))(v123, v149);
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v120, v94);
          if (!v122)
          {
            v121 = 0;
            goto LABEL_76;
          }
          v125 = HIBYTE(v122) & 0xF;
          if ((v122 & 0x2000000000000000) == 0)
            v125 = v121 & 0xFFFFFFFFFFFFLL;
          if (v125)
            goto LABEL_76;
          swift_bridgeObjectRelease();
        }
        v121 = 0;
        v122 = 0;
LABEL_76:
        v126 = v147;
        v127 = v132;
        *(_QWORD *)&v153 = v131;
        BYTE8(v153) = (_BYTE)v140;
        v154 = v130;
        v155 = v144;
        v156 = v143;
        v157 = v139;
        v158 = v142;
        v159 = v151;
        v160 = v141;
        v161 = v145;
        v162 = v146;
        v163 = v110;
        v164 = v116;
        v165 = v117;
        v166 = v121;
        v167 = v122;
        nullsub_1(&v153);
        *(_QWORD *)&v168 = v127;
        *((_QWORD *)&v168 + 1) = v136;
        LOBYTE(v169) = v135;
        sub_23B990D24((uint64_t)&v153, (uint64_t)&v169 + 8, &qword_256A5AA50);
        v184 = v174;
        v185 = v175;
        v186 = v176;
        v187 = v177;
        v180 = v170;
        v181 = v171;
        v182 = v172;
        v183 = v173;
        v178 = v168;
        v179 = v169;
        nullsub_1(&v178);
        v77 = v126;
        return sub_23B990D24((uint64_t)&v178, v77, &qword_256A62148);
      }
      swift_bridgeObjectRelease();
    }
    v143 = 0;
    v139 = 0;
    goto LABEL_30;
  }
  v73 = v152;
  if (v47 != *MEMORY[0x24BE31F38])
  {
    sub_23BB064FC((uint64_t)&v178);
    sub_23B990D24((uint64_t)&v178, v147, &qword_256A62148);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v46, v41);
  }
  (*(void (**)(char *, uint64_t))(v42 + 96))(v46, v41);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v33, v46, v73);
  v74._countAndFlagsBits = sub_23BB88C54();
  v188 = Handle.init(rawValue:)(v74);
  (*(void (**)(char *, uint64_t, _QWORD))(v30 + 8))(v33, v73, *(_QWORD *)&v188.kind);
  v75 = v178;
  v76 = v179;
  sub_23B9BE144(&v153);
  v168 = v75;
  LOBYTE(v169) = v76;
  sub_23B990D24((uint64_t)&v153, (uint64_t)&v169 + 8, &qword_256A5AA50);
  v184 = v174;
  v185 = v175;
  v186 = v176;
  v187 = v177;
  v180 = v170;
  v181 = v171;
  v182 = v172;
  v183 = v173;
  v178 = v168;
  v179 = v169;
  nullsub_1(&v178);
  v77 = v147;
  return sub_23B990D24((uint64_t)&v178, v77, &qword_256A62148);
}

uint64_t sub_23BB05640(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[152];
  _BYTE v5[152];

  sub_23BB04A4C((uint64_t)v4);
  sub_23B990D24((uint64_t)v4, (uint64_t)v5, &qword_256A62148);
  sub_23B990D24((uint64_t)v5, a1, &qword_256A62148);
  return sub_23BB064F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23BB056AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = a2;
  v3 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v2 + 128) = v3;
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(a2 + 144);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v2 + 64) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v2 + 96) = v5;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v2 + 32) = v6;
  return swift_task_switch();
}

uint64_t sub_23BB056F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *(uint64_t **)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62158);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23BB8C510;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 48) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  v7 = *(_OWORD *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v3 + 112) = v5;
  *(_OWORD *)(v3 + 64) = v7;
  *(_OWORD *)(v3 + 80) = v6;
  v9 = *(_OWORD *)(v1 + 112);
  v8 = *(_OWORD *)(v1 + 128);
  v10 = *(_OWORD *)(v1 + 96);
  *(_QWORD *)(v3 + 176) = *(_QWORD *)(v1 + 144);
  *(_OWORD *)(v3 + 144) = v9;
  *(_OWORD *)(v3 + 160) = v8;
  *(_OWORD *)(v3 + 128) = v10;
  *v2 = v3;
  sub_23BAB9C64(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB0578C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23B989D60(a2, &qword_256A620D8);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62110);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_23BB05800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[123] = a5;
  v5[122] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A620D8);
  v5[124] = swift_task_alloc();
  v5[125] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62128);
  v5[126] = swift_task_alloc();
  v5[127] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A620E0);
  v5[128] = swift_task_alloc();
  v5[129] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62130);
  v5[130] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62138);
  v5[131] = v6;
  v5[132] = *(_QWORD *)(v6 - 8);
  v5[133] = swift_task_alloc();
  v5[134] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BB05920()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A620E8);
  sub_23BB8AF4C();
  sub_23B996E1C(&qword_256A62108, &qword_256A620E0, MEMORY[0x24BEE7030]);
  sub_23BB8AAD8();
  sub_23BB8AF64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62100);
  sub_23BB8AF70();
  return swift_task_switch();
}

uint64_t sub_23BB05A10()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 1080) = sub_23BB8AF58();
  sub_23B996E1C(&qword_256A62140, &qword_256A62130, MEMORY[0x24BEE7008]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1088) = v1;
  *v1 = v0;
  v1[1] = sub_23BB05AB4;
  return sub_23BB8A9D0();
}

uint64_t sub_23BB05AB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 1080))(v2 + 928, 0);
  return swift_task_switch();
}

uint64_t sub_23BB05B24()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t);

  sub_23B990D24(v0 + 168, v0 + 624, &qword_256A62148);
  sub_23B990D24(v0 + 624, v0 + 472, &qword_256A62148);
  if (sub_23BAA28BC(v0 + 472) == 1)
    return swift_task_switch();
  v2 = *(_QWORD *)(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1056);
  v5 = *(_QWORD *)(v0 + 1048);
  sub_23B990D24(v0 + 624, v0 + 320, &qword_256A62148);
  v6 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 128) = v6;
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 448);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 464);
  v7 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 64) = v7;
  v8 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 96) = v8;
  v9 = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 32) = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  v10 = (int *)sub_23BB8AF64();
  *(_QWORD *)(v0 + 1096) = v11;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1104) = v12;
  *v12 = v0;
  v12[1] = sub_23BB05CB0;
  return v13(v0 + 960, v0 + 16);
}

uint64_t sub_23BB05CA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080))(v0 + 928, 1);
}

uint64_t sub_23BB05CB0()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v1 = *v0;
  v2 = (_OWORD *)(*v0 + 776);
  swift_task_dealloc();
  swift_release();
  *(_QWORD *)(v1 + 1112) = *(_QWORD *)(v1 + 960);
  v3 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v1 + 872) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v1 + 888) = v3;
  *(_OWORD *)(v1 + 904) = *(_OWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 920) = *(_QWORD *)(v1 + 160);
  v4 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v1 + 808) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v1 + 824) = v4;
  v5 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v1 + 840) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v1 + 856) = v5;
  v6 = *(_OWORD *)(v1 + 32);
  *v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v1 + 792) = v6;
  sub_23BAB9D1C(v1 + 776);
  return swift_task_switch();
}

uint64_t sub_23BB05D58()
{
  return swift_task_switch();
}

uint64_t sub_23BB05D6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[125];
  sub_23BB06310(v0[123], v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62110);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = v0[126];
    v5 = v0[125];
    swift_bridgeObjectRelease();
    sub_23B989D60(v5, &qword_256A620D8);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62150);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  }
  else
  {
    v7 = v0[126];
    v8 = v0[125];
    v0[121] = v0[139];
    sub_23BB8AA3C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v2);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62150);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  }
  sub_23B989D60(v0[126], &qword_256A62128);
  return swift_task_switch();
}

uint64_t sub_23BB05E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 992);
  v2 = *(_QWORD *)(v0 + 984);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1056) + 8))(*(_QWORD *)(v0 + 1072), *(_QWORD *)(v0 + 1048));
  sub_23BB06310(v2, v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62110);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 992);
  if (v5 == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 992), &qword_256A620D8);
  }
  else
  {
    sub_23BB8AA48();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB05FA4(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v38;
  int64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = a1;
  v2 = 0;
  v3 = (_QWORD *)MEMORY[0x24BEE4B00];
  v42 = (_QWORD *)MEMORY[0x24BEE4B00];
  v38 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v39 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v41 = (v6 - 1) & v6;
      v7 = __clz(__rbit64(v6)) | (v2 << 6);
    }
    else
    {
      v8 = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_37;
      if (v8 >= v39)
      {
LABEL_34:
        swift_release();
        return (uint64_t)v3;
      }
      v9 = *(_QWORD *)(v38 + 8 * v8);
      ++v2;
      if (!v9)
      {
        v2 = v8 + 1;
        if (v8 + 1 >= v39)
          goto LABEL_34;
        v9 = *(_QWORD *)(v38 + 8 * v2);
        if (!v9)
        {
          v2 = v8 + 2;
          if (v8 + 2 >= v39)
            goto LABEL_34;
          v9 = *(_QWORD *)(v38 + 8 * v2);
          if (!v9)
          {
            v2 = v8 + 3;
            if (v8 + 3 >= v39)
              goto LABEL_34;
            v9 = *(_QWORD *)(v38 + 8 * v2);
            if (!v9)
            {
              v10 = v8 + 4;
              if (v10 >= v39)
                goto LABEL_34;
              v9 = *(_QWORD *)(v38 + 8 * v10);
              if (!v9)
              {
                while (1)
                {
                  v2 = v10 + 1;
                  if (__OFADD__(v10, 1))
                    goto LABEL_38;
                  if (v2 >= v39)
                    goto LABEL_34;
                  v9 = *(_QWORD *)(v38 + 8 * v2);
                  ++v10;
                  if (v9)
                    goto LABEL_21;
                }
              }
              v2 = v10;
            }
          }
        }
      }
LABEL_21:
      v41 = (v9 - 1) & v9;
      v7 = __clz(__rbit64(v9)) + (v2 << 6);
    }
    v11 = *(_QWORD *)(v1 + 48) + 24 * v7;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_BYTE *)(v11 + 16);
    v15 = *(unsigned __int8 *)(v11 + 17);
    v16 = sub_23B984B98(v15);
    v18 = v3[2];
    v19 = (v17 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    v22 = v17;
    v40 = v2;
    v23 = v3[3];
    swift_bridgeObjectRetain();
    if (v23 < v20)
    {
      sub_23BB4D62C(v20, 1);
      v3 = v42;
      v24 = sub_23B984B98(v15);
      if ((v22 & 1) != (v25 & 1))
        goto LABEL_39;
      v21 = v24;
    }
    if ((v22 & 1) != 0)
    {
      v26 = v3[7];
      v27 = *(_QWORD **)(v26 + 8 * v21);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v26 + 8 * v21) = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_23BB64354(0, v27[2] + 1, 1, v27);
        *(_QWORD *)(v26 + 8 * v21) = v27;
      }
      v30 = v27[2];
      v29 = v27[3];
      if (v30 >= v29 >> 1)
      {
        v27 = sub_23BB64354((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
        *(_QWORD *)(v26 + 8 * v21) = v27;
      }
      v27[2] = v30 + 1;
      v31 = &v27[3 * v30];
      v31[4] = v12;
      v31[5] = v13;
      *((_BYTE *)v31 + 48) = v14;
      *((_BYTE *)v31 + 49) = v15;
      v1 = a1;
      v2 = v40;
      v6 = v41;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EFC0);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_23BB8C510;
      *(_QWORD *)(v32 + 32) = v12;
      *(_QWORD *)(v32 + 40) = v13;
      *(_BYTE *)(v32 + 48) = v14;
      *(_BYTE *)(v32 + 49) = v15;
      v3[(v21 >> 6) + 8] |= 1 << v21;
      *(_BYTE *)(v3[6] + v21) = v15;
      *(_QWORD *)(v3[7] + 8 * v21) = v32;
      v33 = v3[2];
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      v2 = v40;
      if (v34)
        goto LABEL_36;
      v3[2] = v35;
      v6 = v41;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BB06308(uint64_t a1)
{
  uint64_t v1;

  return sub_23BB0578C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23BB06310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A620D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB06358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A620E8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A620D8) - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62110);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23BB06438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A620E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A620D8) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B97C964;
  return sub_23BB05800(a1, v9, v10, v11, v12);
}

uint64_t sub_23BB064F4(uint64_t (*a1)(void))
{
  return a1();
}

double sub_23BB064FC(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t *sub_23BB06528(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DirectionsState();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v10 = *(int *)(v7 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23BB06620(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for DirectionsState();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + *(int *)(v2 + 24);
    v5 = sub_23BB88984();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_BYTE *sub_23BB06690(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v8 = *(int *)(v6 + 24);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_23BB06764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v17 = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = v17;
      v18 = *(int *)(v6 + 24);
      v19 = a1 + v18;
      v20 = a2 + v18;
      v21 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
      return a1;
    }
    sub_23B989D9C(a1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v11 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v11;
  v12 = *(int *)(v6 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

_BYTE *sub_23BB068B4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v8 = *(int *)(v6 + 24);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_23BB06988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v16 = *(int *)(v6 + 24);
      v17 = a1 + v16;
      v18 = a2 + v16;
      v19 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
      return a1;
    }
    sub_23B989D9C(a1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v11 = *(int *)(v6 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23BB06AD8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB06AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for DirectionsState();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23BB06B30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB06B3C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for DirectionsState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BB06B90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DirectionsState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23BB06BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DirectionsState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t type metadata accessor for LocateAction()
{
  uint64_t result;

  result = qword_256A621D8;
  if (!qword_256A621D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BB06C44()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DirectionsState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_23BB06C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t Action;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  char v21;
  uint64_t v23;

  v4 = type metadata accessor for DirectionsState();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (unsigned __int8 *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Action = type metadata accessor for LocateAction();
  MEMORY[0x24BDAC7A8](Action, v10);
  v12 = (unsigned __int8 *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A621E8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v16[*(int *)(v17 + 48)];
  sub_23BB06E9C(a1, (uint64_t)v16);
  sub_23BB06E9C(a2, v18);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v20 = v19(v16, 2, v4);
  if (!v20)
  {
    sub_23BB06E9C((uint64_t)v16, (uint64_t)v12);
    if (!v19((char *)v18, 2, v4))
    {
      sub_23BB06F20(v18, (uint64_t)v8);
      v21 = sub_23BB432F8(v12, v8);
      sub_23B989D9C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      sub_23B989D9C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      sub_23B989D9C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
      return v21 & 1;
    }
    sub_23B989D9C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_9;
  }
  if (v20 == 1)
  {
    if (v19((char *)v18, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v19((char *)v18, 2, v4) != 2)
  {
LABEL_9:
    sub_23BB06EE0((uint64_t)v16);
    v21 = 0;
    return v21 & 1;
  }
  sub_23B989D9C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  v21 = 1;
  return v21 & 1;
}

uint64_t sub_23BB06E9C(uint64_t a1, uint64_t a2)
{
  uint64_t Action;

  Action = type metadata accessor for LocateAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Action - 8) + 16))(a2, a1, Action);
  return a2;
}

uint64_t sub_23BB06EE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A621E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB06F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DirectionsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_23BB06F64()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_altDSIDForAccount_, v0);

  if (!v3)
    return 0;
  v4 = objc_msgSend(v1, sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_authKitAccountWithAltDSID_, v3);

  if (!v5)
    return 0;
  v6 = objc_msgSend(v1, sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_securityLevelForAccount_, v5);

  return v7;
}

uint64_t getEnumTagSinglePayload for Handle.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowerAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BB07134 + 4 * byte_23BB95411[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23BB07168 + 4 * byte_23BB9540C[v4]))();
}

uint64_t sub_23BB07168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB07170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB07178);
  return result;
}

uint64_t sub_23BB07184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB0718CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23BB07190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB07198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowerAction()
{
  return &type metadata for FollowerAction;
}

unint64_t sub_23BB071B8()
{
  unint64_t result;

  result = qword_256A621F0;
  if (!qword_256A621F0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB95428, &type metadata for FollowerAction);
    atomic_store(result, (unint64_t *)&qword_256A621F0);
  }
  return result;
}

uint64_t sub_23BB071FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository);
  if (!v1)
    return 0;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  if (!v2)
    return 0;
  swift_retain();
  v3 = v2;
  v4 = sub_23B99AD3C((uint64_t)objc_msgSend(v3, sel_authorizationStatus), (uint64_t)&unk_250CA9978);
  swift_release();

  return v4 & 1;
}

uint64_t sub_23BB07280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];

  v2 = v1;
  v51 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v50 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CompositeAppViewState(0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v48 = (uint64_t)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v43 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CompositeAppViewInitialInfo();
  v49 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v49 + 64);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)v43 - v23;
  if (qword_256A58E00 != -1)
    swift_once();
  v25 = sub_23BB891C4();
  __swift_project_value_buffer(v25, (uint64_t)qword_256A73E80);
  sub_23B989CE8(v51, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  v26 = sub_23BB891AC();
  v27 = sub_23BB8ABEC();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v46 = v12;
    v29 = v28;
    v44 = swift_slowAlloc();
    v53[0] = v44;
    *(_DWORD *)v29 = 136315394;
    v45 = v16;
    v52 = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9A590, v53);
    v47 = v18;
    sub_23BB8ACB8();
    *(_WORD *)(v29 + 12) = 2080;
    v43[1] = v29 + 14;
    sub_23B989CE8((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    v30 = sub_23BB8A7D8();
    v52 = sub_23BB7B69C(v30, v31, v53);
    sub_23BB8ACB8();
    v16 = v45;
    swift_bridgeObjectRelease();
    sub_23B989D9C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    _os_log_impl(&dword_23B979000, v26, v27, "CompositeAppViewModel: %s - %s", (uint8_t *)v29, 0x16u);
    v32 = v44;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v32, -1, -1);
    v33 = v29;
    v12 = v46;
    MEMORY[0x24260D9B4](v33, -1, -1);
  }
  else
  {
    sub_23B989D9C((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }

  sub_23B989CE8(v51, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  v34 = v49;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v16, 0, 1, v17);
  v35 = v2 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23BB0C78C((uint64_t)v16, v35);
  swift_endAccess();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_stillWantsToSubscribe) = 1;
  sub_23BB88D8C();
  if ((sub_23BB88CCC() & 1) != 0)
    sub_23B989CE8(v51 + *(int *)(v17 + 28), (uint64_t)v12, type metadata accessor for CompositeAppViewState);
  else
    swift_storeEnumTagMultiPayload();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23B989CE8((uint64_t)v12, v48, type metadata accessor for CompositeAppViewState);
  swift_retain();
  sub_23BB8923C();
  sub_23B989D9C((uint64_t)v12, type metadata accessor for CompositeAppViewState);
  v36 = sub_23BB8AA18();
  v37 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v50, 1, 1, v36);
  sub_23B989CE8(v51, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  sub_23BB8A9F4();
  swift_retain();
  v38 = sub_23BB8A9E8();
  v39 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v40 = (_QWORD *)swift_allocObject();
  v41 = MEMORY[0x24BEE6930];
  v40[2] = v38;
  v40[3] = v41;
  v40[4] = v2;
  sub_23BB0C2EC((uint64_t)v21, (uint64_t)v40 + v39);
  sub_23B989F54(v37, (uint64_t)&unk_256A62360, (uint64_t)v40);
  return swift_release();
}

uint64_t sub_23BB077BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_stillWantsToSubscribe) = 0;
  v2 = OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    v3 = qword_256A58E00;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_23BB891C4();
    __swift_project_value_buffer(v4, (uint64_t)qword_256A73E80);
    v5 = sub_23BB891AC();
    v6 = sub_23BB8ABEC();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v15 = v8;
      *(_DWORD *)v7 = 136315138;
      sub_23BB7B69C(0xD000000000000013, 0x800000023BB9A5F0, &v15);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v8, -1, -1);
      MEMORY[0x24260D9B4](v7, -1, -1);
    }

    sub_23BB09940(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_subscriber);
    sub_23BA76180();
    swift_release();
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v9 = sub_23BB891C4();
    __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
    v10 = sub_23BB891AC();
    v11 = sub_23BB8ABD4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_23BB7B69C(0xD000000000000013, 0x800000023BB9A5F0, &v15);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v10, v11, "CompositeAppViewModel: %s - stop with no initialInfo or repository", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
    }

  }
  *(_QWORD *)(v1 + v2) = 0;
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_cancellables) = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

void sub_23BB07AE0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  int64_t v68;
  unint64_t *v69;
  unint64_t *v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v61 = type metadata accessor for RepositorySubscriber();
  v5 = MEMORY[0x24BDAC7A8](v61, v4);
  v7 = (uint64_t)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v62 = (uint64_t)v59 - v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (_QWORD *)((char *)v59 - v12);
  if (qword_256A58E00 != -1)
    goto LABEL_40;
  while (1)
  {
    v14 = sub_23BB891C4();
    v15 = __swift_project_value_buffer(v14, (uint64_t)qword_256A73E80);
    sub_23B989CE8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    swift_bridgeObjectRetain_n();
    v71 = v15;
    v16 = sub_23BB891AC();
    v17 = sub_23BB8ABEC();
    v18 = os_log_type_enabled(v16, v17);
    v19 = MEMORY[0x24BEE4AD8];
    v60 = v7;
    v63 = a2;
    if (v18)
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v80 = v21;
      *(_DWORD *)v20 = 136315394;
      sub_23BA7D430();
      swift_bridgeObjectRetain();
      v22 = sub_23BB8AAFC();
      v24 = v23;
      swift_bridgeObjectRelease();
      v79 = sub_23BB7B69C(v22, v24, &v80);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      sub_23B989CE8((uint64_t)v13, v62, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      v25 = sub_23BB8A7D8();
      v79 = sub_23BB7B69C(v25, v26, &v80);
      v19 = MEMORY[0x24BEE4AD8];
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23B989D9C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      _os_log_impl(&dword_23B979000, v16, v17, "Provider: addSubscriptions - requestedSubscriptions: %s - subscriber: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v21, -1, -1);
      v27 = v20;
      a2 = v63;
      MEMORY[0x24260D9B4](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_23B989D9C((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    }

    if (!*(_QWORD *)(a1 + 16))
      return;
    v28 = (uint64_t *)(v74 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsBySubscriber);
    swift_beginAccess();
    v29 = *v28;
    if (*(_QWORD *)(*v28 + 16))
    {
      swift_bridgeObjectRetain();
      v30 = sub_23B984B9C(a2);
      if ((v31 & 1) != 0)
      {
        v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v33 = swift_bridgeObjectRetain();
        v34 = sub_23B98D09C(v33, v32);
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    v34 = a1;
LABEL_11:
    a2 = *v28;
    v35 = v62;
    sub_23B989CE8(v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v78 = *v28;
    *v28 = 0x8000000000000000;
    sub_23BAAF798(v34, v35, isUniquelyReferenced_nonNull_native);
    *v28 = v78;
    swift_bridgeObjectRelease();
    sub_23B989D9C(v35, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    swift_endAccess();
    v37 = v74;
    sub_23BA5D49C();
    v38 = swift_bridgeObjectRetain();
    v13 = sub_23BB0C590(v38, a2);
    swift_bridgeObjectRelease();
    v39 = v13[7];
    v69 = v13 + 7;
    v7 = -1 << *((_BYTE *)v13 + 32);
    v59[1] = ~v7;
    if (-v7 < 64)
      v40 = ~(-1 << -(char)v7);
    else
      v40 = -1;
    a1 = v40 & v39;
    v41 = v37 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind;
    swift_retain();
    v75 = v41;
    swift_beginAccess();
    v72 = 0;
    v68 = (unint64_t)(63 - v7) >> 6;
    v64 = &v76;
    *((_QWORD *)&v42 + 1) = 2;
    v67 = xmmword_23BB8C510;
    *(_QWORD *)&v42 = 136315138;
    v66 = v42;
    v65 = v19 + 8;
    v70 = v13;
    if (a1)
    {
      v73 = (a1 - 1) & a1;
      v43 = __clz(__rbit64(a1)) | (v72 << 6);
      goto LABEL_30;
    }
    v44 = v72 + 1;
    if (__OFADD__(v72, 1))
    {
      __break(1u);
      JUMPOUT(0x23BB089F8);
    }
    if (v44 >= v68)
      break;
    v45 = v69[v44];
    v46 = v72 + 1;
    if (v45)
      goto LABEL_29;
    v46 = v72 + 2;
    if (v72 + 2 >= v68)
      break;
    v45 = v69[v46];
    if (v45)
      goto LABEL_29;
    v46 = v72 + 3;
    if (v72 + 3 >= v68)
      break;
    v45 = v69[v46];
    if (v45)
      goto LABEL_29;
    v47 = v72 + 4;
    if (v72 + 4 >= v68)
      break;
    v45 = v69[v47];
    if (v45)
    {
      v46 = v72 + 4;
LABEL_29:
      v73 = (v45 - 1) & v45;
      v43 = __clz(__rbit64(v45)) + (v46 << 6);
      v72 = v46;
LABEL_30:
      __asm { BR              X8 }
    }
    while (1)
    {
      v46 = v47 + 1;
      if (__OFADD__(v47, 1))
        break;
      if (v46 >= v68)
        goto LABEL_31;
      v45 = v69[v46];
      ++v47;
      if (v45)
        goto LABEL_29;
    }
    __break(1u);
LABEL_40:
    swift_once();
  }
LABEL_31:
  sub_23BA7D474();
  if (v13[2])
  {
    v48 = v60;
    sub_23B989CE8(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    swift_bridgeObjectRetain_n();
    v49 = sub_23BB891AC();
    v50 = sub_23BB8ABEC();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v78 = v52;
      *(_DWORD *)v51 = 136315394;
      sub_23BA7D430();
      swift_retain();
      v53 = sub_23BB8AAFC();
      v55 = v54;
      swift_release();
      v77 = sub_23BB7B69C(v53, v55, &v78);
      sub_23BB8ACB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      sub_23B989CE8(v48, v62, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      v56 = sub_23BB8A7D8();
      v77 = sub_23BB7B69C(v56, v57, &v78);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23B989D9C(v48, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      _os_log_impl(&dword_23B979000, v49, v50, "RepositoryProvider: didAddNewUniqueSubscriptions\n- subscriptionsThatDidNotExistedBefore: %s\n- subscriber: %s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v52, -1, -1);
      v58 = v51;
      v13 = v70;
      MEMORY[0x24260D9B4](v58, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_23B989D9C(v48, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    }

    sub_23BAAB2E0((uint64_t)v13);
  }
  swift_release();
}

uint64_t sub_23BB08A58(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  char v17;
  char v18;
  char v19;
  int64_t v20;
  uint64_t v21;

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v20 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1))
      break;
    if (v11 >= v20)
      goto LABEL_27;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v20)
        goto LABEL_27;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (!v15)
      {
        v16 = v11 + 2;
        if (v11 + 2 >= v20)
          goto LABEL_27;
        v15 = *(_QWORD *)(v6 + 8 * v16);
        if (!v15)
        {
          v16 = v11 + 3;
          if (v11 + 3 >= v20)
            goto LABEL_27;
          v15 = *(_QWORD *)(v6 + 8 * v16);
          if (!v15)
          {
            v16 = v11 + 4;
            if (v11 + 4 >= v20)
            {
LABEL_27:
              swift_release();
              v19 = 0;
              return v19 & 1;
            }
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_30;
                if (v11 >= v20)
                  goto LABEL_27;
                v15 = *(_QWORD *)(v6 + 8 * v11);
                ++v16;
                if (v15)
                  goto LABEL_18;
              }
            }
          }
        }
      }
      v11 = v16;
    }
LABEL_18:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_19:
    v21 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    v17 = a1(&v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v19 & 1;
    }
    v18 = v17;
    result = swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      swift_release();
      v19 = 1;
      return v19 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_23BB08C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int64_t v44;
  __int128 v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[3];
  uint64_t v80;
  uint64_t v81[2];

  v3 = v2;
  v62 = type metadata accessor for RepositorySubscriber();
  v7 = MEMORY[0x24BDAC7A8](v62, v6);
  v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v65 = (uint64_t)v61 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v61 - v14;
  if (qword_256A58E00 != -1)
    swift_once();
  v16 = sub_23BB891C4();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_256A73E80);
  v66 = a2;
  sub_23B989CE8(a2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  swift_bridgeObjectRetain_n();
  v71 = v17;
  v18 = sub_23BB891AC();
  v19 = sub_23BB8ABEC();
  v20 = os_log_type_enabled(v18, v19);
  v73 = v3;
  v72 = v9;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v81[0] = v22;
    *(_DWORD *)v21 = 136315651;
    sub_23BA7D430();
    swift_bridgeObjectRetain();
    v23 = sub_23BB8AAFC();
    v25 = v24;
    swift_bridgeObjectRelease();
    v80 = sub_23BB7B69C(v23, v25, v81);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2160;
    v80 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v21 + 22) = 2081;
    sub_23B989CE8((uint64_t)v15, v65, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    v26 = sub_23BB8A7D8();
    v80 = sub_23BB7B69C(v26, v27, v81);
    sub_23BB8ACB8();
    v9 = v72;
    swift_bridgeObjectRelease();
    v3 = v73;
    sub_23B989D9C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    _os_log_impl(&dword_23B979000, v18, v19, "RepositoryProvider: removeSubscriptions\n- subscriptionsToRemove: %s\n- subscriber: %{private,mask.hash}s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v22, -1, -1);
    MEMORY[0x24260D9B4](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_23B989D9C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  }

  if (*(_QWORD *)(a1 + 16))
  {
    v28 = (uint64_t *)(v3 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsBySubscriber);
    swift_beginAccess();
    v29 = *v28;
    if (*(_QWORD *)(*v28 + 16))
    {
      swift_bridgeObjectRetain();
      v30 = sub_23B984B9C(v66);
      if ((v31 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return;
      }
      v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v32 + 16) >> 3)
      {
        v80 = v32;
        sub_23BADC484(a1);
        v33 = v80;
      }
      else
      {
        v33 = sub_23BADE460(a1, v32);
      }
      if (*(_QWORD *)(v33 + 16))
      {
        v34 = v65;
        sub_23B989CE8(v66, v65, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v79[0] = *v28;
        *v28 = 0x8000000000000000;
        sub_23BAAF798(v33, v34, isUniquelyReferenced_nonNull_native);
        *v28 = v79[0];
        swift_bridgeObjectRelease();
        sub_23B989D9C(v34, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
        swift_endAccess();
      }
      else
      {
        v36 = v66;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_23BA7768C(v36);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      sub_23BA5D49C();
      swift_bridgeObjectRetain();
      swift_retain();
      v37 = sub_23BB0C0C8(a1, v3);
      v61[0] = 0;
      swift_release();
      v39 = v37 + 56;
      v38 = *(_QWORD *)(v37 + 56);
      v40 = -1 << *(_BYTE *)(v37 + 32);
      v61[1] = ~v40;
      if (-v40 < 64)
        v41 = ~(-1 << -(char)v40);
      else
        v41 = -1;
      v42 = v41 & v38;
      v43 = v3 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind;
      swift_retain();
      swift_beginAccess();
      v75 = 0;
      v44 = (unint64_t)(63 - v40) >> 6;
      *((_QWORD *)&v45 + 1) = 2;
      v69 = xmmword_23BB8C510;
      *(_QWORD *)&v45 = 136315138;
      v64 = v45;
      v63 = MEMORY[0x24BEE4AD8] + 8;
      v70 = v37;
      v67 = v44;
      v68 = v37 + 56;
      v74 = v43;
      if (v42)
      {
        v46 = __clz(__rbit64(v42)) | (v75 << 6);
        goto LABEL_32;
      }
      v47 = v75 + 1;
      if (__OFADD__(v75, 1))
      {
        __break(1u);
        JUMPOUT(0x23BB098ECLL);
      }
      if (v47 >= v44)
        goto LABEL_37;
      v48 = *(_QWORD *)(v39 + 8 * v47);
      if (v48)
      {
LABEL_31:
        v46 = __clz(__rbit64(v48)) + (v47 << 6);
        v75 = v47;
LABEL_32:
        v50 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 24 * v46);
        v51 = *v50;
        v76 = v50[1];
        v77 = v51;
        __asm { BR              X8 }
      }
      v49 = v75 + 2;
      if (v75 + 2 >= v44)
        goto LABEL_37;
      v48 = *(_QWORD *)(v39 + 8 * v49);
      if (!v48)
      {
        v49 = v75 + 3;
        if (v75 + 3 >= v44)
        {
LABEL_37:
          sub_23BA7D474();
          if (*(_QWORD *)(v37 + 16))
          {
            sub_23B989CE8(v66, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
            swift_bridgeObjectRetain_n();
            v52 = sub_23BB891AC();
            v53 = sub_23BB8ABEC();
            if (os_log_type_enabled(v52, v53))
            {
              v54 = swift_slowAlloc();
              v55 = swift_slowAlloc();
              v79[0] = v55;
              *(_DWORD *)v54 = 136315651;
              sub_23BA7D430();
              swift_retain();
              v56 = sub_23BB8AAFC();
              v58 = v57;
              swift_release();
              v78 = sub_23BB7B69C(v56, v58, v79);
              sub_23BB8ACB8();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v54 + 12) = 2160;
              v78 = 1752392040;
              sub_23BB8ACB8();
              *(_WORD *)(v54 + 22) = 2081;
              sub_23B989CE8((uint64_t)v9, v65, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
              v59 = sub_23BB8A7D8();
              v78 = sub_23BB7B69C(v59, v60, v79);
              sub_23BB8ACB8();
              v37 = v70;
              swift_bridgeObjectRelease();
              sub_23B989D9C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
              _os_log_impl(&dword_23B979000, v52, v53, "RepositoryProvider: didRemoveUniqueSubscriptions\n- subscriptionsThatDoNotExistAnymore: %s\n- subscriber: %{private,mask.hash}s", (uint8_t *)v54, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x24260D9B4](v55, -1, -1);
              MEMORY[0x24260D9B4](v54, -1, -1);
            }
            else
            {
              swift_release_n();
              sub_23B989D9C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
            }

            sub_23BAAC7C0(v37);
          }
          swift_release();
          return;
        }
        v48 = *(_QWORD *)(v39 + 8 * v49);
        if (!v48)
        {
          v49 = v75 + 4;
          if (v75 + 4 < v44)
          {
            v48 = *(_QWORD *)(v39 + 8 * v49);
            if (v48)
              goto LABEL_30;
            while (1)
            {
              v47 = v49 + 1;
              if (__OFADD__(v49, 1))
              {
                __break(1u);
                JUMPOUT(0x23BB09910);
              }
              if (v47 >= v44)
                break;
              v48 = *(_QWORD *)(v39 + 8 * v47);
              ++v49;
              if (v48)
                goto LABEL_31;
            }
          }
          goto LABEL_37;
        }
      }
LABEL_30:
      v47 = v49;
      goto LABEL_31;
    }
  }
}

uint64_t sub_23BB09940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];

  v2 = v1;
  v4 = type metadata accessor for RepositorySubscriber();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v27 - v10;
  if (qword_256A58E00 != -1)
    swift_once();
  v12 = sub_23BB891C4();
  __swift_project_value_buffer(v12, (uint64_t)qword_256A73E80);
  sub_23B989CE8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  v13 = sub_23BB891AC();
  v14 = sub_23BB8ABEC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v28 = a1;
    v16 = v15;
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 141558275;
    v29 = 1752392040;
    v30[0] = v17;
    sub_23BB8ACB8();
    *(_WORD *)(v16 + 12) = 2081;
    sub_23B989CE8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    v18 = sub_23BB8A7D8();
    v29 = sub_23BB7B69C(v18, v19, v30);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B989D9C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    _os_log_impl(&dword_23B979000, v13, v14, "RepositoryProvider: removeSubscriber - subscriber: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    v20 = v16;
    a1 = v28;
    MEMORY[0x24260D9B4](v20, -1, -1);
  }
  else
  {
    sub_23B989D9C((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  }

  v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsBySubscriber);
  result = swift_beginAccess();
  v23 = *v21;
  if (*(_QWORD *)(*v21 + 16))
  {
    swift_bridgeObjectRetain();
    v24 = sub_23B984B9C(a1);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_23BB08C38(v26, a1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23BB09C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_stillWantsToSubscribe) = 0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    v1 = v0;
    v2 = qword_256A58E00;
    swift_retain();
    if (v2 != -1)
      swift_once();
    v3 = sub_23BB891C4();
    __swift_project_value_buffer(v3, (uint64_t)qword_256A73E80);
    v4 = sub_23BB891AC();
    v5 = sub_23BB8ABEC();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v13 = v7;
      *(_DWORD *)v6 = 136315138;
      sub_23BB7B69C(0xD000000000000014, 0x800000023BB9A5B0, &v13);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v4, v5, "CompositeAppViewModel: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v7, -1, -1);
      MEMORY[0x24260D9B4](v6, -1, -1);
    }

    sub_23BB09940(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_subscriber);
    swift_release();
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v8 = sub_23BB891C4();
    __swift_project_value_buffer(v8, (uint64_t)qword_256A73E80);
    oslog = sub_23BB891AC();
    v9 = sub_23BB8ABD4();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v13 = v11;
      *(_DWORD *)v10 = 136315138;
      sub_23BB7B69C(0xD000000000000014, 0x800000023BB9A5B0, &v13);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, oslog, v9, "CompositeAppViewModel: %s - pause with no initialInfo or repository", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v11, -1, -1);
      MEMORY[0x24260D9B4](v10, -1, -1);

    }
    else
    {

    }
  }
}

void sub_23BB09F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v1 = v0;
  v2 = type metadata accessor for CompositeAppViewState(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CompositeAppViewInitialInfo();
  v44 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v40 - v16;
  if (qword_256A58E00 != -1)
    swift_once();
  v18 = sub_23BB891C4();
  v43 = __swift_project_value_buffer(v18, (uint64_t)qword_256A73E80);
  v19 = sub_23BB891AC();
  v20 = sub_23BB8ABEC();
  v21 = os_log_type_enabled(v19, v20);
  v42 = v14;
  if (v21)
  {
    v40 = v2;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v41 = v5;
    v24 = v23;
    v47[0] = v23;
    *(_DWORD *)v22 = 136315138;
    v46 = sub_23BB7B69C(0xD000000000000015, 0x800000023BB9A5D0, v47);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v19, v20, "CompositeAppViewModel: %s", v22, 0xCu);
    swift_arrayDestroy();
    v25 = v24;
    v5 = v41;
    MEMORY[0x24260D9B4](v25, -1, -1);
    MEMORY[0x24260D9B4](v22, -1, -1);
  }

  v26 = v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23BB0C2A4(v26, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v9, 1, v10) == 1)
  {
    sub_23BB0BD5C((uint64_t)v9);
LABEL_11:
    v35 = sub_23BB891AC();
    v36 = sub_23BB8ABD4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v46 = v38;
      *(_DWORD *)v37 = 136315138;
      v45 = sub_23BB7B69C(0xD000000000000015, 0x800000023BB9A5D0, &v46);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v35, v36, "CompositeAppViewModel: %s - resume with no initialInfo or repository", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v38, -1, -1);
      MEMORY[0x24260D9B4](v37, -1, -1);
    }

    return;
  }
  sub_23BB0C2EC((uint64_t)v9, (uint64_t)v17);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    sub_23B989D9C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    goto LABEL_11;
  }
  v44 = v10;
  v27 = (uint64_t)v42;
  sub_23B989CE8((uint64_t)v17, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  swift_retain();
  v28 = sub_23BB891AC();
  v29 = sub_23BB8ABEC();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    v31 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v46 = v43;
    *(_DWORD *)v31 = 136315394;
    v45 = sub_23BB7B69C(0xD000000000000015, 0x800000023BB9A5D0, &v46);
    LODWORD(v41) = v30;
    sub_23BB8ACB8();
    *(_WORD *)(v31 + 12) = 2080;
    sub_23B989CE8(v27 + *(int *)(v44 + 28), (uint64_t)v5, type metadata accessor for CompositeAppViewState);
    v32 = sub_23BB8A7D8();
    v45 = sub_23BB7B69C(v32, v33, &v46);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B989D9C(v27, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    _os_log_impl(&dword_23B979000, v28, (os_log_type_t)v41, "CompositeAppViewModel: %s - %s", (uint8_t *)v31, 0x16u);
    v34 = v43;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v34, -1, -1);
    MEMORY[0x24260D9B4](v31, -1, -1);
  }
  else
  {
    sub_23B989D9C(v27, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  }

  sub_23BB3A3FC();
  sub_23BB07AE0(v39, v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_subscriber);
  swift_bridgeObjectRelease();
  sub_23BB0A500();
  swift_release();
  sub_23B989D9C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
}

uint64_t sub_23BB0A500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
    sub_23BB891E8();
    sub_23BB89200();
    return swift_release();
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v7 = sub_23BB891C4();
    __swift_project_value_buffer(v7, (uint64_t)qword_256A73E80);
    v8 = sub_23BB891AC();
    v9 = sub_23BB8ABEC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v17 = v11;
      *(_DWORD *)v10 = 136315138;
      v16 = sub_23BB7B69C(0xD00000000000001BLL, 0x800000023BB9C8D0, &v17);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v8, v9, "CompositeAppViewModel: %s - No internalRepository - getting one", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v11, -1, -1);
      MEMORY[0x24260D9B4](v10, -1, -1);
    }

    v12 = sub_23BB8AA18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    sub_23BB8A9F4();
    swift_retain();
    v13 = sub_23BB8A9E8();
    v14 = (_QWORD *)swift_allocObject();
    v15 = MEMORY[0x24BEE6930];
    v14[2] = v13;
    v14[3] = v15;
    v14[4] = v1;
    sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A62350, (uint64_t)v14);
    return swift_release();
  }
}

uint64_t sub_23BB0A790()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  v1[6] = *v0;
  sub_23BB8A9F4();
  v1[7] = sub_23BB8A9E8();
  v1[8] = sub_23BB8A988();
  v1[9] = v2;
  return swift_task_switch();
}

uint64_t sub_23BB0A804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository;
  *(_QWORD *)(v0 + 80) = OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository;
  v3 = *(_QWORD *)(v1 + v2);
  if (v3)
  {
    swift_retain();
    swift_release();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v5 = sub_23BB891C4();
    __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
    swift_retain_n();
    v6 = sub_23BB891AC();
    v7 = sub_23BB8ABEC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = *(_QWORD *)(v0 + 40);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v17 = v10;
      *(_DWORD *)v9 = 136315394;
      *(_QWORD *)(v0 + 16) = v8;
      swift_retain();
      v11 = sub_23BB8A7D8();
      *(_QWORD *)(v0 + 24) = sub_23BB7B69C(v11, v12, &v17);
      sub_23BB8ACB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      *(_QWORD *)(v0 + 32) = sub_23BB7B69C(0x6F7469736F706572, 0xEC00000029287972, &v17);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v6, v7, "CompositeAppViewModel: %s - %s - No repository, getting one", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v10, -1, -1);
      MEMORY[0x24260D9B4](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v13 = *(_QWORD *)(v0 + 40);
    v14 = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 32);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v16;
    *v16 = v0;
    v16[1] = sub_23BB0AAA0;
    return sub_23BAADF58(v14, v15);
  }
}

uint64_t sub_23BB0AAA0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BB0AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  *(_QWORD *)(v3 + v2) = v1;
  swift_retain();
  swift_release();
  sub_23BB0B578();
  sub_23BB0A500();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_23BB0AB64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  return swift_release();
}

_QWORD *sub_23BB0ABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v10 = v9;
  v65 = a8;
  v66 = a6;
  v67 = a7;
  v68 = a4;
  v63 = a1;
  v64 = a5;
  v69 = a9;
  v61[1] = *v9;
  v62 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62340);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CompositeAppViewState(0);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)v61 - v23;
  sub_23BB889C0();
  *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository) = 0;
  v25 = (char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  v26 = type metadata accessor for CompositeAppViewInitialInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  *v27 = 0;
  v27[1] = 0;
  v28 = (_QWORD *)((char *)v9
                 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler);
  *v28 = 0;
  v28[1] = 0;
  v29 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler);
  *v29 = 0;
  v29[1] = 0;
  v30 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_dismiss);
  *v30 = 0;
  v30[1] = 0;
  *((_BYTE *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_stillWantsToSubscribe) = 0;
  *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_cancellables) = MEMORY[0x24BEE4AF8];
  v31 = (char *)v9 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel__state;
  swift_storeEnumTagMultiPayload();
  sub_23B989CE8((uint64_t)v24, (uint64_t)v21, type metadata accessor for CompositeAppViewState);
  sub_23BB89224();
  sub_23B989D9C((uint64_t)v24, type metadata accessor for CompositeAppViewState);
  v32 = v31;
  v33 = v63;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v32, v16, v12);
  v9[2] = v33;
  if (a3)
  {
    swift_retain();
    v35 = v67;
    v34 = v68;
    v37 = v65;
    v36 = v66;
    v38 = (_QWORD *)&unk_256A73000;
    v39 = v62;
  }
  else
  {
    v40 = (void *)objc_opt_self();
    swift_retain();
    v41 = objc_msgSend(v40, sel_mainBundle);
    v42 = objc_msgSend(v41, sel_bundleIdentifier);

    if (v42)
    {
      v39 = sub_23BB8A7B4();
      a3 = v43;

    }
    else
    {
      v39 = 0;
      a3 = 0;
    }
    v35 = v67;
    v34 = v68;
    v37 = v65;
    v36 = v66;
    v38 = &unk_256A73000;
  }
  v10[3] = v39;
  v10[4] = a3;
  v44 = (_QWORD *)((char *)v10
                 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  v45 = *(_QWORD *)((char *)v10
                  + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler);
  v46 = v64;
  *v44 = v34;
  v44[1] = v46;
  sub_23B9B7598(v34);
  sub_23B9BD73C(v45);
  v47 = (_QWORD *)((char *)v10
                 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler);
  v48 = *(_QWORD *)((char *)v10
                  + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler);
  *v47 = v36;
  v47[1] = v35;
  sub_23B9B7598(v36);
  sub_23B9BD73C(v48);
  v49 = (_QWORD *)((char *)v10 + v38[438]);
  v50 = *v49;
  v51 = v69;
  *v49 = v37;
  v49[1] = v51;
  sub_23B9B7598(v37);
  sub_23B9BD73C(v50);
  if (qword_256A58E00 != -1)
    swift_once();
  v52 = sub_23BB891C4();
  __swift_project_value_buffer(v52, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v53 = sub_23BB891AC();
  v54 = sub_23BB8ABEC();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v70 = (uint64_t)v10;
    v71 = v56;
    *(_DWORD *)v55 = 136315394;
    swift_retain();
    v57 = sub_23BB8A7D8();
    v70 = sub_23BB7B69C(v57, v58, &v71);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v70 = sub_23BB7B69C(0xD000000000000091, 0x800000023BB9C8F0, &v71);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v53, v54, "CompositeAppViewModel: %s - %s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v56, -1, -1);
    MEMORY[0x24260D9B4](v55, -1, -1);
    sub_23B9BD73C(v65);
    sub_23B9BD73C(v66);
    v59 = v68;
  }
  else
  {
    swift_release_n();
    sub_23B9BD73C(v37);
    sub_23B9BD73C(v36);
    v59 = v34;
  }
  sub_23B9BD73C(v59);

  swift_release();
  return v10;
}

uint64_t sub_23BB0B0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABC8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315394;
    swift_retain();
    v7 = sub_23BB8A7D8();
    sub_23BB7B69C(v7, v8, &v12);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_23BB7B69C(0x74696E696564, 0xE600000000000000, &v12);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "CompositeAppViewModel: %s - %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B989D9C(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_subscriber, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  swift_release();
  sub_23BB0BD5C(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo);
  sub_23B9BD73C(*(_QWORD *)(v1
                          + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler));
  sub_23B9BD73C(*(_QWORD *)(v1
                          + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler));
  sub_23B9BD73C(*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler));
  sub_23B9BD73C(*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_dismiss));
  swift_bridgeObjectRelease();
  v9 = v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel__state;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return v1;
}

uint64_t sub_23BB0B3A8()
{
  sub_23BB0B0EC();
  return swift_deallocClassInstance();
}

uint64_t sub_23BB0B3CC()
{
  return type metadata accessor for CompositeAppViewModel();
}

uint64_t type metadata accessor for CompositeAppViewModel()
{
  uint64_t result;

  result = qword_256A62240;
  if (!qword_256A62240)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BB0B410()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23BB889CC();
  if (v0 <= 0x3F)
  {
    sub_23BB0B520(319, &qword_256A62250, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewInitialInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      sub_23BB0B520(319, qword_256A62258, type metadata accessor for CompositeAppViewState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_23BB0B520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23BB0B578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABC8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_23BB7B69C(0xD000000000000020, 0x800000023BB9C8A0, &v12);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "CompositeAppViewModel: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  type metadata accessor for Repository();
  sub_23B97D0C8(&qword_256A62338, (uint64_t (*)(uint64_t))type metadata accessor for Repository, (uint64_t)&unk_23BB91A80);
  v12 = sub_23BB891E8();
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_23BB0BD28;
  *(_QWORD *)(v8 + 24) = v7;
  sub_23BB8920C();
  v9 = sub_23BB89278();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23BB91DC0;
  *(_QWORD *)(v10 + 32) = v9;
  v12 = v10;
  sub_23BB8A904();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_cancellables) = v12;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB0B7FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABC8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "CompositeAppViewModel: Repository Will Change", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for CompositeAppViewModel();
    sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
    sub_23BB891E8();
    swift_release();
    sub_23BB89200();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BB0B948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[3] = a4;
  v5[4] = a5;
  v5[5] = sub_23BB8A9F4();
  v5[6] = sub_23BB8A9E8();
  v6 = (_QWORD *)swift_task_alloc();
  v5[7] = v6;
  *v6 = v5;
  v6[1] = sub_23BB0B9B0;
  return sub_23BB0A790();
}

uint64_t sub_23BB0B9B0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB0BA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_stillWantsToSubscribe) == 1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    sub_23BB3A3FC();
    sub_23BB07AE0(v3, v2 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_subscriber);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v4 = sub_23BB891C4();
    __swift_project_value_buffer(v4, (uint64_t)qword_256A73E80);
    v5 = sub_23BB891AC();
    v6 = sub_23BB8ABEC();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9A590, &v11);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v5, v6, "CompositeAppViewModel: %s - Skipping subscriptions since view already tried to pause/stop", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v8, -1, -1);
      MEMORY[0x24260D9B4](v7, -1, -1);
    }

  }
  v9 = *(_QWORD *)(v0 + 32);
  sub_23BB0A500();
  sub_23BA6EBA4(v9);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BB0BC1C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_23BB8A9F4();
  v0[3] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_23BB0BC80;
  return sub_23BB0A790();
}

uint64_t sub_23BB0BC80()
{
  swift_task_dealloc();
  swift_release();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BB0BD04()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BB0BD28()
{
  return sub_23BB0B7FC();
}

uint64_t sub_23BB0BD30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB0BD5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BB0BD9C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB0BDC8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B97C964;
  return sub_23BB0BC1C();
}

uint64_t sub_23BB0BE34(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD v34[2];
  unsigned __int16 v35;
  uint64_t v36;

  v27 = a2;
  v28 = a1;
  v33 = a3;
  v4 = *(_QWORD *)(a3 + 56);
  v30 = a3 + 56;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v32 = (uint64_t *)(a4 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsBySubscriber);
  result = swift_beginAccess();
  v29 = 0;
  v10 = 0;
  v31 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v20 = __OFADD__(v10++, 1);
    if (v20)
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v31)
      goto LABEL_25;
    v21 = *(_QWORD *)(v30 + 8 * v10);
    if (!v21)
      break;
LABEL_17:
    v7 = (v21 - 1) & v21;
    v12 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(v33 + 48) + 24 * v12;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_WORD *)(v13 + 16);
    v34[0] = *(_QWORD *)v13;
    v14 = v34[0];
    v34[1] = v15;
    v35 = v16;
    v17 = *v32;
    MEMORY[0x24BDAC7A8](result, v9);
    v26[2] = v34;
    sub_23B9906EC(v14, v15, v16);
    swift_bridgeObjectRetain();
    v18 = v36;
    v19 = sub_23BB08A58(sub_23BB0C28C, (uint64_t)v26, v17);
    v36 = v18;
    swift_bridgeObjectRelease();
    result = sub_23B9906D4(v14, v15, v16);
    if ((v19 & 1) == 0)
    {
      *(unint64_t *)((char *)v28 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v20 = __OFADD__(v29++, 1);
      if (v20)
      {
        __break(1u);
LABEL_25:
        v23 = v27;
        v24 = v29;
        v25 = v33;
        swift_retain();
        return sub_23BAE3D24(v28, v23, v24, v25);
      }
    }
  }
  v22 = v10 + 1;
  if (v10 + 1 >= v31)
    goto LABEL_25;
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v10 + 2;
  if (v10 + 2 >= v31)
    goto LABEL_25;
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v10 + 3;
  if (v10 + 3 >= v31)
    goto LABEL_25;
  v21 = *(_QWORD *)(v30 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v10 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v31)
      goto LABEL_25;
    v21 = *(_QWORD *)(v30 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23BB0C0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v3 = v2;
  v15[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v11);
    bzero((char *)v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    v12 = sub_23BB0BE34((_QWORD *)((char *)v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    swift_retain();
    v12 = sub_23BB0BE34((unint64_t *)v13, v8, a1, a2);
    swift_release();
    swift_release();
    MEMORY[0x24260D9B4](v13, -1, -1);
    swift_release_n();
  }
  return v12;
}

uint64_t sub_23BB0C28C(uint64_t *a1)
{
  return sub_23BB0C754(a1) & 1;
}

uint64_t sub_23BB0C2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB0C2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CompositeAppViewInitialInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t *sub_23BB0C330(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  unsigned __int16 v36;
  uint64_t v37;

  v33 = a4;
  v34 = a3;
  v28 = a2;
  v29 = result;
  v4 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 56);
  v6 = a3 + 56;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 24);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v31 = v6;
  v32 = (unint64_t)(v9 + 63) >> 6;
  while (2)
  {
    v30 = v4;
    do
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v5 << 6);
      }
      else
      {
        v14 = __OFADD__(v5++, 1);
        if (v14)
        {
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        if (v5 >= v32)
          goto LABEL_24;
        v23 = *(_QWORD *)(v31 + 8 * v5);
        if (!v23)
        {
          v24 = v5 + 1;
          if (v5 + 1 >= v32)
            goto LABEL_24;
          v23 = *(_QWORD *)(v31 + 8 * v24);
          if (!v23)
          {
            v24 = v5 + 2;
            if (v5 + 2 >= v32)
              goto LABEL_24;
            v23 = *(_QWORD *)(v31 + 8 * v24);
            if (!v23)
            {
              v24 = v5 + 3;
              if (v5 + 3 >= v32)
              {
LABEL_24:
                v25 = v28;
                v26 = v34;
                swift_retain();
                return (unint64_t *)sub_23BAE3D24(v29, v25, v30, v26);
              }
              v23 = *(_QWORD *)(v31 + 8 * v24);
              if (!v23)
              {
                while (1)
                {
                  v5 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_26;
                  if (v5 >= v32)
                    goto LABEL_24;
                  v23 = *(_QWORD *)(v31 + 8 * v5);
                  ++v24;
                  if (v23)
                    goto LABEL_19;
                }
              }
            }
          }
          v5 = v24;
        }
LABEL_19:
        v11 = (v23 - 1) & v23;
        v16 = __clz(__rbit64(v23)) + (v5 << 6);
      }
      v17 = *(_QWORD *)(v34 + 48) + 24 * v16;
      v19 = *(_QWORD *)(v17 + 8);
      v20 = *(_WORD *)(v17 + 16);
      v35[0] = *(_QWORD *)v17;
      v18 = v35[0];
      v35[1] = v19;
      v36 = v20;
      MEMORY[0x24BDAC7A8](result, a2);
      v27[2] = v35;
      sub_23B9906EC(v18, v19, v20);
      swift_bridgeObjectRetain();
      v21 = v37;
      v22 = sub_23BB08A58(sub_23BB0C28C, (uint64_t)v27, a4);
      v37 = v21;
      swift_bridgeObjectRelease();
      result = (unint64_t *)sub_23B9906D4(v18, v19, v20);
    }
    while ((v22 & 1) != 0);
    v13 = v30;
    *(unint64_t *)((char *)v29 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    v14 = __OFADD__(v13, 1);
    v4 = v13 + 1;
    if (!v14)
      continue;
    break;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t *sub_23BB0C590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  unint64_t *v11;
  void *v12;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v10);
    bzero((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v11 = sub_23BB0C330((_QWORD *)((char *)v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    v11 = sub_23BB0C330((unint64_t *)v12, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x24260D9B4](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_23BB0C754(uint64_t *a1)
{
  uint64_t v1;

  return sub_23BA4C2B0(**(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8), *(unsigned __int16 *)(*(_QWORD *)(v1 + 16) + 16), *a1) & 1;
}

uint64_t sub_23BB0C78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BB0C7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for CompositeAppViewInitialInfo();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 40) & ~v2) + *(int *)(v1 + 28);
  type metadata accessor for CompositeAppViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v4 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v5 = v3 + *(int *)(v4 + 44);
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);

  }
  return swift_deallocObject();
}

uint64_t sub_23BB0C918(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CompositeAppViewInitialInfo() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B990D68;
  return sub_23BB0B948(a1, v5, v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewModelError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BB0C9EC + 4 * byte_23BB95490[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BB0CA0C + 4 * byte_23BB95495[v4]))();
}

_BYTE *sub_23BB0C9EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BB0CA0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB0CA14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB0CA1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BB0CA24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BB0CA2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CompositeAppViewModelError()
{
  return &type metadata for CompositeAppViewModelError;
}

unint64_t sub_23BB0CA4C()
{
  unint64_t result;

  result = qword_256A62368;
  if (!qword_256A62368)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB955EC, &type metadata for CompositeAppViewModelError);
    atomic_store(result, (unint64_t *)&qword_256A62368);
  }
  return result;
}

uint64_t sub_23BB0CA90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t *boxed_opaque_existential_1;
  char *v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  void (*v53)(char *);
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unsigned int v57;
  uint64_t v58;
  char *v59;
  __int128 v60;
  uint64_t v61[3];
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[40];
  char v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;

  v56 = a1;
  v2 = sub_23BB8A334();
  v3 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  v58 = v3;
  MEMORY[0x24BDAC7A8](v2, v4);
  v59 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB89F80();
  v7 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = 0x4020000000000000;
  v55 = type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v11 = (uint64_t)a1 + *(int *)(v55 + 20);
  v12 = sub_23BB89FE0();
  v67 = MEMORY[0x24BDF3E48];
  v68 = MEMORY[0x24BDF3E18];
  v13 = MEMORY[0x24BDF3E18];
  v14 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v66 = v12;
  sub_23BB89C08();
  sub_23BB89C20();
  v15 = sub_23BB89C50();
  swift_release();
  v52 = *MEMORY[0x24BDF3C28];
  v53 = *(void (**)(char *))(v7 + 104);
  v53(v10);
  v16 = MEMORY[0x24260BF74](v10, 0.216, 0.643, 1.0, 1.0);
  v62 = v14;
  v63 = v13;
  v17 = v13;
  v61[0] = v16;
  sub_23B9A193C((uint64_t)v61, (uint64_t)v64);
  v65 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  v18 = (int *)type metadata accessor for CustomControlStyle(0);
  v19 = (_OWORD *)(v11 + v18[8]);
  v60 = xmmword_23BB95660;
  *v19 = xmmword_23BB95660;
  v51 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v20 = v11 + v18[6];
  v21 = *MEMORY[0x24BDF50D0];
  v49 = *(void (**)(uint64_t))(v3 + 104);
  v22 = v21;
  v57 = v21;
  v49(v20);
  sub_23B9A1980(&v66, v11);
  *(_QWORD *)(v11 + 40) = v15;
  sub_23B990D24((uint64_t)v64, v11 + v18[7], qword_256A59CC0);
  *(_BYTE *)(v11 + v18[9]) = 0;
  *(_BYTE *)(v11 + v18[10]) = 1;
  v23 = v11 + v18[11];
  *(_QWORD *)v23 = 0x4059000000000000;
  *(_BYTE *)(v23 + 8) = 0;
  v24 = v55;
  v25 = v56;
  v26 = (uint64_t)v56 + *(int *)(v55 + 24);
  v27 = sub_23BB89FE0();
  v28 = v17;
  v68 = v17;
  v29 = MEMORY[0x24BDF3E48];
  v67 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v66 = v27;
  sub_23BB89C08();
  sub_23BB89C20();
  v30 = sub_23BB89C50();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v53)(v10, v52, v54);
  v31 = MEMORY[0x24260BF74](v10, 0.216, 0.643, 1.0, 1.0);
  v62 = v29;
  v63 = v28;
  v32 = v29;
  v61[0] = v31;
  sub_23B9A193C((uint64_t)v61, (uint64_t)v64);
  v65 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  *(_OWORD *)(v26 + v18[8]) = v60;
  swift_storeEnumTagMultiPayload();
  v33 = v50;
  v34 = v49;
  ((void (*)(uint64_t, uint64_t, uint64_t))v49)(v26 + v18[6], v22, v50);
  sub_23B9A1980(&v66, v26);
  *(_QWORD *)(v26 + 40) = v30;
  sub_23B990D24((uint64_t)v64, v26 + v18[7], qword_256A59CC0);
  *(_BYTE *)(v26 + v18[9]) = 0;
  *(_BYTE *)(v26 + v18[10]) = 1;
  v35 = v26 + v18[11];
  *(_QWORD *)v35 = 0x4059000000000000;
  *(_BYTE *)(v35 + 8) = 0;
  v36 = (uint64_t)v25 + *(int *)(v24 + 28);
  v37 = sub_23BB89FE0();
  v67 = v32;
  v68 = MEMORY[0x24BDF3E18];
  *(_QWORD *)&v66 = v37;
  sub_23BB89C08();
  sub_23BB89C20();
  v38 = sub_23BB89C50();
  swift_release();
  sub_23BB89FA4();
  v39 = sub_23BB8A004();
  swift_release();
  v40 = v59;
  ((void (*)(char *, _QWORD, uint64_t))v34)(v59, *MEMORY[0x24BDF5080], v33);
  v41 = v34;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C528);
  v62 = v42;
  v63 = sub_23B996E1C(qword_256A5F3D8, &qword_256A5C528, MEMORY[0x24BDEF780]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v61);
  v44 = (char *)boxed_opaque_existential_1 + *(int *)(v42 + 36);
  v45 = v58;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v44, v40, v33);
  *boxed_opaque_existential_1 = v39;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v33);
  sub_23B9A193C((uint64_t)v61, (uint64_t)v64);
  v65 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  *(_OWORD *)(v36 + v18[8]) = v60;
  swift_storeEnumTagMultiPayload();
  ((void (*)(uint64_t, _QWORD, uint64_t))v41)(v36 + v18[6], v57, v33);
  sub_23B9A1980(&v66, v36);
  *(_QWORD *)(v36 + 40) = v38;
  result = sub_23B990D24((uint64_t)v64, v36 + v18[7], qword_256A59CC0);
  *(_BYTE *)(v36 + v18[9]) = 0;
  *(_BYTE *)(v36 + v18[10]) = 1;
  v47 = v36 + v18[11];
  *(_QWORD *)v47 = 0x4059000000000000;
  *(_BYTE *)(v47 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for ShareReceivedMessageViewActionsModule.Style(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A623C8);
}

uint64_t sub_23BB0D004()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB0D010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t sub_23BB0D05C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB0D068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t *sub_23BB0D0B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t Action;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  __int128 v21;
  int *v22;
  uint64_t v23;
  _BYTE *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, char *, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  char *v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _BYTE *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  char *v41;
  uint64_t v42;
  _BYTE *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  _BYTE *v47;
  char *v48;
  uint64_t v49;
  _BYTE *v50;
  char *v51;
  char v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _BYTE *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  char *v61;
  uint64_t v62;
  _BYTE *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  uint64_t v69;
  _BYTE *v70;
  char *v71;
  char v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  _BYTE *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  char *v92;
  uint64_t v93;
  int *v95;
  int *v96;
  char *v97;
  _BYTE *v98;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for DirectionsState();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *(_BYTE *)v4 = *(_BYTE *)a2;
      *(_OWORD *)(v4 + 1) = *(_OWORD *)(a2 + 1);
      *((_BYTE *)v4 + 24) = *((_BYTE *)a2 + 24);
      v11 = *(int *)(v7 + 24);
      v12 = (char *)v4 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23BB88984();
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 2, v7);
    }
    v15 = a3[6];
    v95 = a3;
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    v96 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
    v18 = v96[5];
    v98 = v16;
    v19 = &v16[v18];
    v97 = v17;
    v20 = &v17[v18];
    v21 = *(_OWORD *)&v17[v18 + 24];
    *(_OWORD *)&v16[v18 + 24] = v21;
    (**(void (***)(_BYTE *, char *))(v21 - 8))(&v16[v18], &v17[v18]);
    *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
    v22 = (int *)type metadata accessor for CustomControlStyle(0);
    v23 = v22[6];
    v24 = &v19[v23];
    v25 = &v20[v23];
    v26 = sub_23BB8A334();
    v27 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_retain();
    v27(v24, v25, v26);
    v28 = v22[7];
    v29 = &v19[v28];
    v30 = &v20[v28];
    v31 = v20[v28 + 40];
    if ((v31 & 1) != 0)
    {
      v32 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v32;
      swift_retain();
    }
    else
    {
      v33 = *(_OWORD *)(v30 + 24);
      *(_OWORD *)(v29 + 24) = v33;
      (**(void (***)(_BYTE *))(v33 - 8))(v29);
    }
    v29[40] = v31;
    v34 = v22[8];
    v35 = &v19[v34];
    v36 = &v20[v34];
    v37 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = sub_23BB892F0();
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    v19[v22[9]] = v20[v22[9]];
    v19[v22[10]] = v20[v22[10]];
    v39 = v22[11];
    v40 = &v19[v39];
    v41 = &v20[v39];
    v40[8] = v41[8];
    *(_QWORD *)v40 = *(_QWORD *)v41;
    v42 = v96[6];
    v43 = &v98[v42];
    v44 = &v97[v42];
    v45 = *(_OWORD *)&v97[v42 + 24];
    *(_OWORD *)&v98[v42 + 24] = v45;
    (**(void (***)(_BYTE *, char *))(v45 - 8))(&v98[v42], &v97[v42]);
    *((_QWORD *)v43 + 5) = *((_QWORD *)v44 + 5);
    v46 = v22[6];
    v47 = &v43[v46];
    v48 = &v44[v46];
    swift_retain();
    v27(v47, v48, v26);
    v49 = v22[7];
    v50 = &v43[v49];
    v51 = &v44[v49];
    v52 = v44[v49 + 40];
    if ((v52 & 1) != 0)
    {
      v53 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v53;
      swift_retain();
    }
    else
    {
      v54 = *(_OWORD *)(v51 + 24);
      *(_OWORD *)(v50 + 24) = v54;
      (**(void (***)(uint64_t))(v54 - 8))((uint64_t)v50);
    }
    v50[40] = v52;
    v55 = v22[8];
    v56 = &v43[v55];
    v57 = &v44[v55];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v58 = sub_23BB892F0();
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    v43[v22[9]] = v44[v22[9]];
    v43[v22[10]] = v44[v22[10]];
    v59 = v22[11];
    v60 = &v43[v59];
    v61 = &v44[v59];
    v60[8] = v61[8];
    *(_QWORD *)v60 = *(_QWORD *)v61;
    v62 = v96[7];
    v63 = &v98[v62];
    v64 = &v97[v62];
    v65 = *(_OWORD *)&v97[v62 + 24];
    *(_OWORD *)&v98[v62 + 24] = v65;
    (**(void (***)(_BYTE *, char *))(v65 - 8))(&v98[v62], &v97[v62]);
    *((_QWORD *)v63 + 5) = *((_QWORD *)v64 + 5);
    v66 = v22[6];
    v67 = &v63[v66];
    v68 = &v64[v66];
    swift_retain();
    v27(v67, v68, v26);
    v69 = v22[7];
    v70 = &v63[v69];
    v71 = &v64[v69];
    v72 = v64[v69 + 40];
    if ((v72 & 1) != 0)
    {
      v73 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v73;
      swift_retain();
    }
    else
    {
      v74 = *(_OWORD *)(v71 + 24);
      *(_OWORD *)(v70 + 24) = v74;
      (**(void (***)(uint64_t))(v74 - 8))((uint64_t)v70);
    }
    v70[40] = v72;
    v75 = v22[8];
    v76 = &v63[v75];
    v77 = &v64[v75];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v78 = sub_23BB892F0();
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    v63[v22[9]] = v64[v22[9]];
    v63[v22[10]] = v64[v22[10]];
    v79 = v22[11];
    v80 = &v63[v79];
    v81 = &v64[v79];
    *(_QWORD *)v80 = *(_QWORD *)v81;
    v80[8] = v81[8];
    v82 = v95[7];
    v83 = v95[8];
    v84 = (uint64_t *)((char *)v4 + v82);
    v85 = (uint64_t *)((char *)a2 + v82);
    v86 = v85[1];
    *v84 = *v85;
    v84[1] = v86;
    v87 = (uint64_t *)((char *)v4 + v83);
    v88 = (uint64_t *)((char *)a2 + v83);
    v89 = v88[1];
    *v87 = *v88;
    v87[1] = v89;
    v90 = v95[9];
    v91 = (char *)v4 + v90;
    v92 = (char *)a2 + v90;
    *(_QWORD *)v91 = *(_QWORD *)v92;
    *(_OWORD *)(v91 + 8) = *(_OWORD *)(v92 + 8);
    *(_OWORD *)(v91 + 24) = *(_OWORD *)(v92 + 24);
    *(_OWORD *)(v91 + 40) = *(_OWORD *)(v92 + 40);
    *(_OWORD *)(v91 + 56) = *(_OWORD *)(v92 + 56);
    *(_OWORD *)(v91 + 72) = *(_OWORD *)(v92 + 72);
    *(_OWORD *)(v91 + 88) = *(_OWORD *)(v92 + 88);
    *(_OWORD *)(v91 + 104) = *(_OWORD *)(v92 + 104);
    v93 = *((_QWORD *)v92 + 17);
    *(_OWORD *)(v91 + 120) = *(_OWORD *)(v92 + 120);
    *((_QWORD *)v91 + 17) = v93;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BB0D718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 2, v4))
  {
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 24);
  v8 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v9 = v7 + v8[5];
  __swift_destroy_boxed_opaque_existential_1(v9);
  swift_release();
  v10 = (int *)type metadata accessor for CustomControlStyle(0);
  v11 = v9 + v10[6];
  v12 = sub_23BB8A334();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v14 = v9 + v10[7];
  if ((*(_BYTE *)(v14 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v14);
  v15 = v9 + v10[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = v7 + v8[6];
  __swift_destroy_boxed_opaque_existential_1(v17);
  swift_release();
  v13(v17 + v10[6], v12);
  v18 = v17 + v10[7];
  if ((*(_BYTE *)(v18 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v18);
  v19 = v17 + v10[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  v21 = v7 + v8[7];
  __swift_destroy_boxed_opaque_existential_1(v21);
  swift_release();
  v13(v21 + v10[6], v12);
  v22 = v21 + v10[7];
  if ((*(_BYTE *)(v22 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v22);
  v23 = v21 + v10[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_BYTE *sub_23BB0D9D4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Action;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  __int128 v21;
  int *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  void (*v27)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  __int128 v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  __int128 v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  char v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v96;
  int *v97;
  _BYTE *v98;
  void (*v99)(_BYTE *, _BYTE *, uint64_t);
  int *v100;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v9 = *(int *)(v6 + 24);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v13 = a3[6];
  v97 = a3;
  a1[a3[5]] = a2[a3[5]];
  v98 = a1;
  v14 = &a1[v13];
  v96 = a2;
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v100 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v16 = v100[5];
  v17 = v14;
  v18 = &v14[v16];
  v19 = v15;
  v20 = &v15[v16];
  v21 = *(_OWORD *)&v15[v16 + 24];
  *(_OWORD *)&v14[v16 + 24] = v21;
  (**(void (***)(_BYTE *, _BYTE *))(v21 - 8))(&v14[v16], &v15[v16]);
  *((_QWORD *)v18 + 5) = *((_QWORD *)v20 + 5);
  v22 = (int *)type metadata accessor for CustomControlStyle(0);
  v23 = v22[6];
  v24 = &v18[v23];
  v25 = &v20[v23];
  v26 = sub_23BB8A334();
  v27 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_retain();
  v99 = v27;
  v27(v24, v25, v26);
  v28 = v22[7];
  v29 = &v18[v28];
  v30 = &v20[v28];
  v31 = v20[v28 + 40];
  if ((v31 & 1) != 0)
  {
    v32 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v32;
    swift_retain();
  }
  else
  {
    v33 = *(_OWORD *)(v30 + 24);
    *(_OWORD *)(v29 + 24) = v33;
    (**(void (***)(_BYTE *))(v33 - 8))(v29);
  }
  v34 = v19;
  v29[40] = v31;
  v35 = v22[8];
  v36 = &v18[v35];
  v37 = &v20[v35];
  v38 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  v18[v22[9]] = v20[v22[9]];
  v18[v22[10]] = v20[v22[10]];
  v40 = v22[11];
  v41 = &v18[v40];
  v42 = &v20[v40];
  v41[8] = v42[8];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v43 = v100[6];
  v44 = &v17[v43];
  v45 = &v19[v43];
  v46 = *(_OWORD *)&v19[v43 + 24];
  *(_OWORD *)&v17[v43 + 24] = v46;
  (**(void (***)(_BYTE *, _BYTE *))(v46 - 8))(&v17[v43], &v19[v43]);
  *((_QWORD *)v44 + 5) = *((_QWORD *)v45 + 5);
  v47 = v22[6];
  v48 = &v44[v47];
  v49 = &v45[v47];
  swift_retain();
  v99(v48, v49, v26);
  v50 = v22[7];
  v51 = &v44[v50];
  v52 = &v45[v50];
  v53 = v45[v50 + 40];
  if ((v53 & 1) != 0)
  {
    v54 = *((_QWORD *)v52 + 1);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *((_QWORD *)v51 + 1) = v54;
    swift_retain();
  }
  else
  {
    v55 = *(_OWORD *)(v52 + 24);
    *(_OWORD *)(v51 + 24) = v55;
    (**(void (***)(uint64_t))(v55 - 8))((uint64_t)v51);
  }
  v51[40] = v53;
  v56 = v22[8];
  v57 = &v44[v56];
  v58 = &v45[v56];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v59 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  v44[v22[9]] = v45[v22[9]];
  v44[v22[10]] = v45[v22[10]];
  v60 = v22[11];
  v61 = &v44[v60];
  v62 = &v45[v60];
  v61[8] = v62[8];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  v63 = v100[7];
  v64 = &v17[v63];
  v65 = &v34[v63];
  v66 = *(_OWORD *)&v34[v63 + 24];
  *(_OWORD *)(v64 + 24) = v66;
  (**(void (***)(_BYTE *, uint64_t))(v66 - 8))(&v17[v63], (uint64_t)&v34[v63]);
  *((_QWORD *)v64 + 5) = *((_QWORD *)v65 + 5);
  v67 = v22[6];
  v68 = &v64[v67];
  v69 = &v65[v67];
  swift_retain();
  v99(v68, v69, v26);
  v70 = v22[7];
  v71 = &v64[v70];
  v72 = &v65[v70];
  v73 = v65[v70 + 40];
  if ((v73 & 1) != 0)
  {
    v74 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v74;
    swift_retain();
  }
  else
  {
    v75 = *(_OWORD *)(v72 + 24);
    *(_OWORD *)(v71 + 24) = v75;
    (**(void (***)(uint64_t))(v75 - 8))((uint64_t)v71);
  }
  v71[40] = v73;
  v76 = v22[8];
  v77 = &v64[v76];
  v78 = &v65[v76];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v79 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  v64[v22[9]] = v65[v22[9]];
  v64[v22[10]] = v65[v22[10]];
  v80 = v22[11];
  v81 = &v64[v80];
  v82 = &v65[v80];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = v82[8];
  v83 = v97[7];
  v84 = v97[8];
  v85 = &v98[v83];
  v86 = &v96[v83];
  v87 = v86[1];
  *v85 = *v86;
  v85[1] = v87;
  v88 = &v98[v84];
  v89 = &v96[v84];
  v90 = v89[1];
  *v88 = *v89;
  v88[1] = v90;
  v91 = v97[9];
  v92 = &v98[v91];
  v93 = &v96[v91];
  *(_QWORD *)v92 = *(_QWORD *)v93;
  *(_OWORD *)(v92 + 8) = *(_OWORD *)(v93 + 8);
  *(_OWORD *)(v92 + 24) = *(_OWORD *)(v93 + 24);
  *(_OWORD *)(v92 + 40) = *(_OWORD *)(v93 + 40);
  *(_OWORD *)(v92 + 56) = *(_OWORD *)(v93 + 56);
  *(_OWORD *)(v92 + 72) = *(_OWORD *)(v93 + 72);
  *(_OWORD *)(v92 + 88) = *(_OWORD *)(v93 + 88);
  *(_OWORD *)(v92 + 104) = *(_OWORD *)(v93 + 104);
  v94 = *((_QWORD *)v93 + 17);
  *(_OWORD *)(v92 + 120) = *(_OWORD *)(v93 + 120);
  *((_QWORD *)v92 + 17) = v94;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v98;
}

uint64_t sub_23BB0E014(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Action;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  int *v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  int *v106;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v11 = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = v11;
      v12 = *(int *)(v6 + 24);
      v13 = a1 + v12;
      v14 = a2 + v12;
      v15 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23B989D9C(a1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_6:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v97 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v97;
  v98 = *(int *)(v6 + 24);
  v99 = a1 + v98;
  v100 = a2 + v98;
  v101 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 24))(v99, v100, v101);
LABEL_7:
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v102 = a3;
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v106 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v20 = v106[5];
  v21 = v18 + v20;
  v22 = v19 + v20;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v18 + v20), (uint64_t *)(v19 + v20));
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  swift_retain();
  swift_release();
  v23 = (int *)type metadata accessor for CustomControlStyle(0);
  v24 = v23[6];
  v25 = v21 + v24;
  v26 = v22 + v24;
  v27 = sub_23BB8A334();
  v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24);
  v105(v25, v26, v27);
  v103 = v19;
  if (a1 == a2)
  {
    v104 = v23 + 8;
  }
  else
  {
    v28 = v23[7];
    v29 = v21 + v28;
    v30 = v22 + v28;
    sub_23B989D60(v21 + v28, qword_256A59CC0);
    if ((*(_BYTE *)(v30 + 40) & 1) != 0)
    {
      v31 = *(_QWORD *)(v30 + 8);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_QWORD *)(v29 + 8) = v31;
      *(_BYTE *)(v29 + 40) = 1;
      swift_retain();
    }
    else
    {
      v32 = *(_QWORD *)(v30 + 24);
      *(_QWORD *)(v29 + 24) = v32;
      *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
      (**(void (***)(uint64_t, uint64_t))(v32 - 8))(v29, v30);
      *(_BYTE *)(v29 + 40) = 0;
    }
    v33 = v23[8];
    v104 = v23 + 8;
    v34 = (void *)(v21 + v33);
    v35 = (const void *)(v22 + v33);
    sub_23B989D9C(v21 + v33, type metadata accessor for CustomControlStyle.BackgroundSize);
    v36 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    v19 = v103;
  }
  *(_BYTE *)(v21 + v23[9]) = *(_BYTE *)(v22 + v23[9]);
  *(_BYTE *)(v21 + v23[10]) = *(_BYTE *)(v22 + v23[10]);
  v38 = v23[11];
  v39 = v21 + v38;
  v40 = (uint64_t *)(v22 + v38);
  v41 = *v40;
  *(_BYTE *)(v39 + 8) = *((_BYTE *)v40 + 8);
  *(_QWORD *)v39 = v41;
  v42 = v106[6];
  v43 = v18 + v42;
  v44 = v19 + v42;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v18 + v42), (uint64_t *)(v19 + v42));
  *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
  swift_retain();
  swift_release();
  v105(v43 + v23[6], v44 + v23[6], v27);
  if (a1 != a2)
  {
    v45 = v23[7];
    v46 = v43 + v45;
    v47 = v44 + v45;
    sub_23B989D60(v43 + v45, qword_256A59CC0);
    if ((*(_BYTE *)(v47 + 40) & 1) != 0)
    {
      v48 = *(_QWORD *)(v47 + 8);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *(_QWORD *)(v46 + 8) = v48;
      *(_BYTE *)(v46 + 40) = 1;
      swift_retain();
    }
    else
    {
      v49 = *(_QWORD *)(v47 + 24);
      *(_QWORD *)(v46 + 24) = v49;
      *(_QWORD *)(v46 + 32) = *(_QWORD *)(v47 + 32);
      (**(void (***)(uint64_t, uint64_t))(v49 - 8))(v46, v47);
      *(_BYTE *)(v46 + 40) = 0;
    }
    v50 = *v104;
    v51 = (void *)(v43 + v50);
    v52 = (const void *)(v44 + v50);
    sub_23B989D9C(v43 + v50, type metadata accessor for CustomControlStyle.BackgroundSize);
    v53 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v54 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    v19 = v103;
  }
  *(_BYTE *)(v43 + v23[9]) = *(_BYTE *)(v44 + v23[9]);
  *(_BYTE *)(v43 + v23[10]) = *(_BYTE *)(v44 + v23[10]);
  v55 = v23[11];
  v56 = v43 + v55;
  v57 = (uint64_t *)(v44 + v55);
  v58 = *v57;
  *(_BYTE *)(v56 + 8) = *((_BYTE *)v57 + 8);
  *(_QWORD *)v56 = v58;
  v59 = v106[7];
  v60 = (uint64_t *)(v18 + v59);
  v61 = v19 + v59;
  __swift_assign_boxed_opaque_existential_1(v60, (uint64_t *)(v19 + v59));
  v60[5] = *(_QWORD *)(v61 + 40);
  swift_retain();
  swift_release();
  v105((uint64_t)v60 + v23[6], v61 + v23[6], v27);
  if (a1 != a2)
  {
    v62 = v23[7];
    v63 = (char *)v60 + v62;
    v64 = v61 + v62;
    sub_23B989D60((uint64_t)v60 + v62, qword_256A59CC0);
    if ((*(_BYTE *)(v64 + 40) & 1) != 0)
    {
      v65 = *(_QWORD *)(v64 + 8);
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = v65;
      v63[40] = 1;
      swift_retain();
    }
    else
    {
      v66 = *(_QWORD *)(v64 + 24);
      *((_QWORD *)v63 + 3) = v66;
      *((_QWORD *)v63 + 4) = *(_QWORD *)(v64 + 32);
      (**(void (***)(char *, uint64_t))(v66 - 8))(v63, v64);
      v63[40] = 0;
    }
    v67 = *v104;
    v68 = (char *)v60 + v67;
    v69 = (const void *)(v61 + v67);
    sub_23B989D9C((uint64_t)v60 + v67, type metadata accessor for CustomControlStyle.BackgroundSize);
    v70 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v71 = sub_23BB892F0();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v68, v69, v71);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
  }
  *((_BYTE *)v60 + v23[9]) = *(_BYTE *)(v61 + v23[9]);
  *((_BYTE *)v60 + v23[10]) = *(_BYTE *)(v61 + v23[10]);
  v72 = v23[11];
  v73 = (char *)v60 + v72;
  v74 = (uint64_t *)(v61 + v72);
  v75 = *v74;
  v73[8] = *((_BYTE *)v74 + 8);
  *(_QWORD *)v73 = v75;
  v76 = v102[7];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)(a2 + v76);
  v79 = v78[1];
  *v77 = *v78;
  v77[1] = v79;
  swift_retain();
  swift_release();
  v80 = v102[8];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  v83 = v82[1];
  *v81 = *v82;
  v81[1] = v83;
  swift_retain();
  swift_release();
  v84 = v102[9];
  v85 = (_QWORD *)(a1 + v84);
  v86 = (_QWORD *)(a2 + v84);
  v87 = *(_QWORD *)(a2 + v84 + 8);
  *v85 = *(_QWORD *)(a2 + v84);
  v85[1] = v87;
  swift_retain();
  swift_release();
  v88 = v86[3];
  v85[2] = v86[2];
  v85[3] = v88;
  swift_retain();
  swift_release();
  v89 = v86[5];
  v85[4] = v86[4];
  v85[5] = v89;
  swift_retain();
  swift_release();
  v90 = v86[7];
  v85[6] = v86[6];
  v85[7] = v90;
  swift_retain();
  swift_release();
  v91 = v86[9];
  v85[8] = v86[8];
  v85[9] = v91;
  swift_retain();
  swift_release();
  v92 = v86[11];
  v85[10] = v86[10];
  v85[11] = v92;
  swift_retain();
  swift_release();
  v93 = v86[13];
  v85[12] = v86[12];
  v85[13] = v93;
  swift_retain();
  swift_release();
  v94 = v86[15];
  v85[14] = v86[14];
  v85[15] = v94;
  swift_retain();
  swift_release();
  v95 = v86[17];
  v85[16] = v86[16];
  v85[17] = v95;
  swift_retain();
  swift_release();
  return a1;
}

_BYTE *sub_23BB0E778(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Action;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  int *v79;
  void (*v80)(_BYTE *, _BYTE *, uint64_t);
  int *v81;
  _BYTE *v82;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    v9 = *(int *)(v6 + 24);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  v13 = a3[6];
  v79 = a3;
  a1[a3[5]] = a2[a3[5]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v81 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v82 = v15;
  v16 = v81[5];
  v17 = &v14[v16];
  v18 = &v15[v16];
  v19 = *(_OWORD *)&v15[v16 + 16];
  *(_OWORD *)v17 = *(_OWORD *)&v15[v16];
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_QWORD *)&v15[v16 + 40];
  *((_QWORD *)v17 + 4) = *(_QWORD *)&v15[v16 + 32];
  *((_QWORD *)v17 + 5) = v20;
  v21 = (int *)type metadata accessor for CustomControlStyle(0);
  v22 = v21[6];
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = sub_23BB8A334();
  v80 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
  v80(v23, v24, v25);
  v26 = v21[7];
  v27 = &v17[v26];
  v28 = &v18[v26];
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  *(_OWORD *)((char *)v27 + 25) = *(_OWORD *)((char *)v28 + 25);
  v30 = v21[8];
  v31 = &v17[v30];
  v32 = &v18[v30];
  v33 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v34 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v17[v21[9]] = v18[v21[9]];
  v17[v21[10]] = v18[v21[10]];
  v35 = v21[11];
  v36 = &v17[v35];
  v37 = &v18[v35];
  v36[8] = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v38 = v81[6];
  v39 = &v14[v38];
  v40 = &v82[v38];
  v41 = *(_OWORD *)&v82[v38 + 16];
  *(_OWORD *)v39 = *(_OWORD *)&v82[v38];
  *((_OWORD *)v39 + 1) = v41;
  v42 = *(_QWORD *)&v82[v38 + 40];
  *((_QWORD *)v39 + 4) = *(_QWORD *)&v82[v38 + 32];
  *((_QWORD *)v39 + 5) = v42;
  v80(&v14[v38 + v21[6]], &v82[v38 + v21[6]], v25);
  v43 = v21[7];
  v44 = &v39[v43];
  v45 = &v40[v43];
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  *(_OWORD *)((char *)v44 + 25) = *(_OWORD *)((char *)v45 + 25);
  v47 = v21[8];
  v48 = &v39[v47];
  v49 = &v40[v47];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v39[v21[9]] = v40[v21[9]];
  v39[v21[10]] = v40[v21[10]];
  v51 = v21[11];
  v52 = &v39[v51];
  v53 = &v40[v51];
  v52[8] = v53[8];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  v54 = v81[7];
  v55 = &v14[v54];
  v56 = &v82[v54];
  v57 = *(_OWORD *)&v82[v54 + 16];
  *(_OWORD *)v55 = *(_OWORD *)&v82[v54];
  *((_OWORD *)v55 + 1) = v57;
  v58 = *(_QWORD *)&v82[v54 + 40];
  *((_QWORD *)v55 + 4) = *(_QWORD *)&v82[v54 + 32];
  *((_QWORD *)v55 + 5) = v58;
  v80(&v55[v21[6]], &v82[v54 + v21[6]], v25);
  v59 = v21[7];
  v60 = &v55[v59];
  v61 = &v56[v59];
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  *(_OWORD *)((char *)v60 + 25) = *(_OWORD *)((char *)v61 + 25);
  v63 = v21[8];
  v64 = &v55[v63];
  v65 = &v56[v63];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v66 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v55[v21[9]] = v56[v21[9]];
  v55[v21[10]] = v56[v21[10]];
  v67 = v21[11];
  v68 = &v55[v67];
  v69 = &v56[v67];
  v68[8] = v69[8];
  *(_QWORD *)v68 = *(_QWORD *)v69;
  v70 = v79[8];
  *(_OWORD *)&a1[v79[7]] = *(_OWORD *)&a2[v79[7]];
  *(_OWORD *)&a1[v70] = *(_OWORD *)&a2[v70];
  v71 = v79[9];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = v73[7];
  v72[6] = v73[6];
  v72[7] = v74;
  v72[8] = v73[8];
  v75 = v73[3];
  v72[2] = v73[2];
  v72[3] = v75;
  v76 = v73[5];
  v72[4] = v73[4];
  v72[5] = v76;
  v77 = v73[1];
  *v72 = *v73;
  v72[1] = v77;
  return a1;
}

uint64_t sub_23BB0EBE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Action;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  __int128 v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  _OWORD *v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  int *v86;

  v6 = type metadata accessor for DirectionsState();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v11 = *(int *)(v6 + 24);
      v12 = a1 + v11;
      v13 = a2 + v11;
      v14 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23B989D9C(a1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_6:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v79 = *(int *)(v6 + 24);
  v80 = a1 + v79;
  v81 = a2 + v79;
  v82 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
LABEL_7:
  v16 = a3[6];
  v83 = a3;
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v86 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v19 = v86[5];
  v20 = v17 + v19;
  v21 = v18 + v19;
  __swift_destroy_boxed_opaque_existential_1(v17 + v19);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  v23 = *(_QWORD *)(v21 + 40);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 40) = v23;
  swift_release();
  v24 = (int *)type metadata accessor for CustomControlStyle(0);
  v25 = v24[6];
  v26 = v20 + v25;
  v27 = v21 + v25;
  v28 = sub_23BB8A334();
  v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40);
  v85(v26, v27, v28);
  v84 = v18;
  if (a1 != a2)
  {
    v29 = v24[7];
    v30 = (_OWORD *)(v21 + v29);
    v31 = (_OWORD *)(v20 + v29);
    sub_23B989D60(v20 + v29, qword_256A59CC0);
    v32 = v30[1];
    *v31 = *v30;
    v31[1] = v32;
    *(_OWORD *)((char *)v31 + 25) = *(_OWORD *)((char *)v30 + 25);
    v33 = v24[8];
    v34 = (void *)(v20 + v33);
    v35 = (const void *)(v21 + v33);
    sub_23B989D9C(v20 + v33, type metadata accessor for CustomControlStyle.BackgroundSize);
    v36 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    v18 = v84;
  }
  *(_BYTE *)(v20 + v24[9]) = *(_BYTE *)(v21 + v24[9]);
  *(_BYTE *)(v20 + v24[10]) = *(_BYTE *)(v21 + v24[10]);
  v38 = v24[11];
  v39 = v20 + v38;
  v40 = v21 + v38;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v41 = v86[6];
  v42 = v17 + v41;
  v43 = v18 + v41;
  __swift_destroy_boxed_opaque_existential_1(v17 + v41);
  v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  v45 = *(_QWORD *)(v43 + 40);
  *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 40) = v45;
  swift_release();
  v85(v42 + v24[6], v43 + v24[6], v28);
  if (a1 != a2)
  {
    v46 = v24[7];
    v47 = (_OWORD *)(v43 + v46);
    v48 = (_OWORD *)(v42 + v46);
    sub_23B989D60(v42 + v46, qword_256A59CC0);
    v49 = v47[1];
    *v48 = *v47;
    v48[1] = v49;
    *(_OWORD *)((char *)v48 + 25) = *(_OWORD *)((char *)v47 + 25);
    v50 = v24[8];
    v51 = (void *)(v42 + v50);
    v52 = (const void *)(v43 + v50);
    sub_23B989D9C(v42 + v50, type metadata accessor for CustomControlStyle.BackgroundSize);
    v53 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v54 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v51, v52, v54);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    v18 = v84;
  }
  *(_BYTE *)(v42 + v24[9]) = *(_BYTE *)(v43 + v24[9]);
  *(_BYTE *)(v42 + v24[10]) = *(_BYTE *)(v43 + v24[10]);
  v55 = v24[11];
  v56 = v42 + v55;
  v57 = v43 + v55;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  *(_QWORD *)v56 = *(_QWORD *)v57;
  v58 = v86[7];
  v59 = v17 + v58;
  v60 = v18 + v58;
  __swift_destroy_boxed_opaque_existential_1(v59);
  v61 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v61;
  v62 = *(_QWORD *)(v60 + 40);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  *(_QWORD *)(v59 + 40) = v62;
  swift_release();
  v85(v59 + v24[6], v60 + v24[6], v28);
  if (a1 != a2)
  {
    v63 = v24[7];
    v64 = (_OWORD *)(v60 + v63);
    v65 = (_OWORD *)(v59 + v63);
    sub_23B989D60(v59 + v63, qword_256A59CC0);
    v66 = v64[1];
    *v65 = *v64;
    v65[1] = v66;
    *(_OWORD *)((char *)v65 + 25) = *(_OWORD *)((char *)v64 + 25);
    v67 = v24[8];
    v68 = (void *)(v59 + v67);
    v69 = (const void *)(v60 + v67);
    sub_23B989D9C(v59 + v67, type metadata accessor for CustomControlStyle.BackgroundSize);
    v70 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v71 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v68, v69, v71);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
  }
  *(_BYTE *)(v59 + v24[9]) = *(_BYTE *)(v60 + v24[9]);
  *(_BYTE *)(v59 + v24[10]) = *(_BYTE *)(v60 + v24[10]);
  v72 = v24[11];
  v73 = v59 + v72;
  v74 = v60 + v72;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_OWORD *)(a1 + v83[7]) = *(_OWORD *)(a2 + v83[7]);
  swift_release();
  *(_OWORD *)(a1 + v83[8]) = *(_OWORD *)(a2 + v83[8]);
  swift_release();
  v75 = v83[9];
  v76 = (_OWORD *)(a1 + v75);
  v77 = (_OWORD *)(a2 + v75);
  *(_OWORD *)(a1 + v75) = *v77;
  swift_release();
  v76[1] = v77[1];
  swift_release();
  v76[2] = v77[2];
  swift_release();
  v76[3] = v77[3];
  swift_release();
  v76[4] = v77[4];
  swift_release();
  v76[5] = v77[5];
  swift_release();
  v76[6] = v77[6];
  swift_release();
  v76[7] = v77[7];
  swift_release();
  v76[8] = v77[8];
  swift_release();
  return a1;
}

uint64_t sub_23BB0F214()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB0F220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Action;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  Action = type metadata accessor for LocateAction();
  v7 = *(_QWORD *)(Action - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = Action;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_23BB0F2C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB0F2D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t Action;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  Action = type metadata accessor for LocateAction();
  v9 = *(_QWORD *)(Action - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = Action;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ShareReceivedMessageViewActionsModule(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A62460);
}

uint64_t sub_23BB0F38C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for LocateAction();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ShareReceivedMessageViewActionsModule.Style(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23BB0F430()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB0F440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t Action;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t (**v78)(uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t (**v106)(uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  char v186;

  v177 = a1;
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624A8);
  MEMORY[0x24BDAC7A8](v171, v2);
  v176 = (char *)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for CustomMenuStyle(0);
  MEMORY[0x24BDAC7A8](v172, v4);
  v153 = (uint64_t)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule(0);
  v149 = *((_QWORD *)v178 - 1);
  MEMORY[0x24BDAC7A8](v178, v6);
  v150 = v7;
  v151 = (uint64_t)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624B0);
  v155 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173, v8);
  v152 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v154 = (char *)&v146 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624B8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v175 = (uint64_t)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v174 = (char *)&v146 - v18;
  v168 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v168, v19);
  v160 = (uint64_t)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v164 = (uint64_t)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  MEMORY[0x24BDAC7A8](v163, v24);
  v26 = (char *)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E08);
  v162 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169, v27);
  v159 = (char *)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v161 = (char *)&v146 - v31;
  v32 = type metadata accessor for DirectionsState();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v32, v35);
  v36 = (char *)&v146 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v38);
  v157 = (uint64_t)&v146 - v39;
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624C0);
  MEMORY[0x24BDAC7A8](v165, v40);
  v167 = (uint64_t)&v146 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624C8);
  MEMORY[0x24BDAC7A8](v156, v42);
  v44 = (char *)&v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624D0);
  MEMORY[0x24BDAC7A8](v166, v45);
  v158 = (char *)&v146 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  Action = type metadata accessor for LocateAction();
  MEMORY[0x24BDAC7A8](Action, v48);
  v50 = (char *)&v146 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A624D8);
  MEMORY[0x24BDAC7A8](v51, v52);
  v170 = (uint64_t)&v146 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54, v55);
  v179 = (uint64_t)&v146 - v56;
  v57 = v1;
  sub_23B989CE8(v1, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v50, 2, v32);
  if (v58)
  {
    if (v58 == 1)
    {
      swift_storeEnumTagMultiPayload();
      v59 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v60 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v180 = (void *)v163;
      v181 = v168;
      v182 = v59;
      v183 = v60;
      swift_getOpaqueTypeConformance2();
      v61 = (uint64_t)v158;
      sub_23BB89944();
      sub_23B989EFC(v61, v167, &qword_256A624D0);
      swift_storeEnumTagMultiPayload();
      sub_23BB106A4();
      sub_23BB89944();
      sub_23B989D60(v61, &qword_256A624D0);
      v62 = v178;
    }
    else
    {
      v92 = sub_23BB8929C();
      v93 = v164;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v164, 1, 1, v92);
      v94 = v178;
      v95 = (uint64_t *)(v1 + v178[8]);
      v148 = v1;
      v97 = *v95;
      v96 = v95[1];
      v98 = swift_allocObject();
      *(_QWORD *)(v98 + 16) = v97;
      *(_QWORD *)(v98 + 24) = v96;
      v99 = (int *)v163;
      v100 = &v26[*(int *)(v163 + 48)];
      v186 = 0;
      swift_retain();
      sub_23BB8A0C4();
      v101 = v181;
      *v100 = (char)v180;
      *((_QWORD *)v100 + 1) = v101;
      v102 = &v26[v99[13]];
      v186 = 0;
      sub_23BB8A0C4();
      v103 = v181;
      *v102 = (char)v180;
      *((_QWORD *)v102 + 1) = v103;
      sub_23B990D24(v93, (uint64_t)v26, &qword_256A599A0);
      v104 = &v26[v99[9]];
      *(_QWORD *)v104 = &unk_256A624E8;
      *((_QWORD *)v104 + 1) = v98;
      v105 = swift_allocObject();
      *(_QWORD *)(v105 + 16) = sub_23B9A5374;
      *(_QWORD *)(v105 + 24) = 0;
      v106 = (uint64_t (**)(uint64_t))&v26[v99[10]];
      *v106 = sub_23B9A5A3C;
      v106[1] = (uint64_t (*)(uint64_t))v105;
      v26[v99[11]] = 1;
      v107 = v1 + v94[6];
      v108 = type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
      v109 = v160;
      sub_23B989CE8(v107 + *(int *)(v108 + 24), v160, type metadata accessor for CustomControlStyle);
      v164 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v110 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v111 = v159;
      v112 = v168;
      sub_23BB89D94();
      sub_23B989D9C(v109, type metadata accessor for CustomButtonStyle);
      sub_23B989D60((uint64_t)v26, &qword_256A59E00);
      v113 = v162;
      v114 = v161;
      v115 = v169;
      (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v161, v111, v169);
      (*(void (**)(uint64_t, char *, uint64_t))(v113 + 16))(v167, v114, v115);
      swift_storeEnumTagMultiPayload();
      sub_23BB106A4();
      v180 = v99;
      v181 = v112;
      v182 = v164;
      v183 = v110;
      v62 = v178;
      swift_getOpaqueTypeConformance2();
      v57 = v148;
      sub_23BB89944();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
    }
  }
  else
  {
    v63 = v157;
    sub_23B989CA4((uint64_t)v50, v157, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v64 = sub_23BB8929C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v164, 1, 1, v64);
    v65 = (uint64_t *)(v57 + v178[7]);
    v67 = *v65;
    v66 = v65[1];
    v68 = swift_allocObject();
    *(_QWORD *)(v68 + 16) = v67;
    *(_QWORD *)(v68 + 24) = v66;
    sub_23B989CE8(v63, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v69 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v70 = swift_allocObject();
    sub_23B989CA4((uint64_t)v36, v70 + v69, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v147 = v44;
    v71 = (int *)v163;
    v72 = &v26[*(int *)(v163 + 48)];
    v186 = 0;
    swift_retain();
    sub_23BB8A0C4();
    v73 = v181;
    *v72 = (char)v180;
    *((_QWORD *)v72 + 1) = v73;
    v74 = &v26[v71[13]];
    v186 = 0;
    sub_23BB8A0C4();
    v75 = v181;
    *v74 = (char)v180;
    *((_QWORD *)v74 + 1) = v75;
    sub_23B990D24(v164, (uint64_t)v26, &qword_256A599A0);
    v76 = &v26[v71[9]];
    *(_QWORD *)v76 = &unk_256A62520;
    *((_QWORD *)v76 + 1) = v68;
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = sub_23B9BA010;
    *(_QWORD *)(v77 + 24) = v70;
    v148 = v57;
    v78 = (uint64_t (**)(uint64_t))&v26[v71[10]];
    *v78 = sub_23B9BA300;
    v78[1] = (uint64_t (*)(uint64_t))v77;
    v26[v71[11]] = 1;
    v79 = v57 + v178[6];
    v80 = type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
    v81 = v160;
    sub_23B989CE8(v79 + *(int *)(v80 + 20), v160, type metadata accessor for CustomControlStyle);
    v82 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v83 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v84 = v159;
    v85 = v168;
    sub_23BB89D94();
    sub_23B989D9C(v81, type metadata accessor for CustomButtonStyle);
    sub_23B989D60((uint64_t)v26, &qword_256A59E00);
    v86 = v162;
    v87 = v161;
    v88 = v169;
    (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v161, v84, v169);
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v147, v87, v88);
    swift_storeEnumTagMultiPayload();
    v180 = v71;
    v181 = v85;
    v182 = v82;
    v183 = v83;
    swift_getOpaqueTypeConformance2();
    v89 = (uint64_t)v158;
    sub_23BB89944();
    sub_23B989EFC(v89, v167, &qword_256A624D0);
    swift_storeEnumTagMultiPayload();
    sub_23BB106A4();
    sub_23BB89944();
    sub_23B989D60(v89, &qword_256A624D0);
    v90 = *(void (**)(char *, uint64_t))(v86 + 8);
    v57 = v148;
    v91 = v88;
    v62 = v178;
    v90(v87, v91);
    sub_23B989D9C(v157, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
  }
  if (*(_BYTE *)(v57 + v62[5]) == 1)
  {
    v116 = v151;
    sub_23B989CE8(v57, v151, type metadata accessor for ShareReceivedMessageViewActionsModule);
    v117 = (*(unsigned __int8 *)(v149 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
    v118 = swift_allocObject();
    sub_23B989CA4(v116, v118 + v117, type metadata accessor for ShareReceivedMessageViewActionsModule);
    v119 = sub_23BB897D0();
    v121 = v120;
    v123 = v122;
    v125 = v124;
    v126 = v57 + v62[6];
    v127 = v126 + *(int *)(type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0) + 28);
    v180 = &unk_256A62518;
    v181 = v118;
    v182 = v119;
    v183 = v121;
    v184 = v123 & 1;
    v185 = v125;
    v128 = v153;
    sub_23B989CE8(v127, v153, type metadata accessor for CustomControlStyle);
    v178 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A624F8);
    v129 = sub_23B996E1C(&qword_256A62500, &qword_256A624F8, (uint64_t)&unk_23BB94700);
    v130 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
    v131 = v152;
    v132 = v172;
    sub_23BB89F5C();
    sub_23B989D9C(v128, type metadata accessor for CustomMenuStyle);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v133 = v155;
    v134 = v154;
    v135 = v173;
    (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v154, v131, v173);
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v176, v134, v135);
    swift_storeEnumTagMultiPayload();
    v180 = v178;
    v181 = v132;
    v182 = v129;
    v183 = v130;
    swift_getOpaqueTypeConformance2();
    v136 = (uint64_t)v174;
    sub_23BB89944();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    v137 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A624F8);
    v138 = sub_23B996E1C(&qword_256A62500, &qword_256A624F8, (uint64_t)&unk_23BB94700);
    v139 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
    v180 = (void *)v137;
    v181 = v172;
    v182 = v138;
    v183 = v139;
    swift_getOpaqueTypeConformance2();
    v136 = (uint64_t)v174;
    sub_23BB89944();
  }
  v140 = v179;
  v141 = v170;
  sub_23B989EFC(v179, v170, &qword_256A624D8);
  v142 = v175;
  sub_23B989EFC(v136, v175, &qword_256A624B8);
  v143 = v177;
  sub_23B989EFC(v141, v177, &qword_256A624D8);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62508);
  sub_23B989EFC(v142, v143 + *(int *)(v144 + 48), &qword_256A624B8);
  sub_23B989D60(v136, &qword_256A624B8);
  sub_23B989D60(v140, &qword_256A624D8);
  sub_23B989D60(v142, &qword_256A624B8);
  return sub_23B989D60(v141, &qword_256A624D8);
}

uint64_t sub_23BB10428(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return sub_23BB064F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23BB1045C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23BB104C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD);

  v1 = v0[3];
  v2 = v1 + *(int *)(type metadata accessor for ShareReceivedMessageViewActionsModule(0) + 36);
  v5 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v2 + 80) + *(_QWORD *)(v2 + 80));
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23B9A559C;
  return v5(v0[2], 0);
}

uint64_t sub_23BB1053C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  sub_23B989CE8(v3, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareReceivedMessageViewActionsModule);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  result = sub_23B989CA4((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for ShareReceivedMessageViewActionsModule);
  *(_QWORD *)a3 = 0;
  *(_WORD *)(a3 + 8) = 257;
  *(_QWORD *)(a3 + 16) = sub_23BB10600;
  *(_QWORD *)(a3 + 24) = v8;
  return result;
}

uint64_t sub_23BB10600@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ShareReceivedMessageViewActionsModule(0);
  return sub_23BB0F440(a1);
}

uint64_t sub_23BB10640()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;

  v2 = *(void (**)(void))(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  return ((uint64_t (*)(void (*)(void)))((char *)&dword_256A624E0 + dword_256A624E0))(v2);
}

unint64_t sub_23BB106A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v3[6];

  result = qword_256A624F0;
  if (!qword_256A624F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A624D0);
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E00);
    v3[3] = type metadata accessor for CustomButtonStyle(255);
    v3[4] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v3[5] = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = OpaqueTypeConformance2;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A624F0);
  }
  return result;
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = type metadata accessor for ShareReceivedMessageViewActionsModule(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 2, v3))
  {
    v4 = v2 + *(int *)(v3 + 24);
    v5 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  v6 = v2 + *(int *)(v1 + 24);
  v7 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule.Style(0);
  v8 = v6 + v7[5];
  __swift_destroy_boxed_opaque_existential_1(v8);
  swift_release();
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v8 + v9[6];
  v11 = sub_23BB8A334();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v13 = v8 + v9[7];
  if ((*(_BYTE *)(v13 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v8 + v9[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = v6 + v7[6];
  __swift_destroy_boxed_opaque_existential_1(v16);
  swift_release();
  v12(v16 + v9[6], v11);
  v17 = v16 + v9[7];
  if ((*(_BYTE *)(v17 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v17);
  v18 = v16 + v9[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = v6 + v7[7];
  __swift_destroy_boxed_opaque_existential_1(v20);
  swift_release();
  v12(v20 + v9[6], v11);
  v21 = v20 + v9[7];
  if ((*(_BYTE *)(v21 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v21);
  v22 = v20 + v9[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB10AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageViewActionsModule(0) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B97C964;
  return sub_23BB1045C(a1, v5);
}

uint64_t sub_23BB10B0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB10B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DirectionsState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 24) + ((v2 + 16) & ~v2);
  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_23BB10BA8()
{
  return sub_23B996E1C(&qword_256A62528, qword_256A62530, (uint64_t)&unk_23BB985B0);
}

__n128 sub_23BB10BE0@<Q0>(unint64_t a1@<X0>, __int128 *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  _OWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64x2_t v30;
  int16x8_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 result;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v39 = a3;
  v38 = a1 & 1;
  v7 = sub_23BB89F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for QuickSendAppView(0);
  v13 = (_OWORD *)(a4 + v12[6]);
  *v13 = xmmword_23BB95730;
  v13[1] = xmmword_23BB94960;
  v14 = (uint64_t *)((char *)v13 + *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32));
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BDF3C28], v7);
  v15 = MEMORY[0x24260BF74](v11, 0.5, 0.5, 0.5, 1.0);
  v16 = MEMORY[0x24BDF3E18];
  v14[3] = MEMORY[0x24BDF3E48];
  v14[4] = v16;
  *v14 = v15;
  sub_23BB89C08();
  sub_23BB89C20();
  v17 = sub_23BB89C50();
  swift_release();
  v18 = (int *)type metadata accessor for CustomControlStyle(0);
  v19 = (char *)v14 + v18[6];
  v20 = *MEMORY[0x24BDF5098];
  v21 = sub_23BB8A334();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  v22 = (char *)v14 + v18[7];
  *(_QWORD *)v22 = sub_23B995E08;
  *((_QWORD *)v22 + 1) = 0;
  v22[40] = 1;
  v23 = (char *)v14 + v18[8];
  v24 = *MEMORY[0x24BDEB498];
  v25 = sub_23BB892F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v14[5] = v17;
  *((_BYTE *)v14 + v18[9]) = 3;
  *((_BYTE *)v14 + v18[10]) = 0;
  v26 = (char *)v14 + v18[11];
  *(_QWORD *)v26 = 0;
  v26[8] = 1;
  v27 = a4 + v12[7];
  type metadata accessor for MKCoordinateRegion(0);
  v40 = 0u;
  v41 = 0u;
  sub_23BB8A0C4();
  v28 = v44;
  v29 = v43;
  *(_OWORD *)v27 = v42;
  *(_OWORD *)(v27 + 16) = v29;
  *(_QWORD *)(v27 + 32) = v28;
  v30 = (uint64x2_t)vdupq_n_s64(a1);
  v31 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v30, (uint64x2_t)xmmword_23BB95750), (int32x4_t)vshlq_u64(v30, (uint64x2_t)xmmword_23BB95740));
  *(int8x8_t *)v31.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v31), (int8x8_t)0x1000100010001);
  *(_DWORD *)(a4 + 1) = vmovn_s16(v31).u32[0];
  v32 = a2[4];
  *(_OWORD *)(a4 + 88) = a2[5];
  v33 = a2[7];
  *(_OWORD *)(a4 + 104) = a2[6];
  *(_OWORD *)(a4 + 120) = v33;
  *(_OWORD *)(a4 + 136) = a2[8];
  v34 = *a2;
  *(_OWORD *)(a4 + 24) = a2[1];
  result = (__n128)a2[2];
  v36 = a2[3];
  *(__n128 *)(a4 + 40) = result;
  *(_BYTE *)a4 = v38;
  *(_OWORD *)(a4 + 56) = v36;
  *(_OWORD *)(a4 + 72) = v32;
  *(_OWORD *)(a4 + 8) = v34;
  v37 = a4 + v12[8];
  *(_BYTE *)v37 = (a1 | v39) & 1;
  *(_QWORD *)(v37 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for QuickSendAppView(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A62630);
}

uint64_t type metadata accessor for QuickSendAppView.Style(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A62590);
}

_QWORD *sub_23BB10ED4(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 32);
    v7 = (char *)a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = *(_OWORD *)((char *)a2 + v6 + 24);
    *(_OWORD *)((char *)a1 + v6 + 24) = v9;
    (**(void (***)(char *, uint64_t))(v9 - 8))((char *)a1 + v6, (uint64_t)a2 + v6);
    *((_QWORD *)v7 + 5) = *(_QWORD *)(v8 + 40);
    v10 = (int *)type metadata accessor for CustomControlStyle(0);
    v11 = v10[6];
    v12 = &v7[v11];
    v13 = v8 + v11;
    v14 = sub_23BB8A334();
    v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    v15(v12, v13, v14);
    v16 = v10[7];
    v17 = &v7[v16];
    v18 = v8 + v16;
    v19 = *(_BYTE *)(v8 + v16 + 40);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(v18 + 8);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v20;
      swift_retain();
    }
    else
    {
      v22 = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 24) = v22;
      (**(void (***)(char *))(v22 - 8))(v17);
    }
    v17[40] = v19;
    v23 = v10[8];
    v24 = &v7[v23];
    v25 = (const void *)(v8 + v23);
    v26 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23BB892F0();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    v7[v10[9]] = *(_BYTE *)(v8 + v10[9]);
    v7[v10[10]] = *(_BYTE *)(v8 + v10[10]);
    v28 = v10[11];
    v29 = &v7[v28];
    v30 = v8 + v28;
    v29[8] = *(_BYTE *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
  }
  return v3;
}

uint64_t sub_23BB110AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = a1 + *(int *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(v2);
  swift_release();
  v3 = (int *)type metadata accessor for CustomControlStyle(0);
  v4 = v2 + v3[6];
  v5 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + v3[7];
  if ((*(_BYTE *)(v6 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v6);
  v7 = v2 + v3[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v9 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  return result;
}

char *sub_23BB11180(char *a1, char *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v4 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v4;
  v5 = *(int *)(a3 + 32);
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = *(_OWORD *)&a2[v5 + 24];
  *(_OWORD *)&a1[v5 + 24] = v8;
  (**(void (***)(char *, char *))(v8 - 8))(&a1[v5], &a2[v5]);
  *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_23BB8A334();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain();
  v14(v11, v12, v13);
  v15 = v9[7];
  v16 = &v6[v15];
  v17 = &v7[v15];
  v18 = v7[v15 + 40];
  if ((v18 & 1) != 0)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v19;
    swift_retain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 24);
    *(_OWORD *)(v16 + 24) = v20;
    (**(void (***)(char *))(v20 - 8))(v16);
  }
  v16[40] = v18;
  v21 = v9[8];
  v22 = &v6[v21];
  v23 = &v7[v21];
  v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v6[v9[9]] = v7[v9[9]];
  v6[v9[10]] = v7[v9[10]];
  v26 = v9[11];
  v27 = &v6[v26];
  v28 = &v7[v26];
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  return a1;
}

_QWORD *sub_23BB1132C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v5), (_QWORD *)((char *)a2 + v5));
  *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
  swift_retain();
  swift_release();
  v8 = (int *)type metadata accessor for CustomControlStyle(0);
  v9 = v8[6];
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  if (a1 != a2)
  {
    v13 = v8[7];
    v14 = &v6[v13];
    v15 = &v7[v13];
    sub_23B989D60((uint64_t)&v6[v13], qword_256A59CC0);
    if ((v15[40] & 1) != 0)
    {
      v16 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      v14[40] = 1;
      swift_retain();
    }
    else
    {
      v17 = *((_QWORD *)v15 + 3);
      *((_QWORD *)v14 + 3) = v17;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      (**(void (***)(char *, char *))(v17 - 8))(v14, v15);
      v14[40] = 0;
    }
    v18 = v8[8];
    v19 = &v6[v18];
    v20 = &v7[v18];
    sub_23B989D9C((uint64_t)&v6[v18], type metadata accessor for CustomControlStyle.BackgroundSize);
    v21 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  v6[v8[9]] = v7[v8[9]];
  v6[v8[10]] = v7[v8[10]];
  v23 = v8[11];
  v24 = &v6[v23];
  v25 = &v7[v23];
  v26 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)v24 = v26;
  return a1;
}

_OWORD *sub_23BB11514(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = *(_OWORD *)((char *)a2 + v5 + 16);
  *(_OWORD *)v6 = *(_OWORD *)((char *)a2 + v5);
  *((_OWORD *)v6 + 1) = v8;
  v9 = *(_QWORD *)((char *)a2 + v5 + 40);
  *((_QWORD *)v6 + 4) = *(_QWORD *)((char *)a2 + v5 + 32);
  *((_QWORD *)v6 + 5) = v9;
  v10 = (int *)type metadata accessor for CustomControlStyle(0);
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[7];
  v16 = &v6[v15];
  v17 = &v7[v15];
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *(_OWORD *)(v16 + 25) = *(_OWORD *)(v17 + 25);
  v19 = v10[8];
  v20 = &v6[v19];
  v21 = &v7[v19];
  v22 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  v24 = v10[11];
  v25 = &v6[v24];
  v26 = &v7[v24];
  v25[8] = v26[8];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  return a1;
}

_OWORD *sub_23BB1166C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v6);
  v9 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v9;
  v10 = *((_QWORD *)v8 + 5);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = v10;
  swift_release();
  v11 = (int *)type metadata accessor for CustomControlStyle(0);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  if (a1 != a2)
  {
    v16 = v11[7];
    v17 = &v8[v16];
    v18 = &v7[v16];
    sub_23B989D60((uint64_t)&v7[v16], qword_256A59CC0);
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
    v20 = v11[8];
    v21 = &v7[v20];
    v22 = &v8[v20];
    sub_23B989D9C((uint64_t)&v7[v20], type metadata accessor for CustomControlStyle.BackgroundSize);
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  v25 = v11[11];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v26[8] = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  return a1;
}

uint64_t sub_23BB11800()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB1180C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23BB1184C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB11858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23BB1189C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CustomControlStyle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BB11918(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v28 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_QWORD *)(a1 + 8) = a2[1];
    v46 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v46;
    v47 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v47;
    v48 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v48;
    v6 = a2[18];
    v49 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v49;
    *(_QWORD *)(a1 + 144) = v6;
    v7 = a3[6];
    v8 = (_OWORD *)(a1 + v7);
    v9 = (uint64_t)a2 + v7;
    v10 = *(_OWORD *)((char *)a2 + v7 + 16);
    *v8 = *(_OWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
    v12 = (char *)v8 + v11;
    v13 = v9 + v11;
    v14 = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v12 + 24) = v14;
    v15 = v14;
    v16 = **(void (***)(char *, uint64_t, uint64_t))(v14 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v16(v12, v13, v15);
    *((_QWORD *)v12 + 5) = *(_QWORD *)(v13 + 40);
    v17 = (int *)type metadata accessor for CustomControlStyle(0);
    v18 = v17[6];
    v19 = &v12[v18];
    v20 = v13 + v18;
    v21 = sub_23BB8A334();
    v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_retain();
    v22(v19, v20, v21);
    v23 = v17[7];
    v24 = &v12[v23];
    v25 = v13 + v23;
    v26 = *(_BYTE *)(v13 + v23 + 40);
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(v25 + 8);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v27;
      swift_retain();
    }
    else
    {
      v29 = *(_OWORD *)(v25 + 24);
      *(_OWORD *)(v24 + 24) = v29;
      (**(void (***)(char *))(v29 - 8))(v24);
    }
    v24[40] = v26;
    v30 = v17[8];
    v31 = &v12[v30];
    v32 = (const void *)(v13 + v30);
    v33 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v34 = sub_23BB892F0();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    v12[v17[9]] = *(_BYTE *)(v13 + v17[9]);
    v12[v17[10]] = *(_BYTE *)(v13 + v17[10]);
    v35 = v17[11];
    v36 = &v12[v35];
    v37 = v13 + v35;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = *(_BYTE *)(v37 + 8);
    v38 = a3[7];
    v39 = a3[8];
    v40 = v4 + v38;
    v41 = (uint64_t)a2 + v38;
    v42 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v42;
    *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
    v43 = v4 + v39;
    v44 = (uint64_t)a2 + v39;
    *(_BYTE *)v43 = *(_BYTE *)v44;
    *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BB11C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = v4 + *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
  __swift_destroy_boxed_opaque_existential_1(v5);
  swift_release();
  v6 = (int *)type metadata accessor for CustomControlStyle(0);
  v7 = v5 + v6[6];
  v8 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[7];
  if ((*(_BYTE *)(v9 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = v5 + v6[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_23BB11D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v44 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v44;
  v45 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v45;
  v46 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v46;
  v5 = *(_QWORD *)(a2 + 144);
  v47 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v47;
  *(_QWORD *)(a1 + 144) = v5;
  v6 = a3[6];
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
  v11 = (char *)v7 + v10;
  v12 = v8 + v10;
  v13 = *(_OWORD *)(v12 + 24);
  *(_OWORD *)(v11 + 24) = v13;
  v14 = v13;
  v15 = **(void (***)(char *, uint64_t, uint64_t))(v13 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v11, v12, v14);
  *((_QWORD *)v11 + 5) = *(_QWORD *)(v12 + 40);
  v16 = (int *)type metadata accessor for CustomControlStyle(0);
  v17 = v16[6];
  v18 = &v11[v17];
  v19 = v12 + v17;
  v20 = sub_23BB8A334();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_retain();
  v21(v18, v19, v20);
  v22 = v16[7];
  v23 = &v11[v22];
  v24 = v12 + v22;
  v25 = *(_BYTE *)(v12 + v22 + 40);
  if ((v25 & 1) != 0)
  {
    v26 = *(_QWORD *)(v24 + 8);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v26;
    swift_retain();
  }
  else
  {
    v27 = *(_OWORD *)(v24 + 24);
    *(_OWORD *)(v23 + 24) = v27;
    (**(void (***)(char *))(v27 - 8))(v23);
  }
  v23[40] = v25;
  v28 = v16[8];
  v29 = &v11[v28];
  v30 = (const void *)(v12 + v28);
  v31 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = sub_23BB892F0();
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  v11[v16[9]] = *(_BYTE *)(v12 + v16[9]);
  v11[v16[10]] = *(_BYTE *)(v12 + v16[10]);
  v33 = v16[11];
  v34 = &v11[v33];
  v35 = v12 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = *(_BYTE *)(v35 + 8);
  v36 = a3[7];
  v37 = a3[8];
  v38 = a1 + v36;
  v39 = a2 + v36;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  v41 = a1 + v37;
  v42 = a2 + v37;
  *(_BYTE *)v41 = *(_BYTE *)v42;
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BB1202C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_retain();
  swift_release();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_retain();
  swift_release();
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = a2 + v15;
  *v16 = *(_QWORD *)(a2 + v15);
  v16[1] = *(_QWORD *)(a2 + v15 + 8);
  v16[2] = *(_QWORD *)(a2 + v15 + 16);
  v16[3] = *(_QWORD *)(a2 + v15 + 24);
  v18 = *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
  v19 = (_QWORD *)((char *)v16 + v18);
  v20 = (uint64_t *)(v17 + v18);
  __swift_assign_boxed_opaque_existential_1(v19, v20);
  v19[5] = v20[5];
  swift_retain();
  swift_release();
  v21 = (int *)type metadata accessor for CustomControlStyle(0);
  v22 = v21[6];
  v23 = (char *)v19 + v22;
  v24 = (char *)v20 + v22;
  v25 = sub_23BB8A334();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  if (a1 != a2)
  {
    v26 = v21[7];
    v27 = (char *)v19 + v26;
    v28 = (char *)v20 + v26;
    sub_23B989D60((uint64_t)v19 + v26, qword_256A59CC0);
    if ((v28[40] & 1) != 0)
    {
      v29 = *((_QWORD *)v28 + 1);
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v27[40] = 1;
      swift_retain();
    }
    else
    {
      v30 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 3) = v30;
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      (**(void (***)(char *, char *))(v30 - 8))(v27, v28);
      v27[40] = 0;
    }
    v31 = v21[8];
    v32 = (char *)v19 + v31;
    v33 = (char *)v20 + v31;
    sub_23B989D9C((uint64_t)v19 + v31, type metadata accessor for CustomControlStyle.BackgroundSize);
    v34 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  *((_BYTE *)v19 + v21[9]) = *((_BYTE *)v20 + v21[9]);
  *((_BYTE *)v19 + v21[10]) = *((_BYTE *)v20 + v21[10]);
  v36 = v21[11];
  v37 = (char *)v19 + v36;
  v38 = (char *)v20 + v36;
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  v40 = a3[7];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  v41[2] = v42[2];
  v41[3] = v42[3];
  v41[4] = v42[4];
  swift_retain();
  swift_release();
  v43 = a3[8];
  v44 = a1 + v43;
  v45 = a2 + v43;
  *(_BYTE *)v44 = *(_BYTE *)v45;
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BB123A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
  v11 = (char *)v7 + v10;
  v12 = v8 + v10;
  v13 = *(_OWORD *)(v8 + v10 + 16);
  *(_OWORD *)v11 = *(_OWORD *)(v8 + v10);
  *((_OWORD *)v11 + 1) = v13;
  v14 = *(_QWORD *)(v8 + v10 + 40);
  *((_QWORD *)v11 + 4) = *(_QWORD *)(v8 + v10 + 32);
  *((_QWORD *)v11 + 5) = v14;
  v15 = (int *)type metadata accessor for CustomControlStyle(0);
  v16 = v15[6];
  v17 = &v11[v16];
  v18 = v12 + v16;
  v19 = sub_23BB8A334();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v15[7];
  v21 = &v11[v20];
  v22 = (_OWORD *)(v12 + v20);
  v23 = v22[1];
  *(_OWORD *)v21 = *v22;
  *((_OWORD *)v21 + 1) = v23;
  *(_OWORD *)(v21 + 25) = *(_OWORD *)((char *)v22 + 25);
  v24 = v15[8];
  v25 = &v11[v24];
  v26 = (const void *)(v12 + v24);
  v27 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_23BB892F0();
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  v11[v15[9]] = *(_BYTE *)(v12 + v15[9]);
  v11[v15[10]] = *(_BYTE *)(v12 + v15[10]);
  v29 = v15[11];
  v30 = &v11[v29];
  v31 = v12 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = *(_BYTE *)(v31 + 8);
  v32 = a3[7];
  v33 = a3[8];
  v34 = a1 + v32;
  v35 = a2 + v32;
  v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
  *(_OWORD *)(a1 + v33) = *(_OWORD *)(a2 + v33);
  return a1;
}

uint64_t sub_23BB1259C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  v6 = a3[6];
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
  v11 = (uint64_t)v7 + v10;
  v12 = v8 + v10;
  __swift_destroy_boxed_opaque_existential_1(v11);
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  v14 = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = v14;
  swift_release();
  v15 = (int *)type metadata accessor for CustomControlStyle(0);
  v16 = v15[6];
  v17 = v11 + v16;
  v18 = v12 + v16;
  v19 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  if (a1 != a2)
  {
    v20 = v15[7];
    v21 = (_OWORD *)(v12 + v20);
    v22 = (_OWORD *)(v11 + v20);
    sub_23B989D60(v11 + v20, qword_256A59CC0);
    v23 = v21[1];
    *v22 = *v21;
    v22[1] = v23;
    *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v21 + 25);
    v24 = v15[8];
    v25 = (void *)(v11 + v24);
    v26 = (const void *)(v12 + v24);
    sub_23B989D9C(v11 + v24, type metadata accessor for CustomControlStyle.BackgroundSize);
    v27 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
  }
  *(_BYTE *)(v11 + v15[9]) = *(_BYTE *)(v12 + v15[9]);
  *(_BYTE *)(v11 + v15[10]) = *(_BYTE *)(v12 + v15[10]);
  v29 = v15[11];
  v30 = v11 + v29;
  v31 = v12 + v29;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  swift_release();
  v36 = a3[8];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_BYTE *)v37 = *(_BYTE *)v38;
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  swift_release();
  return a1;
}

uint64_t sub_23BB12850()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB1285C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for QuickSendAppView.Style(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23BB128D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB128E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for QuickSendAppView.Style(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23BB12958()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QuickSendAppView.Style(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BB129E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB129F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  _QWORD *v86;
  _BYTE v88[12];
  int v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  _BYTE *v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;

  v2 = v1;
  v105 = a1;
  v3 = type metadata accessor for QuickSendAppView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v98 = *(_QWORD *)(v3 - 8);
  v99 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v108 = &v88[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = type metadata accessor for QuickSendActionsModule(0);
  MEMORY[0x24BDAC7A8](v96, v7);
  v9 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23BB88F9C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = &v88[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = &v88[-v17];
  v97 = type metadata accessor for QuickSendAppMapView();
  MEMORY[0x24BDAC7A8](v97, v19);
  v106 = &v88[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62678);
  MEMORY[0x24BDAC7A8](v100, v21);
  v107 = &v88[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62680);
  MEMORY[0x24BDAC7A8](v101, v23);
  v104 = &v88[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62688);
  MEMORY[0x24BDAC7A8](v102, v25);
  v103 = &v88[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v95 = v3;
  v27 = v2 + *(int *)(v3 + 28);
  v28 = *(_QWORD *)(v27 + 32);
  v29 = *(_OWORD *)(v27 + 16);
  v109 = *(_OWORD *)v27;
  v110 = v29;
  v111 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62690);
  sub_23BB8A0E8();
  v93 = (_BYTE *)*((_QWORD *)&v122 + 1);
  v94 = v122;
  v92 = v123;
  v30 = v124;
  v31 = v2 + *(int *)(v3 + 32);
  v32 = *(_QWORD *)(v31 + 8);
  LOBYTE(v109) = *(_BYTE *)v31;
  *((_QWORD *)&v109 + 1) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62698);
  sub_23BB8A0E8();
  v90 = *((_QWORD *)&v122 + 1);
  v91 = v122;
  v89 = v123;
  sub_23BB88F84();
  sub_23BB88F48();
  v33 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
  v33(v14, v10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v14, v18, v10);
  v34 = v106;
  sub_23BB8A0C4();
  v33(v18, v10);
  v35 = v97;
  v36 = &v34[*(int *)(v97 + 20)];
  v37 = (uint64_t)v93;
  *(_QWORD *)v36 = v94;
  *((_QWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 1) = v92;
  *((_OWORD *)v36 + 2) = v30;
  v38 = &v34[*(int *)(v35 + 24)];
  v39 = v90;
  *(_QWORD *)v38 = v91;
  *((_QWORD *)v38 + 1) = v39;
  v38[16] = v89;
  v94 = sub_23BB8983C();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A626A0);
  v93 = &v107[*(int *)(v40 + 36)];
  v41 = *(_QWORD *)(v31 + 8);
  LOBYTE(v122) = *(_BYTE *)v31;
  *((_QWORD *)&v122 + 1) = v41;
  sub_23BB8A0D0();
  LOBYTE(v34) = v109;
  v42 = *(_BYTE *)(v2 + 1);
  LODWORD(v92) = *(unsigned __int8 *)(v2 + 2);
  LOBYTE(v31) = *(_BYTE *)(v2 + 3);
  v43 = v108;
  sub_23B989CE8(v2, (uint64_t)v108, type metadata accessor for QuickSendAppView);
  v44 = *(unsigned __int8 *)(v98 + 80);
  v45 = (v44 + 16) & ~v44;
  v97 = v44 | 7;
  v98 = v45 + v99;
  v46 = swift_allocObject();
  v99 = v45;
  sub_23B989CA4((uint64_t)v43, v46 + v45, type metadata accessor for QuickSendAppView);
  v47 = *(_OWORD *)(v2 + 88);
  v48 = *(_OWORD *)(v2 + 120);
  v128 = *(_OWORD *)(v2 + 104);
  v129 = v48;
  v130 = *(_OWORD *)(v2 + 136);
  v49 = *(_OWORD *)(v2 + 24);
  v50 = *(_OWORD *)(v2 + 56);
  v124 = *(_OWORD *)(v2 + 40);
  v125 = v50;
  v126 = *(_OWORD *)(v2 + 72);
  v127 = v47;
  v122 = *(_OWORD *)(v2 + 8);
  v123 = v49;
  *v9 = (_BYTE)v34;
  v9[1] = v42;
  v9[2] = v92;
  v9[3] = v31;
  *((_QWORD *)v9 + 1) = sub_23BB13E2C;
  *((_QWORD *)v9 + 2) = v46;
  *(_OWORD *)(v9 + 104) = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v9 + 152) = *(_OWORD *)(v2 + 136);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v2 + 72);
  v51 = &v9[*(int *)(v96 + 40)];
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v2 + 8);
  sub_23B9AFAB8((uint64_t)&v122);
  sub_23BA07C38(v51);
  v52 = (uint64_t)v93;
  sub_23B989CE8((uint64_t)v9, (uint64_t)v93, type metadata accessor for QuickSendActionsModule);
  *(_WORD *)(v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A626A8) + 36)) = 256;
  sub_23B989D9C((uint64_t)v9, type metadata accessor for QuickSendActionsModule);
  v53 = sub_23BB89368();
  LOBYTE(v9) = MEMORY[0x24260BB48]((2 * v53));
  v54 = sub_23BB894DC();
  v55 = v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A626B0) + 36);
  *(_QWORD *)v55 = v54;
  *(_QWORD *)(v55 + 8) = 0;
  *(_BYTE *)(v55 + 16) = 1;
  *(_BYTE *)(v55 + 17) = (_BYTE)v9;
  *(_QWORD *)(v55 + 24) = v94;
  v56 = v107;
  sub_23B989CA4((uint64_t)v106, (uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for QuickSendAppMapView);
  v57 = sub_23BB8983C();
  v58 = &v56[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A626B8) + 36)];
  v59 = v56;
  *(_QWORD *)v58 = sub_23BB8977C();
  *((_QWORD *)v58 + 1) = 0;
  v58[16] = 1;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A626C0);
  sub_23BB13228((uint64_t)&v58[*(int *)(v60 + 44)]);
  v61 = sub_23BB89368();
  LOBYTE(v56) = MEMORY[0x24260BB48]((2 * v61));
  v62 = sub_23BB894DC();
  v63 = &v58[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A626C8) + 36)];
  v64 = (uint64_t)v59;
  *(_QWORD *)v63 = v62;
  *((_QWORD *)v63 + 1) = 0;
  v63[16] = 1;
  v63[17] = (_BYTE)v56;
  *((_QWORD *)v63 + 3) = v57;
  sub_23BB89B9C();
  sub_23BB892A8();
  *(_QWORD *)&v109 = v65;
  *((_QWORD *)&v109 + 1) = v66;
  *(_QWORD *)&v110 = v67;
  *((_QWORD *)&v110 + 1) = v68;
  LOBYTE(v111) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A626D0);
  sub_23BB89A4C();
  sub_23BB89BB4();
  sub_23BB892A8();
  v117 = v69;
  v118 = v70;
  v119 = v71;
  v120 = v72;
  v121 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A626D8);
  sub_23BB89A4C();
  sub_23BB89BC0();
  sub_23BB892A8();
  v112 = v73;
  v113 = v74;
  v114 = v75;
  v115 = v76;
  v116 = 0;
  sub_23BB89A4C();
  v77 = sub_23BB894D0();
  LOBYTE(v62) = sub_23BB89BA8();
  v78 = sub_23BB89BD8();
  sub_23BB89BD8();
  if (sub_23BB89BD8() != v62)
    v78 = sub_23BB89BD8();
  v79 = (uint64_t)v59;
  v80 = v104;
  sub_23B989EFC(v79, (uint64_t)v104, &qword_256A62678);
  v81 = &v80[*(int *)(v101 + 36)];
  *(_QWORD *)v81 = v77;
  v81[8] = v78;
  sub_23B989D60(v64, &qword_256A62678);
  v82 = v2;
  v83 = v108;
  sub_23B989CE8(v82, (uint64_t)v108, type metadata accessor for QuickSendAppView);
  v84 = swift_allocObject();
  sub_23B989CA4((uint64_t)v83, v84 + v99, type metadata accessor for QuickSendAppView);
  v85 = v103;
  sub_23B989EFC((uint64_t)v80, (uint64_t)v103, &qword_256A62680);
  v86 = &v85[*(int *)(v102 + 36)];
  *v86 = 0;
  v86[1] = 0;
  v86[2] = sub_23BB13FEC;
  v86[3] = v84;
  sub_23B989D60((uint64_t)v80, &qword_256A62680);
  return sub_23B990D24((uint64_t)v85, v105, &qword_256A62688);
}

double sub_23BB131C4()
{
  double v1;

  type metadata accessor for QuickSendAppView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62690);
  sub_23BB8A0D0();
  return v1;
}

uint64_t sub_23BB13228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A626E0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v25[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A626E8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = &v25[-v16];
  sub_23BB13480((uint64_t)&v25[-v16]);
  v25[15] = 0;
  sub_23BB8A0C4();
  v18 = v25[16];
  v19 = v26;
  sub_23BB13480((uint64_t)v13);
  sub_23B989EFC((uint64_t)v13, (uint64_t)v5, &qword_256A626E8);
  *(_QWORD *)&v5[*(int *)(v2 + 36)] = 0;
  sub_23B989D60((uint64_t)v13, &qword_256A626E8);
  sub_23B990D24((uint64_t)v5, (uint64_t)v9, &qword_256A626E0);
  sub_23B989EFC((uint64_t)v17, (uint64_t)v13, &qword_256A626E8);
  sub_23B989EFC((uint64_t)v9, (uint64_t)v5, &qword_256A626E0);
  sub_23B989EFC((uint64_t)v13, a1, &qword_256A626E8);
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A626F0);
  v21 = a1 + v20[12];
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  v22 = a1 + v20[16];
  *(_QWORD *)v22 = sub_23B994A30;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 0;
  *(_BYTE *)(v22 + 24) = v18;
  *(_QWORD *)(v22 + 32) = v19;
  v23 = a1 + v20[20];
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  sub_23B989EFC((uint64_t)v5, a1 + v20[24], &qword_256A626E0);
  sub_23B996364((uint64_t)sub_23B994A30, 0, 0);
  swift_retain();
  sub_23B989D60((uint64_t)v9, &qword_256A626E0);
  sub_23B989D60((uint64_t)v17, &qword_256A626E8);
  sub_23B989D60((uint64_t)v5, &qword_256A626E0);
  sub_23B9963A4((uint64_t)sub_23B994A30, 0, 0);
  swift_release();
  return sub_23B989D60((uint64_t)v13, &qword_256A626E8);
}

uint64_t sub_23BB13480@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t result;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;

  v2 = v1;
  v92 = a1;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608D8);
  MEMORY[0x24BDAC7A8](v80, v3);
  v83 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v79 = (char *)&v72 - v7;
  v8 = sub_23BB894A0();
  v91 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v87 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v86 = (char *)&v72 - v13;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608E0);
  MEMORY[0x24BDAC7A8](v82, v14);
  v78 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v81 = (uint64_t)&v72 - v18;
  v90 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v90, v19);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for QuickSendAppView.Style(0);
  MEMORY[0x24BDAC7A8](v84, v22);
  v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for QuickSendAppView(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  MEMORY[0x24BDAC7A8](v25, v28);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A626F8);
  v85 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88, v29);
  v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62700);
  v76 = *(_QWORD *)(v32 - 8);
  v77 = v32;
  MEMORY[0x24BDAC7A8](v32, v33);
  v89 = (char *)&v72 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62708);
  v40 = MEMORY[0x24BDAC7A8](v35, v36);
  if ((*v2 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v39 + 56))(v92, 1, 1, v40);
  v73 = (char *)&v72 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v39;
  v75 = v37;
  sub_23B989CE8((uint64_t)v2, (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for QuickSendAppView);
  v42 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v43 = swift_allocObject();
  v44 = sub_23B989CA4((uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + v42, type metadata accessor for QuickSendAppView);
  MEMORY[0x24BDAC7A8](v44, v45);
  *(&v72 - 2) = (uint64_t)v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62710);
  sub_23BB1404C();
  sub_23BB8A10C();
  sub_23B989CE8((uint64_t)&v2[*(int *)(v25 + 24)], (uint64_t)v24, type metadata accessor for QuickSendAppView.Style);
  v46 = (uint64_t)&v24[*(int *)(v84 + 32)];
  sub_23B989CE8(v46, (uint64_t)v21, type metadata accessor for CustomControlStyle);
  v47 = sub_23B996E1C(&qword_256A62730, &qword_256A626F8, MEMORY[0x24BDF43B0]);
  v48 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
  v49 = v88;
  sub_23BB89D94();
  sub_23B989D9C((uint64_t)v21, type metadata accessor for CustomButtonStyle);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v31, v49);
  sub_23B989D9C(v46, type metadata accessor for CustomControlStyle);
  v50 = *(void (**)(char *, _QWORD, uint64_t))(v91 + 104);
  v51 = v86;
  v50(v86, *MEMORY[0x24BDECF10], v8);
  v52 = v87;
  v50(v87, *MEMORY[0x24BDECEC0], v8);
  sub_23B97D0C8((unint64_t *)&qword_256A60910, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  result = sub_23BB8A754();
  if ((result & 1) != 0)
  {
    v54 = v79;
    v53 = v80;
    v55 = &v79[*(int *)(v80 + 48)];
    v85 = v48;
    v56 = v91;
    v57 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
    v57(v79, v51, v8);
    v57(v55, v52, v8);
    v58 = *(int *)(v53 + 48);
    v87 = (char *)v47;
    v59 = v83;
    v60 = &v83[v58];
    v61 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
    v61(v83, v54, v8);
    v61(v60, v55, v8);
    v62 = (uint64_t)v78;
    v57(v78, v59, v8);
    v63 = *(void (**)(char *, uint64_t))(v56 + 8);
    v63(v60, v8);
    v64 = &v59[*(int *)(v53 + 48)];
    v57(v59, v54, v8);
    v57(v64, v55, v8);
    v57((char *)(v62 + *(int *)(v82 + 36)), v64, v8);
    v63(v59, v8);
    v65 = v81;
    sub_23B990D24(v62, v81, &qword_256A608E0);
    v93 = v88;
    v94 = v90;
    v95 = v87;
    v96 = v85;
    swift_getOpaqueTypeConformance2();
    sub_23B996E1C(&qword_256A60920, &qword_256A608E0, MEMORY[0x24BEE08F8]);
    v66 = v73;
    v67 = v77;
    v68 = v89;
    sub_23BB89DF4();
    sub_23B989D60(v65, &qword_256A608E0);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v68, v67);
    v69 = v74;
    v70 = v92;
    v71 = v75;
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v92, v66, v75);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v70, 0, 1, v71);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BB13B60()
{
  type metadata accessor for QuickSendAppView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62698);
  return sub_23BB8A0DC();
}

uint64_t sub_23BB13BC4()
{
  type metadata accessor for QuickSendAppView(0);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62698);
  sub_23BB8A0D0();
  sub_23BB8A0DC();
  return swift_release();
}

uint64_t sub_23BB13C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  v2 = sub_23BB8A2F8();
  v4 = v3;
  sub_23BB13D1C((uint64_t)v15);
  v5 = v15[0];
  v6 = v15[1];
  v7 = v15[2];
  v8 = v15[3];
  type metadata accessor for QuickSendAppView(0);
  v9 = sub_23BB89BA8();
  result = sub_23BB892A8();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = 0;
  return result;
}

uint64_t sub_23BB13D1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t result;
  double v6;
  char v7;

  v2 = sub_23BB8A07C();
  type metadata accessor for QuickSendAppView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62698);
  sub_23BB8A0D0();
  if (v7)
    v3 = 0.0;
  else
    v3 = 1.0;
  v4 = sub_23BB8A07C();
  result = sub_23BB8A0D0();
  if (v7)
    v6 = 1.0;
  else
    v6 = 0.0;
  *(_QWORD *)a1 = v2;
  *(double *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 24) = v6;
  return result;
}

double sub_23BB13E2C()
{
  type metadata accessor for QuickSendAppView(0);
  return sub_23BB131C4();
}

uint64_t objectdestroyTm_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for QuickSendAppView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = *(int *)(v1 + 24);
  v4 = v0 + ((v2 + 16) & ~v2) + v3 + *(int *)(type metadata accessor for QuickSendAppView.Style(0) + 32);
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  v5 = (int *)type metadata accessor for CustomControlStyle(0);
  v6 = v4 + v5[6];
  v7 = sub_23BB8A334();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[7];
  if ((*(_BYTE *)(v8 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v8);
  v9 = v4 + v5[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BB13FEC()
{
  return sub_23BB14008((uint64_t (*)(uint64_t))sub_23BB13B60);
}

uint64_t sub_23BB13FFC()
{
  return sub_23BB14008((uint64_t (*)(uint64_t))sub_23BB13BC4);
}

uint64_t sub_23BB14008(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendAppView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_23BB14044@<X0>(uint64_t a1@<X8>)
{
  return sub_23BB13C64(a1);
}

unint64_t sub_23BB1404C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62718;
  if (!qword_256A62718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62710);
    v2[0] = sub_23B996E1C(&qword_256A62720, &qword_256A62728, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62718);
  }
  return result;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for QuickSendAppViewState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[5])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for QuickSendAppViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickSendAppViewState()
{
  return &type metadata for QuickSendAppViewState;
}

unint64_t sub_23BB14190()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62738;
  if (!qword_256A62738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62688);
    v2[0] = sub_23BB141FC();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62738);
  }
  return result;
}

unint64_t sub_23BB141FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62740;
  if (!qword_256A62740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62680);
    v2[0] = sub_23BB142B8(&qword_256A62748, &qword_256A62678, sub_23BB14280);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62740);
  }
  return result;
}

uint64_t sub_23BB14280()
{
  return sub_23BB142B8(&qword_256A62750, &qword_256A626D8, sub_23BB1429C);
}

uint64_t sub_23BB1429C()
{
  return sub_23BB142B8(&qword_256A62758, &qword_256A626D0, (uint64_t (*)(void))sub_23BB1433C);
}

uint64_t sub_23BB142B8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23B97D0C8((unint64_t *)&qword_256A5AF28, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23BB1433C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62760;
  if (!qword_256A62760)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A626B8);
    v2[0] = sub_23BB143C0();
    v2[1] = sub_23B996E1C(&qword_256A62780, &qword_256A626C8, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62760);
  }
  return result;
}

unint64_t sub_23BB143C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A62768;
  if (!qword_256A62768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A626A0);
    v2[0] = sub_23B97D0C8(&qword_256A62770, (uint64_t (*)(uint64_t))type metadata accessor for QuickSendAppMapView, (uint64_t)&unk_23BB9260C);
    v2[1] = sub_23B996E1C(&qword_256A62778, &qword_256A626B0, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A62768);
  }
  return result;
}

void sub_23BB1445C()
{
  __asm { BR              X10 }
}

uint64_t sub_23BB1448C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58CE8 != -1)
    swift_once();
  v0 = (void *)qword_256A5FB40;
  if (qword_256A5FB40)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

void sub_23BB147BC()
{
  qword_256A73DC0 = (uint64_t)&unk_250CA9AA0;
}

BOOL static OfferLocationDuration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t OfferLocationDuration.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t OfferLocationDuration.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

unint64_t sub_23BB14854()
{
  unint64_t result;

  result = qword_256A62788;
  if (!qword_256A62788)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for OfferLocationDuration, &type metadata for OfferLocationDuration);
    atomic_store(result, (unint64_t *)&qword_256A62788);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OfferLocationDuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BB148E4 + 4 * byte_23BB95865[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BB14918 + 4 * asc_23BB95860[v4]))();
}

uint64_t sub_23BB14918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB14920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB14928);
  return result;
}

uint64_t sub_23BB14934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB1493CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BB14940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB14948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfferLocationDuration()
{
  return &type metadata for OfferLocationDuration;
}

uint64_t sub_23BB14964@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_23BB149B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[6];
  v1 = v0[7];
  if (*((_BYTE *)v0 + 112) == 2)
    v3 = 0x74736575716572;
  else
    v3 = 0x6572616873;
  if (*((_BYTE *)v0 + 112) == 2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE500000000000000;
  if (*((_BYTE *)v0 + 96))
    v5 = 0x676E696F6774756FLL;
  else
    v5 = 0x676E696D6F636E69;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23BB95910;
  v7 = *v0;
  v8 = v0[1];
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v6 + 48) = v3;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = v5;
  *(_QWORD *)(v6 + 72) = 0xE800000000000000;
  *(_QWORD *)(v6 + 80) = v2;
  *(_QWORD *)(v6 + 88) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
  sub_23BB16F34();
  v9 = sub_23BB8A730();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23BB14AEC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, 0, 0);

  v4 = sub_23BB8A7B4();
  return v4;
}

BOOL static CompositeAppViewState.TranscriptInfo.Direction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double CompositeAppViewState.TranscriptInfo.singleRecipient.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v3 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(v7 + 32);
    v10 = *(_QWORD *)(v7 + 56);
    v11 = *(unsigned __int8 *)(v7 + 64);
    v12 = *(_QWORD *)(v7 + 72);
    v13 = *(void **)(v7 + 80);
    v35 = *(_OWORD *)(v7 + 40);
    if (v8 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v13;
    }
    else
    {
      v21 = qword_256A58E00;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = v13;
      if (v21 != -1)
        swift_once();
      v23 = sub_23BB891C4();
      __swift_project_value_buffer(v23, (uint64_t)qword_256A73E80);
      sub_23BB15680(v1, (uint64_t)v6);
      v24 = sub_23BB891AC();
      v25 = sub_23BB8ABD4();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        v37 = v32;
        *(_DWORD *)v26 = 136315394;
        v34 = v11;
        v36 = sub_23BB7B69C(0x6552656C676E6973, 0xEF746E6569706963, &v37);
        v33 = v9;
        sub_23BB8ACB8();
        *(_WORD *)(v26 + 12) = 2048;
        v27 = *((_QWORD *)v6 + 11);
        v31 = v24;
        v28 = *(_QWORD *)(v27 + 16);
        sub_23B989D9C((uint64_t)v6, type metadata accessor for CompositeAppViewState.TranscriptInfo);
        v36 = v28;
        v9 = v33;
        v11 = v34;
        sub_23BB8ACB8();
        v29 = v31;
        _os_log_impl(&dword_23B979000, v31, v25, "%s Multiple (%ld) friends configured, expecting only 1.", (uint8_t *)v26, 0x16u);
        v30 = v32;
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v30, -1, -1);
        MEMORY[0x24260D9B4](v26, -1, -1);

      }
      else
      {
        sub_23B989D9C((uint64_t)v6, type metadata accessor for CompositeAppViewState.TranscriptInfo);

      }
    }
    *(_QWORD *)a1 = v9;
    result = *(double *)&v35;
    *(_OWORD *)(a1 + 8) = v35;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v15 = sub_23BB891C4();
    __swift_project_value_buffer(v15, (uint64_t)qword_256A73E80);
    v16 = sub_23BB891AC();
    v17 = sub_23BB8ABD4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v37 = v19;
      *(_DWORD *)v18 = 136315138;
      v36 = sub_23BB7B69C(0x6552656C676E6973, 0xEF746E6569706963, &v37);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v16, v17, "%s No friend configured.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v19, -1, -1);
      MEMORY[0x24260D9B4](v18, -1, -1);
    }

    *(_QWORD *)(a1 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t type metadata accessor for CompositeAppViewState.TranscriptInfo(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A628C0);
}

BOOL sub_23BB15004(char **a1, char *a2)
{
  void **v2;
  void **v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  char *v18;
  objc_super v21;
  objc_super v22;
  objc_super v23;

  v3 = v2;
  v5 = (char *)*v2;
  v6 = OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  v7 = *(_QWORD *)((char *)*v2 + OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue);
  v8 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v7;
  v23.receiver = v9;
  v23.super_class = v8;
  v10 = v5;
  v11 = (char *)objc_msgSendSuper2(&v23, sel_init);
  v12 = *(_QWORD *)&v11[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];

  v13 = *(_QWORD *)&a2[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue];
  v14 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v14[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v13 & v12;
  v22.receiver = v14;
  v22.super_class = v8;
  v15 = (char *)objc_msgSendSuper2(&v22, sel_init);

  v16 = sub_23BB8AC70();
  if ((v16 & 1) == 0)
  {

    v17 = *(_QWORD *)&v5[v6];
    v15 = a2;

    v18 = (char *)objc_allocWithZone(v8);
    *(_QWORD *)&v18[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = v17 | v13;
    v21.receiver = v18;
    v21.super_class = v8;
    *v3 = objc_msgSendSuper2(&v21, sel_init);
  }
  *a1 = v15;
  return (v16 & 1) == 0;
}

FindMyUICore::CompositeAppViewState::DetailsInfo::Options __swiftcall CompositeAppViewState.DetailsInfo.Options.init(rawValue:)(FindMyUICore::CompositeAppViewState::DetailsInfo::Options rawValue)
{
  FindMyUICore::CompositeAppViewState::DetailsInfo::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

_QWORD *CompositeAppViewState.DetailsInfo.init(options:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t CompositeAppViewState.TranscriptInfo.transcriptID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompositeAppViewState.TranscriptInfo.payloadID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id CompositeAppViewState.TranscriptInfo.from.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  id v6;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_BYTE *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v6 = *(id *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t CompositeAppViewState.TranscriptInfo.to.getter()
{
  return swift_bridgeObjectRetain();
}

void CompositeAppViewState.TranscriptInfo.direction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 96);
}

uint64_t CompositeAppViewState.TranscriptInfo.isPending.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

void CompositeAppViewState.TranscriptInfo.kind.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 104);
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t CompositeAppViewState.TranscriptInfo.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 44);
  return sub_23BA2F0B0(v3, a1);
}

void *CompositeAppViewState.TranscriptInfo.initialLocation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 48));
  v2 = v1;
  return v1;
}

uint64_t CompositeAppViewState.TranscriptInfo.canShowExpensiveUIAndControls.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CompositeAppViewState.TranscriptInfo(0) + 52));
}

uint64_t CompositeAppViewState.TranscriptInfo.init(transcriptID:payloadID:from:to:direction:isPending:kind:timestamp:initialLocation:canShowExpensiveUIAndControls:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  __int16 v19;
  int *v20;
  uint64_t result;

  v14 = *(_QWORD *)(a5 + 16);
  v15 = *(_QWORD *)(a5 + 24);
  v16 = *(_BYTE *)(a5 + 32);
  v17 = *a7;
  v18 = *a10;
  v19 = *((_WORD *)a10 + 4);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)a5;
  *(_QWORD *)(a9 + 48) = v14;
  *(_QWORD *)(a9 + 56) = v15;
  *(_BYTE *)(a9 + 64) = v16;
  *(_OWORD *)(a9 + 72) = *(_OWORD *)(a5 + 40);
  *(_QWORD *)(a9 + 88) = a6;
  *(_BYTE *)(a9 + 96) = v17;
  *(_BYTE *)(a9 + 97) = a8;
  *(_QWORD *)(a9 + 104) = v18;
  *(_WORD *)(a9 + 112) = v19;
  v20 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  result = sub_23BA31BCC(a11, a9 + v20[11]);
  *(_QWORD *)(a9 + v20[12]) = a12;
  *(_BYTE *)(a9 + v20[13]) = a13;
  return result;
}

uint64_t CompositeAppViewState.TranscriptInfo.Direction.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t CompositeAppViewState.TranscriptInfo.Direction.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

void CompositeAppViewState.DetailsInfo.options.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t CompositeAppViewState.DetailsInfo.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void static CompositeAppViewState.DetailsInfo.Options.showLocationDetails.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static CompositeAppViewState.DetailsInfo.Options.showShareLocationButton.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static CompositeAppViewState.DetailsInfo.Options.showRequestLocationButton.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static CompositeAppViewState.DetailsInfo.Options.showLocateButtons.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static CompositeAppViewState.DetailsInfo.Options.presentFullScreenWhenTapped.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static CompositeAppViewState.DetailsInfo.Options.punchOutToFindMyWhenTapped.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static CompositeAppViewState.DetailsInfo.Options.useCompactInterface.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void sub_23BB1544C()
{
  qword_256A62790 = 31;
}

uint64_t static CompositeAppViewState.DetailsInfo.Options.default.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_256A58D90 != -1)
    result = swift_once();
  *a1 = qword_256A62790;
  return result;
}

_QWORD *sub_23BB154EC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23BB154F8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23BB15500@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23BB15514@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23BB15528@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23BB1553C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23BB1556C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23BB15598@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23BB155BC(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23BB155D0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23BB155E4(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23BB155F8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23BB1560C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23BB15620(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23BB15634(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23BB15648()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_23BB15658(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_23BB1566C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_23BB15680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23BB156C8()
{
  unint64_t result;

  result = qword_256A62798;
  if (!qword_256A62798)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for CompositeAppViewState.TranscriptInfo.Direction, &type metadata for CompositeAppViewState.TranscriptInfo.Direction);
    atomic_store(result, (unint64_t *)&qword_256A62798);
  }
  return result;
}

unint64_t sub_23BB15710()
{
  unint64_t result;

  result = qword_256A627A0;
  if (!qword_256A627A0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for CompositeAppViewState.DetailsInfo.Options, &type metadata for CompositeAppViewState.DetailsInfo.Options);
    atomic_store(result, (unint64_t *)&qword_256A627A0);
  }
  return result;
}

unint64_t sub_23BB15758()
{
  unint64_t result;

  result = qword_256A627A8;
  if (!qword_256A627A8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for CompositeAppViewState.DetailsInfo.Options, &type metadata for CompositeAppViewState.DetailsInfo.Options);
    atomic_store(result, (unint64_t *)&qword_256A627A8);
  }
  return result;
}

unint64_t sub_23BB157A0()
{
  unint64_t result;

  result = qword_256A627B0;
  if (!qword_256A627B0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for CompositeAppViewState.DetailsInfo.Options, &type metadata for CompositeAppViewState.DetailsInfo.Options);
    atomic_store(result, (unint64_t *)&qword_256A627B0);
  }
  return result;
}

unint64_t sub_23BB157E8()
{
  unint64_t result;

  result = qword_256A627B8;
  if (!qword_256A627B8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for CompositeAppViewState.DetailsInfo.Options, &type metadata for CompositeAppViewState.DetailsInfo.Options);
    atomic_store(result, (unint64_t *)&qword_256A627B8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CompositeAppViewState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void *v24;
  uint64_t v25;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    v24 = (void *)a2[10];
    a1[9] = a2[9];
    a1[10] = v24;
    a1[11] = a2[11];
    *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
    a1[13] = a2[13];
    *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
    v11 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v12 = *(int *)(v11 + 44);
    v25 = v11;
    __dst = (char *)a1 + v12;
    v13 = (char *)a2 + v12;
    v14 = sub_23BB88984();
    v22 = *(_QWORD *)(v14 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v24;
    swift_bridgeObjectRetain();
    if (v23(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v14);
    }
    v18 = *(int *)(v25 + 48);
    v19 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)a1 + v18) = v19;
    *((_BYTE *)a1 + *(int *)(v25 + 52)) = *((_BYTE *)a2 + *(int *)(v25 + 52));
    v20 = v19;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void destroy for CompositeAppViewState(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v2 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v3 = a1 + *(int *)(v2 + 44);
    v4 = sub_23BB88984();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  }
}

_QWORD *initializeWithCopy for CompositeAppViewState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v24;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
    v10 = (void *)a2[10];
    a1[9] = a2[9];
    a1[10] = v10;
    a1[11] = a2[11];
    *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
    a1[13] = a2[13];
    *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
    v11 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v12 = *(int *)(v11 + 44);
    __dst = (char *)a1 + v12;
    v24 = v11;
    v21 = (char *)a2 + v12;
    v13 = sub_23BB88984();
    v20 = *(_QWORD *)(v13 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v10;
    swift_bridgeObjectRetain();
    if (v22(v21, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v21, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v13);
    }
    v16 = *(int *)(v24 + 48);
    v17 = *(void **)((char *)a2 + v16);
    *(_QWORD *)((char *)a1 + v16) = v17;
    *((_BYTE *)a1 + *(int *)(v24 + 52)) = *((_BYTE *)a2 + *(int *)(v24 + 52));
    v18 = v17;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithCopy for CompositeAppViewState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  char *__dst;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for CompositeAppViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
      a1[9] = a2[9];
      v19 = (void *)a2[10];
      a1[10] = v19;
      a1[11] = a2[11];
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
      v6 = a2[13];
      *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
      a1[13] = v6;
      v7 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      v8 = *(int *)(v7 + 44);
      __dst = (char *)a1 + v8;
      v21 = v7;
      v9 = (char *)a2 + v8;
      v10 = sub_23BB88984();
      v17 = *(_QWORD *)(v10 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = v19;
      swift_bridgeObjectRetain();
      if (v18(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v10);
      }
      v13 = *(int *)(v21 + 48);
      v14 = *(void **)((char *)a2 + v13);
      *(_QWORD *)((char *)a1 + v13) = v14;
      *((_BYTE *)a1 + *(int *)(v21 + 52)) = *((_BYTE *)a2 + *(int *)(v21 + 52));
      v15 = v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for CompositeAppViewState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A62830);
}

_OWORD *initializeWithTake for CompositeAppViewState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    v8 = *((_QWORD *)a2 + 11);
    *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a1 + 11) = v8;
    *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
    *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
    *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
    v9 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
    v10 = v9[11];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_QWORD *)((char *)a1 + v9[12]) = *(_QWORD *)((char *)a2 + v9[12]);
    *((_BYTE *)a1 + v9[13]) = *((_BYTE *)a2 + v9[13]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for CompositeAppViewState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, type metadata accessor for CompositeAppViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      a1[4] = a2[4];
      v8 = *((_QWORD *)a2 + 11);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 11) = v8;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
      v9 = (int *)type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
      v10 = v9[11];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23BB88984();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      *(_QWORD *)((char *)a1 + v9[12]) = *(_QWORD *)((char *)a2 + v9[12]);
      *((_BYTE *)a1 + v9[13]) = *((_BYTE *)a2 + v9[13]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23BB16218()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CompositeAppViewState.TranscriptInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v11 = (void *)a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v11;
    v12 = a2[11];
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    *(_BYTE *)(a1 + 97) = *((_BYTE *)a2 + 97);
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
    v13 = a3[11];
    __dst = (void *)(a1 + v13);
    v24 = (char *)a2 + v13;
    *(_QWORD *)(a1 + 88) = v12;
    v14 = sub_23BB88984();
    v23 = *(_QWORD *)(v14 - 8);
    v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v11;
    swift_bridgeObjectRetain();
    if (v25(v24, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 16))(__dst, v24, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v14);
    }
    v18 = a3[12];
    v19 = a3[13];
    v20 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)v4 + v18) = v20;
    *((_BYTE *)v4 + v19) = *((_BYTE *)a2 + v19);
    v21 = v20;
  }
  return v4;
}

void destroy for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

uint64_t initializeWithCopy for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  const void *v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v9 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  v11 = a3[11];
  __dst = (void *)(a1 + v11);
  v21 = (const void *)(a2 + v11);
  *(_QWORD *)(a1 + 88) = v10;
  v12 = sub_23BB88984();
  v20 = *(_QWORD *)(v12 - 8);
  v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v9;
  swift_bridgeObjectRetain();
  if (v22(v21, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(__dst, v21, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v12);
  }
  v15 = a3[12];
  v16 = a3[13];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v18 = v17;
  return a1;
}

uint64_t assignWithCopy for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 80);
  v7 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v9 = *(_QWORD *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = a3[11];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_23BB88984();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = a3[12];
  v20 = *(void **)(a1 + v19);
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = v21;

  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  v10 = a3[11];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 64) = v8;
  v13 = sub_23BB88984();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for CompositeAppViewState.TranscriptInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v10 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  v11 = a3[11];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_23BB88984();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[12];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB16BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB16C30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void sub_23BB16CA8()
{
  unint64_t v0;

  sub_23BA19EA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BB16DA4 + 4 * byte_23BB95925[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BB16DD8 + 4 * byte_23BB95920[v4]))();
}

uint64_t sub_23BB16DD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB16DE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BB16DE8);
  return result;
}

uint64_t sub_23BB16DF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BB16DFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BB16E00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BB16E08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.TranscriptInfo.Direction()
{
  return &type metadata for CompositeAppViewState.TranscriptInfo.Direction;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Kind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  if (v5 + 1 >= 2)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState.TranscriptInfo.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_23BB16EC0(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_23BB16EDC(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.TranscriptInfo.Kind()
{
  return &type metadata for CompositeAppViewState.TranscriptInfo.Kind;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.DetailsInfo()
{
  return &type metadata for CompositeAppViewState.DetailsInfo;
}

ValueMetadata *type metadata accessor for CompositeAppViewState.DetailsInfo.Options()
{
  return &type metadata for CompositeAppViewState.DetailsInfo.Options;
}

unint64_t sub_23BB16F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5ECF0;
  if (!qword_256A5ECF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ECE8);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256A5ECF0);
  }
  return result;
}

uint64_t sub_23BB16F80(unint64_t a1)
{
  objc_class *v2;
  char *v3;
  uint64_t *v4;
  uint64_t result;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  objc_super v28;
  objc_super v29;
  objc_super v30;
  objc_super v31;

  v2 = (objc_class *)type metadata accessor for LocationDetailViewController.ViewOptions();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = &OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue;
  *(_QWORD *)&v3[OBJC_IVAR___FMUILocationDetailViewControllerViewOptions_rawValue] = 0;
  v31.receiver = v3;
  v31.super_class = v2;
  result = (uint64_t)objc_msgSendSuper2(&v31, sel_init);
  v6 = (char *)result;
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  v7 = sub_23BB8AFD0();
  result = swift_bridgeObjectRelease();
  if (!v7)
    return (uint64_t)v6;
LABEL_3:
  if (v7 >= 1)
  {
    v8 = 0;
    v24 = a1 & 0xC000000000000001;
    v25 = v7;
    v26 = a1;
    do
    {
      if (v24)
        v9 = (char *)MEMORY[0x24260CD9C](v8, a1);
      else
        v9 = (char *)*(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v27 = *v4;
      v11 = *(_QWORD *)&v6[*v4];
      v12 = (char *)objc_allocWithZone(v2);
      *(_QWORD *)&v12[*v4] = v11;
      v30.receiver = v12;
      v30.super_class = v2;
      v13 = v4;
      v14 = v6;
      v15 = (char *)objc_msgSendSuper2(&v30, sel_init);
      v16 = *(_QWORD *)&v15[*v4];

      v17 = *(_QWORD *)&v10[*v13];
      v18 = (char *)objc_allocWithZone(v2);
      *(_QWORD *)&v18[*v13] = v17 & v16;
      v29.receiver = v18;
      v29.super_class = v2;
      v19 = objc_msgSendSuper2(&v29, sel_init);

      v20 = sub_23BB8AC70();
      if ((v20 & 1) == 0)
      {
        v21 = *(_QWORD *)&v6[v27];
        v22 = v10;

        v23 = (char *)objc_allocWithZone(v2);
        *(_QWORD *)&v23[*v13] = v21 | v17;
        v28.receiver = v23;
        v28.super_class = v2;
        v14 = (char *)objc_msgSendSuper2(&v28, sel_init);

      }
      v4 = v13;

      ++v8;
      v6 = v14;
      a1 = v26;
    }
    while (v25 != v8);
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_23BB17184()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB8A25C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BB171F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23BB17230(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB8A25C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23BB17268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BB172B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BB172F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BB17340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BB17388()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB17394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23BB173D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BB173E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8A25C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AccessoryUnpairedOverview(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AccessoryUnpairedOverview);
}

uint64_t sub_23BB17430()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BB17464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  _UNKNOWN **v38;
  _QWORD *v39;
  ValueMetadata *v40;
  unint64_t v41;

  v3 = v2;
  v28 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_23BB8A25C();
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v23 - v7;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62998);
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v9);
  v25 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB8A22C();
  *((_QWORD *)&v37 + 1) = v4;
  v38 = &off_250CB30B0;
  sub_23BB8A22C();
  v11 = v34;
  v40 = &type metadata for AccessoryOnboardingContentView;
  v41 = sub_23B9C9E4C();
  v12 = (_QWORD *)swift_allocObject();
  v39 = v12;
  v12[5] = v4;
  v12[6] = &off_250CB30B0;
  v12[2] = v11;
  v12[7] = 0x4058000000000000;
  sub_23BB8A22C();
  v13 = sub_23BAF5E88();
  swift_release();
  v34 = sub_23BAFAB3C(v13);
  v35 = v14;
  sub_23B9967E0();
  v15 = sub_23BB89D28();
  v17 = v16;
  v19 = v18 & 1;
  sub_23BB8A238();
  v33 = v4;
  swift_getKeyPath();
  sub_23BB8A250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
  v31 = v4;
  v32 = v3;
  v29 = v4;
  v30 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A629A0);
  sub_23B9C9F24();
  sub_23BB180A0();
  v20 = v25;
  sub_23BB89E90();
  swift_release();
  swift_release();
  sub_23B9967D0(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_23BB180EC((uint64_t)&v36);
  sub_23BB89B9C();
  v36 = 0u;
  v37 = 0u;
  LOBYTE(v38) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A629B0);
  v21 = v28;
  sub_23BB89A4C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v21, v20, v27);
}

uint64_t sub_23BB1779C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A61A90, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryUnpairedViewModel, (uint64_t)&unk_23BB94C70);
  sub_23BB88A20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12FindMyUICore26AccessoryUnpairedViewModel__shouldShowAlert);
  return result;
}

uint64_t sub_23BB17830()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A61A90, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryUnpairedViewModel, (uint64_t)&unk_23BB94C70);
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BB178D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v46 = a2;
  v44 = a1;
  v49 = a5;
  v5 = type metadata accessor for AccessoryUnpairedOverview(0, a2, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = v5;
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v42 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59998);
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v48 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v45 = (char *)&v42 - v20;
  MEMORY[0x24BDAC7A8](v21, v22);
  v43 = (char *)&v42 - v23;
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v42 - v26;
  v28 = sub_23BB8929C();
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v14, 1, 1, v28);
  v30 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v44, v7);
  v31 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v46;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v32 + v31, v10, v30);
  sub_23BB8A100();
  sub_23BB89290();
  v29(v14, 0, 1, v28);
  v33 = v43;
  sub_23BB8A100();
  v34 = v47;
  v35 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v36 = v45;
  v35(v45, v27, v15);
  v37 = v48;
  v35(v48, v33, v15);
  v38 = v49;
  v35(v49, v36, v15);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629B8);
  v35(&v38[*(int *)(v39 + 48)], v37, v15);
  v40 = *(void (**)(char *, uint64_t))(v34 + 8);
  v40(v33, v15);
  v40(v27, v15);
  v40(v37, v15);
  return ((uint64_t (*)(char *, uint64_t))v40)(v36, v15);
}

uint64_t sub_23BB17BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);
  uint64_t v6;

  type metadata accessor for AccessoryUnpairedOverview(0, a2, a3, a4);
  sub_23BB8A25C();
  sub_23BB8A22C();
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A61A90, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryUnpairedViewModel, (uint64_t)&unk_23BB94C70);
  sub_23BB88A20();
  swift_release();
  v4 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v6 + 64);
  if (v4)
  {
    swift_retain();
    v4(2, 2, 0, 0, 1);
    sub_23B9BD73C((uint64_t)v4);
  }
  return swift_release();
}

uint64_t sub_23BB17CB4@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v3 = v2;
    v4 = v3;
  }
  else
  {
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
  }
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  sub_23B9967E0();
  result = sub_23BB89D28();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v12 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_23BB17E30@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v3 = v2;
    v4 = v3;
  }
  else
  {
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
  }
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  sub_23B9967E0();
  result = sub_23BB89D28();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v12 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_23BB17FB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unsigned __int16 v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  type metadata accessor for AccessoryUnpairedOverview(0, a1, a2, a3);
  sub_23BB8A25C();
  sub_23BB8A22C();
  v5 = sub_23BAF5E88();
  swift_release();
  sub_23BAFAEA4(v5);
  sub_23B9967E0();
  result = sub_23BB89D28();
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = v8 & 1;
  *(_QWORD *)(a4 + 24) = v9;
  return result;
}

uint64_t sub_23BB1804C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23BB18078()
{
  return 8;
}

_QWORD *sub_23BB18084(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23BB18090@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;

  return sub_23BB178D8(*(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 16), a1, a2, a3);
}

uint64_t sub_23BB18098@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23BB17FB4(*(_QWORD *)(v3 + 16), a1, a2, a3);
}

unint64_t sub_23BB180A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A629A8;
  if (!qword_256A629A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A629A0);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_256A629A8);
  }
  return result;
}

uint64_t sub_23BB180EC(uint64_t a1)
{
  destroy for AccessoryOBKWrapper(a1);
  return a1;
}

uint64_t sub_23BB18120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryUnpairedOverview(0, *(_QWORD *)(v4 + 16), a3, a4)- 8)+ 80);
  v6 = v4 + ((v5 + 24) & ~v5);
  v7 = sub_23BB8A25C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23BB181A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryUnpairedOverview(0, v5, a3, a4) - 8) + 80);
  return sub_23BB17BD4(v4 + ((v6 + 24) & ~v6), v5, v7, v8);
}

uint64_t sub_23BB181F4()
{
  uint64_t v0;

  return sub_23BAF49F0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_23BB18214()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[8];

  result = qword_256A629C0;
  if (!qword_256A629C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A629B0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A629A0);
    v3 = sub_23B9C9F24();
    v4 = sub_23BB180A0();
    v5[2] = &type metadata for AccessoryOBKWrapper;
    v5[3] = v2;
    v5[4] = MEMORY[0x24BDF1FA8];
    v5[5] = v3;
    v5[6] = v4;
    v5[7] = MEMORY[0x24BDF1F80];
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_23B97D0C8((unint64_t *)&qword_256A5AF28, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256A629C0);
  }
  return result;
}

uint64_t PeopleListController.Dependencies.peopleRelationshipsProvider.getter()
{
  return swift_retain();
}

uint64_t PeopleListController.Dependencies.peopleLocationsProvider.getter()
{
  return swift_retain();
}

uint64_t PeopleListController.Dependencies.userLocationProvider.getter()
{
  return swift_retain();
}

uint64_t PeopleListController.Dependencies.contactsProvider.getter()
{
  return swift_retain();
}

uint64_t PeopleListController.Dependencies.init(peopleRelationshipsProvider:peopleLocationsProvider:userLocationProvider:contactsProvider:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

ValueMetadata *type metadata accessor for PeopleListController.Dependencies()
{
  return &type metadata for PeopleListController.Dependencies;
}

uint64_t sub_23BB1832C@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *);

  v18 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989EFC(v2, (uint64_t)v13, &qword_256A629E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BF8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    sub_23B990D24((uint64_t)v13, (uint64_t)v9, &qword_256A629F0);
    v18(v9);
    result = sub_23B989D60((uint64_t)v9, &qword_256A629F0);
    if (!v3)
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BF8);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 1, v16);
    }
  }
  return result;
}

uint64_t sub_23BB184B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t inited;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[64];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB130]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8FEC0;
  v12 = (void *)*MEMORY[0x24BEBB368];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB368];
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_labelColor);
  v16 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 48) = v16;
  v17 = (void *)objc_opt_self();
  v18 = *MEMORY[0x24BEBE1F0];
  v19 = v16;
  *(_QWORD *)(inited + 56) = objc_msgSend(v17, sel_preferredFontForTextStyle_, v18);
  v20 = sub_23B97DC54(inited);
  sub_23BB1CCB0(v20);
  swift_bridgeObjectRelease();
  v21 = (void *)sub_23BB8A6B8();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v10, sel_mapAttributionWithStringAttributes_underlineText_, v21, 1);

  if (!v22)
    goto LABEL_6;
  v23 = objc_msgSend(v22, sel_string);
  if (!v23)
  {

LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 1, 1, v28);
  }
  *v9 = v23;
  v24 = v23;
  v25 = objc_msgSend(v22, sel_url);
  if (v25)
  {
    v26 = v25;
    sub_23BB88834();

    v27 = sub_23BB8884C();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 0, 1, v27);
  }
  else
  {

    v30 = sub_23BB8884C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v5, 1, 1, v30);
  }
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  sub_23B990D24((uint64_t)v5, (uint64_t)v9 + *(int *)(v31 + 48), &qword_256A599B8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 0, 1, v31);
  return sub_23B990D24((uint64_t)v9, a1, &qword_256A629E0);
}

uint64_t sub_23BB187E4()
{
  uint64_t v0;

  v0 = sub_23BB891C4();
  __swift_allocate_value_buffer(v0, qword_256A629C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A629C8);
  return sub_23BB891B8();
}

uint64_t sub_23BB18864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t OpaqueTypeConformance2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v53 = a2;
  v3 = sub_23BB89A70();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B78);
  v42 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B70);
  v43 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B60);
  v51 = *(_QWORD *)(v14 - 8);
  v52 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v50 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B58);
  v48 = *(_QWORD *)(v17 - 8);
  v49 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v45 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  sub_23BB89B90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B98);
  sub_23BB1F654();
  sub_23BB892C0();
  if (qword_256A58DD0 != -1)
    swift_once();
  v20 = (void *)qword_256A73E28;
  if (qword_256A73E28)
  {
    swift_bridgeObjectRetain();
    v21 = v20;
    v22 = v21;
  }
  else
  {
    v23 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v22 = objc_msgSend(v23, sel_mainBundle);
    v21 = 0;
  }
  v24 = v21;
  v25 = (void *)sub_23BB8A784();
  v26 = (void *)sub_23BB8A784();
  v27 = objc_msgSend(v22, sel_localizedStringForKey_value_table_, v25, 0, v26);

  v28 = sub_23BB8A7B4();
  v30 = v29;

  swift_bridgeObjectRelease();
  v55 = v28;
  v56 = v30;
  v31 = sub_23B996E1C(&qword_256A62B80, &qword_256A62B78, MEMORY[0x24BDEB238]);
  v32 = sub_23B9967E0();
  v33 = MEMORY[0x24BEE0D00];
  sub_23BB89E18();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v6);
  v34 = v44;
  sub_23BB89A64();
  v55 = v6;
  v56 = v33;
  v57 = v31;
  v58 = v32;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = v50;
  sub_23BB89E60();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v47);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B68);
  v55 = v10;
  v56 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v37 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B88);
  v38 = sub_23B996E1C(&qword_256A62B90, &qword_256A62B88, MEMORY[0x24BDEB848]);
  v55 = v37;
  v56 = v38;
  swift_getOpaqueTypeConformance2();
  v39 = v45;
  v40 = v52;
  sub_23BB89EFC();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v40);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v53, v39, v49);
}

uint64_t sub_23BB18CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  int v16;

  v4 = sub_23BB899A4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF998];
  MEMORY[0x24BDAC7A8](v4, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BB0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BB89848();
  type metadata accessor for CustomMapStyleSelector(0);
  v15 = a1;
  v16 = 0;
  sub_23B97D0C8(&qword_256A62BB8, v5, MEMORY[0x24BDEF9B8]);
  sub_23BB8B3A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BC0);
  sub_23B996E1C(&qword_256A62BC8, &qword_256A62BC0, MEMORY[0x24BDF5428]);
  sub_23BB892B4();
  LOBYTE(a1) = sub_23BB89BF0();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16))(a2, v11, v7);
  v12 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62B98) + 36);
  *(_BYTE *)v12 = a1;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_BYTE *)(v12 + 40) = 1;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_23BB18EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v50 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CustomMapStyleSelector.MapAttribution(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v47 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BD0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v48 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v45 - v15;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BD8);
  MEMORY[0x24BDAC7A8](v49, v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v46 = (uint64_t)&v45 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BE0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BE8);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v45 - v33;
  sub_23BB1928C((uint64_t)v26);
  v35 = sub_23BB89B9C();
  sub_23B989EFC((uint64_t)v26, (uint64_t)v30, &qword_256A62BE0);
  v36 = &v30[*(int *)(v27 + 36)];
  *v36 = v35;
  *(_OWORD *)(v36 + 8) = 0u;
  *(_OWORD *)(v36 + 24) = 0u;
  v36[40] = 1;
  sub_23B989D60((uint64_t)v26, &qword_256A62BE0);
  sub_23B990D24((uint64_t)v30, (uint64_t)v34, &qword_256A62BE8);
  type metadata accessor for CustomMapStyleSelector(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  v37 = (uint64_t)v47;
  sub_23BB8A0D0();
  sub_23B990D24(v37, (uint64_t)v6, &qword_256A629E0);
  v51 = a1;
  v38 = v48;
  sub_23BB1832C((void (*)(char *))sub_23BB1F6E4, v48);
  sub_23B989D60((uint64_t)v6, &qword_256A629E0);
  sub_23B990D24(v38, (uint64_t)v16, &qword_256A62BD0);
  v39 = sub_23BB89B9C();
  sub_23B989EFC((uint64_t)v16, (uint64_t)v19, &qword_256A62BD0);
  v40 = &v19[*(int *)(v49 + 36)];
  *v40 = v39;
  *(_OWORD *)(v40 + 8) = 0u;
  *(_OWORD *)(v40 + 24) = 0u;
  v40[40] = 1;
  sub_23B989D60((uint64_t)v16, &qword_256A62BD0);
  v41 = v46;
  sub_23B990D24((uint64_t)v19, v46, &qword_256A62BD8);
  sub_23B989EFC((uint64_t)v34, (uint64_t)v30, &qword_256A62BE8);
  sub_23B989EFC(v41, (uint64_t)v19, &qword_256A62BD8);
  v42 = v50;
  sub_23B989EFC((uint64_t)v30, v50, &qword_256A62BE8);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62BF0);
  sub_23B989EFC((uint64_t)v19, v42 + *(int *)(v43 + 48), &qword_256A62BD8);
  sub_23B989D60(v41, &qword_256A62BD8);
  sub_23B989D60((uint64_t)v34, &qword_256A62BE8);
  sub_23B989D60((uint64_t)v19, &qword_256A62BD8);
  return sub_23B989D60((uint64_t)v30, &qword_256A62BE8);
}

uint64_t sub_23BB1928C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v52 = a1;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C28);
  MEMORY[0x24BDAC7A8](v53, v3);
  v49 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C30);
  MEMORY[0x24BDAC7A8](v5, v6);
  v46 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v46 - v10;
  MEMORY[0x24BDAC7A8](v12, v13);
  v48 = (uint64_t)&v46 - v14;
  MEMORY[0x24BDAC7A8](v15, v16);
  v47 = (uint64_t)&v46 - v17;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C38);
  MEMORY[0x24BDAC7A8](v50, v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C40);
  MEMORY[0x24BDAC7A8](v51, v21);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23BB894A0();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v46 - v31;
  v33 = type metadata accessor for CustomMapStyleSelector(0);
  sub_23BA84118((uint64_t)v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v28, *MEMORY[0x24BDECEA8], v24);
  sub_23B97D0C8((unint64_t *)&qword_256A60910, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  v34 = sub_23BB8A73C();
  v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  v35(v28, v24);
  v35(v32, v24);
  if ((v34 & 1) != 0)
  {
    v36 = v47;
    sub_23BB199D4(0, v47);
    v37 = v48;
    sub_23BB199D4(1, v48);
    sub_23B989EFC(v36, (uint64_t)v11, &qword_256A62C30);
    v38 = v46;
    sub_23B989EFC(v37, v46, &qword_256A62C30);
    v39 = v49;
    sub_23B989EFC((uint64_t)v11, v49, &qword_256A62C30);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C60);
    sub_23B989EFC(v38, v39 + *(int *)(v40 + 48), &qword_256A62C30);
    sub_23B989D60(v38, &qword_256A62C30);
    sub_23B989D60((uint64_t)v11, &qword_256A62C30);
    sub_23B989EFC(v39, (uint64_t)v20, &qword_256A62C28);
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A62C50, &qword_256A62C40, MEMORY[0x24BDF4498]);
    sub_23B996E1C(&qword_256A62C58, &qword_256A62C28, MEMORY[0x24BDF5428]);
    sub_23BB89944();
    sub_23B989D60(v39, &qword_256A62C28);
    sub_23B989D60(v37, &qword_256A62C30);
    v41 = v36;
    v42 = &qword_256A62C30;
  }
  else
  {
    v43 = *(_QWORD *)(v2 + *(int *)(v33 + 24));
    *(_QWORD *)v23 = sub_23BB89788();
    *((_QWORD *)v23 + 1) = v43;
    v23[16] = 0;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C48);
    sub_23BB19870((uint64_t)&v23[*(int *)(v44 + 44)]);
    sub_23B989EFC((uint64_t)v23, (uint64_t)v20, &qword_256A62C40);
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A62C50, &qword_256A62C40, MEMORY[0x24BDF4498]);
    sub_23B996E1C(&qword_256A62C58, &qword_256A62C28, MEMORY[0x24BDF5428]);
    sub_23BB89944();
    v41 = (uint64_t)v23;
    v42 = &qword_256A62C40;
  }
  return sub_23B989D60(v41, v42);
}

uint64_t sub_23BB196F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_23BB89998();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB89980();
  type metadata accessor for CloseButton();
  sub_23B97D0C8(&qword_256A5E018, (uint64_t (*)(uint64_t))type metadata accessor for CloseButton, (uint64_t)&protocol conformance descriptor for CloseButton);
  sub_23BB8932C();
  v7 = sub_23B996E1C(&qword_256A62B90, &qword_256A62B88, MEMORY[0x24BDEB848]);
  MEMORY[0x24260B8FC](v6, v2, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_23BB1982C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BB19870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C30);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v20 - v8;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v20 - v12;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v20 - v16;
  sub_23BB199D4(0, (uint64_t)&v20 - v16);
  sub_23BB199D4(1, (uint64_t)v13);
  sub_23B989EFC((uint64_t)v17, (uint64_t)v9, &qword_256A62C30);
  sub_23B989EFC((uint64_t)v13, (uint64_t)v5, &qword_256A62C30);
  sub_23B989EFC((uint64_t)v9, a1, &qword_256A62C30);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C60);
  sub_23B989EFC((uint64_t)v5, a1 + *(int *)(v18 + 48), &qword_256A62C30);
  sub_23B989D60((uint64_t)v13, &qword_256A62C30);
  sub_23B989D60((uint64_t)v17, &qword_256A62C30);
  sub_23B989D60((uint64_t)v5, &qword_256A62C30);
  return sub_23B989D60((uint64_t)v9, &qword_256A62C30);
}

uint64_t sub_23BB199D4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  int v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  char v137;
  uint64_t v138;

  v3 = v2;
  v128 = a2;
  v126 = sub_23BB89524();
  MEMORY[0x24BDAC7A8](v126, v5);
  v127 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C68);
  MEMORY[0x24BDAC7A8](v7, v8);
  v117 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C70);
  MEMORY[0x24BDAC7A8](v123, v10);
  v125 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_23BB8950C();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113, v12);
  v110 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_23BB89818();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v14);
  v104 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for CustomMapStyleSelector(0);
  v16 = *(_QWORD *)(v124 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v124, v18);
  v19 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C78);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106, v20);
  v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C80);
  MEMORY[0x24BDAC7A8](v107, v23);
  v103 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C88);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115, v25);
  v129 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C90);
  MEMORY[0x24BDAC7A8](v111, v27);
  v131 = (uint64_t)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C98);
  MEMORY[0x24BDAC7A8](v116, v29);
  v120 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62CA0);
  MEMORY[0x24BDAC7A8](v118, v31);
  v122 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C30);
  MEMORY[0x24BDAC7A8](v119, v33);
  v121 = (char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v3, (uint64_t)v19, type metadata accessor for CustomMapStyleSelector);
  v35 = (*(unsigned __int8 *)(v16 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v36 = swift_allocObject();
  v37 = a1 & 1;
  *(_BYTE *)(v36 + 16) = a1 & 1;
  if ((a1 & 1) != 0)
    v38 = 0x74696C6C65746173;
  else
    v38 = 0x65726F6C707865;
  if (v37)
    v39 = 0xE900000000000065;
  else
    v39 = 0xE700000000000000;
  sub_23B989CA4((uint64_t)v19, v36 + v35, type metadata accessor for CustomMapStyleSelector);
  v130 = v37;
  v132 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62CA8);
  sub_23BB1FA9C();
  v102 = v22;
  sub_23BB8A10C();
  v40 = *(_QWORD *)(v3 + 8);
  v41 = *(_BYTE *)(v3 + 16);
  v42 = *(_BYTE *)(v3 + 17);
  v43 = *(_BYTE *)(v3 + 18);
  v133 = *(_QWORD *)v3;
  v134 = v40;
  v135 = v41;
  v136 = v42;
  v137 = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v138);
  if ((_BYTE)v138)
    v45 = 0x74696C6C65746173;
  else
    v45 = 0x65726F6C707865;
  if ((_BYTE)v138)
    v46 = 0xE900000000000065;
  else
    v46 = 0xE700000000000000;
  v101 = v44;
  if (v45 == v38 && v46 == v39)
  {
    swift_bridgeObjectRelease_n();
LABEL_17:
    v48 = v104;
    sub_23BB8980C();
    v49 = (uint64_t)v117;
    v50 = v109;
    goto LABEL_19;
  }
  v47 = sub_23BB8B1A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v47 & 1) != 0)
    goto LABEL_17;
  v133 = MEMORY[0x24BEE4AF8];
  sub_23B97D0C8(&qword_256A62CC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62CC8);
  sub_23B996E1C(&qword_256A62CD0, &qword_256A62CC8, MEMORY[0x24BEE12C8]);
  v48 = v104;
  v50 = v109;
  sub_23BB8AD84();
  v49 = (uint64_t)v117;
LABEL_19:
  sub_23B996E1C(&qword_256A62CD8, &qword_256A62C78, MEMORY[0x24BDF43B0]);
  v51 = (uint64_t)v103;
  v52 = v106;
  v53 = v102;
  sub_23BB89DB8();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v48, v50);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v52);
  v54 = v110;
  sub_23BB89500();
  sub_23BB1FB20();
  sub_23B97D0C8(&qword_256A5D590, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  v55 = v113;
  sub_23BB89D94();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v54, v55);
  sub_23B989D60(v51, &qword_256A62C80);
  v56 = *(_QWORD *)(v3 + 8);
  v57 = *(_BYTE *)(v3 + 16);
  v58 = *(_BYTE *)(v3 + 17);
  v59 = *(_BYTE *)(v3 + 18);
  v133 = *(_QWORD *)v3;
  v134 = v56;
  v135 = v57;
  v136 = v58;
  v137 = v59;
  v60 = v101;
  MEMORY[0x24260C0DC](&v138, v101);
  if ((_BYTE)v138)
    v61 = 0x74696C6C65746173;
  else
    v61 = 0x65726F6C707865;
  if ((_BYTE)v138)
    v62 = 0xE900000000000065;
  else
    v62 = 0xE700000000000000;
  if (v61 == v38 && v62 == v39)
  {
    swift_bridgeObjectRelease_n();
    v63 = 0;
  }
  else
  {
    v64 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = v64 ^ 1;
  }
  v65 = v114;
  v66 = v131;
  v67 = v129;
  v68 = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v131, v129, v115);
  *(_BYTE *)(v66 + *(int *)(v111 + 36)) = v63 & 1;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v68);
  *(_QWORD *)v49 = sub_23BB8983C();
  *(_QWORD *)(v49 + 8) = 0;
  *(_BYTE *)(v49 + 16) = 0;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62CE8);
  sub_23BB1A910(v3, v130, (_QWORD *)(v49 + *(int *)(v69 + 44)));
  v70 = *(_QWORD *)(v3 + 8);
  v71 = *(_BYTE *)(v3 + 16);
  v72 = *(_BYTE *)(v3 + 17);
  v73 = *(_BYTE *)(v3 + 18);
  v133 = *(_QWORD *)v3;
  v134 = v70;
  v135 = v71;
  v136 = v72;
  v137 = v73;
  MEMORY[0x24260C0DC](&v138, v60);
  if ((_BYTE)v138)
    v74 = 0x74696C6C65746173;
  else
    v74 = 0x65726F6C707865;
  if ((_BYTE)v138)
    v75 = 0xE900000000000065;
  else
    v75 = 0xE700000000000000;
  if (v74 == v38 && v75 == v39)
    v76 = 1;
  else
    v76 = sub_23BB8B1A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v77 = v125;
  sub_23B989EFC(v49, v125, &qword_256A62C68);
  *(_BYTE *)(v77 + *(int *)(v123 + 36)) = v76 & 1;
  sub_23B989D60(v49, &qword_256A62C68);
  v78 = sub_23BB8A2F8();
  v80 = v79;
  v81 = (uint64_t)v120;
  v82 = (uint64_t)&v120[*(int *)(v116 + 36)];
  sub_23B989EFC(v77, v82, &qword_256A62C70);
  v83 = (uint64_t *)(v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62CF0) + 36));
  *v83 = v78;
  v83[1] = v80;
  v84 = v131;
  sub_23B989EFC(v131, v81, &qword_256A62C90);
  sub_23B989D60(v77, &qword_256A62C70);
  sub_23B989D60(v84, &qword_256A62C90);
  v85 = *(_QWORD *)(v3 + *(int *)(v124 + 24) + 8);
  v86 = v127;
  v87 = &v127[*(int *)(v126 + 20)];
  v88 = *MEMORY[0x24BDEEB68];
  v89 = sub_23BB89800();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 104))(v87, v88, v89);
  *v86 = v85;
  v86[1] = v85;
  v90 = (uint64_t)v122;
  v91 = (uint64_t)&v122[*(int *)(v118 + 36)];
  v92 = MEMORY[0x24BDED998];
  sub_23B989CE8((uint64_t)v86, v91, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v91 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5D538) + 36)) = 256;
  sub_23B989EFC(v81, v90, &qword_256A62C98);
  sub_23B989D9C((uint64_t)v86, (uint64_t (*)(_QWORD))v92);
  sub_23B989D60(v81, &qword_256A62C98);
  v93 = sub_23BB8A2F8();
  v95 = v94;
  v96 = (uint64_t)v121;
  v97 = (uint64_t)&v121[*(int *)(v119 + 36)];
  sub_23BB1AC98(v3, v130, v97);
  v98 = (uint64_t *)(v97 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62CF8) + 36));
  *v98 = v93;
  v98[1] = v95;
  sub_23B990D24(v90, v96, &qword_256A62CA0);
  return sub_23B990D24(v96, v128, &qword_256A62C30);
}

uint64_t sub_23BB1A4C4(char a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v17[2];
  char v18;
  char v19;
  char v20;

  v3 = a1 & 1;
  if (qword_256A58D98 != -1)
    swift_once();
  v4 = sub_23BB891C4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256A629C8);
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v17[0] = v8;
    if (v3)
      v9 = 0x74696C6C65746173;
    else
      v9 = 0x65726F6C707865;
    if (v3)
      v10 = 0xE900000000000065;
    else
      v10 = 0xE700000000000000;
    sub_23BB7B69C(v9, v10, v17);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v5, v6, "CustomMapStyleSelector: did tap mapStyle card: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_23BB6E05C(v3);

  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  v14 = *(_BYTE *)(a2 + 17);
  v15 = *(_BYTE *)(a2 + 18);
  v17[0] = *(_QWORD *)a2;
  v17[1] = v12;
  v18 = v13;
  v19 = v14;
  v20 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  return sub_23BB8A19C();
}

uint64_t sub_23BB1A6FC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  __int16 v19;

  v4 = sub_23BB8A070();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62CA8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractiveMapModule();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BB8A0A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BDF3FD0], v4);
  v15 = sub_23BB8A094();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v18[3] = v15;
  v18[4] = 0;
  v19 = 1;
  v18[1] = sub_23BB6CB14(a1 & 1);
  v18[2] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC40);
  sub_23B9C63A8();
  sub_23B9967E0();
  sub_23BB89E30();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23B990D24((uint64_t)v12, a2, &qword_256A62CA8);
}

uint64_t sub_23BB1A910@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;

  v59 = a3;
  v4 = a2 & 1;
  v5 = sub_23BB8A2B0();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D20);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D28);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D30);
  MEMORY[0x24BDAC7A8](v55, v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D38);
  MEMORY[0x24BDAC7A8](v56, v20);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v54 - v25;
  *(_QWORD *)v12 = sub_23BB89788();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D40);
  sub_23BB1AF98(v4, a1, (uint64_t)&v12[*(int *)(v27 + 44)]);
  v28 = sub_23BB89BF0();
  type metadata accessor for CustomMapStyleSelector(0);
  sub_23BB892A8();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_23B989EFC((uint64_t)v12, (uint64_t)v16, &qword_256A62D20);
  v37 = &v16[*(int *)(v13 + 36)];
  *v37 = v28;
  *((_QWORD *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  sub_23B989D60((uint64_t)v12, &qword_256A62D20);
  LOBYTE(v12) = sub_23BB89B9C();
  sub_23BB892A8();
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_23B989EFC((uint64_t)v16, (uint64_t)v19, &qword_256A62D28);
  v46 = &v19[*(int *)(v55 + 36)];
  *v46 = (char)v12;
  *((_QWORD *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  sub_23B989D60((uint64_t)v16, &qword_256A62D28);
  sub_23BB8A2A4();
  LOBYTE(v12) = sub_23BB89BA8();
  v47 = v57;
  v48 = &v22[*(int *)(v56 + 36)];
  v49 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v48, v8, v58);
  v48[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A310) + 36)] = (char)v12;
  sub_23B989EFC((uint64_t)v19, (uint64_t)v22, &qword_256A62D30);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v49);
  sub_23B989D60((uint64_t)v19, &qword_256A62D30);
  sub_23B990D24((uint64_t)v22, (uint64_t)v26, &qword_256A62D38);
  sub_23B989EFC((uint64_t)v26, (uint64_t)v22, &qword_256A62D38);
  v50 = v59;
  *v59 = 0;
  *((_BYTE *)v50 + 8) = 1;
  v51 = v50;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D48);
  sub_23B989EFC((uint64_t)v22, (uint64_t)v51 + *(int *)(v52 + 48), &qword_256A62D38);
  sub_23B989D60((uint64_t)v26, &qword_256A62D38);
  return sub_23B989D60((uint64_t)v22, &qword_256A62D38);
}

uint64_t sub_23BB1AC98@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  double v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  _BYTE v42[5];
  char v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v6 = sub_23BB89524();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_BYTE *)(a1 + 16);
  v17 = *(_BYTE *)(a1 + 17);
  v18 = *(_BYTE *)(a1 + 18);
  *(_QWORD *)&v44 = *(_QWORD *)a1;
  *((_QWORD *)&v44 + 1) = v15;
  LOBYTE(v45) = v16;
  BYTE1(v45) = v17;
  BYTE2(v45) = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v43, v19);
  if (v43)
    v20 = 0x74696C6C65746173;
  else
    v20 = 0x65726F6C707865;
  if (v43)
    v21 = 0xE900000000000065;
  else
    v21 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v22 = 0x74696C6C65746173;
  else
    v22 = 0x65726F6C707865;
  if ((a2 & 1) != 0)
    v23 = 0xE900000000000065;
  else
    v23 = 0xE700000000000000;
  if (v20 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v24 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      v40 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v40, 1, v10);
    }
  }
  v25 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for CustomMapStyleSelector(0) + 24) + 8);
  v26 = (char *)v9 + *(int *)(v6 + 20);
  v27 = *MEMORY[0x24BDEEB68];
  v28 = sub_23BB89800();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v26, v27, v28);
  *v9 = v25;
  v9[1] = v25;
  v29 = sub_23BB89F74();
  sub_23BB89320();
  v30 = MEMORY[0x24BDED998];
  sub_23B989CE8((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v31 = *(double *)&v44 * 0.5;
  v32 = (uint64_t)&v14[*(int *)(v10 + 68)];
  sub_23B989CE8((uint64_t)v9, v32, (uint64_t (*)(_QWORD))v30);
  *(double *)(v32 + *(int *)(sub_23BB89518() + 20)) = v31;
  v33 = v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62D08) + 36);
  v34 = v45;
  *(_OWORD *)v33 = v44;
  *(_OWORD *)(v33 + 16) = v34;
  *(_QWORD *)(v33 + 32) = v46;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D10);
  *(_QWORD *)(v32 + *(int *)(v35 + 52)) = v29;
  *(_WORD *)(v32 + *(int *)(v35 + 56)) = 256;
  v36 = sub_23BB8A2F8();
  v38 = v37;
  v39 = (uint64_t *)(v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62D18) + 36));
  *v39 = v36;
  v39[1] = v38;
  sub_23B989D9C((uint64_t)v9, (uint64_t (*)(_QWORD))v30);
  sub_23B990D24((uint64_t)v14, a3, &qword_256A62D00);
  v40 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v40, 1, v10);
}

uint64_t sub_23BB1AF98@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t KeyPath;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a2;
  v4 = a1 & 1;
  v37 = a1 & 1;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D50);
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v5);
  v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v33 - v9;
  v42 = sub_23BB6CB14(v4);
  v43 = v11;
  sub_23B9967E0();
  v12 = sub_23BB89D28();
  v14 = v13;
  v16 = v15 & 1;
  sub_23BB89C08();
  v17 = sub_23BB89D04();
  v34 = v19;
  v35 = v18;
  v21 = v20;
  swift_release();
  v22 = v21 & 1;
  sub_23B9967D0(v12, v14, v16);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v24 = swift_getKeyPath();
  v33 = v24;
  v36 = v10;
  sub_23BB1B1E4(v37, (uint64_t)v10);
  v25 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v27 = v38;
  v26 = v39;
  v25(v39, v10, v38);
  v29 = v34;
  v28 = v35;
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v28;
  *(_BYTE *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = v29;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_QWORD *)(a3 + 40) = 0x3FE3333333333333;
  *(_QWORD *)(a3 + 48) = v24;
  *(_QWORD *)(a3 + 56) = 1;
  *(_BYTE *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = 1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D58);
  v25((char *)(a3 + *(int *)(v30 + 64)), v26, v27);
  sub_23B996E5C(v17, v28, v22);
  v31 = *(void (**)(char *, uint64_t))(v41 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v31(v36, v27);
  v31(v26, v27);
  sub_23B9967D0(v17, v28, v22);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BB1B1E4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  double v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t result;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;

  v3 = v2;
  v59 = a1;
  v58 = a2;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v57, v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CustomMapStyleSelector(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v53 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D60);
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D68);
  MEMORY[0x24BDAC7A8](v62, v19);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D50);
  v55 = *(_QWORD *)(v22 - 8);
  v56 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v54 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62D78);
  sub_23BB1FC18();
  sub_23B996E1C(&qword_256A62D88, &qword_256A62D78, MEMORY[0x24BDF5428]);
  sub_23BB89CB0();
  v25 = *(_QWORD *)(v2 + 8);
  v26 = *(_BYTE *)(v2 + 16);
  v27 = *(_BYTE *)(v2 + 17);
  v28 = *(_BYTE *)(v2 + 18);
  v64 = *(_QWORD *)v2;
  v65 = v25;
  v66 = v26;
  v67 = v27;
  v68 = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v69);
  if ((_BYTE)v69)
    v30 = 0x74696C6C65746173;
  else
    v30 = 0x65726F6C707865;
  if ((_BYTE)v69)
    v31 = 0xE900000000000065;
  else
    v31 = 0xE700000000000000;
  if ((v59 & 1) != 0)
    v32 = 0x74696C6C65746173;
  else
    v32 = 0x65726F6C707865;
  if ((v59 & 1) != 0)
    v33 = 0xE900000000000065;
  else
    v33 = 0xE700000000000000;
  if (v30 == v32 && v31 == v33)
  {
    swift_bridgeObjectRelease_n();
    sub_23B989CE8(v3, (uint64_t)v14, type metadata accessor for CustomMapStyleSelector);
    v34 = v62;
  }
  else
  {
    v35 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B989CE8(v3, (uint64_t)v14, type metadata accessor for CustomMapStyleSelector);
    v36 = 0.0;
    v34 = v62;
    if ((v35 & 1) == 0)
      goto LABEL_20;
  }
  v37 = *((_QWORD *)v14 + 1);
  v38 = v14[16];
  v39 = v14[17];
  v40 = v14[18];
  v64 = *(_QWORD *)v14;
  v65 = v37;
  v66 = v38;
  v67 = v39;
  v68 = v40;
  MEMORY[0x24260C0DC](&v69, v29);
  v41 = v69;
  sub_23B989CE8((uint64_t)v14, (uint64_t)v10, type metadata accessor for CustomMapStyleSelector);
  if ((v41 & 1) == 0)
  {
    v42 = *((_QWORD *)v10 + 1);
    v43 = v10[16];
    v44 = v10[17];
    v45 = v10[18];
    v64 = *(_QWORD *)v10;
    v65 = v42;
    v66 = v43;
    v67 = v44;
    v68 = v45;
    MEMORY[0x24260C0DC](&v69, v29);
  }
  sub_23B989D9C((uint64_t)v10, type metadata accessor for CustomMapStyleSelector);
  v36 = 1.0;
LABEL_20:
  sub_23B989D9C((uint64_t)v14, type metadata accessor for CustomMapStyleSelector);
  v47 = v60;
  v46 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v21, v18, v61);
  *(double *)&v21[*(int *)(v34 + 36)] = v36;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v46);
  v48 = *MEMORY[0x24BDECF38];
  v49 = sub_23BB894A0();
  v50 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v6, v48, v49);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v50, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23BB1FCF0();
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v52 = v54;
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v6, &qword_256A599C0);
    sub_23B989D60((uint64_t)v21, &qword_256A62D68);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(v58, v52, v56);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BB1B6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;

  v57 = a2;
  v3 = type metadata accessor for CustomMapStyleSelector(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62DA8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v56 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v55 = (uint64_t)&v52 - v13;
  MEMORY[0x24BDAC7A8](v14, v15);
  v52 = (char *)&v52 - v16;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v52 - v19;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_BYTE *)(a1 + 16);
  v23 = *(_BYTE *)(a1 + 17);
  LOBYTE(v19) = *(_BYTE *)(a1 + 18);
  v61 = *(_QWORD *)a1;
  v62 = v21;
  v63 = v22;
  v64 = v23;
  v65 = v19;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v59);
  v58 = v20;
  v53 = v4;
  v54 = v5;
  if (v59 == 1)
  {
    if (qword_256A58DF8 != -1)
      swift_once();
    v59 = qword_256A73E70;
    v60 = *(_QWORD *)algn_256A73E78;
    sub_23B989CE8(a1, (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CustomMapStyleSelector);
    sub_23BB8A9F4();
    swift_bridgeObjectRetain();
    v25 = sub_23BB8A9E8();
    v26 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v25;
    v28 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v27 + 24) = MEMORY[0x24BEE6930];
    sub_23B989CA4((uint64_t)v7, v27 + v26, type metadata accessor for CustomMapStyleSelector);
    sub_23B989CE8(a1, (uint64_t)v7, type metadata accessor for CustomMapStyleSelector);
    v29 = sub_23BB8A9E8();
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = v28;
    sub_23B989CA4((uint64_t)v7, v30 + v26, type metadata accessor for CustomMapStyleSelector);
    sub_23BB8A1B4();
    sub_23B9967E0();
    v31 = (uint64_t)v58;
    sub_23BB8A148();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62DB0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
  else
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v20, 1, 1, v33);
  }
  v34 = *(_QWORD *)(a1 + 8);
  v35 = *(_BYTE *)(a1 + 16);
  v36 = *(_BYTE *)(a1 + 17);
  v37 = *(_BYTE *)(a1 + 18);
  v61 = *(_QWORD *)a1;
  v62 = v34;
  v63 = v35;
  v64 = v36;
  v65 = v37;
  MEMORY[0x24260C0DC](&v59, v24);
  if (qword_256A58DF0 != -1)
    swift_once();
  v59 = qword_256A73E60;
  v60 = *(_QWORD *)algn_256A73E68;
  sub_23B989CE8(a1, (uint64_t)v7, type metadata accessor for CustomMapStyleSelector);
  sub_23BB8A9F4();
  swift_bridgeObjectRetain();
  v38 = sub_23BB8A9E8();
  v39 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v38;
  v41 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v40 + 24) = MEMORY[0x24BEE6930];
  sub_23B989CA4((uint64_t)v7, v40 + v39, type metadata accessor for CustomMapStyleSelector);
  sub_23B989CE8(a1, (uint64_t)v7, type metadata accessor for CustomMapStyleSelector);
  v42 = sub_23BB8A9E8();
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v42;
  *(_QWORD *)(v43 + 24) = v41;
  sub_23B989CA4((uint64_t)v7, v43 + v39, type metadata accessor for CustomMapStyleSelector);
  sub_23BB8A1B4();
  sub_23B9967E0();
  v44 = (uint64_t)v52;
  sub_23BB8A148();
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62DB0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  v46 = (uint64_t)v58;
  v47 = v55;
  sub_23B989EFC((uint64_t)v58, v55, &qword_256A62DA8);
  v48 = v56;
  sub_23B989EFC(v44, v56, &qword_256A62DA8);
  v49 = v57;
  sub_23B989EFC(v47, v57, &qword_256A62DA8);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62DB8);
  sub_23B989EFC(v48, v49 + *(int *)(v50 + 48), &qword_256A62DA8);
  sub_23B989D60(v44, &qword_256A62DA8);
  sub_23B989D60(v46, &qword_256A62DA8);
  sub_23B989D60(v48, &qword_256A62DA8);
  return sub_23B989D60(v47, &qword_256A62DA8);
}

_QWORD *sub_23BB1BC18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  result = MEMORY[0x24260C0DC](&v4, v2);
  *a1 = BYTE2(v4);
  return result;
}

uint64_t sub_23BB1BC7C(char *a1)
{
  char v1;
  uint64_t v3;

  v1 = *a1;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v3);
  if ((v3 & 1) != 0)
  {
    BYTE1(v3) &= v1;
    BYTE2(v3) = v1;
  }
  sub_23BB8A19C();
  swift_release();
  return swift_release();
}

_QWORD *sub_23BB1BD60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  result = MEMORY[0x24260C0DC](&v4, v2);
  *a1 = BYTE1(v4);
  return result;
}

uint64_t sub_23BB1BDC4()
{
  uint64_t v1;

  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v1);
  sub_23BB8A19C();
  swift_release();
  return swift_release();
}

uint64_t sub_23BB1BE98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v1 = sub_23BB8944C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD18);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62DA0);
  v10 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23BB8A064();
  sub_23BB89440();
  v14 = MEMORY[0x24BDF4108];
  v15 = MEMORY[0x24BDF40E8];
  sub_23BB89DC4();
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v5, v1);
  swift_release();
  sub_23BB89428();
  v27 = v14;
  v28 = v15;
  swift_getOpaqueTypeConformance2();
  sub_23BB89DC4();
  v16(v5, v1);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  v17 = sub_23BB8A01C();
  KeyPath = swift_getKeyPath();
  v20 = v25;
  v19 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v26, v13, v25);
  v21 = (uint64_t *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62D70) + 36));
  *v21 = KeyPath;
  v21[1] = v17;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v20);
}

uint64_t sub_23BB1C0A4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void **v44;
  void (**v45)(char *, uint64_t);
  void *v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void (*v54)(char *, _QWORD, uint64_t);
  char *v55;
  char *v56;
  uint64_t result;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t KeyPath;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  void (**v97)(char *, uint64_t);
  void **v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void **v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void **v108;
  uint64_t v109;

  v92 = a2;
  v98 = a1;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608D8);
  MEMORY[0x24BDAC7A8](v101, v2);
  v91 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v88 = (char *)&v81 - v6;
  v7 = sub_23BB894A0();
  v99 = *(_QWORD **)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v100 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v95 = (char *)&v81 - v12;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A608E0);
  MEMORY[0x24BDAC7A8](v90, v13);
  v86 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v89 = (uint64_t)&v81 - v17;
  v109 = sub_23BB8950C();
  v97 = *(void (***)(char *, uint64_t))(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v18);
  v96 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  MEMORY[0x24BDAC7A8](v93, v20);
  v22 = (void **)((char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for CustomMapStyleSelector.MapAttribution(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v23, v26);
  v27 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v81 - v30;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C00);
  v94 = *(char **)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102, v32);
  v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C08);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83, v35);
  v103 = (char *)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A62C10);
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v37);
  v84 = (char *)&v81 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CustomMapStyleSelector(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62A98);
  sub_23BB8A0D0();
  sub_23B989CE8((uint64_t)v31, (uint64_t)v27, type metadata accessor for CustomMapStyleSelector.MapAttribution);
  v39 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v40 = swift_allocObject();
  sub_23B989CA4((uint64_t)v27, v40 + v39, type metadata accessor for CustomMapStyleSelector.MapAttribution);
  v41 = (uint64_t)v31;
  v42 = v95;
  sub_23B989D9C(v41, type metadata accessor for CustomMapStyleSelector.MapAttribution);
  v43 = *(int *)(v93 + 48);
  v44 = v98;
  v45 = (void (**)(char *, uint64_t))((char *)v98 + v43);
  v46 = *v98;
  *v22 = *v98;
  sub_23B989EFC((uint64_t)v44 + v43, (uint64_t)v22 + v43, &qword_256A599B8);
  v104 = v22;
  sub_23BB1F810();
  v47 = v46;
  sub_23BB8A10C();
  sub_23B989D60((uint64_t)v22, &qword_256A629F0);
  v48 = v96;
  sub_23BB89500();
  v49 = sub_23B996E1C(&qword_256A62C20, &qword_256A62C00, MEMORY[0x24BDF43B0]);
  v50 = sub_23B97D0C8(&qword_256A5D590, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  v51 = v102;
  v52 = v109;
  v98 = (void **)v50;
  sub_23BB89D94();
  v97[1](v48, v52);
  (*((void (**)(char *, uint64_t))v94 + 1))(v34, v51);
  v53 = v99;
  v54 = (void (*)(char *, _QWORD, uint64_t))v99[13];
  v54(v42, *MEMORY[0x24BDECF10], v7);
  v55 = v100;
  v54(v100, *MEMORY[0x24BDECF38], v7);
  v56 = v55;
  sub_23B97D0C8((unint64_t *)&qword_256A60910, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  result = sub_23BB8A754();
  if ((result & 1) != 0)
  {
    v96 = (char *)v49;
    v97 = v45;
    v58 = v101;
    v59 = v88;
    v60 = &v88[*(int *)(v101 + 48)];
    v61 = (void (*)(char *, char *, uint64_t))v53[4];
    v61(v88, v42, v7);
    v94 = v60;
    v61(v60, v56, v7);
    v62 = *(int *)(v58 + 48);
    v63 = v91;
    v64 = &v91[v62];
    v65 = (void (*)(char *, char *, uint64_t))v53[2];
    v65(v91, v59, v7);
    v65(v64, v60, v7);
    v66 = (uint64_t)v86;
    v61(v86, v63, v7);
    v67 = (void (*)(char *, uint64_t))v53[1];
    v67(v64, v7);
    v68 = &v63[*(int *)(v101 + 48)];
    v61(v63, v59, v7);
    v61(v68, v94, v7);
    v61((char *)(v66 + *(int *)(v90 + 36)), v68, v7);
    v67(v63, v7);
    v69 = v89;
    sub_23B990D24(v66, v89, &qword_256A608E0);
    v105 = v102;
    v106 = v109;
    v107 = v96;
    v108 = v98;
    swift_getOpaqueTypeConformance2();
    sub_23B996E1C(&qword_256A60920, &qword_256A608E0, MEMORY[0x24BEE08F8]);
    v70 = v84;
    v71 = v83;
    v72 = v103;
    sub_23BB89DF4();
    sub_23B989D60(v69, &qword_256A608E0);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v72, v71);
    v73 = sub_23BB8884C();
    v74 = (*(unsigned int (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(*(_QWORD *)(v73 - 8)
                                                                                                  + 48))(v97, 1, v73) == 1;
    KeyPath = swift_getKeyPath();
    v76 = swift_allocObject();
    *(_BYTE *)(v76 + 16) = v74;
    v77 = v85;
    v78 = v92;
    v79 = v87;
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v92, v70, v87);
    v80 = (uint64_t *)(v78 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A62BF8) + 36));
    *v80 = KeyPath;
    v80[1] = (uint64_t)sub_23BA9A384;
    v80[2] = v76;
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v70, v79);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23BB1C838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (id *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8884C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989EFC(v1, (uint64_t)v5, &qword_256A629E0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v5, 1, v15) == 1)
  {
    sub_23B989D60((uint64_t)v5, &qword_256A629E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_4:
    sub_23B989D60((uint64_t)v9, &qword_256A599B8);
    if (qword_256A58D98 != -1)
      swift_once();
    v16 = sub_23BB891C4();
    __swift_project_value_buffer(v16, (uint64_t)qword_256A629C8);
    v17 = sub_23BB891AC();
    v18 = sub_23BB8ABD4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23B979000, v17, v18, "CustomMapStyleSelector: No URL found", v19, 2u);
      MEMORY[0x24260D9B4](v19, -1, -1);
    }

    return;
  }

  sub_23B990D24((uint64_t)v5 + *(int *)(v15 + 48), (uint64_t)v9, &qword_256A599B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
  if (qword_256A58D98 != -1)
    swift_once();
  v20 = sub_23BB891C4();
  __swift_project_value_buffer(v20, (uint64_t)qword_256A629C8);
  v21 = sub_23BB891AC();
  v22 = sub_23BB8ABEC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23B979000, v21, v22, "CustomMapStyleSelector: Open attribution URL", v23, 2u);
    MEMORY[0x24260D9B4](v23, -1, -1);
  }

  v24 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v25 = (void *)sub_23BB88828();
  sub_23B97E848(MEMORY[0x24BEE4AF8]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_23B97D0C8(&qword_256A58F98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23BB8C324);
  v26 = (void *)sub_23BB8A6B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_openURL_options_completionHandler_, v25, v26, 0);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_23BB1CC0C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (void **)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(int *)(v8 + 48);
  v10 = (uint64_t)v7 + v9;
  v11 = *a1;
  *v7 = *a1;
  sub_23B989EFC((uint64_t)a1 + v9, (uint64_t)v7 + v9, &qword_256A599B8);
  v12 = v11;
  result = sub_23B989D60(v10, &qword_256A599B8);
  *a2 = v12;
  return result;
}

uint64_t sub_23BB1CCB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_256A629F8);
    v2 = sub_23BB8B000();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v37[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v17 = *(void **)&v37[0];
    type metadata accessor for Key(0);
    v19 = v17;
    v18;
    swift_dynamicCast();
    sub_23BAC0A64();
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_23B989490(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_23B989490(v36, v37);
    sub_23B989490(v37, &v33);
    result = sub_23BB8ADC0();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_23B989490(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_23BA7D474();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_23BB1D070(uint64_t a1, uint64_t a2)
{
  id v3;
  double v4;
  double v5;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v3, sel_setAttributedText_, a2);
  objc_msgSend(v3, sel_setNumberOfLines_, 3);
  objc_msgSend(v3, sel_setTextAlignment_, 4);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  LODWORD(v5) = 1144750080;
  objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 1, v5);
  return v3;
}

id sub_23BB1D134(uint64_t a1)
{
  uint64_t *v1;

  return sub_23BB1D070(a1, *v1);
}

id sub_23BB1D140(uint64_t a1, int a2, id a3)
{
  id result;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend(a3, sel_systemLayoutSizeFittingSize_, *(double *)a1, 1.79769313e308);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_23BB1D17C()
{
  sub_23BB20104();
  return sub_23BB89920();
}

uint64_t sub_23BB1D1CC()
{
  sub_23BB20104();
  return sub_23BB898CC();
}

void sub_23BB1D21C()
{
  sub_23BB20104();
  sub_23BB89914();
  __break(1u);
}

uint64_t sub_23BB1D240()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A62B58);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B60);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B68);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B70);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B78);
  sub_23B996E1C(&qword_256A62B80, &qword_256A62B78, MEMORY[0x24BDEB238]);
  sub_23B9967E0();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A62B88);
  sub_23B996E1C(&qword_256A62B90, &qword_256A62B88, MEMORY[0x24BDEB848]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return sub_23BB894B8();
}

char *sub_23BB1D3B0(char *a1, char **a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v9 = *a2;
      *(_QWORD *)a1 = *a2;
      v10 = *(int *)(v6 + 48);
      v11 = &a1[v10];
      v12 = (char *)a2 + v10;
      v13 = sub_23BB8884C();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      v16 = v9;
      if (v15(v12, 1, v13))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_23BB1D514(id *a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {

    v4 = (char *)a1 + *(int *)(v2 + 48);
    v5 = sub_23BB8884C();
    v6 = *(_QWORD *)(v5 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

void **sub_23BB1D5B8(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = *(int *)(v4 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BB8884C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v7;
    if (v13(v10, 1, v11))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void **sub_23BB1D6F4(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void **, uint64_t, uint64_t);
  int v7;
  int v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  size_t v18;
  void **v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v20 = *a2;
      v21 = *a1;
      *a1 = *a2;
      v22 = v20;

      v23 = *(int *)(v4 + 48);
      v24 = (char *)a1 + v23;
      a2 = (void **)((char *)a2 + v23);
      v25 = sub_23BB8884C();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v24, 1, v25);
      v29 = v27((char *)a2, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(char *, void **, uint64_t))(v26 + 16))(v24, a2, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v25);
          return a1;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(char *, void **, uint64_t))(v26 + 24))(v24, a2, v25);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8) - 8) + 64);
      v19 = (void **)v24;
      goto LABEL_8;
    }
    sub_23B989D60((uint64_t)a1, &qword_256A629F0);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0) - 8) + 64);
    v19 = a1;
LABEL_8:
    memcpy(v19, a2, v18);
    return a1;
  }
  if (v8)
    goto LABEL_7;
  v9 = *a2;
  *a1 = *a2;
  v10 = *(int *)(v4 + 48);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23BB8884C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v9;
  if (v15(v12, 1, v13))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

_QWORD *sub_23BB1D930(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629F0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A629E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v4 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23BB8884C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

