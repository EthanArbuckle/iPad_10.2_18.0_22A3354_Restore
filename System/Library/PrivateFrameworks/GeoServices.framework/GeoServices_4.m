void sub_1887FBE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::protobuf_ShutdownFile_google_2fprotobuf_2fdescriptor_2eproto(AddrObjGoogle::protobuf *this)
{
  uint64_t v1;
  AddrObjGoogle::protobuf::FileDescriptorProto *v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::DescriptorProto *v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v10;
  uint64_t v11;
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v14;
  uint64_t v15;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v16;
  uint64_t v17;
  AddrObjGoogle::protobuf::FileOptions *v18;
  uint64_t v19;
  AddrObjGoogle::protobuf::MessageOptions *v20;
  uint64_t v21;
  AddrObjGoogle::protobuf::FieldOptions *v22;
  uint64_t v23;
  AddrObjGoogle::protobuf::EnumOptions *v24;
  uint64_t v25;
  AddrObjGoogle::protobuf::EnumValueOptions *v26;
  uint64_t v27;
  AddrObjGoogle::protobuf::ServiceOptions *v28;
  uint64_t v29;
  AddrObjGoogle::protobuf::MethodOptions *v30;
  uint64_t v31;
  AddrObjGoogle::protobuf::UninterpretedOption *v32;
  uint64_t v33;
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v34;
  uint64_t v35;
  AddrObjGoogle::protobuf::SourceCodeInfo *v36;
  uint64_t v37;
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v38;
  uint64_t v39;
  uint64_t result;

  v1 = AddrObjGoogle::protobuf::FileDescriptorSet::default_instance_(this);
  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  v2 = (AddrObjGoogle::protobuf::FileDescriptorProto *)qword_1EDF50658;
  if (qword_1EDF50658)
    v2 = (AddrObjGoogle::protobuf::FileDescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50658
                                                                                            + 8))(qword_1EDF50658);
  v3 = AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(v2);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = (AddrObjGoogle::protobuf::DescriptorProto *)qword_1EDF50668;
  if (qword_1EDF50668)
    v4 = (AddrObjGoogle::protobuf::DescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50668
                                                                                        + 8))(qword_1EDF50668);
  v5 = AddrObjGoogle::protobuf::DescriptorProto::default_instance_(v4);
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  v6 = (AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)qword_1EDF50678;
  if (qword_1EDF50678)
    v6 = (AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50678 + 8))(qword_1EDF50678);
  v7 = AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::default_instance_(v6);
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  v8 = (AddrObjGoogle::protobuf::FieldDescriptorProto *)qword_1EDF50688;
  if (qword_1EDF50688)
    v8 = (AddrObjGoogle::protobuf::FieldDescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50688
                                                                                             + 8))(qword_1EDF50688);
  v9 = AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_(v8);
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  v10 = (AddrObjGoogle::protobuf::EnumDescriptorProto *)qword_1EDF50698;
  if (qword_1EDF50698)
    v10 = (AddrObjGoogle::protobuf::EnumDescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50698
                                                                                             + 8))(qword_1EDF50698);
  v11 = AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(v10);
  if (v11)
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  v12 = (AddrObjGoogle::protobuf::EnumValueDescriptorProto *)qword_1EDF506B8;
  if (qword_1EDF506B8)
    v12 = (AddrObjGoogle::protobuf::EnumValueDescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF506B8
                                                                                                  + 8))(qword_1EDF506B8);
  v13 = AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_(v12);
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)qword_1EDF506C8;
  if (qword_1EDF506C8)
    v14 = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF506C8
                                                                                                + 8))(qword_1EDF506C8);
  v15 = AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(v14);
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  v16 = (AddrObjGoogle::protobuf::MethodDescriptorProto *)qword_1EDF506D8;
  if (qword_1EDF506D8)
    v16 = (AddrObjGoogle::protobuf::MethodDescriptorProto *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF506D8
                                                                                               + 8))(qword_1EDF506D8);
  v17 = AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(v16);
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = (AddrObjGoogle::protobuf::FileOptions *)qword_1EDF506E8;
  if (qword_1EDF506E8)
    v18 = (AddrObjGoogle::protobuf::FileOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF506E8 + 8))(qword_1EDF506E8);
  v19 = AddrObjGoogle::protobuf::FileOptions::default_instance_(v18);
  if (v19)
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  v20 = (AddrObjGoogle::protobuf::MessageOptions *)qword_1EDF506F8;
  if (qword_1EDF506F8)
    v20 = (AddrObjGoogle::protobuf::MessageOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF506F8
                                                                                        + 8))(qword_1EDF506F8);
  v21 = AddrObjGoogle::protobuf::MessageOptions::default_instance_(v20);
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  v22 = (AddrObjGoogle::protobuf::FieldOptions *)qword_1EDF50710;
  if (qword_1EDF50710)
    v22 = (AddrObjGoogle::protobuf::FieldOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50710 + 8))(qword_1EDF50710);
  v23 = AddrObjGoogle::protobuf::FieldOptions::default_instance_(v22);
  if (v23)
    (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
  v24 = (AddrObjGoogle::protobuf::EnumOptions *)qword_1EDF50720;
  if (qword_1EDF50720)
    v24 = (AddrObjGoogle::protobuf::EnumOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50720 + 8))(qword_1EDF50720);
  v25 = AddrObjGoogle::protobuf::EnumOptions::default_instance_(v24);
  if (v25)
    (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
  v26 = (AddrObjGoogle::protobuf::EnumValueOptions *)qword_1EDF50738;
  if (qword_1EDF50738)
    v26 = (AddrObjGoogle::protobuf::EnumValueOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50738
                                                                                          + 8))(qword_1EDF50738);
  v27 = AddrObjGoogle::protobuf::EnumValueOptions::default_instance_(v26);
  if (v27)
    (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
  v28 = (AddrObjGoogle::protobuf::ServiceOptions *)qword_1EDF50748;
  if (qword_1EDF50748)
    v28 = (AddrObjGoogle::protobuf::ServiceOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50748
                                                                                        + 8))(qword_1EDF50748);
  v29 = AddrObjGoogle::protobuf::ServiceOptions::default_instance_(v28);
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  v30 = (AddrObjGoogle::protobuf::MethodOptions *)qword_1EDF50758;
  if (qword_1EDF50758)
    v30 = (AddrObjGoogle::protobuf::MethodOptions *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50758 + 8))(qword_1EDF50758);
  v31 = AddrObjGoogle::protobuf::MethodOptions::default_instance_(v30);
  if (v31)
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  v32 = (AddrObjGoogle::protobuf::UninterpretedOption *)qword_1EDF50768;
  if (qword_1EDF50768)
    v32 = (AddrObjGoogle::protobuf::UninterpretedOption *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50768
                                                                                             + 8))(qword_1EDF50768);
  v33 = AddrObjGoogle::protobuf::UninterpretedOption::default_instance_(v32);
  if (v33)
    (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  v34 = (AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)qword_1EDF50778;
  if (qword_1EDF50778)
    v34 = (AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50778 + 8))(qword_1EDF50778);
  v35 = AddrObjGoogle::protobuf::UninterpretedOption_NamePart::default_instance_(v34);
  if (v35)
    (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  v36 = (AddrObjGoogle::protobuf::SourceCodeInfo *)qword_1EDF50788;
  if (qword_1EDF50788)
    v36 = (AddrObjGoogle::protobuf::SourceCodeInfo *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50788
                                                                                        + 8))(qword_1EDF50788);
  v37 = AddrObjGoogle::protobuf::SourceCodeInfo::default_instance_(v36);
  if (v37)
    (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
  v38 = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)qword_1EDF50798;
  if (qword_1EDF50798)
    v38 = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF50798
                                                                                                 + 8))(qword_1EDF50798);
  v39 = AddrObjGoogle::protobuf::SourceCodeInfo_Location::default_instance_(v38);
  if (v39)
    (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
  result = qword_1EDF507A8;
  if (qword_1EDF507A8)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)qword_1EDF507A8 + 8))(qword_1EDF507A8);
  return result;
}

void sub_1887FC268(AddrObjGoogle::protobuf::FileDescriptorSet *a1)
{
  uint64_t v1;
  const std::string::value_type **v2;
  const AddrObjGoogle::protobuf::Descriptor *v3;
  const AddrObjGoogle::protobuf::Message *v4;
  const std::string::value_type **v5;
  AddrObjGoogle::protobuf::FileDescriptorProto *v6;
  const AddrObjGoogle::protobuf::Descriptor *v7;
  const AddrObjGoogle::protobuf::Message *v8;
  const std::string::value_type **v9;
  AddrObjGoogle::protobuf::DescriptorProto *v10;
  const AddrObjGoogle::protobuf::Descriptor *v11;
  const AddrObjGoogle::protobuf::Message *v12;
  const std::string::value_type **v13;
  AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v14;
  const AddrObjGoogle::protobuf::Descriptor *v15;
  const AddrObjGoogle::protobuf::Message *v16;
  const std::string::value_type **v17;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v18;
  const AddrObjGoogle::protobuf::Descriptor *v19;
  const AddrObjGoogle::protobuf::Message *v20;
  const std::string::value_type **v21;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v22;
  const AddrObjGoogle::protobuf::Descriptor *v23;
  const AddrObjGoogle::protobuf::Message *v24;
  const std::string::value_type **v25;
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v26;
  const AddrObjGoogle::protobuf::Descriptor *v27;
  const AddrObjGoogle::protobuf::Message *v28;
  const std::string::value_type **v29;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v30;
  const AddrObjGoogle::protobuf::Descriptor *v31;
  const AddrObjGoogle::protobuf::Message *v32;
  const std::string::value_type **v33;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v34;
  const AddrObjGoogle::protobuf::Descriptor *v35;
  const AddrObjGoogle::protobuf::Message *v36;
  const std::string::value_type **v37;
  AddrObjGoogle::protobuf::FileOptions *v38;
  const AddrObjGoogle::protobuf::Descriptor *v39;
  const AddrObjGoogle::protobuf::Message *v40;
  const std::string::value_type **v41;
  AddrObjGoogle::protobuf::MessageOptions *v42;
  const AddrObjGoogle::protobuf::Descriptor *v43;
  const AddrObjGoogle::protobuf::Message *v44;
  const std::string::value_type **v45;
  AddrObjGoogle::protobuf::FieldOptions *v46;
  const AddrObjGoogle::protobuf::Descriptor *v47;
  const AddrObjGoogle::protobuf::Message *v48;
  const std::string::value_type **v49;
  AddrObjGoogle::protobuf::EnumOptions *v50;
  const AddrObjGoogle::protobuf::Descriptor *v51;
  const AddrObjGoogle::protobuf::Message *v52;
  const std::string::value_type **v53;
  AddrObjGoogle::protobuf::EnumValueOptions *v54;
  const AddrObjGoogle::protobuf::Descriptor *v55;
  const AddrObjGoogle::protobuf::Message *v56;
  const std::string::value_type **v57;
  AddrObjGoogle::protobuf::ServiceOptions *v58;
  const AddrObjGoogle::protobuf::Descriptor *v59;
  const AddrObjGoogle::protobuf::Message *v60;
  const std::string::value_type **v61;
  AddrObjGoogle::protobuf::MethodOptions *v62;
  const AddrObjGoogle::protobuf::Descriptor *v63;
  const AddrObjGoogle::protobuf::Message *v64;
  const std::string::value_type **v65;
  AddrObjGoogle::protobuf::UninterpretedOption *v66;
  const AddrObjGoogle::protobuf::Descriptor *v67;
  const AddrObjGoogle::protobuf::Message *v68;
  const std::string::value_type **v69;
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v70;
  const AddrObjGoogle::protobuf::Descriptor *v71;
  const AddrObjGoogle::protobuf::Message *v72;
  const std::string::value_type **v73;
  AddrObjGoogle::protobuf::SourceCodeInfo *v74;
  const AddrObjGoogle::protobuf::Descriptor *v75;
  const AddrObjGoogle::protobuf::Message *v76;
  const std::string::value_type **v77;
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v78;
  const AddrObjGoogle::protobuf::Descriptor *v79;
  const AddrObjGoogle::protobuf::Message *v80;
  _QWORD v81[2];
  char v82;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v81[0] = &off_1E1BF6040;
    v81[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v82 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v81);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v81);
  }
  v2 = (const std::string::value_type **)qword_1EDF50650;
  v3 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::FileDescriptorSet::default_instance(a1);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v2, v3, v4);
  v5 = (const std::string::value_type **)qword_1EDF50660;
  v7 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::FileDescriptorProto::default_instance(v6);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v5, v7, v8);
  v9 = (const std::string::value_type **)qword_1EDF50670;
  v11 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::DescriptorProto::default_instance(v10);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v9, v11, v12);
  v13 = (const std::string::value_type **)qword_1EDF50680;
  v15 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::default_instance(v14);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v13, v15, v16);
  v17 = (const std::string::value_type **)qword_1EDF50690;
  v19 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance(v18);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v17, v19, v20);
  v21 = (const std::string::value_type **)qword_1EDF506B0;
  v23 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance(v22);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v21, v23, v24);
  v25 = (const std::string::value_type **)qword_1EDF506C0;
  v27 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance(v26);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v25, v27, v28);
  v29 = (const std::string::value_type **)qword_1EDF506D0;
  v31 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance(v30);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v29, v31, v32);
  v33 = (const std::string::value_type **)qword_1EDF506E0;
  v35 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance(v34);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v33, v35, v36);
  v37 = (const std::string::value_type **)qword_1EDF506F0;
  v39 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::FileOptions::default_instance(v38);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v37, v39, v40);
  v41 = (const std::string::value_type **)qword_1EDF50708;
  v43 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::MessageOptions::default_instance(v42);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v41, v43, v44);
  v45 = (const std::string::value_type **)qword_1EDF50718;
  v47 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::FieldOptions::default_instance(v46);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v45, v47, v48);
  v49 = (const std::string::value_type **)qword_1EDF50730;
  v51 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::EnumOptions::default_instance(v50);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v49, v51, v52);
  v53 = (const std::string::value_type **)qword_1EDF50740;
  v55 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::EnumValueOptions::default_instance(v54);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v53, v55, v56);
  v57 = (const std::string::value_type **)qword_1EDF50750;
  v59 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::ServiceOptions::default_instance(v58);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v57, v59, v60);
  v61 = (const std::string::value_type **)qword_1EDF50760;
  v63 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::MethodOptions::default_instance(v62);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v61, v63, v64);
  v65 = (const std::string::value_type **)qword_1EDF50770;
  v67 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::UninterpretedOption::default_instance(v66);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v65, v67, v68);
  v69 = (const std::string::value_type **)qword_1EDF50780;
  v71 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::UninterpretedOption_NamePart::default_instance(v70);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v69, v71, v72);
  v73 = (const std::string::value_type **)qword_1EDF50790;
  v75 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::SourceCodeInfo::default_instance(v74);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v73, v75, v76);
  v77 = (const std::string::value_type **)qword_1EDF507A0;
  v79 = (const AddrObjGoogle::protobuf::Descriptor *)AddrObjGoogle::protobuf::SourceCodeInfo_Location::default_instance(v78);
  AddrObjGoogle::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v77, v79, v80);
}

void sub_1887FC4B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FileDescriptorSet::MergeFrom(AddrObjGoogle::protobuf::FileDescriptorSet *this, const AddrObjGoogle::protobuf::FileDescriptorSet *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::FileDescriptorProto *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::FileDescriptorProto *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 860);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 4, *((_DWORD *)a2 + 6) + *((_DWORD *)this + 6));
  if (*((int *)a2 + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::FileDescriptorProto **)(*((_QWORD *)a2 + 2) + 8 * v5);
      v7 = *((_DWORD *)this + 7);
      v8 = *((int *)this + 6);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 8))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 4, v7 + 1);
          v7 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FileDescriptorProto>::New();
        v11 = *((_QWORD *)this + 2);
        v12 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::FileDescriptorProto **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::FileDescriptorProto::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 6));
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::FileDescriptorSet *)((char *)a2 + 8));
}

void sub_1887FC5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FileDescriptorSet::~FileDescriptorSet(AddrObjGoogle::protobuf::FileDescriptorSet *this)
{
  *(_QWORD *)this = &off_1E1BF5798;
  AddrObjGoogle::protobuf::FileDescriptorSet::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 2);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::FileDescriptorSet *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::FileDescriptorSet::~FileDescriptorSet(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::default_instance(AddrObjGoogle::protobuf::FileDescriptorSet *this)
{
  AddrObjGoogle::protobuf::FileDescriptorSet *v1;

  v1 = (AddrObjGoogle::protobuf::FileDescriptorSet *)AddrObjGoogle::protobuf::FileDescriptorSet::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::FileDescriptorSet *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::FileDescriptorSet::default_instance_(v1);
}

AddrObjGoogle::protobuf::FileDescriptorSet *AddrObjGoogle::protobuf::FileDescriptorSet::New(AddrObjGoogle::protobuf::FileDescriptorSet *this)
{
  AddrObjGoogle::protobuf::FileDescriptorSet *v1;

  v1 = (AddrObjGoogle::protobuf::FileDescriptorSet *)operator new();
  AddrObjGoogle::protobuf::FileDescriptorSet::FileDescriptorSet(v1);
  return v1;
}

void sub_1887FC6DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FileDescriptorSet::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::MergePartialFromCodedStream(AddrObjGoogle::protobuf::FileDescriptorSet *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  int *v6;
  void ***v7;
  char *v8;
  unint64_t TagFallback;
  int v10;
  uint64_t v11;
  uint64_t v12;
  AddrObjGoogle::protobuf::FileDescriptorProto *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  AddrObjGoogle::protobuf::UnknownFieldSet *v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t result;
  unsigned int v28;

  v6 = (int *)((char *)this + 16);
  v7 = (void ***)((char *)this + 8);
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v10 = *((_DWORD *)this + 7);
        v11 = *((int *)this + 6);
        if ((int)v11 >= v10)
        {
          if (v10 == *((_DWORD *)this + 8))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            v10 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v10 + 1;
          v13 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FileDescriptorProto>::New();
          v14 = *((_QWORD *)this + 2);
          v15 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v15 + 1;
          *(_QWORD *)(v14 + 8 * v15) = v13;
        }
        else
        {
          v12 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v11 + 1;
          v13 = *(AddrObjGoogle::protobuf::FileDescriptorProto **)(v12 + 8 * v11);
        }
        v28 = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))
            return 0;
        }
        else
        {
          v28 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        v19 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v28);
        if (!AddrObjGoogle::protobuf::FileDescriptorProto::MergePartialFromCodedStream((uint64_t)v13, a2, v20, v21)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v26 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v25 >= v26 || *v25 != 10)
        {
          if (v25 == v26 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v25 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if (!AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0;
  }
}

uint64_t **AddrObjGoogle::protobuf::FileDescriptorSet::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t **v7;
  _QWORD *v8;

  v4 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    v5 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * v5++), a2);
    while (v5 < *(int *)(v4 + 24));
  }
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (uint64_t **)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FileDescriptorSet::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::FileDescriptorSet *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  unsigned int *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  _QWORD *v10;
  uint64_t **v11;
  _QWORD *v12;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 10;
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7[50];
      if (v8 > 0x7F)
      {
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (_BYTE *)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v8;
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = AddrObjGoogle::protobuf::FileDescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::FileDescriptorProto *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v12 = (_QWORD *)*((_QWORD *)this + 1);
  v11 = (uint64_t **)((char *)this + 8);
  v10 = v12;
  if (!v12 || *v10 == v10[1])
    return a2;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::ByteSize(AddrObjGoogle::protobuf::FileDescriptorSet *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v3 = *((unsigned int *)this + 6);
  if ((int)v3 >= 1)
  {
    v4 = 0;
    do
    {
      v5 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::FileDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::FileDescriptorProto **)(*((_QWORD *)this + 2) + 8 * v4), a2);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *((int *)this + 6));
  }
  v8 = (_QWORD *)*((_QWORD *)this + 1);
  if (v8 && *v8 != v8[1])
    v3 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v3;
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void AddrObjGoogle::protobuf::FileDescriptorSet::MergeFrom(AddrObjGoogle::protobuf::FileDescriptorSet *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::FileDescriptorSet *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 848);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::FileDescriptorSet::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1887FCBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::FileDescriptorSet::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::IsInitialized(AddrObjGoogle::protobuf::FileDescriptorSet *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (*((int *)this + 6) < 1)
    return 1;
  v2 = 0;
  do
  {
    v3 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v2);
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    if ((result & 1) == 0)
      break;
    ++v2;
  }
  while (v2 < *((int *)this + 6));
  return result;
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::GetMetadata(AddrObjGoogle::protobuf::FileDescriptorSet *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50650;
}

void sub_1887FCD20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FileDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::FileDescriptorProto *this, const AddrObjGoogle::protobuf::FileDescriptorProto *a2)
{
  std::string *v4;
  AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *v5;
  uint64_t v6;
  const std::string *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  std::string *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  const AddrObjGoogle::protobuf::DescriptorProto *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  AddrObjGoogle::protobuf::DescriptorProto *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const AddrObjGoogle::protobuf::EnumDescriptorProto *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const AddrObjGoogle::protobuf::ServiceDescriptorProto *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v37;
  uint64_t v38;
  uint64_t v39;
  AddrObjGoogle::protobuf::internal *v40;
  uint64_t v41;
  const AddrObjGoogle::protobuf::FieldDescriptorProto *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  const std::string *v50;
  uint64_t *v51;
  std::string *v52;
  const std::string *v53;
  uint64_t *v54;
  std::string *v55;
  AddrObjGoogle::protobuf::FileOptions *v56;
  const AddrObjGoogle::protobuf::FileOptions *v57;
  AddrObjGoogle::protobuf::SourceCodeInfo *v58;
  const AddrObjGoogle::protobuf::SourceCodeInfo *v59;
  char v60;
  std::string v61[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v61, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 1511);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v61, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v60, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v61[0].__r_.__value_.__l.__data_);
  }
  v5 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 8, *((_DWORD *)a2 + 10) + *((_DWORD *)this + 10));
  if (*((int *)a2 + 10) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const std::string **)(*((_QWORD *)a2 + 4) + 8 * v6);
      v8 = *((_DWORD *)this + 11);
      v9 = *((int *)this + 10);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 12))
        {
          v5 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 8, v8 + 1);
          v8 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v8 + 1;
        v11 = (std::string *)AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New(v5);
        v12 = *((_QWORD *)this + 4);
        v13 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v9 + 1;
        v11 = *(std::string **)(v10 + 8 * v9);
      }
      v5 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 10));
  }
  v14 = *((_DWORD *)a2 + 16);
  if (v14)
  {
    AddrObjGoogle::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 14, *((_DWORD *)this + 16) + v14);
    memcpy((void *)(*((_QWORD *)this + 7) + 4 * *((int *)this + 16)), *((const void **)a2 + 7), 4 * *((int *)a2 + 16));
    *((_DWORD *)this + 16) += *((_DWORD *)a2 + 16);
  }
  v15 = *((_DWORD *)a2 + 20);
  if (v15)
  {
    AddrObjGoogle::protobuf::RepeatedField<int>::Reserve((_DWORD *)this + 18, *((_DWORD *)this + 20) + v15);
    memcpy((void *)(*((_QWORD *)this + 9) + 4 * *((int *)this + 20)), *((const void **)a2 + 9), 4 * *((int *)a2 + 20));
    *((_DWORD *)this + 20) += *((_DWORD *)a2 + 20);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 22, *((_DWORD *)a2 + 24) + *((_DWORD *)this + 24));
  if (*((int *)a2 + 24) >= 1)
  {
    v16 = 0;
    do
    {
      v17 = *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a2 + 11) + 8 * v16);
      v18 = *((_DWORD *)this + 25);
      v19 = *((int *)this + 24);
      if ((int)v19 >= v18)
      {
        if (v18 == *((_DWORD *)this + 26))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 22, v18 + 1);
          v18 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v18 + 1;
        v21 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::DescriptorProto>::New();
        v22 = *((_QWORD *)this + 11);
        v23 = *((int *)this + 24);
        *((_DWORD *)this + 24) = v23 + 1;
        *(_QWORD *)(v22 + 8 * v23) = v21;
      }
      else
      {
        v20 = *((_QWORD *)this + 11);
        *((_DWORD *)this + 24) = v19 + 1;
        v21 = *(AddrObjGoogle::protobuf::DescriptorProto **)(v20 + 8 * v19);
      }
      AddrObjGoogle::protobuf::DescriptorProto::MergeFrom(v21, v17);
      ++v16;
    }
    while (v16 < *((int *)a2 + 24));
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 28, *((_DWORD *)a2 + 30) + *((_DWORD *)this + 30));
  if (*((int *)a2 + 30) >= 1)
  {
    v24 = 0;
    do
    {
      v25 = *(const AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)a2 + 14) + 8 * v24);
      v26 = *((_DWORD *)this + 31);
      v27 = *((int *)this + 30);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 32))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 28, v26 + 1);
          v26 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v26 + 1;
        v29 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::EnumDescriptorProto>::New();
        v30 = *((_QWORD *)this + 14);
        v31 = *((int *)this + 30);
        *((_DWORD *)this + 30) = v31 + 1;
        *(_QWORD *)(v30 + 8 * v31) = v29;
      }
      else
      {
        v28 = *((_QWORD *)this + 14);
        *((_DWORD *)this + 30) = v27 + 1;
        v29 = *(AddrObjGoogle::protobuf::EnumDescriptorProto **)(v28 + 8 * v27);
      }
      AddrObjGoogle::protobuf::EnumDescriptorProto::MergeFrom(v29, v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 30));
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 34, *((_DWORD *)a2 + 36) + *((_DWORD *)this + 36));
  if (*((int *)a2 + 36) >= 1)
  {
    v32 = 0;
    do
    {
      v33 = *(const AddrObjGoogle::protobuf::ServiceDescriptorProto **)(*((_QWORD *)a2 + 17) + 8 * v32);
      v34 = *((_DWORD *)this + 37);
      v35 = *((int *)this + 36);
      if ((int)v35 >= v34)
      {
        if (v34 == *((_DWORD *)this + 38))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 34, v34 + 1);
          v34 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v34 + 1;
        v37 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::ServiceDescriptorProto>::New();
        v38 = *((_QWORD *)this + 17);
        v39 = *((int *)this + 36);
        *((_DWORD *)this + 36) = v39 + 1;
        *(_QWORD *)(v38 + 8 * v39) = v37;
      }
      else
      {
        v36 = *((_QWORD *)this + 17);
        *((_DWORD *)this + 36) = v35 + 1;
        v37 = *(AddrObjGoogle::protobuf::ServiceDescriptorProto **)(v36 + 8 * v35);
      }
      AddrObjGoogle::protobuf::ServiceDescriptorProto::MergeFrom(v37, v33);
      ++v32;
    }
    while (v32 < *((int *)a2 + 36));
  }
  v40 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 40, *((_DWORD *)a2 + 42) + *((_DWORD *)this + 42));
  if (*((int *)a2 + 42) >= 1)
  {
    v41 = 0;
    do
    {
      v42 = *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 20) + 8 * v41);
      v43 = *((_DWORD *)this + 43);
      v44 = *((int *)this + 42);
      if ((int)v44 >= v43)
      {
        if (v43 == *((_DWORD *)this + 44))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 40, v43 + 1);
          v43 = *((_DWORD *)this + 43);
        }
        *((_DWORD *)this + 43) = v43 + 1;
        v46 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FieldDescriptorProto>::New();
        v47 = *((_QWORD *)this + 20);
        v48 = *((int *)this + 42);
        *((_DWORD *)this + 42) = v48 + 1;
        *(_QWORD *)(v47 + 8 * v48) = v46;
      }
      else
      {
        v45 = *((_QWORD *)this + 20);
        *((_DWORD *)this + 42) = v44 + 1;
        v46 = *(AddrObjGoogle::protobuf::FieldDescriptorProto **)(v45 + 8 * v44);
      }
      AddrObjGoogle::protobuf::FieldDescriptorProto::MergeFrom(v46, v42);
      ++v41;
    }
    while (v41 < *((int *)a2 + 42));
  }
  v49 = *((_DWORD *)a2 + 51);
  if ((_BYTE)v49)
  {
    if ((v49 & 1) != 0)
    {
      v50 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 51) |= 1u;
      v51 = (uint64_t *)*((_QWORD *)this + 2);
      if (v51 == AddrObjGoogle::protobuf::internal::kEmptyString(v40))
      {
        v52 = (std::string *)operator new();
        v52->__r_.__value_.__l.__size_ = 0;
        v52->__r_.__value_.__r.__words[2] = 0;
        v52->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v52;
      }
      else
      {
        v52 = (std::string *)*((_QWORD *)this + 2);
      }
      v40 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v52, v50);
      v49 = *((_DWORD *)a2 + 51);
    }
    if ((v49 & 2) != 0)
    {
      v53 = (const std::string *)*((_QWORD *)a2 + 3);
      *((_DWORD *)this + 51) |= 2u;
      v54 = (uint64_t *)*((_QWORD *)this + 3);
      if (v54 == AddrObjGoogle::protobuf::internal::kEmptyString(v40))
      {
        v55 = (std::string *)operator new();
        v55->__r_.__value_.__l.__size_ = 0;
        v55->__r_.__value_.__r.__words[2] = 0;
        v55->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 3) = v55;
      }
      else
      {
        v55 = (std::string *)*((_QWORD *)this + 3);
      }
      v40 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v55, v53);
      v49 = *((_DWORD *)a2 + 51);
    }
  }
  if ((v49 & 0x1FE00) != 0)
  {
    if ((v49 & 0x200) != 0)
    {
      *((_DWORD *)this + 51) |= 0x200u;
      v56 = (AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)this + 23);
      if (!v56)
      {
        v56 = (AddrObjGoogle::protobuf::FileOptions *)operator new();
        v40 = AddrObjGoogle::protobuf::FileOptions::FileOptions(v56);
        *((_QWORD *)this + 23) = v56;
      }
      v57 = (const AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)a2 + 23);
      if (!v57)
        v57 = *(const AddrObjGoogle::protobuf::FileOptions **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(v40)
                                                             + 184);
      AddrObjGoogle::protobuf::FileOptions::MergeFrom(v56, v57);
      v49 = *((_DWORD *)a2 + 51);
    }
    if ((v49 & 0x400) != 0)
    {
      *((_DWORD *)this + 51) |= 0x400u;
      v58 = (AddrObjGoogle::protobuf::SourceCodeInfo *)*((_QWORD *)this + 24);
      if (!v58)
      {
        v58 = (AddrObjGoogle::protobuf::SourceCodeInfo *)operator new();
        v40 = AddrObjGoogle::protobuf::SourceCodeInfo::SourceCodeInfo(v58);
        *((_QWORD *)this + 24) = v58;
      }
      v59 = (const AddrObjGoogle::protobuf::SourceCodeInfo *)*((_QWORD *)a2 + 24);
      if (!v59)
        v59 = *(const AddrObjGoogle::protobuf::SourceCodeInfo **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(v40)
                                                                + 192);
      AddrObjGoogle::protobuf::SourceCodeInfo::MergeFrom(v58, v59);
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::FileDescriptorProto *)((char *)a2 + 8));
}

void sub_1887FD304(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 200) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorProto::default_instance(AddrObjGoogle::protobuf::FileDescriptorProto *this)
{
  AddrObjGoogle::protobuf::FileDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::FileDescriptorProto *)AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::FileDescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::FileDescriptorProto *AddrObjGoogle::protobuf::FileDescriptorProto::New(AddrObjGoogle::protobuf::FileDescriptorProto *this)
{
  AddrObjGoogle::protobuf::FileDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::FileDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::FileDescriptorProto::FileDescriptorProto(v1);
  return v1;
}

void sub_1887FD3D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10B1C4063BD6257);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FileOptions::Clear(uint64_t **this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *result;
  int v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t *v5;
  AddrObjGoogle::protobuf::UnknownFieldSet *v6;
  uint64_t *v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  AddrObjGoogle::protobuf::UnknownFieldSet *v12;
  uint64_t *v13;

  result = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::Clear(this + 1);
  v3 = *((_DWORD *)this + 26);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)this[5];
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(result);
      if (v4 != result)
      {
        v5 = this[5];
        if (*((char *)v5 + 23) < 0)
        {
          *(_BYTE *)*v5 = 0;
          v5[1] = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *((_BYTE *)v5 + 23) = 0;
        }
      }
    }
    if (((_BYTE)this[13] & 2) != 0)
    {
      v6 = (AddrObjGoogle::protobuf::UnknownFieldSet *)this[6];
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(result);
      if (v6 != result)
      {
        v7 = this[6];
        if (*((char *)v7 + 23) < 0)
        {
          *(_BYTE *)*v7 = 0;
          v7[1] = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *((_BYTE *)v7 + 23) = 0;
        }
      }
    }
    *((_WORD *)this + 30) = 0;
    *((_DWORD *)this + 14) = 1;
    if (((_BYTE)this[13] & 0x20) != 0)
    {
      v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)this[8];
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(result);
      if (v8 != result)
      {
        v9 = this[8];
        if (*((char *)v9 + 23) < 0)
        {
          *(_BYTE *)*v9 = 0;
          v9[1] = 0;
        }
        else
        {
          *(_BYTE *)v9 = 0;
          *((_BYTE *)v9 + 23) = 0;
        }
      }
    }
    *((_WORD *)this + 31) = 0;
    v3 = *((_DWORD *)this + 26);
  }
  if ((v3 & 0xFF00) != 0)
    *((_BYTE *)this + 96) = 0;
  if (*((int *)this + 20) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = this[9][v10];
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *((int *)this + 20));
  }
  v13 = this[4];
  v12 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(this + 4);
  *((_DWORD *)v12 + 12) = 0;
  *((_DWORD *)v12 + 18) = 0;
  if (v13)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v12);
  return result;
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::SourceCodeInfo::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  v5 = *(_QWORD *)(v1 + 8);
  v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(AddrObjGoogle::protobuf::internal::WireFormatLite::FieldType)5>(AddrObjGoogle::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  unsigned int v5;
  uint64_t result;
  int v7;
  char *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;

  v12 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!(_DWORD)result)
      return result;
    v5 = v12;
  }
  else
  {
    v5 = *v4;
    v12 = v5;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  v7 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v13 = 0;
      v8 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v8 >= *((_QWORD *)this + 2) || *v8 < 0)
      {
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!(_DWORD)result)
          return result;
        v9 = v13;
      }
      else
      {
        v9 = *v8;
        *((_QWORD *)this + 1) = v8 + 1;
      }
      v10 = a2[2];
      if (v10 == a2[3])
      {
        AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(a2, v10 + 1);
        v10 = a2[2];
      }
      v11 = *(_QWORD *)a2;
      a2[2] = v10 + 1;
      *(_DWORD *)(v11 + 4 * v10) = v9;
    }
    while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)this, v7);
  return 1;
}

uint64_t **AddrObjGoogle::protobuf::FileDescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t **v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t **v18;
  uint64_t *v19;

  v5 = this;
  v6 = *((_DWORD *)this + 51);
  if ((v6 & 1) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
    v6 = *((_DWORD *)v5 + 51);
  }
  if ((v6 & 2) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(2, (uint64_t)v5[3], a2);
  if (*((int *)v5 + 10) >= 1)
  {
    v7 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(3, v5[4][v7++], a2);
    while (v7 < *((int *)v5 + 10));
  }
  if (*((int *)v5 + 24) >= 1)
  {
    v8 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, v5[11][v8++], a2);
    while (v8 < *((int *)v5 + 24));
  }
  if (*((int *)v5 + 30) >= 1)
  {
    v9 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, v5[14][v9++], a2);
    while (v9 < *((int *)v5 + 30));
  }
  if (*((int *)v5 + 36) >= 1)
  {
    v10 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, v5[17][v10++], a2);
    while (v10 < *((int *)v5 + 36));
  }
  if (*((int *)v5 + 42) >= 1)
  {
    v11 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(7, v5[20][v11++], a2);
    while (v11 < *((int *)v5 + 42));
  }
  v12 = *((_DWORD *)v5 + 51);
  if ((v12 & 0x200) != 0)
  {
    v13 = (uint64_t)v5[23];
    if (!v13)
      v13 = *(_QWORD *)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_((AddrObjGoogle::protobuf::FileDescriptorProto *)this)
                      + 184);
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(8, v13, a2);
    v12 = *((_DWORD *)v5 + 51);
  }
  if ((v12 & 0x400) != 0)
  {
    v14 = (uint64_t)v5[24];
    if (!v14)
      v14 = *(_QWORD *)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_((AddrObjGoogle::protobuf::FileDescriptorProto *)this)
                      + 192);
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(9, v14, a2);
  }
  if (*((int *)v5 + 16) >= 1)
  {
    v15 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0xA, *((_DWORD *)v5[7] + v15++), a2, a4);
    while (v15 < *((int *)v5 + 16));
  }
  if (*((int *)v5 + 20) >= 1)
  {
    v16 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0xB, *((_DWORD *)v5[9] + v16++), a2, a4);
    while (v16 < *((int *)v5 + 20));
  }
  v19 = v5[1];
  v18 = v5 + 1;
  v17 = v19;
  if (v19)
  {
    if (*v17 != v17[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v18, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FileDescriptorProto::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::FileDescriptorProto *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  AddrObjGoogle::protobuf::FileDescriptorProto *v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v9;
  _BYTE *v10;
  int v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  const void *v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  _BYTE *v16;
  int v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v22;
  _BYTE *v23;
  int v24;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v25;
  const void *v26;
  uint64_t v27;
  unsigned int *v28;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int *v32;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v33;
  AddrObjGoogle::protobuf::UnknownFieldSet *v34;
  uint64_t v35;
  unsigned int *v36;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v37;
  AddrObjGoogle::protobuf::UnknownFieldSet *v38;
  uint64_t v39;
  unint64_t v40;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v41;
  AddrObjGoogle::protobuf::UnknownFieldSet *v42;
  int v43;
  unsigned int *v44;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v45;
  unsigned __int8 *v46;
  unsigned int *v47;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v48;
  AddrObjGoogle::protobuf::UnknownFieldSet *v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE *v56;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v57;
  _QWORD *v58;
  uint64_t **v59;
  _QWORD *v60;

  v4 = a2;
  v5 = this;
  v6 = *((_DWORD *)this + 51);
  if ((v6 & 1) != 0)
  {
    v7 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    v8 = (char *)a2 + 1;
    if (*(char *)(v7 + 23) < 0)
      v9 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v7 + 8);
    else
      v9 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    if (v9 > 0x7F)
    {
      v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      v10 = (char *)v4 + 2;
    }
    v11 = *(char *)(v7 + 23);
    if (v11 >= 0)
      v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7;
    else
      v12 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v7;
    if (v11 >= 0)
      v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    else
      v13 = (const void *)*(unsigned int *)(v7 + 8);
    this = (AddrObjGoogle::protobuf::FileDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    v4 = this;
    v6 = *((_DWORD *)v5 + 51);
  }
  if ((v6 & 2) != 0)
  {
    v14 = *((_QWORD *)v5 + 3);
    *(_BYTE *)v4 = 18;
    if (*(char *)(v14 + 23) < 0)
      v15 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v14 + 8);
    else
      v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
    if (v15 > 0x7F)
    {
      v16 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      v16 = (char *)v4 + 2;
    }
    v17 = *(char *)(v14 + 23);
    if (v17 >= 0)
      v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v14;
    else
      v18 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v14;
    if (v17 >= 0)
      v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
    else
      v19 = (const void *)*(unsigned int *)(v14 + 8);
    this = (AddrObjGoogle::protobuf::FileDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v18, v19, v16, a4);
    v4 = this;
  }
  if (*((int *)v5 + 10) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(_QWORD *)(*((_QWORD *)v5 + 4) + 8 * v20);
      *(_BYTE *)v4 = 26;
      if (*(char *)(v21 + 23) < 0)
        v22 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v21 + 8);
      else
        v22 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
      if (v22 > 0x7F)
      {
        v23 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v22;
        v23 = (char *)v4 + 2;
      }
      v24 = *(char *)(v21 + 23);
      if (v24 >= 0)
        v25 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v21;
      else
        v25 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v21;
      if (v24 >= 0)
        v26 = (const void *)*(unsigned __int8 *)(v21 + 23);
      else
        v26 = (const void *)*(unsigned int *)(v21 + 8);
      this = (AddrObjGoogle::protobuf::FileDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v25, v26, v23, a4);
      v4 = this;
      ++v20;
    }
    while (v20 < *((int *)v5 + 10));
  }
  if (*((int *)v5 + 24) >= 1)
  {
    v27 = 0;
    do
    {
      v28 = *(unsigned int **)(*((_QWORD *)v5 + 11) + 8 * v27);
      *(_BYTE *)v4 = 34;
      v29 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v28[38];
      if (v29 > 0x7F)
      {
        v30 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v29;
        v30 = (unsigned __int8 *)v4 + 2;
      }
      this = AddrObjGoogle::protobuf::DescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::DescriptorProto *)v28, v30, a3, a4);
      v4 = this;
      ++v27;
    }
    while (v27 < *((int *)v5 + 24));
  }
  if (*((int *)v5 + 30) >= 1)
  {
    v31 = 0;
    do
    {
      v32 = *(unsigned int **)(*((_QWORD *)v5 + 14) + 8 * v31);
      *(_BYTE *)v4 = 42;
      v33 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v32[14];
      if (v33 > 0x7F)
      {
        v34 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v33;
        v34 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::EnumDescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::EnumDescriptorProto *)v32, v34, a3, a4);
      v4 = this;
      ++v31;
    }
    while (v31 < *((int *)v5 + 30));
  }
  if (*((int *)v5 + 36) >= 1)
  {
    v35 = 0;
    do
    {
      v36 = *(unsigned int **)(*((_QWORD *)v5 + 17) + 8 * v35);
      *(_BYTE *)v4 = 50;
      v37 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v36[14];
      if (v37 > 0x7F)
      {
        v38 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v37;
        v38 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::ServiceDescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::ServiceDescriptorProto *)v36, v38, a3, a4);
      v4 = this;
      ++v35;
    }
    while (v35 < *((int *)v5 + 36));
  }
  if (*((int *)v5 + 42) >= 1)
  {
    v39 = 0;
    do
    {
      v40 = *(_QWORD *)(*((_QWORD *)v5 + 20) + 8 * v39);
      *(_BYTE *)v4 = 58;
      v41 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(v40 + 68);
      if (v41 > 0x7F)
      {
        v42 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v41;
        v42 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray(v40, v42, a3, a4);
      v4 = this;
      ++v39;
    }
    while (v39 < *((int *)v5 + 42));
  }
  v43 = *((_DWORD *)v5 + 51);
  if ((v43 & 0x200) != 0)
  {
    v44 = (unsigned int *)*((_QWORD *)v5 + 23);
    if (!v44)
      v44 = *(unsigned int **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(this) + 184);
    *(_BYTE *)v4 = 66;
    v45 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v44[25];
    if (v45 > 0x7F)
    {
      v46 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v45, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v45;
      v46 = (unsigned __int8 *)v4 + 2;
    }
    this = AddrObjGoogle::protobuf::FileOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::FileOptions *)v44, v46, a3);
    v4 = this;
    v43 = *((_DWORD *)v5 + 51);
  }
  if ((v43 & 0x400) != 0)
  {
    v47 = (unsigned int *)*((_QWORD *)v5 + 24);
    if (!v47)
      v47 = *(unsigned int **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(this) + 192);
    *(_BYTE *)v4 = 74;
    v48 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v47[10];
    if (v48 > 0x7F)
    {
      v49 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v48, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v48;
      v49 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    v4 = AddrObjGoogle::protobuf::SourceCodeInfo::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::SourceCodeInfo *)v47, v49, a3, a4);
  }
  if (*((int *)v5 + 16) >= 1)
  {
    v50 = 0;
    while (1)
    {
      v51 = *(int *)(*((_QWORD *)v5 + 7) + 4 * v50);
      *(_BYTE *)v4 = 80;
      v52 = (char *)v4 + 1;
      if ((v51 & 0x80000000) != 0)
        break;
      if (v51 > 0x7F)
      {
        v53 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v51, v52, a3);
        goto LABEL_89;
      }
      *((_BYTE *)v4 + 1) = v51;
      v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_90:
      if (++v50 >= *((int *)v5 + 16))
        goto LABEL_91;
    }
    v53 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v51, v52, a3);
LABEL_89:
    v4 = v53;
    goto LABEL_90;
  }
LABEL_91:
  if (*((int *)v5 + 20) >= 1)
  {
    v54 = 0;
    while (1)
    {
      v55 = *(int *)(*((_QWORD *)v5 + 9) + 4 * v54);
      *(_BYTE *)v4 = 88;
      v56 = (char *)v4 + 1;
      if ((v55 & 0x80000000) != 0)
        break;
      if (v55 > 0x7F)
      {
        v57 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v55, v56, a3);
        goto LABEL_98;
      }
      *((_BYTE *)v4 + 1) = v55;
      v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_99:
      if (++v54 >= *((int *)v5 + 20))
        goto LABEL_100;
    }
    v57 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v55, v56, a3);
LABEL_98:
    v4 = v57;
    goto LABEL_99;
  }
LABEL_100:
  v60 = (_QWORD *)*((_QWORD *)v5 + 1);
  v59 = (uint64_t **)((char *)v5 + 8);
  v58 = v60;
  if (!v60 || *v58 == v58[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v59, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorProto::ByteSize(AddrObjGoogle::protobuf::FileDescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  AddrObjGoogle::protobuf::FileOptions *v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  AddrObjGoogle::protobuf::SourceCodeInfo *v21;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t i;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v65;
  int v66;
  int v67;
  _QWORD *v68;

  v3 = *((_DWORD *)this + 51);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_24;
  }
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if ((v3 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v3 = *((_DWORD *)this + 51);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = v10 + v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 3);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v3 = *((_DWORD *)this + 51);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v4 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v3 & 0x1FE00) != 0)
  {
    if ((v3 & 0x200) != 0)
    {
      v17 = (AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)this + 23);
      if (!v17)
        v17 = *(AddrObjGoogle::protobuf::FileOptions **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(0)
                                                       + 184);
      v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::FileOptions::ByteSize(v17, a2);
      v19 = (int)v18;
      if (v18 >= 0x80)
        v20 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      else
        v20 = 1;
      v4 += v19 + v20 + 1;
      v3 = *((_DWORD *)this + 51);
    }
    if ((v3 & 0x400) != 0)
    {
      v21 = (AddrObjGoogle::protobuf::SourceCodeInfo *)*((_QWORD *)this + 24);
      if (!v21)
        v21 = *(AddrObjGoogle::protobuf::SourceCodeInfo **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(0)
                                                          + 192);
      v22 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::SourceCodeInfo::ByteSize(v21, a2);
      v23 = (int)v22;
      if (v22 >= 0x80)
        v24 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      else
        v24 = 1;
      v4 += v23 + v24 + 1;
    }
  }
  v25 = *((_DWORD *)this + 10);
  v26 = v25 + v4;
  if (v25 >= 1)
  {
    for (i = 0; i < v25; ++i)
    {
      v28 = *(_QWORD *)(*((_QWORD *)this + 4) + 8 * i);
      v29 = *(unsigned __int8 *)(v28 + 23);
      v30 = v29;
      v31 = *(_QWORD *)(v28 + 8);
      if ((v29 & 0x80u) == 0)
        v32 = *(unsigned __int8 *)(v28 + 23);
      else
        v32 = v31;
      if (v32 >= 0x80)
      {
        v33 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v32);
        v29 = *(unsigned __int8 *)(v28 + 23);
        v31 = *(_QWORD *)(v28 + 8);
        v25 = *((_DWORD *)this + 10);
        v30 = *(_BYTE *)(v28 + 23);
      }
      else
      {
        v33 = 1;
      }
      if (v30 < 0)
        v29 = v31;
      v26 += v33 + v29;
    }
  }
  v34 = *((_DWORD *)this + 16);
  if (v34 < 1)
  {
    v36 = 0;
  }
  else
  {
    v35 = 0;
    v36 = 0;
    do
    {
      v37 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 7) + 4 * v35);
      if ((v37 & 0x80000000) != 0)
      {
        v38 = 10;
      }
      else if (v37 >= 0x80)
      {
        v38 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
        v34 = *((_DWORD *)this + 16);
      }
      else
      {
        v38 = 1;
      }
      v36 += v38;
      ++v35;
    }
    while (v35 < v34);
  }
  v39 = *((_DWORD *)this + 20);
  if (v39 < 1)
  {
    v41 = 0;
  }
  else
  {
    v40 = 0;
    v41 = 0;
    do
    {
      v42 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 9) + 4 * v40);
      if ((v42 & 0x80000000) != 0)
      {
        v43 = 10;
      }
      else if (v42 >= 0x80)
      {
        v43 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
        v39 = *((_DWORD *)this + 20);
      }
      else
      {
        v43 = 1;
      }
      v41 += v43;
      ++v40;
    }
    while (v40 < v39);
  }
  v44 = *((_DWORD *)this + 24);
  v45 = v36 + v26 + v39 + v34 + v41 + v44;
  if (v44 >= 1)
  {
    v46 = 0;
    do
    {
      v47 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::DescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)this + 11) + 8 * v46), a2);
      v48 = (int)v47;
      if (v47 >= 0x80)
        v49 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
      else
        v49 = 1;
      v45 += v48 + v49;
      ++v46;
    }
    while (v46 < *((int *)this + 24));
  }
  v50 = *((_DWORD *)this + 30);
  v51 = v50 + v45;
  if (v50 >= 1)
  {
    v52 = 0;
    do
    {
      v53 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::EnumDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 14) + 8 * v52), a2);
      v54 = (int)v53;
      if (v53 >= 0x80)
        v55 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
      else
        v55 = 1;
      v51 += v54 + v55;
      ++v52;
    }
    while (v52 < *((int *)this + 30));
  }
  v56 = *((_DWORD *)this + 36);
  v57 = v56 + v51;
  if (v56 >= 1)
  {
    v58 = 0;
    do
    {
      v59 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::ServiceDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::ServiceDescriptorProto **)(*((_QWORD *)this + 17) + 8 * v58), a2);
      v60 = (int)v59;
      if (v59 >= 0x80)
        v61 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59);
      else
        v61 = 1;
      v57 += v60 + v61;
      ++v58;
    }
    while (v58 < *((int *)this + 36));
  }
  v62 = *((_DWORD *)this + 42);
  v63 = (v62 + v57);
  if (v62 >= 1)
  {
    v64 = 0;
    do
    {
      v65 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::FieldDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 20) + 8 * v64), a2);
      v66 = (int)v65;
      if (v65 >= 0x80)
        v67 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65);
      else
        v67 = 1;
      v63 = (v66 + v63 + v67);
      ++v64;
    }
    while (v64 < *((int *)this + 42));
  }
  v68 = (_QWORD *)*((_QWORD *)this + 1);
  if (v68 && *v68 != v68[1])
    v63 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v63;
  *((_DWORD *)this + 50) = v63;
  return v63;
}

void AddrObjGoogle::protobuf::FileDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::FileDescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::FileDescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 1499);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::FileDescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1887FE27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FileOptions::MergeFrom(AddrObjGoogle::protobuf::FileOptions *this, const AddrObjGoogle::protobuf::FileOptions *a2)
{
  std::string *v4;
  AddrObjGoogle::protobuf::internal *v5;
  uint64_t v6;
  const AddrObjGoogle::protobuf::UninterpretedOption *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::UninterpretedOption *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  const std::string *v17;
  uint64_t *v18;
  std::string *v19;
  const std::string *v20;
  uint64_t *v21;
  std::string *v22;
  char v23;
  char v24;
  int v25;
  const std::string *v26;
  uint64_t *v27;
  std::string *v28;
  char v29;
  char v30;
  std::string v31[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v31, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 4879);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v31, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v30, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v31[0].__r_.__value_.__l.__data_);
  }
  v5 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 18, *((_DWORD *)a2 + 20) + *((_DWORD *)this + 20));
  if (*((int *)a2 + 20) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 9) + 8 * v6);
      v8 = *((_DWORD *)this + 21);
      v9 = *((int *)this + 20);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 22))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 18, v8 + 1);
          v8 = *((_DWORD *)this + 21);
        }
        *((_DWORD *)this + 21) = v8 + 1;
        v11 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v12 = *((_QWORD *)this + 9);
        v13 = *((int *)this + 20);
        *((_DWORD *)this + 20) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 9);
        *((_DWORD *)this + 20) = v9 + 1;
        v11 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v10 + 8 * v9);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 20));
  }
  v14 = *((_DWORD *)a2 + 26);
  if (!(_BYTE)v14)
    goto LABEL_21;
  if ((v14 & 1) != 0)
  {
    v17 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 26) |= 1u;
    v18 = (uint64_t *)*((_QWORD *)this + 5);
    if (v18 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
    {
      v19 = (std::string *)operator new();
      v19->__r_.__value_.__l.__size_ = 0;
      v19->__r_.__value_.__r.__words[2] = 0;
      v19->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v19;
    }
    else
    {
      v19 = (std::string *)*((_QWORD *)this + 5);
    }
    v5 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v19, v17);
    v14 = *((_DWORD *)a2 + 26);
    if ((v14 & 2) == 0)
    {
LABEL_14:
      if ((v14 & 4) == 0)
        goto LABEL_15;
      goto LABEL_32;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_14;
  }
  v20 = (const std::string *)*((_QWORD *)a2 + 6);
  *((_DWORD *)this + 26) |= 2u;
  v21 = (uint64_t *)*((_QWORD *)this + 6);
  if (v21 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
  {
    v22 = (std::string *)operator new();
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 6) = v22;
  }
  else
  {
    v22 = (std::string *)*((_QWORD *)this + 6);
  }
  v5 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v22, v20);
  v14 = *((_DWORD *)a2 + 26);
  if ((v14 & 4) == 0)
  {
LABEL_15:
    if ((v14 & 8) == 0)
      goto LABEL_16;
    goto LABEL_33;
  }
LABEL_32:
  v23 = *((_BYTE *)a2 + 60);
  *((_DWORD *)this + 26) |= 4u;
  *((_BYTE *)this + 60) = v23;
  v14 = *((_DWORD *)a2 + 26);
  if ((v14 & 8) == 0)
  {
LABEL_16:
    if ((v14 & 0x10) == 0)
      goto LABEL_17;
    goto LABEL_34;
  }
LABEL_33:
  v24 = *((_BYTE *)a2 + 61);
  *((_DWORD *)this + 26) |= 8u;
  *((_BYTE *)this + 61) = v24;
  v14 = *((_DWORD *)a2 + 26);
  if ((v14 & 0x10) == 0)
  {
LABEL_17:
    if ((v14 & 0x20) == 0)
      goto LABEL_18;
LABEL_35:
    v26 = (const std::string *)*((_QWORD *)a2 + 8);
    *((_DWORD *)this + 26) |= 0x20u;
    v27 = (uint64_t *)*((_QWORD *)this + 8);
    if (v27 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
    {
      v28 = (std::string *)operator new();
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 8) = v28;
    }
    else
    {
      v28 = (std::string *)*((_QWORD *)this + 8);
    }
    std::string::operator=(v28, v26);
    v14 = *((_DWORD *)a2 + 26);
    if ((v14 & 0x40) == 0)
    {
LABEL_19:
      if ((v14 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_34:
  v25 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 26) |= 0x10u;
  *((_DWORD *)this + 14) = v25;
  v14 = *((_DWORD *)a2 + 26);
  if ((v14 & 0x20) != 0)
    goto LABEL_35;
LABEL_18:
  if ((v14 & 0x40) == 0)
    goto LABEL_19;
LABEL_39:
  v29 = *((_BYTE *)a2 + 62);
  *((_DWORD *)this + 26) |= 0x40u;
  *((_BYTE *)this + 62) = v29;
  v14 = *((_DWORD *)a2 + 26);
  if ((v14 & 0x80) != 0)
  {
LABEL_20:
    v15 = *((_BYTE *)a2 + 63);
    *((_DWORD *)this + 26) |= 0x80u;
    *((_BYTE *)this + 63) = v15;
    v14 = *((_DWORD *)a2 + 26);
  }
LABEL_21:
  if ((v14 & 0x100) != 0)
  {
    v16 = *((_BYTE *)a2 + 96);
    *((_DWORD *)this + 26) |= 0x100u;
    *((_BYTE *)this + 96) = v16;
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::FileOptions *)((char *)a2 + 32));
}

void sub_1887FE5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::SourceCodeInfo::MergeFrom(AddrObjGoogle::protobuf::SourceCodeInfo *this, const AddrObjGoogle::protobuf::SourceCodeInfo *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::SourceCodeInfo_Location *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 8035);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 4, *((_DWORD *)a2 + 6) + *((_DWORD *)this + 6));
  if (*((int *)a2 + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::SourceCodeInfo_Location **)(*((_QWORD *)a2 + 2) + 8 * v5);
      v7 = *((_DWORD *)this + 7);
      v8 = *((int *)this + 6);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 8))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 4, v7 + 1);
          v7 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::SourceCodeInfo_Location>::New();
        v11 = *((_QWORD *)this + 2);
        v12 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::SourceCodeInfo_Location **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::SourceCodeInfo_Location::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 6));
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::SourceCodeInfo *)((char *)a2 + 8));
}

void sub_1887FE6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::FileDescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorProto::GetMetadata(AddrObjGoogle::protobuf::FileDescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50660;
}

void sub_1887FE7D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::MergeFrom(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this, const AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *a2)
{
  std::string *v4;
  int v5;
  int v6;
  int v7;
  char v8;
  std::string v9[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 1796);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 4) = v6;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 7) |= 2u;
      *((_DWORD *)this + 5) = v7;
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)((char *)a2 + 8));
}

void sub_1887FE89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::default_instance(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this)
{
  AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v1;

  v1 = (AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::default_instance_(v1);
}

AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::New(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this)
{
  AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v1;

  v1 = (AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)operator new();
  AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::DescriptorProto_ExtensionRange(v1);
  return v1;
}

void sub_1887FE918(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40380937A6);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::Clear(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *result;
  uint64_t v2;

  if (*((_BYTE *)this + 28))
    *((_QWORD *)this + 2) = 0;
  v2 = *((_QWORD *)this + 1);
  result = (AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t **AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t **v8;
  _QWORD *v9;

  v5 = (uint64_t)this;
  v6 = *((_DWORD *)this + 7);
  if ((v6 & 1) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 4), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (uint64_t **)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  unint64_t v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  _QWORD *v9;
  uint64_t **v10;
  _QWORD *v11;

  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v5 = *((int *)this + 4);
    *(_BYTE *)a2 = 8;
    if ((v5 & 0x80000000) != 0)
    {
      v6 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (_BYTE *)a2 + 1, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = v5;
        a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      v6 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v5, (_BYTE *)a2 + 1, a3);
    }
    a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)v6;
  }
LABEL_8:
  if ((*((_BYTE *)this + 28) & 2) != 0)
  {
    v7 = *((int *)this + 5);
    *(_BYTE *)a2 = 16;
    if ((v7 & 0x80000000) != 0)
    {
      v8 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v7, (_BYTE *)a2 + 1, a3);
    }
    else
    {
      if (v7 <= 0x7F)
      {
        *((_BYTE *)a2 + 1) = v7;
        a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }
      v8 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v7, (_BYTE *)a2 + 1, a3);
    }
    a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)v8;
  }
LABEL_15:
  v11 = (_QWORD *)*((_QWORD *)this + 1);
  v10 = (uint64_t **)((char *)this + 8);
  v9 = v11;
  if (!v11 || *v9 == v9[1])
    return a2;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::ByteSize(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  char v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v6;
  int v7;
  _QWORD *v8;

  v3 = *((_BYTE *)this + 28);
  if (v3)
  {
    if ((*((_BYTE *)this + 28) & 1) == 0)
    {
      v4 = 0;
      if ((*((_BYTE *)this + 28) & 2) == 0)
        goto LABEL_19;
LABEL_13:
      v6 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        v7 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      }
      else
      {
        v7 = 2;
      }
      v4 = (v7 + v4);
      goto LABEL_19;
    }
    v5 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v5 & 0x80000000) != 0)
    {
      v4 = 11;
      if ((v3 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      v4 = 2;
      if ((v3 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    v4 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    if ((*((_DWORD *)this + 7) & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    v4 = 0;
  }
LABEL_19:
  v8 = (_QWORD *)*((_QWORD *)this + 1);
  if (v8 && *v8 != v8[1])
    v4 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v4;
  *((_DWORD *)this + 6) = v4;
  return v4;
}

void AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::MergeFrom(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 1784);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1887FEC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::IsInitialized(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this)
{
  return 1;
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::GetMetadata(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50680;
}

void sub_1887FECF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorProto::MergeFrom(AddrObjGoogle::protobuf::DescriptorProto *this, const AddrObjGoogle::protobuf::DescriptorProto *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::FieldDescriptorProto *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const AddrObjGoogle::protobuf::FieldDescriptorProto *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const AddrObjGoogle::protobuf::DescriptorProto *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  AddrObjGoogle::protobuf::DescriptorProto *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const AddrObjGoogle::protobuf::EnumDescriptorProto *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v34;
  uint64_t v35;
  uint64_t v36;
  AddrObjGoogle::protobuf::internal *v37;
  uint64_t v38;
  const AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  const std::string *v47;
  uint64_t *v48;
  std::string *v49;
  AddrObjGoogle::protobuf::MessageOptions *v50;
  const AddrObjGoogle::protobuf::MessageOptions *v51;
  char v52;
  std::string v53[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v53, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 2254);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v53, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v52, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v53[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 6, *((_DWORD *)a2 + 8) + *((_DWORD *)this + 8));
  if (*((int *)a2 + 8) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 3) + 8 * v5);
      v7 = *((_DWORD *)this + 9);
      v8 = *((int *)this + 8);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 10))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 6, v7 + 1);
          v7 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FieldDescriptorProto>::New();
        v11 = *((_QWORD *)this + 3);
        v12 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::FieldDescriptorProto **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::FieldDescriptorProto::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 8));
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 12, *((_DWORD *)a2 + 14) + *((_DWORD *)this + 14));
  if (*((int *)a2 + 14) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 6) + 8 * v13);
      v15 = *((_DWORD *)this + 15);
      v16 = *((int *)this + 14);
      if ((int)v16 >= v15)
      {
        if (v15 == *((_DWORD *)this + 16))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 12, v15 + 1);
          v15 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v15 + 1;
        v18 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FieldDescriptorProto>::New();
        v19 = *((_QWORD *)this + 6);
        v20 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v20 + 1;
        *(_QWORD *)(v19 + 8 * v20) = v18;
      }
      else
      {
        v17 = *((_QWORD *)this + 6);
        *((_DWORD *)this + 14) = v16 + 1;
        v18 = *(AddrObjGoogle::protobuf::FieldDescriptorProto **)(v17 + 8 * v16);
      }
      AddrObjGoogle::protobuf::FieldDescriptorProto::MergeFrom(v18, v14);
      ++v13;
    }
    while (v13 < *((int *)a2 + 14));
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 18, *((_DWORD *)a2 + 20) + *((_DWORD *)this + 20));
  if (*((int *)a2 + 20) >= 1)
  {
    v21 = 0;
    do
    {
      v22 = *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a2 + 9) + 8 * v21);
      v23 = *((_DWORD *)this + 21);
      v24 = *((int *)this + 20);
      if ((int)v24 >= v23)
      {
        if (v23 == *((_DWORD *)this + 22))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 18, v23 + 1);
          v23 = *((_DWORD *)this + 21);
        }
        *((_DWORD *)this + 21) = v23 + 1;
        v26 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::DescriptorProto>::New();
        v27 = *((_QWORD *)this + 9);
        v28 = *((int *)this + 20);
        *((_DWORD *)this + 20) = v28 + 1;
        *(_QWORD *)(v27 + 8 * v28) = v26;
      }
      else
      {
        v25 = *((_QWORD *)this + 9);
        *((_DWORD *)this + 20) = v24 + 1;
        v26 = *(AddrObjGoogle::protobuf::DescriptorProto **)(v25 + 8 * v24);
      }
      AddrObjGoogle::protobuf::DescriptorProto::MergeFrom(v26, v22);
      ++v21;
    }
    while (v21 < *((int *)a2 + 20));
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 24, *((_DWORD *)a2 + 26) + *((_DWORD *)this + 26));
  if (*((int *)a2 + 26) >= 1)
  {
    v29 = 0;
    do
    {
      v30 = *(const AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)a2 + 12) + 8 * v29);
      v31 = *((_DWORD *)this + 27);
      v32 = *((int *)this + 26);
      if ((int)v32 >= v31)
      {
        if (v31 == *((_DWORD *)this + 28))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 24, v31 + 1);
          v31 = *((_DWORD *)this + 27);
        }
        *((_DWORD *)this + 27) = v31 + 1;
        v34 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::EnumDescriptorProto>::New();
        v35 = *((_QWORD *)this + 12);
        v36 = *((int *)this + 26);
        *((_DWORD *)this + 26) = v36 + 1;
        *(_QWORD *)(v35 + 8 * v36) = v34;
      }
      else
      {
        v33 = *((_QWORD *)this + 12);
        *((_DWORD *)this + 26) = v32 + 1;
        v34 = *(AddrObjGoogle::protobuf::EnumDescriptorProto **)(v33 + 8 * v32);
      }
      AddrObjGoogle::protobuf::EnumDescriptorProto::MergeFrom(v34, v30);
      ++v29;
    }
    while (v29 < *((int *)a2 + 26));
  }
  v37 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 30, *((_DWORD *)a2 + 32) + *((_DWORD *)this + 32));
  if (*((int *)a2 + 32) >= 1)
  {
    v38 = 0;
    do
    {
      v39 = *(const AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange **)(*((_QWORD *)a2 + 15) + 8 * v38);
      v40 = *((_DWORD *)this + 33);
      v41 = *((int *)this + 32);
      if ((int)v41 >= v40)
      {
        if (v40 == *((_DWORD *)this + 34))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 30, v40 + 1);
          v40 = *((_DWORD *)this + 33);
        }
        *((_DWORD *)this + 33) = v40 + 1;
        v43 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange>::New();
        v44 = *((_QWORD *)this + 15);
        v45 = *((int *)this + 32);
        *((_DWORD *)this + 32) = v45 + 1;
        *(_QWORD *)(v44 + 8 * v45) = v43;
      }
      else
      {
        v42 = *((_QWORD *)this + 15);
        *((_DWORD *)this + 32) = v41 + 1;
        v43 = *(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange **)(v42 + 8 * v41);
      }
      AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::MergeFrom(v43, v39);
      ++v38;
    }
    while (v38 < *((int *)a2 + 32));
  }
  LOBYTE(v46) = *((_BYTE *)a2 + 156);
  if ((_BYTE)v46)
  {
    if ((*((_BYTE *)a2 + 156) & 1) != 0)
    {
      v47 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 39) |= 1u;
      v48 = (uint64_t *)*((_QWORD *)this + 2);
      if (v48 == AddrObjGoogle::protobuf::internal::kEmptyString(v37))
      {
        v49 = (std::string *)operator new();
        v49->__r_.__value_.__l.__size_ = 0;
        v49->__r_.__value_.__r.__words[2] = 0;
        v49->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v49;
      }
      else
      {
        v49 = (std::string *)*((_QWORD *)this + 2);
      }
      v37 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v49, v47);
      v46 = *((_DWORD *)a2 + 39);
    }
    if ((v46 & 0x40) != 0)
    {
      *((_DWORD *)this + 39) |= 0x40u;
      v50 = (AddrObjGoogle::protobuf::MessageOptions *)*((_QWORD *)this + 18);
      if (!v50)
      {
        v50 = (AddrObjGoogle::protobuf::MessageOptions *)operator new();
        v37 = AddrObjGoogle::protobuf::MessageOptions::MessageOptions(v50);
        *((_QWORD *)this + 18) = v50;
      }
      v51 = (const AddrObjGoogle::protobuf::MessageOptions *)*((_QWORD *)a2 + 18);
      if (!v51)
        v51 = *(const AddrObjGoogle::protobuf::MessageOptions **)(AddrObjGoogle::protobuf::DescriptorProto::default_instance_(v37)
                                                                + 144);
      AddrObjGoogle::protobuf::MessageOptions::MergeFrom(v50, v51);
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::DescriptorProto *)((char *)a2 + 8));
}

void sub_1887FF194(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 152) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto::default_instance(AddrObjGoogle::protobuf::DescriptorProto *this)
{
  AddrObjGoogle::protobuf::DescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::DescriptorProto *)AddrObjGoogle::protobuf::DescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::DescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::DescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::DescriptorProto *AddrObjGoogle::protobuf::DescriptorProto::New(AddrObjGoogle::protobuf::DescriptorProto *this)
{
  AddrObjGoogle::protobuf::DescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::DescriptorProto *)operator new();
  AddrObjGoogle::protobuf::DescriptorProto::DescriptorProto(v1);
  return v1;
}

void sub_1887FF230(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4073756666);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::DescriptorProto::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v1;
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::UnknownFieldSet *v14;
  uint64_t v15;

  v1 = this;
  if (*((_BYTE *)this + 156))
  {
    if ((*((_BYTE *)this + 156) & 1) != 0)
    {
      v2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v2 != this)
      {
        v3 = *((_QWORD *)v1 + 2);
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 156) & 0x40) != 0)
    {
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 18);
      if (this)
        this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::MessageOptions::Clear((uint64_t **)this);
    }
  }
  if (*((int *)v1 + 8) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)v1 + 3) + 8 * v4);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *((int *)v1 + 8));
  }
  *((_DWORD *)v1 + 8) = 0;
  if (*((int *)v1 + 14) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*((_QWORD *)v1 + 6) + 8 * v6);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *((int *)v1 + 14));
  }
  *((_DWORD *)v1 + 14) = 0;
  if (*((int *)v1 + 20) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*((_QWORD *)v1 + 9) + 8 * v8);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *((int *)v1 + 20));
  }
  *((_DWORD *)v1 + 20) = 0;
  if (*((int *)v1 + 26) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*((_QWORD *)v1 + 12) + 8 * v10);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *((int *)v1 + 26));
  }
  *((_DWORD *)v1 + 26) = 0;
  if (*((int *)v1 + 32) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(_QWORD *)(*((_QWORD *)v1 + 15) + 8 * v12);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13);
      ++v12;
    }
    while (v12 < *((int *)v1 + 32));
  }
  v15 = *((_QWORD *)v1 + 1);
  v14 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v14 + 30) = 0;
  *((_DWORD *)v14 + 37) = 0;
  if (v15)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v14);
  return this;
}

uint64_t **AddrObjGoogle::protobuf::MessageOptions::Clear(uint64_t **this)
{
  uint64_t **result;
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;

  result = AddrObjGoogle::protobuf::internal::ExtensionSet::Clear(this + 1);
  if (*((_BYTE *)this + 72))
    *((_WORD *)this + 32) = 0;
  if (*((int *)this + 12) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = this[5][v3];
      result = (uint64_t **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)this + 12));
  }
  v6 = this[4];
  v5 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(this + 4);
  *((_DWORD *)v5 + 4) = 0;
  *((_DWORD *)v5 + 10) = 0;
  if (v6)
    return (uint64_t **)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v5);
  return result;
}

uint64_t **AddrObjGoogle::protobuf::DescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t **v12;
  uint64_t *v13;

  v4 = this;
  if ((*((_BYTE *)this + 156) & 1) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
  if (*((int *)v4 + 8) >= 1)
  {
    v5 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, v4[3][v5++], a2);
    while (v5 < *((int *)v4 + 8));
  }
  if (*((int *)v4 + 20) >= 1)
  {
    v6 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, v4[9][v6++], a2);
    while (v6 < *((int *)v4 + 20));
  }
  if (*((int *)v4 + 26) >= 1)
  {
    v7 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, v4[12][v7++], a2);
    while (v7 < *((int *)v4 + 26));
  }
  if (*((int *)v4 + 32) >= 1)
  {
    v8 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, v4[15][v8++], a2);
    while (v8 < *((int *)v4 + 32));
  }
  if (*((int *)v4 + 14) >= 1)
  {
    v9 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, v4[6][v9++], a2);
    while (v9 < *((int *)v4 + 14));
  }
  if ((*((_BYTE *)v4 + 156) & 0x40) != 0)
  {
    v10 = (uint64_t)v4[18];
    if (!v10)
      v10 = *(_QWORD *)(AddrObjGoogle::protobuf::DescriptorProto::default_instance_((AddrObjGoogle::protobuf::DescriptorProto *)this)
                      + 144);
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(7, v10, a2);
  }
  v13 = v4[1];
  v12 = v4 + 1;
  v11 = v13;
  if (v13)
  {
    if (*v11 != v11[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::DescriptorProto::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::DescriptorProto *this, unsigned __int8 *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  AddrObjGoogle::protobuf::DescriptorProto *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _BYTE *v9;
  int v10;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v11;
  const void *v12;
  uint64_t v13;
  unint64_t v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  AddrObjGoogle::protobuf::UnknownFieldSet *v16;
  uint64_t v17;
  unsigned int *v18;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unsigned int *v22;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v23;
  AddrObjGoogle::protobuf::UnknownFieldSet *v24;
  uint64_t v25;
  unsigned int *v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v28;
  uint64_t v29;
  unint64_t v30;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v31;
  AddrObjGoogle::protobuf::UnknownFieldSet *v32;
  unsigned int *v33;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v34;
  unsigned __int8 *v35;
  _QWORD *v36;
  uint64_t **v37;
  _QWORD *v38;

  v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)a2;
  v5 = this;
  if ((*((_BYTE *)this + 156) & 1) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    *a2 = 10;
    v7 = a2 + 1;
    if (*(char *)(v6 + 23) < 0)
      v8 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v6 + 8);
    else
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    if (v8 > 0x7F)
    {
      v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v8;
      v9 = (char *)v4 + 2;
    }
    v10 = *(char *)(v6 + 23);
    if (v10 >= 0)
      v11 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6;
    else
      v11 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v6;
    if (v10 >= 0)
      v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    else
      v12 = (const void *)*(unsigned int *)(v6 + 8);
    this = (AddrObjGoogle::protobuf::DescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
    v4 = this;
  }
  if (*((int *)v5 + 8) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(_QWORD *)(*((_QWORD *)v5 + 3) + 8 * v13);
      *(_BYTE *)v4 = 18;
      v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 68);
      if (v15 > 0x7F)
      {
        v16 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v15;
        v16 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray(v14, v16, a3, a4);
      v4 = this;
      ++v13;
    }
    while (v13 < *((int *)v5 + 8));
  }
  if (*((int *)v5 + 20) >= 1)
  {
    v17 = 0;
    do
    {
      v18 = *(unsigned int **)(*((_QWORD *)v5 + 9) + 8 * v17);
      *(_BYTE *)v4 = 26;
      v19 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v18[38];
      if (v19 > 0x7F)
      {
        v20 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v19;
        v20 = (unsigned __int8 *)v4 + 2;
      }
      this = (AddrObjGoogle::protobuf::DescriptorProto *)AddrObjGoogle::protobuf::DescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::DescriptorProto *)v18, v20);
      v4 = this;
      ++v17;
    }
    while (v17 < *((int *)v5 + 20));
  }
  if (*((int *)v5 + 26) >= 1)
  {
    v21 = 0;
    do
    {
      v22 = *(unsigned int **)(*((_QWORD *)v5 + 12) + 8 * v21);
      *(_BYTE *)v4 = 34;
      v23 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v22[14];
      if (v23 > 0x7F)
      {
        v24 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v23;
        v24 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::EnumDescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::EnumDescriptorProto *)v22, v24, a3, a4);
      v4 = this;
      ++v21;
    }
    while (v21 < *((int *)v5 + 26));
  }
  if (*((int *)v5 + 32) >= 1)
  {
    v25 = 0;
    do
    {
      v26 = *(unsigned int **)(*((_QWORD *)v5 + 15) + 8 * v25);
      *(_BYTE *)v4 = 42;
      v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v26[6];
      if (v27 > 0x7F)
      {
        v28 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v27;
        v28 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *)v26, v28, a3, a4);
      v4 = this;
      ++v25;
    }
    while (v25 < *((int *)v5 + 32));
  }
  if (*((int *)v5 + 14) >= 1)
  {
    v29 = 0;
    do
    {
      v30 = *(_QWORD *)(*((_QWORD *)v5 + 6) + 8 * v29);
      *(_BYTE *)v4 = 50;
      v31 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(v30 + 68);
      if (v31 > 0x7F)
      {
        v32 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v31;
        v32 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray(v30, v32, a3, a4);
      v4 = this;
      ++v29;
    }
    while (v29 < *((int *)v5 + 14));
  }
  if ((*((_BYTE *)v5 + 156) & 0x40) != 0)
  {
    v33 = (unsigned int *)*((_QWORD *)v5 + 18);
    if (!v33)
      v33 = *(unsigned int **)(AddrObjGoogle::protobuf::DescriptorProto::default_instance_(this) + 144);
    *(_BYTE *)v4 = 58;
    v34 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v33[17];
    if (v34 > 0x7F)
    {
      v35 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v34;
      v35 = (unsigned __int8 *)v4 + 2;
    }
    v4 = AddrObjGoogle::protobuf::MessageOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::MessageOptions *)v33, v35, a3);
  }
  v38 = (_QWORD *)*((_QWORD *)v5 + 1);
  v37 = (uint64_t **)((char *)v5 + 8);
  v36 = v38;
  if (!v38 || *v36 == v36[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v37, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto::ByteSize(AddrObjGoogle::protobuf::DescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  AddrObjGoogle::protobuf::MessageOptions *v12;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v43;
  int v44;
  int v45;
  _QWORD *v46;

  LOBYTE(v3) = *((_BYTE *)this + 156);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_21;
  }
  if ((*((_BYTE *)this + 156) & 1) == 0)
  {
    v4 = 0;
    if ((*((_BYTE *)this + 156) & 0x40) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v3 = *((_DWORD *)this + 39);
    v10 = v11 + 1;
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = v10 + v6;
  if ((v3 & 0x40) != 0)
  {
LABEL_15:
    v12 = (AddrObjGoogle::protobuf::MessageOptions *)*((_QWORD *)this + 18);
    if (!v12)
      v12 = *(AddrObjGoogle::protobuf::MessageOptions **)(AddrObjGoogle::protobuf::DescriptorProto::default_instance_(0)
                                                        + 144);
    v13 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::MessageOptions::ByteSize(v12, a2);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v4 += v14 + v15 + 1;
  }
LABEL_21:
  v16 = *((_DWORD *)this + 8);
  v17 = v16 + v4;
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::FieldDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 3) + 8 * v18), a2);
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 8));
  }
  v22 = *((_DWORD *)this + 14);
  v23 = v22 + v17;
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::FieldDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)this + 6) + 8 * v24), a2);
      v26 = (int)v25;
      if (v25 >= 0x80)
        v27 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      else
        v27 = 1;
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 14));
  }
  v28 = *((_DWORD *)this + 20);
  v29 = v28 + v23;
  if (v28 >= 1)
  {
    v30 = 0;
    do
    {
      v31 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::DescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)this + 9) + 8 * v30));
      v32 = (int)v31;
      if (v31 >= 0x80)
        v33 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      else
        v33 = 1;
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 20));
  }
  v34 = *((_DWORD *)this + 26);
  v35 = v34 + v29;
  if (v34 >= 1)
  {
    v36 = 0;
    do
    {
      v37 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::EnumDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)this + 12) + 8 * v36), a2);
      v38 = (int)v37;
      if (v37 >= 0x80)
        v39 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      else
        v39 = 1;
      v35 += v38 + v39;
      ++v36;
    }
    while (v36 < *((int *)this + 26));
  }
  v40 = *((_DWORD *)this + 32);
  v41 = (v40 + v35);
  if (v40 >= 1)
  {
    v42 = 0;
    do
    {
      v43 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::ByteSize(*(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange **)(*((_QWORD *)this + 15) + 8 * v42), a2);
      v44 = (int)v43;
      if (v43 >= 0x80)
        v45 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      else
        v45 = 1;
      v41 = (v44 + v41 + v45);
      ++v42;
    }
    while (v42 < *((int *)this + 32));
  }
  v46 = (_QWORD *)*((_QWORD *)this + 1);
  if (v46 && *v46 != v46[1])
    v41 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v41;
  *((_DWORD *)this + 38) = v41;
  return v41;
}

void AddrObjGoogle::protobuf::DescriptorProto::MergeFrom(AddrObjGoogle::protobuf::DescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::DescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 2242);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::DescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1887FFC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MessageOptions::MergeFrom(AddrObjGoogle::protobuf::MessageOptions *this, const AddrObjGoogle::protobuf::MessageOptions *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::UninterpretedOption *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::UninterpretedOption *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  char v15;
  char v16;
  std::string v17[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 5213);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, *((_DWORD *)a2 + 12) + *((_DWORD *)this + 12));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, v7 + 1);
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 72);
  if ((_BYTE)v13)
  {
    if ((*((_BYTE *)a2 + 72) & 1) != 0)
    {
      v14 = *((_BYTE *)a2 + 64);
      *((_DWORD *)this + 18) |= 1u;
      *((_BYTE *)this + 64) = v14;
      v13 = *((_DWORD *)a2 + 18);
    }
    if ((v13 & 2) != 0)
    {
      v15 = *((_BYTE *)a2 + 65);
      *((_DWORD *)this + 18) |= 2u;
      *((_BYTE *)this + 65) = v15;
    }
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::MessageOptions *)((char *)a2 + 32));
}

void sub_1887FFDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::DescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto::GetMetadata(AddrObjGoogle::protobuf::DescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50670;
}

void sub_1887FFEC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FieldDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::FieldDescriptorProto *this, const AddrObjGoogle::protobuf::FieldDescriptorProto *a2)
{
  AddrObjGoogle::protobuf::FieldDescriptorProto *v3;
  std::string *v4;
  int v5;
  const std::string *v6;
  uint64_t *v7;
  std::string *v8;
  int v9;
  int v10;
  int v11;
  const std::string *v12;
  uint64_t *v13;
  std::string *v14;
  const std::string *v15;
  uint64_t *v16;
  std::string *v17;
  const std::string *v18;
  uint64_t *v19;
  std::string *v20;
  AddrObjGoogle::protobuf::FieldOptions *v21;
  const AddrObjGoogle::protobuf::FieldOptions *v22;
  char v23;
  std::string v24[2];

  v3 = this;
  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 2902);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v23, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 72);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 72) & 1) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)v3 + 18) |= 1u;
      v7 = (uint64_t *)*((_QWORD *)v3 + 2);
      if (v7 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 2) = v8;
      }
      else
      {
        v8 = (std::string *)*((_QWORD *)v3 + 2);
      }
      this = (AddrObjGoogle::protobuf::FieldDescriptorProto *)std::string::operator=(v8, v6);
      v5 = *((_DWORD *)a2 + 18);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 72) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 18) |= 2u;
    *((_DWORD *)v3 + 6) = v9;
    v5 = *((_DWORD *)a2 + 18);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)v3 + 18) |= 4u;
    *((_DWORD *)v3 + 7) = v10;
    v5 = *((_DWORD *)a2 + 18);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *((_DWORD *)a2 + 16);
    *((_DWORD *)v3 + 18) |= 8u;
    *((_DWORD *)v3 + 16) = v11;
    v5 = *((_DWORD *)a2 + 18);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_24;
    }
LABEL_20:
    v12 = (const std::string *)*((_QWORD *)a2 + 4);
    *((_DWORD *)v3 + 18) |= 0x10u;
    v13 = (uint64_t *)*((_QWORD *)v3 + 4);
    if (v13 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
    {
      v14 = (std::string *)operator new();
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v3 + 4) = v14;
    }
    else
    {
      v14 = (std::string *)*((_QWORD *)v3 + 4);
    }
    this = (AddrObjGoogle::protobuf::FieldDescriptorProto *)std::string::operator=(v14, v12);
    v5 = *((_DWORD *)a2 + 18);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_28;
    }
LABEL_24:
    v15 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)v3 + 18) |= 0x20u;
    v16 = (uint64_t *)*((_QWORD *)v3 + 5);
    if (v16 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
    {
      v17 = (std::string *)operator new();
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v3 + 5) = v17;
    }
    else
    {
      v17 = (std::string *)*((_QWORD *)v3 + 5);
    }
    this = (AddrObjGoogle::protobuf::FieldDescriptorProto *)std::string::operator=(v17, v15);
    v5 = *((_DWORD *)a2 + 18);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_37;
LABEL_32:
      *((_DWORD *)v3 + 18) |= 0x80u;
      v21 = (AddrObjGoogle::protobuf::FieldOptions *)*((_QWORD *)v3 + 7);
      if (!v21)
      {
        v21 = (AddrObjGoogle::protobuf::FieldOptions *)operator new();
        this = AddrObjGoogle::protobuf::FieldOptions::FieldOptions(v21);
        *((_QWORD *)v3 + 7) = v21;
      }
      v22 = (const AddrObjGoogle::protobuf::FieldOptions *)*((_QWORD *)a2 + 7);
      if (!v22)
        v22 = *(const AddrObjGoogle::protobuf::FieldOptions **)(AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_(this)
                                                              + 56);
      AddrObjGoogle::protobuf::FieldOptions::MergeFrom(v21, v22);
      goto LABEL_37;
    }
LABEL_28:
    v18 = (const std::string *)*((_QWORD *)a2 + 6);
    *((_DWORD *)v3 + 18) |= 0x40u;
    v19 = (uint64_t *)*((_QWORD *)v3 + 6);
    if (v19 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
    {
      v20 = (std::string *)operator new();
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v3 + 6) = v20;
    }
    else
    {
      v20 = (std::string *)*((_QWORD *)v3 + 6);
    }
    this = (AddrObjGoogle::protobuf::FieldDescriptorProto *)std::string::operator=(v20, v18);
    if ((*((_DWORD *)a2 + 18) & 0x80) == 0)
      goto LABEL_37;
    goto LABEL_32;
  }
LABEL_37:
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)v3 + 1, (const AddrObjGoogle::protobuf::FieldDescriptorProto *)((char *)a2 + 8));
}

void sub_188800194(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FieldDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance(AddrObjGoogle::protobuf::FieldDescriptorProto *this)
{
  AddrObjGoogle::protobuf::FieldDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::FieldDescriptorProto *)AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::FieldDescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::FieldDescriptorProto *AddrObjGoogle::protobuf::FieldDescriptorProto::New(AddrObjGoogle::protobuf::FieldDescriptorProto *this)
{
  AddrObjGoogle::protobuf::FieldDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::FieldDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::FieldDescriptorProto::FieldDescriptorProto(v1);
  return v1;
}

void sub_188800230(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4090AC2D2CLL);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FieldDescriptorProto::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v1;
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::UnknownFieldSet *v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::UnknownFieldSet *v10;
  uint64_t v11;

  v1 = this;
  if (*((_BYTE *)this + 72))
  {
    if ((*((_BYTE *)this + 72) & 1) != 0)
    {
      v2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v2 != this)
      {
        v3 = *((_QWORD *)v1 + 2);
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *((_QWORD *)v1 + 3) = 0x100000000;
    *((_DWORD *)v1 + 16) = 1;
    if ((*((_BYTE *)v1 + 72) & 0x10) != 0)
    {
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 4);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v4 != this)
      {
        v5 = *((_QWORD *)v1 + 4);
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 72) & 0x20) != 0)
    {
      v6 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 5);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v6 != this)
      {
        v7 = *((_QWORD *)v1 + 5);
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 72) & 0x40) != 0)
    {
      v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 6);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v8 != this)
      {
        v9 = *((_QWORD *)v1 + 6);
        if (*(char *)(v9 + 23) < 0)
        {
          **(_BYTE **)v9 = 0;
          *(_QWORD *)(v9 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v9 = 0;
          *(_BYTE *)(v9 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 72) & 0x80) != 0)
    {
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 7);
      if (this)
        this = AddrObjGoogle::protobuf::FieldOptions::Clear(this);
    }
  }
  v11 = *((_QWORD *)v1 + 1);
  v10 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v10 + 16) = 0;
  if (v11)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v10);
  return this;
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FieldOptions::Clear(AddrObjGoogle::protobuf::FieldOptions *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *result;
  char v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  uint64_t v9;

  result = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::Clear((uint64_t **)this + 1);
  v3 = *((_BYTE *)this + 84);
  if (v3)
  {
    *(_DWORD *)((char *)this + 43) = 0;
    *((_DWORD *)this + 10) = 0;
    if ((v3 & 0x10) != 0)
    {
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 6);
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(result);
      if (v4 != result)
      {
        v5 = *((_QWORD *)this + 6);
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    *((_BYTE *)this + 47) = 0;
  }
  if (*((int *)this + 16) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*((_QWORD *)this + 7) + 8 * v6);
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *((int *)this + 16));
  }
  v9 = *((_QWORD *)this + 4);
  v8 = (AddrObjGoogle::protobuf::FieldOptions *)((char *)this + 32);
  *((_DWORD *)v8 + 8) = 0;
  *((_DWORD *)v8 + 13) = 0;
  if (v9)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v8);
  return result;
}

uint64_t **AddrObjGoogle::protobuf::FieldDescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t **v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t **v9;
  uint64_t *v10;

  v5 = this;
  v6 = *((_DWORD *)this + 18);
  if ((v6 & 1) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
    v6 = *((_DWORD *)v5 + 18);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(2, (uint64_t)v5[5], a2);
  v6 = *((_DWORD *)v5 + 18);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)3, *((_DWORD *)v5 + 6), a2, a4);
  v6 = *((_DWORD *)v5 + 18);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)4, *((_DWORD *)v5 + 7), a2, a4);
  v6 = *((_DWORD *)v5 + 18);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)5, *((_DWORD *)v5 + 16), a2, a4);
  v6 = *((_DWORD *)v5 + 18);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(6, (uint64_t)v5[4], a2);
  v6 = *((_DWORD *)v5 + 18);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_20;
    goto LABEL_17;
  }
LABEL_16:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(7, (uint64_t)v5[6], a2);
  if (((_DWORD)v5[9] & 0x80) == 0)
    goto LABEL_20;
LABEL_17:
  v7 = (uint64_t)v5[7];
  if (!v7)
    v7 = *(_QWORD *)(AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_((AddrObjGoogle::protobuf::FieldDescriptorProto *)this)
                   + 56);
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(8, v7, a2);
LABEL_20:
  v10 = v5[1];
  v9 = v5 + 1;
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray(unint64_t this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v9;
  _BYTE *v10;
  int v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  const void *v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  _BYTE *v16;
  int v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  const void *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  int v23;
  uint64_t v24;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v25;
  _BYTE *v26;
  int v27;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v28;
  const void *v29;
  uint64_t v30;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v31;
  _BYTE *v32;
  int v33;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v34;
  const void *v35;
  unsigned int *v36;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v37;
  unsigned __int8 *v38;
  _QWORD *v39;
  uint64_t **v40;
  _QWORD *v41;

  v4 = a2;
  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 0x20) == 0)
      goto LABEL_3;
LABEL_18:
    v14 = *(_QWORD *)(v5 + 40);
    *(_BYTE *)v4 = 18;
    if (*(char *)(v14 + 23) < 0)
      v15 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v14 + 8);
    else
      v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
    if (v15 > 0x7F)
    {
      v16 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v15;
      v16 = (char *)v4 + 2;
    }
    v17 = *(char *)(v14 + 23);
    if (v17 >= 0)
      v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v14;
    else
      v18 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v14;
    if (v17 >= 0)
      v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
    else
      v19 = (const void *)*(unsigned int *)(v14 + 8);
    this = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v18, v19, v16, a4);
    v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
    if ((*(_DWORD *)(v5 + 72) & 2) == 0)
      goto LABEL_37;
    goto LABEL_31;
  }
  v7 = *(_QWORD *)(this + 16);
  *(_BYTE *)a2 = 10;
  v8 = (char *)a2 + 1;
  if (*(char *)(v7 + 23) < 0)
    v9 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v7 + 8);
  else
    v9 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
  if (v9 > 0x7F)
  {
    v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v9;
    v10 = (char *)v4 + 2;
  }
  v11 = *(char *)(v7 + 23);
  if (v11 >= 0)
    v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7;
  else
    v12 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v7;
  if (v11 >= 0)
    v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
  else
    v13 = (const void *)*(unsigned int *)(v7 + 8);
  this = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
  v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) != 0)
    goto LABEL_18;
LABEL_3:
  if ((v6 & 2) == 0)
    goto LABEL_37;
LABEL_31:
  this = *(int *)(v5 + 24);
  *(_BYTE *)v4 = 24;
  v20 = (char *)v4 + 1;
  if ((this & 0x80000000) != 0)
  {
    this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(this, v20, a3);
  }
  else
  {
    if (this <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = this;
      v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_37;
    }
    this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, v20, a3);
  }
  v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
LABEL_37:
  if ((*(_BYTE *)(v5 + 72) & 4) == 0)
    goto LABEL_44;
  this = *(int *)(v5 + 28);
  *(_BYTE *)v4 = 32;
  v21 = (char *)v4 + 1;
  if ((this & 0x80000000) != 0)
  {
    this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(this, v21, a3);
  }
  else
  {
    if (this <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = this;
      v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_44;
    }
    this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, v21, a3);
  }
  v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
LABEL_44:
  if ((*(_BYTE *)(v5 + 72) & 8) == 0)
    goto LABEL_51;
  this = *(int *)(v5 + 64);
  *(_BYTE *)v4 = 40;
  v22 = (char *)v4 + 1;
  if ((this & 0x80000000) != 0)
  {
    this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(this, v22, a3);
  }
  else
  {
    if (this <= 0x7F)
    {
      *((_BYTE *)v4 + 1) = this;
      v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_51;
    }
    this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, v22, a3);
  }
  v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
LABEL_51:
  v23 = *(_DWORD *)(v5 + 72);
  if ((v23 & 0x10) != 0)
  {
    v24 = *(_QWORD *)(v5 + 32);
    *(_BYTE *)v4 = 50;
    if (*(char *)(v24 + 23) < 0)
      v25 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v24 + 8);
    else
      v25 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v24 + 23);
    if (v25 > 0x7F)
    {
      v26 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v25;
      v26 = (char *)v4 + 2;
    }
    v27 = *(char *)(v24 + 23);
    if (v27 >= 0)
      v28 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v24;
    else
      v28 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v24;
    if (v27 >= 0)
      v29 = (const void *)*(unsigned __int8 *)(v24 + 23);
    else
      v29 = (const void *)*(unsigned int *)(v24 + 8);
    this = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v28, v29, v26, a4);
    v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
    v23 = *(_DWORD *)(v5 + 72);
    if ((v23 & 0x40) == 0)
    {
LABEL_53:
      if ((v23 & 0x80) == 0)
        goto LABEL_87;
      goto LABEL_81;
    }
  }
  else if ((v23 & 0x40) == 0)
  {
    goto LABEL_53;
  }
  v30 = *(_QWORD *)(v5 + 48);
  *(_BYTE *)v4 = 58;
  if (*(char *)(v30 + 23) < 0)
    v31 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v30 + 8);
  else
    v31 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v30 + 23);
  if (v31 > 0x7F)
  {
    v32 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (_BYTE *)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v31;
    v32 = (char *)v4 + 2;
  }
  v33 = *(char *)(v30 + 23);
  if (v33 >= 0)
    v34 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v30;
  else
    v34 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v30;
  if (v33 >= 0)
    v35 = (const void *)*(unsigned __int8 *)(v30 + 23);
  else
    v35 = (const void *)*(unsigned int *)(v30 + 8);
  this = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v34, v35, v32, a4);
  v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
  if ((*(_DWORD *)(v5 + 72) & 0x80) == 0)
    goto LABEL_87;
LABEL_81:
  v36 = *(unsigned int **)(v5 + 56);
  if (!v36)
    v36 = *(unsigned int **)(AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_((AddrObjGoogle::protobuf::FieldDescriptorProto *)this)
                           + 56);
  *(_BYTE *)v4 = 66;
  v37 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v36[20];
  if (v37 > 0x7F)
  {
    v38 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, (_BYTE *)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v37;
    v38 = (unsigned __int8 *)v4 + 2;
  }
  v4 = AddrObjGoogle::protobuf::FieldOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::FieldOptions *)v36, v38, a3);
LABEL_87:
  v41 = *(_QWORD **)(v5 + 8);
  v40 = (uint64_t **)(v5 + 8);
  v39 = v41;
  if (!v41 || *v39 == v39[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v40, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::FieldDescriptorProto::ByteSize(AddrObjGoogle::protobuf::FieldDescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v11;
  int v12;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v13;
  int v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  AddrObjGoogle::protobuf::FieldOptions *v35;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v36;
  int v37;
  int v38;
  _QWORD *v39;

  LOBYTE(v3) = *((_BYTE *)this + 72);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_73;
  }
  if ((*((_BYTE *)this + 72) & 1) == 0)
  {
    v4 = 0;
    if ((*((_BYTE *)this + 72) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v3 = *((_DWORD *)this + 18);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 1;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = (v10 + v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    v11 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      v12 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      v3 = *((_DWORD *)this + 18);
    }
    else
    {
      v12 = 1;
    }
    v4 = (v4 + v12 + 1);
  }
LABEL_21:
  if ((v3 & 4) != 0)
  {
    v13 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      v14 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      v3 = *((_DWORD *)this + 18);
    }
    else
    {
      v14 = 2;
    }
    v4 = (v14 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_23:
      if ((v3 & 0x10) == 0)
        goto LABEL_24;
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_23;
  }
  v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v15 & 0x80000000) != 0)
  {
    v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    v16 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    v3 = *((_DWORD *)this + 18);
  }
  else
  {
    v16 = 2;
  }
  v4 = (v16 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_24:
    if ((v3 & 0x20) == 0)
      goto LABEL_25;
    goto LABEL_49;
  }
LABEL_40:
  v17 = *((_QWORD *)this + 4);
  v18 = *(unsigned __int8 *)(v17 + 23);
  v19 = v18;
  v20 = *(_QWORD *)(v17 + 8);
  if ((v18 & 0x80u) == 0)
    v21 = *(unsigned __int8 *)(v17 + 23);
  else
    v21 = v20;
  if (v21 >= 0x80)
  {
    v22 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v21);
    v18 = *(unsigned __int8 *)(v17 + 23);
    v20 = *(_QWORD *)(v17 + 8);
    v3 = *((_DWORD *)this + 18);
    v19 = *(_BYTE *)(v17 + 23);
  }
  else
  {
    v22 = 1;
  }
  if (v19 < 0)
    v18 = v20;
  v4 = (v4 + v22 + v18 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_25:
    if ((v3 & 0x40) == 0)
      goto LABEL_26;
    goto LABEL_58;
  }
LABEL_49:
  v23 = *((_QWORD *)this + 5);
  v24 = *(unsigned __int8 *)(v23 + 23);
  v25 = v24;
  v26 = *(_QWORD *)(v23 + 8);
  if ((v24 & 0x80u) == 0)
    v27 = *(unsigned __int8 *)(v23 + 23);
  else
    v27 = v26;
  if (v27 >= 0x80)
  {
    v28 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v27);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v26 = *(_QWORD *)(v23 + 8);
    v3 = *((_DWORD *)this + 18);
    v25 = *(_BYTE *)(v23 + 23);
  }
  else
  {
    v28 = 1;
  }
  if (v25 < 0)
    v24 = v26;
  v4 = (v4 + v28 + v24 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_26:
    if ((v3 & 0x80) == 0)
      goto LABEL_73;
    goto LABEL_67;
  }
LABEL_58:
  v29 = *((_QWORD *)this + 6);
  v30 = *(unsigned __int8 *)(v29 + 23);
  v31 = v30;
  v32 = *(_QWORD *)(v29 + 8);
  if ((v30 & 0x80u) == 0)
    v33 = *(unsigned __int8 *)(v29 + 23);
  else
    v33 = v32;
  if (v33 >= 0x80)
  {
    v34 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v33);
    v30 = *(unsigned __int8 *)(v29 + 23);
    v32 = *(_QWORD *)(v29 + 8);
    v3 = *((_DWORD *)this + 18);
    v31 = *(_BYTE *)(v29 + 23);
  }
  else
  {
    v34 = 1;
  }
  if (v31 < 0)
    v30 = v32;
  v4 = (v4 + v34 + v30 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_67:
    v35 = (AddrObjGoogle::protobuf::FieldOptions *)*((_QWORD *)this + 7);
    if (!v35)
      v35 = *(AddrObjGoogle::protobuf::FieldOptions **)(AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_(0)
                                                      + 56);
    v36 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::FieldOptions::ByteSize(v35, a2);
    v37 = (int)v36;
    if (v36 >= 0x80)
      v38 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
    else
      v38 = 1;
    v4 = (v4 + v37 + v38 + 1);
  }
LABEL_73:
  v39 = (_QWORD *)*((_QWORD *)this + 1);
  if (v39 && *v39 != v39[1])
    v4 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v4;
  *((_DWORD *)this + 17) = v4;
  return v4;
}

void AddrObjGoogle::protobuf::FieldDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::FieldDescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::FieldDescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 2890);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::FieldDescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188800C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FieldOptions::MergeFrom(AddrObjGoogle::protobuf::FieldOptions *this, const AddrObjGoogle::protobuf::FieldOptions *a2)
{
  std::string *v4;
  int *v5;
  uint64_t v6;
  const AddrObjGoogle::protobuf::UninterpretedOption *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::UninterpretedOption *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  int v16;
  char v17;
  char v18;
  char v19;
  const std::string *v20;
  uint64_t *v21;
  std::string *v22;
  char v23;
  std::string v24[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 5703);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v23, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  v5 = AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 14, *((_DWORD *)a2 + 16) + *((_DWORD *)this + 16));
  if (*((int *)a2 + 16) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 7) + 8 * v6);
      v8 = *((_DWORD *)this + 17);
      v9 = *((int *)this + 16);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 18))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 14, v8 + 1);
          v8 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v8 + 1;
        v11 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v12 = *((_QWORD *)this + 7);
        v13 = *((int *)this + 16);
        *((_DWORD *)this + 16) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 7);
        *((_DWORD *)this + 16) = v9 + 1;
        v11 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v10 + 8 * v9);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 16));
  }
  LOBYTE(v14) = *((_BYTE *)a2 + 84);
  if (!(_BYTE)v14)
    goto LABEL_19;
  if ((*((_BYTE *)a2 + 84) & 1) != 0)
  {
    v16 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 21) |= 1u;
    *((_DWORD *)this + 10) = v16;
    v14 = *((_DWORD *)a2 + 21);
    if ((v14 & 2) == 0)
    {
LABEL_14:
      if ((v14 & 4) == 0)
        goto LABEL_15;
      goto LABEL_22;
    }
  }
  else if ((*((_BYTE *)a2 + 84) & 2) == 0)
  {
    goto LABEL_14;
  }
  v17 = *((_BYTE *)a2 + 44);
  *((_DWORD *)this + 21) |= 2u;
  *((_BYTE *)this + 44) = v17;
  v14 = *((_DWORD *)a2 + 21);
  if ((v14 & 4) == 0)
  {
LABEL_15:
    if ((v14 & 8) == 0)
      goto LABEL_16;
    goto LABEL_23;
  }
LABEL_22:
  v18 = *((_BYTE *)a2 + 45);
  *((_DWORD *)this + 21) |= 4u;
  *((_BYTE *)this + 45) = v18;
  v14 = *((_DWORD *)a2 + 21);
  if ((v14 & 8) == 0)
  {
LABEL_16:
    if ((v14 & 0x10) == 0)
      goto LABEL_17;
LABEL_24:
    v20 = (const std::string *)*((_QWORD *)a2 + 6);
    *((_DWORD *)this + 21) |= 0x10u;
    v21 = (uint64_t *)*((_QWORD *)this + 6);
    if (v21 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v5))
    {
      v22 = (std::string *)operator new();
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 6) = v22;
    }
    else
    {
      v22 = (std::string *)*((_QWORD *)this + 6);
    }
    std::string::operator=(v22, v20);
    if ((*((_DWORD *)a2 + 21) & 0x20) != 0)
      goto LABEL_18;
    goto LABEL_19;
  }
LABEL_23:
  v19 = *((_BYTE *)a2 + 46);
  *((_DWORD *)this + 21) |= 8u;
  *((_BYTE *)this + 46) = v19;
  v14 = *((_DWORD *)a2 + 21);
  if ((v14 & 0x10) != 0)
    goto LABEL_24;
LABEL_17:
  if ((v14 & 0x20) != 0)
  {
LABEL_18:
    v15 = *((_BYTE *)a2 + 47);
    *((_DWORD *)this + 21) |= 0x20u;
    *((_BYTE *)this + 47) = v15;
  }
LABEL_19:
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::FieldOptions *)((char *)a2 + 32));
}

void sub_188800E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::FieldDescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::FieldDescriptorProto::GetMetadata(AddrObjGoogle::protobuf::FieldDescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50690;
}

void sub_188800F60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::EnumDescriptorProto *this, const AddrObjGoogle::protobuf::EnumDescriptorProto *a2)
{
  std::string *v4;
  AddrObjGoogle::protobuf::internal *v5;
  uint64_t v6;
  const AddrObjGoogle::protobuf::EnumValueDescriptorProto *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  const std::string *v15;
  uint64_t *v16;
  std::string *v17;
  AddrObjGoogle::protobuf::EnumOptions *v18;
  const AddrObjGoogle::protobuf::EnumOptions *v19;
  char v20;
  std::string v21[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 3235);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  v5 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 6, *((_DWORD *)a2 + 8) + *((_DWORD *)this + 8));
  if (*((int *)a2 + 8) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const AddrObjGoogle::protobuf::EnumValueDescriptorProto **)(*((_QWORD *)a2 + 3) + 8 * v6);
      v8 = *((_DWORD *)this + 9);
      v9 = *((int *)this + 8);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 10))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 6, v8 + 1);
          v8 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v8 + 1;
        v11 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::EnumValueDescriptorProto>::New();
        v12 = *((_QWORD *)this + 3);
        v13 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v9 + 1;
        v11 = *(AddrObjGoogle::protobuf::EnumValueDescriptorProto **)(v10 + 8 * v9);
      }
      AddrObjGoogle::protobuf::EnumValueDescriptorProto::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 8));
  }
  LOBYTE(v14) = *((_BYTE *)a2 + 60);
  if ((_BYTE)v14)
  {
    if ((*((_BYTE *)a2 + 60) & 1) != 0)
    {
      v15 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 15) |= 1u;
      v16 = (uint64_t *)*((_QWORD *)this + 2);
      if (v16 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
      {
        v17 = (std::string *)operator new();
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v17;
      }
      else
      {
        v17 = (std::string *)*((_QWORD *)this + 2);
      }
      v5 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v17, v15);
      v14 = *((_DWORD *)a2 + 15);
    }
    if ((v14 & 4) != 0)
    {
      *((_DWORD *)this + 15) |= 4u;
      v18 = (AddrObjGoogle::protobuf::EnumOptions *)*((_QWORD *)this + 6);
      if (!v18)
      {
        v18 = (AddrObjGoogle::protobuf::EnumOptions *)operator new();
        v5 = AddrObjGoogle::protobuf::EnumOptions::EnumOptions(v18);
        *((_QWORD *)this + 6) = v18;
      }
      v19 = (const AddrObjGoogle::protobuf::EnumOptions *)*((_QWORD *)a2 + 6);
      if (!v19)
        v19 = *(const AddrObjGoogle::protobuf::EnumOptions **)(AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(v5)
                                                             + 48);
      AddrObjGoogle::protobuf::EnumOptions::MergeFrom(v18, v19);
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::EnumDescriptorProto *)((char *)a2 + 8));
}

void sub_18880115C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance(AddrObjGoogle::protobuf::EnumDescriptorProto *this)
{
  AddrObjGoogle::protobuf::EnumDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::EnumDescriptorProto *)AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::EnumDescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::EnumDescriptorProto *AddrObjGoogle::protobuf::EnumDescriptorProto::New(AddrObjGoogle::protobuf::EnumDescriptorProto *this)
{
  AddrObjGoogle::protobuf::EnumDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::EnumDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::EnumDescriptorProto::EnumDescriptorProto(v1);
  return v1;
}

void sub_1888011F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::EnumDescriptorProto::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v1;
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::UnknownFieldSet *v6;
  uint64_t v7;

  v1 = this;
  if (*((_BYTE *)this + 60))
  {
    if ((*((_BYTE *)this + 60) & 1) != 0)
    {
      v2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v2 != this)
      {
        v3 = *((_QWORD *)v1 + 2);
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 60) & 4) != 0)
    {
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 6);
      if (this)
        this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::EnumOptions::Clear((uint64_t **)this);
    }
  }
  if (*((int *)v1 + 8) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)v1 + 3) + 8 * v4);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *((int *)v1 + 8));
  }
  v7 = *((_QWORD *)v1 + 1);
  v6 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v6 + 6) = 0;
  *((_DWORD *)v6 + 13) = 0;
  if (v7)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v6);
  return this;
}

uint64_t **AddrObjGoogle::protobuf::EnumOptions::Clear(uint64_t **this)
{
  uint64_t **result;
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;

  result = AddrObjGoogle::protobuf::internal::ExtensionSet::Clear(this + 1);
  if (*((_BYTE *)this + 72))
    *((_BYTE *)this + 64) = 1;
  if (*((int *)this + 12) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = this[5][v3];
      result = (uint64_t **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)this + 12));
  }
  v6 = this[4];
  v5 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(this + 4);
  *((_DWORD *)v5 + 4) = 0;
  *((_DWORD *)v5 + 10) = 0;
  if (v6)
    return (uint64_t **)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v5);
  return result;
}

uint64_t **AddrObjGoogle::protobuf::EnumDescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v9;

  v4 = this;
  if ((*((_BYTE *)this + 60) & 1) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
  if (*((int *)v4 + 8) >= 1)
  {
    v5 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, v4[3][v5++], a2);
    while (v5 < *((int *)v4 + 8));
  }
  if ((*((_BYTE *)v4 + 60) & 4) != 0)
  {
    v6 = (uint64_t)v4[6];
    if (!v6)
      v6 = *(_QWORD *)(AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_((AddrObjGoogle::protobuf::EnumDescriptorProto *)this)
                     + 48);
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, v6, a2);
  }
  v9 = v4[1];
  v8 = v4 + 1;
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::EnumDescriptorProto::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::EnumDescriptorProto *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v5;
  uint64_t v6;
  _BYTE *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _BYTE *v9;
  int v10;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v11;
  const void *v12;
  uint64_t v13;
  unint64_t v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  AddrObjGoogle::protobuf::UnknownFieldSet *v16;
  unsigned int *v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  unsigned __int8 *v19;
  _QWORD *v20;
  uint64_t **v21;
  _QWORD *v22;

  v4 = a2;
  v5 = this;
  if ((*((_BYTE *)this + 60) & 1) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    v7 = (char *)a2 + 1;
    if (*(char *)(v6 + 23) < 0)
      v8 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v6 + 8);
    else
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    if (v8 > 0x7F)
    {
      v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v8;
      v9 = (char *)v4 + 2;
    }
    v10 = *(char *)(v6 + 23);
    if (v10 >= 0)
      v11 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6;
    else
      v11 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v6;
    if (v10 >= 0)
      v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    else
      v12 = (const void *)*(unsigned int *)(v6 + 8);
    this = (AddrObjGoogle::protobuf::EnumDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
    v4 = this;
  }
  if (*((int *)v5 + 8) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(_QWORD *)(*((_QWORD *)v5 + 3) + 8 * v13);
      *(_BYTE *)v4 = 18;
      v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 36);
      if (v15 > 0x7F)
      {
        v16 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v15;
        v16 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::EnumValueDescriptorProto::SerializeWithCachedSizesToArray(v14, v16, a3, a4);
      v4 = this;
      ++v13;
    }
    while (v13 < *((int *)v5 + 8));
  }
  if ((*((_BYTE *)v5 + 60) & 4) != 0)
  {
    v17 = (unsigned int *)*((_QWORD *)v5 + 6);
    if (!v17)
      v17 = *(unsigned int **)(AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(this) + 48);
    *(_BYTE *)v4 = 26;
    v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v17[17];
    if (v18 > 0x7F)
    {
      v19 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v18;
      v19 = (unsigned __int8 *)v4 + 2;
    }
    v4 = AddrObjGoogle::protobuf::EnumOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::EnumOptions *)v17, v19, a3);
  }
  v22 = (_QWORD *)*((_QWORD *)v5 + 1);
  v21 = (uint64_t **)((char *)v5 + 8);
  v20 = v22;
  if (!v22 || *v20 == v20[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptorProto::ByteSize(AddrObjGoogle::protobuf::EnumDescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  AddrObjGoogle::protobuf::EnumOptions *v12;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  _QWORD *v22;

  LOBYTE(v3) = *((_BYTE *)this + 60);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_21;
  }
  if ((*((_BYTE *)this + 60) & 1) == 0)
  {
    v4 = 0;
    if ((*((_BYTE *)this + 60) & 4) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = v11 + 1;
    v3 = *((_DWORD *)this + 15);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = v10 + v6;
  if ((v3 & 4) != 0)
  {
LABEL_15:
    v12 = (AddrObjGoogle::protobuf::EnumOptions *)*((_QWORD *)this + 6);
    if (!v12)
      v12 = *(AddrObjGoogle::protobuf::EnumOptions **)(AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(0)
                                                     + 48);
    v13 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::EnumOptions::ByteSize(v12, a2);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v4 += v14 + v15 + 1;
  }
LABEL_21:
  v16 = *((_DWORD *)this + 8);
  v17 = (v16 + v4);
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::EnumValueDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::EnumValueDescriptorProto **)(*((_QWORD *)this + 3) + 8 * v18), a2);
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 8));
  }
  v22 = (_QWORD *)*((_QWORD *)this + 1);
  if (v22 && *v22 != v22[1])
    v17 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v17;
  *((_DWORD *)this + 14) = v17;
  return v17;
}

void AddrObjGoogle::protobuf::EnumDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::EnumDescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::EnumDescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 3223);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::EnumDescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1888017A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumOptions::MergeFrom(AddrObjGoogle::protobuf::EnumOptions *this, const AddrObjGoogle::protobuf::EnumOptions *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::UninterpretedOption *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::UninterpretedOption *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  std::string v15[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 5989);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, *((_DWORD *)a2 + 12) + *((_DWORD *)this + 12));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, v7 + 1);
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  if ((*((_BYTE *)a2 + 72) & 1) != 0)
  {
    v13 = *((_BYTE *)a2 + 64);
    *((_DWORD *)this + 18) |= 1u;
    *((_BYTE *)this + 64) = v13;
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::EnumOptions *)((char *)a2 + 32));
}

void sub_188801914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::EnumDescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptorProto::GetMetadata(AddrObjGoogle::protobuf::EnumDescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF506B0;
}

void sub_1888019EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumValueDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this, const AddrObjGoogle::protobuf::EnumValueDescriptorProto *a2)
{
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v3;
  std::string *v4;
  int v5;
  const std::string *v6;
  uint64_t *v7;
  std::string *v8;
  int v9;
  AddrObjGoogle::protobuf::EnumValueOptions *v10;
  const AddrObjGoogle::protobuf::EnumValueOptions *v11;
  char v12;
  std::string v13[2];

  v3 = this;
  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 3547);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)v3 + 10) |= 1u;
      v7 = (uint64_t *)*((_QWORD *)v3 + 2);
      if (v7 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 2) = v8;
      }
      else
      {
        v8 = (std::string *)*((_QWORD *)v3 + 2);
      }
      this = (AddrObjGoogle::protobuf::EnumValueDescriptorProto *)std::string::operator=(v8, v6);
      v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_18;
LABEL_13:
        *((_DWORD *)v3 + 10) |= 4u;
        v10 = (AddrObjGoogle::protobuf::EnumValueOptions *)*((_QWORD *)v3 + 3);
        if (!v10)
        {
          v10 = (AddrObjGoogle::protobuf::EnumValueOptions *)operator new();
          this = AddrObjGoogle::protobuf::EnumValueOptions::EnumValueOptions(v10);
          *((_QWORD *)v3 + 3) = v10;
        }
        v11 = (const AddrObjGoogle::protobuf::EnumValueOptions *)*((_QWORD *)a2 + 3);
        if (!v11)
          v11 = *(const AddrObjGoogle::protobuf::EnumValueOptions **)(AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_(this)
                                                                    + 24);
        AddrObjGoogle::protobuf::EnumValueOptions::MergeFrom(v10, v11);
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = *((_DWORD *)a2 + 8);
    *((_DWORD *)v3 + 10) |= 2u;
    *((_DWORD *)v3 + 8) = v9;
    if ((*((_DWORD *)a2 + 10) & 4) == 0)
      goto LABEL_18;
    goto LABEL_13;
  }
LABEL_18:
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)v3 + 1, (const AddrObjGoogle::protobuf::EnumValueDescriptorProto *)((char *)a2 + 8));
}

void sub_188801B60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::EnumValueDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this)
{
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::EnumValueDescriptorProto *)AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::EnumValueDescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::EnumValueDescriptorProto *AddrObjGoogle::protobuf::EnumValueDescriptorProto::New(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this)
{
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::EnumValueDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto(v1);
  return v1;
}

void sub_188801BFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406601F8D4);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::EnumValueDescriptorProto::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v1;
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*((_BYTE *)this + 40))
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
    {
      v2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v2 != this)
      {
        v3 = *((_QWORD *)v1 + 2);
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *((_DWORD *)v1 + 8) = 0;
    if ((*((_BYTE *)v1 + 40) & 4) != 0)
    {
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 3);
      if (this)
        this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::EnumValueOptions::Clear((uint64_t **)this);
    }
  }
  v5 = *((_QWORD *)v1 + 1);
  v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v4 + 8) = 0;
  if (v5)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t **AddrObjGoogle::protobuf::EnumValueOptions::Clear(uint64_t **this)
{
  uint64_t **result;
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;

  result = AddrObjGoogle::protobuf::internal::ExtensionSet::Clear(this + 1);
  if (*((int *)this + 12) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = this[5][v3];
      result = (uint64_t **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)this + 12));
  }
  v6 = this[4];
  v5 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(this + 4);
  *((_DWORD *)v5 + 4) = 0;
  *((_DWORD *)v5 + 9) = 0;
  if (v6)
    return (uint64_t **)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v5);
  return result;
}

uint64_t **AddrObjGoogle::protobuf::EnumValueDescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t **v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t **v9;
  uint64_t *v10;

  v5 = this;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
    v6 = *((_DWORD *)v5 + 10);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_10;
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 8), a2, a4);
  if (((_DWORD)v5[5] & 4) == 0)
    goto LABEL_10;
LABEL_7:
  v7 = (uint64_t)v5[3];
  if (!v7)
    v7 = *(_QWORD *)(AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_((AddrObjGoogle::protobuf::EnumValueDescriptorProto *)this)
                   + 24);
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, v7, a2);
LABEL_10:
  v10 = v5[1];
  v9 = v5 + 1;
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::EnumValueDescriptorProto::SerializeWithCachedSizesToArray(unint64_t this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v9;
  _BYTE *v10;
  int v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  const void *v13;
  _BYTE *v14;
  unsigned int *v15;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v16;
  unsigned __int8 *v17;
  _QWORD *v18;
  uint64_t **v19;
  _QWORD *v20;

  v4 = a2;
  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 16);
    *(_BYTE *)a2 = 10;
    v8 = (char *)a2 + 1;
    if (*(char *)(v7 + 23) < 0)
      v9 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v7 + 8);
    else
      v9 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    if (v9 > 0x7F)
    {
      v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      v10 = (char *)v4 + 2;
    }
    v11 = *(char *)(v7 + 23);
    if (v11 >= 0)
      v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7;
    else
      v12 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v7;
    if (v11 >= 0)
      v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    else
      v13 = (const void *)*(unsigned int *)(v7 + 8);
    this = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
    v6 = *(_DWORD *)(v5 + 40);
  }
  if ((v6 & 2) != 0)
  {
    this = *(int *)(v5 + 32);
    *(_BYTE *)v4 = 16;
    v14 = (char *)v4 + 1;
    if ((this & 0x80000000) != 0)
    {
      this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(this, v14, a3);
    }
    else
    {
      if (this <= 0x7F)
      {
        *((_BYTE *)v4 + 1) = this;
        v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_22;
      }
      this = (unint64_t)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, v14, a3);
    }
    v4 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)this;
  }
LABEL_22:
  if ((*(_BYTE *)(v5 + 40) & 4) != 0)
  {
    v15 = *(unsigned int **)(v5 + 24);
    if (!v15)
      v15 = *(unsigned int **)(AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_((AddrObjGoogle::protobuf::EnumValueDescriptorProto *)this)
                             + 24);
    *(_BYTE *)v4 = 26;
    v16 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v15[16];
    if (v16 > 0x7F)
    {
      v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v16;
      v17 = (unsigned __int8 *)v4 + 2;
    }
    v4 = AddrObjGoogle::protobuf::EnumValueOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::EnumValueOptions *)v15, v17, a3);
  }
  v20 = *(_QWORD **)(v5 + 8);
  v19 = (uint64_t **)(v5 + 8);
  v18 = v20;
  if (!v20 || *v18 == v18[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v19, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::EnumValueDescriptorProto::ByteSize(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  int v13;
  AddrObjGoogle::protobuf::EnumValueOptions *v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  _QWORD *v18;

  LOBYTE(v3) = *((_BYTE *)this + 40);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v5 = *((_QWORD *)this + 2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v10 = v11 + 1;
      v3 = *((_DWORD *)this + 10);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 2;
    }
    if (v7 < 0)
      v6 = v8;
    v4 = (v10 + v6);
    if ((v3 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v4 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_21;
  }
  v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v3 = *((_DWORD *)this + 10);
  }
  else
  {
    v13 = 2;
  }
  v4 = (v13 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    v14 = (AddrObjGoogle::protobuf::EnumValueOptions *)*((_QWORD *)this + 3);
    if (!v14)
      v14 = *(AddrObjGoogle::protobuf::EnumValueOptions **)(AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_(0)
                                                          + 24);
    v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::EnumValueOptions::ByteSize(v14, a2);
    v16 = (int)v15;
    if (v15 >= 0x80)
      v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    else
      v17 = 1;
    v4 = (v4 + v16 + v17 + 1);
  }
LABEL_28:
  v18 = (_QWORD *)*((_QWORD *)this + 1);
  if (v18 && *v18 != v18[1])
    v4 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v4;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

void AddrObjGoogle::protobuf::EnumValueDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::EnumValueDescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 3535);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::EnumValueDescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1888020FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumValueOptions::MergeFrom(AddrObjGoogle::protobuf::EnumValueOptions *this, const AddrObjGoogle::protobuf::EnumValueOptions *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::UninterpretedOption *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::UninterpretedOption *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6218);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, *((_DWORD *)a2 + 12) + *((_DWORD *)this + 12));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, v7 + 1);
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::EnumValueOptions *)((char *)a2 + 32));
}

void sub_188802250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::EnumValueDescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::EnumValueDescriptorProto::GetMetadata(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF506C0;
}

void sub_188802328(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::ServiceDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::ServiceDescriptorProto *this, const AddrObjGoogle::protobuf::ServiceDescriptorProto *a2)
{
  std::string *v4;
  AddrObjGoogle::protobuf::internal *v5;
  uint64_t v6;
  const AddrObjGoogle::protobuf::MethodDescriptorProto *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  const std::string *v15;
  uint64_t *v16;
  std::string *v17;
  AddrObjGoogle::protobuf::ServiceOptions *v18;
  const AddrObjGoogle::protobuf::ServiceOptions *v19;
  char v20;
  std::string v21[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 3860);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  v5 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 6, *((_DWORD *)a2 + 8) + *((_DWORD *)this + 8));
  if (*((int *)a2 + 8) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const AddrObjGoogle::protobuf::MethodDescriptorProto **)(*((_QWORD *)a2 + 3) + 8 * v6);
      v8 = *((_DWORD *)this + 9);
      v9 = *((int *)this + 8);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 10))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 6, v8 + 1);
          v8 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v8 + 1;
        v11 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::MethodDescriptorProto>::New();
        v12 = *((_QWORD *)this + 3);
        v13 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v9 + 1;
        v11 = *(AddrObjGoogle::protobuf::MethodDescriptorProto **)(v10 + 8 * v9);
      }
      AddrObjGoogle::protobuf::MethodDescriptorProto::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 8));
  }
  LOBYTE(v14) = *((_BYTE *)a2 + 60);
  if ((_BYTE)v14)
  {
    if ((*((_BYTE *)a2 + 60) & 1) != 0)
    {
      v15 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 15) |= 1u;
      v16 = (uint64_t *)*((_QWORD *)this + 2);
      if (v16 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
      {
        v17 = (std::string *)operator new();
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v17;
      }
      else
      {
        v17 = (std::string *)*((_QWORD *)this + 2);
      }
      v5 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v17, v15);
      v14 = *((_DWORD *)a2 + 15);
    }
    if ((v14 & 4) != 0)
    {
      *((_DWORD *)this + 15) |= 4u;
      v18 = (AddrObjGoogle::protobuf::ServiceOptions *)*((_QWORD *)this + 6);
      if (!v18)
      {
        v18 = (AddrObjGoogle::protobuf::ServiceOptions *)operator new();
        v5 = AddrObjGoogle::protobuf::ServiceOptions::ServiceOptions(v18);
        *((_QWORD *)this + 6) = v18;
      }
      v19 = (const AddrObjGoogle::protobuf::ServiceOptions *)*((_QWORD *)a2 + 6);
      if (!v19)
        v19 = *(const AddrObjGoogle::protobuf::ServiceOptions **)(AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(v5)
                                                                + 48);
      AddrObjGoogle::protobuf::ServiceOptions::MergeFrom(v18, v19);
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::ServiceDescriptorProto *)((char *)a2 + 8));
}

void sub_188802524(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  *(_QWORD *)this = &off_1E1BF5BE0;
  AddrObjGoogle::protobuf::ServiceDescriptorProto::SharedDtor(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 3);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::ServiceDescriptorProto *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

AddrObjGoogle::protobuf::ServiceDescriptorProto *AddrObjGoogle::protobuf::ServiceDescriptorProto::SharedDtor(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *result;

  v2 = (uint64_t *)*((_QWORD *)this + 2);
  v3 = AddrObjGoogle::protobuf::internal::kEmptyString(this);
  if (v2 != v3)
  {
    v4 = *((_QWORD *)this + 2);
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      v3 = (uint64_t *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
    }
  }
  result = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_((AddrObjGoogle::protobuf::ServiceDescriptorProto *)v3);
  if (result != this)
  {
    result = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)*((_QWORD *)this + 6);
    if (result)
      return (AddrObjGoogle::protobuf::ServiceDescriptorProto *)(*(uint64_t (**)(AddrObjGoogle::protobuf::ServiceDescriptorProto *))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::ServiceDescriptorProto *AddrObjGoogle::protobuf::ServiceDescriptorProto::New(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(v1);
  return v1;
}

void sub_1888026B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::ServiceDescriptorProto::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v1;
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::UnknownFieldSet *v6;
  uint64_t v7;

  v1 = this;
  if (*((_BYTE *)this + 60))
  {
    if ((*((_BYTE *)this + 60) & 1) != 0)
    {
      v2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v2 != this)
      {
        v3 = *((_QWORD *)v1 + 2);
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 60) & 4) != 0)
    {
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 6);
      if (this)
        this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::ServiceOptions::Clear((uint64_t **)this);
    }
  }
  if (*((int *)v1 + 8) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)v1 + 3) + 8 * v4);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *((int *)v1 + 8));
  }
  v7 = *((_QWORD *)v1 + 1);
  v6 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v6 + 6) = 0;
  *((_DWORD *)v6 + 13) = 0;
  if (v7)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v6);
  return this;
}

uint64_t **AddrObjGoogle::protobuf::ServiceOptions::Clear(uint64_t **this)
{
  uint64_t **result;
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;

  result = AddrObjGoogle::protobuf::internal::ExtensionSet::Clear(this + 1);
  if (*((int *)this + 12) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = this[5][v3];
      result = (uint64_t **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)this + 12));
  }
  v6 = this[4];
  v5 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(this + 4);
  *((_DWORD *)v5 + 4) = 0;
  *((_DWORD *)v5 + 9) = 0;
  if (v6)
    return (uint64_t **)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v5);
  return result;
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  int *v6;
  void ***v7;
  char *v8;
  AddrObjGoogle::protobuf::io::CodedInputStream *v9;
  unsigned int v10;
  int v11;
  uint64_t *v12;
  std::string *v13;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  AddrObjGoogle::protobuf::UnknownFieldSet *v26;
  int v27;
  BOOL v28;
  int v29;
  int v30;
  AddrObjGoogle::protobuf::ServiceOptions *v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  AddrObjGoogle::protobuf::UnknownFieldSet *v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;

  v5 = this;
  v6 = (int *)(this + 24);
  v7 = (void ***)(this + 8);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v8 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
      {
        this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        v9 = (AddrObjGoogle::protobuf::io::CodedInputStream *)this;
        *((_DWORD *)a2 + 8) = this;
        if (!(_DWORD)this)
          return 1;
      }
      else
      {
        v9 = (AddrObjGoogle::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)a2 + 8) = (_DWORD)v9;
        *((_QWORD *)a2 + 1) = v8 + 1;
        if (!(_DWORD)v9)
          return 1;
      }
      v10 = v9 >> 3;
      if (v9 >> 3 != 1)
        break;
      v11 = v9 & 7;
      if (v11 != 2)
        goto LABEL_18;
      *(_DWORD *)(v5 + 60) |= 1u;
      v12 = *(uint64_t **)(v5 + 16);
      if (v12 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
      {
        v13 = (std::string *)operator new();
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        *(_QWORD *)(v5 + 16) = v13;
      }
      else
      {
        v13 = *(std::string **)(v5 + 16);
      }
      this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v13);
      if (!(_DWORD)this)
        return this;
      v14 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v14 < *((_QWORD *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_26:
          v15 = *(_DWORD *)(v5 + 36);
          v16 = *(int *)(v5 + 32);
          if ((int)v16 >= v15)
          {
            if (v15 == *(_DWORD *)(v5 + 40))
            {
              AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v15 + 1);
              v15 = *(_DWORD *)(v5 + 36);
            }
            *(_DWORD *)(v5 + 36) = v15 + 1;
            v18 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::MethodDescriptorProto>::New();
            v19 = *(_QWORD *)(v5 + 24);
            v20 = *(int *)(v5 + 32);
            *(_DWORD *)(v5 + 32) = v20 + 1;
            *(_QWORD *)(v19 + 8 * v20) = v18;
          }
          else
          {
            v17 = *(_QWORD *)(v5 + 24);
            *(_DWORD *)(v5 + 32) = v16 + 1;
            v18 = *(AddrObjGoogle::protobuf::MethodDescriptorProto **)(v17 + 8 * v16);
          }
          v40 = 0;
          v21 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
          {
            if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40))
              return 0;
          }
          else
          {
            v40 = *v21;
            *((_QWORD *)a2 + 1) = v21 + 1;
          }
          v22 = *((_DWORD *)a2 + 14);
          v23 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v22 + 1;
          if (v22 >= v23)
            return 0;
          v24 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v40);
          if (!AddrObjGoogle::protobuf::MethodDescriptorProto::MergePartialFromCodedStream((uint64_t)v18, a2, v25, v26)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v24);
          v27 = *((_DWORD *)a2 + 14);
          v28 = __OFSUB__(v27, 1);
          v29 = v27 - 1;
          if (v29 < 0 == v28)
            *((_DWORD *)a2 + 14) = v29;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v14 >= *((_QWORD *)a2 + 2))
            break;
          v30 = *v14;
          if (v30 != 18)
          {
            if (v30 == 26)
            {
              *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_44:
              *(_DWORD *)(v5 + 60) |= 4u;
              v31 = *(AddrObjGoogle::protobuf::ServiceOptions **)(v5 + 48);
              if (!v31)
              {
                v31 = (AddrObjGoogle::protobuf::ServiceOptions *)operator new();
                AddrObjGoogle::protobuf::ServiceOptions::ServiceOptions(v31);
                *(_QWORD *)(v5 + 48) = v31;
              }
              v41 = 0;
              v32 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
              {
                if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))
                  return 0;
              }
              else
              {
                v41 = *v32;
                *((_QWORD *)a2 + 1) = v32 + 1;
              }
              v33 = *((_DWORD *)a2 + 14);
              v34 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v33 + 1;
              if (v33 >= v34)
                return 0;
              v35 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v41);
              if (!AddrObjGoogle::protobuf::ServiceOptions::MergePartialFromCodedStream((unint64_t)v31, a2, v36, v37)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v35);
              v38 = *((_DWORD *)a2 + 14);
              v28 = __OFSUB__(v38, 1);
              v39 = v38 - 1;
              if (v39 < 0 == v28)
                *((_DWORD *)a2 + 14) = v39;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                this = 1;
                *((_BYTE *)a2 + 36) = 1;
                return this;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v10 == 2)
    {
      v11 = v9 & 7;
      if (v11 != 2)
        goto LABEL_18;
      goto LABEL_26;
    }
    if (v10 == 3)
    {
      v11 = v9 & 7;
      if (v11 == 2)
        goto LABEL_44;
    }
    else
    {
      v11 = v9 & 7;
    }
LABEL_18:
    if (v11 == 4)
      return 1;
    this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, v9, v7, a4);
    if ((this & 1) == 0)
      return 0;
  }
}

void sub_188802B9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t **AddrObjGoogle::protobuf::ServiceDescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v9;

  v4 = this;
  if ((*((_BYTE *)this + 60) & 1) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
  if (*((int *)v4 + 8) >= 1)
  {
    v5 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, v4[3][v5++], a2);
    while (v5 < *((int *)v4 + 8));
  }
  if ((*((_BYTE *)v4 + 60) & 4) != 0)
  {
    v6 = (uint64_t)v4[6];
    if (!v6)
      v6 = *(_QWORD *)(AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_((AddrObjGoogle::protobuf::ServiceDescriptorProto *)this)
                     + 48);
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, v6, a2);
  }
  v9 = v4[1];
  v8 = v4 + 1;
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::ServiceDescriptorProto::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::ServiceDescriptorProto *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v5;
  uint64_t v6;
  _BYTE *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _BYTE *v9;
  int v10;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v11;
  const void *v12;
  uint64_t v13;
  unsigned int *v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  AddrObjGoogle::protobuf::UnknownFieldSet *v16;
  unsigned int *v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  unsigned __int8 *v19;
  _QWORD *v20;
  uint64_t **v21;
  _QWORD *v22;

  v4 = a2;
  v5 = this;
  if ((*((_BYTE *)this + 60) & 1) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    v7 = (char *)a2 + 1;
    if (*(char *)(v6 + 23) < 0)
      v8 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v6 + 8);
    else
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    if (v8 > 0x7F)
    {
      v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v8;
      v9 = (char *)v4 + 2;
    }
    v10 = *(char *)(v6 + 23);
    if (v10 >= 0)
      v11 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6;
    else
      v11 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v6;
    if (v10 >= 0)
      v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    else
      v12 = (const void *)*(unsigned int *)(v6 + 8);
    this = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
    v4 = this;
  }
  if (*((int *)v5 + 8) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(unsigned int **)(*((_QWORD *)v5 + 3) + 8 * v13);
      *(_BYTE *)v4 = 18;
      v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v14[12];
      if (v15 > 0x7F)
      {
        v16 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (_BYTE *)v4 + 1, a3);
      }
      else
      {
        *((_BYTE *)v4 + 1) = (_BYTE)v15;
        v16 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      this = AddrObjGoogle::protobuf::MethodDescriptorProto::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::MethodDescriptorProto *)v14, v16, a3, a4);
      v4 = this;
      ++v13;
    }
    while (v13 < *((int *)v5 + 8));
  }
  if ((*((_BYTE *)v5 + 60) & 4) != 0)
  {
    v17 = (unsigned int *)*((_QWORD *)v5 + 6);
    if (!v17)
      v17 = *(unsigned int **)(AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(this) + 48);
    *(_BYTE *)v4 = 26;
    v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v17[16];
    if (v18 > 0x7F)
    {
      v19 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v18;
      v19 = (unsigned __int8 *)v4 + 2;
    }
    v4 = AddrObjGoogle::protobuf::ServiceOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::ServiceOptions *)v17, v19, a3);
  }
  v22 = (_QWORD *)*((_QWORD *)v5 + 1);
  v21 = (uint64_t **)((char *)v5 + 8);
  v20 = v22;
  if (!v22 || *v20 == v20[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::ByteSize(AddrObjGoogle::protobuf::ServiceDescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  AddrObjGoogle::protobuf::ServiceOptions *v12;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  _QWORD *v22;

  LOBYTE(v3) = *((_BYTE *)this + 60);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_21;
  }
  if ((*((_BYTE *)this + 60) & 1) == 0)
  {
    v4 = 0;
    if ((*((_BYTE *)this + 60) & 4) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = v11 + 1;
    v3 = *((_DWORD *)this + 15);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = v10 + v6;
  if ((v3 & 4) != 0)
  {
LABEL_15:
    v12 = (AddrObjGoogle::protobuf::ServiceOptions *)*((_QWORD *)this + 6);
    if (!v12)
      v12 = *(AddrObjGoogle::protobuf::ServiceOptions **)(AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(0)
                                                        + 48);
    v13 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::ServiceOptions::ByteSize(v12, a2);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v4 += v14 + v15 + 1;
  }
LABEL_21:
  v16 = *((_DWORD *)this + 8);
  v17 = (v16 + v4);
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::MethodDescriptorProto::ByteSize(*(AddrObjGoogle::protobuf::MethodDescriptorProto **)(*((_QWORD *)this + 3) + 8 * v18), a2);
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 8));
  }
  v22 = (_QWORD *)*((_QWORD *)this + 1);
  if (v22 && *v22 != v22[1])
    v17 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v17;
  *((_DWORD *)this + 14) = v17;
  return v17;
}

void AddrObjGoogle::protobuf::ServiceDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::ServiceDescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::ServiceDescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 3848);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::ServiceDescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188802FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::ServiceOptions::MergeFrom(AddrObjGoogle::protobuf::ServiceOptions *this, const AddrObjGoogle::protobuf::ServiceOptions *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::UninterpretedOption *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::UninterpretedOption *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6441);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, *((_DWORD *)a2 + 12) + *((_DWORD *)this + 12));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, v7 + 1);
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::ServiceOptions *)((char *)a2 + 32));
}

void sub_188803150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::ServiceDescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::IsInitialized(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (*((int *)this + 8) < 1)
  {
LABEL_5:
    if ((*((_BYTE *)this + 60) & 4) == 0)
      return 1;
    v4 = *((_QWORD *)this + 6);
    if (!v4)
      v4 = *(_QWORD *)(AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(0) + 48);
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v2 = 0;
    while (1)
    {
      v3 = *(_QWORD *)(*((_QWORD *)this + 3) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
        return 0;
      if (++v2 >= *((int *)this + 8))
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::GetMetadata(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF506D0;
}

void sub_1888032B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MethodDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::MethodDescriptorProto *this, const AddrObjGoogle::protobuf::MethodDescriptorProto *a2)
{
  AddrObjGoogle::protobuf::MethodDescriptorProto *v3;
  std::string *v4;
  int v5;
  const std::string *v6;
  uint64_t *v7;
  std::string *v8;
  const std::string *v9;
  uint64_t *v10;
  std::string *v11;
  const std::string *v12;
  uint64_t *v13;
  std::string *v14;
  AddrObjGoogle::protobuf::MethodOptions *v15;
  const AddrObjGoogle::protobuf::MethodOptions *v16;
  char v17;
  std::string v18[2];

  v3 = this;
  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 4242);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)v3 + 13) |= 1u;
      v7 = (uint64_t *)*((_QWORD *)v3 + 2);
      if (v7 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 2) = v8;
      }
      else
      {
        v8 = (std::string *)*((_QWORD *)v3 + 2);
      }
      this = (AddrObjGoogle::protobuf::MethodDescriptorProto *)std::string::operator=(v8, v6);
      v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_17;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    v9 = (const std::string *)*((_QWORD *)a2 + 3);
    *((_DWORD *)v3 + 13) |= 2u;
    v10 = (uint64_t *)*((_QWORD *)v3 + 3);
    if (v10 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
    {
      v11 = (std::string *)operator new();
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v3 + 3) = v11;
    }
    else
    {
      v11 = (std::string *)*((_QWORD *)v3 + 3);
    }
    this = (AddrObjGoogle::protobuf::MethodDescriptorProto *)std::string::operator=(v11, v9);
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_26;
LABEL_21:
      *((_DWORD *)v3 + 13) |= 8u;
      v15 = (AddrObjGoogle::protobuf::MethodOptions *)*((_QWORD *)v3 + 5);
      if (!v15)
      {
        v15 = (AddrObjGoogle::protobuf::MethodOptions *)operator new();
        this = AddrObjGoogle::protobuf::MethodOptions::MethodOptions(v15);
        *((_QWORD *)v3 + 5) = v15;
      }
      v16 = (const AddrObjGoogle::protobuf::MethodOptions *)*((_QWORD *)a2 + 5);
      if (!v16)
        v16 = *(const AddrObjGoogle::protobuf::MethodOptions **)(AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(this)
                                                               + 40);
      AddrObjGoogle::protobuf::MethodOptions::MergeFrom(v15, v16);
      goto LABEL_26;
    }
LABEL_17:
    v12 = (const std::string *)*((_QWORD *)a2 + 4);
    *((_DWORD *)v3 + 13) |= 4u;
    v13 = (uint64_t *)*((_QWORD *)v3 + 4);
    if (v13 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
    {
      v14 = (std::string *)operator new();
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)v3 + 4) = v14;
    }
    else
    {
      v14 = (std::string *)*((_QWORD *)v3 + 4);
    }
    this = (AddrObjGoogle::protobuf::MethodDescriptorProto *)std::string::operator=(v14, v12);
    if ((*((_DWORD *)a2 + 13) & 8) == 0)
      goto LABEL_26;
    goto LABEL_21;
  }
LABEL_26:
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)v3 + 1, (const AddrObjGoogle::protobuf::MethodDescriptorProto *)((char *)a2 + 8));
}

void sub_1888034C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MethodDescriptorProto::~MethodDescriptorProto(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  *(_QWORD *)this = &off_1E1BF5B30;
  AddrObjGoogle::protobuf::MethodDescriptorProto::SharedDtor(this);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::MethodDescriptorProto *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::MethodDescriptorProto::~MethodDescriptorProto(this);
  JUMPOUT(0x18D76437CLL);
}

AddrObjGoogle::protobuf::MethodDescriptorProto *AddrObjGoogle::protobuf::MethodDescriptorProto::SharedDtor(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::MethodDescriptorProto *result;

  v2 = (uint64_t *)*((_QWORD *)this + 2);
  v3 = AddrObjGoogle::protobuf::internal::kEmptyString(this);
  if (v2 != v3)
  {
    v4 = *((_QWORD *)this + 2);
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      v3 = (uint64_t *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
    }
  }
  v5 = (uint64_t *)*((_QWORD *)this + 3);
  v6 = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v3);
  if (v5 != v6)
  {
    v7 = *((_QWORD *)this + 3);
    if (v7)
    {
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      v6 = (uint64_t *)MEMORY[0x18D76437C](v7, 0x1012C40EC159624);
    }
  }
  v8 = (uint64_t *)*((_QWORD *)this + 4);
  v9 = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v6);
  if (v8 != v9)
  {
    v10 = *((_QWORD *)this + 4);
    if (v10)
    {
      if (*(char *)(v10 + 23) < 0)
        operator delete(*(void **)v10);
      v9 = (uint64_t *)MEMORY[0x18D76437C](v10, 0x1012C40EC159624);
    }
  }
  result = (AddrObjGoogle::protobuf::MethodDescriptorProto *)AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_((AddrObjGoogle::protobuf::MethodDescriptorProto *)v9);
  if (result != this)
  {
    result = (AddrObjGoogle::protobuf::MethodDescriptorProto *)*((_QWORD *)this + 5);
    if (result)
      return (AddrObjGoogle::protobuf::MethodDescriptorProto *)(*(uint64_t (**)(AddrObjGoogle::protobuf::MethodDescriptorProto *))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  AddrObjGoogle::protobuf::MethodDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::MethodDescriptorProto *)AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::MethodDescriptorProto *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(v1);
}

AddrObjGoogle::protobuf::MethodDescriptorProto *AddrObjGoogle::protobuf::MethodDescriptorProto::New(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  AddrObjGoogle::protobuf::MethodDescriptorProto *v1;

  v1 = (AddrObjGoogle::protobuf::MethodDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::MethodDescriptorProto::MethodDescriptorProto(v1);
  return v1;
}

void sub_1888036C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4093195C21);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::MethodDescriptorProto::Clear(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v1;
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::UnknownFieldSet *v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  uint64_t v9;

  v1 = this;
  if (*((_BYTE *)this + 52))
  {
    if ((*((_BYTE *)this + 52) & 1) != 0)
    {
      v2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 2);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v2 != this)
      {
        v3 = *((_QWORD *)v1 + 2);
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 52) & 2) != 0)
    {
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 3);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v4 != this)
      {
        v5 = *((_QWORD *)v1 + 3);
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 52) & 4) != 0)
    {
      v6 = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 4);
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::kEmptyString(this);
      if (v6 != this)
      {
        v7 = *((_QWORD *)v1 + 4);
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 52) & 8) != 0)
    {
      this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)v1 + 5);
      if (this)
        this = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::MethodOptions::Clear((uint64_t **)this);
    }
  }
  v9 = *((_QWORD *)v1 + 1);
  v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v8 + 11) = 0;
  if (v9)
    return AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v8);
  return this;
}

uint64_t **AddrObjGoogle::protobuf::MethodOptions::Clear(uint64_t **this)
{
  uint64_t **result;
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  uint64_t *v6;

  result = AddrObjGoogle::protobuf::internal::ExtensionSet::Clear(this + 1);
  if (*((int *)this + 12) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = this[5][v3];
      result = (uint64_t **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *((int *)this + 12));
  }
  v6 = this[4];
  v5 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(this + 4);
  *((_DWORD *)v5 + 4) = 0;
  *((_DWORD *)v5 + 9) = 0;
  if (v6)
    return (uint64_t **)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v5);
  return result;
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  void ***v6;
  char *v7;
  AddrObjGoogle::protobuf::io::CodedInputStream *v8;
  int v9;
  uint64_t *v10;
  std::string *v11;
  _BYTE *v12;
  uint64_t *v13;
  std::string *v14;
  _BYTE *v15;
  uint64_t *v16;
  std::string *v17;
  _BYTE *v18;
  AddrObjGoogle::protobuf::MethodOptions *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  AddrObjGoogle::protobuf::UnknownFieldSet *v25;
  int v26;
  BOOL v27;
  int v28;
  unsigned int v29;

  v5 = this;
  v6 = (void ***)(this + 8);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v8 = (AddrObjGoogle::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!(_DWORD)this)
        return 1;
    }
    else
    {
      v8 = (AddrObjGoogle::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)a2 + 8) = (_DWORD)v8;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)v8)
        return 1;
    }
    switch(v8 >> 3)
    {
      case 1u:
        v9 = v8 & 7;
        if (v9 != 2)
          goto LABEL_17;
        *(_DWORD *)(v5 + 52) |= 1u;
        v10 = *(uint64_t **)(v5 + 16);
        if (v10 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
        {
          v11 = (std::string *)operator new();
          v11->__r_.__value_.__l.__size_ = 0;
          v11->__r_.__value_.__r.__words[2] = 0;
          v11->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)(v5 + 16) = v11;
        }
        else
        {
          v11 = *(std::string **)(v5 + 16);
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v11);
        if ((_DWORD)this)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v12 < *((_QWORD *)a2 + 2) && *v12 == 18)
          {
            *((_QWORD *)a2 + 1) = v12 + 1;
            goto LABEL_25;
          }
          continue;
        }
        break;
      case 2u:
        v9 = v8 & 7;
        if (v9 != 2)
          goto LABEL_17;
LABEL_25:
        *(_DWORD *)(v5 + 52) |= 2u;
        v13 = *(uint64_t **)(v5 + 24);
        if (v13 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
        {
          v14 = (std::string *)operator new();
          v14->__r_.__value_.__l.__size_ = 0;
          v14->__r_.__value_.__r.__words[2] = 0;
          v14->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)(v5 + 24) = v14;
        }
        else
        {
          v14 = *(std::string **)(v5 + 24);
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v14);
        if ((_DWORD)this)
        {
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 26)
          {
            *((_QWORD *)a2 + 1) = v15 + 1;
            goto LABEL_32;
          }
          continue;
        }
        break;
      case 3u:
        v9 = v8 & 7;
        if (v9 != 2)
          goto LABEL_17;
LABEL_32:
        *(_DWORD *)(v5 + 52) |= 4u;
        v16 = *(uint64_t **)(v5 + 32);
        if (v16 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
        {
          v17 = (std::string *)operator new();
          v17->__r_.__value_.__l.__size_ = 0;
          v17->__r_.__value_.__r.__words[2] = 0;
          v17->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)(v5 + 32) = v17;
        }
        else
        {
          v17 = *(std::string **)(v5 + 32);
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v17);
        if ((_DWORD)this)
        {
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 34)
          {
            *((_QWORD *)a2 + 1) = v18 + 1;
            goto LABEL_39;
          }
          continue;
        }
        break;
      case 4u:
        v9 = v8 & 7;
        if (v9 != 2)
          goto LABEL_17;
LABEL_39:
        *(_DWORD *)(v5 + 52) |= 8u;
        v19 = *(AddrObjGoogle::protobuf::MethodOptions **)(v5 + 40);
        if (!v19)
        {
          v19 = (AddrObjGoogle::protobuf::MethodOptions *)operator new();
          AddrObjGoogle::protobuf::MethodOptions::MethodOptions(v19);
          *(_QWORD *)(v5 + 40) = v19;
        }
        v29 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
            goto LABEL_55;
        }
        else
        {
          v29 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22)
          goto LABEL_55;
        v23 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v29);
        if (!AddrObjGoogle::protobuf::MethodOptions::MergePartialFromCodedStream((unint64_t)v19, a2, v24, v25)|| !*((_BYTE *)a2 + 36))
        {
          goto LABEL_55;
        }
        this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        v26 = *((_DWORD *)a2 + 14);
        v27 = __OFSUB__(v26, 1);
        v28 = v26 - 1;
        if (v28 < 0 == v27)
          *((_DWORD *)a2 + 14) = v28;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        this = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      default:
        v9 = v8 & 7;
LABEL_17:
        if (v9 == 4)
          return 1;
        this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, v8, v6, a4);
        if ((this & 1) != 0)
          continue;
LABEL_55:
        this = 0;
        break;
    }
    return this;
  }
}

void sub_188803BD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t **AddrObjGoogle::protobuf::MethodDescriptorProto::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t **v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v9;

  v4 = this;
  v5 = *((_DWORD *)this + 13);
  if ((v5 & 1) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
    v5 = *((_DWORD *)v4 + 13);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(2, (uint64_t)v4[3], a2);
  v5 = *((_DWORD *)v4 + 13);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
LABEL_8:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(3, (uint64_t)v4[4], a2);
  if ((*((_DWORD *)v4 + 13) & 8) == 0)
    goto LABEL_12;
LABEL_9:
  v6 = (uint64_t)v4[5];
  if (!v6)
    v6 = *(_QWORD *)(AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_((AddrObjGoogle::protobuf::MethodDescriptorProto *)this)
                   + 40);
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, v6, a2);
LABEL_12:
  v9 = v4[1];
  v8 = v4 + 1;
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::MethodDescriptorProto::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::MethodDescriptorProto *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  const AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v9;
  _BYTE *v10;
  int v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  const void *v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  _BYTE *v16;
  int v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  const void *v19;
  uint64_t v20;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v21;
  _BYTE *v22;
  int v23;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v24;
  const void *v25;
  unsigned int *v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  unsigned __int8 *v28;
  _QWORD *v29;
  uint64_t **v30;
  _QWORD *v31;

  v4 = a2;
  v5 = this;
  v6 = *((_DWORD *)this + 13);
  if ((v6 & 1) != 0)
  {
    v7 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    v8 = (char *)a2 + 1;
    if (*(char *)(v7 + 23) < 0)
      v9 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v7 + 8);
    else
      v9 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    if (v9 > 0x7F)
    {
      v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v9;
      v10 = (char *)v4 + 2;
    }
    v11 = *(char *)(v7 + 23);
    if (v11 >= 0)
      v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7;
    else
      v12 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v7;
    if (v11 >= 0)
      v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    else
      v13 = (const void *)*(unsigned int *)(v7 + 8);
    this = (AddrObjGoogle::protobuf::MethodDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    v4 = this;
    v6 = *((_DWORD *)v5 + 13);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v14 = *((_QWORD *)v5 + 3);
  *(_BYTE *)v4 = 18;
  if (*(char *)(v14 + 23) < 0)
    v15 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v14 + 8);
  else
    v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
  if (v15 > 0x7F)
  {
    v16 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (_BYTE *)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v15;
    v16 = (char *)v4 + 2;
  }
  v17 = *(char *)(v14 + 23);
  if (v17 >= 0)
    v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v14;
  else
    v18 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v14;
  if (v17 >= 0)
    v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
  else
    v19 = (const void *)*(unsigned int *)(v14 + 8);
  this = (AddrObjGoogle::protobuf::MethodDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v18, v19, v16, a4);
  v4 = this;
  v6 = *((_DWORD *)v5 + 13);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_51;
    goto LABEL_45;
  }
LABEL_32:
  v20 = *((_QWORD *)v5 + 4);
  *(_BYTE *)v4 = 26;
  if (*(char *)(v20 + 23) < 0)
    v21 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v20 + 8);
  else
    v21 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
  if (v21 > 0x7F)
  {
    v22 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (_BYTE *)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v21;
    v22 = (char *)v4 + 2;
  }
  v23 = *(char *)(v20 + 23);
  if (v23 >= 0)
    v24 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v20;
  else
    v24 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v20;
  if (v23 >= 0)
    v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
  else
    v25 = (const void *)*(unsigned int *)(v20 + 8);
  this = (AddrObjGoogle::protobuf::MethodDescriptorProto *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, v22, a4);
  v4 = this;
  if ((*((_DWORD *)v5 + 13) & 8) == 0)
    goto LABEL_51;
LABEL_45:
  v26 = (unsigned int *)*((_QWORD *)v5 + 5);
  if (!v26)
    v26 = *(unsigned int **)(AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(this) + 40);
  *(_BYTE *)v4 = 34;
  v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v26[16];
  if (v27 > 0x7F)
  {
    v28 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (_BYTE *)v4 + 1, a3);
  }
  else
  {
    *((_BYTE *)v4 + 1) = (_BYTE)v27;
    v28 = (unsigned __int8 *)v4 + 2;
  }
  v4 = AddrObjGoogle::protobuf::MethodOptions::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::MethodOptions *)v26, v28, a3);
LABEL_51:
  v31 = (_QWORD *)*((_QWORD *)v5 + 1);
  v30 = (uint64_t **)((char *)v5 + 8);
  v29 = v31;
  if (!v31 || *v29 == v29[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v30, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::ByteSize(AddrObjGoogle::protobuf::MethodDescriptorProto *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  AddrObjGoogle::protobuf::MethodOptions *v24;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  _QWORD *v28;

  LOBYTE(v3) = *((_BYTE *)this + 52);
  if (!(_BYTE)v3)
  {
    v4 = 0;
    goto LABEL_42;
  }
  if ((*((_BYTE *)this + 52) & 1) == 0)
  {
    v4 = 0;
    if ((*((_BYTE *)this + 52) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 2);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = v11 + 1;
    v3 = *((_DWORD *)this + 13);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    v12 = *((_QWORD *)this + 3);
    v13 = *(unsigned __int8 *)(v12 + 23);
    v14 = v13;
    v15 = *(_QWORD *)(v12 + 8);
    if ((v13 & 0x80u) == 0)
      v16 = *(unsigned __int8 *)(v12 + 23);
    else
      v16 = v15;
    if (v16 >= 0x80)
    {
      v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v16);
      v13 = *(unsigned __int8 *)(v12 + 23);
      v15 = *(_QWORD *)(v12 + 8);
      v3 = *((_DWORD *)this + 13);
      v14 = *(_BYTE *)(v12 + 23);
    }
    else
    {
      v17 = 1;
    }
    if (v14 < 0)
      v13 = v15;
    v4 = (v4 + v17 + v13 + 1);
  }
LABEL_24:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0)
      goto LABEL_42;
    goto LABEL_36;
  }
  v18 = *((_QWORD *)this + 4);
  v19 = *(unsigned __int8 *)(v18 + 23);
  v20 = v19;
  v21 = *(_QWORD *)(v18 + 8);
  if ((v19 & 0x80u) == 0)
    v22 = *(unsigned __int8 *)(v18 + 23);
  else
    v22 = v21;
  if (v22 >= 0x80)
  {
    v23 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v22);
    v19 = *(unsigned __int8 *)(v18 + 23);
    v21 = *(_QWORD *)(v18 + 8);
    v3 = *((_DWORD *)this + 13);
    v20 = *(_BYTE *)(v18 + 23);
  }
  else
  {
    v23 = 1;
  }
  if (v20 < 0)
    v19 = v21;
  v4 = (v4 + v23 + v19 + 1);
  if ((v3 & 8) != 0)
  {
LABEL_36:
    v24 = (AddrObjGoogle::protobuf::MethodOptions *)*((_QWORD *)this + 5);
    if (!v24)
      v24 = *(AddrObjGoogle::protobuf::MethodOptions **)(AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(0)
                                                       + 40);
    v25 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::MethodOptions::ByteSize(v24, a2);
    v26 = (int)v25;
    if (v25 >= 0x80)
      v27 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    else
      v27 = 1;
    v4 = (v4 + v26 + v27 + 1);
  }
LABEL_42:
  v28 = (_QWORD *)*((_QWORD *)this + 1);
  if (v28 && *v28 != v28[1])
    v4 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v4;
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void AddrObjGoogle::protobuf::MethodDescriptorProto::MergeFrom(AddrObjGoogle::protobuf::MethodDescriptorProto *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::MethodDescriptorProto *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 4230);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::MethodDescriptorProto::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188804118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MethodOptions::MergeFrom(AddrObjGoogle::protobuf::MethodOptions *this, const AddrObjGoogle::protobuf::MethodOptions *a2)
{
  std::string *v4;
  uint64_t v5;
  const AddrObjGoogle::protobuf::UninterpretedOption *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::UninterpretedOption *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6664);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, *((_DWORD *)a2 + 12) + *((_DWORD *)this + 12));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 10, v7 + 1);
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v9 + 8 * v8);
      }
      AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom((uint64_t)this + 8, (const AddrObjGoogle::protobuf::internal::ExtensionSet **)a2 + 1);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const AddrObjGoogle::protobuf::MethodOptions *)((char *)a2 + 32));
}

void sub_18880426C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::MethodDescriptorProto::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::IsInitialized(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  uint64_t v1;
  uint64_t result;

  if ((*((_BYTE *)this + 52) & 8) == 0)
    return 1;
  v1 = *((_QWORD *)this + 5);
  if (!v1)
    v1 = *(_QWORD *)(AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(0) + 40);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 40))(v1);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::GetMetadata(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF506E0;
}

void sub_188804380(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FileOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 100) = a2;
  return this;
}

AddrObjGoogle::protobuf::FileOptions *AddrObjGoogle::protobuf::FileOptions::New(AddrObjGoogle::protobuf::FileOptions *this)
{
  AddrObjGoogle::protobuf::FileOptions *v1;

  v1 = (AddrObjGoogle::protobuf::FileOptions *)operator new();
  AddrObjGoogle::protobuf::FileOptions::FileOptions(v1);
  return v1;
}

void sub_1888043DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FileOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::FileOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _QWORD *v9;
  uint64_t **v10;
  _QWORD *v11;

  v6 = *((_DWORD *)this + 26);
  if ((v6 & 1) != 0)
  {
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, *((_QWORD *)this + 5), a2);
    v6 = *((_DWORD *)this + 26);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(8, *((_QWORD *)this + 6), a2);
  v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)9, *((_DWORD *)this + 14), a2, a4);
  v6 = *((_DWORD *)this + 26);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0xA, *((unsigned __int8 *)this + 60), a2, a4);
  v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(11, *((_QWORD *)this + 8), a2);
  v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0x10, *((unsigned __int8 *)this + 62), a2, a4);
  v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0x11, *((unsigned __int8 *)this + 63), a2, a4);
  v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_25:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0x12, *((unsigned __int8 *)this + 96), a2, a4);
  if ((*((_DWORD *)this + 26) & 8) != 0)
LABEL_10:
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0x14, *((unsigned __int8 *)this + 61), a2, a4);
LABEL_11:
  if (*((int *)this + 20) >= 1)
  {
    v7 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 9) + 8 * v7++), a2);
    while (v7 < *((int *)this + 20));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::FileOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v11 = (_QWORD *)*((_QWORD *)this + 4);
  v10 = (uint64_t **)((char *)this + 32);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FileOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::FileOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _BYTE *v9;
  int v10;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v11;
  const void *v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v14;
  _BYTE *v15;
  int v16;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v17;
  const void *v18;
  unint64_t v19;
  _BYTE *v20;
  unsigned __int8 *v21;
  int v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned int *v25;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v26;
  AddrObjGoogle::protobuf::UnknownFieldSet *v27;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  _QWORD *v31;
  uint64_t **v32;
  _QWORD *v33;
  unsigned __int8 v34;
  uint64_t v35;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v36;
  _BYTE *v37;
  int v38;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v39;
  const void *v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;

  v3 = a2;
  v5 = *((_DWORD *)this + 26);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0)
      goto LABEL_3;
LABEL_18:
    v13 = *((_QWORD *)this + 6);
    *v3 = 66;
    if (*(char *)(v13 + 23) < 0)
      v14 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v13 + 8);
    else
      v14 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v13 + 23);
    if (v14 > 0x7F)
    {
      v15 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v3 + 1, a3);
    }
    else
    {
      v3[1] = v14;
      v15 = v3 + 2;
    }
    v16 = *(char *)(v13 + 23);
    if (v16 >= 0)
      v17 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v13;
    else
      v17 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v13;
    if (v16 >= 0)
      v18 = (const void *)*(unsigned __int8 *)(v13 + 23);
    else
      v18 = (const void *)*(unsigned int *)(v13 + 8);
    v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, v3);
    if ((*((_DWORD *)this + 26) & 0x10) == 0)
      goto LABEL_37;
    goto LABEL_31;
  }
  v6 = *((_QWORD *)this + 5);
  *a2 = 10;
  v7 = a2 + 1;
  if (*(char *)(v6 + 23) < 0)
    v8 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v6 + 8);
  else
    v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
  if (v8 > 0x7F)
  {
    v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
  }
  else
  {
    v3[1] = v8;
    v9 = v3 + 2;
  }
  v10 = *(char *)(v6 + 23);
  if (v10 >= 0)
    v11 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6;
  else
    v11 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v6;
  if (v10 >= 0)
    v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
  else
    v12 = (const void *)*(unsigned int *)(v6 + 8);
  v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, v3);
  v5 = *((_DWORD *)this + 26);
  if ((v5 & 2) != 0)
    goto LABEL_18;
LABEL_3:
  if ((v5 & 0x10) == 0)
    goto LABEL_37;
LABEL_31:
  v19 = *((int *)this + 14);
  *v3 = 72;
  v20 = v3 + 1;
  if ((v19 & 0x80000000) != 0)
  {
    v21 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v19, v20, a3);
  }
  else
  {
    if (v19 <= 0x7F)
    {
      v3[1] = v19;
      v3 += 2;
      goto LABEL_37;
    }
    v21 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v19, v20, a3);
  }
  v3 = v21;
LABEL_37:
  v22 = *((_DWORD *)this + 26);
  if ((v22 & 4) != 0)
  {
    v34 = *((_BYTE *)this + 60);
    *v3 = 80;
    v3[1] = v34;
    v3 += 2;
    v22 = *((_DWORD *)this + 26);
    if ((v22 & 0x20) == 0)
    {
LABEL_39:
      if ((v22 & 0x40) == 0)
        goto LABEL_40;
      goto LABEL_68;
    }
  }
  else if ((v22 & 0x20) == 0)
  {
    goto LABEL_39;
  }
  v35 = *((_QWORD *)this + 8);
  *v3 = 90;
  if (*(char *)(v35 + 23) < 0)
    v36 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v35 + 8);
  else
    v36 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v35 + 23);
  if (v36 > 0x7F)
  {
    v37 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v3 + 1, a3);
  }
  else
  {
    v3[1] = v36;
    v37 = v3 + 2;
  }
  v38 = *(char *)(v35 + 23);
  if (v38 >= 0)
    v39 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v35;
  else
    v39 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v35;
  if (v38 >= 0)
    v40 = (const void *)*(unsigned __int8 *)(v35 + 23);
  else
    v40 = (const void *)*(unsigned int *)(v35 + 8);
  v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v39, v40, v37, v3);
  v22 = *((_DWORD *)this + 26);
  if ((v22 & 0x40) == 0)
  {
LABEL_40:
    if ((v22 & 0x80) == 0)
      goto LABEL_41;
    goto LABEL_69;
  }
LABEL_68:
  v41 = *((_BYTE *)this + 62);
  *(_WORD *)v3 = 384;
  v3[2] = v41;
  v3 += 3;
  v22 = *((_DWORD *)this + 26);
  if ((v22 & 0x80) == 0)
  {
LABEL_41:
    if ((v22 & 0x100) == 0)
      goto LABEL_42;
    goto LABEL_70;
  }
LABEL_69:
  v42 = *((_BYTE *)this + 63);
  *(_WORD *)v3 = 392;
  v3[2] = v42;
  v3 += 3;
  v22 = *((_DWORD *)this + 26);
  if ((v22 & 0x100) == 0)
  {
LABEL_42:
    if ((v22 & 8) == 0)
      goto LABEL_44;
    goto LABEL_43;
  }
LABEL_70:
  v43 = *((_BYTE *)this + 96);
  *(_WORD *)v3 = 400;
  v3[2] = v43;
  v3 += 3;
  if ((*((_DWORD *)this + 26) & 8) != 0)
  {
LABEL_43:
    v23 = *((_BYTE *)this + 61);
    *(_WORD *)v3 = 416;
    v3[2] = v23;
    v3 += 3;
  }
LABEL_44:
  if (*((int *)this + 20) >= 1)
  {
    v24 = 0;
    do
    {
      v25 = *(unsigned int **)(*((_QWORD *)this + 9) + 8 * v24);
      *(_WORD *)v3 = 16058;
      v26 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v25[22];
      if (v26 > 0x7F)
      {
        v27 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, v3 + 2, a3);
      }
      else
      {
        v3[2] = v26;
        v27 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v25, v27, a3, v3);
      ++v24;
    }
    while (v24 < *((int *)this + 20));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::FileOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v33 = (_QWORD *)*((_QWORD *)this + 4);
  v32 = (uint64_t **)((char *)this + 32);
  v31 = v33;
  if (v33)
  {
    if (*v31 != v31[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v32, result, v29, v30);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::FileOptions::ByteSize(AddrObjGoogle::protobuf::FileOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  int v20;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v21;
  int v22;
  uint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v36;
  uint64_t v37;
  _QWORD *v38;

  v3 = *((_DWORD *)this + 26);
  if (!(_BYTE)v3)
  {
    v5 = 0;
    goto LABEL_50;
  }
  if ((v3 & 1) != 0)
  {
    v6 = *((_QWORD *)this + 5);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = v7;
    v9 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v10 = *(unsigned __int8 *)(v6 + 23);
    else
      v10 = v9;
    if (v10 >= 0x80)
    {
      v12 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v10);
      v7 = *(unsigned __int8 *)(v6 + 23);
      v9 = *(_QWORD *)(v6 + 8);
      v11 = v12 + 1;
      v3 = *((_DWORD *)this + 26);
      v8 = *(_BYTE *)(v6 + 23);
    }
    else
    {
      v11 = 2;
    }
    if (v8 < 0)
      v7 = v9;
    v4 = v11 + v7;
    if ((v3 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    v13 = *((_QWORD *)this + 6);
    v14 = *(unsigned __int8 *)(v13 + 23);
    v15 = v14;
    v16 = *(_QWORD *)(v13 + 8);
    if ((v14 & 0x80u) == 0)
      v17 = *(unsigned __int8 *)(v13 + 23);
    else
      v17 = v16;
    if (v17 >= 0x80)
    {
      v18 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v17);
      v14 = *(unsigned __int8 *)(v13 + 23);
      v16 = *(_QWORD *)(v13 + 8);
      v3 = *((_DWORD *)this + 26);
      v15 = *(_BYTE *)(v13 + 23);
    }
    else
    {
      v18 = 1;
    }
    if (v15 < 0)
      v14 = v16;
    v4 += v18 + v14 + 1;
  }
LABEL_24:
  v19 = v4 + 2;
  if ((v3 & 4) == 0)
    v19 = v4;
  if ((v3 & 8) != 0)
    v20 = v19 + 3;
  else
    v20 = v19;
  if ((v3 & 0x10) != 0)
  {
    v21 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v21 & 0x80000000) != 0)
    {
      v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      v22 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
      v3 = *((_DWORD *)this + 26);
    }
    else
    {
      v22 = 2;
    }
    v20 += v22;
  }
  if ((v3 & 0x20) != 0)
  {
    v23 = *((_QWORD *)this + 8);
    v24 = *(unsigned __int8 *)(v23 + 23);
    v25 = v24;
    v26 = *(_QWORD *)(v23 + 8);
    if ((v24 & 0x80u) == 0)
      v27 = *(unsigned __int8 *)(v23 + 23);
    else
      v27 = v26;
    if (v27 >= 0x80)
    {
      v28 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v27);
      v24 = *(unsigned __int8 *)(v23 + 23);
      v26 = *(_QWORD *)(v23 + 8);
      v3 = *((_DWORD *)this + 26);
      v25 = *(_BYTE *)(v23 + 23);
    }
    else
    {
      v28 = 1;
    }
    if (v25 < 0)
      v24 = v26;
    v20 += v28 + v24 + 1;
  }
  v5 = v20 + 3;
  if ((v3 & 0x40) == 0)
    v5 = v20;
  if ((v3 & 0x80) != 0)
    v5 += 3;
LABEL_50:
  if ((v3 & 0x100) != 0)
    v29 = v5 + 3;
  else
    v29 = v5;
  v30 = *((_DWORD *)this + 20);
  v31 = v29 + 2 * v30;
  if (v30 >= 1)
  {
    v32 = 0;
    do
    {
      v33 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 9) + 8 * v32), a2);
      v34 = (int)v33;
      if (v33 >= 0x80)
        v35 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      else
        v35 = 1;
      v31 += v34 + v35;
      ++v32;
    }
    while (v32 < *((int *)this + 20));
  }
  v37 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v31;
  v38 = (_QWORD *)*((_QWORD *)this + 4);
  if (v38 && *v38 != v38[1])
    v37 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v36)+ v37;
  *((_DWORD *)this + 25) = v37;
  return v37;
}

void AddrObjGoogle::protobuf::FileOptions::MergeFrom(AddrObjGoogle::protobuf::FileOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::FileOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 4867);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::FileOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188804B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::FileOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::FileOptions::CopyFrom(AddrObjGoogle::protobuf::FileOptions *this, const AddrObjGoogle::protobuf::FileOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::FileOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::FileOptions::GetMetadata(AddrObjGoogle::protobuf::FileOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF506F0;
}

void sub_188804C94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MessageOptions::~MessageOptions(AddrObjGoogle::protobuf::MessageOptions *this)
{
  *(_QWORD *)this = &off_1E1BF5400;
  AddrObjGoogle::protobuf::MessageOptions::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 5);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::MessageOptions *)((char *)this + 32));
  AddrObjGoogle::protobuf::internal::ExtensionSet::~ExtensionSet((AddrObjGoogle::protobuf::MessageOptions *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::MessageOptions::~MessageOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::MessageOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

AddrObjGoogle::protobuf::MessageOptions *AddrObjGoogle::protobuf::MessageOptions::New(AddrObjGoogle::protobuf::MessageOptions *this)
{
  AddrObjGoogle::protobuf::MessageOptions *v1;

  v1 = (AddrObjGoogle::protobuf::MessageOptions *)operator new();
  AddrObjGoogle::protobuf::MessageOptions::MessageOptions(v1);
  return v1;
}

void sub_188804D64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::MessageOptions::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  int *v6;
  void ***v7;
  uint64_t **v8;
  char *v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  char *v14;
  unsigned int v15;
  _BYTE *v16;
  unsigned __int8 *v17;
  const AddrObjGoogle::protobuf::Message *v18;
  unsigned int v19;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  AddrObjGoogle::protobuf::UninterpretedOption *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  AddrObjGoogle::protobuf::UnknownFieldSet *v32;
  int v33;
  BOOL v34;
  int v35;
  unsigned __int8 *v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;

  v5 = this;
  v6 = (int *)(this + 40);
  v7 = (void ***)(this + 32);
  v8 = (uint64_t **)(this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v9 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
          {
            this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            v10 = this;
            *((_DWORD *)a2 + 8) = this;
            if (!(_DWORD)this)
              return 1;
          }
          else
          {
            v10 = *v9;
            *((_DWORD *)a2 + 8) = v10;
            *((_QWORD *)a2 + 1) = v9 + 1;
            if (!(_DWORD)v10)
              return 1;
          }
          v11 = v10 >> 3;
          if (v10 >> 3 != 1)
            break;
          v12 = v10 & 7;
          if ((v10 & 7) != 0)
            goto LABEL_19;
          v38 = 0;
          v14 = (char *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
            if (!(_DWORD)this)
              return this;
            v15 = v38;
            v16 = (_BYTE *)*((_QWORD *)a2 + 1);
            v13 = *((_QWORD *)a2 + 2);
          }
          else
          {
            v15 = *v14;
            v16 = v14 + 1;
            *((_QWORD *)a2 + 1) = v16;
          }
          *(_BYTE *)(v5 + 64) = v15 != 0;
          *(_DWORD *)(v5 + 72) |= 1u;
          if ((unint64_t)v16 < v13 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_30;
          }
        }
        if (v11 != 2)
          break;
        v12 = v10 & 7;
        if ((v10 & 7) != 0)
          goto LABEL_19;
        v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_30:
        v37 = 0;
        if ((unint64_t)v17 >= v13 || (char)*v17 < 0)
        {
          this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37);
          if (!(_DWORD)this)
            return this;
          v19 = v37;
          v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v17;
          v20 = v17 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *(_BYTE *)(v5 + 65) = v19 != 0;
        *(_DWORD *)(v5 + 72) |= 2u;
        if ((int)v13 - (int)v20 >= 2 && *v20 == 186 && v20[1] == 62)
          goto LABEL_38;
      }
      if (v11 != 999)
        break;
      v12 = v10 & 7;
      if (v12 != 2)
        goto LABEL_19;
      while (1)
      {
        v21 = *(_DWORD *)(v5 + 52);
        v22 = *(int *)(v5 + 48);
        if ((int)v22 >= v21)
        {
          if (v21 == *(_DWORD *)(v5 + 56))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v21 + 1);
            v21 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v21 + 1;
          v24 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
          v25 = *(_QWORD *)(v5 + 40);
          v26 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v26 + 1;
          *(_QWORD *)(v25 + 8 * v26) = v24;
        }
        else
        {
          v23 = *(_QWORD *)(v5 + 40);
          *(_DWORD *)(v5 + 48) = v22 + 1;
          v24 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v23 + 8 * v22);
        }
        v39 = 0;
        v27 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39))
            return 0;
        }
        else
        {
          v39 = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)a2 + 14);
        v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29)
          return 0;
        v30 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v39);
        if (!AddrObjGoogle::protobuf::UninterpretedOption::MergePartialFromCodedStream((uint64_t)v24, a2, v31, v32)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
        v33 = *((_DWORD *)a2 + 14);
        v34 = __OFSUB__(v33, 1);
        v35 = v33 - 1;
        if (v35 < 0 == v34)
          *((_DWORD *)a2 + 14) = v35;
        v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v36 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
        if ((int)v36 - (int)v20 <= 1 || *v20 != 186 || v20[1] != 62)
          break;
LABEL_38:
        *((_QWORD *)a2 + 1) = v20 + 2;
      }
      if (v20 == v36 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        this = 1;
        *((_BYTE *)a2 + 36) = 1;
        return this;
      }
    }
    v12 = v10 & 7;
LABEL_19:
    if (v12 == 4)
      return 1;
    if (v10 >> 6 < 0x7D)
    {
      this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)v10, v7, a4);
      if ((this & 1) == 0)
        return 0;
    }
    else
    {
      v18 = (const AddrObjGoogle::protobuf::Message *)AddrObjGoogle::protobuf::MessageOptions::default_instance_((AddrObjGoogle::protobuf::MessageOptions *)this);
      this = AddrObjGoogle::protobuf::internal::ExtensionSet::ParseField(v8, v10, a2, v18, (AddrObjGoogle::protobuf::UnknownFieldSet *)v7);
      if ((this & 1) == 0)
        return 0;
    }
  }
}

void AddrObjGoogle::protobuf::MessageOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::MessageOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _QWORD *v9;
  uint64_t **v10;
  _QWORD *v11;

  v6 = *((_DWORD *)this + 18);
  if ((v6 & 1) != 0)
  {
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)1, *((unsigned __int8 *)this + 64), a2, a4);
    v6 = *((_DWORD *)this + 18);
  }
  if ((v6 & 2) != 0)
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 65), a2, a4);
  if (*((int *)this + 12) >= 1)
  {
    v7 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v7++), a2);
    while (v7 < *((int *)this + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::MessageOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v11 = (_QWORD *)*((_QWORD *)this + 4);
  v10 = (uint64_t **)((char *)this + 32);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::MessageOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::MessageOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  int v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;
  unsigned int *v9;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v10;
  AddrObjGoogle::protobuf::UnknownFieldSet *v11;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  _QWORD *v15;
  uint64_t **v16;
  _QWORD *v17;

  v3 = a2;
  v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) != 0)
  {
    v6 = *((_BYTE *)this + 64);
    *a2 = 8;
    a2[1] = v6;
    v3 = a2 + 2;
    v5 = *((_DWORD *)this + 18);
  }
  if ((v5 & 2) != 0)
  {
    v7 = *((_BYTE *)this + 65);
    *v3 = 16;
    v3[1] = v7;
    v3 += 2;
  }
  if (*((int *)this + 12) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v8);
      *(_WORD *)v3 = 16058;
      v10 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v9[22];
      if (v10 > 0x7F)
      {
        v11 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v3 + 2, a3);
      }
      else
      {
        v3[2] = v10;
        v11 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v9, v11, a3, v3);
      ++v8;
    }
    while (v8 < *((int *)this + 12));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::MessageOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v17 = (_QWORD *)*((_QWORD *)this + 4);
  v16 = (uint64_t **)((char *)this + 32);
  v15 = v17;
  if (v17)
  {
    if (*v15 != v15[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, result, v13, v14);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::MessageOptions::ByteSize(AddrObjGoogle::protobuf::MessageOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = 2 * (*((_DWORD *)this + 18) & 1);
  if ((*((_DWORD *)this + 18) & 2) != 0)
    v3 += 2;
  if (*((_DWORD *)this + 18))
    v4 = v3;
  else
    v4 = 0;
  v5 = *((_DWORD *)this + 12);
  v6 = v4 + 2 * v5;
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 5) + 8 * v7), a2);
      v9 = (int)v8;
      if (v8 >= 0x80)
        v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      else
        v10 = 1;
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *((int *)this + 12));
  }
  v12 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v6;
  v13 = (_QWORD *)*((_QWORD *)this + 4);
  if (v13 && *v13 != v13[1])
    v12 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v11)+ v12;
  *((_DWORD *)this + 17) = v12;
  return v12;
}

void AddrObjGoogle::protobuf::MessageOptions::MergeFrom(AddrObjGoogle::protobuf::MessageOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::MessageOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 5201);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::MessageOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188805438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::MessageOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::MessageOptions::CopyFrom(AddrObjGoogle::protobuf::MessageOptions *this, const AddrObjGoogle::protobuf::MessageOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::MessageOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::MessageOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::MessageOptions::IsInitialized(AddrObjGoogle::protobuf::internal::ExtensionSet **this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((int *)this + 12) < 1)
    return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  v2 = 0;
  while (1)
  {
    v3 = *((_QWORD *)this[5] + v2);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
      break;
    if (++v2 >= *((int *)this + 12))
      return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::MessageOptions::GetMetadata(AddrObjGoogle::protobuf::MessageOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50708;
}

void sub_1888055B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 80) = a2;
  return this;
}

AddrObjGoogle::protobuf::FieldOptions *AddrObjGoogle::protobuf::FieldOptions::New(AddrObjGoogle::protobuf::FieldOptions *this)
{
  AddrObjGoogle::protobuf::FieldOptions *v1;

  v1 = (AddrObjGoogle::protobuf::FieldOptions *)operator new();
  AddrObjGoogle::protobuf::FieldOptions::FieldOptions(v1);
  return v1;
}

void sub_188805614(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FieldOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::FieldOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  _QWORD *v9;
  uint64_t **v10;
  _QWORD *v11;

  v6 = *((_DWORD *)this + 21);
  if ((v6 & 1) != 0)
  {
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    v6 = *((_DWORD *)this + 21);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 44), a2, a4);
  v6 = *((_DWORD *)this + 21);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)3, *((unsigned __int8 *)this + 46), a2, a4);
  v6 = *((_DWORD *)this + 21);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)5, *((unsigned __int8 *)this + 45), a2, a4);
  v6 = *((_DWORD *)this + 21);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_19:
  AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(9, *((_QWORD *)this + 6), a2);
  if ((*((_DWORD *)this + 21) & 0x20) != 0)
LABEL_7:
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)0xA, *((unsigned __int8 *)this + 47), a2, a4);
LABEL_8:
  if (*((int *)this + 16) >= 1)
  {
    v7 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 7) + 8 * v7++), a2);
    while (v7 < *((int *)this + 16));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::FieldOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v11 = (_QWORD *)*((_QWORD *)this + 4);
  v10 = (uint64_t **)((char *)this + 32);
  v9 = v11;
  if (v11)
  {
    if (*v9 != v9[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::FieldOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::FieldOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  unint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned int *v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  AddrObjGoogle::protobuf::UnknownFieldSet *v13;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  _QWORD *v17;
  uint64_t **v18;
  _QWORD *v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  uint64_t v23;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v24;
  _BYTE *v25;
  int v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  const void *v28;

  v3 = a2;
  if ((*((_BYTE *)this + 84) & 1) != 0)
  {
    v5 = *((int *)this + 10);
    *a2 = 8;
    v6 = a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      v7 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        v3[1] = v5;
        v3 += 2;
        goto LABEL_8;
      }
      v7 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v5, v6, a3);
    }
    v3 = v7;
  }
LABEL_8:
  v8 = *((_DWORD *)this + 21);
  if ((v8 & 2) != 0)
  {
    v20 = *((_BYTE *)this + 44);
    *v3 = 16;
    v3[1] = v20;
    v3 += 2;
    v8 = *((_DWORD *)this + 21);
    if ((v8 & 8) == 0)
    {
LABEL_10:
      if ((v8 & 4) == 0)
        goto LABEL_11;
      goto LABEL_26;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_10;
  }
  v21 = *((_BYTE *)this + 46);
  *v3 = 24;
  v3[1] = v21;
  v3 += 2;
  v8 = *((_DWORD *)this + 21);
  if ((v8 & 4) == 0)
  {
LABEL_11:
    if ((v8 & 0x10) == 0)
      goto LABEL_12;
    goto LABEL_27;
  }
LABEL_26:
  v22 = *((_BYTE *)this + 45);
  *v3 = 40;
  v3[1] = v22;
  v3 += 2;
  v8 = *((_DWORD *)this + 21);
  if ((v8 & 0x10) == 0)
  {
LABEL_12:
    if ((v8 & 0x20) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
LABEL_27:
  v23 = *((_QWORD *)this + 6);
  *v3 = 74;
  if (*(char *)(v23 + 23) < 0)
    v24 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v23 + 8);
  else
    v24 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v23 + 23);
  if (v24 > 0x7F)
  {
    v25 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, v3 + 1, a3);
  }
  else
  {
    v3[1] = v24;
    v25 = v3 + 2;
  }
  v26 = *(char *)(v23 + 23);
  if (v26 >= 0)
    v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v23;
  else
    v27 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v23;
  if (v26 >= 0)
    v28 = (const void *)*(unsigned __int8 *)(v23 + 23);
  else
    v28 = (const void *)*(unsigned int *)(v23 + 8);
  v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v27, v28, v25, v3);
  if ((*((_DWORD *)this + 21) & 0x20) != 0)
  {
LABEL_13:
    v9 = *((_BYTE *)this + 47);
    *v3 = 80;
    v3[1] = v9;
    v3 += 2;
  }
LABEL_14:
  if (*((int *)this + 16) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(unsigned int **)(*((_QWORD *)this + 7) + 8 * v10);
      *(_WORD *)v3 = 16058;
      v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v11[22];
      if (v12 > 0x7F)
      {
        v13 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v3 + 2, a3);
      }
      else
      {
        v3[2] = v12;
        v13 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v11, v13, a3, v3);
      ++v10;
    }
    while (v10 < *((int *)this + 16));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::FieldOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v19 = (_QWORD *)*((_QWORD *)this + 4);
  v18 = (uint64_t **)((char *)this + 32);
  v17 = v19;
  if (v19)
  {
    if (*v17 != v17[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, result, v15, v16);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::FieldOptions::ByteSize(AddrObjGoogle::protobuf::FieldOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v19;
  uint64_t v20;
  _QWORD *v21;

  v3 = *((unsigned __int8 *)this + 84);
  if (*((_BYTE *)this + 84))
  {
    if ((v3 & 1) != 0)
    {
      v5 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v5 & 0x80000000) != 0)
      {
        v4 = 11;
      }
      else if (v5 >= 0x80)
      {
        v4 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v3 = *((_DWORD *)this + 21);
      }
      else
      {
        v4 = 2;
      }
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v4 += 2;
    if ((v3 & 4) != 0)
      v4 += 2;
    if ((v3 & 8) != 0)
      v6 = v4 + 2;
    else
      v6 = v4;
    if ((v3 & 0x10) != 0)
    {
      v7 = *((_QWORD *)this + 6);
      v8 = *(unsigned __int8 *)(v7 + 23);
      v9 = v8;
      v10 = *(_QWORD *)(v7 + 8);
      if ((v8 & 0x80u) == 0)
        v11 = *(unsigned __int8 *)(v7 + 23);
      else
        v11 = v10;
      if (v11 >= 0x80)
      {
        v12 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v11);
        v8 = *(unsigned __int8 *)(v7 + 23);
        v10 = *(_QWORD *)(v7 + 8);
        v3 = *((_DWORD *)this + 21);
        v9 = *(_BYTE *)(v7 + 23);
      }
      else
      {
        v12 = 1;
      }
      if (v9 < 0)
        v8 = v10;
      v6 += v12 + v8 + 1;
    }
    if ((v3 & 0x20) != 0)
      v3 = v6 + 2;
    else
      v3 = v6;
  }
  v13 = *((_DWORD *)this + 16);
  v14 = v3 + 2 * v13;
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      v16 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 7) + 8 * v15), a2);
      v17 = (int)v16;
      if (v16 >= 0x80)
        v18 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      else
        v18 = 1;
      v14 += v17 + v18;
      ++v15;
    }
    while (v15 < *((int *)this + 16));
  }
  v20 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v14;
  v21 = (_QWORD *)*((_QWORD *)this + 4);
  if (v21 && *v21 != v21[1])
    v20 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v19)+ v20;
  *((_DWORD *)this + 20) = v20;
  return v20;
}

void AddrObjGoogle::protobuf::FieldOptions::MergeFrom(AddrObjGoogle::protobuf::FieldOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::FieldOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 5691);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::FieldOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188805B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::FieldOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::FieldOptions::CopyFrom(AddrObjGoogle::protobuf::FieldOptions *this, const AddrObjGoogle::protobuf::FieldOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::FieldOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::FieldOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::FieldOptions::GetMetadata(AddrObjGoogle::protobuf::FieldOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50718;
}

void sub_188805CA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumOptions::~EnumOptions(AddrObjGoogle::protobuf::EnumOptions *this)
{
  *(_QWORD *)this = &off_1E1BF5068;
  AddrObjGoogle::protobuf::EnumOptions::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 5);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::EnumOptions *)((char *)this + 32));
  AddrObjGoogle::protobuf::internal::ExtensionSet::~ExtensionSet((AddrObjGoogle::protobuf::EnumOptions *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::EnumOptions::~EnumOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::EnumOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

AddrObjGoogle::protobuf::EnumOptions *AddrObjGoogle::protobuf::EnumOptions::New(AddrObjGoogle::protobuf::EnumOptions *this)
{
  AddrObjGoogle::protobuf::EnumOptions *v1;

  v1 = (AddrObjGoogle::protobuf::EnumOptions *)operator new();
  AddrObjGoogle::protobuf::EnumOptions::EnumOptions(v1);
  return v1;
}

void sub_188805D78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::EnumOptions::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  int *v6;
  void ***v7;
  uint64_t **v8;
  char *v9;
  uint64_t v10;
  int v11;
  unsigned __int8 *v12;
  unint64_t v13;
  unsigned int v14;
  unsigned __int8 *v15;
  const AddrObjGoogle::protobuf::Message *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  AddrObjGoogle::protobuf::UninterpretedOption *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  AddrObjGoogle::protobuf::UnknownFieldSet *v28;
  int v29;
  BOOL v30;
  int v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned int v34;

  v5 = this;
  v6 = (int *)(this + 40);
  v7 = (void ***)(this + 32);
  v8 = (uint64_t **)(this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          v10 = this;
          *((_DWORD *)a2 + 8) = this;
          if (!(_DWORD)this)
            return 1;
        }
        else
        {
          v10 = *v9;
          *((_DWORD *)a2 + 8) = v10;
          *((_QWORD *)a2 + 1) = v9 + 1;
          if (!(_DWORD)v10)
            return 1;
        }
        if (v10 >> 3 != 2)
          break;
        v11 = v10 & 7;
        if ((v10 & 7) != 0)
          goto LABEL_16;
        v33 = 0;
        v12 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v13 || (char)*v12 < 0)
        {
          this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)this)
            return this;
          v14 = v33;
          v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v12;
          v15 = v12 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *(_BYTE *)(v5 + 64) = v14 != 0;
        *(_DWORD *)(v5 + 72) |= 1u;
        if ((int)v13 - (int)v15 >= 2 && *v15 == 186 && v15[1] == 62)
          goto LABEL_27;
      }
      if (v10 >> 3 != 999)
        break;
      v11 = v10 & 7;
      if (v11 != 2)
        goto LABEL_16;
      while (1)
      {
        v17 = *(_DWORD *)(v5 + 52);
        v18 = *(int *)(v5 + 48);
        if ((int)v18 >= v17)
        {
          if (v17 == *(_DWORD *)(v5 + 56))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v17 + 1);
            v17 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v17 + 1;
          v20 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
          v21 = *(_QWORD *)(v5 + 40);
          v22 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v22 + 1;
          *(_QWORD *)(v21 + 8 * v22) = v20;
        }
        else
        {
          v19 = *(_QWORD *)(v5 + 40);
          *(_DWORD *)(v5 + 48) = v18 + 1;
          v20 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v19 + 8 * v18);
        }
        v34 = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))
            return 0;
        }
        else
        {
          v34 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        v26 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v34);
        if (!AddrObjGoogle::protobuf::UninterpretedOption::MergePartialFromCodedStream((uint64_t)v20, a2, v27, v28)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v26);
        v29 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v29, 1);
        v31 = v29 - 1;
        if (v31 < 0 == v30)
          *((_DWORD *)a2 + 14) = v31;
        v15 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
        if ((int)v32 - (int)v15 <= 1 || *v15 != 186 || v15[1] != 62)
          break;
LABEL_27:
        *((_QWORD *)a2 + 1) = v15 + 2;
      }
      if (v15 == v32 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        this = 1;
        *((_BYTE *)a2 + 36) = 1;
        return this;
      }
    }
    v11 = v10 & 7;
LABEL_16:
    if (v11 == 4)
      return 1;
    if (v10 >> 6 < 0x7D)
    {
      this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)v10, v7, a4);
      if ((this & 1) == 0)
        return 0;
    }
    else
    {
      v16 = (const AddrObjGoogle::protobuf::Message *)AddrObjGoogle::protobuf::EnumOptions::default_instance_((AddrObjGoogle::protobuf::EnumOptions *)this);
      this = AddrObjGoogle::protobuf::internal::ExtensionSet::ParseField(v8, v10, a2, v16, (AddrObjGoogle::protobuf::UnknownFieldSet *)v7);
      if ((this & 1) == 0)
        return 0;
    }
  }
}

void AddrObjGoogle::protobuf::EnumOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::EnumOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  _QWORD *v8;
  uint64_t **v9;
  _QWORD *v10;

  if ((*((_BYTE *)this + 72) & 1) != 0)
    AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 64), a2, a4);
  if (*((int *)this + 12) >= 1)
  {
    v6 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v6++), a2);
    while (v6 < *((int *)this + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::EnumOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v10 = (_QWORD *)*((_QWORD *)this + 4);
  v9 = (uint64_t **)((char *)this + 32);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, v7);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::EnumOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::EnumOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  unsigned __int8 v5;
  uint64_t v6;
  unsigned int *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  uint64_t **v14;
  _QWORD *v15;

  v3 = a2;
  if ((*((_BYTE *)this + 72) & 1) != 0)
  {
    v5 = *((_BYTE *)this + 64);
    *a2 = 16;
    a2[1] = v5;
    v3 = a2 + 2;
  }
  if (*((int *)this + 12) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v6);
      *(_WORD *)v3 = 16058;
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7[22];
      if (v8 > 0x7F)
      {
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v3 + 2, a3);
      }
      else
      {
        v3[2] = v8;
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v7, v9, a3, v3);
      ++v6;
    }
    while (v6 < *((int *)this + 12));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::EnumOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v15 = (_QWORD *)*((_QWORD *)this + 4);
  v14 = (uint64_t **)((char *)this + 32);
  v13 = v15;
  if (v15)
  {
    if (*v13 != v13[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, result, v11, v12);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::EnumOptions::ByteSize(AddrObjGoogle::protobuf::EnumOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v10;
  uint64_t v11;
  _QWORD *v12;

  if (*((_DWORD *)this + 18))
    v3 = 2 * (*((_DWORD *)this + 18) & 1);
  else
    v3 = 0;
  v4 = *((_DWORD *)this + 12);
  v5 = v3 + 2 * v4;
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 5) + 8 * v6), a2);
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      else
        v9 = 1;
      v5 += v8 + v9;
      ++v6;
    }
    while (v6 < *((int *)this + 12));
  }
  v11 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v5;
  v12 = (_QWORD *)*((_QWORD *)this + 4);
  if (v12 && *v12 != v12[1])
    v11 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v10)+ v11;
  *((_DWORD *)this + 17) = v11;
  return v11;
}

void AddrObjGoogle::protobuf::EnumOptions::MergeFrom(AddrObjGoogle::protobuf::EnumOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::EnumOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 5977);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::EnumOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188806384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::EnumOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::EnumOptions::CopyFrom(AddrObjGoogle::protobuf::EnumOptions *this, const AddrObjGoogle::protobuf::EnumOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::EnumOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::EnumOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::EnumOptions::IsInitialized(AddrObjGoogle::protobuf::internal::ExtensionSet **this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((int *)this + 12) < 1)
    return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  v2 = 0;
  while (1)
  {
    v3 = *((_QWORD *)this[5] + v2);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
      break;
    if (++v2 >= *((int *)this + 12))
      return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::EnumOptions::GetMetadata(AddrObjGoogle::protobuf::EnumOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50730;
}

void sub_188806504(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumValueOptions::~EnumValueOptions(AddrObjGoogle::protobuf::EnumValueOptions *this)
{
  *(_QWORD *)this = &off_1E1BF56C0;
  AddrObjGoogle::protobuf::EnumValueOptions::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 5);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::EnumValueOptions *)((char *)this + 32));
  AddrObjGoogle::protobuf::internal::ExtensionSet::~ExtensionSet((AddrObjGoogle::protobuf::EnumValueOptions *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::EnumValueOptions::~EnumValueOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::EnumValueOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

AddrObjGoogle::protobuf::EnumValueOptions *AddrObjGoogle::protobuf::EnumValueOptions::New(AddrObjGoogle::protobuf::EnumValueOptions *this)
{
  AddrObjGoogle::protobuf::EnumValueOptions *v1;

  v1 = (AddrObjGoogle::protobuf::EnumValueOptions *)operator new();
  AddrObjGoogle::protobuf::EnumValueOptions::EnumValueOptions(v1);
  return v1;
}

void sub_1888065D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::EnumValueOptions::MergePartialFromCodedStream(unint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  unint64_t v5;
  int *v6;
  void ***v7;
  uint64_t **v8;
  char *v9;
  int64_t v10;
  const AddrObjGoogle::protobuf::Message *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::UninterpretedOption *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::UnknownFieldSet *v23;
  int v24;
  BOOL v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t result;
  unsigned int v30;

  v5 = this;
  v6 = (int *)(this + 40);
  v7 = (void ***)(this + 32);
  v8 = (uint64_t **)(this + 8);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v10 = this;
      *((_DWORD *)a2 + 8) = this;
    }
    else
    {
      v10 = *v9;
      *((_DWORD *)a2 + 8) = v10;
      *((_QWORD *)a2 + 1) = v9 + 1;
    }
    if ((_DWORD)v10 == 7994)
    {
      while (1)
      {
        v12 = *(_DWORD *)(v5 + 52);
        v13 = *(int *)(v5 + 48);
        if ((int)v13 >= v12)
        {
          if (v12 == *(_DWORD *)(v5 + 56))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v12 + 1);
            v12 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v12 + 1;
          v15 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
          v16 = *(_QWORD *)(v5 + 40);
          v17 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v17 + 1;
          *(_QWORD *)(v16 + 8 * v17) = v15;
        }
        else
        {
          v14 = *(_QWORD *)(v5 + 40);
          *(_DWORD *)(v5 + 48) = v13 + 1;
          v15 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v14 + 8 * v13);
        }
        v30 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            return 0;
        }
        else
        {
          v30 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v30);
        if (!AddrObjGoogle::protobuf::UninterpretedOption::MergePartialFromCodedStream((uint64_t)v15, a2, v22, v23)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v24 = *((_DWORD *)a2 + 14);
        v25 = __OFSUB__(v24, 1);
        v26 = v24 - 1;
        if (v26 < 0 == v25)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
        if ((int)v28 - (int)v27 <= 1 || *v27 != 186 || v27[1] != 62)
        {
          if (v27 == v28 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v27 + 2;
      }
    }
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if (v10 >> 6 < 0x7D)
    {
      this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)v10, v7, a4);
      if ((this & 1) == 0)
        return 0;
    }
    else
    {
      v11 = (const AddrObjGoogle::protobuf::Message *)AddrObjGoogle::protobuf::EnumValueOptions::default_instance_((AddrObjGoogle::protobuf::EnumValueOptions *)this);
      this = AddrObjGoogle::protobuf::internal::ExtensionSet::ParseField(v8, v10, a2, v11, (AddrObjGoogle::protobuf::UnknownFieldSet *)v7);
      if ((this & 1) == 0)
        return 0;
    }
  }
}

void AddrObjGoogle::protobuf::EnumValueOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::EnumValueOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  _QWORD *v6;
  uint64_t **v7;
  _QWORD *v8;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v4++), a2);
    while (v4 < *((int *)this + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::EnumValueOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v8 = (_QWORD *)*((_QWORD *)this + 4);
  v7 = (uint64_t **)((char *)this + 32);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, v5);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::EnumValueOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::EnumValueOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  unsigned int *v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t **v13;
  _QWORD *v14;

  v3 = a2;
  if (*((int *)this + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v5);
      *(_WORD *)v3 = 16058;
      v7 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6[22];
      if (v7 > 0x7F)
      {
        v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v3 + 2, a3);
      }
      else
      {
        v3[2] = v7;
        v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v6, v8, a3, v3);
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::EnumValueOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v14 = (_QWORD *)*((_QWORD *)this + 4);
  v13 = (uint64_t **)((char *)this + 32);
  v12 = v14;
  if (v14)
  {
    if (*v12 != v12[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, result, v10, v11);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::EnumValueOptions::ByteSize(AddrObjGoogle::protobuf::EnumValueOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = *((_DWORD *)this + 12);
  v4 = 2 * v3;
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      v6 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 5) + 8 * v5), a2);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v4 += v7 + v8;
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  v10 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v4;
  v11 = (_QWORD *)*((_QWORD *)this + 4);
  if (v11 && *v11 != v11[1])
    v10 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v9)+ v10;
  *((_DWORD *)this + 16) = v10;
  return v10;
}

void AddrObjGoogle::protobuf::EnumValueOptions::MergeFrom(AddrObjGoogle::protobuf::EnumValueOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::EnumValueOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6206);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::EnumValueOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188806AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::EnumValueOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::EnumValueOptions::CopyFrom(AddrObjGoogle::protobuf::EnumValueOptions *this, const AddrObjGoogle::protobuf::EnumValueOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::EnumValueOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::EnumValueOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::EnumValueOptions::IsInitialized(AddrObjGoogle::protobuf::internal::ExtensionSet **this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((int *)this + 12) < 1)
    return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  v2 = 0;
  while (1)
  {
    v3 = *((_QWORD *)this[5] + v2);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
      break;
    if (++v2 >= *((int *)this + 12))
      return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::EnumValueOptions::GetMetadata(AddrObjGoogle::protobuf::EnumValueOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50740;
}

void sub_188806C7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::ServiceOptions::~ServiceOptions(AddrObjGoogle::protobuf::ServiceOptions *this)
{
  *(_QWORD *)this = &off_1E1BF54B0;
  AddrObjGoogle::protobuf::ServiceOptions::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 5);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::ServiceOptions *)((char *)this + 32));
  AddrObjGoogle::protobuf::internal::ExtensionSet::~ExtensionSet((AddrObjGoogle::protobuf::ServiceOptions *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::ServiceOptions::~ServiceOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::ServiceOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

AddrObjGoogle::protobuf::ServiceOptions *AddrObjGoogle::protobuf::ServiceOptions::New(AddrObjGoogle::protobuf::ServiceOptions *this)
{
  AddrObjGoogle::protobuf::ServiceOptions *v1;

  v1 = (AddrObjGoogle::protobuf::ServiceOptions *)operator new();
  AddrObjGoogle::protobuf::ServiceOptions::ServiceOptions(v1);
  return v1;
}

void sub_188806D4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::ServiceOptions::MergePartialFromCodedStream(unint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  unint64_t v5;
  int *v6;
  void ***v7;
  uint64_t **v8;
  char *v9;
  int64_t v10;
  const AddrObjGoogle::protobuf::Message *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::UninterpretedOption *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::UnknownFieldSet *v23;
  int v24;
  BOOL v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t result;
  unsigned int v30;

  v5 = this;
  v6 = (int *)(this + 40);
  v7 = (void ***)(this + 32);
  v8 = (uint64_t **)(this + 8);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v10 = this;
      *((_DWORD *)a2 + 8) = this;
    }
    else
    {
      v10 = *v9;
      *((_DWORD *)a2 + 8) = v10;
      *((_QWORD *)a2 + 1) = v9 + 1;
    }
    if ((_DWORD)v10 == 7994)
    {
      while (1)
      {
        v12 = *(_DWORD *)(v5 + 52);
        v13 = *(int *)(v5 + 48);
        if ((int)v13 >= v12)
        {
          if (v12 == *(_DWORD *)(v5 + 56))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v12 + 1);
            v12 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v12 + 1;
          v15 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
          v16 = *(_QWORD *)(v5 + 40);
          v17 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v17 + 1;
          *(_QWORD *)(v16 + 8 * v17) = v15;
        }
        else
        {
          v14 = *(_QWORD *)(v5 + 40);
          *(_DWORD *)(v5 + 48) = v13 + 1;
          v15 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v14 + 8 * v13);
        }
        v30 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            return 0;
        }
        else
        {
          v30 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v30);
        if (!AddrObjGoogle::protobuf::UninterpretedOption::MergePartialFromCodedStream((uint64_t)v15, a2, v22, v23)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v24 = *((_DWORD *)a2 + 14);
        v25 = __OFSUB__(v24, 1);
        v26 = v24 - 1;
        if (v26 < 0 == v25)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
        if ((int)v28 - (int)v27 <= 1 || *v27 != 186 || v27[1] != 62)
        {
          if (v27 == v28 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v27 + 2;
      }
    }
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if (v10 >> 6 < 0x7D)
    {
      this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)v10, v7, a4);
      if ((this & 1) == 0)
        return 0;
    }
    else
    {
      v11 = (const AddrObjGoogle::protobuf::Message *)AddrObjGoogle::protobuf::ServiceOptions::default_instance_((AddrObjGoogle::protobuf::ServiceOptions *)this);
      this = AddrObjGoogle::protobuf::internal::ExtensionSet::ParseField(v8, v10, a2, v11, (AddrObjGoogle::protobuf::UnknownFieldSet *)v7);
      if ((this & 1) == 0)
        return 0;
    }
  }
}

void AddrObjGoogle::protobuf::ServiceOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::ServiceOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  _QWORD *v6;
  uint64_t **v7;
  _QWORD *v8;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v4++), a2);
    while (v4 < *((int *)this + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::ServiceOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v8 = (_QWORD *)*((_QWORD *)this + 4);
  v7 = (uint64_t **)((char *)this + 32);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, v5);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::ServiceOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::ServiceOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  unsigned int *v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t **v13;
  _QWORD *v14;

  v3 = a2;
  if (*((int *)this + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v5);
      *(_WORD *)v3 = 16058;
      v7 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6[22];
      if (v7 > 0x7F)
      {
        v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v3 + 2, a3);
      }
      else
      {
        v3[2] = v7;
        v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v6, v8, a3, v3);
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::ServiceOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v14 = (_QWORD *)*((_QWORD *)this + 4);
  v13 = (uint64_t **)((char *)this + 32);
  v12 = v14;
  if (v14)
  {
    if (*v12 != v12[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, result, v10, v11);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::ServiceOptions::ByteSize(AddrObjGoogle::protobuf::ServiceOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = *((_DWORD *)this + 12);
  v4 = 2 * v3;
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      v6 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 5) + 8 * v5), a2);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v4 += v7 + v8;
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  v10 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v4;
  v11 = (_QWORD *)*((_QWORD *)this + 4);
  if (v11 && *v11 != v11[1])
    v10 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v9)+ v10;
  *((_DWORD *)this + 16) = v10;
  return v10;
}

void AddrObjGoogle::protobuf::ServiceOptions::MergeFrom(AddrObjGoogle::protobuf::ServiceOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::ServiceOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6429);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::ServiceOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188807274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::ServiceOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::ServiceOptions::CopyFrom(AddrObjGoogle::protobuf::ServiceOptions *this, const AddrObjGoogle::protobuf::ServiceOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::ServiceOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::ServiceOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::ServiceOptions::IsInitialized(AddrObjGoogle::protobuf::internal::ExtensionSet **this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((int *)this + 12) < 1)
    return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  v2 = 0;
  while (1)
  {
    v3 = *((_QWORD *)this[5] + v2);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
      break;
    if (++v2 >= *((int *)this + 12))
      return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::ServiceOptions::GetMetadata(AddrObjGoogle::protobuf::ServiceOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50750;
}

void sub_1888073F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MethodOptions::~MethodOptions(AddrObjGoogle::protobuf::MethodOptions *this)
{
  *(_QWORD *)this = &off_1E1BF5278;
  AddrObjGoogle::protobuf::MethodOptions::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 5);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::MethodOptions *)((char *)this + 32));
  AddrObjGoogle::protobuf::internal::ExtensionSet::~ExtensionSet((AddrObjGoogle::protobuf::MethodOptions *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::MethodOptions::~MethodOptions(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::MethodOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

AddrObjGoogle::protobuf::MethodOptions *AddrObjGoogle::protobuf::MethodOptions::New(AddrObjGoogle::protobuf::MethodOptions *this)
{
  AddrObjGoogle::protobuf::MethodOptions *v1;

  v1 = (AddrObjGoogle::protobuf::MethodOptions *)operator new();
  AddrObjGoogle::protobuf::MethodOptions::MethodOptions(v1);
  return v1;
}

void sub_1888074C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::MethodOptions::MergePartialFromCodedStream(unint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  unint64_t v5;
  int *v6;
  void ***v7;
  uint64_t **v8;
  char *v9;
  int64_t v10;
  const AddrObjGoogle::protobuf::Message *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::UninterpretedOption *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::UnknownFieldSet *v23;
  int v24;
  BOOL v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t result;
  unsigned int v30;

  v5 = this;
  v6 = (int *)(this + 40);
  v7 = (void ***)(this + 32);
  v8 = (uint64_t **)(this + 8);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v10 = this;
      *((_DWORD *)a2 + 8) = this;
    }
    else
    {
      v10 = *v9;
      *((_DWORD *)a2 + 8) = v10;
      *((_QWORD *)a2 + 1) = v9 + 1;
    }
    if ((_DWORD)v10 == 7994)
    {
      while (1)
      {
        v12 = *(_DWORD *)(v5 + 52);
        v13 = *(int *)(v5 + 48);
        if ((int)v13 >= v12)
        {
          if (v12 == *(_DWORD *)(v5 + 56))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v12 + 1);
            v12 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v12 + 1;
          v15 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New();
          v16 = *(_QWORD *)(v5 + 40);
          v17 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v17 + 1;
          *(_QWORD *)(v16 + 8 * v17) = v15;
        }
        else
        {
          v14 = *(_QWORD *)(v5 + 40);
          *(_DWORD *)(v5 + 48) = v13 + 1;
          v15 = *(AddrObjGoogle::protobuf::UninterpretedOption **)(v14 + 8 * v13);
        }
        v30 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
            return 0;
        }
        else
        {
          v30 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        v21 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v30);
        if (!AddrObjGoogle::protobuf::UninterpretedOption::MergePartialFromCodedStream((uint64_t)v15, a2, v22, v23)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        v24 = *((_DWORD *)a2 + 14);
        v25 = __OFSUB__(v24, 1);
        v26 = v24 - 1;
        if (v26 < 0 == v25)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v28 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
        if ((int)v28 - (int)v27 <= 1 || *v27 != 186 || v27[1] != 62)
        {
          if (v27 == v28 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v27 + 2;
      }
    }
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if (v10 >> 6 < 0x7D)
    {
      this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)v10, v7, a4);
      if ((this & 1) == 0)
        return 0;
    }
    else
    {
      v11 = (const AddrObjGoogle::protobuf::Message *)AddrObjGoogle::protobuf::MethodOptions::default_instance_((AddrObjGoogle::protobuf::MethodOptions *)this);
      this = AddrObjGoogle::protobuf::internal::ExtensionSet::ParseField(v8, v10, a2, v11, (AddrObjGoogle::protobuf::UnknownFieldSet *)v7);
      if ((this & 1) == 0)
        return 0;
    }
  }
}

void AddrObjGoogle::protobuf::MethodOptions::SerializeWithCachedSizes(AddrObjGoogle::protobuf::MethodOptions *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  _QWORD *v6;
  uint64_t **v7;
  _QWORD *v8;

  if (*((int *)this + 12) >= 1)
  {
    v4 = 0;
    do
      AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(999, *(_QWORD *)(*((_QWORD *)this + 5) + 8 * v4++), a2);
    while (v4 < *((int *)this + 12));
  }
  AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((AddrObjGoogle::protobuf::MethodOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  v8 = (_QWORD *)*((_QWORD *)this + 4);
  v7 = (uint64_t **)((char *)this + 32);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, v5);
  }
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::MethodOptions::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::MethodOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  unsigned int *v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  AddrObjGoogle::protobuf::UnknownFieldSet *v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *result;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t **v13;
  _QWORD *v14;

  v3 = a2;
  if (*((int *)this + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(unsigned int **)(*((_QWORD *)this + 5) + 8 * v5);
      *(_WORD *)v3 = 16058;
      v7 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6[22];
      if (v7 > 0x7F)
      {
        v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v3 + 2, a3);
      }
      else
      {
        v3[2] = v7;
        v8 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      v3 = (unsigned __int8 *)AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption *)v6, v8, a3, v3);
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  result = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::MethodOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  v14 = (_QWORD *)*((_QWORD *)this + 4);
  v13 = (uint64_t **)((char *)this + 32);
  v12 = v14;
  if (v14)
  {
    if (*v12 != v12[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, result, v10, v11);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::MethodOptions::ByteSize(AddrObjGoogle::protobuf::MethodOptions *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = *((_DWORD *)this + 12);
  v4 = 2 * v3;
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      v6 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption **)(*((_QWORD *)this + 5) + 8 * v5), a2);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v4 += v7 + v8;
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  v10 = AddrObjGoogle::protobuf::internal::ExtensionSet::ByteSize((AddrObjGoogle::protobuf::internal::ExtensionSet **)this + 1)
      + v4;
  v11 = (_QWORD *)*((_QWORD *)this + 4);
  if (v11 && *v11 != v11[1])
    v10 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v9)+ v10;
  *((_DWORD *)this + 16) = v10;
  return v10;
}

void AddrObjGoogle::protobuf::MethodOptions::MergeFrom(AddrObjGoogle::protobuf::MethodOptions *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::MethodOptions *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6652);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::MethodOptions::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1888079EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::MethodOptions::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::MethodOptions::CopyFrom(AddrObjGoogle::protobuf::MethodOptions *this, const AddrObjGoogle::protobuf::MethodOptions *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::MethodOptions *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::MethodOptions::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::MethodOptions::IsInitialized(AddrObjGoogle::protobuf::internal::ExtensionSet **this)
{
  uint64_t v2;
  uint64_t v3;

  if (*((int *)this + 12) < 1)
    return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  v2 = 0;
  while (1)
  {
    v3 = *((_QWORD *)this[5] + v2);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) == 0)
      break;
    if (++v2 >= *((int *)this + 12))
      return AddrObjGoogle::protobuf::internal::ExtensionSet::IsInitialized(this + 1);
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::MethodOptions::GetMetadata(AddrObjGoogle::protobuf::MethodOptions *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50760;
}

void sub_188807B6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::UninterpretedOption_NamePart::MergeFrom(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this, const AddrObjGoogle::protobuf::UninterpretedOption_NamePart *a2)
{
  std::string *v4;
  int v5;
  const std::string *v6;
  uint64_t *v7;
  std::string *v8;
  char v9;
  char v10;
  std::string v11[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6923);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 8) |= 1u;
      v7 = (uint64_t *)*((_QWORD *)this + 2);
      if (v7 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
      {
        v8 = (std::string *)operator new();
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v8;
      }
      else
      {
        v8 = (std::string *)*((_QWORD *)this + 2);
      }
      std::string::operator=(v8, v6);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      v9 = *((_BYTE *)a2 + 24);
      *((_DWORD *)this + 8) |= 2u;
      *((_BYTE *)this + 24) = v9;
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)((char *)a2 + 8));
}

void sub_188807C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  *(_QWORD *)this = &off_1E1BF5E30;
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart::SharedDtor(this);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::SharedDtor(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;

  v2 = (uint64_t *)*((_QWORD *)this + 2);
  v3 = AddrObjGoogle::protobuf::internal::kEmptyString(this);
  if (v2 != v3)
  {
    v4 = *((_QWORD *)this + 2);
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      v3 = (uint64_t *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
    }
  }
  return AddrObjGoogle::protobuf::UninterpretedOption_NamePart::default_instance_((AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)v3);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::default_instance(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v1;

  v1 = (AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)AddrObjGoogle::protobuf::UninterpretedOption_NamePart::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::UninterpretedOption_NamePart::default_instance_(v1);
}

AddrObjGoogle::protobuf::UninterpretedOption_NamePart *AddrObjGoogle::protobuf::UninterpretedOption_NamePart::New(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v1;

  v1 = (AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)operator new();
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(v1);
  return v1;
}

void sub_188807DB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40ED7A6C83);
  _Unwind_Resume(a1);
}

uint64_t *AddrObjGoogle::protobuf::UninterpretedOption_NamePart::Clear(uint64_t *this)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  uint64_t v5;

  v1 = this;
  if (*((_BYTE *)this + 32))
  {
    if ((this[4] & 1) != 0)
    {
      v2 = (uint64_t *)this[2];
      this = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this);
      if (v2 != this)
      {
        v3 = v1[2];
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *((_BYTE *)v1 + 24) = 0;
  }
  v5 = v1[1];
  v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v1 + 1);
  *((_DWORD *)v4 + 6) = 0;
  if (v5)
    return (uint64_t *)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v4);
  return this;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  void ***v6;
  char *v7;
  AddrObjGoogle::protobuf::io::CodedInputStream *v8;
  int v9;
  unint64_t v10;
  char *v11;
  uint64_t *v12;
  std::string *v13;
  _BYTE *v14;
  unsigned int v15;
  unsigned __int8 *v16;
  unsigned int v17;

  v5 = this;
  v6 = (void ***)(this + 8);
  while (1)
  {
    while (1)
    {
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        v8 = (AddrObjGoogle::protobuf::io::CodedInputStream *)this;
        *((_DWORD *)a2 + 8) = this;
        if (!(_DWORD)this)
          return 1;
      }
      else
      {
        v8 = (AddrObjGoogle::protobuf::io::CodedInputStream *)*v7;
        *((_DWORD *)a2 + 8) = (_DWORD)v8;
        *((_QWORD *)a2 + 1) = v7 + 1;
        if (!(_DWORD)v8)
          return 1;
      }
      if (v8 >> 3 != 1)
        break;
      v9 = v8 & 7;
      if (v9 != 2)
        goto LABEL_15;
      *(_DWORD *)(v5 + 32) |= 1u;
      v12 = *(uint64_t **)(v5 + 16);
      if (v12 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
      {
        v13 = (std::string *)operator new();
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        *(_QWORD *)(v5 + 16) = v13;
      }
      else
      {
        v13 = *(std::string **)(v5 + 16);
      }
      this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v13);
      if (!(_DWORD)this)
        return this;
      v14 = (_BYTE *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        v11 = v14 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_23:
        v17 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v17);
          if (!(_DWORD)this)
            return this;
          v15 = v17;
          v16 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v11;
          v16 = (unsigned __int8 *)(v11 + 1);
          *((_QWORD *)a2 + 1) = v16;
        }
        *(_BYTE *)(v5 + 24) = v15 != 0;
        *(_DWORD *)(v5 + 32) |= 2u;
        if (v16 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          this = 1;
          *((_BYTE *)a2 + 36) = 1;
          return this;
        }
      }
    }
    if (v8 >> 3 == 2)
    {
      v9 = v8 & 7;
      if ((v8 & 7) == 0)
      {
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v9 = v8 & 7;
    }
LABEL_15:
    if (v9 == 4)
      return 1;
    this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, v8, v6, a4);
    if ((this & 1) == 0)
      return 0;
  }
}

uint64_t **AddrObjGoogle::protobuf::UninterpretedOption_NamePart::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t **v8;
  _QWORD *v9;

  v5 = (uint64_t)this;
  v6 = *((_DWORD *)this + 8);
  if ((v6 & 1) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(1, (uint64_t)this[2], a2);
    v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), a2, a4);
  v9 = *(_QWORD **)(v5 + 8);
  v8 = (uint64_t **)(v5 + 8);
  v7 = v9;
  if (v9)
  {
    if (*v7 != v7[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::UninterpretedOption_NamePart::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5;
  uint64_t v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  unsigned __int8 *v8;
  int v9;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v10;
  const void *v11;
  unsigned __int8 v12;
  _QWORD *v13;
  uint64_t **v14;
  _QWORD *v15;

  v5 = *((_DWORD *)this + 8);
  if ((v5 & 1) != 0)
  {
    v6 = *((_QWORD *)this + 2);
    *(_BYTE *)a2 = 10;
    if (*(char *)(v6 + 23) < 0)
      v7 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v6 + 8);
    else
      v7 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    if (v7 > 0x7F)
    {
      v8 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (_BYTE *)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v7;
      v8 = (unsigned __int8 *)a2 + 2;
    }
    v9 = *(char *)(v6 + 23);
    if (v9 >= 0)
      v10 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v6;
    else
      v10 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v6;
    if (v9 >= 0)
      v11 = (const void *)*(unsigned __int8 *)(v6 + 23);
    else
      v11 = (const void *)*(unsigned int *)(v6 + 8);
    a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, v8, a4);
    v5 = *((_DWORD *)this + 8);
  }
  if ((v5 & 2) != 0)
  {
    v12 = *((_BYTE *)this + 24);
    *(_BYTE *)a2 = 16;
    *((_BYTE *)a2 + 1) = v12;
    a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  v15 = (_QWORD *)*((_QWORD *)this + 1);
  v14 = (uint64_t **)((char *)this + 8);
  v13 = v15;
  if (!v15 || *v13 == v13[1])
    return a2;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::ByteSize(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  _QWORD *v13;

  LOBYTE(v3) = *((_BYTE *)this + 32);
  if ((_BYTE)v3)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)this + 2);
      v7 = *(unsigned __int8 *)(v6 + 23);
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      if ((v7 & 0x80u) == 0)
        v10 = *(unsigned __int8 *)(v6 + 23);
      else
        v10 = v9;
      if (v10 >= 0x80)
      {
        v12 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v10);
        v7 = *(unsigned __int8 *)(v6 + 23);
        v9 = *(_QWORD *)(v6 + 8);
        v11 = v12 + 1;
        v3 = *((_DWORD *)this + 8);
        v8 = *(_BYTE *)(v6 + 23);
      }
      else
      {
        v11 = 2;
      }
      if (v8 < 0)
        v7 = v9;
      v4 = v11 + v7;
    }
    else
    {
      v4 = 0;
    }
    if ((v3 & 2) != 0)
      v5 = v4 + 2;
    else
      v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v13 = (_QWORD *)*((_QWORD *)this + 1);
  if (v13 && *v13 != v13[1])
    v5 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v5;
  *((_DWORD *)this + 7) = v5;
  return v5;
}

void AddrObjGoogle::protobuf::UninterpretedOption_NamePart::MergeFrom(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 6911);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::UninterpretedOption_NamePart::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1888082CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::UninterpretedOption_NamePart::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

BOOL AddrObjGoogle::protobuf::UninterpretedOption_NamePart::IsInitialized(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  return (~*((_DWORD *)this + 8) & 3) == 0;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::GetMetadata(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50780;
}

void sub_1888083B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(AddrObjGoogle::protobuf::UninterpretedOption *this, const AddrObjGoogle::protobuf::UninterpretedOption *a2)
{
  std::string *v4;
  AddrObjGoogle::protobuf::internal *v5;
  uint64_t v6;
  const AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  const std::string *v15;
  uint64_t *v16;
  std::string *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const std::string *v21;
  uint64_t *v22;
  std::string *v23;
  const std::string *v24;
  uint64_t *v25;
  std::string *v26;
  char v27;
  std::string v28[2];

  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 7393);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 4, *((_DWORD *)a2 + 6) + *((_DWORD *)this + 6));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const AddrObjGoogle::protobuf::UninterpretedOption_NamePart **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)this + 4, v8 + 1);
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption_NamePart>::New();
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(AddrObjGoogle::protobuf::UninterpretedOption_NamePart **)(v10 + 8 * v9);
      }
      AddrObjGoogle::protobuf::UninterpretedOption_NamePart::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  v14 = *((_DWORD *)a2 + 23);
  if ((v14 & 0x1FE) == 0)
    goto LABEL_34;
  if ((v14 & 2) != 0)
  {
    v15 = (const std::string *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 23) |= 2u;
    v16 = (uint64_t *)*((_QWORD *)this + 5);
    if (v16 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
    {
      v17 = (std::string *)operator new();
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 5) = v17;
    }
    else
    {
      v17 = (std::string *)*((_QWORD *)this + 5);
    }
    v5 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v17, v15);
    v14 = *((_DWORD *)a2 + 23);
    if ((v14 & 4) == 0)
    {
LABEL_14:
      if ((v14 & 8) == 0)
        goto LABEL_15;
      goto LABEL_24;
    }
  }
  else if ((v14 & 4) == 0)
  {
    goto LABEL_14;
  }
  v18 = *((_QWORD *)a2 + 6);
  *((_DWORD *)this + 23) |= 4u;
  *((_QWORD *)this + 6) = v18;
  v14 = *((_DWORD *)a2 + 23);
  if ((v14 & 8) == 0)
  {
LABEL_15:
    if ((v14 & 0x10) == 0)
      goto LABEL_16;
LABEL_25:
    v20 = *((_QWORD *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x10u;
    *((_QWORD *)this + 8) = v20;
    v14 = *((_DWORD *)a2 + 23);
    if ((v14 & 0x20) == 0)
    {
LABEL_17:
      if ((v14 & 0x40) == 0)
        goto LABEL_34;
      goto LABEL_30;
    }
    goto LABEL_26;
  }
LABEL_24:
  v19 = *((_QWORD *)a2 + 7);
  *((_DWORD *)this + 23) |= 8u;
  *((_QWORD *)this + 7) = v19;
  v14 = *((_DWORD *)a2 + 23);
  if ((v14 & 0x10) != 0)
    goto LABEL_25;
LABEL_16:
  if ((v14 & 0x20) == 0)
    goto LABEL_17;
LABEL_26:
  v21 = (const std::string *)*((_QWORD *)a2 + 9);
  *((_DWORD *)this + 23) |= 0x20u;
  v22 = (uint64_t *)*((_QWORD *)this + 9);
  if (v22 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
  {
    v23 = (std::string *)operator new();
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 9) = v23;
  }
  else
  {
    v23 = (std::string *)*((_QWORD *)this + 9);
  }
  v5 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v23, v21);
  if ((*((_DWORD *)a2 + 23) & 0x40) != 0)
  {
LABEL_30:
    v24 = (const std::string *)*((_QWORD *)a2 + 10);
    *((_DWORD *)this + 23) |= 0x40u;
    v25 = (uint64_t *)*((_QWORD *)this + 10);
    if (v25 == AddrObjGoogle::protobuf::internal::kEmptyString(v5))
    {
      v26 = (std::string *)operator new();
      v26->__r_.__value_.__l.__size_ = 0;
      v26->__r_.__value_.__r.__words[2] = 0;
      v26->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 10) = v26;
    }
    else
    {
      v26 = (std::string *)*((_QWORD *)this + 10);
    }
    std::string::operator=(v26, v24);
  }
LABEL_34:
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const AddrObjGoogle::protobuf::UninterpretedOption *)((char *)a2 + 8));
}

void sub_188808684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::UninterpretedOption::~UninterpretedOption(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  *(_QWORD *)this = &off_1E1BF59A8;
  AddrObjGoogle::protobuf::UninterpretedOption::SharedDtor(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 2);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UninterpretedOption *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::UninterpretedOption::~UninterpretedOption(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::SharedDtor(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;

  v2 = (uint64_t *)*((_QWORD *)this + 5);
  v3 = AddrObjGoogle::protobuf::internal::kEmptyString(this);
  if (v2 != v3)
  {
    v4 = *((_QWORD *)this + 5);
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      v3 = (uint64_t *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
    }
  }
  v5 = (uint64_t *)*((_QWORD *)this + 9);
  v6 = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v3);
  if (v5 != v6)
  {
    v7 = *((_QWORD *)this + 9);
    if (v7)
    {
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      v6 = (uint64_t *)MEMORY[0x18D76437C](v7, 0x1012C40EC159624);
    }
  }
  v8 = (uint64_t *)*((_QWORD *)this + 10);
  v9 = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v6);
  if (v8 != v9)
  {
    v10 = *((_QWORD *)this + 10);
    if (v10)
    {
      if (*(char *)(v10 + 23) < 0)
        operator delete(*(void **)v10);
      v9 = (uint64_t *)MEMORY[0x18D76437C](v10, 0x1012C40EC159624);
    }
  }
  return AddrObjGoogle::protobuf::UninterpretedOption::default_instance_((AddrObjGoogle::protobuf::UninterpretedOption *)v9);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::default_instance(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  AddrObjGoogle::protobuf::UninterpretedOption *v1;

  v1 = (AddrObjGoogle::protobuf::UninterpretedOption *)AddrObjGoogle::protobuf::UninterpretedOption::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::UninterpretedOption *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::UninterpretedOption::default_instance_(v1);
}

AddrObjGoogle::protobuf::UninterpretedOption *AddrObjGoogle::protobuf::UninterpretedOption::New(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  AddrObjGoogle::protobuf::UninterpretedOption *v1;

  v1 = (AddrObjGoogle::protobuf::UninterpretedOption *)operator new();
  AddrObjGoogle::protobuf::UninterpretedOption::UninterpretedOption(v1);
  return v1;
}

void sub_188808848(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40AD0F7D02);
  _Unwind_Resume(a1);
}

uint64_t *AddrObjGoogle::protobuf::UninterpretedOption::Clear(uint64_t *this)
{
  uint64_t *v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  AddrObjGoogle::protobuf::UnknownFieldSet *v11;
  uint64_t v12;

  v1 = this;
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x1FE) != 0)
  {
    if ((v2 & 2) != 0)
    {
      v3 = (uint64_t *)this[5];
      this = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this);
      if (v3 != this)
      {
        v4 = v1[5];
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    v1[6] = 0;
    v1[7] = 0;
    v1[8] = 0;
    if ((*((_BYTE *)v1 + 92) & 0x20) != 0)
    {
      v5 = (uint64_t *)v1[9];
      this = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this);
      if (v5 != this)
      {
        v6 = v1[9];
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 92) & 0x40) != 0)
    {
      v7 = (uint64_t *)v1[10];
      this = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this);
      if (v7 != this)
      {
        v8 = v1[10];
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
  }
  if (*((int *)v1 + 6) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = *(_QWORD *)(v1[2] + 8 * v9);
      this = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
      ++v9;
    }
    while (v9 < *((int *)v1 + 6));
  }
  v12 = v1[1];
  v11 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v1 + 1);
  *((_DWORD *)v11 + 4) = 0;
  *((_DWORD *)v11 + 21) = 0;
  if (v12)
    return (uint64_t *)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v11);
  return this;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  int *v6;
  unint64_t *v7;
  void ***v8;
  char *v9;
  AddrObjGoogle::protobuf::io::CodedInputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::UnknownFieldSet *v23;
  int v24;
  BOOL v25;
  int v26;
  unsigned __int8 *v27;
  int v28;
  uint64_t *v29;
  std::string *v30;
  unint64_t v31;
  char *v32;
  char *v33;
  int v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t *v40;
  std::string *v41;
  _BYTE *v42;
  uint64_t *v43;
  std::string *v44;
  unsigned int v45[2];

  v5 = this;
  v6 = (int *)(this + 16);
  v7 = (unint64_t *)(this + 48);
  v8 = (void ***)(this + 8);
LABEL_2:
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v10 = (AddrObjGoogle::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!(_DWORD)this)
        return 1;
    }
    else
    {
      v10 = (AddrObjGoogle::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)a2 + 8) = (_DWORD)v10;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)v10)
        return 1;
    }
    switch(v10 >> 3)
    {
      case 2u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_39;
        while (1)
        {
          v12 = *(_DWORD *)(v5 + 28);
          v13 = *(int *)(v5 + 24);
          if ((int)v13 >= v12)
          {
            if (v12 == *(_DWORD *)(v5 + 32))
            {
              AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v12 + 1);
              v12 = *(_DWORD *)(v5 + 28);
            }
            *(_DWORD *)(v5 + 28) = v12 + 1;
            v15 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption_NamePart>::New();
            v16 = *(_QWORD *)(v5 + 16);
            v17 = *(int *)(v5 + 24);
            *(_DWORD *)(v5 + 24) = v17 + 1;
            *(_QWORD *)(v16 + 8 * v17) = v15;
          }
          else
          {
            v14 = *(_QWORD *)(v5 + 16);
            *(_DWORD *)(v5 + 24) = v13 + 1;
            v15 = *(AddrObjGoogle::protobuf::UninterpretedOption_NamePart **)(v14 + 8 * v13);
          }
          v45[0] = 0;
          v18 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
          {
            if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45))
              return 0;
          }
          else
          {
            v45[0] = *v18;
            *((_QWORD *)a2 + 1) = v18 + 1;
          }
          v19 = *((_DWORD *)a2 + 14);
          v20 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v19 + 1;
          if (v19 >= v20)
            return 0;
          v21 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v45[0]);
          if (!AddrObjGoogle::protobuf::UninterpretedOption_NamePart::MergePartialFromCodedStream((uint64_t)v15, a2, v22, v23)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
          v24 = *((_DWORD *)a2 + 14);
          v25 = __OFSUB__(v24, 1);
          v26 = v24 - 1;
          if (v26 < 0 == v25)
            *((_DWORD *)a2 + 14) = v26;
          v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v27 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v28 = *v27;
          if (v28 != 18)
            break;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        if (v28 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
        goto LABEL_28;
      case 3u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_39;
LABEL_28:
        *(_DWORD *)(v5 + 92) |= 2u;
        v29 = *(uint64_t **)(v5 + 40);
        if (v29 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
        {
          v30 = (std::string *)operator new();
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)(v5 + 40) = v30;
        }
        else
        {
          v30 = *(std::string **)(v5 + 40);
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v30);
        if (!(_DWORD)this)
          return this;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 >= v31 || *v35 != 32)
          continue;
        v32 = v35 + 1;
        *((_QWORD *)a2 + 1) = v32;
LABEL_47:
        if ((unint64_t)v32 >= v31 || *v32 < 0)
        {
          this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!(_DWORD)this)
            return this;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v31 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v32;
          v36 = v32 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *(_DWORD *)(v5 + 92) |= 4u;
        if ((unint64_t)v36 >= v31 || *v36 != 40)
          continue;
        v33 = v36 + 1;
        *((_QWORD *)a2 + 1) = v33;
LABEL_55:
        *(_QWORD *)v45 = 0;
        if ((unint64_t)v33 >= v31 || *v33 < 0)
        {
          this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v45);
          if (!(_DWORD)this)
            return this;
          v37 = *(_QWORD *)v45;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          v31 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v37 = *v33;
          v38 = v33 + 1;
          *((_QWORD *)a2 + 1) = v38;
        }
        *(_QWORD *)(v5 + 56) = v37;
        *(_DWORD *)(v5 + 92) |= 8u;
        if ((unint64_t)v38 >= v31 || *v38 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_63:
        *(_QWORD *)v45 = 0;
        this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v45);
        if ((this & 1) == 0)
          return 0;
        *(_QWORD *)(v5 + 64) = *(_QWORD *)v45;
        v34 = *(_DWORD *)(v5 + 92) | 0x10;
        *(_DWORD *)(v5 + 92) = v34;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_67:
        *(_DWORD *)(v5 + 92) = v34 | 0x20;
        v40 = *(uint64_t **)(v5 + 72);
        if (v40 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
        {
          v41 = (std::string *)operator new();
          v41->__r_.__value_.__l.__size_ = 0;
          v41->__r_.__value_.__r.__words[2] = 0;
          v41->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)(v5 + 72) = v41;
        }
        else
        {
          v41 = *(std::string **)(v5 + 72);
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v41);
        if (!(_DWORD)this)
          return this;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_74:
        *(_DWORD *)(v5 + 92) |= 0x40u;
        v43 = *(uint64_t **)(v5 + 80);
        if (v43 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
        {
          v44 = (std::string *)operator new();
          v44->__r_.__value_.__l.__size_ = 0;
          v44->__r_.__value_.__r.__words[2] = 0;
          v44->__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)(v5 + 80) = v44;
        }
        else
        {
          v44 = *(std::string **)(v5 + 80);
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v44);
        if (!(_DWORD)this)
          return this;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        this = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 4u:
        v11 = v10 & 7;
        if ((v10 & 7) != 0)
          goto LABEL_39;
        v32 = (char *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 5u:
        v11 = v10 & 7;
        if ((v10 & 7) != 0)
          goto LABEL_39;
        v33 = (char *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 6u:
        v11 = v10 & 7;
        if (v11 == 1)
          goto LABEL_63;
        goto LABEL_39;
      case 7u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_39;
        v34 = *(_DWORD *)(v5 + 92);
        goto LABEL_67;
      case 8u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_39;
        goto LABEL_74;
      default:
        v11 = v10 & 7;
LABEL_39:
        if (v11 == 4)
          return 1;
        this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, v10, v8, a4);
        if ((this & 1) == 0)
          return 0;
        continue;
    }
    return this;
  }
}

uint64_t **AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t **v9;
  _QWORD *v10;

  v5 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2);
    while (v6 < *(int *)(v5 + 24));
  }
  v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 2) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v5 + 40), a2);
    v7 = *(_DWORD *)(v5 + 92);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0)
        goto LABEL_7;
      goto LABEL_17;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64((AddrObjGoogle::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 48), a2, a4);
  v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64((AddrObjGoogle::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 56), a2, a4);
  v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 0x10) == 0)
  {
LABEL_8:
    if ((v7 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteDouble((AddrObjGoogle::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 64), a3);
  v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 0x20) == 0)
  {
LABEL_9:
    if ((v7 & 0x40) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_19:
  this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteBytes(7, *(_QWORD *)(v5 + 72), a2);
  if ((*(_DWORD *)(v5 + 92) & 0x40) != 0)
LABEL_10:
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(8, *(_QWORD *)(v5 + 80), a2);
LABEL_11:
  v10 = *(_QWORD **)(v5 + 8);
  v9 = (uint64_t **)(v5 + 8);
  v8 = v10;
  if (v10)
  {
    if (*v8 != v8[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::UninterpretedOption *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  unsigned int *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  int v10;
  uint64_t v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  _BYTE *v13;
  int v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  const void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v21;
  _BYTE *v22;
  int v23;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v24;
  const void *v25;
  uint64_t v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  _BYTE *v28;
  int v29;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v30;
  const void *v31;
  _QWORD *v32;
  uint64_t **v33;
  _QWORD *v34;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 18;
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7[7];
      if (v8 > 0x7F)
      {
        v9 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (_BYTE *)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v8;
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = AddrObjGoogle::protobuf::UninterpretedOption_NamePart::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v10 = *((_DWORD *)this + 23);
  if ((v10 & 2) != 0)
  {
    v11 = *((_QWORD *)this + 5);
    *(_BYTE *)a2 = 26;
    if (*(char *)(v11 + 23) < 0)
      v12 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v11 + 8);
    else
      v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
    if (v12 > 0x7F)
    {
      v13 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (_BYTE *)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v12;
      v13 = (char *)a2 + 2;
    }
    v14 = *(char *)(v11 + 23);
    if (v14 >= 0)
      v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v11;
    else
      v15 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v11;
    if (v14 >= 0)
      v16 = (const void *)*(unsigned __int8 *)(v11 + 23);
    else
      v16 = (const void *)*(unsigned int *)(v11 + 8);
    a2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, v13, a4);
    v10 = *((_DWORD *)this + 23);
    if ((v10 & 4) == 0)
    {
LABEL_9:
      if ((v10 & 8) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
  }
  else if ((v10 & 4) == 0)
  {
    goto LABEL_9;
  }
  v17 = *((_QWORD *)this + 6);
  *(_BYTE *)a2 = 32;
  a2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, (_BYTE *)a2 + 1, a3);
  v10 = *((_DWORD *)this + 23);
  if ((v10 & 8) == 0)
  {
LABEL_10:
    if ((v10 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  v18 = *((_QWORD *)this + 7);
  *(_BYTE *)a2 = 40;
  a2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v18, (_BYTE *)a2 + 1, a3);
  v10 = *((_DWORD *)this + 23);
  if ((v10 & 0x10) == 0)
  {
LABEL_11:
    if ((v10 & 0x20) == 0)
      goto LABEL_12;
LABEL_30:
    v20 = *((_QWORD *)this + 9);
    *(_BYTE *)a2 = 58;
    if (*(char *)(v20 + 23) < 0)
      v21 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v20 + 8);
    else
      v21 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
    if (v21 > 0x7F)
    {
      v22 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (_BYTE *)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v21;
      v22 = (char *)a2 + 2;
    }
    v23 = *(char *)(v20 + 23);
    if (v23 >= 0)
      v24 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v20;
    else
      v24 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v20;
    if (v23 >= 0)
      v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
    else
      v25 = (const void *)*(unsigned int *)(v20 + 8);
    a2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, v22, a4);
    if ((*((_DWORD *)this + 23) & 0x40) == 0)
      goto LABEL_56;
    goto LABEL_43;
  }
LABEL_29:
  v19 = *((_QWORD *)this + 8);
  *(_BYTE *)a2 = 49;
  *(_QWORD *)((char *)a2 + 1) = v19;
  a2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  v10 = *((_DWORD *)this + 23);
  if ((v10 & 0x20) != 0)
    goto LABEL_30;
LABEL_12:
  if ((v10 & 0x40) != 0)
  {
LABEL_43:
    v26 = *((_QWORD *)this + 10);
    *(_BYTE *)a2 = 66;
    if (*(char *)(v26 + 23) < 0)
      v27 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v26 + 8);
    else
      v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v26 + 23);
    if (v27 > 0x7F)
    {
      v28 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (_BYTE *)a2 + 1, a3);
    }
    else
    {
      *((_BYTE *)a2 + 1) = (_BYTE)v27;
      v28 = (char *)a2 + 2;
    }
    v29 = *(char *)(v26 + 23);
    if (v29 >= 0)
      v30 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v26;
    else
      v30 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v26;
    if (v29 >= 0)
      v31 = (const void *)*(unsigned __int8 *)(v26 + 23);
    else
      v31 = (const void *)*(unsigned int *)(v26 + 8);
    a2 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v30, v31, v28, a4);
  }
LABEL_56:
  v34 = (_QWORD *)*((_QWORD *)this + 1);
  v33 = (uint64_t **)((char *)this + 8);
  v32 = v34;
  if (!v34 || *v32 == v32[1])
    return a2;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v33, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::ByteSize(AddrObjGoogle::protobuf::UninterpretedOption *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  int v28;
  int v29;
  _QWORD *v30;

  v3 = *((_DWORD *)this + 23);
  if ((v3 & 0x1FE) == 0)
  {
    v4 = 0;
    goto LABEL_40;
  }
  if ((v3 & 2) != 0)
  {
    v5 = *((_QWORD *)this + 5);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v10 = v11 + 1;
      v3 = *((_DWORD *)this + 23);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 2;
    }
    if (v7 < 0)
      v6 = v8;
    v4 = v10 + v6;
    if ((v3 & 4) == 0)
      goto LABEL_16;
  }
  else
  {
    v4 = 0;
    if ((v3 & 4) == 0)
      goto LABEL_16;
  }
  v4 += AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 6)) + 1;
  v3 = *((_DWORD *)this + 23);
LABEL_16:
  if ((v3 & 8) != 0)
  {
    v4 += AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64(*((_QWORD *)this + 7)) + 1;
    v3 = *((_DWORD *)this + 23);
  }
  if ((v3 & 0x10) != 0)
    v4 += 9;
  if ((v3 & 0x20) != 0)
  {
    v12 = *((_QWORD *)this + 9);
    v13 = *(unsigned __int8 *)(v12 + 23);
    v14 = v13;
    v15 = *(_QWORD *)(v12 + 8);
    if ((v13 & 0x80u) == 0)
      v16 = *(unsigned __int8 *)(v12 + 23);
    else
      v16 = v15;
    if (v16 >= 0x80)
    {
      v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v16);
      v13 = *(unsigned __int8 *)(v12 + 23);
      v15 = *(_QWORD *)(v12 + 8);
      v3 = *((_DWORD *)this + 23);
      v14 = *(_BYTE *)(v12 + 23);
    }
    else
    {
      v17 = 1;
    }
    if (v14 < 0)
      v13 = v15;
    v4 += v17 + v13 + 1;
  }
  if ((v3 & 0x40) != 0)
  {
    v18 = *((_QWORD *)this + 10);
    v19 = *(unsigned __int8 *)(v18 + 23);
    v20 = v19;
    v21 = *(_QWORD *)(v18 + 8);
    if ((v19 & 0x80u) == 0)
      v22 = *(unsigned __int8 *)(v18 + 23);
    else
      v22 = v21;
    if (v22 >= 0x80)
    {
      v23 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v22);
      v19 = *(unsigned __int8 *)(v18 + 23);
      v21 = *(_QWORD *)(v18 + 8);
      v20 = *(_BYTE *)(v18 + 23);
    }
    else
    {
      v23 = 1;
    }
    if (v20 < 0)
      v19 = v21;
    v4 += v23 + v19 + 1;
  }
LABEL_40:
  v24 = *((_DWORD *)this + 6);
  v25 = (v24 + v4);
  if (v24 >= 1)
  {
    v26 = 0;
    do
    {
      v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::UninterpretedOption_NamePart::ByteSize(*(AddrObjGoogle::protobuf::UninterpretedOption_NamePart **)(*((_QWORD *)this + 2) + 8 * v26), a2);
      v28 = (int)v27;
      if (v27 >= 0x80)
        v29 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
      else
        v29 = 1;
      v25 = (v28 + v25 + v29);
      ++v26;
    }
    while (v26 < *((int *)this + 6));
  }
  v30 = (_QWORD *)*((_QWORD *)this + 1);
  if (v30 && *v30 != v30[1])
    v25 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v25;
  *((_DWORD *)this + 22) = v25;
  return v25;
}

void AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(AddrObjGoogle::protobuf::UninterpretedOption *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::UninterpretedOption *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 7381);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::UninterpretedOption::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_188809524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::UninterpretedOption::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::IsInitialized(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (*((int *)this + 6) < 1)
    return 1;
  v2 = 0;
  do
  {
    v3 = *(_QWORD *)(*((_QWORD *)this + 2) + 8 * v2);
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    if ((result & 1) == 0)
      break;
    ++v2;
  }
  while (v2 < *((int *)this + 6));
  return result;
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::GetMetadata(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50770;
}

void sub_188809658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::SourceCodeInfo_Location::MergeFrom(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this, const AddrObjGoogle::protobuf::SourceCodeInfo_Location *a2)
{
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v3;
  std::string *v4;
  int v5;
  int v6;
  int v7;
  const std::string *v8;
  uint64_t *v9;
  std::string *v10;
  const std::string *v11;
  uint64_t *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v3 = this;
  if (a2 == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 7822);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    AddrObjGoogle::protobuf::RepeatedField<int>::Reserve((_DWORD *)v3 + 4, *((_DWORD *)v3 + 6) + v5);
    this = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)memcpy((void *)(*((_QWORD *)v3 + 2) + 4 * *((int *)v3 + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)v3 + 6) += *((_DWORD *)a2 + 6);
  }
  v6 = *((_DWORD *)a2 + 12);
  if (v6)
  {
    AddrObjGoogle::protobuf::RepeatedField<int>::Reserve((_DWORD *)v3 + 10, *((_DWORD *)v3 + 12) + v6);
    this = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)memcpy((void *)(*((_QWORD *)v3 + 5) + 4 * *((int *)v3 + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)v3 + 12) += *((_DWORD *)a2 + 12);
  }
  v7 = *((_DWORD *)a2 + 21);
  if ((v7 & 0x3FC) != 0)
  {
    if ((v7 & 4) != 0)
    {
      v8 = (const std::string *)*((_QWORD *)a2 + 8);
      *((_DWORD *)v3 + 21) |= 4u;
      v9 = (uint64_t *)*((_QWORD *)v3 + 8);
      if (v9 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 8) = v10;
      }
      else
      {
        v10 = (std::string *)*((_QWORD *)v3 + 8);
      }
      this = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)std::string::operator=(v10, v8);
      v7 = *((_DWORD *)a2 + 21);
    }
    if ((v7 & 8) != 0)
    {
      v11 = (const std::string *)*((_QWORD *)a2 + 9);
      *((_DWORD *)v3 + 21) |= 8u;
      v12 = (uint64_t *)*((_QWORD *)v3 + 9);
      if (v12 == AddrObjGoogle::protobuf::internal::kEmptyString(this))
      {
        v13 = (std::string *)operator new();
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 9) = v13;
      }
      else
      {
        v13 = (std::string *)*((_QWORD *)v3 + 9);
      }
      std::string::operator=(v13, v11);
    }
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom((void ***)v3 + 1, (const AddrObjGoogle::protobuf::SourceCodeInfo_Location *)((char *)a2 + 8));
}

void sub_188809834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E1BF5C90;
  AddrObjGoogle::protobuf::SourceCodeInfo_Location::SharedDtor(this);
  v2 = *((_QWORD *)this + 5);
  if (v2)
    MEMORY[0x18D764364](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)this + 2);
  if (v3)
    MEMORY[0x18D764364](v3, 0x1000C8052888210);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::SourceCodeInfo_Location *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::SharedDtor(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;

  v2 = (uint64_t *)*((_QWORD *)this + 8);
  v3 = AddrObjGoogle::protobuf::internal::kEmptyString(this);
  if (v2 != v3)
  {
    v4 = *((_QWORD *)this + 8);
    if (v4)
    {
      if (*(char *)(v4 + 23) < 0)
        operator delete(*(void **)v4);
      v3 = (uint64_t *)MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
    }
  }
  v5 = (uint64_t *)*((_QWORD *)this + 9);
  v6 = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v3);
  if (v5 != v6)
  {
    v7 = *((_QWORD *)this + 9);
    if (v7)
    {
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      v6 = (uint64_t *)MEMORY[0x18D76437C](v7, 0x1012C40EC159624);
    }
  }
  return AddrObjGoogle::protobuf::SourceCodeInfo_Location::default_instance_((AddrObjGoogle::protobuf::SourceCodeInfo_Location *)v6);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 80) = a2;
  return this;
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::default_instance(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v1;

  v1 = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)AddrObjGoogle::protobuf::SourceCodeInfo_Location::default_instance_(this);
  if (!v1)
    v1 = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)AddrObjGoogle::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0);
  return AddrObjGoogle::protobuf::SourceCodeInfo_Location::default_instance_(v1);
}

AddrObjGoogle::protobuf::SourceCodeInfo_Location *AddrObjGoogle::protobuf::SourceCodeInfo_Location::New(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v1;

  v1 = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)operator new();
  AddrObjGoogle::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(v1);
  return v1;
}

void sub_1888099E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10B1C40E36E17E1);
  _Unwind_Resume(a1);
}

uint64_t *AddrObjGoogle::protobuf::SourceCodeInfo_Location::Clear(uint64_t *this)
{
  uint64_t *v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  AddrObjGoogle::protobuf::UnknownFieldSet *v7;
  uint64_t v8;

  v1 = this;
  v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      v3 = (uint64_t *)this[8];
      this = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this);
      if (v3 != this)
      {
        v4 = v1[8];
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*((_BYTE *)v1 + 84) & 8) != 0)
    {
      v5 = (uint64_t *)v1[9];
      this = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this);
      if (v5 != this)
      {
        v6 = v1[9];
        if (*(char *)(v6 + 23) < 0)
        {
          **(_BYTE **)v6 = 0;
          *(_QWORD *)(v6 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v6 = 0;
          *(_BYTE *)(v6 + 23) = 0;
        }
      }
    }
  }
  v8 = v1[1];
  v7 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(v1 + 1);
  *((_DWORD *)v7 + 4) = 0;
  *((_DWORD *)v7 + 10) = 0;
  *((_DWORD *)v7 + 19) = 0;
  if (v8)
    return (uint64_t *)AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v7);
  return this;
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::MergePartialFromCodedStream(uint64_t this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  void ***v8;
  char *v9;
  AddrObjGoogle::protobuf::io::CodedInputStream *v10;
  int v11;
  char *v12;
  unsigned int v13;
  char *v14;
  unint64_t v15;
  int v16;
  char *v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  unsigned int v22;
  int v23;
  char *v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t *v29;
  std::string *v30;
  _BYTE *v31;
  uint64_t *v32;
  std::string *v33;
  unsigned int v34;
  unsigned int v35;

  v5 = this;
  v6 = (_DWORD *)(this + 40);
  v7 = (_DWORD *)(this + 16);
  v8 = (void ***)(this + 8);
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      this = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      v10 = (AddrObjGoogle::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!(_DWORD)this)
        return 1;
    }
    else
    {
      v10 = (AddrObjGoogle::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)a2 + 8) = (_DWORD)v10;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)v10)
        return 1;
    }
    switch(v10 >> 3)
    {
      case 1u:
        v11 = v10 & 7;
        if ((v10 & 7) != 0)
        {
          if (v11 != 2)
            goto LABEL_20;
          v34 = 0;
          v12 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
          {
            if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))
              return 0;
            v13 = v34;
          }
          else
          {
            v13 = *v12;
            v34 = v13;
            *((_QWORD *)a2 + 1) = v12 + 1;
          }
          v16 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v13);
          while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v35 = 0;
            v17 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
            {
              if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))
                return 0;
              v18 = v35;
            }
            else
            {
              v18 = *v17;
              *((_QWORD *)a2 + 1) = v17 + 1;
            }
            v19 = *(_DWORD *)(v5 + 24);
            if (v19 == *(_DWORD *)(v5 + 28))
            {
              AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v7, v19 + 1);
              v19 = *(_DWORD *)(v5 + 24);
            }
            v20 = *(_QWORD *)(v5 + 16);
            *(_DWORD *)(v5 + 24) = v19 + 1;
            *(_DWORD *)(v20 + 4 * v19) = v18;
          }
          this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
LABEL_40:
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v21 < v15 && *v21 == 18)
          {
            v14 = v21 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_43;
          }
          continue;
        }
        this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(AddrObjGoogle::protobuf::internal::WireFormatLite::FieldType)5>(1, 0xAu, a2, v7);
        if ((_DWORD)this)
          goto LABEL_40;
        return this;
      case 2u:
        v11 = v10 & 7;
        if ((v10 & 7) == 0)
        {
          this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(AddrObjGoogle::protobuf::internal::WireFormatLite::FieldType)5>(1, 0x12u, a2, v6);
          if (!(_DWORD)this)
            return this;
LABEL_59:
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v28 < *((_QWORD *)a2 + 2) && *v28 == 26)
          {
            *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_62:
            *(_DWORD *)(v5 + 84) |= 4u;
            v29 = *(uint64_t **)(v5 + 64);
            if (v29 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
            {
              v30 = (std::string *)operator new();
              v30->__r_.__value_.__l.__size_ = 0;
              v30->__r_.__value_.__r.__words[2] = 0;
              v30->__r_.__value_.__r.__words[0] = 0;
              *(_QWORD *)(v5 + 64) = v30;
            }
            else
            {
              v30 = *(std::string **)(v5 + 64);
            }
            this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v30);
            if (!(_DWORD)this)
              return this;
            v31 = (_BYTE *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v31 < *((_QWORD *)a2 + 2) && *v31 == 34)
            {
              *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_69:
              *(_DWORD *)(v5 + 84) |= 8u;
              v32 = *(uint64_t **)(v5 + 72);
              if (v32 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
              {
                v33 = (std::string *)operator new();
                v33->__r_.__value_.__l.__size_ = 0;
                v33->__r_.__value_.__r.__words[2] = 0;
                v33->__r_.__value_.__r.__words[0] = 0;
                *(_QWORD *)(v5 + 72) = v33;
              }
              else
              {
                v33 = *(std::string **)(v5 + 72);
              }
              this = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a2, v33);
              if (!(_DWORD)this)
                return this;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                this = 1;
                *((_BYTE *)a2 + 36) = 1;
                return this;
              }
            }
          }
          continue;
        }
        if (v11 == 2)
        {
          v14 = (char *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
LABEL_43:
          v34 = 0;
          if ((unint64_t)v14 >= v15 || *v14 < 0)
          {
            if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))
              return 0;
            v22 = v34;
          }
          else
          {
            v22 = *v14;
            v34 = v22;
            *((_QWORD *)a2 + 1) = v14 + 1;
          }
          v23 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v22);
          while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v35 = 0;
            v24 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
            {
              if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))
                return 0;
              v25 = v35;
            }
            else
            {
              v25 = *v24;
              *((_QWORD *)a2 + 1) = v24 + 1;
            }
            v26 = *(_DWORD *)(v5 + 48);
            if (v26 == *(_DWORD *)(v5 + 52))
            {
              AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v6, v26 + 1);
              v26 = *(_DWORD *)(v5 + 48);
            }
            v27 = *(_QWORD *)(v5 + 40);
            *(_DWORD *)(v5 + 48) = v26 + 1;
            *(_DWORD *)(v27 + 4 * v26) = v25;
          }
          this = AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
          goto LABEL_59;
        }
LABEL_20:
        if (v11 == 4)
          return 1;
        this = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, v10, v8, a4);
        if ((this & 1) == 0)
          return 0;
        continue;
      case 3u:
        v11 = v10 & 7;
        if (v11 == 2)
          goto LABEL_62;
        goto LABEL_20;
      case 4u:
        v11 = v10 & 7;
        if (v11 != 2)
          goto LABEL_20;
        goto LABEL_69;
      default:
        v11 = v10 & 7;
        goto LABEL_20;
    }
  }
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(AddrObjGoogle::protobuf::internal::WireFormatLite::FieldType)5>(int a1, unsigned int a2, AddrObjGoogle::protobuf::io::CodedInputStream *this, _DWORD *a4)
{
  char *v7;
  unsigned int v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;

  v21 = 0;
  v7 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
  {
    result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
    if (!(_DWORD)result)
      return result;
    v8 = v21;
  }
  else
  {
    v8 = *v7;
    *((_QWORD *)this + 1) = v7 + 1;
  }
  v10 = a4[2];
  if (v10 == a4[3])
  {
    AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(a4, v10 + 1);
    v10 = a4[2];
  }
  v11 = *(_QWORD *)a4;
  a4[2] = v10 + 1;
  *(_DWORD *)(v11 + 4 * v10) = v8;
  v12 = a4[3] - a4[2];
  if (v12 >= 1)
  {
    v13 = v12 + 1;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14)
          return 1;
        v17 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((int)v14 - (int)v17 < 2 || (a2 & 0x7F | 0x80) != *v17 || v17[1] != (a2 >> 7))
          return 1;
        v16 = (char *)(v17 + 2);
      }
      else
      {
        v15 = (unsigned __int8 *)*((_QWORD *)this + 1);
        v14 = *((_QWORD *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != a2)
          return 1;
        v16 = (char *)(v15 + 1);
      }
      *((_QWORD *)this + 1) = v16;
      v20 = 0;
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if (!(_DWORD)result)
          return result;
        v18 = v20;
        v11 = *(_QWORD *)a4;
      }
      else
      {
        v18 = *v16;
        *((_QWORD *)this + 1) = v16 + 1;
      }
      v19 = (int)a4[2];
      a4[2] = v19 + 1;
      *(_DWORD *)(v11 + 4 * v19) = v18;
      --v13;
    }
    while (v13 > 1);
  }
  return 1;
}

uint64_t **AddrObjGoogle::protobuf::SourceCodeInfo_Location::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t **v11;
  _QWORD *v12;

  v4 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 0xAu);
    this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      v5 = 0;
      do
      {
        v6 = *(int *)(*(_QWORD *)(v4 + 16) + 4 * v5);
        if ((v6 & 0x80000000) != 0)
          this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a2, v6);
        else
          this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, v6);
        ++v5;
      }
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 0x12u);
    this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      v7 = 0;
      do
      {
        v8 = *(int *)(*(_QWORD *)(v4 + 40) + 4 * v7);
        if ((v8 & 0x80000000) != 0)
          this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a2, v8);
        else
          this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, v8);
        ++v7;
      }
      while (v7 < *(int *)(v4 + 48));
    }
  }
  v9 = *(_DWORD *)(v4 + 84);
  if ((v9 & 4) != 0)
  {
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(3, *(_QWORD *)(v4 + 64), a2);
    v9 = *(_DWORD *)(v4 + 84);
  }
  if ((v9 & 8) != 0)
    this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(4, *(_QWORD *)(v4 + 72), a2);
  v12 = *(_QWORD **)(v4 + 8);
  v11 = (uint64_t **)(v4 + 8);
  v10 = v12;
  if (v12)
  {
    if (*v10 != v10[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::SourceCodeInfo_Location::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  _BYTE *v6;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v7;
  uint64_t v8;
  unint64_t v9;
  AddrObjGoogle::protobuf::UnknownFieldSet *v10;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v11;
  uint64_t v12;
  unint64_t v13;
  AddrObjGoogle::protobuf::UnknownFieldSet *v14;
  int v15;
  uint64_t v16;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v17;
  _BYTE *v18;
  int v19;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v20;
  const void *v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v23;
  _BYTE *v24;
  int v25;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v26;
  const void *v27;
  _QWORD *v28;
  uint64_t **v29;
  _QWORD *v30;

  v4 = a2;
  if (*((int *)this + 6) >= 1)
  {
    *(_BYTE *)a2 = 10;
    v6 = (char *)a2 + 1;
    v7 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v7 > 0x7F)
    {
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v7;
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    if (*((int *)this + 6) >= 1)
    {
      v8 = 0;
      while (1)
      {
        v9 = *(int *)(*((_QWORD *)this + 2) + 4 * v8);
        if ((v9 & 0x80000000) != 0)
          break;
        if (v9 > 0x7F)
        {
          v10 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9, v4, a3);
          goto LABEL_12;
        }
        *(_BYTE *)v4 = v9;
        v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 1);
LABEL_13:
        if (++v8 >= *((int *)this + 6))
          goto LABEL_14;
      }
      v10 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, v4, a3);
LABEL_12:
      v4 = v10;
      goto LABEL_13;
    }
  }
LABEL_14:
  if (*((int *)this + 12) > 0)
  {
    *(_BYTE *)v4 = 18;
    v11 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v11 > 0x7F)
    {
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v11;
      v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    if (*((int *)this + 12) >= 1)
    {
      v12 = 0;
      while (1)
      {
        v13 = *(int *)(*((_QWORD *)this + 5) + 4 * v12);
        if ((v13 & 0x80000000) != 0)
          break;
        if (v13 > 0x7F)
        {
          v14 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray((AddrObjGoogle::protobuf::io::CodedOutputStream *)v13, v4, a3);
          goto LABEL_25;
        }
        *(_BYTE *)v4 = v13;
        v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)v4 + 1);
LABEL_26:
        if (++v12 >= *((int *)this + 12))
          goto LABEL_27;
      }
      v14 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v4, a3);
LABEL_25:
      v4 = v14;
      goto LABEL_26;
    }
  }
LABEL_27:
  v15 = *((_DWORD *)this + 21);
  if ((v15 & 4) != 0)
  {
    v16 = *((_QWORD *)this + 8);
    *(_BYTE *)v4 = 26;
    if (*(char *)(v16 + 23) < 0)
      v17 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v16 + 8);
    else
      v17 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    if (v17 > 0x7F)
    {
      v18 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v17;
      v18 = (char *)v4 + 2;
    }
    v19 = *(char *)(v16 + 23);
    if (v19 >= 0)
      v20 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v16;
    else
      v20 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v16;
    if (v19 >= 0)
      v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
    else
      v21 = (const void *)*(unsigned int *)(v16 + 8);
    v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v20, v21, v18, a4);
    v15 = *((_DWORD *)this + 21);
  }
  if ((v15 & 8) != 0)
  {
    v22 = *((_QWORD *)this + 9);
    *(_BYTE *)v4 = 34;
    if (*(char *)(v22 + 23) < 0)
      v23 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v22 + 8);
    else
      v23 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v22 + 23);
    if (v23 > 0x7F)
    {
      v24 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (_BYTE *)v4 + 1, a3);
    }
    else
    {
      *((_BYTE *)v4 + 1) = (_BYTE)v23;
      v24 = (char *)v4 + 2;
    }
    v25 = *(char *)(v22 + 23);
    if (v25 >= 0)
      v26 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v22;
    else
      v26 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v22;
    if (v25 >= 0)
      v27 = (const void *)*(unsigned __int8 *)(v22 + 23);
    else
      v27 = (const void *)*(unsigned int *)(v22 + 8);
    v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v26, v27, v24, a4);
  }
  v30 = (_QWORD *)*((_QWORD *)this + 1);
  v29 = (uint64_t **)((char *)this + 8);
  v28 = v30;
  if (!v30 || *v28 == v28[1])
    return v4;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, v4, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::ByteSize(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v20;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v28;
  int v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;

  v3 = *((_DWORD *)this + 21);
  if ((v3 & 0x3FC) == 0)
  {
    v4 = 0;
    goto LABEL_24;
  }
  if ((v3 & 4) == 0)
  {
    v4 = 0;
    if ((v3 & 8) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 8);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v9 = *(unsigned __int8 *)(v5 + 23);
  else
    v9 = v8;
  if (v9 >= 0x80)
  {
    v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v8 = *(_QWORD *)(v5 + 8);
    v10 = v11 + 1;
    v3 = *((_DWORD *)this + 21);
    v7 = *(_BYTE *)(v5 + 23);
  }
  else
  {
    v10 = 2;
  }
  if (v7 < 0)
    v6 = v8;
  v4 = v10 + v6;
  if ((v3 & 8) != 0)
  {
LABEL_15:
    v12 = *((_QWORD *)this + 9);
    v13 = *(unsigned __int8 *)(v12 + 23);
    v14 = v13;
    v15 = *(_QWORD *)(v12 + 8);
    if ((v13 & 0x80u) == 0)
      v16 = *(unsigned __int8 *)(v12 + 23);
    else
      v16 = v15;
    if (v16 >= 0x80)
    {
      v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v16);
      v13 = *(unsigned __int8 *)(v12 + 23);
      v15 = *(_QWORD *)(v12 + 8);
      v14 = *(_BYTE *)(v12 + 23);
    }
    else
    {
      v17 = 1;
    }
    if (v14 < 0)
      v13 = v15;
    v4 += v17 + v13 + 1;
  }
LABEL_24:
  v18 = *((_DWORD *)this + 6);
  if (v18 < 1)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    v19 = 0;
    LODWORD(v20) = 0;
    do
    {
      v21 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 2) + 4 * v19);
      if ((v21 & 0x80000000) != 0)
      {
        v22 = 10;
      }
      else if (v21 >= 0x80)
      {
        v22 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
        v18 = *((_DWORD *)this + 6);
      }
      else
      {
        v22 = 1;
      }
      v20 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(v22 + (_DWORD)v20);
      ++v19;
    }
    while (v19 < v18);
    if ((int)v20 > 0)
    {
      if (v20 >= 0x80)
        v23 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      else
        v23 = 2;
      v4 += v23;
    }
  }
  *((_DWORD *)this + 8) = (_DWORD)v20;
  v24 = v4 + (_DWORD)v20;
  v25 = *((_DWORD *)this + 12);
  if (v25 < 1)
  {
    LODWORD(v27) = 0;
  }
  else
  {
    v26 = 0;
    LODWORD(v27) = 0;
    do
    {
      v28 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 5) + 4 * v26);
      if ((v28 & 0x80000000) != 0)
      {
        v29 = 10;
      }
      else if (v28 >= 0x80)
      {
        v29 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
        v25 = *((_DWORD *)this + 12);
      }
      else
      {
        v29 = 1;
      }
      v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(v29 + (_DWORD)v27);
      ++v26;
    }
    while (v26 < v25);
    if ((int)v27 > 0)
    {
      if (v27 >= 0x80)
        v30 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27) + 1;
      else
        v30 = 2;
      v24 += v30;
    }
  }
  v31 = (_QWORD *)*((_QWORD *)this + 1);
  *((_DWORD *)this + 14) = (_DWORD)v27;
  v32 = (v24 + (_DWORD)v27);
  if (v31 && *v31 != v31[1])
    v32 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v32;
  *((_DWORD *)this + 20) = v32;
  return v32;
}

void AddrObjGoogle::protobuf::SourceCodeInfo_Location::MergeFrom(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::SourceCodeInfo_Location *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 7810);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::SourceCodeInfo_Location::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_18880A6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::SourceCodeInfo_Location::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::IsInitialized(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  return 1;
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::GetMetadata(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF507A0;
}

void sub_18880A7C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::SourceCodeInfo::~SourceCodeInfo(AddrObjGoogle::protobuf::SourceCodeInfo *this)
{
  *(_QWORD *)this = &off_1E1BF5560;
  AddrObjGoogle::protobuf::SourceCodeInfo::default_instance_(this);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Destroy<AddrObjGoogle::protobuf::RepeatedPtrField<addr_obj::FingerprintProto>::TypeHandler>((uint64_t *)this + 2);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::SourceCodeInfo *)((char *)this + 8));
  AddrObjGoogle::protobuf::Message::~Message(this);
}

{
  AddrObjGoogle::protobuf::SourceCodeInfo::~SourceCodeInfo(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

AddrObjGoogle::protobuf::SourceCodeInfo *AddrObjGoogle::protobuf::SourceCodeInfo::New(AddrObjGoogle::protobuf::SourceCodeInfo *this)
{
  AddrObjGoogle::protobuf::SourceCodeInfo *v1;

  v1 = (AddrObjGoogle::protobuf::SourceCodeInfo *)operator new();
  AddrObjGoogle::protobuf::SourceCodeInfo::SourceCodeInfo(v1);
  return v1;
}

void sub_18880A88C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo::MergePartialFromCodedStream(AddrObjGoogle::protobuf::SourceCodeInfo *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, uint64_t a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  int *v6;
  void ***v7;
  char *v8;
  unint64_t TagFallback;
  int v10;
  uint64_t v11;
  uint64_t v12;
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  AddrObjGoogle::protobuf::UnknownFieldSet *v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t result;
  unsigned int v28;

  v6 = (int *)((char *)this + 16);
  v7 = (void ***)((char *)this + 8);
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v10 = *((_DWORD *)this + 7);
        v11 = *((int *)this + 6);
        if ((int)v11 >= v10)
        {
          if (v10 == *((_DWORD *)this + 8))
          {
            AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
            v10 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v10 + 1;
          v13 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::SourceCodeInfo_Location>::New();
          v14 = *((_QWORD *)this + 2);
          v15 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v15 + 1;
          *(_QWORD *)(v14 + 8 * v15) = v13;
        }
        else
        {
          v12 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v11 + 1;
          v13 = *(AddrObjGoogle::protobuf::SourceCodeInfo_Location **)(v12 + 8 * v11);
        }
        v28 = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))
            return 0;
        }
        else
        {
          v28 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        v19 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a2, v28);
        if (!AddrObjGoogle::protobuf::SourceCodeInfo_Location::MergePartialFromCodedStream((uint64_t)v13, a2, v20, v21)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v26 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v25 >= v26 || *v25 != 10)
        {
          if (v25 == v26 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v25 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if (!AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0;
  }
}

uint64_t **AddrObjGoogle::protobuf::SourceCodeInfo::SerializeWithCachedSizes(uint64_t **this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t **v7;
  _QWORD *v8;

  v4 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    v5 = 0;
    do
      this = (uint64_t **)AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * v5++), a2);
    while (v5 < *(int *)(v4 + 24));
  }
  v8 = *(_QWORD **)(v4 + 8);
  v7 = (uint64_t **)(v4 + 8);
  v6 = v8;
  if (v8)
  {
    if (*v6 != v6[1])
      return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::SourceCodeInfo::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::SourceCodeInfo *this, AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  unsigned int *v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  AddrObjGoogle::protobuf::UnknownFieldSet *v9;
  _QWORD *v10;
  uint64_t **v11;
  _QWORD *v12;

  if (*((int *)this + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(unsigned int **)(*((_QWORD *)this + 2) + 8 * v6);
      *(_BYTE *)a2 = 10;
      v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v7[20];
      if (v8 > 0x7F)
      {
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (_BYTE *)a2 + 1, a3);
      }
      else
      {
        *((_BYTE *)a2 + 1) = (_BYTE)v8;
        v9 = (AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = AddrObjGoogle::protobuf::SourceCodeInfo_Location::SerializeWithCachedSizesToArray((AddrObjGoogle::protobuf::SourceCodeInfo_Location *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  v12 = (_QWORD *)*((_QWORD *)this + 1);
  v11 = (uint64_t **)((char *)this + 8);
  v10 = v12;
  if (!v12 || *v10 == v10[1])
    return a2;
  else
    return AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo::ByteSize(AddrObjGoogle::protobuf::SourceCodeInfo *this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  _QWORD *v8;

  v3 = *((unsigned int *)this + 6);
  if ((int)v3 >= 1)
  {
    v4 = 0;
    do
    {
      v5 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)AddrObjGoogle::protobuf::SourceCodeInfo_Location::ByteSize(*(AddrObjGoogle::protobuf::SourceCodeInfo_Location **)(*((_QWORD *)this + 2) + 8 * v4), a2);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *((int *)this + 6));
  }
  v8 = (_QWORD *)*((_QWORD *)this + 1);
  if (v8 && *v8 != v8[1])
    v3 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)
       + v3;
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void AddrObjGoogle::protobuf::SourceCodeInfo::MergeFrom(AddrObjGoogle::protobuf::SourceCodeInfo *this, const AddrObjGoogle::protobuf::Message *lpsrc)
{
  std::string *v4;
  const AddrObjGoogle::protobuf::SourceCodeInfo *v5;
  AddrObjGoogle::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.pb.cc", 8023);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    AddrObjGoogle::protobuf::SourceCodeInfo::MergeFrom(this, v5);
  else
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_18880AD2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const AddrObjGoogle::protobuf::Message *AddrObjGoogle::protobuf::SourceCodeInfo::CopyFrom(const AddrObjGoogle::protobuf::Message *this, const AddrObjGoogle::protobuf::Message *a2)
{
  const AddrObjGoogle::protobuf::Message *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 32))(this);
    return (const AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v3 + 112))(v3, a2);
  }
  return this;
}

void AddrObjGoogle::protobuf::SourceCodeInfo::CopyFrom(AddrObjGoogle::protobuf::SourceCodeInfo *this, const AddrObjGoogle::protobuf::SourceCodeInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(AddrObjGoogle::protobuf::SourceCodeInfo *))(*(_QWORD *)this + 32))(this);
    AddrObjGoogle::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  }
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo::IsInitialized(AddrObjGoogle::protobuf::SourceCodeInfo *this)
{
  return 1;
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo::GetMetadata(AddrObjGoogle::protobuf::SourceCodeInfo *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF507B8;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507B8, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF50790;
}

void sub_18880AE4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorSet::GetCachedSize(AddrObjGoogle::protobuf::FileDescriptorSet *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::FileDescriptorProto *this)
{
  return *((unsigned int *)this + 50);
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange::GetCachedSize(AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t AddrObjGoogle::protobuf::DescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::DescriptorProto *this)
{
  return *((unsigned int *)this + 38);
}

uint64_t AddrObjGoogle::protobuf::FieldDescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::FieldDescriptorProto *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::EnumDescriptorProto *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t AddrObjGoogle::protobuf::EnumValueDescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::EnumValueDescriptorProto *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t AddrObjGoogle::protobuf::ServiceDescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::ServiceDescriptorProto *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t AddrObjGoogle::protobuf::MethodDescriptorProto::GetCachedSize(AddrObjGoogle::protobuf::MethodDescriptorProto *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t AddrObjGoogle::protobuf::FileOptions::GetCachedSize(AddrObjGoogle::protobuf::FileOptions *this)
{
  return *((unsigned int *)this + 25);
}

uint64_t AddrObjGoogle::protobuf::MessageOptions::GetCachedSize(AddrObjGoogle::protobuf::MessageOptions *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t AddrObjGoogle::protobuf::FieldOptions::GetCachedSize(AddrObjGoogle::protobuf::FieldOptions *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t AddrObjGoogle::protobuf::EnumOptions::GetCachedSize(AddrObjGoogle::protobuf::EnumOptions *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t AddrObjGoogle::protobuf::EnumValueOptions::GetCachedSize(AddrObjGoogle::protobuf::EnumValueOptions *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t AddrObjGoogle::protobuf::ServiceOptions::GetCachedSize(AddrObjGoogle::protobuf::ServiceOptions *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t AddrObjGoogle::protobuf::MethodOptions::GetCachedSize(AddrObjGoogle::protobuf::MethodOptions *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption_NamePart::GetCachedSize(AddrObjGoogle::protobuf::UninterpretedOption_NamePart *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t AddrObjGoogle::protobuf::UninterpretedOption::GetCachedSize(AddrObjGoogle::protobuf::UninterpretedOption *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo_Location::GetCachedSize(AddrObjGoogle::protobuf::SourceCodeInfo_Location *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t AddrObjGoogle::protobuf::SourceCodeInfo::GetCachedSize(AddrObjGoogle::protobuf::SourceCodeInfo *this)
{
  return *((unsigned int *)this + 10);
}

AddrObjGoogle::protobuf::FileDescriptorProto *AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FileDescriptorProto>::New()
{
  AddrObjGoogle::protobuf::FileDescriptorProto *v0;

  v0 = (AddrObjGoogle::protobuf::FileDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::FileDescriptorProto::FileDescriptorProto(v0);
  return v0;
}

void sub_18880AF3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10B1C4063BD6257);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::ServiceDescriptorProto *AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::ServiceDescriptorProto>::New()
{
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v0;

  v0 = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(v0);
  return v0;
}

void sub_18880AF9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::MethodDescriptorProto *AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::MethodDescriptorProto>::New()
{
  AddrObjGoogle::protobuf::MethodDescriptorProto *v0;

  v0 = (AddrObjGoogle::protobuf::MethodDescriptorProto *)operator new();
  AddrObjGoogle::protobuf::MethodDescriptorProto::MethodDescriptorProto(v0);
  return v0;
}

void sub_18880AFFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4093195C21);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UninterpretedOption *AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption>::New()
{
  AddrObjGoogle::protobuf::UninterpretedOption *v0;

  v0 = (AddrObjGoogle::protobuf::UninterpretedOption *)operator new();
  AddrObjGoogle::protobuf::UninterpretedOption::UninterpretedOption(v0);
  return v0;
}

void sub_18880B05C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40AD0F7D02);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UninterpretedOption_NamePart *AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::UninterpretedOption_NamePart>::New()
{
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart *v0;

  v0 = (AddrObjGoogle::protobuf::UninterpretedOption_NamePart *)operator new();
  AddrObjGoogle::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(v0);
  return v0;
}

void sub_18880B0BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40ED7A6C83);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::SourceCodeInfo_Location *AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::SourceCodeInfo_Location>::New()
{
  AddrObjGoogle::protobuf::SourceCodeInfo_Location *v0;

  v0 = (AddrObjGoogle::protobuf::SourceCodeInfo_Location *)operator new();
  AddrObjGoogle::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(v0);
  return v0;
}

void sub_18880B11C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10B1C40E36E17E1);
  _Unwind_Resume(a1);
}

void sub_18880B140(AddrObjGoogle::protobuf::UnknownFieldSet *a1)
{
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(a1);
}

void sub_18880B148()
{
  JUMPOUT(0x18D764364);
}

void sub_18880B15C(_QWORD *a1, AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  if (*a1)
    sub_18880B148();
  sub_18880B140(a2);
}

double AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Swap(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  int v3;
  double result;
  uint64_t v5;

  if (a1 != a2)
  {
    v2 = *a1;
    v3 = *((_DWORD *)a1 + 4);
    *a1 = *a2;
    result = *((double *)a2 + 1);
    *a2 = v2;
    v5 = a1[1];
    *((double *)a1 + 1) = result;
    *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
    a2[1] = v5;
    *((_DWORD *)a2 + 4) = v3;
  }
  return result;
}

BOOL AddrObjGoogle::protobuf::internal::UnknownFieldSetFieldSkipper::SkipField(void ****this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::io::CodedInputStream *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  return AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a2, a3, this[1], a4);
}

BOOL AddrObjGoogle::protobuf::internal::WireFormat::SkipField(AddrObjGoogle::protobuf::internal::WireFormat *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, void ***a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v4;
  int v6;
  unsigned int v8;
  char *v9;
  _BOOL8 v10;
  char *v11;
  int v12;
  int v13;
  AddrObjGoogle::protobuf::io::CodedInputStream *v14;
  _BOOL8 LittleEndian32Fallback;
  std::string *v16;
  int v17;
  BOOL v18;
  int v19;
  std::string::size_type __n;

  v4 = 0;
  v6 = (int)a2;
  v8 = a2 >> 3;
  switch(a2 & 7)
  {
    case 0:
      __n = 0;
      v9 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
      {
        v4 = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &__n);
        if (!a3)
          return v4;
      }
      else
      {
        __n = *v9;
        *((_QWORD *)this + 1) = v9 + 1;
        v4 = 1;
        if (!a3)
          return v4;
      }
      if ((_DWORD)v4)
        AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(a3, v8, __n);
      return v4;
    case 1:
      __n = 0;
      v10 = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &__n);
      v4 = v10;
      if (a3 && v10)
        AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(a3, v8, __n);
      return v4;
    case 2:
      LODWORD(__n) = 0;
      v11 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v11 >= *((_QWORD *)this + 2) || *v11 < 0)
      {
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, (unsigned int *)&__n))return 0;
      }
      else
      {
        LODWORD(__n) = *v11;
        *((_QWORD *)this + 1) = v11 + 1;
      }
      if (a3)
      {
        v16 = (std::string *)AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited(a3, v8);
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadString((uint64_t)this, v16, __n))
          return 0;
      }
      else if ((AddrObjGoogle::protobuf::io::CodedInputStream::Skip(this, __n) & 1) == 0)
      {
        return 0;
      }
      return 1;
    case 3:
      v12 = *((_DWORD *)this + 14);
      v13 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v12 + 1;
      if (v12 >= v13)
        return 0;
      v14 = a3
          ? (AddrObjGoogle::protobuf::io::CodedInputStream *)AddrObjGoogle::protobuf::UnknownFieldSet::AddGroup(a3, a2 >> 3): 0;
      if (!AddrObjGoogle::protobuf::internal::WireFormat::SkipMessage(this, v14, (AddrObjGoogle::protobuf::UnknownFieldSet *)a3))return 0;
      v17 = *((_DWORD *)this + 14);
      v18 = __OFSUB__(v17, 1);
      v19 = v17 - 1;
      if (v19 < 0 == v18)
        *((_DWORD *)this + 14) = v19;
      return *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
    case 5:
      LODWORD(__n) = 0;
      LittleEndian32Fallback = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&__n);
      v4 = LittleEndian32Fallback;
      if (a3 && LittleEndian32Fallback)
        AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(a3, v8, __n);
      return v4;
    default:
      return v4;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::UnknownFieldSetFieldSkipper::SkipMessage(void ****this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  return AddrObjGoogle::protobuf::internal::WireFormat::SkipMessage(a2, this[1], a3, a4);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::SkipMessage(AddrObjGoogle::protobuf::internal::WireFormat *this, void ***a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  char *v6;
  unint64_t TagFallback;
  BOOL v8;
  uint64_t v9;

  do
  {
    v6 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
    {
      TagFallback = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v6 + 1;
    }
    if ((_DWORD)TagFallback)
      v8 = (TagFallback & 7) == 4;
    else
      v8 = 1;
    v9 = v8;
  }
  while (!v8
       && AddrObjGoogle::protobuf::internal::WireFormat::SkipField(this, (AddrObjGoogle::protobuf::io::CodedInputStream *)TagFallback, a2, a4));
  return v9;
}

void AddrObjGoogle::protobuf::internal::UnknownFieldSetFieldSkipper::SkipUnknownEnum(void ****this, int a2, int a3)
{
  AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this[1], a2, a3);
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64(AddrObjGoogle::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)*((_QWORD *)this + 1);
  if ((unint64_t)v2 >= *((_QWORD *)this + 2) || (char)*v2 < 0)
    return AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a2);
  *a2 = *v2;
  *((_QWORD *)this + 1) = v2 + 1;
  return 1;
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  unsigned __int8 *v2;

  v2 = (unsigned __int8 *)*((_QWORD *)this + 1);
  if ((unint64_t)v2 >= *((_QWORD *)this + 2) || (char)*v2 < 0)
    return AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, a2);
  *a2 = *v2;
  *((_QWORD *)this + 1) = v2 + 1;
  return 1;
}

uint64_t **AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(uint64_t **this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  uint64_t v16;
  int v17;
  char *v18;
  int v19;

  v4 = this;
  v5 = 0;
  for (i = 0; ; ++i)
  {
    v7 = *v4;
    if (*v4)
      v8 = (unint64_t)(v7[1] - *v7) >> 4;
    else
      LODWORD(v8) = 0;
    if (i >= (int)v8)
      break;
    v9 = *v7;
    v10 = *(_DWORD *)(*v7 + v5);
    switch(v10 >> 29)
    {
      case 0u:
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 8 * v10);
        this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a2, *(_QWORD *)(v9 + v5 + 8));
        break;
      case 1u:
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * v10) | 5);
        this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, *(_DWORD *)(v9 + v5 + 8));
        break;
      case 2u:
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * v10) | 1);
        this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(_QWORD *)(v9 + v5 + 8));
        break;
      case 3u:
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * v10) | 2);
        v11 = v9 + v5;
        v12 = *(_QWORD *)(v11 + 8);
        if (*(char *)(v12 + 23) < 0)
          v13 = *(_QWORD *)(v12 + 8);
        else
          LODWORD(v13) = *(unsigned __int8 *)(v12 + 23);
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, v13);
        v16 = *(_QWORD *)(v11 + 8);
        v17 = *(char *)(v16 + 23);
        if (v17 >= 0)
          v18 = *(char **)(v11 + 8);
        else
          v18 = *(char **)v16;
        if (v17 >= 0)
          v19 = *(unsigned __int8 *)(v16 + 23);
        else
          v19 = *(_DWORD *)(v16 + 8);
        this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(a2, v18, v19);
        break;
      case 4u:
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * v10) | 3);
        v14 = v9 + v5;
        AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(*(AddrObjGoogle::protobuf::internal::WireFormat **)(v14 + 8), a2, v15);
        this = (uint64_t **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * *(_DWORD *)v14) | 4u);
        break;
      default:
        break;
    }
    v5 += 16;
  }
  return this;
}

const AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(uint64_t **this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v13;
  unsigned __int8 *v14;
  int v15;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v16;
  _BYTE *v17;
  uint64_t v18;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v19;
  _BYTE *v20;
  uint64_t v21;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v22;
  unsigned __int8 *v23;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v24;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v25;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v26;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v27;
  _BYTE *v28;
  int v29;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v30;
  const void *v31;
  int *v32;
  unsigned __int8 *v33;
  int v34;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v35;

  v6 = 0;
  v7 = 0;
  while (1)
  {
    v8 = *this;
    if (*this)
      v9 = (unint64_t)(v8[1] - *v8) >> 4;
    else
      LODWORD(v9) = 0;
    if (v7 >= (int)v9)
      return a2;
    v10 = *v8;
    v11 = *(_DWORD *)(*v8 + v6);
    switch(v11 >> 29)
    {
      case 0u:
        v12 = *(_QWORD *)(v10 + v6 + 8);
        v13 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(8 * v11);
        if (v13 > 0x7F)
        {
          if (v13 >> 14)
          {
            v14 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(_BYTE *)a2 = (8 * v11) | 0x80;
            *((_BYTE *)a2 + 1) = v13 >> 7;
            v14 = (unsigned __int8 *)a2 + 2;
          }
        }
        else
        {
          *(_BYTE *)a2 = 8 * v11;
          v14 = (unsigned __int8 *)a2 + 1;
        }
        v26 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, v14, v14);
        goto LABEL_47;
      case 1u:
        v15 = *(_DWORD *)(v10 + v6 + 8);
        v16 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v11) | 5);
        if (v16 > 0x7F)
        {
          if (v16 >> 14)
          {
            v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(_BYTE *)a2 = (8 * v11) | 0x85;
            *((_BYTE *)a2 + 1) = (8 * v11) >> 7;
            v17 = (char *)a2 + 2;
          }
        }
        else
        {
          *(_BYTE *)a2 = (8 * v11) | 5;
          v17 = (char *)a2 + 1;
        }
        *(_DWORD *)v17 = v15;
        a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)(v17 + 4);
        goto LABEL_48;
      case 2u:
        v18 = *(_QWORD *)(v10 + v6 + 8);
        v19 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v11) | 1);
        if (v19 > 0x7F)
        {
          if (v19 >> 14)
          {
            v20 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(_BYTE *)a2 = (8 * v11) | 0x81;
            *((_BYTE *)a2 + 1) = (8 * v11) >> 7;
            v20 = (char *)a2 + 2;
          }
        }
        else
        {
          *(_BYTE *)a2 = (8 * v11) | 1;
          v20 = (char *)a2 + 1;
        }
        *(_QWORD *)v20 = v18;
        a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)(v20 + 8);
        goto LABEL_48;
      case 3u:
        v21 = *(_QWORD *)(v10 + v6 + 8);
        v22 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v11) | 2);
        if (v22 > 0x7F)
        {
          if (v22 >> 14)
          {
            v23 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(_BYTE *)a2 = (8 * v11) | 0x82;
            *((_BYTE *)a2 + 1) = (8 * v11) >> 7;
            v23 = (unsigned __int8 *)a2 + 2;
          }
        }
        else
        {
          *(_BYTE *)a2 = (8 * v11) | 2;
          v23 = (unsigned __int8 *)a2 + 1;
        }
        if (*(char *)(v21 + 23) < 0)
          v27 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v21 + 8);
        else
          v27 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
        if (v27 > 0x7F)
        {
          v28 = AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v23, v23);
        }
        else
        {
          *v23 = v27;
          v28 = v23 + 1;
        }
        v29 = *(char *)(v21 + 23);
        if (v29 >= 0)
          v30 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v21;
        else
          v30 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)v21;
        if (v29 >= 0)
          v31 = (const void *)*(unsigned __int8 *)(v21 + 23);
        else
          v31 = (const void *)*(unsigned int *)(v21 + 8);
        v26 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRawToArray(v30, v31, v28, a4);
        goto LABEL_47;
      case 4u:
        v24 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v11) | 3);
        if (v24 > 0x7F)
        {
          if (v24 >> 14)
          {
            v25 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(_BYTE *)a2 = (8 * v11) | 0x83;
            *((_BYTE *)a2 + 1) = (8 * v11) >> 7;
            v25 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 2);
          }
        }
        else
        {
          *(_BYTE *)a2 = (8 * v11) | 3;
          v25 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)((char *)a2 + 1);
        }
        v32 = (int *)(v10 + v6);
        v33 = (unsigned __int8 *)AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(*((AddrObjGoogle::protobuf::internal::WireFormat **)v32 + 1), v25, (unsigned __int8 *)v25);
        v34 = *v32;
        v35 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * *v32) | 4u);
        if (v35 > 0x7F)
        {
          if (v35 >> 14)
          {
            v26 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, v33, v33);
LABEL_47:
            a2 = v26;
          }
          else
          {
            *v33 = (8 * *(_BYTE *)v32) | 0x84;
            v33[1] = (8 * v34) >> 7;
            a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)(v33 + 2);
          }
        }
        else
        {
          *v33 = (8 * *(_BYTE *)v32) | 4;
          a2 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)(v33 + 1);
        }
LABEL_48:
        ++v7;
        v6 += 16;
        break;
      default:
        goto LABEL_48;
    }
  }
}

_QWORD **AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(_QWORD **this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  _QWORD **v4;
  uint64_t v5;
  uint64_t i;
  _QWORD *v7;
  uint64_t v8;
  AddrObjGoogle::protobuf::UnknownField *v9;

  v4 = this;
  v5 = 0;
  for (i = 0; ; ++i)
  {
    v7 = *v4;
    if (*v4)
      v8 = (v7[1] - *v7) >> 4;
    else
      LODWORD(v8) = 0;
    if (i >= (int)v8)
      break;
    v9 = (AddrObjGoogle::protobuf::UnknownField *)(*v7 + v5);
    if (*(_DWORD *)v9 >> 29 == 3)
    {
      AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 0xBu);
      AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 0x10u);
      AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, *(_DWORD *)v9 & 0x1FFFFFFF);
      AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 0x1Au);
      AddrObjGoogle::protobuf::UnknownField::SerializeLengthDelimitedNoTag(v9, a2);
      this = (_QWORD **)AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, 0xCu);
    }
    v5 += 16;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(uint64_t **this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v10;
  int v11;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v16;
  int v17;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v23;
  _DWORD *v24;
  int v25;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;

  v3 = 0;
  v4 = 0;
  v5 = 0;
  while (2)
  {
    v6 = *this;
    if (*this)
      v7 = (unint64_t)(v6[1] - *v6) >> 4;
    else
      LODWORD(v7) = 0;
    if (v4 < (int)v7)
    {
      v8 = *v6;
      v9 = *(_DWORD *)(*v6 + v3);
      switch(v9 >> 29)
      {
        case 0u:
          v10 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(8 * v9);
          if (v10 >= 0x80)
            v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
          else
            v11 = 1;
          v5 = v11
             + (_DWORD)v5
             + AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64(*(_QWORD *)(v8 + v3 + 8));
          goto LABEL_37;
        case 1u:
          v12 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v9) | 5);
          if (v12 >= 0x80)
            v13 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
          else
            v13 = 1;
          v5 = (v5 + v13 + 4);
          goto LABEL_37;
        case 2u:
          v14 = 1;
          v15 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v9) | 1);
          if (v15 >= 0x80)
            v14 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
          v5 = (v5 + v14 + 8);
          goto LABEL_37;
        case 3u:
          v16 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v9) | 2);
          if (v16 >= 0x80)
            v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
          else
            v17 = 1;
          v20 = v8 + v3;
          v21 = *(_QWORD *)(v20 + 8);
          LODWORD(v22) = *(unsigned __int8 *)(v21 + 23);
          if (*(char *)(v21 + 23) < 0)
            v23 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v21 + 8);
          else
            v23 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
          if (v23 >= 0x80)
          {
            v28 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
            v21 = *(_QWORD *)(v20 + 8);
            LODWORD(v22) = *(unsigned __int8 *)(v21 + 23);
            if ((v22 & 0x80) != 0)
LABEL_35:
              v22 = *(_QWORD *)(v21 + 8);
          }
          else
          {
            v28 = 1;
            if ((v22 & 0x80) != 0)
              goto LABEL_35;
          }
          v5 = (v17 + v5 + v28 + v22);
          goto LABEL_37;
        case 4u:
          v18 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * v9) | 3);
          if (v18 >= 0x80)
            v19 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
          else
            v19 = 1;
          v24 = (_DWORD *)(v8 + v3);
          v25 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(*(AddrObjGoogle::protobuf::internal::WireFormat **)(v8 + v3 + 8), a2);
          v26 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((8 * *v24) | 4u);
          if (v26 >= 0x80)
            v27 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
          else
            v27 = 1;
          v5 = (v19 + v5 + v25 + v27);
          goto LABEL_37;
        default:
LABEL_37:
          ++v4;
          v3 += 16;
          continue;
      }
    }
    return v5;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(uint64_t **this, const AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v10;
  int v11;
  uint64_t v12;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v13;
  int v14;

  v3 = 0;
  v4 = 0;
  v5 = 0;
  while (1)
  {
    v6 = *this;
    if (*this)
      v7 = (unint64_t)(v6[1] - *v6) >> 4;
    else
      LODWORD(v7) = 0;
    if (v4 >= (int)v7)
      break;
    v8 = *v6;
    v9 = *(_DWORD *)(*v6 + v3);
    if (v9 >> 29 == 3)
    {
      v10 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(v9 & 0x1FFFFFFF);
      if (v10 >= 0x80)
        v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v11 = 1;
      v12 = *(_QWORD *)(v8 + v3 + 8);
      if (*(char *)(v12 + 23) < 0)
        v13 = *(AddrObjGoogle::protobuf::io::CodedOutputStream **)(v12 + 8);
      else
        v13 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
      if (v13 >= 0x80)
        v14 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v14 = 1;
      v5 = (v5 + 4 + v11 + (_DWORD)v13 + v14);
    }
    ++v4;
    v3 += 16;
  }
  return v5;
}

BOOL AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergePartial(AddrObjGoogle::protobuf::internal::WireFormat *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::Message *a3)
{
  AddrObjGoogle::protobuf::Descriptor *v5;
  uint64_t v6;
  char *v7;
  unint64_t TagFallback;
  BOOL v9;
  _BOOL8 v10;
  uint64_t FieldByNumber;
  AddrObjGoogle::protobuf::Message *v12;
  AddrObjGoogle::protobuf::DescriptorPool *v13;
  uint64_t v14;

  v5 = (AddrObjGoogle::protobuf::Descriptor *)(*(uint64_t (**)(AddrObjGoogle::protobuf::io::CodedInputStream *))(*(_QWORD *)a2 + 152))(a2);
  v6 = (*(uint64_t (**)(AddrObjGoogle::protobuf::io::CodedInputStream *))(*(_QWORD *)a2 + 144))(a2);
  while (1)
  {
    v7 = (char *)*((_QWORD *)this + 1);
    if ((unint64_t)v7 >= *((_QWORD *)this + 2) || *v7 < 0)
    {
      TagFallback = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((_QWORD *)this + 1) = v7 + 1;
    }
    v9 = !(_DWORD)TagFallback || (TagFallback & 7) == 4;
    v10 = v9;
    if (v9)
      return v10;
    if (v5)
    {
      FieldByNumber = AddrObjGoogle::protobuf::Descriptor::FindFieldByNumber(v5, TagFallback >> 3);
      if (FieldByNumber)
        goto LABEL_19;
      if (AddrObjGoogle::protobuf::Descriptor::IsExtensionNumber(v5, TagFallback >> 3))
      {
        v13 = (AddrObjGoogle::protobuf::DescriptorPool *)*((_QWORD *)this + 8);
        v14 = v13
            ? AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByNumber(v13, v5, TagFallback >> 3)
            : (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v6 + 536))(v6, TagFallback >> 3);
        FieldByNumber = v14;
        if (v14)
          goto LABEL_19;
      }
      FieldByNumber = 0;
      if ((_DWORD)TagFallback != 11 || !*(_BYTE *)(*((_QWORD *)v5 + 4) + 64))
        goto LABEL_19;
      if ((AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergeMessageSetItem(this, a2, v12) & 1) == 0)
        return v10;
    }
    else
    {
      FieldByNumber = 0;
LABEL_19:
      if ((AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergeField((AddrObjGoogle::protobuf::io::CodedInputStream *)TagFallback, FieldByNumber, (uint64_t)a2, this) & 1) == 0)return v10;
    }
  }
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergeMessageSetItem(AddrObjGoogle::protobuf::internal::WireFormat *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::Message *a3)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  uint64_t v6;
  AddrObjGoogle::protobuf::io::CodedInputStream *v7;
  uint64_t v8;
  char *v9;
  unint64_t TagFallback;
  char v11;
  char *v12;
  uint64_t v13;
  char *v14;
  std::string::size_type v15;
  int v16;
  _BYTE **v17;
  char v18;
  std::string *p_p;
  int v20;
  char v21;
  uint64_t v22;
  unsigned int v24[5];
  unsigned int __n;
  _QWORD __n_4[3];
  _QWORD v27[2];
  __int128 v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  std::string __p;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;

  v6 = (*(uint64_t (**)(AddrObjGoogle::protobuf::io::CodedInputStream *))(*(_QWORD *)a2 + 144))(a2);
  v7 = 0;
  v8 = 0;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v9 = (char *)*((_QWORD *)this + 1);
          if ((unint64_t)v9 >= *((_QWORD *)this + 2) || *v9 < 0)
          {
            TagFallback = AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
          }
          else
          {
            TagFallback = *v9;
            *((_DWORD *)this + 8) = TagFallback;
            *((_QWORD *)this + 1) = v9 + 1;
          }
          if ((int)TagFallback <= 25)
            break;
          if ((_DWORD)TagFallback != 26)
            goto LABEL_13;
          if ((_DWORD)v7)
          {
            v11 = AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergeField(v7, v8, (uint64_t)a2, this);
LABEL_14:
            if ((v11 & 1) == 0)
              goto LABEL_52;
          }
          else
          {
            memset(&__p, 0, sizeof(__p));
            __n = 0;
            v14 = (char *)*((_QWORD *)this + 1);
            if ((unint64_t)v14 >= *((_QWORD *)this + 2) || *v14 < 0)
            {
              if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &__n))
                goto LABEL_42;
              v15 = __n;
            }
            else
            {
              v15 = *v14;
              __n = *v14;
              *((_QWORD *)this + 1) = v14 + 1;
            }
            if (AddrObjGoogle::protobuf::io::CodedInputStream::ReadString((uint64_t)this, &__p, v15))
            {
              AddrObjGoogle::protobuf::io::StringOutputStream::StringOutputStream(v24, (uint64_t)&v34);
              AddrObjGoogle::protobuf::io::CodedOutputStream::CodedOutputStream((uint64_t)__n_4, (uint64_t)v24);
              AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)__n_4, __n);
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                p_p = &__p;
              else
                p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
              else
                v20 = __p.__r_.__value_.__r.__words[1];
              AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)__n_4, (char *)p_p, v20);
              AddrObjGoogle::protobuf::io::CodedOutputStream::~CodedOutputStream((AddrObjGoogle::protobuf::io::CodedOutputStream *)__n_4);
              AddrObjGoogle::protobuf::io::StringOutputStream::~StringOutputStream((AddrObjGoogle::protobuf::io::StringOutputStream *)v24);
              v21 = 1;
              goto LABEL_43;
            }
LABEL_42:
            v21 = 0;
LABEL_43:
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v7 = 0;
            if ((v21 & 1) == 0)
              goto LABEL_52;
          }
        }
        if (!(_DWORD)TagFallback)
          goto LABEL_52;
        if ((_DWORD)TagFallback == 12)
        {
          v22 = 1;
          goto LABEL_53;
        }
        if ((_DWORD)TagFallback != 16)
        {
LABEL_13:
          v11 = AddrObjGoogle::protobuf::internal::WireFormat::SkipField(this, (AddrObjGoogle::protobuf::io::CodedInputStream *)TagFallback, 0, v5);
          goto LABEL_14;
        }
        v24[0] = 0;
        v12 = (char *)*((_QWORD *)this + 1);
        if ((unint64_t)v12 >= *((_QWORD *)this + 2) || *v12 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v24))
            goto LABEL_52;
          v13 = v24[0];
        }
        else
        {
          v13 = *v12;
          v24[0] = *v12;
          *((_QWORD *)this + 1) = v12 + 1;
        }
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 536))(v6, v13);
        v7 = (AddrObjGoogle::protobuf::io::CodedInputStream *)((8 * (_DWORD)v13) | 2u);
        if (SHIBYTE(v36) < 0)
          break;
        v16 = HIBYTE(v36);
        if (HIBYTE(v36))
        {
          v17 = &v34;
          goto LABEL_29;
        }
      }
      v16 = v35;
    }
    while (!v35);
    v17 = (_BYTE **)v34;
LABEL_29:
    AddrObjGoogle::protobuf::io::ArrayInputStream::ArrayInputStream((uint64_t)&__p, v17, v16, -1);
    __n_4[0] = &__p;
    __n_4[2] = 0;
    v27[0] = 0;
    __n_4[1] = 0;
    *(_QWORD *)((char *)v27 + 6) = 0;
    v28 = xmmword_189C5ED80;
    v29 = 0;
    v30 = AddrObjGoogle::protobuf::io::CodedInputStream::default_recursion_limit_;
    v31 = 0;
    v32 = 0;
    AddrObjGoogle::protobuf::io::CodedInputStream::Refresh((AddrObjGoogle::protobuf::io::CodedInputStream *)__n_4);
    v18 = AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergeField(v7, v8, (uint64_t)a2, (AddrObjGoogle::protobuf::io::CodedInputStream *)__n_4);
    if ((v18 & 1) == 0)
      break;
    if (SHIBYTE(v36) < 0)
    {
      *v34 = 0;
      v35 = 0;
    }
    else
    {
      LOBYTE(v34) = 0;
      HIBYTE(v36) = 0;
    }
    AddrObjGoogle::protobuf::io::CodedInputStream::~CodedInputStream((AddrObjGoogle::protobuf::io::CodedInputStream *)__n_4);
    AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream((AddrObjGoogle::protobuf::io::ArrayInputStream *)&__p);
    if ((v18 & 1) == 0)
      goto LABEL_52;
  }
  AddrObjGoogle::protobuf::io::CodedInputStream::~CodedInputStream((AddrObjGoogle::protobuf::io::CodedInputStream *)__n_4);
  AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream((AddrObjGoogle::protobuf::io::ArrayInputStream *)&__p);
LABEL_52:
  v22 = 0;
LABEL_53:
  if (SHIBYTE(v36) < 0)
    operator delete(v34);
  return v22;
}

void sub_18880C1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  uint64_t v30;

  AddrObjGoogle::protobuf::io::StringOutputStream::~StringOutputStream((AddrObjGoogle::protobuf::io::StringOutputStream *)&a12);
  if (a30 < 0)
    operator delete(__p);
  if (*(char *)(v30 - 89) < 0)
    operator delete(*(void **)(v30 - 112));
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::ParseAndMergeField(AddrObjGoogle::protobuf::io::CodedInputStream *a1, uint64_t a2, uint64_t a3, AddrObjGoogle::protobuf::io::CodedInputStream *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __n128 v12;
  uint64_t v13;
  BOOL v14;
  char *v15;
  unsigned int v16;
  void ***v17;
  AddrObjGoogle::protobuf::UnknownFieldSet *v18;
  int v19;
  __n128 v20;
  uint64_t v21;
  std::string::size_type data_low;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  AddrObjGoogle::protobuf::io::CodedInputStream *v29;
  AddrObjGoogle::protobuf::MessageLite *v30;
  int data;
  uint64_t ValueByNumber;
  uint64_t v33;
  uint64_t v34;
  std::string::size_type v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  std::string::size_type v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int v44;
  char *v45;
  char *v46;
  int v47;
  uint64_t v48;
  char *v49;
  unsigned int v50;
  char *v51;
  std::string::size_type v52;
  void ***v53;
  std::string __p;
  unsigned int v55;

  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 144))(a3);
  v9 = v8;
  if (!a2)
    goto LABEL_16;
  v10 = *(unsigned int *)(a2 + 44);
  if ((a1 & 7) == AddrObjGoogle::protobuf::internal::WireFormatLite::kWireTypeForFieldType[v10])
  {
    switch((int)v10)
    {
      case 1:
        __p.__r_.__value_.__r.__words[0] = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a4, (unint64_t *)&__p);
        if (!(_DWORD)result)
          return result;
        v12.n128_u64[0] = __p.__r_.__value_.__r.__words[0];
        v13 = *(_QWORD *)v9;
        if (*(_DWORD *)(a2 + 48) == 3)
          (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 488))(v9, a3, a2, v12);
        else
          (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 232))(v9, a3, a2, v12);
        return 1;
      case 2:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
        v20.n128_u32[0] = (unsigned __int32)__p.__r_.__value_.__l.__data_;
        v21 = *(_QWORD *)v9;
        if (*(_DWORD *)(a2 + 48) == 3)
          (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v21 + 480))(v9, a3, a2, v20);
        else
          (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v21 + 224))(v9, a3, a2, v20);
        return 1;
      case 3:
        __p.__r_.__value_.__r.__words[0] = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64(a4, (unint64_t *)&__p);
        if (!(_DWORD)result)
          return result;
        goto LABEL_70;
      case 4:
        __p.__r_.__value_.__r.__words[0] = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64(a4, (unint64_t *)&__p);
        if (!(_DWORD)result)
          return result;
        goto LABEL_34;
      case 5:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
        goto LABEL_68;
      case 6:
        __p.__r_.__value_.__r.__words[0] = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a4, (unint64_t *)&__p);
        if (!(_DWORD)result)
          return result;
LABEL_34:
        data_low = __p.__r_.__value_.__r.__words[0];
        v23 = 216;
        if (*(_DWORD *)(a2 + 48) == 3)
          v23 = 472;
        goto LABEL_62;
      case 7:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
        goto LABEL_60;
      case 8:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
        v24 = *(_QWORD *)v9;
        if (*(_DWORD *)(a2 + 48) == 3)
          (*(void (**)(uint64_t, uint64_t, uint64_t, BOOL))(v24 + 496))(v9, a3, a2, LODWORD(__p.__r_.__value_.__l.__data_) != 0);
        else
          (*(void (**)(uint64_t, uint64_t, uint64_t, BOOL))(v24 + 240))(v9, a3, a2, LODWORD(__p.__r_.__value_.__l.__data_) != 0);
        return 1;
      case 9:
        memset(&__p, 0, sizeof(__p));
        if (!AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a4, &__p))
          goto LABEL_79;
        v25 = 248;
        if (*(_DWORD *)(a2 + 48) == 3)
          v25 = 504;
        goto LABEL_57;
      case 10:
        v26 = 264;
        if (*(_DWORD *)(a2 + 48) == 3)
          v26 = 520;
        v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + v26))(v8, a3, a2, *((_QWORD *)a4 + 9));
        return (AddrObjGoogle::protobuf::internal::WireFormatLite::ReadGroup(a1 >> 3, a4, v27) & 1) != 0;
      case 11:
        v28 = 264;
        if (*(_DWORD *)(a2 + 48) == 3)
          v28 = 520;
        v29 = (AddrObjGoogle::protobuf::io::CodedInputStream *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v8 + v28))(v8, a3, a2, *((_QWORD *)a4 + 9));
        result = AddrObjGoogle::protobuf::internal::WireFormatLite::ReadMessage(a4, v29, v30);
        if ((_DWORD)result)
          return 1;
        return result;
      case 12:
        memset(&__p, 0, sizeof(__p));
        if (!AddrObjGoogle::protobuf::internal::WireFormatLite::ReadString((uint64_t)a4, &__p))
        {
LABEL_79:
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          return 0;
        }
        v25 = 248;
        if (*(_DWORD *)(a2 + 48) == 3)
          v25 = 504;
LABEL_57:
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(_QWORD *)v9 + v25))(v9, a3, a2, &__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        break;
      case 13:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
LABEL_60:
        data_low = LODWORD(__p.__r_.__value_.__l.__data_);
        v23 = 208;
        if (*(_DWORD *)(a2 + 48) == 3)
          v23 = 464;
LABEL_62:
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(*(_QWORD *)v9 + v23))(v9, a3, a2, data_low);
        return 1;
      case 14:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
        data = (int)__p.__r_.__value_.__l.__data_;
        ValueByNumber = AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(*(AddrObjGoogle::protobuf::EnumDescriptor **)(a2 + 80), (int)__p.__r_.__value_.__l.__data_);
        if (ValueByNumber)
        {
          v33 = *(_QWORD *)v9;
          if (*(_DWORD *)(a2 + 48) == 3)
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 512))(v9, a3, a2, ValueByNumber);
          else
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 256))(v9, a3, a2, ValueByNumber);
        }
        else
        {
          v53 = (void ***)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, a3);
          AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(v53, a1 >> 3, data);
        }
        return 1;
      case 15:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
LABEL_68:
        v34 = LODWORD(__p.__r_.__value_.__l.__data_);
        goto LABEL_73;
      case 16:
        __p.__r_.__value_.__r.__words[0] = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a4, (unint64_t *)&__p);
        if (!(_DWORD)result)
          return result;
LABEL_70:
        v35 = __p.__r_.__value_.__r.__words[0];
        goto LABEL_77;
      case 17:
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32(a4, (unsigned int *)&__p);
        if (!(_DWORD)result)
          return result;
        v34 = -(__p.__r_.__value_.__s.__data_[0] & 1) ^ (LODWORD(__p.__r_.__value_.__l.__data_) >> 1);
LABEL_73:
        v36 = *(_QWORD *)v9;
        if (*(_DWORD *)(a2 + 48) == 3)
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 448))(v9, a3, a2, v34);
        else
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 192))(v9, a3, a2, v34);
        return 1;
      case 18:
        __p.__r_.__value_.__r.__words[0] = 0;
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64(a4, (unint64_t *)&__p);
        if (!(_DWORD)result)
          return result;
        v35 = -(uint64_t)(__p.__r_.__value_.__s.__data_[0] & 1) ^ (__p.__r_.__value_.__r.__words[0] >> 1);
LABEL_77:
        v37 = *(_QWORD *)v9;
        if (*(_DWORD *)(a2 + 48) == 3)
          (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(v37 + 456))(v9, a3, a2, v35);
        else
          (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(v37 + 200))(v9, a3, a2, v35);
        return 1;
      default:
        return 1;
    }
    return 1;
  }
  if ((a1 & 7) != 2
    || ((v10 - 13) <= 0xFFFFFFFB ? (v14 = *(_DWORD *)(a2 + 48) == 3) : (v14 = 0), !v14))
  {
LABEL_16:
    v17 = (void ***)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 24))(v8, a3);
    return AddrObjGoogle::protobuf::internal::WireFormat::SkipField(a4, a1, v17, v18);
  }
  v55 = 0;
  v15 = (char *)*((_QWORD *)a4 + 1);
  if ((unint64_t)v15 >= *((_QWORD *)a4 + 2) || *v15 < 0)
  {
    if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a4, &v55))
      return 0;
    v16 = v55;
  }
  else
  {
    v16 = *v15;
    v55 = v16;
    *((_QWORD *)a4 + 1) = v15 + 1;
  }
  v19 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(a4, v16);
  switch(*(_DWORD *)(a2 + 44))
  {
    case 1:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      while (1)
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a4, (unint64_t *)&__p))
          return 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)v9 + 488))(v9, a3, a2, *(double *)&__p.__r_.__value_.__l.__data_);
        if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) <= 0)
          goto LABEL_167;
      }
    case 2:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      while (1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a4, (unsigned int *)&__p))
          return 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, float))(*(_QWORD *)v9 + 480))(v9, a3, a2, *(float *)&__p.__r_.__value_.__l.__data_);
        if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) <= 0)
          goto LABEL_167;
      }
    case 3:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        v38 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a4 + 2) || *v38 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(a4, (unint64_t *)&__p))return 0;
          v39 = __p.__r_.__value_.__r.__words[0];
        }
        else
        {
          v39 = *v38;
          *((_QWORD *)a4 + 1) = v38 + 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(*(_QWORD *)v9 + 456))(v9, a3, a2, v39);
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 4:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        v40 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a4 + 2) || *v40 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(a4, (unint64_t *)&__p))return 0;
        }
        else
        {
          __p.__r_.__value_.__r.__words[0] = *v40;
          *((_QWORD *)a4 + 1) = v40 + 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9 + 472))(v9, a3, a2);
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 5:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        v41 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a4 + 2) || *v41 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a4, (unsigned int *)&__p))return 0;
          v42 = LODWORD(__p.__r_.__value_.__l.__data_);
        }
        else
        {
          v42 = *v41;
          *((_QWORD *)a4 + 1) = v41 + 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9 + 448))(v9, a3, a2, v42);
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 6:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      while (1)
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a4, (unint64_t *)&__p))
          return 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(*(_QWORD *)v9 + 472))(v9, a3, a2, __p.__r_.__value_.__r.__words[0]);
        if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) <= 0)
          goto LABEL_167;
      }
    case 7:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      while (1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a4, (unsigned int *)&__p))
          return 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v9 + 464))(v9, a3, a2, LODWORD(__p.__r_.__value_.__l.__data_));
        if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) <= 0)
          goto LABEL_167;
      }
    case 8:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        v43 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a4 + 2) || *v43 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a4, (unsigned int *)&__p))return 0;
          v44 = (int)__p.__r_.__value_.__l.__data_;
        }
        else
        {
          v44 = *v43;
          *((_QWORD *)a4 + 1) = v43 + 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, BOOL))(*(_QWORD *)v9 + 496))(v9, a3, a2, v44 != 0);
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
      return 0;
    case 0xD:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        v45 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a4 + 2) || *v45 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a4, (unsigned int *)&__p))return 0;
        }
        else
        {
          LODWORD(__p.__r_.__value_.__l.__data_) = *v45;
          *((_QWORD *)a4 + 1) = v45 + 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9 + 464))(v9, a3, a2);
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 0xE:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        v46 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a4 + 2) || *v46 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a4, (unsigned int *)&__p))return 0;
          v47 = (int)__p.__r_.__value_.__l.__data_;
        }
        else
        {
          v47 = *v46;
          *((_QWORD *)a4 + 1) = v46 + 1;
        }
        v48 = AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(*(AddrObjGoogle::protobuf::EnumDescriptor **)(a2 + 80), v47);
        if (v48)
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9 + 512))(v9, a3, a2, v48);
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 0xF:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      while (1)
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a4, (unsigned int *)&__p))
          return 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v9 + 448))(v9, a3, a2, LODWORD(__p.__r_.__value_.__l.__data_));
        if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) <= 0)
          goto LABEL_167;
      }
    case 0x10:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      while (1)
      {
        __p.__r_.__value_.__r.__words[0] = 0;
        if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a4, (unint64_t *)&__p))
          return 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(*(_QWORD *)v9 + 456))(v9, a3, a2, __p.__r_.__value_.__r.__words[0]);
        if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) <= 0)
          goto LABEL_167;
      }
    case 0x11:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      do
      {
        LODWORD(__p.__r_.__value_.__l.__data_) = 0;
        v49 = (char *)*((_QWORD *)a4 + 1);
        if ((unint64_t)v49 >= *((_QWORD *)a4 + 2) || *v49 < 0)
        {
          if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(a4, (unsigned int *)&__p))return 0;
          v50 = __p.__r_.__value_.__l.__data_;
        }
        else
        {
          v50 = *v49;
          *((_QWORD *)a4 + 1) = v49 + 1;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v9 + 448))(v9, a3, a2, -(v50 & 1) ^ (v50 >> 1));
      }
      while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
      goto LABEL_167;
    case 0x12:
      if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) < 1)
        goto LABEL_167;
      break;
    default:
      goto LABEL_167;
  }
  do
  {
    __p.__r_.__value_.__r.__words[0] = 0;
    v51 = (char *)*((_QWORD *)a4 + 1);
    if ((unint64_t)v51 >= *((_QWORD *)a4 + 2) || *v51 < 0)
    {
      if (!AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(a4, (unint64_t *)&__p))return 0;
      v52 = __p.__r_.__value_.__r.__words[0];
    }
    else
    {
      v52 = *v51;
      *((_QWORD *)a4 + 1) = v51 + 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, std::string::size_type))(*(_QWORD *)v9 + 456))(v9, a3, a2, -(uint64_t)(v52 & 1) ^ (v52 >> 1));
  }
  while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(a4) > 0);
LABEL_167:
  AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)a4, v19);
  return 1;
}

void sub_18880CDD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::ReadGroup(int a1, _DWORD *a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t result;
  int v8;
  BOOL v9;
  int v10;

  v3 = a2[14];
  v4 = a2[15];
  a2[14] = v3 + 1;
  if (v3 >= v4)
    return 0;
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 64))(a3);
  if ((_DWORD)result)
  {
    v8 = a2[14];
    v9 = __OFSUB__(v8, 1);
    v10 = v8 - 1;
    if (v10 < 0 == v9)
      a2[14] = v10;
    return a2[8] == ((8 * a1) | 4);
  }
  return result;
}

void AddrObjGoogle::protobuf::internal::WireFormat::SerializeWithCachedSizes(AddrObjGoogle::protobuf::internal::WireFormat *this, const AddrObjGoogle::protobuf::Message *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t (*v13)(uint64_t, AddrObjGoogle::protobuf::internal::WireFormat *);
  _QWORD **v14;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v15;
  uint64_t **v16;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v17;
  std::string *v18;
  std::string *v19;
  char v20;
  std::string v21[2];
  void *__p;
  _BYTE *v23;
  uint64_t v24;

  v5 = (int)a2;
  v7 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::WireFormat *, const AddrObjGoogle::protobuf::Message *, AddrObjGoogle::protobuf::io::CodedOutputStream *, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(_QWORD *)this + 152))(this, a2, a3, a4);
  v8 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::WireFormat *))(*(_QWORD *)this + 144))(this);
  v10 = *((_DWORD *)a3 + 4);
  v9 = *((_DWORD *)a3 + 5);
  __p = 0;
  v23 = 0;
  v24 = 0;
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::WireFormat *, void **))(*(_QWORD *)v8 + 96))(v8, this, &__p);
  v11 = __p;
  if (v23 != __p)
  {
    v12 = 0;
    do
    {
      AddrObjGoogle::protobuf::internal::WireFormat::SerializeFieldWithCachedSizes(v11[v12++], (uint64_t)this, a3);
      v11 = __p;
    }
    while (v12 < (v23 - (_BYTE *)__p) >> 3);
  }
  v13 = *(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::WireFormat *))(*(_QWORD *)v8 + 16);
  if (*(_BYTE *)(*(_QWORD *)(v7 + 32) + 64))
  {
    v14 = (_QWORD **)v13(v8, this);
    AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(v14, a3, v15);
  }
  else
  {
    v16 = (uint64_t **)v13(v8, this);
    AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields(v16, a3, v17);
  }
  if (*((_DWORD *)a3 + 5) - *((_DWORD *)a3 + 4) != v9 + v5 - v10)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/wire_format.cc", 726);
    v18 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (output->ByteCount()) == (expected_endpoint): ");
    v19 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, ": Protocol message serialized to a size different from what was originally expected.  Perhaps it was modified by another thread during serialization?");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (AddrObjGoogle::protobuf::internal::LogMessage *)v19);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  if (__p)
  {
    v23 = __p;
    operator delete(__p);
  }
}

void sub_18880CFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a10);
  if (__p)
  {
    a17 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::WireFormat::SerializeFieldWithCachedSizes(uint64_t a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v17;
  double v18;
  uint64_t v19;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v20;
  float v21;
  uint64_t v22;
  unint64_t v23;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v24;
  uint64_t v25;
  uint64_t v26;
  signed int v27;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v28;
  uint64_t v29;
  uint64_t v30;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v31;
  uint64_t v32;
  int v33;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v34;
  uint64_t v35;
  unsigned int v36;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v56;
  uint64_t v57;
  uint64_t v58;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void *__p;
  uint64_t v65;
  uint64_t v66;

  v6 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 144))(a2);
  v7 = v6;
  if (*(_BYTE *)(a1 + 52)
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 32) + 64)
    && AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a1 + 44)] == 10
    && *(_DWORD *)(a1 + 48) != 3)
  {
    AddrObjGoogle::protobuf::internal::WireFormat::SerializeMessageSetItemWithCachedSizes(a1, a2, (uint64_t)a3);
  }
  else
  {
    v8 = *v6;
    if (*(_DWORD *)(a1 + 48) == 3)
      v9 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(v6, a2, a1);
    else
      v9 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 40))(v6, a2, a1);
    v10 = v9;
    v11 = *(_QWORD *)(a1 + 96);
    v12 = *(unsigned __int8 *)(v11 + 44);
    if (*(_BYTE *)(v11 + 44))
      v13 = v9 < 1;
    else
      v13 = 1;
    if (!v13)
    {
      AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (8 * *(_DWORD *)(a1 + 40)) | 2);
      v14 = AddrObjGoogle::protobuf::internal::WireFormat::FieldDataOnlyByteSize(a1, a2);
      AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v14);
LABEL_14:
      v15 = 0;
      while (2)
      {
        switch(*(_DWORD *)(a1 + 44))
        {
          case 1:
            v16 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
            {
              (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v16 + 320))(v7, a2, a1, v15);
              if (v12)
                goto LABEL_56;
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 144))(v7, a2, a1);
              if (v12)
              {
LABEL_56:
                v60 = *(_QWORD *)&v18;
                goto LABEL_99;
              }
            }
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteDouble((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), a3, v18, v17);
            goto LABEL_109;
          case 2:
            v19 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
            {
              (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v19 + 312))(v7, a2, a1, v15);
              if (!v12)
                goto LABEL_21;
            }
            else
            {
              (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 136))(v7, a2, a1);
              if (!v12)
              {
LABEL_21:
                AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFloat((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), a3, v21, v20);
                goto LABEL_109;
              }
            }
            v61 = LODWORD(v21);
LABEL_96:
            AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, v61);
            goto LABEL_109;
          case 3:
            v22 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v23 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v22 + 288))(v7, a2, a1, v15);
            else
              v23 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v22 + 112))(v7, a2, a1);
            v62 = v23;
            if (!v12)
              goto LABEL_61;
            goto LABEL_108;
          case 4:
            v25 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v23 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v25 + 304))(v7, a2, a1, v15);
            else
              v23 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v25 + 128))(v7, a2, a1);
            v62 = v23;
            if (v12)
              goto LABEL_108;
LABEL_61:
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v23, a3, v24);
            goto LABEL_109;
          case 5:
            v26 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v27 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v26 + 280))(v7, a2, a1, v15);
            else
              v27 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v26 + 104))(v7, a2, a1);
            LODWORD(v62) = v27;
            if (!v12)
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v27, a3, v28);
              goto LABEL_109;
            }
            if ((v27 & 0x80000000) == 0)
              goto LABEL_93;
            v62 = v27;
            goto LABEL_108;
          case 6:
            v29 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v30 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v29 + 304))(v7, a2, a1, v15);
            else
              v30 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v29 + 128))(v7, a2, a1);
            v60 = v30;
            if (!v12)
              goto LABEL_71;
            goto LABEL_99;
          case 7:
            v32 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v33 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v32 + 296))(v7, a2, a1, v15);
            else
              v33 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v32 + 120))(v7, a2, a1);
            v61 = v33;
            if (!v12)
              goto LABEL_74;
            goto LABEL_96;
          case 8:
            v35 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v36 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v35 + 328))(v7, a2, a1, v15);
            else
              v36 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v35 + 152))(v7, a2, a1);
            LODWORD(v62) = v36;
            if (!v12)
              goto LABEL_77;
            goto LABEL_103;
          case 9:
            __p = 0;
            v65 = 0;
            v66 = 0;
            v38 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, void **))(v38 + 360))(v7, a2, a1, v15, &__p);
            else
              v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void **))(v38 + 184))(v7, a2, a1, &__p);
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(*(_DWORD *)(a1 + 40), v39, a3);
            goto LABEL_86;
          case 0xA:
            v40 = *(_DWORD *)(a1 + 40);
            v41 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v42 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v41 + 352))(v7, a2, a1, v15);
            else
              v42 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD))(v41 + 176))(v7, a2, a1, 0);
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteGroup(v40, v42, a3);
            goto LABEL_109;
          case 0xB:
            v43 = *(_DWORD *)(a1 + 40);
            v44 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v45 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v44 + 352))(v7, a2, a1, v15);
            else
              v45 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD))(v44 + 176))(v7, a2, a1, 0);
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessage(v43, v45, a3);
            goto LABEL_109;
          case 0xC:
            __p = 0;
            v65 = 0;
            v66 = 0;
            v46 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v47 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, void **))(v46 + 360))(v7, a2, a1, v15, &__p);
            else
              v47 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void **))(v46 + 184))(v7, a2, a1, &__p);
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteBytes(*(_DWORD *)(a1 + 40), v47, a3);
LABEL_86:
            if (SHIBYTE(v66) < 0)
              operator delete(__p);
            goto LABEL_109;
          case 0xD:
            v48 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v36 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v48 + 296))(v7, a2, a1, v15);
            else
              v36 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v48 + 120))(v7, a2, a1);
            LODWORD(v62) = v36;
            if (v12)
              goto LABEL_103;
LABEL_77:
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v36, a3, v37);
            goto LABEL_109;
          case 0xE:
            v49 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
            {
              v50 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v49 + 344))(v7, a2, a1, v15);
              if (!v12)
                goto LABEL_46;
            }
            else
            {
              v50 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v49 + 168))(v7, a2, a1);
              if (!v12)
              {
LABEL_46:
                AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), *(_DWORD *)(v50 + 16), a3, v51);
                goto LABEL_109;
              }
            }
            v62 = *(int *)(v50 + 16);
            if ((v62 & 0x80000000) != 0)
            {
LABEL_108:
              AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, v62);
            }
            else
            {
LABEL_93:
              v63 = (uint64_t)a3;
LABEL_104:
              AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(v63, v62);
            }
LABEL_109:
            v15 = (v15 + 1);
            if (v10 == (_DWORD)v15)
              return;
            continue;
          case 0xF:
            v52 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v33 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v52 + 280))(v7, a2, a1, v15);
            else
              v33 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v52 + 104))(v7, a2, a1);
            v61 = v33;
            if (v12)
              goto LABEL_96;
LABEL_74:
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed32((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v33, a3, v34);
            goto LABEL_109;
          case 0x10:
            v53 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v30 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v53 + 288))(v7, a2, a1, v15);
            else
              v30 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v53 + 112))(v7, a2, a1);
            v60 = v30;
            if (v12)
LABEL_99:
              AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, v60);
            else
LABEL_71:
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed64((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v30, a3, v31);
            goto LABEL_109;
          case 0x11:
            v54 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v55 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v54 + 280))(v7, a2, a1, v15);
            else
              v55 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v54 + 104))(v7, a2, a1);
            if (!v12)
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt32((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v55, a3, v56);
              goto LABEL_109;
            }
            LODWORD(v62) = (2 * v55) ^ (v55 >> 31);
LABEL_103:
            v63 = (uint64_t)a3;
            goto LABEL_104;
          case 0x12:
            v57 = *v7;
            if (*(_DWORD *)(a1 + 48) == 3)
              v58 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v57 + 288))(v7, a2, a1, v15);
            else
              v58 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v57 + 112))(v7, a2, a1);
            if (v12)
            {
              v62 = (2 * v58) ^ (v58 >> 63);
              goto LABEL_108;
            }
            AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt64((AddrObjGoogle::protobuf::internal::WireFormatLite *)*(unsigned int *)(a1 + 40), v58, a3, v59);
            goto LABEL_109;
          default:
            goto LABEL_109;
        }
      }
    }
    if (v9 >= 1)
      goto LABEL_14;
  }
}

void sub_18880D858(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::SerializeMessageSetItemWithCachedSizes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 144))(a2);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(a3, 0xBu);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(a3, 0x10u);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(a3, *(_DWORD *)(a1 + 40));
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(a3, 0x1Au);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v6 + 176))(v6, a2, a1, 0);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 96))(v7);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(a3, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 80))(v7, a3);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(a3, 0xCu);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::FieldDataOnlyByteSize(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  uint64_t v34;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v35;
  int v36;
  uint64_t v37;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v38;
  int v39;
  uint64_t v40;
  int v41;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  void *__p[2];
  uint64_t v57;

  v4 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 144))(a2);
  v5 = v4;
  v6 = *v4;
  if (*(_DWORD *)(a1 + 48) == 3)
    v7 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v4, a2, a1);
  else
    v7 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v6 + 40))(v4, a2, a1);
  v8 = v7;
  switch(*(_DWORD *)(a1 + 44))
  {
    case 1:
    case 6:
    case 0x10:
      v9 = (8 * v7);
      goto LABEL_91;
    case 2:
    case 7:
    case 0xF:
      v9 = (4 * v7);
      goto LABEL_91;
    case 3:
      if (*(_DWORD *)(a1 + 48) != 3)
      {
        v47 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 112))(v5, a2, a1);
        goto LABEL_108;
      }
      if ((int)v7 < 1)
        goto LABEL_90;
      LODWORD(v9) = 0;
      v20 = 0;
      do
      {
        v21 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 288))(v5, a2, a1, v20);
        v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64(v21) + v9;
        v20 = (v20 + 1);
      }
      while (v8 != (_DWORD)v20);
      goto LABEL_91;
    case 4:
      if (*(_DWORD *)(a1 + 48) != 3)
      {
        v47 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 128))(v5, a2, a1);
        goto LABEL_108;
      }
      if ((int)v7 < 1)
        goto LABEL_90;
      LODWORD(v9) = 0;
      v22 = 0;
      do
      {
        v23 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 304))(v5, a2, a1, v22);
        v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64(v23) + v9;
        v22 = (v22 + 1);
      }
      while (v8 != (_DWORD)v22);
      goto LABEL_91;
    case 5:
      if (*(_DWORD *)(a1 + 48) == 3)
      {
        if ((int)v7 < 1)
          goto LABEL_90;
        LODWORD(v9) = 0;
        v24 = 0;
        do
        {
          v25 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 280))(v5, a2, a1, v24);
          if ((v25 & 0x80000000) != 0)
          {
            v26 = 10;
          }
          else if (v25 >= 0x80)
          {
            v26 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
          }
          else
          {
            v26 = 1;
          }
          v9 = (v26 + v9);
          v24 = (v24 + 1);
        }
        while (v8 != (_DWORD)v24);
        goto LABEL_91;
      }
      v48 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 104))(v5, a2, a1);
      if ((v48 & 0x80000000) == 0)
        goto LABEL_104;
      goto LABEL_102;
    case 8:
      v9 = v7;
      goto LABEL_91;
    case 9:
    case 0xC:
      if ((int)v7 < 1)
        goto LABEL_90;
      LODWORD(v9) = 0;
      v10 = 0;
      do
      {
        __p[0] = 0;
        __p[1] = 0;
        v57 = 0;
        v11 = *v5;
        if (*(_DWORD *)(a1 + 48) == 3)
          v12 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, void **))(v11 + 360))(v5, a2, a1, v10, __p);
        else
          v12 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, void **))(v11 + 184))(v5, a2, a1, __p);
        v13 = v12;
        v14 = *(unsigned __int8 *)(v12 + 23);
        v15 = v14;
        v16 = *(_QWORD *)(v12 + 8);
        if ((v14 & 0x80u) == 0)
          v17 = *(unsigned __int8 *)(v12 + 23);
        else
          v17 = v16;
        if (v17 >= 0x80)
        {
          v18 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v17);
          v14 = *(unsigned __int8 *)(v13 + 23);
          v16 = *(_QWORD *)(v13 + 8);
          v15 = *(_BYTE *)(v13 + 23);
        }
        else
        {
          v18 = 1;
        }
        if (v15 >= 0)
          v19 = v14;
        else
          v19 = v16;
        if (SHIBYTE(v57) < 0)
          operator delete(__p[0]);
        v9 = (v18 + v9 + v19);
        v10 = (v10 + 1);
      }
      while (v8 != (_DWORD)v10);
      goto LABEL_91;
    case 0xA:
      if (*(_DWORD *)(a1 + 48) != 3)
      {
        v49 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, _QWORD))(*v5 + 176))(v5, a2, a1, 0);
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v49 + 72))(v49);
      }
      if ((int)v7 < 1)
        goto LABEL_90;
      LODWORD(v9) = 0;
      v27 = 0;
      do
      {
        v28 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 352))(v5, a2, a1, v27);
        v9 = (*(unsigned int (**)(uint64_t))(*(_QWORD *)v28 + 72))(v28) + v9;
        v27 = (v27 + 1);
      }
      while (v8 != (_DWORD)v27);
      goto LABEL_91;
    case 0xB:
      if (*(_DWORD *)(a1 + 48) == 3)
      {
        if ((int)v7 < 1)
          goto LABEL_90;
        LODWORD(v9) = 0;
        v29 = 0;
        do
        {
          v30 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 352))(v5, a2, a1, v29);
          v31 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 72))(v30);
          v32 = (int)v31;
          if (v31 >= 0x80)
            v33 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
          else
            v33 = 1;
          v9 = (v32 + v9 + v33);
          v29 = (v29 + 1);
        }
        while (v8 != (_DWORD)v29);
      }
      else
      {
        v50 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, _QWORD))(*v5 + 176))(v5, a2, a1, 0);
        v51 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 72))(v50);
        v52 = (int)v51;
        if (v51 >= 0x80)
          v53 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
        else
          v53 = 1;
        v9 = (v53 + v52);
      }
      goto LABEL_91;
    case 0xD:
      if (*(_DWORD *)(a1 + 48) != 3)
      {
        v48 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 120))(v5, a2, a1);
        goto LABEL_104;
      }
      if ((int)v7 < 1)
        goto LABEL_90;
      LODWORD(v9) = 0;
      v34 = 0;
      do
      {
        v35 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 296))(v5, a2, a1, v34);
        if (v35 >= 0x80)
          v36 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
        else
          v36 = 1;
        v9 = (v36 + v9);
        v34 = (v34 + 1);
      }
      while (v8 != (_DWORD)v34);
      goto LABEL_91;
    case 0xE:
      if (*(_DWORD *)(a1 + 48) == 3)
      {
        if ((int)v7 < 1)
          goto LABEL_90;
        LODWORD(v9) = 0;
        v37 = 0;
        do
        {
          v38 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 344))(v5, a2, a1, v37)+ 16);
          if ((v38 & 0x80000000) != 0)
          {
            v39 = 10;
          }
          else if (v38 >= 0x80)
          {
            v39 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
          }
          else
          {
            v39 = 1;
          }
          v9 = (v39 + v9);
          v37 = (v37 + 1);
        }
        while (v8 != (_DWORD)v37);
      }
      else
      {
        v48 = *(unsigned int *)((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 168))(v5, a2, a1) + 16);
        if ((v48 & 0x80000000) == 0)
          goto LABEL_104;
LABEL_102:
        v9 = 10;
      }
      goto LABEL_91;
    case 0x11:
      if (*(_DWORD *)(a1 + 48) == 3)
      {
        if ((int)v7 < 1)
          goto LABEL_90;
        LODWORD(v9) = 0;
        v40 = 0;
        do
        {
          v41 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 280))(v5, a2, a1, v40);
          v42 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)((2 * v41) ^ (v41 >> 31));
          if (v42 >= 0x80)
            v43 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
          else
            v43 = 1;
          v9 = (v43 + v9);
          v40 = (v40 + 1);
        }
        while (v8 != (_DWORD)v40);
        goto LABEL_91;
      }
      v54 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 104))(v5, a2, a1);
      v48 = (2 * v54) ^ (v54 >> 31);
LABEL_104:
      if (v48 < 0x80)
      {
        v9 = 1;
        goto LABEL_91;
      }
      result = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v48);
      break;
    case 0x12:
      if (*(_DWORD *)(a1 + 48) == 3)
      {
        if ((int)v7 < 1)
        {
LABEL_90:
          v9 = 0;
        }
        else
        {
          LODWORD(v9) = 0;
          v44 = 0;
          do
          {
            v45 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v5 + 288))(v5, a2, a1, v44);
            v9 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64((2 * v45) ^ (v45 >> 63))
               + v9;
            v44 = (v44 + 1);
          }
          while (v8 != (_DWORD)v44);
        }
LABEL_91:
        result = v9;
      }
      else
      {
        v55 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*v5 + 112))(v5, a2, a1);
        v47 = (2 * v55) ^ (v55 >> 63);
LABEL_108:
        result = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize64(v47);
      }
      break;
    default:
      goto LABEL_90;
  }
  return result;
}

void sub_18880DFE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::ByteSize(AddrObjGoogle::protobuf::internal::WireFormat *this, const AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  int v7;
  uint64_t (*v8)(uint64_t, AddrObjGoogle::protobuf::internal::WireFormat *);
  uint64_t **v9;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v10;
  int v11;
  uint64_t **v12;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v13;
  int v14;
  void *__p;
  _BYTE *v17;
  uint64_t v18;

  v3 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::WireFormat *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 152))(this, a2);
  v4 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::WireFormat *))(*(_QWORD *)this + 144))(this);
  __p = 0;
  v17 = 0;
  v18 = 0;
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::WireFormat *, void **))(*(_QWORD *)v4 + 96))(v4, this, &__p);
  v5 = __p;
  if (v17 == __p)
  {
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v7 += AddrObjGoogle::protobuf::internal::WireFormat::FieldByteSize(v5[v6++], (uint64_t)this);
      v5 = __p;
    }
    while (v6 < (v17 - (_BYTE *)__p) >> 3);
  }
  v8 = *(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::WireFormat *))(*(_QWORD *)v4 + 16);
  if (*(_BYTE *)(*(_QWORD *)(v3 + 32) + 64))
  {
    v9 = (uint64_t **)v8(v4, this);
    v11 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(v9, v10);
  }
  else
  {
    v12 = (uint64_t **)v8(v4, this);
    v11 = AddrObjGoogle::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, v13);
  }
  v14 = v11;
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return (v14 + v7);
}

void sub_18880E104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::FieldByteSize(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  int v7;
  uint64_t v8;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v9;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  int v13;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  int v17;

  v4 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 144))(a2);
  if (*(_BYTE *)(a1 + 52)
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 32) + 64)
    && AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a1 + 44)] == 10
    && *(_DWORD *)(a1 + 48) != 3)
  {
    return AddrObjGoogle::protobuf::internal::WireFormat::MessageSetItemByteSize(a1, a2);
  }
  v5 = *v4;
  if (*(_DWORD *)(a1 + 48) == 3)
    v6 = *(uint64_t (**)(void))(v5 + 48);
  else
    v6 = *(uint64_t (**)(void))(v5 + 40);
  v7 = v6();
  v8 = AddrObjGoogle::protobuf::internal::WireFormat::FieldDataOnlyByteSize(a1, a2);
  v9 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)v8;
  if (*(_BYTE *)(*(_QWORD *)(a1 + 96) + 44))
  {
    if ((int)v8 >= 1)
    {
      v10 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(8 * *(_DWORD *)(a1 + 40));
      if (v10 >= 0x80)
        v11 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v11 = 1;
      v16 = v11 + (_DWORD)v9;
      if (v9 >= 0x80)
        v17 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      else
        v17 = 1;
      return (v16 + v17);
    }
  }
  else
  {
    v12 = *(_DWORD *)(a1 + 40);
    v13 = *(_DWORD *)(a1 + 44);
    v14 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(8 * v12);
    if (v14 >= 0x80)
      v15 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v15 = 1;
    return ((_DWORD)v9 + (v15 << (v13 == 10)) * v7);
  }
  return (uint64_t)v9;
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormat::MessageSetItemByteSize(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 144))(a2);
  v5 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v5 >= 0x80)
    v6 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v6 = 1;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v4 + 176))(v4, a2, a1, 0);
  v8 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 72))(v7);
  v9 = (int)v8;
  if (v8 >= 0x80)
    v10 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
  else
    v10 = 1;
  return (v6 + 4 + v9 + v10);
}

void AddrObjGoogle::protobuf::internal::UnknownFieldSetFieldSkipper::~UnknownFieldSetFieldSkipper(AddrObjGoogle::protobuf::internal::UnknownFieldSetFieldSkipper *this)
{
  JUMPOUT(0x18D76437CLL);
}

void sub_18880E344(uint64_t a1, unsigned int a2, __int128 *a3)
{
  uint64_t v6;
  __int128 v7;
  char v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  char v14;
  void *__p[2];
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v6 = qword_1EDF507C8;
  __dmb(0xBu);
  if (v6 != 2)
  {
    *(_QWORD *)&v17 = &off_1E1BF6040;
    *((_QWORD *)&v17 + 1) = sub_188811A54;
    LOBYTE(v18) = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF507C8, (uint64_t)&v17);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)&v17);
  }
  *(_QWORD *)&v17 = a1;
  *((_QWORD *)&v17 + 1) = a2;
  v7 = a3[1];
  v18 = *a3;
  v19 = v7;
  std::__hash_table<std::__hash_value_type<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,AddrObjGoogle::protobuf::internal::ExtensionInfo>,std::__unordered_map_hasher<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,std::__hash_value_type<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,AddrObjGoogle::protobuf::internal::ExtensionInfo>,AddrObjGoogle::protobuf::hash<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>>,std::equal_to<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>>,true>,std::__unordered_map_equal<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,std::__hash_value_type<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,AddrObjGoogle::protobuf::internal::ExtensionInfo>,std::equal_to<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>>,AddrObjGoogle::protobuf::hash<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>>,true>,std::allocator<std::__hash_value_type<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,AddrObjGoogle::protobuf::internal::ExtensionInfo>>>::__emplace_unique_key_args<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int>,std::pair<std::pair<AddrObjGoogle::protobuf::MessageLite const*,int> const,AddrObjGoogle::protobuf::internal::ExtensionInfo>>(qword_1EDF507C0, (uint64_t)&v17, &v17);
  if ((v8 & 1) == 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 86);
    v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<((std::string *)&v17, "Multiple extension registrations for type \"");
    (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 16))(__p, a1);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, (const std::string::value_type *)__p);
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "\", field number ");
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, a2);
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, ".");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    if (v16 < 0)
      operator delete(__p[0]);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v17);
  }
}

void sub_18880E478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0)
    operator delete(__p);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::ExtensionSize(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2)
{
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  int v6;
  BOOL v7;
  char **v8;

  v4 = (char *)*((_QWORD *)this + 1);
  v2 = (char *)this + 8;
  v3 = v4;
  if (!v4)
    return 0;
  v5 = v2;
  do
  {
    v6 = *((_DWORD *)v3 + 8);
    v7 = v6 < a2;
    if (v6 >= a2)
      v8 = (char **)v3;
    else
      v8 = (char **)(v3 + 8);
    if (!v7)
      v5 = v3;
    v3 = *v8;
  }
  while (*v8);
  if (v5 != v2 && *((_DWORD *)v5 + 8) <= a2)
    return AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::GetSize((AddrObjGoogle::protobuf::internal::ExtensionSet::Extension *)(v5 + 40));
  else
    return 0;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::GetSize(AddrObjGoogle::protobuf::internal::ExtensionSet::Extension *this)
{
  uint64_t result;
  std::string *v2;
  char v3;
  std::string v4[2];

  switch(*((_BYTE *)this + 8))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      result = *(unsigned int *)(*(_QWORD *)this + 8);
      break;
    default:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 1415);
      v2 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v4, "Can't get here.");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v3, (AddrObjGoogle::protobuf::internal::LogMessage *)v2);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
      result = 0;
      break;
  }
  return result;
}

void sub_18880E5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t **AddrObjGoogle::protobuf::internal::ExtensionSet::ClearExtension(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t **result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  uint64_t *v8;

  v4 = *((_QWORD *)this + 1);
  result = (uint64_t **)((char *)this + 8);
  v3 = v4;
  if (v4)
  {
    v5 = (uint64_t)result;
    do
    {
      v6 = *(_DWORD *)(v3 + 32);
      v7 = v6 < a2;
      if (v6 >= a2)
        v8 = (uint64_t *)v3;
      else
        v8 = (uint64_t *)(v3 + 8);
      if (!v7)
        v5 = v3;
      v3 = *v8;
    }
    while (*v8);
    if ((uint64_t **)v5 != result && *(_DWORD *)(v5 + 32) <= a2)
      return AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::Clear((uint64_t **)(v5 + 40));
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt32(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;

  v5 = (char *)*((_QWORD *)this + 1);
  v3 = (char *)this + 8;
  v4 = v5;
  if (v5)
  {
    v6 = v3;
    do
    {
      v7 = *((_DWORD *)v4 + 8);
      v8 = v7 < a2;
      if (v7 >= a2)
        v9 = (char **)v4;
      else
        v9 = (char **)(v4 + 8);
      if (!v8)
        v6 = v4;
      v4 = *v9;
    }
    while (*v9);
    if (v6 != v3 && *((_DWORD *)v6 + 8) <= a2 && (v6[50] & 1) == 0)
      return *((unsigned int *)v6 + 10);
  }
  return a3;
}

uint64_t **AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt32(uint64_t **a1, int a2, char a3, int a4, uint64_t *a5)
{
  uint64_t **result;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  v10 = a2;
  result = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v10, (uint64_t)&v10);
  result[7] = a5;
  if (v9)
  {
    *((_BYTE *)result + 48) = a3;
    *((_BYTE *)result + 49) = 0;
  }
  *((_BYTE *)result + 50) &= 0xF0u;
  *((_DWORD *)result + 10) = a4;
  return result;
}

BOOL AddrObjGoogle::protobuf::internal::ExtensionSet::MaybeNewExtension(uint64_t **a1, int a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t **v6;
  char v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = 0;
  v11 = 0;
  v12 = 0;
  v9 = a2;
  v6 = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v9, (uint64_t)&v9);
  *a4 = v6 + 5;
  v6[7] = a3;
  return v7 != 0;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedInt32(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 298);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(unsigned int *)(**((_QWORD **)v6 + 5) + 4 * a3);
}

void sub_18880E7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedInt32(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 298);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(_DWORD *)(**((_QWORD **)v8 + 5) + 4 * a3) = a4;
}

void sub_18880E8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt32(uint64_t **a1, int a2, char a3, char a4, int a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v11;
  char v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  result = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v11 = result;
  *(_QWORD *)(result + 56) = a6;
  if (v12)
  {
    *(_BYTE *)(result + 48) = a3;
    *(_BYTE *)(result + 49) = 1;
    *(_BYTE *)(result + 51) = a4;
    result = operator new();
    v13 = (_DWORD *)result;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(v11 + 40) = result;
  }
  else
  {
    v13 = *(_DWORD **)(result + 40);
  }
  v14 = v13[2];
  if (v14 == v13[3])
  {
    result = (uint64_t)AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v13, v14 + 1);
    v14 = v13[2];
  }
  v15 = *(_QWORD *)v13;
  v13[2] = v14 + 1;
  *(_DWORD *)(v15 + 4 * v14) = a5;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt64(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;

  v5 = (char *)*((_QWORD *)this + 1);
  v3 = (char *)this + 8;
  v4 = v5;
  if (v5)
  {
    v6 = v3;
    do
    {
      v7 = *((_DWORD *)v4 + 8);
      v8 = v7 < a2;
      if (v7 >= a2)
        v9 = (char **)v4;
      else
        v9 = (char **)(v4 + 8);
      if (!v8)
        v6 = v4;
      v4 = *v9;
    }
    while (*v9);
    if (v6 != v3 && *((_DWORD *)v6 + 8) <= a2 && (v6[50] & 1) == 0)
      return *((_QWORD *)v6 + 5);
  }
  return a3;
}

uint64_t **AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt64(uint64_t **a1, int a2, char a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t **result;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  v10 = a2;
  result = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v10, (uint64_t)&v10);
  result[7] = a5;
  if (v9)
  {
    *((_BYTE *)result + 48) = a3;
    *((_BYTE *)result + 49) = 0;
  }
  *((_BYTE *)result + 50) &= 0xF0u;
  result[5] = a4;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedInt64(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 299);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(_QWORD *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_18880EB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedInt64(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, uint64_t a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 299);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(_QWORD *)(**((_QWORD **)v8 + 5) + 8 * a3) = a4;
}

void sub_18880EBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt64(uint64_t **a1, int a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v11;
  char v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  result = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v11 = result;
  *(_QWORD *)(result + 56) = a6;
  if (v12)
  {
    *(_BYTE *)(result + 48) = a3;
    *(_BYTE *)(result + 49) = 1;
    *(_BYTE *)(result + 51) = a4;
    result = operator new();
    v13 = (_DWORD *)result;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(v11 + 40) = result;
  }
  else
  {
    v13 = *(_DWORD **)(result + 40);
  }
  v14 = v13[2];
  if (v14 == v13[3])
  {
    result = (uint64_t)AddrObjGoogle::protobuf::RepeatedField<long long>::Reserve(v13, v14 + 1);
    v14 = v13[2];
  }
  v15 = *(_QWORD *)v13;
  v13[2] = v14 + 1;
  *(_QWORD *)(v15 + 8 * v14) = a5;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedUInt32(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 300);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(unsigned int *)(**((_QWORD **)v6 + 5) + 4 * a3);
}

void sub_18880EDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedUInt32(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 300);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(_DWORD *)(**((_QWORD **)v8 + 5) + 4 * a3) = a4;
}

void sub_18880EE80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedUInt64(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 301);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(_QWORD *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_18880EF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedUInt64(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, uint64_t a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 301);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(_QWORD *)(**((_QWORD **)v8 + 5) + 8 * a3) = a4;
}

void sub_18880F034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

float AddrObjGoogle::protobuf::internal::ExtensionSet::GetFloat(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, float a3)
{
  char *v3;
  char *v4;
  char *v5;
  float *v6;
  int v7;
  BOOL v8;
  char **v9;
  float result;

  v5 = (char *)*((_QWORD *)this + 1);
  v3 = (char *)this + 8;
  v4 = v5;
  if (v5)
  {
    v6 = (float *)v3;
    do
    {
      v7 = *((_DWORD *)v4 + 8);
      v8 = v7 < a2;
      if (v7 >= a2)
        v9 = (char **)v4;
      else
        v9 = (char **)(v4 + 8);
      if (!v8)
        v6 = (float *)v4;
      v4 = *v9;
    }
    while (*v9);
    if (v6 != (float *)v3 && *((_DWORD *)v6 + 8) <= a2 && (*((_BYTE *)v6 + 50) & 1) == 0)
      return v6[10];
  }
  return result;
}

uint64_t **AddrObjGoogle::protobuf::internal::ExtensionSet::SetFloat(uint64_t **a1, int a2, char a3, uint64_t *a4, float a5)
{
  uint64_t **result;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  v10 = a2;
  result = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v10, (uint64_t)&v10);
  result[7] = a4;
  if (v9)
  {
    *((_BYTE *)result + 48) = a3;
    *((_BYTE *)result + 49) = 0;
  }
  *((_BYTE *)result + 50) &= 0xF0u;
  *((float *)result + 10) = a5;
  return result;
}

float AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedFloat(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 302);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(float *)(**((_QWORD **)v6 + 5) + 4 * a3);
}

void sub_18880F1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedFloat(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, float a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 302);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(float *)(**((_QWORD **)v8 + 5) + 4 * a3) = a4;
}

void sub_18880F2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::AddFloat(uint64_t **a1, int a2, char a3, char a4, uint64_t a5, float a6)
{
  uint64_t result;
  uint64_t v11;
  char v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  result = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v11 = result;
  *(_QWORD *)(result + 56) = a5;
  if (v12)
  {
    *(_BYTE *)(result + 48) = a3;
    *(_BYTE *)(result + 49) = 1;
    *(_BYTE *)(result + 51) = a4;
    result = operator new();
    v13 = (_DWORD *)result;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(v11 + 40) = result;
  }
  else
  {
    v13 = *(_DWORD **)(result + 40);
  }
  v14 = v13[2];
  if (v14 == v13[3])
  {
    result = (uint64_t)AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v13, v14 + 1);
    v14 = v13[2];
  }
  v15 = *(_QWORD *)v13;
  v13[2] = v14 + 1;
  *(float *)(v15 + 4 * v14) = a6;
  return result;
}

double AddrObjGoogle::protobuf::internal::ExtensionSet::GetDouble(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, double a3)
{
  char *v3;
  char *v4;
  char *v5;
  double *v6;
  int v7;
  BOOL v8;
  char **v9;
  double result;

  v5 = (char *)*((_QWORD *)this + 1);
  v3 = (char *)this + 8;
  v4 = v5;
  if (v5)
  {
    v6 = (double *)v3;
    do
    {
      v7 = *((_DWORD *)v4 + 8);
      v8 = v7 < a2;
      if (v7 >= a2)
        v9 = (char **)v4;
      else
        v9 = (char **)(v4 + 8);
      if (!v8)
        v6 = (double *)v4;
      v4 = *v9;
    }
    while (*v9);
    if (v6 != (double *)v3 && *((_DWORD *)v6 + 8) <= a2 && (*((_BYTE *)v6 + 50) & 1) == 0)
      return v6[5];
  }
  return result;
}

uint64_t **AddrObjGoogle::protobuf::internal::ExtensionSet::SetDouble(uint64_t **a1, int a2, char a3, uint64_t *a4, double a5)
{
  uint64_t **result;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  v10 = a2;
  result = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v10, (uint64_t)&v10);
  result[7] = a4;
  if (v9)
  {
    *((_BYTE *)result + 48) = a3;
    *((_BYTE *)result + 49) = 0;
  }
  *((_BYTE *)result + 50) &= 0xF0u;
  *((double *)result + 5) = a5;
  return result;
}

double AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedDouble(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 303);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(double *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_18880F504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedDouble(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, double a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 303);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(double *)(**((_QWORD **)v8 + 5) + 8 * a3) = a4;
}

void sub_18880F5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::AddDouble(uint64_t **a1, int a2, char a3, char a4, uint64_t a5, double a6)
{
  uint64_t result;
  uint64_t v11;
  char v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  result = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v11 = result;
  *(_QWORD *)(result + 56) = a5;
  if (v12)
  {
    *(_BYTE *)(result + 48) = a3;
    *(_BYTE *)(result + 49) = 1;
    *(_BYTE *)(result + 51) = a4;
    result = operator new();
    v13 = (_DWORD *)result;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(v11 + 40) = result;
  }
  else
  {
    v13 = *(_DWORD **)(result + 40);
  }
  v14 = v13[2];
  if (v14 == v13[3])
  {
    result = (uint64_t)AddrObjGoogle::protobuf::RepeatedField<long long>::Reserve(v13, v14 + 1);
    v14 = v13[2];
  }
  v15 = *(_QWORD *)v13;
  v13[2] = v14 + 1;
  *(double *)(v15 + 8 * v14) = a6;
  return result;
}

BOOL AddrObjGoogle::protobuf::internal::ExtensionSet::GetBool(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;

  v5 = (char *)*((_QWORD *)this + 1);
  v3 = (char *)this + 8;
  v4 = v5;
  if (v5)
  {
    v6 = v3;
    do
    {
      v7 = *((_DWORD *)v4 + 8);
      v8 = v7 < a2;
      if (v7 >= a2)
        v9 = (char **)v4;
      else
        v9 = (char **)(v4 + 8);
      if (!v8)
        v6 = v4;
      v4 = *v9;
    }
    while (*v9);
    if (v6 != v3 && *((_DWORD *)v6 + 8) <= a2 && (v6[50] & 1) == 0)
      return v6[40] != 0;
  }
  return a3;
}

uint64_t **AddrObjGoogle::protobuf::internal::ExtensionSet::SetBool(uint64_t **a1, int a2, char a3, char a4, uint64_t *a5)
{
  uint64_t **result;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  v10 = a2;
  result = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v10, (uint64_t)&v10);
  result[7] = a5;
  if (v9)
  {
    *((_BYTE *)result + 48) = a3;
    *((_BYTE *)result + 49) = 0;
  }
  *((_BYTE *)result + 50) &= 0xF0u;
  *((_BYTE *)result + 40) = a4;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedBool(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 304);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(unsigned __int8 *)(**((_QWORD **)v6 + 5) + a3);
}

void sub_18880F850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedBool(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, char a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 304);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(_BYTE *)(**((_QWORD **)v8 + 5) + a3) = a4;
}

void sub_18880F930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::AddBool(uint64_t **a1, int a2, char a3, char a4, char a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v11;
  char v12;
  _DWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  result = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v11 = result;
  *(_QWORD *)(result + 56) = a6;
  if (v12)
  {
    *(_BYTE *)(result + 48) = a3;
    *(_BYTE *)(result + 49) = 1;
    *(_BYTE *)(result + 51) = a4;
    result = operator new();
    v13 = (_DWORD *)result;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(v11 + 40) = result;
  }
  else
  {
    v13 = *(_DWORD **)(result + 40);
  }
  v14 = v13[2];
  if (v14 == v13[3])
  {
    result = (uint64_t)AddrObjGoogle::protobuf::RepeatedField<BOOL>::Reserve(v13, v14 + 1);
    v14 = v13[2];
  }
  v15 = *(_QWORD *)v13;
  v13[2] = v14 + 1;
  *(_BYTE *)(v15 + v14) = a5;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::MutableRawRepeatedField(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2)
{
  char *v3;
  char *v4;
  char *v5;
  int v6;
  BOOL v7;
  char **v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v4 = (char *)this + 8;
  v3 = (char *)*((_QWORD *)this + 1);
  if (!v3)
    goto LABEL_11;
  v5 = (char *)this + 8;
  do
  {
    v6 = *((_DWORD *)v3 + 8);
    v7 = v6 < a2;
    if (v6 >= a2)
      v8 = (char **)v3;
    else
      v8 = (char **)(v3 + 8);
    if (!v7)
      v5 = v3;
    v3 = *v8;
  }
  while (*v8);
  if (v5 == v4 || *((_DWORD *)v5 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 312);
    v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "no extension numbered ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, a2);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v5 = v4;
  }
  return *((_QWORD *)v5 + 5);
}

void sub_18880FAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedEnum(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 346);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(unsigned int *)(**((_QWORD **)v6 + 5) + 4 * a3);
}

void sub_18880FBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedEnum(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 353);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  *(_DWORD *)(**((_QWORD **)v8 + 5) + 4 * a3) = a4;
}

void sub_18880FC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *AddrObjGoogle::protobuf::internal::ExtensionSet::MutableString(uint64_t **a1, int a2, char a3, uint64_t *a4)
{
  uint64_t **v6;
  uint64_t **v7;
  char v8;
  uint64_t *result;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  v10 = a2;
  v6 = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v10, (uint64_t)&v10);
  v7 = v6;
  v6[7] = a4;
  if (v8)
  {
    *((_BYTE *)v6 + 48) = a3;
    *((_BYTE *)v6 + 49) = 0;
    result = (uint64_t *)operator new();
    result[1] = 0;
    result[2] = 0;
    *result = 0;
    v7[5] = result;
  }
  else
  {
    result = v6[5];
  }
  *((_BYTE *)v7 + 50) &= 0xF0u;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedString(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 407);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(_QWORD *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_18880FDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::MutableRepeatedString(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 414);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(_QWORD *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_18880FEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *AddrObjGoogle::protobuf::internal::ExtensionSet::AddString(uint64_t **a1, int a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  v6 = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v7 = v6;
  *(_QWORD *)(v6 + 56) = a4;
  if (v8)
  {
    *(_BYTE *)(v6 + 48) = a3;
    *(_BYTE *)(v6 + 49) = 1;
    *(_BYTE *)(v6 + 51) = 0;
    v6 = operator new();
    v9 = (int *)v6;
    *(_QWORD *)v6 = 0;
    *(_QWORD *)(v6 + 8) = 0;
    *(_DWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v7 + 40) = v6;
  }
  else
  {
    v9 = *(int **)(v6 + 40);
  }
  v10 = v9[3];
  v11 = v9[2];
  if ((int)v11 >= v10)
  {
    if (v10 == v9[4])
    {
      v6 = (uint64_t)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v10 + 1);
      v10 = v9[3];
    }
    v9[3] = v10 + 1;
    result = AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New((AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)v6);
    v14 = *(_QWORD *)v9;
    v15 = v9[2];
    v9[2] = v15 + 1;
    *(_QWORD *)(v14 + 8 * v15) = result;
  }
  else
  {
    v12 = *(_QWORD *)v9;
    v9[2] = v11 + 1;
    return *(_QWORD **)(v12 + 8 * v11);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedMessage(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 539);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(_QWORD *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_188810094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::MutableRepeatedMessage(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  char *v4;
  char *v5;
  char *v6;
  int v7;
  BOOL v8;
  char **v9;
  std::string *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (!v4)
    goto LABEL_11;
  v6 = (char *)this + 8;
  do
  {
    v7 = *((_DWORD *)v4 + 8);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (char **)v4;
    else
      v9 = (char **)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v5 || *((_DWORD *)v6 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 546);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: iter != extensions_.end(): ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v6 = v5;
  }
  return *(_QWORD *)(**((_QWORD **)v6 + 5) + 8 * a3);
}

void sub_188810168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::AddMessage(uint64_t **a1, int a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = 0;
  v18 = 0;
  v19 = 0;
  v16 = a2;
  v8 = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(a1, &v16, (uint64_t)&v16);
  v9 = v8;
  v8[7] = a5;
  if (v10)
  {
    *((_BYTE *)v8 + 48) = a3;
    *((_BYTE *)v8 + 49) = 1;
    v11 = operator new();
    *(_QWORD *)v11 = 0;
    *(_QWORD *)(v11 + 8) = 0;
    *(_DWORD *)(v11 + 16) = 0;
    v9[5] = (uint64_t *)v11;
  }
  else
  {
    v11 = (uint64_t)v8[5];
  }
  v12 = *(int *)(v11 + 8);
  if ((int)v12 >= *(_DWORD *)(v11 + 12)
    || (v13 = *(_QWORD *)v11, *(_DWORD *)(v11 + 8) = v12 + 1, (v14 = *(_QWORD *)(v13 + 8 * v12)) == 0))
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 24))(a4);
    AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<AddrObjGoogle::protobuf::RepeatedPtrField<AddrObjGoogle::protobuf::MessageLite>::TypeHandler>((int *)v9[5], v14);
  }
  return v14;
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::RemoveLast(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2)
{
  char *v2;
  char *v3;
  char *v4;
  int v5;
  BOOL v6;
  char **v7;
  std::string *v8;
  std::string *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  std::string v18[2];

  v3 = (char *)this + 8;
  v2 = (char *)*((_QWORD *)this + 1);
  if (!v2)
    goto LABEL_11;
  v4 = (char *)this + 8;
  do
  {
    v5 = *((_DWORD *)v2 + 8);
    v6 = v5 < a2;
    if (v5 >= a2)
      v7 = (char **)v2;
    else
      v7 = (char **)(v2 + 8);
    if (!v6)
      v4 = v2;
    v2 = *v7;
  }
  while (*v7);
  if (v4 == v3 || *((_DWORD *)v4 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 585);
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: iter != extensions_.end(): ");
    v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (AddrObjGoogle::protobuf::internal::LogMessage *)v9);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    v4 = v3;
  }
  switch(v4[48])
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      --*(_DWORD *)(*((_QWORD *)v4 + 5) + 8);
      break;
    case 9:
    case 12:
      v10 = (uint64_t *)*((_QWORD *)v4 + 5);
      v11 = *v10;
      v12 = *((int *)v10 + 2) - 1;
      *((_DWORD *)v10 + 2) = v12;
      v13 = *(_QWORD *)(v11 + 8 * v12);
      if (*(char *)(v13 + 23) < 0)
      {
        **(_BYTE **)v13 = 0;
        *(_QWORD *)(v13 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v13 = 0;
        *(_BYTE *)(v13 + 23) = 0;
      }
      break;
    case 10:
    case 11:
      v14 = (uint64_t *)*((_QWORD *)v4 + 5);
      v15 = *v14;
      v16 = *((int *)v14 + 2) - 1;
      *((_DWORD *)v14 + 2) = v16;
      (*(void (**)(_QWORD))(**(_QWORD **)(v15 + 8 * v16) + 32))(*(_QWORD *)(v15 + 8 * v16));
      break;
    default:
      return;
  }
}

void sub_1888103B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::ReleaseLast(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2)
{
  char *v2;
  char *v3;
  char *v4;
  int v5;
  BOOL v6;
  char **v7;
  std::string *v8;
  std::string *v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  std::string v16[2];

  v3 = (char *)this + 8;
  v2 = (char *)*((_QWORD *)this + 1);
  if (!v2)
    goto LABEL_11;
  v4 = (char *)this + 8;
  do
  {
    v5 = *((_DWORD *)v2 + 8);
    v6 = v5 < a2;
    if (v5 >= a2)
      v7 = (char **)v2;
    else
      v7 = (char **)(v2 + 8);
    if (!v6)
      v4 = v2;
    v2 = *v7;
  }
  while (*v7);
  if (v4 == v3 || *((_DWORD *)v4 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 626);
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: iter != extensions_.end(): ");
    v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (AddrObjGoogle::protobuf::internal::LogMessage *)v9);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    v4 = v3;
  }
  v10 = (uint64_t *)*((_QWORD *)v4 + 5);
  v11 = *v10;
  v12 = *((_DWORD *)v10 + 3);
  v13 = *((int *)v10 + 2);
  *((_DWORD *)v10 + 2) = v13 - 1;
  result = *(_QWORD *)(v11 + 8 * (v13 - 1));
  *((_DWORD *)v10 + 3) = v12 - 1;
  if ((int)v13 < v12)
    *(_QWORD *)(v11 + 8 * (v13 - 1)) = *(_QWORD *)(v11 + 8 * (v12 - 1));
  return result;
}

void sub_1888104A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SwapElements(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4)
{
  char *v6;
  char *v7;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  char v24;
  std::string v25[2];

  v7 = (char *)this + 8;
  v6 = (char *)*((_QWORD *)this + 1);
  if (!v6)
    goto LABEL_11;
  v8 = (char *)this + 8;
  do
  {
    v9 = *((_DWORD *)v6 + 8);
    v10 = v9 < a2;
    if (v9 >= a2)
      v11 = (char **)v6;
    else
      v11 = (char **)(v6 + 8);
    if (!v10)
      v8 = v6;
    v6 = *v11;
  }
  while (*v11);
  if (v8 == v7 || *((_DWORD *)v8 + 8) > a2)
  {
LABEL_11:
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 636);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: iter != extensions_.end(): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "Index out-of-bounds (field is empty).");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v24, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
    v8 = v7;
  }
  switch(v8[48])
  {
    case 1:
      v18 = **((_QWORD **)v8 + 5);
      v19 = *(_QWORD *)(v18 + 8 * a3);
      *(_QWORD *)(v18 + 8 * a3) = *(_QWORD *)(v18 + 8 * a4);
      *(_QWORD *)(v18 + 8 * a4) = v19;
      break;
    case 2:
      v20 = **((_QWORD **)v8 + 5);
      v21 = *(_DWORD *)(v20 + 4 * a3);
      *(_DWORD *)(v20 + 4 * a3) = *(_DWORD *)(v20 + 4 * a4);
      *(_DWORD *)(v20 + 4 * a4) = v21;
      break;
    case 3:
    case 4:
    case 6:
    case 9:
    case 10:
    case 11:
    case 12:
    case 16:
    case 18:
      v14 = **((_QWORD **)v8 + 5);
      v15 = *(_QWORD *)(v14 + 8 * a3);
      *(_QWORD *)(v14 + 8 * a3) = *(_QWORD *)(v14 + 8 * a4);
      *(_QWORD *)(v14 + 8 * a4) = v15;
      break;
    case 5:
    case 7:
    case 13:
    case 14:
    case 15:
    case 17:
      v16 = **((_QWORD **)v8 + 5);
      v17 = *(_DWORD *)(v16 + 4 * a3);
      *(_DWORD *)(v16 + 4 * a3) = *(_DWORD *)(v16 + 4 * a4);
      *(_DWORD *)(v16 + 4 * a4) = v17;
      break;
    case 8:
      v22 = **((_QWORD **)v8 + 5);
      v23 = *(_BYTE *)(v22 + a3);
      *(_BYTE *)(v22 + a3) = *(_BYTE *)(v22 + a4);
      *(_BYTE *)(v22 + a4) = v23;
      break;
    default:
      return;
  }
}

void sub_188810638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::MergeFrom(uint64_t this, const AddrObjGoogle::protobuf::internal::ExtensionSet **a2)
{
  const AddrObjGoogle::protobuf::internal::ExtensionSet **v2;
  const AddrObjGoogle::protobuf::internal::ExtensionSet *v3;
  uint64_t **v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  int v12;
  _DWORD *v13;
  void *v14;
  const void *v15;
  size_t v16;
  const AddrObjGoogle::protobuf::internal::ExtensionSet *v17;
  const AddrObjGoogle::protobuf::internal::ExtensionSet **v18;
  BOOL v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const std::string *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  std::string *v35;
  uint64_t v36;
  uint64_t v37;
  const std::string *v38;
  std::string *v39;
  int v40;
  uint64_t *v41;
  uint64_t **v42;
  uint64_t **v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = a2 + 1;
  v3 = *a2;
  if (*a2 != (const AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + 1))
  {
    v4 = (uint64_t **)this;
    while (1)
    {
      if (*((_BYTE *)v3 + 49))
      {
        v5 = *((_DWORD *)v3 + 8);
        v6 = *((_QWORD *)v3 + 7);
        v53 = 0;
        v54 = 0;
        v55 = 0;
        v52 = v5;
        this = (uint64_t)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(v4, &v52, (uint64_t)&v52);
        v8 = this;
        *(_QWORD *)(this + 56) = v6;
        if (v7)
        {
          *(_BYTE *)(this + 48) = *((_BYTE *)v3 + 48);
          *(_BYTE *)(this + 51) = *((_BYTE *)v3 + 51);
          *(_BYTE *)(this + 49) = 1;
        }
        switch(*((_BYTE *)v3 + 48))
        {
          case 1:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v12 = *(_DWORD *)(v9 + 8);
            if (v12)
              goto LABEL_29;
            break;
          case 2:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v10 = *(_DWORD *)(v9 + 8);
            if (v10)
              goto LABEL_33;
            break;
          case 3:
          case 0x10:
          case 0x12:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v12 = *(_DWORD *)(v9 + 8);
            if (v12)
              goto LABEL_29;
            break;
          case 4:
          case 6:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v12 = *(_DWORD *)(v9 + 8);
            if (v12)
            {
LABEL_29:
              v13 = *(_DWORD **)(v8 + 40);
              AddrObjGoogle::protobuf::RepeatedField<long long>::Reserve(v13, v13[2] + v12);
              v14 = (void *)(*(_QWORD *)v13 + 8 * (int)v13[2]);
              v15 = *(const void **)v9;
              v16 = 8 * *(int *)(v9 + 8);
              goto LABEL_34;
            }
            break;
          case 5:
          case 0xE:
          case 0xF:
          case 0x11:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v10 = *(_DWORD *)(v9 + 8);
            if (v10)
              goto LABEL_33;
            break;
          case 7:
          case 0xD:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v10 = *(_DWORD *)(v9 + 8);
            if (v10)
            {
LABEL_33:
              v13 = *(_DWORD **)(v8 + 40);
              AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v13, v13[2] + v10);
              v14 = (void *)(*(_QWORD *)v13 + 4 * (int)v13[2]);
              v15 = *(const void **)v9;
              v16 = 4 * *(int *)(v9 + 8);
              goto LABEL_34;
            }
            break;
          case 8:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v9 = *((_QWORD *)v3 + 5);
            v20 = *(_DWORD *)(v9 + 8);
            if (v20)
            {
              v13 = *(_DWORD **)(v8 + 40);
              AddrObjGoogle::protobuf::RepeatedField<BOOL>::Reserve(v13, v13[2] + v20);
              v14 = (void *)(*(_QWORD *)v13 + (int)v13[2]);
              v15 = *(const void **)v9;
              v16 = *(int *)(v9 + 8);
LABEL_34:
              this = (uint64_t)memcpy(v14, v15, v16);
              v13[2] += *(_DWORD *)(v9 + 8);
            }
            break;
          case 9:
          case 0xC:
            if (v7)
            {
              v21 = operator new();
              *(_QWORD *)v21 = 0;
              *(_QWORD *)(v21 + 8) = 0;
              *(_DWORD *)(v21 + 16) = 0;
              *(_QWORD *)(v8 + 40) = v21;
            }
            else
            {
              v21 = *(_QWORD *)(this + 40);
            }
            v29 = *((_QWORD *)v3 + 5);
            this = (uint64_t)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)v21, *(_DWORD *)(v29 + 8) + *(_DWORD *)(v21 + 8));
            if (*(int *)(v29 + 8) >= 1)
            {
              v30 = 0;
              do
              {
                v31 = *(const std::string **)(*(_QWORD *)v29 + 8 * v30);
                v32 = *(_DWORD *)(v21 + 12);
                v33 = *(int *)(v21 + 8);
                if ((int)v33 >= v32)
                {
                  if (v32 == *(_DWORD *)(v21 + 16))
                  {
                    this = (uint64_t)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)v21, v32 + 1);
                    v32 = *(_DWORD *)(v21 + 12);
                  }
                  *(_DWORD *)(v21 + 12) = v32 + 1;
                  v35 = (std::string *)AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New((AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)this);
                  v36 = *(_QWORD *)v21;
                  v37 = *(int *)(v21 + 8);
                  *(_DWORD *)(v21 + 8) = v37 + 1;
                  *(_QWORD *)(v36 + 8 * v37) = v35;
                }
                else
                {
                  v34 = *(_QWORD *)v21;
                  *(_DWORD *)(v21 + 8) = v33 + 1;
                  v35 = *(std::string **)(v34 + 8 * v33);
                }
                this = (uint64_t)std::string::operator=(v35, v31);
                ++v30;
              }
              while (v30 < *(int *)(v29 + 8));
            }
            break;
          case 0xA:
          case 0xB:
            if (v7)
            {
              this = operator new();
              *(_QWORD *)this = 0;
              *(_QWORD *)(this + 8) = 0;
              *(_DWORD *)(this + 16) = 0;
              *(_QWORD *)(v8 + 40) = this;
            }
            v22 = *((_QWORD *)v3 + 5);
            if (*(int *)(v22 + 8) >= 1)
            {
              v23 = 0;
              do
              {
                v24 = *(_QWORD *)(*(_QWORD *)v22 + 8 * v23);
                v25 = *(uint64_t **)(v8 + 40);
                v26 = *((int *)v25 + 2);
                if ((int)v26 >= *((_DWORD *)v25 + 3)
                  || (v27 = *v25, *((_DWORD *)v25 + 2) = v26 + 1, (v28 = *(_QWORD *)(v27 + 8 * v26)) == 0))
                {
                  v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 24))(v24);
                  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<AddrObjGoogle::protobuf::RepeatedPtrField<AddrObjGoogle::protobuf::MessageLite>::TypeHandler>(*(int **)(v8 + 40), v28);
                }
                this = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v28 + 56))(v28, v24);
                ++v23;
              }
              while (v23 < *(int *)(v22 + 8));
            }
            break;
          default:
            goto LABEL_35;
        }
        goto LABEL_35;
      }
      if ((*((_BYTE *)v3 + 50) & 1) == 0)
        break;
LABEL_35:
      v17 = (const AddrObjGoogle::protobuf::internal::ExtensionSet *)*((_QWORD *)v3 + 1);
      if (v17)
      {
        do
        {
          v18 = (const AddrObjGoogle::protobuf::internal::ExtensionSet **)v17;
          v17 = *(const AddrObjGoogle::protobuf::internal::ExtensionSet **)v17;
        }
        while (v17);
      }
      else
      {
        do
        {
          v18 = (const AddrObjGoogle::protobuf::internal::ExtensionSet **)*((_QWORD *)v3 + 2);
          v19 = *v18 == v3;
          v3 = (const AddrObjGoogle::protobuf::internal::ExtensionSet *)v18;
        }
        while (!v19);
      }
      v3 = (const AddrObjGoogle::protobuf::internal::ExtensionSet *)v18;
      if (v18 == v2)
        return this;
    }
    v11 = *((_BYTE *)v3 + 48);
    switch(v11)
    {
      case 1:
        this = (uint64_t)AddrObjGoogle::protobuf::internal::ExtensionSet::SetDouble(v4, *((_DWORD *)v3 + 8), v11, *((uint64_t **)v3 + 7), *((double *)v3 + 5));
        goto LABEL_35;
      case 2:
        this = (uint64_t)AddrObjGoogle::protobuf::internal::ExtensionSet::SetFloat(v4, *((_DWORD *)v3 + 8), v11, *((uint64_t **)v3 + 7), *((float *)v3 + 10));
        goto LABEL_35;
      case 3:
      case 4:
      case 6:
      case 16:
      case 18:
        this = (uint64_t)AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt64(v4, *((_DWORD *)v3 + 8), v11, *((uint64_t **)v3 + 5), *((uint64_t **)v3 + 7));
        goto LABEL_35;
      case 5:
      case 7:
      case 13:
      case 14:
      case 15:
      case 17:
        this = (uint64_t)AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt32(v4, *((_DWORD *)v3 + 8), v11, *((_DWORD *)v3 + 10), *((uint64_t **)v3 + 7));
        goto LABEL_35;
      case 8:
        this = (uint64_t)AddrObjGoogle::protobuf::internal::ExtensionSet::SetBool(v4, *((_DWORD *)v3 + 8), v11, *((_BYTE *)v3 + 40), *((uint64_t **)v3 + 7));
        goto LABEL_35;
      case 9:
      case 12:
        v38 = (const std::string *)*((_QWORD *)v3 + 5);
        v39 = (std::string *)AddrObjGoogle::protobuf::internal::ExtensionSet::MutableString(v4, *((_DWORD *)v3 + 8), v11, *((uint64_t **)v3 + 7));
        this = (uint64_t)std::string::operator=(v39, v38);
        goto LABEL_35;
      case 10:
      case 11:
        v40 = *((_DWORD *)v3 + 8);
        v41 = (uint64_t *)*((_QWORD *)v3 + 7);
        v53 = 0;
        v54 = 0;
        v55 = 0;
        v52 = v40;
        v42 = std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>(v4, &v52, (uint64_t)&v52);
        v43 = v42;
        v42[7] = v41;
        if (v44)
        {
          *((_BYTE *)v42 + 48) = *((_BYTE *)v3 + 48);
          *((_BYTE *)v42 + 51) = *((_BYTE *)v3 + 51);
          *((_BYTE *)v42 + 49) = 0;
          v45 = *((_BYTE *)v42 + 50) & 0xF;
          if ((*((_BYTE *)v3 + 50) & 0x10) == 0)
          {
            *((_BYTE *)v42 + 50) = v45;
            v46 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v3 + 5) + 24))(*((_QWORD *)v3 + 5));
            v43[5] = (uint64_t *)v46;
LABEL_82:
            this = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v46 + 56))(v46, *((_QWORD *)v3 + 5));
            goto LABEL_84;
          }
          *((_BYTE *)v42 + 50) = v45 | 0x10;
          v50 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v3 + 5) + 16))(*((_QWORD *)v3 + 5));
          v43[5] = (uint64_t *)v50;
          this = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v50 + 80))(v50, *((_QWORD *)v3 + 5));
        }
        else
        {
          v47 = v42[5];
          v48 = *((_QWORD *)v3 + 5);
          if ((*((_BYTE *)v3 + 50) & 0x10) != 0)
          {
            if ((*((_BYTE *)v42 + 50) & 0x10) != 0)
            {
              this = (*(uint64_t (**)(uint64_t *, uint64_t))(*v47 + 80))(v47, v48);
            }
            else
            {
              v51 = (*(uint64_t (**)(_QWORD, uint64_t *))(*(_QWORD *)v48 + 24))(*((_QWORD *)v3 + 5), v42[5]);
              this = (*(uint64_t (**)(uint64_t *, uint64_t))(*v47 + 56))(v47, v51);
            }
            goto LABEL_84;
          }
          v49 = *v47;
          if ((*((_BYTE *)v42 + 50) & 0x10) != 0)
          {
            v46 = (*(uint64_t (**)(uint64_t *, uint64_t))(v49 + 32))(v42[5], v48);
            goto LABEL_82;
          }
          this = (*(uint64_t (**)(uint64_t *, uint64_t))(v49 + 56))(v47, v48);
        }
LABEL_84:
        *((_BYTE *)v43 + 50) &= 0xF0u;
        goto LABEL_35;
      default:
        goto LABEL_35;
    }
  }
  return this;
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::SerializeWithCachedSizes(AddrObjGoogle::protobuf::internal::ExtensionSet *this, int a2, int a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  char *v4;
  char *v5;
  char *v8;
  int v9;
  BOOL v10;
  char **v11;
  AddrObjGoogle::protobuf::internal::WireFormatLite *v12;
  char *v13;
  char *v14;
  BOOL v15;

  v5 = (char *)this + 8;
  v4 = (char *)*((_QWORD *)this + 1);
  if (v4)
  {
    v8 = (char *)this + 8;
    do
    {
      v9 = *((_DWORD *)v4 + 8);
      v10 = v9 < a2;
      if (v9 >= a2)
        v11 = (char **)v4;
      else
        v11 = (char **)(v4 + 8);
      if (!v10)
        v8 = v4;
      v4 = *v11;
    }
    while (*v11);
    if (v8 != v5)
    {
      do
      {
        v12 = (AddrObjGoogle::protobuf::internal::WireFormatLite *)*((unsigned int *)v8 + 8);
        if ((int)v12 >= a3)
          break;
        AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::SerializeFieldWithCachedSizes((AddrObjGoogle::protobuf::internal::ExtensionSet::Extension *)(v8 + 40), v12, a4, a4);
        v13 = (char *)*((_QWORD *)v8 + 1);
        if (v13)
        {
          do
          {
            v14 = v13;
            v13 = *(char **)v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            v14 = (char *)*((_QWORD *)v8 + 2);
            v15 = *(_QWORD *)v14 == (_QWORD)v8;
            v8 = v14;
          }
          while (!v15);
        }
        v8 = v14;
      }
      while (v14 != v5);
    }
  }
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::SerializeFieldWithCachedSizes(AddrObjGoogle::protobuf::internal::ExtensionSet::Extension *this, AddrObjGoogle::protobuf::internal::WireFormatLite *a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  std::string *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  AddrObjGoogle::protobuf::internal::WireFormatLite *v75;
  signed int v76;
  AddrObjGoogle::protobuf::internal::WireFormatLite *v77;
  uint64_t v78;
  AddrObjGoogle::protobuf::internal::WireFormatLite *v79;
  int v80;
  AddrObjGoogle::protobuf::internal::WireFormatLite *v81;
  unsigned int v82;
  AddrObjGoogle::protobuf::internal::WireFormatLite *v83;
  uint64_t v84;
  char v85;
  std::string v86[2];

  if (*((_BYTE *)this + 9))
  {
    if (*((_BYTE *)this + 11))
    {
      if (*((_DWORD *)this + 3))
      {
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (8 * (_DWORD)a2) | 2);
        AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, *((_DWORD *)this + 3));
        switch(*((_BYTE *)this + 8))
        {
          case 1:
            v19 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v20 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, *(_QWORD *)(*v19 + 8 * v20++));
                v19 = *(_QWORD **)this;
              }
              while (v20 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 2:
            v21 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v22 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, *(_DWORD *)(*v21 + 4 * v22++));
                v21 = *(_QWORD **)this;
              }
              while (v22 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 3:
            v23 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v24 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, *(_QWORD *)(*v23 + 8 * v24++));
                v23 = *(_QWORD **)this;
              }
              while (v24 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 4:
            v25 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v26 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, *(_QWORD *)(*v25 + 8 * v26++));
                v25 = *(_QWORD **)this;
              }
              while (v26 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 5:
            v10 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v11 = 0;
              do
              {
                v12 = *(int *)(*v10 + 4 * v11);
                if ((v12 & 0x80000000) != 0)
                  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, v12);
                else
                  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v12);
                ++v11;
                v10 = *(_QWORD **)this;
              }
              while (v11 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 6:
            v27 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v28 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, *(_QWORD *)(*v27 + 8 * v28++));
                v27 = *(_QWORD **)this;
              }
              while (v28 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 7:
            v29 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v30 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, *(_DWORD *)(*v29 + 4 * v30++));
                v29 = *(_QWORD **)this;
              }
              while (v30 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 8:
            v31 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v32 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, *(unsigned __int8 *)(*v31 + v32++));
                v31 = *(_QWORD **)this;
              }
              while (v32 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
            AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v86, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set.cc", 1182);
            v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v86, "Non-primitive types can't be packed.");
            AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v85, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
            AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v86[0].__r_.__value_.__l.__data_);
            break;
          case 0xD:
            v13 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v14 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, *(_DWORD *)(*v13 + 4 * v14++));
                v13 = *(_QWORD **)this;
              }
              while (v14 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 0xE:
            v33 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v34 = 0;
              do
              {
                v35 = *(int *)(*v33 + 4 * v34);
                if ((v35 & 0x80000000) != 0)
                  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, v35);
                else
                  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v35);
                ++v34;
                v33 = *(_QWORD **)this;
              }
              while (v34 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 0xF:
            v15 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v16 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, *(_DWORD *)(*v15 + 4 * v16++));
                v15 = *(_QWORD **)this;
              }
              while (v16 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 0x10:
            v36 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v37 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, *(_QWORD *)(*v36 + 8 * v37++));
                v36 = *(_QWORD **)this;
              }
              while (v37 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 0x11:
            v17 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v18 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (2 * *(_DWORD *)(*v17 + 4 * v18)) ^ (*(int *)(*v17 + 4 * v18) >> 31));
                ++v18;
                v17 = *(_QWORD **)this;
              }
              while (v18 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          case 0x12:
            v38 = *(_QWORD **)this;
            if (*(int *)(*(_QWORD *)this + 8) >= 1)
            {
              v39 = 0;
              do
              {
                AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, (2 * *(_QWORD *)(*v38 + 8 * v39)) ^ (*(uint64_t *)(*v38 + 8 * v39) >> 63));
                ++v39;
                v38 = *(_QWORD **)this;
              }
              while (v39 < *(int *)(*(_QWORD *)this + 8));
            }
            break;
          default:
            return;
        }
      }
    }
    else
    {
      switch(*((_BYTE *)this + 8))
      {
        case 1:
          v8 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v9 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteDouble(a2, a3, *(double *)(*v8 + 8 * v9++), a3);
              v8 = *(_QWORD **)this;
            }
            while (v9 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 2:
          v40 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v41 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFloat(a2, a3, *(float *)(*v40 + 4 * v41++), a3);
              v40 = *(_QWORD **)this;
            }
            while (v41 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 3:
          v42 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v43 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64(a2, *(_QWORD *)(*v42 + 8 * v43++), a3, a4);
              v42 = *(_QWORD **)this;
            }
            while (v43 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 4:
          v44 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v45 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64(a2, *(_QWORD *)(*v44 + 8 * v45++), a3, a4);
              v44 = *(_QWORD **)this;
            }
            while (v45 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 5:
          v46 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v47 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32(a2, *(_DWORD *)(*v46 + 4 * v47++), a3, a4);
              v46 = *(_QWORD **)this;
            }
            while (v47 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 6:
          v48 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v49 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed64(a2, *(_QWORD *)(*v48 + 8 * v49++), a3, a4);
              v48 = *(_QWORD **)this;
            }
            while (v49 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 7:
          v50 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v51 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed32(a2, *(_DWORD *)(*v50 + 4 * v51++), a3, a4);
              v50 = *(_QWORD **)this;
            }
            while (v51 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 8:
          v52 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v53 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32(a2, *(unsigned __int8 *)(*v52 + v53++), a3, a4);
              v52 = *(_QWORD **)this;
            }
            while (v53 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 9:
          v54 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v55 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString((int)a2, *(_QWORD *)(*v54 + 8 * v55++), a3);
              v54 = *(_QWORD **)this;
            }
            while (v55 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0xA:
          v56 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v57 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteGroup((int)a2, *(_QWORD *)(*v56 + 8 * v57++), a3);
              v56 = *(_QWORD **)this;
            }
            while (v57 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0xB:
          v58 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v59 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessage((int)a2, *(_QWORD *)(*v58 + 8 * v59++), a3);
              v58 = *(_QWORD **)this;
            }
            while (v59 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0xC:
          v60 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v61 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteBytes((int)a2, *(_QWORD *)(*v60 + 8 * v61++), a3);
              v60 = *(_QWORD **)this;
            }
            while (v61 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0xD:
          v62 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v63 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32(a2, *(_DWORD *)(*v62 + 4 * v63++), a3, a4);
              v62 = *(_QWORD **)this;
            }
            while (v63 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0xE:
          v64 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v65 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32(a2, *(_DWORD *)(*v64 + 4 * v65++), a3, a4);
              v64 = *(_QWORD **)this;
            }
            while (v65 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0xF:
          v66 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v67 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed32(a2, *(_DWORD *)(*v66 + 4 * v67++), a3, a4);
              v66 = *(_QWORD **)this;
            }
            while (v67 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0x10:
          v68 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v69 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed64(a2, *(_QWORD *)(*v68 + 8 * v69++), a3, a4);
              v68 = *(_QWORD **)this;
            }
            while (v69 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0x11:
          v70 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v71 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt32(a2, *(_DWORD *)(*v70 + 4 * v71++), a3, a4);
              v70 = *(_QWORD **)this;
            }
            while (v71 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        case 0x12:
          v72 = *(_QWORD **)this;
          if (*(int *)(*(_QWORD *)this + 8) >= 1)
          {
            v73 = 0;
            do
            {
              AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt64(a2, *(_QWORD *)(*v72 + 8 * v73++), a3, a4);
              v72 = *(_QWORD **)this;
            }
            while (v73 < *(int *)(*(_QWORD *)this + 8));
          }
          break;
        default:
          return;
      }
    }
  }
  else if ((*((_BYTE *)this + 10) & 1) == 0)
  {
    switch(*((_BYTE *)this + 8))
    {
      case 1:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteDouble(a2, a3, *(double *)this, a3);
        return;
      case 2:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFloat(a2, a3, *(float *)this, a3);
        return;
      case 3:
        v74 = *(_QWORD *)this;
        v75 = a2;
        goto LABEL_146;
      case 4:
        v74 = *(_QWORD *)this;
        v75 = a2;
LABEL_146:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64(v75, v74, a3, a4);
        return;
      case 5:
        v76 = *(_DWORD *)this;
        v77 = a2;
        goto LABEL_149;
      case 6:
        v78 = *(_QWORD *)this;
        v79 = a2;
        goto LABEL_151;
      case 7:
        v80 = *(_DWORD *)this;
        v81 = a2;
        goto LABEL_153;
      case 8:
        v82 = *(unsigned __int8 *)this;
        v83 = a2;
        goto LABEL_155;
      case 9:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString((int)a2, *(_QWORD *)this, a3);
        return;
      case 0xA:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteGroup((int)a2, *(_QWORD *)this, a3);
        return;
      case 0xB:
        v84 = *(_QWORD *)this;
        if ((*((_BYTE *)this + 10) & 0x10) != 0)
          (*(void (**)(_QWORD, AddrObjGoogle::protobuf::internal::WireFormatLite *, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(_QWORD *)v84 + 104))(*(_QWORD *)this, a2, a3);
        else
          AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessage((int)a2, v84, a3);
        return;
      case 0xC:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteBytes((int)a2, *(_QWORD *)this, a3);
        return;
      case 0xD:
        v82 = *(_DWORD *)this;
        v83 = a2;
LABEL_155:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32(v83, v82, a3, a4);
        break;
      case 0xE:
        v76 = *(_DWORD *)this;
        v77 = a2;
LABEL_149:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32(v77, v76, a3, a4);
        break;
      case 0xF:
        v80 = *(_DWORD *)this;
        v81 = a2;
LABEL_153:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed32(v81, v80, a3, a4);
        break;
      case 0x10:
        v78 = *(_QWORD *)this;
        v79 = a2;
LABEL_151:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed64(v79, v78, a3, a4);
        break;
      case 0x11:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt32(a2, *(_DWORD *)this, a3, a4);
        break;
      case 0x12:
        AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt64(a2, *(_QWORD *)this, a3, a4);
        break;
      default:
        return;
    }
  }
}

void sub_1888119C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::StringSize(uint64_t a1)
{
  int v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  int v6;

  v2 = *(unsigned __int8 *)(a1 + 23);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 8);
  if ((v2 & 0x80u) == 0)
    v5 = *(unsigned __int8 *)(a1 + 23);
  else
    v5 = v4;
  if (v5 >= 0x80)
  {
    v6 = AddrObjGoogle::protobuf::io::CodedOutputStream::VarintSize32Fallback((AddrObjGoogle::protobuf::io::CodedOutputStream *)v5);
    v2 = *(unsigned __int8 *)(a1 + 23);
    v4 = *(_QWORD *)(a1 + 8);
    v3 = *(_BYTE *)(a1 + 23);
  }
  else
  {
    v6 = 1;
  }
  if (v3 < 0)
    v2 = v4;
  return (v6 + v2);
}

void AddrObjGoogle::protobuf::internal::GeneratedExtensionFinder::~GeneratedExtensionFinder(AddrObjGoogle::protobuf::internal::GeneratedExtensionFinder *this)
{
  JUMPOUT(0x18D76437CLL);
}

void sub_188811A54()
{
  uint64_t v0;
  void (*v1)(void);

  v0 = operator new();
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_DWORD *)(v0 + 32) = 1065353216;
  qword_1EDF507C0 = v0;
  AddrObjGoogle::protobuf::internal::OnShutdown((AddrObjGoogle::protobuf::internal *)sub_188811A9C, v1);
}

uint64_t sub_188811A9C()
{
  uint64_t result;
  uint64_t v1;

  result = qword_1EDF507C0;
  if (qword_1EDF507C0)
  {
    v1 = std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(qword_1EDF507C0);
    result = MEMORY[0x18D76437C](v1, 0x10A0C408EF24B1CLL);
  }
  qword_1EDF507C0 = 0;
  return result;
}

_DWORD *AddrObjGoogle::protobuf::RepeatedField<BOOL>::Reserve(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;
  int v6;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v6 = 4;
    else
      v6 = v5;
    v3[3] = v6;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, (int)v3[2]);
      JUMPOUT(0x18D764364);
    }
  }
  return result;
}

uint64_t std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>(uint64_t a1, int *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t *v7;

  v2 = *(_QWORD *)(a1 + 8);
  if (!v2)
    return 0;
  v3 = *a2;
  v4 = a1 + 8;
  do
  {
    v5 = *(_DWORD *)(v2 + 32);
    v6 = v5 < v3;
    if (v5 >= v3)
      v7 = (uint64_t *)v2;
    else
      v7 = (uint64_t *)(v2 + 8);
    if (!v6)
      v4 = v2;
    v2 = *v7;
  }
  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32))
    return 0;
  std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__remove_node_pointer((uint64_t **)a1, (uint64_t *)v4);
  operator delete((void *)v4);
  return 1;
}

uint64_t *std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t **v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *a2;
  v3 = a2;
  if (*a2)
  {
    v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      v3 = a2;
      goto LABEL_7;
    }
    do
    {
      v3 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  v2 = v3[1];
  if (v2)
  {
LABEL_7:
    v5 = 0;
    *(_QWORD *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  v5 = 1;
LABEL_8:
  v6 = (uint64_t **)v3[2];
  v7 = *v6;
  if (*v6 == v3)
  {
    *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      v7 = 0;
      result = (uint64_t *)v2;
    }
    else
    {
      v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    v9 = a2[2];
    v3[2] = v9;
    *(_QWORD *)(v9 + 8 * (*(_QWORD *)a2[2] != (_QWORD)a2)) = v3;
    v11 = *a2;
    v10 = a2[1];
    *(_QWORD *)(v11 + 16) = v3;
    *v3 = v11;
    v3[1] = v10;
    if (v10)
      *(_QWORD *)(v10 + 16) = v3;
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2)
      result = v3;
  }
  if (!v8 || !result)
    return result;
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    v12 = v7[2];
    if (*(uint64_t **)v12 == v7)
      break;
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      v13 = *(uint64_t **)(v12 + 8);
      v14 = *v13;
      *(_QWORD *)(v12 + 8) = *v13;
      if (v14)
        *(_QWORD *)(v14 + 16) = v12;
      v13[2] = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v13;
      *v13 = v12;
      *(_QWORD *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7)
        result = v7;
      v7 = *(uint64_t **)(*v7 + 8);
    }
    v15 = (_QWORD *)*v7;
    if (*v7 && !*((_BYTE *)v15 + 24))
    {
      v16 = (uint64_t *)v7[1];
      if (!v16)
        goto LABEL_56;
LABEL_55:
      if (*((_BYTE *)v16 + 24))
      {
LABEL_56:
        *((_BYTE *)v15 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        v22 = v15[1];
        *v7 = v22;
        if (v22)
          *(_QWORD *)(v22 + 16) = v7;
        v15[2] = v7[2];
        *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        v16 = v7;
      }
      else
      {
        v15 = v7;
      }
      v23 = v15[2];
      *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      v24 = *(uint64_t **)(v23 + 8);
      v25 = *v24;
      *(_QWORD *)(v23 + 8) = *v24;
      if (v25)
        *(_QWORD *)(v25 + 16) = v23;
      v24[2] = *(_QWORD *)(v23 + 16);
      *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
      *v24 = v23;
      goto LABEL_72;
    }
    v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24))
      goto LABEL_55;
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }
    if (!*((_BYTE *)v17 + 24))
      goto LABEL_53;
LABEL_49:
    v7 = *(uint64_t **)(v17[2] + 8 * (*(_QWORD *)v17[2] == (_QWORD)v17));
  }
  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    v18 = v7[1];
    *(_QWORD *)v12 = v18;
    if (v18)
      *(_QWORD *)(v18 + 16) = v12;
    v7[2] = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(_QWORD *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12)
      result = v7;
    v7 = *(uint64_t **)v12;
  }
  v19 = (_QWORD *)*v7;
  if (*v7 && !*((_BYTE *)v19 + 24))
    goto LABEL_68;
  v20 = (uint64_t *)v7[1];
  if (!v20 || *((_BYTE *)v20 + 24))
  {
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24))
      v21 = v17 == result;
    else
      v21 = 1;
    if (v21)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_68:
    v20 = v7;
  }
  else
  {
    *((_BYTE *)v20 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    v26 = *v20;
    v7[1] = *v20;
    if (v26)
      *(_QWORD *)(v26 + 16) = v7;
    v20[2] = v7[2];
    *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v20;
    *v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    v19 = v7;
  }
  v23 = v20[2];
  *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  v24 = *(uint64_t **)v23;
  v27 = *(_QWORD *)(*(_QWORD *)v23 + 8);
  *(_QWORD *)v23 = v27;
  if (v27)
    *(_QWORD *)(v27 + 16) = v23;
  v24[2] = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(_QWORD *)(v23 + 16) = v24;
  return result;
}

int *AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<AddrObjGoogle::protobuf::RepeatedPtrField<AddrObjGoogle::protobuf::MessageLite>::TypeHandler>(int *this, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = this;
  v4 = this[2];
  v5 = this[4];
  if ((_DWORD)v4 == v5)
  {
    this = AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(this, (int)v4 + 1);
    v6 = v3[3] + 1;
LABEL_9:
    v3[3] = v6;
    goto LABEL_10;
  }
  v7 = this[3];
  if ((_DWORD)v7 != v5)
  {
    if ((int)v4 < (int)v7)
      *(_QWORD *)(*(_QWORD *)this + 8 * v7) = *(_QWORD *)(*(_QWORD *)this + 8 * v4);
    v6 = v7 + 1;
    goto LABEL_9;
  }
  this = *(int **)(*(_QWORD *)this + 8 * v4);
  if (this)
    this = (int *)(*(uint64_t (**)(int *))(*(_QWORD *)this + 8))(this);
LABEL_10:
  v8 = *(_QWORD *)v3;
  v9 = v3[2];
  v3[2] = v9 + 1;
  *(_QWORD *)(v8 + 8 * v9) = a2;
  return this;
}

uint64_t *std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::swap(uint64_t *result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *result;
  *result = *(_QWORD *)a2;
  *(_QWORD *)a2 = v2;
  v5 = result[1];
  v4 = result[2];
  v3 = result + 1;
  *(_OWORD *)(result + 1) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  if (result[2])
    result = (uint64_t *)(*v3 + 16);
  *result = (uint64_t)v3;
  v6 = (_QWORD *)(*(_QWORD *)(a2 + 8) + 16);
  if (!v4)
    v6 = (_QWORD *)a2;
  *v6 = a2 + 8;
  return result;
}

void AddrObjGoogle::protobuf::internal::ReflectionOps::Copy(AddrObjGoogle::protobuf::internal::ReflectionOps *this, const AddrObjGoogle::protobuf::Message *a2, AddrObjGoogle::protobuf::Message *a3)
{
  AddrObjGoogle::protobuf::Message *v5;

  if (this != a2)
  {
    AddrObjGoogle::protobuf::internal::ReflectionOps::Clear(a2, a2);
    AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(this, a2, v5);
  }
}

void AddrObjGoogle::protobuf::internal::ReflectionOps::Clear(AddrObjGoogle::protobuf::internal::ReflectionOps *this, AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  AddrObjGoogle::protobuf::UnknownFieldSet *v6;
  void *__p;
  _BYTE *v8;
  uint64_t v9;

  v3 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::ReflectionOps *, AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 144))(this, a2);
  __p = 0;
  v8 = 0;
  v9 = 0;
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, void **))(*(_QWORD *)v3 + 96))(v3, this, &__p);
  v4 = __p;
  if (v8 != __p)
  {
    v5 = 0;
    do
    {
      (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, _QWORD))(*(_QWORD *)v3 + 56))(v3, this, v4[v5++]);
      v4 = __p;
    }
    while (v5 < (v8 - (_BYTE *)__p) >> 3);
  }
  v6 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)v3 + 24))(v3, this);
  if (*(_QWORD *)v6)
    AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v6);
  if (__p)
  {
    v8 = __p;
    operator delete(__p);
  }
}

void sub_1888121D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::internal::ReflectionOps::Merge(AddrObjGoogle::protobuf::internal::ReflectionOps *this, const AddrObjGoogle::protobuf::Message *a2, AddrObjGoogle::protobuf::Message *a3)
{
  std::string *v5;
  uint64_t v6;
  std::string *v7;
  std::string *v8;
  uint64_t v9;
  uint64_t v10;
  std::string::size_type v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void ***v28;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v29;
  void *__p[2];
  char v31;
  std::string v32[2];

  if (this == a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/reflection_ops.cc", 56);
    v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (to): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)__p, (AddrObjGoogle::protobuf::internal::LogMessage *)v5);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  v6 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)this + 152))(this);
  if ((*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2) != v6)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/reflection_ops.cc", 59);
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (to->GetDescriptor()) == (descriptor): ");
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v7, "Tried to merge messages of different types.");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)__p, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  v9 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)this + 144))(this);
  v10 = (*(uint64_t (**)(const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 144))(a2);
  memset(v32, 0, 24);
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, std::string *))(*(_QWORD *)v9 + 96))(v9, this, v32);
  v11 = v32[0].__r_.__value_.__r.__words[0];
  if (v32[0].__r_.__value_.__l.__size_ != v32[0].__r_.__value_.__r.__words[0])
  {
    v12 = 0;
    do
    {
      v13 = *(_QWORD *)(v11 + 8 * v12);
      if (*(_DWORD *)(v13 + 48) == 3)
      {
        v14 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 48))(v9, this, v13);
        if (v14 >= 1)
        {
          v15 = 0;
          do
          {
            switch(*(_DWORD *)(v13 + 44))
            {
              case 1:
                (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 320))(v9, this, v13, v15);
                (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t))(*(_QWORD *)v10 + 488))(v10, a2, v13);
                break;
              case 2:
                (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 312))(v9, this, v13, v15);
                (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t))(*(_QWORD *)v10 + 480))(v10, a2, v13);
                break;
              case 3:
              case 0x10:
              case 0x12:
                v16 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 288))(v9, this, v13, v15);
                v17 = 57;
                goto LABEL_13;
              case 4:
              case 6:
                v16 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 304))(v9, this, v13, v15);
                v17 = 59;
                goto LABEL_13;
              case 5:
              case 0xF:
              case 0x11:
                v16 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 280))(v9, this, v13, v15);
                v17 = 56;
                goto LABEL_13;
              case 7:
              case 0xD:
                v16 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 296))(v9, this, v13, v15);
                v17 = 58;
LABEL_13:
                (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, uint64_t))(*(_QWORD *)v10 + 8 * v17))(v10, a2, v13, v16);
                break;
              case 8:
                v20 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 328))(v9, this, v13, v15);
                (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, uint64_t))(*(_QWORD *)v10 + 496))(v10, a2, v13, v20);
                break;
              case 9:
              case 0xC:
                (*(void (**)(void **__return_ptr, uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 336))(__p, v9, this, v13, v15);
                (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, void **))(*(_QWORD *)v10 + 504))(v10, a2, v13, __p);
                if (v31 < 0)
                  operator delete(__p[0]);
                break;
              case 0xA:
              case 0xB:
                v18 = (*(uint64_t (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, _QWORD))(*(_QWORD *)v10 + 520))(v10, a2, v13, 0);
                v19 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 352))(v9, this, v13, v15);
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v18 + 112))(v18, v19);
                break;
              case 0xE:
                v21 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v9 + 344))(v9, this, v13, v15);
                (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, uint64_t))(*(_QWORD *)v10 + 512))(v10, a2, v13, v21);
                break;
              default:
                break;
            }
            v15 = (v15 + 1);
          }
          while (v14 != (_DWORD)v15);
        }
      }
      else
      {
        switch(*(_DWORD *)(v13 + 44))
        {
          case 1:
            (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 144))(v9, this, v13);
            (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t))(*(_QWORD *)v10 + 232))(v10, a2, v13);
            break;
          case 2:
            (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 136))(v9, this, v13);
            (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t))(*(_QWORD *)v10 + 224))(v10, a2, v13);
            break;
          case 3:
          case 0x10:
          case 0x12:
            v22 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 112))(v9, this, v13);
            v23 = 25;
            goto LABEL_30;
          case 4:
          case 6:
            v22 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 128))(v9, this, v13);
            v23 = 27;
            goto LABEL_30;
          case 5:
          case 0xF:
          case 0x11:
            v22 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 104))(v9, this, v13);
            v23 = 24;
            goto LABEL_30;
          case 7:
          case 0xD:
            v22 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 120))(v9, this, v13);
            v23 = 26;
LABEL_30:
            (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, uint64_t))(*(_QWORD *)v10 + 8 * v23))(v10, a2, v13, v22);
            break;
          case 8:
            v24 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 152))(v9, this, v13);
            (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, uint64_t))(*(_QWORD *)v10 + 240))(v10, a2, v13, v24);
            break;
          case 9:
          case 0xC:
            (*(void (**)(void **__return_ptr, uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 160))(__p, v9, this, v13);
            (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, void **))(*(_QWORD *)v10 + 248))(v10, a2, v13, __p);
            if (v31 < 0)
              operator delete(__p[0]);
            break;
          case 0xA:
          case 0xB:
            v26 = (*(uint64_t (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, _QWORD))(*(_QWORD *)v10 + 264))(v10, a2, v13, 0);
            v27 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, _QWORD))(*(_QWORD *)v9 + 176))(v9, this, v13, 0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v26 + 112))(v26, v27);
            break;
          case 0xE:
            v25 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(*(_QWORD *)v9 + 168))(v9, this, v13);
            (*(void (**)(uint64_t, const AddrObjGoogle::protobuf::Message *, uint64_t, uint64_t))(*(_QWORD *)v10 + 256))(v10, a2, v13, v25);
            break;
          default:
            break;
        }
      }
      ++v12;
      v11 = v32[0].__r_.__value_.__r.__words[0];
    }
    while (v12 < (uint64_t)(v32[0].__r_.__value_.__l.__size_ - v32[0].__r_.__value_.__r.__words[0]) >> 3);
  }
  v28 = (void ***)(*(uint64_t (**)(uint64_t, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v10 + 24))(v10, a2);
  v29 = (const AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)v9 + 16))(v9, this);
  AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom(v28, v29);
  if (v32[0].__r_.__value_.__r.__words[0])
  {
    v32[0].__r_.__value_.__l.__size_ = v32[0].__r_.__value_.__r.__words[0];
    operator delete(v32[0].__r_.__value_.__l.__data_);
  }
}

void sub_1888128D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::ReflectionOps::IsInitialized(AddrObjGoogle::protobuf::internal::ReflectionOps *this, const AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t i;
  _BYTE *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  v3 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::ReflectionOps *, const AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 152))(this, a2);
  v4 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)this + 144))(this);
  v5 = *(_DWORD *)(v3 + 44);
  if (v5 >= 1)
  {
    v6 = 0;
    for (i = 0; i < v5; ++i)
    {
      if (*(_DWORD *)(*(_QWORD *)(v3 + 48) + v6 + 48) == 2)
      {
        if (!(*(unsigned int (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)v4 + 40))(v4, this))return 0;
        v5 = *(_DWORD *)(v3 + 44);
      }
      v6 += 120;
    }
  }
  v18 = 0;
  v19 = 0;
  v20 = 0;
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, _BYTE **))(*(_QWORD *)v4 + 96))(v4, this, &v18);
  v8 = v18;
  if (v19 == v18)
  {
    v16 = 1;
    if (!v18)
      return v16;
LABEL_23:
    v19 = v8;
    operator delete(v8);
    return v16;
  }
  v9 = 0;
  while (1)
  {
    v10 = *(_QWORD *)&v8[8 * v9];
    if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + 44)] != 10)
      goto LABEL_17;
    v11 = *(_QWORD *)v4;
    if (*(_DWORD *)(v10 + 48) == 3)
      break;
    v15 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, _QWORD))(v11 + 176))(v4, this, v10, 0);
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v15 + 40))(v15))
      goto LABEL_19;
LABEL_17:
    ++v9;
    v8 = v18;
    if (v9 >= (v19 - v18) >> 3)
    {
      v16 = 1;
      goto LABEL_20;
    }
  }
  v12 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(v11 + 48))(v4, this, v10);
  if (v12 < 1)
    goto LABEL_17;
  v13 = 0;
  while (1)
  {
    v14 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v4 + 352))(v4, this, v10, v13);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 40))(v14) & 1) == 0)
      break;
    v13 = (v13 + 1);
    if (v12 == (_DWORD)v13)
      goto LABEL_17;
  }
LABEL_19:
  v16 = 0;
LABEL_20:
  v8 = v18;
  if (v18)
    goto LABEL_23;
  return v16;
}

void sub_188812B20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::internal::ReflectionOps::DiscardUnknownFields(AddrObjGoogle::protobuf::internal::ReflectionOps *this, AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v3 = (*(uint64_t (**)(AddrObjGoogle::protobuf::internal::ReflectionOps *, AddrObjGoogle::protobuf::Message *))(*(_QWORD *)this + 144))(this, a2);
  v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *))(*(_QWORD *)v3 + 24))(v3, this);
  if (*(_QWORD *)v4)
    AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(v4);
  v13 = 0;
  v14 = 0;
  v15 = 0;
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, _QWORD **))(*(_QWORD *)v3 + 96))(v3, this, &v13);
  v5 = v14;
  if (v14 != v13)
  {
    v6 = 0;
    v5 = v13;
    do
    {
      v7 = v5[v6];
      if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 44)] == 10)
      {
        v8 = *(_QWORD *)v3;
        if (*(_DWORD *)(v7 + 48) == 3)
        {
          v9 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t))(v8 + 48))(v3, this, v7);
          if (v9 >= 1)
          {
            v10 = 0;
            do
            {
              v11 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(_QWORD *)v3 + 440))(v3, this, v7, v10);
              (*(void (**)(uint64_t))(*(_QWORD *)v11 + 120))(v11);
              v10 = (v10 + 1);
            }
            while (v9 != (_DWORD)v10);
          }
        }
        else
        {
          v12 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::internal::ReflectionOps *, uint64_t, _QWORD))(v8 + 264))(v3, this, v7, 0);
          (*(void (**)(uint64_t))(*(_QWORD *)v12 + 120))(v12);
        }
      }
      ++v6;
      v5 = v13;
    }
    while (v6 < v14 - v13);
  }
  if (v5)
  {
    v14 = v5;
    operator delete(v5);
  }
}

void sub_188812CB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::internal::ReflectionOps::FindInitializationErrors(uint64_t a1, const void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::string *v17;
  std::string *v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  std::string *begin;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  AddrObjGoogle::protobuf *v27;
  uint64_t v28;
  uint64_t v29;
  std::string __p;
  std::__split_buffer<std::string> __v;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 152))(a1);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  if (*(int *)(v6 + 44) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      if (*(_DWORD *)(*(_QWORD *)(v6 + 48) + v8 + 48) == 2
        && ((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 40))(v7, a1) & 1) == 0)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a2, *(const void ***)(*(_QWORD *)(v6 + 48) + v8), (uint64_t)&__p);
        v11 = *(_QWORD *)(a3 + 8);
        v10 = *(_QWORD *)(a3 + 16);
        if (v11 >= v10)
        {
          v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - *(_QWORD *)a3) >> 3);
          v14 = v13 + 1;
          if (v13 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - *(_QWORD *)a3) >> 3);
          if (2 * v15 > v14)
            v14 = 2 * v15;
          if (v15 >= 0x555555555555555)
            v16 = 0xAAAAAAAAAAAAAAALL;
          else
            v16 = v14;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
          if (v16)
            v17 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(a3 + 16, v16);
          else
            v17 = 0;
          v18 = v17 + v13;
          __v.__first_ = v17;
          __v.__begin_ = v18;
          __v.__end_cap_.__value_ = &v17[v16];
          v19 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          v18->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v18->__r_.__value_.__l.__data_ = v19;
          memset(&__p, 0, sizeof(__p));
          __v.__end_ = v18 + 1;
          std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__v);
          v20 = *(_QWORD *)(a3 + 8);
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v21 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          *(_QWORD *)(a3 + 8) = v20;
          if (v21 < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        else
        {
          v12 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(_QWORD *)(v11 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)v11 = v12;
          *(_QWORD *)(a3 + 8) = v11 + 24;
        }
      }
      ++v9;
      v8 += 120;
    }
    while (v9 < *(int *)(v6 + 44));
  }
  memset(&__v, 0, 24);
  (*(void (**)(uint64_t, uint64_t, std::__split_buffer<std::string> *))(*(_QWORD *)v7 + 96))(v7, a1, &__v);
  begin = __v.__begin_;
  if (__v.__begin_ != __v.__first_)
  {
    v23 = 0;
    begin = __v.__first_;
    do
    {
      v24 = *((_QWORD *)&begin->__r_.__value_.__l.__data_ + v23);
      if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v24 + 44)] == 10)
      {
        v25 = *(_QWORD *)v7;
        if (*(_DWORD *)(v24 + 48) == 3)
        {
          v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v7, a1, v24);
          if (v26 >= 1)
          {
            v27 = 0;
            do
            {
              v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, AddrObjGoogle::protobuf *))(*(_QWORD *)v7 + 352))(v7, a1, v24, v27);
              sub_18881307C((uint64_t)a2, (const std::string::value_type **)v24, v27, &__p);
              AddrObjGoogle::protobuf::internal::ReflectionOps::FindInitializationErrors(v28, &__p, a3);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              v27 = (AddrObjGoogle::protobuf *)((_DWORD)v27 + 1);
            }
            while (v26 != (_DWORD)v27);
          }
        }
        else
        {
          v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v25 + 176))(v7, a1, v24, 0);
          sub_18881307C((uint64_t)a2, (const std::string::value_type **)v24, (AddrObjGoogle::protobuf *)0xFFFFFFFFLL, &__p);
          AddrObjGoogle::protobuf::internal::ReflectionOps::FindInitializationErrors(v29, &__p, a3);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      ++v23;
      begin = __v.__first_;
    }
    while (v23 < ((char *)__v.__begin_ - (char *)__v.__first_) >> 3);
  }
  if (begin)
  {
    __v.__begin_ = begin;
    operator delete(begin);
  }
}

void sub_188813008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_18881307C@<X0>(uint64_t a1@<X0>, const std::string::value_type **a2@<X1>, AddrObjGoogle::protobuf *a3@<X2>, std::string *a4@<X8>)
{
  const std::string::value_type *v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char *v14;
  void **v15;
  std::string::size_type v16;
  void *__p[2];
  unsigned __int8 v19;

  if (*(char *)(a1 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a4->__r_.__value_.__r.__words[2] = *(_QWORD *)(a1 + 16);
  }
  if (*((_BYTE *)a2 + 52))
  {
    std::string::append(a4, "(");
    v7 = a2[1];
    v8 = v7[23];
    if (v8 >= 0)
      v9 = a2[1];
    else
      v9 = *(const std::string::value_type **)v7;
    if (v8 >= 0)
      v10 = *((unsigned __int8 *)v7 + 23);
    else
      v10 = *((_QWORD *)v7 + 1);
    std::string::append(a4, v9, v10);
    std::string::append(a4, ")");
  }
  else
  {
    v11 = (*a2)[23];
    if (v11 >= 0)
      v12 = *a2;
    else
      v12 = *(const std::string::value_type **)*a2;
    if (v11 >= 0)
      v13 = *((unsigned __int8 *)*a2 + 23);
    else
      v13 = *((_QWORD *)*a2 + 1);
    std::string::append(a4, v12, v13);
  }
  if ((_DWORD)a3 != -1)
  {
    std::string::append(a4, "[");
    AddrObjGoogle::protobuf::SimpleItoa(a3, v14, __p);
    if ((v19 & 0x80u) == 0)
      v15 = __p;
    else
      v15 = (void **)__p[0];
    if ((v19 & 0x80u) == 0)
      v16 = v19;
    else
      v16 = (std::string::size_type)__p[1];
    std::string::append(a4, (const std::string::value_type *)v15, v16);
    if ((char)v19 < 0)
      operator delete(__p[0]);
    std::string::append(a4, "]");
  }
  return std::string::append(a4, ".");
}

void sub_1888131C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::internal::StringSpaceUsedExcludingSelf(unint64_t a1)
{
  BOOL v1;

  if (*(char *)(a1 + 23) < 0 && (*(_QWORD *)a1 >= a1 ? (v1 = *(_QWORD *)a1 > a1 + 24) : (v1 = 1), v1))
    return (*(_DWORD *)(a1 + 16) - 1);
  else
    return 0;
}

uint64_t *AddrObjGoogle::protobuf::internal::NameOfEnum(AddrObjGoogle::protobuf::internal *this, const AddrObjGoogle::protobuf::EnumDescriptor *a2)
{
  uint64_t ValueByNumber;

  ValueByNumber = AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(this, (int)a2);
  if (ValueByNumber)
    return *(uint64_t **)ValueByNumber;
  else
    return AddrObjGoogle::protobuf::internal::kEmptyString(0);
}

AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection(AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *this, const AddrObjGoogle::protobuf::Descriptor *a2, const AddrObjGoogle::protobuf::Message *a3, const int *a4, int a5, int a6, int a7, const AddrObjGoogle::protobuf::DescriptorPool *a8, AddrObjGoogle::protobuf::MessageFactory *a9, int a10)
{
  *(_QWORD *)this = &off_1E1BF6090;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = a3;
  *((_QWORD *)this + 3) = a4;
  *((_DWORD *)this + 8) = a5;
  *((_DWORD *)this + 9) = a6;
  *((_DWORD *)this + 10) = a7;
  *((_DWORD *)this + 11) = a10;
  if (!a8)
    a8 = (const AddrObjGoogle::protobuf::DescriptorPool *)AddrObjGoogle::protobuf::DescriptorPool::generated_pool(this);
  *((_QWORD *)this + 6) = a8;
  *((_QWORD *)this + 7) = a9;
  return this;
}

{
  return AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection(this, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1888132A0(_Unwind_Exception *a1)
{
  addr_obj::Localization *v1;

  addr_obj::Localization::getDisplayLanguage(v1);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::~GeneratedMessageReflection(AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *this)
{
  addr_obj::Localization::getDisplayLanguage(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetUnknownFields(AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *this, const AddrObjGoogle::protobuf::Message *a2)
{
  return (uint64_t)a2 + *((int *)this + 9);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::MutableUnknownFields(AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *this, AddrObjGoogle::protobuf::Message *a2)
{
  return (uint64_t)a2 + *((int *)this + 9);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SpaceUsed(AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *this, const AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v2;
  int v5;
  uint64_t **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  BOOL v36;
  int v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t *v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  BOOL v46;
  int v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;

  v5 = *((_DWORD *)this + 11);
  v6 = (uint64_t **)(*(uint64_t (**)(AddrObjGoogle::protobuf::internal::GeneratedMessageReflection *))(*(_QWORD *)this + 16))(this);
  v7 = AddrObjGoogle::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(v6) + v5;
  v8 = *((int *)this + 10);
  if ((_DWORD)v8 != -1)
    v7 = AddrObjGoogle::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelf((const AddrObjGoogle::protobuf::Message *)((char *)a2 + v8))
       + v7;
  v9 = *((_QWORD *)this + 1);
  if (*(int *)(v9 + 44) >= 1)
  {
    for (i = 0; i < *(int *)(v9 + 44); ++i)
    {
      v11 = *(_QWORD *)(v9 + 48);
      v12 = v11 + 120 * i;
      v13 = AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v12 + 44)];
      if (*(_DWORD *)(v12 + 48) == 3)
      {
        switch(*(_DWORD *)(v12 + 44))
        {
          case 1:
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            if (*(_BYTE *)(v11 + 120 * i + 52))
            {
              v22 = *(_QWORD *)(v11 + 120 * i + 64);
              if (v22)
                v23 = (_QWORD *)(v22 + 112);
              else
                v23 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
            }
            else
            {
              v23 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            }
            v38 = (char *)a2
                + *(int *)(*((_QWORD *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v23) >> 3)));
            if (!*(_QWORD *)v38)
              goto LABEL_66;
            v33 = 8 * *((_DWORD *)v38 + 3);
            goto LABEL_67;
          case 2:
          case 5:
          case 7:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x11:
            if (*(_BYTE *)(v11 + 120 * i + 52))
            {
              v14 = *(_QWORD *)(v11 + 120 * i + 64);
              if (v14)
                v15 = (_QWORD *)(v14 + 112);
              else
                v15 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
            }
            else
            {
              v15 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            }
            v32 = (char *)a2
                + *(int *)(*((_QWORD *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v15) >> 3)));
            if (!*(_QWORD *)v32)
              goto LABEL_66;
            v33 = 4 * *((_DWORD *)v32 + 3);
            goto LABEL_67;
          case 8:
            if (*(_BYTE *)(v11 + 120 * i + 52))
            {
              v26 = *(_QWORD *)(v11 + 120 * i + 64);
              if (v26)
                v27 = (_QWORD *)(v26 + 112);
              else
                v27 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
            }
            else
            {
              v27 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            }
            v40 = (char *)a2
                + *(int *)(*((_QWORD *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v27) >> 3)));
            if (*(_QWORD *)v40)
              v33 = *((_DWORD *)v40 + 3);
            else
LABEL_66:
              v33 = 0;
LABEL_67:
            v7 = (v33 + v7);
            break;
          case 9:
          case 0xC:
            if (*(_BYTE *)(v11 + 120 * i + 52))
            {
              v28 = *(_QWORD *)(v11 + 120 * i + 64);
              if (v28)
                v29 = (_QWORD *)(v28 + 112);
              else
                v29 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
            }
            else
            {
              v29 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            }
            v41 = (char *)a2
                + *(int *)(*((_QWORD *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v29) >> 3)));
            v42 = *(unint64_t **)v41;
            if (*(_QWORD *)v41)
              v43 = 8 * *((_DWORD *)v41 + 4);
            else
              v43 = 0;
            v44 = *((unsigned int *)v41 + 3);
            if ((int)v44 >= 1)
            {
              do
              {
                v45 = *v42;
                if (*(char *)(*v42 + 23) < 0
                  && (*(_QWORD *)v45 >= v45 ? (v46 = *(_QWORD *)v45 > v45 + 24) : (v46 = 1), v46))
                {
                  v47 = *(_DWORD *)(v45 + 16) + 23;
                }
                else
                {
                  v47 = 24;
                }
                v43 += v47;
                ++v42;
                --v44;
              }
              while (v44);
            }
            v7 = (v43 + v7);
            break;
          case 0xA:
          case 0xB:
            if (*(_BYTE *)(v11 + 120 * i + 52))
            {
              v30 = *(_QWORD *)(v11 + 120 * i + 64);
              if (v30)
                v31 = (_QWORD *)(v30 + 112);
              else
                v31 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
            }
            else
            {
              v31 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            }
            v48 = (char *)a2
                + *(int *)(*((_QWORD *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v31) >> 3)));
            if (*(_QWORD *)v48)
              v49 = 8 * *((_DWORD *)v48 + 4);
            else
              v49 = 0;
            v50 = v2;
            if (*((int *)v48 + 3) >= 1)
            {
              v51 = 0;
              do
              {
                v49 += (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v48 + 8 * v51) + 128))(*(_QWORD *)(*(_QWORD *)v48 + 8 * v51));
                ++v51;
              }
              while (v51 < *((int *)v48 + 3));
            }
            v7 = (v49 + v7);
            v2 = v50;
            break;
          default:
            break;
        }
      }
      else
      {
        if (v13 == 10)
        {
          if (*((const AddrObjGoogle::protobuf::Message **)this + 2) != a2)
          {
            if (*(_BYTE *)(v11 + 120 * i + 52))
            {
              v20 = *(_QWORD *)(v11 + 120 * i + 64);
              v21 = (_QWORD *)(v20 ? v20 + 112 : *(_QWORD *)(v11 + 120 * i + 32) + 128);
            }
            else
            {
              v21 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            }
            v39 = *(_QWORD *)((char *)a2
                            + *(int *)(*((_QWORD *)this + 3)
                                     + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v21) >> 3))));
            if (v39)
              v7 = (*(unsigned int (**)(uint64_t))(*(_QWORD *)v39 + 128))(v39) + v7;
          }
          goto LABEL_68;
        }
        if (v13 == 9)
        {
          v16 = v11 + 120 * i;
          v17 = *(unsigned __int8 *)(v16 + 52);
          if (*(_BYTE *)(v16 + 52))
          {
            v18 = *(_QWORD *)(v11 + 120 * i + 64);
            if (v18)
            {
              v19 = (_QWORD *)(v18 + 112);
              if (!v17)
              {
LABEL_41:
                v25 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
                goto LABEL_44;
              }
            }
            else
            {
              v19 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
              if (!v17)
                goto LABEL_41;
            }
          }
          else
          {
            v19 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 56) + 48);
            if (!v17)
              goto LABEL_41;
          }
          v24 = *(_QWORD *)(v11 + 120 * i + 64);
          if (v24)
            v25 = (_QWORD *)(v24 + 112);
          else
            v25 = (_QWORD *)(*(_QWORD *)(v11 + 120 * i + 32) + 128);
LABEL_44:
          v34 = *((_QWORD *)this + 3);
          v35 = *(_QWORD *)((char *)a2 + *(int *)(v34 + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v19) >> 3))));
          if (v35 != *(_QWORD *)(*((_QWORD *)this + 2)
                                + *(int *)(v34 + 4 * (int)(-286331153 * ((unint64_t)(v12 - *v25) >> 3)))))
          {
            if (*(char *)(v35 + 23) < 0 && (*(_QWORD *)v35 >= v35 ? (v36 = *(_QWORD *)v35 > v35 + 24) : (v36 = 1), v36))
              v37 = *(_DWORD *)(v35 + 16) - 1;
            else
              v37 = 0;
            v7 = (v7 + v37 + 24);
          }
        }
      }
LABEL_68:
      v9 = *((_QWORD *)this + 1);
    }
  }
  return v7;
}

uint64_t *AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::Swap(uint64_t *this, AddrObjGoogle::protobuf::Message *a2, AddrObjGoogle::protobuf::Message *a3)
{
  uint64_t v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  uint64_t v15;
  std::string *v16;
  std::string *v17;
  std::string *v18;
  std::string *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  int *v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  std::string *v49;
  std::string *v50;
  std::string *v51;
  std::string *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char v76;
  std::string v77[2];

  if (a2 != a3)
  {
    v5 = (uint64_t)this;
    if ((uint64_t *)(*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 144))(a2) != this)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v77, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 316);
      v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v77, "CHECK failed: (message1->GetReflection()) == (this): ");
      v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, "First argument to Swap() (of type \"");
      v8 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
      v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v7, *(const std::string::value_type **)(v8 + 8));
      v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "\") is not compatible with this reflection object (which is for type \"");
      v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(*(_QWORD *)(v5 + 8) + 8));
      v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "\").  Note that the exact same class is required; not just the same descriptor.");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v76, (AddrObjGoogle::protobuf::internal::LogMessage *)v12);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v77[0].__r_.__value_.__l.__data_);
    }
    if ((*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a3 + 144))(a3) != v5)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v77, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 323);
      v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v77, "CHECK failed: (message2->GetReflection()) == (this): ");
      v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "Second argument to Swap() (of type \"");
      v15 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a3 + 152))(a3);
      v16 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, *(const std::string::value_type **)(v15 + 8));
      v17 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, "\") is not compatible with this reflection object (which is for type \"");
      v18 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v17, *(const std::string::value_type **)(*(_QWORD *)(v5 + 8) + 8));
      v19 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, "\").  Note that the exact same class is required; not just the same descriptor.");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v76, (AddrObjGoogle::protobuf::internal::LogMessage *)v19);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v77[0].__r_.__value_.__l.__data_);
    }
    v20 = *(_QWORD *)(v5 + 8);
    v21 = *(unsigned int *)(v20 + 44);
    if ((int)v21 >= 1)
    {
      v22 = *(int *)(v5 + 32);
      v23 = (int *)((char *)a2 + v22);
      v24 = (int *)((char *)a3 + v22);
      v25 = (unint64_t)(v21 + 31) >> 5;
      do
      {
        v26 = *v23;
        *v23++ = *v24;
        *v24++ = v26;
        --v25;
      }
      while (v25);
      if (*(int *)(v20 + 44) >= 1)
      {
        v27 = 0;
        v28 = 0;
        do
        {
          v29 = *(_QWORD *)(v20 + 48);
          v30 = v29 + v27;
          if (*(_DWORD *)(v29 + v27 + 48) == 3)
          {
            switch(*(_DWORD *)(v29 + v27 + 44))
            {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 0xD:
              case 0xE:
              case 0xF:
              case 0x10:
              case 0x11:
              case 0x12:
                v31 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v32 = *(_QWORD *)(v31 + 64);
                  if (v32)
                    v33 = (_QWORD *)(v32 + 112);
                  else
                    v33 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v33 = (_QWORD *)(*(_QWORD *)(v31 + 56) + 48);
                }
                if (a2 != a3)
                {
                  v43 = *(int *)(*(_QWORD *)(v5 + 24)
                               + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v33) >> 3)));
                  v44 = (uint64_t *)((char *)a2 + v43);
                  v45 = (uint64_t *)((char *)a3 + v43);
                  v46 = *v44;
                  *v44 = *v45;
                  v47 = v45[1];
                  *v45 = v46;
                  v48 = v44[1];
                  v44[1] = v47;
                  v45[1] = v48;
                }
                break;
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
                v40 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v41 = *(_QWORD *)(v40 + 64);
                  if (v41)
                    v42 = (_QWORD *)(v41 + 112);
                  else
                    v42 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v42 = (_QWORD *)(*(_QWORD *)(v40 + 56) + 48);
                }
                v66 = *(int *)(*(_QWORD *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v42) >> 3)));
                AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Swap((uint64_t *)((char *)a2 + v66), (uint64_t *)((char *)a3 + v66));
                break;
              default:
                AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v77, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 366);
                v49 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v77, "Unimplemented type: ");
                v50 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v49, AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v30 + 44)]);
                AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v76, (AddrObjGoogle::protobuf::internal::LogMessage *)v50);
                goto LABEL_34;
            }
          }
          else
          {
            switch(*(_DWORD *)(v29 + v27 + 44))
            {
              case 1:
                v53 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v54 = *(_QWORD *)(v53 + 64);
                  if (v54)
                    v55 = (_QWORD *)(v54 + 112);
                  else
                    v55 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v55 = (_QWORD *)(*(_QWORD *)(v53 + 56) + 48);
                }
                v67 = *(int *)(*(_QWORD *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v55) >> 3)));
                v68 = *(_QWORD *)((char *)a2 + v67);
                *(_QWORD *)((char *)a2 + v67) = *(_QWORD *)((char *)a3 + v67);
                *(_QWORD *)((char *)a3 + v67) = v68;
                break;
              case 2:
                v56 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v57 = *(_QWORD *)(v56 + 64);
                  if (v57)
                    v58 = (_QWORD *)(v57 + 112);
                  else
                    v58 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v58 = (_QWORD *)(*(_QWORD *)(v56 + 56) + 48);
                }
                v69 = *(int *)(*(_QWORD *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v58) >> 3)));
                v70 = *(_DWORD *)((char *)a2 + v69);
                *(_DWORD *)((char *)a2 + v69) = *(_DWORD *)((char *)a3 + v69);
                *(_DWORD *)((char *)a3 + v69) = v70;
                break;
              case 3:
              case 4:
              case 6:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0x10:
              case 0x12:
                v34 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v35 = *(_QWORD *)(v34 + 64);
                  if (v35)
                    v36 = (_QWORD *)(v35 + 112);
                  else
                    v36 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v36 = (_QWORD *)(*(_QWORD *)(v34 + 56) + 48);
                }
                v62 = *(int *)(*(_QWORD *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v36) >> 3)));
                v63 = *(_QWORD *)((char *)a2 + v62);
                *(_QWORD *)((char *)a2 + v62) = *(_QWORD *)((char *)a3 + v62);
                *(_QWORD *)((char *)a3 + v62) = v63;
                break;
              case 5:
              case 7:
              case 0xD:
              case 0xE:
              case 0xF:
              case 0x11:
                v37 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v38 = *(_QWORD *)(v37 + 64);
                  if (v38)
                    v39 = (_QWORD *)(v38 + 112);
                  else
                    v39 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v39 = (_QWORD *)(*(_QWORD *)(v37 + 56) + 48);
                }
                v64 = *(int *)(*(_QWORD *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v39) >> 3)));
                v65 = *(_DWORD *)((char *)a2 + v64);
                *(_DWORD *)((char *)a2 + v64) = *(_DWORD *)((char *)a3 + v64);
                *(_DWORD *)((char *)a3 + v64) = v65;
                break;
              case 8:
                v59 = v29 + v27;
                if (*(_BYTE *)(v29 + v27 + 52))
                {
                  v60 = *(_QWORD *)(v59 + 64);
                  if (v60)
                    v61 = (_QWORD *)(v60 + 112);
                  else
                    v61 = (_QWORD *)(*(_QWORD *)(v29 + v27 + 32) + 128);
                }
                else
                {
                  v61 = (_QWORD *)(*(_QWORD *)(v59 + 56) + 48);
                }
                v71 = *(int *)(*(_QWORD *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v27 + v29 - *v61) >> 3)));
                v72 = *((_BYTE *)a2 + v71);
                *((_BYTE *)a2 + v71) = *((_BYTE *)a3 + v71);
                *((_BYTE *)a3 + v71) = v72;
                break;
              default:
                AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v77, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 401);
                v51 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v77, "Unimplemented type: ");
                v52 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v51, AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v30 + 44)]);
                AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v76, (AddrObjGoogle::protobuf::internal::LogMessage *)v52);
LABEL_34:
                AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v77[0].__r_.__value_.__l.__data_);
                break;
            }
          }
          ++v28;
          v20 = *(_QWORD *)(v5 + 8);
          v27 += 120;
        }
        while (v28 < *(int *)(v20 + 44));
      }
    }
    v73 = *(int *)(v5 + 40);
    if ((_DWORD)v73 != -1)
      AddrObjGoogle::protobuf::internal::ExtensionSet::Swap((AddrObjGoogle::protobuf::Message *)((char *)a2 + v73), (AddrObjGoogle::protobuf::Message *)((char *)a3 + v73));
    v74 = (uint64_t *)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v5 + 24))(v5, a2);
    this = (uint64_t *)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v5 + 24))(v5, a3);
    v75 = *v74;
    *v74 = *this;
    *this = v75;
  }
  return this;
}

void sub_188813E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::HasField(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v8;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "HasField", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "HasField", "Field is repeated; the method requires a singular field.");
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::Has((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40));
  v8 = -286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
  return (*(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * (v8 / 32)) >> v8) & 1;
}

void sub_188813FAC(uint64_t a1, uint64_t a2, const std::string::value_type *a3, const std::string::value_type *a4)
{
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  char v16;
  std::string v17[2];

  AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 84);
  v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v17, "Protocol Buffer reflection usage error:\n  Method      : AddrObjGoogle::protobuf::Reflection::");
  v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, a3);
  v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "\n  Message type: ");
  v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1 + 8));
  v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "\n  Field       : ");
  v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, *(const std::string::value_type **)(a2 + 8));
  v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "\n  Problem     : ");
  v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, a4);
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (AddrObjGoogle::protobuf::internal::LogMessage *)v15);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
}

void sub_188814064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::FieldSize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  std::string *v8;
  char v9;
  std::string v10[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "FieldSize", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "FieldSize", "Field is singular; the method requires a repeated field.");
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::ExtensionSize((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40));
  switch(*(_DWORD *)(a3 + 44))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      result = *(unsigned int *)(a2
                               + *(int *)(*(_QWORD *)(a1 + 24)
                                        + 4
                                        * (int)(-286331153
                                              * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)))
                               + 8);
      break;
    default:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 455);
      v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Can't get here.");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
      result = 0;
      break;
  }
  return result;
}

void sub_1888141D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::ClearField(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "ClearField", "Field does not match message type.");
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::ClearExtension((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40));
  }
  else if (*(_DWORD *)(a3 + 48) == 3)
  {
    switch(*(_DWORD *)(a3 + 44))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        *(_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)))
                  + 8) = 0;
        break;
      case 9:
      case 0xC:
        AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Clear<AddrObjGoogle::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a2+ *(int *)(*(_QWORD *)(a1 + 24)+ 4 * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        break;
      case 0xA:
      case 0xB:
        v12 = a2
            + *(int *)(*(_QWORD *)(a1 + 24)
                     + 4
                     * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)));
        if (*(int *)(v12 + 8) >= 1)
        {
          v13 = 0;
          do
          {
            (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v12 + 8 * v13) + 32))(*(_QWORD *)(*(_QWORD *)v12 + 8 * v13));
            ++v13;
          }
          while (v13 < *(int *)(v12 + 8));
        }
        *(_DWORD *)(v12 + 8) = 0;
        break;
      default:
        return;
    }
  }
  else
  {
    v7 = a2 + *(int *)(a1 + 32);
    v8 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    v9 = v8 + 31;
    if ((v8 & 0x80000000) == 0)
      v9 = -286331153 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    v10 = *(_DWORD *)(v7 + 4 * (v9 >> 5));
    if (((1 << v8) & v10) != 0)
    {
      *(_DWORD *)(v7 + 4 * ((uint64_t)v9 >> 5)) = v10 & ~(1 << v8);
      switch(*(_DWORD *)(a3 + 44))
      {
        case 1:
          *(_QWORD *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8)) = *(_QWORD *)(a3 + 112);
          break;
        case 2:
          *(_DWORD *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8)) = *(_DWORD *)(a3 + 112);
          break;
        case 3:
        case 4:
        case 6:
        case 0x10:
        case 0x12:
          *(_QWORD *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8)) = *(_QWORD *)(a3 + 112);
          break;
        case 5:
        case 7:
        case 0xD:
        case 0xF:
        case 0x11:
          v11 = *(_DWORD *)(a3 + 112);
          goto LABEL_23;
        case 8:
          *(_BYTE *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8)) = *(_BYTE *)(a3 + 112);
          break;
        case 9:
        case 0xC:
          v14 = *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8);
          v15 = *(_QWORD *)(a2 + v14);
          if (v15 != *(_QWORD *)(*(_QWORD *)(a1 + 16) + v14))
          {
            if (*(_BYTE *)(a3 + 104))
            {
              std::string::operator=((std::string *)v15, *(const std::string **)(a3 + 112));
            }
            else if (*(char *)(v15 + 23) < 0)
            {
              **(_BYTE **)v15 = 0;
              *(_QWORD *)(v15 + 8) = 0;
            }
            else
            {
              *(_BYTE *)v15 = 0;
              *(_BYTE *)(v15 + 23) = 0;
            }
          }
          break;
        case 0xA:
        case 0xB:
          v16 = *(_QWORD *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8));
          (*(void (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
          break;
        case 0xE:
          v11 = *(_DWORD *)(*(_QWORD *)(a3 + 112) + 16);
LABEL_23:
          *(_DWORD *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v8)) = v11;
          break;
        default:
          return;
      }
    }
  }
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::RemoveLast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "RemoveLast", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "RemoveLast", "Field is singular; the method requires a repeated field.");
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::RemoveLast((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40));
  }
  else
  {
    switch(*(_DWORD *)(a3 + 44))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        v7 = a2
           + *(int *)(*(_QWORD *)(a1 + 24)
                    + 4 * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)));
        --*(_DWORD *)(v7 + 8);
        break;
      case 9:
      case 0xC:
        v8 = (uint64_t *)(a2
                       + *(int *)(*(_QWORD *)(a1 + 24)
                                + 4
                                * (int)(-286331153
                                      * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v9 = *v8;
        v10 = *((int *)v8 + 2) - 1;
        *((_DWORD *)v8 + 2) = v10;
        v11 = *(_QWORD *)(v9 + 8 * v10);
        if (*(char *)(v11 + 23) < 0)
        {
          **(_BYTE **)v11 = 0;
          *(_QWORD *)(v11 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v11 = 0;
          *(_BYTE *)(v11 + 23) = 0;
        }
        break;
      case 0xA:
      case 0xB:
        v12 = (uint64_t *)(a2
                        + *(int *)(*(_QWORD *)(a1 + 24)
                                 + 4
                                 * (int)(-286331153
                                       * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v13 = *v12;
        v14 = *((int *)v12 + 2) - 1;
        *((_DWORD *)v12 + 2) = v14;
        (*(void (**)(_QWORD))(**(_QWORD **)(v13 + 8 * v14) + 32))(*(_QWORD *)(v13 + 8 * v14));
        break;
      default:
        return;
    }
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::ReleaseLast(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "ReleaseLast", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "ReleaseLast", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "ReleaseLast", 10);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::ReleaseLast((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40));
  v8 = (uint64_t *)(a2
                 + *(int *)(*(_QWORD *)(a1 + 24)
                          + 4
                          * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
  v9 = *v8;
  v10 = *((_DWORD *)v8 + 3);
  v11 = *((int *)v8 + 2);
  result = *(_QWORD *)(*v8 + 8 * (v11 - 1));
  *((_DWORD *)v8 + 2) = v11 - 1;
  *((_DWORD *)v8 + 3) = v10 - 1;
  if ((int)v11 < v10)
    *(_QWORD *)(v9 + 8 * (v11 - 1)) = *(_QWORD *)(v9 + 8 * (v10 - 1));
  return result;
}

void sub_1888147F8(uint64_t a1, uint64_t a2, const std::string::value_type *a3, int a4)
{
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  std::string *v17;
  char v18;
  std::string v19[2];

  AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 110);
  v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v19, "Protocol Buffer reflection usage error:\n  Method      : AddrObjGoogle::protobuf::Reflection::");
  v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, a3);
  v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "\n  Message type: ");
  v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1 + 8));
  v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "\n  Field       : ");
  v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, *(const std::string::value_type **)(a2 + 8));
  v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "\n  Problem     : Field is not the right type for this message:\n    Expected  : ");
  v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, off_1E1BFEE80[a4]);
  v16 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "\n    Field type: ");
  v17 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, off_1E1BFEE80[AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a2 + 44)]]);
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v17);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
}

void sub_1888148DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SwapElements(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "Swap", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "Swap", "Field is singular; the method requires a repeated field.");
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SwapElements((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  }
  else
  {
    switch(*(_DWORD *)(a3 + 44))
    {
      case 1:
        v15 = *(_QWORD *)(a2
                        + *(int *)(*(_QWORD *)(a1 + 24)
                                 + 4
                                 * (int)(-286331153
                                       * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v16 = *(_QWORD *)(v15 + 8 * a4);
        *(_QWORD *)(v15 + 8 * a4) = *(_QWORD *)(v15 + 8 * a5);
        *(_QWORD *)(v15 + 8 * a5) = v16;
        break;
      case 2:
        v17 = *(_QWORD *)(a2
                        + *(int *)(*(_QWORD *)(a1 + 24)
                                 + 4
                                 * (int)(-286331153
                                       * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v18 = *(_DWORD *)(v17 + 4 * a4);
        *(_DWORD *)(v17 + 4 * a4) = *(_DWORD *)(v17 + 4 * a5);
        *(_DWORD *)(v17 + 4 * a5) = v18;
        break;
      case 3:
      case 4:
      case 6:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0x10:
      case 0x12:
        v11 = *(_QWORD *)(a2
                        + *(int *)(*(_QWORD *)(a1 + 24)
                                 + 4
                                 * (int)(-286331153
                                       * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v12 = *(_QWORD *)(v11 + 8 * a4);
        *(_QWORD *)(v11 + 8 * a4) = *(_QWORD *)(v11 + 8 * a5);
        *(_QWORD *)(v11 + 8 * a5) = v12;
        break;
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        v13 = *(_QWORD *)(a2
                        + *(int *)(*(_QWORD *)(a1 + 24)
                                 + 4
                                 * (int)(-286331153
                                       * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v14 = *(_DWORD *)(v13 + 4 * a4);
        *(_DWORD *)(v13 + 4 * a4) = *(_DWORD *)(v13 + 4 * a5);
        *(_DWORD *)(v13 + 4 * a5) = v14;
        break;
      case 8:
        v19 = *(_QWORD *)(a2
                        + *(int *)(*(_QWORD *)(a1 + 24)
                                 + 4
                                 * (int)(-286331153
                                       * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
        v20 = *(_BYTE *)(v19 + a4);
        *(_BYTE *)(v19 + a4) = *(_BYTE *)(v19 + a5);
        *(_BYTE *)(v19 + a5) = v20;
        break;
      default:
        return;
    }
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::ListFields(uint64_t result, uint64_t a2, char **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  int v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;

  a3[1] = *a3;
  if (*(_QWORD *)(result + 16) != a2)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 8);
    if (*(int *)(v6 + 44) >= 1)
    {
      v7 = 0;
      while (1)
      {
        v8 = *(_QWORD *)(v6 + 48);
        v9 = v8 + 120 * v7;
        if (*(_DWORD *)(v9 + 48) != 3)
          break;
        if ((*(int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v5 + 48))(v5, a2, v9) >= 1)
        {
          v11 = a3[1];
          v10 = (unint64_t)a3[2];
          if ((unint64_t)v11 >= v10)
          {
            v12 = (v11 - *a3) >> 3;
            if ((unint64_t)(v12 + 1) >> 61)
              goto LABEL_50;
            v13 = v10 - (_QWORD)*a3;
            v14 = v13 >> 2;
            if (v13 >> 2 <= (unint64_t)(v12 + 1))
              v14 = v12 + 1;
            if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
              v15 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v15 = v14;
            if (v15)
              v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a3 + 2), v15);
            else
              v16 = 0;
            v25 = &v16[8 * v12];
            *(_QWORD *)v25 = v9;
            v21 = v25 + 8;
            v27 = *a3;
            v26 = a3[1];
            if (v26 != *a3)
            {
              do
              {
                v28 = *((_QWORD *)v26 - 1);
                v26 -= 8;
                *((_QWORD *)v25 - 1) = v28;
                v25 -= 8;
              }
              while (v26 != v27);
              goto LABEL_38;
            }
            goto LABEL_39;
          }
LABEL_22:
          *(_QWORD *)v11 = v9;
          v21 = v11 + 8;
          goto LABEL_41;
        }
LABEL_42:
        ++v7;
        v6 = *(_QWORD *)(v5 + 8);
        if (v7 >= *(int *)(v6 + 44))
          goto LABEL_43;
      }
      if (*(_BYTE *)(v8 + 120 * v7 + 52))
      {
        v17 = *(_QWORD *)(v8 + 120 * v7 + 64);
        if (v17)
          v18 = (_QWORD *)(v17 + 112);
        else
          v18 = (_QWORD *)(*(_QWORD *)(v8 + 120 * v7 + 32) + 128);
      }
      else
      {
        v18 = (_QWORD *)(*(_QWORD *)(v8 + 120 * v7 + 56) + 48);
      }
      v19 = -286331153 * ((unint64_t)(v9 - *v18) >> 3);
      if (((*(_DWORD *)(a2 + *(int *)(v5 + 32) + 4 * (v19 / 32)) >> v19) & 1) == 0)
        goto LABEL_42;
      v11 = a3[1];
      v20 = (unint64_t)a3[2];
      if ((unint64_t)v11 < v20)
        goto LABEL_22;
      v22 = (v11 - *a3) >> 3;
      if ((unint64_t)(v22 + 1) >> 61)
LABEL_50:
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v23 = v20 - (_QWORD)*a3;
      v24 = v23 >> 2;
      if (v23 >> 2 <= (unint64_t)(v22 + 1))
        v24 = v22 + 1;
      if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8)
        v15 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v15 = v24;
      if (v15)
        v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a3 + 2), v15);
      else
        v16 = 0;
      v25 = &v16[8 * v22];
      *(_QWORD *)v25 = v9;
      v21 = v25 + 8;
      v29 = *a3;
      v26 = a3[1];
      if (v26 != *a3)
      {
        do
        {
          v30 = *((_QWORD *)v26 - 1);
          v26 -= 8;
          *((_QWORD *)v25 - 1) = v30;
          v25 -= 8;
        }
        while (v26 != v29);
LABEL_38:
        v26 = *a3;
      }
LABEL_39:
      *a3 = v25;
      a3[1] = v21;
      a3[2] = &v16[8 * v15];
      if (v26)
        operator delete(v26);
LABEL_41:
      a3[1] = v21;
      goto LABEL_42;
    }
LABEL_43:
    v31 = *(int *)(v5 + 40);
    if ((_DWORD)v31 != -1)
      AddrObjGoogle::protobuf::internal::ExtensionSet::AppendToList((_QWORD *)(a2 + v31), (const AddrObjGoogle::protobuf::Descriptor *)v6, *(AddrObjGoogle::protobuf::DescriptorPool **)(v5 + 48), (void **)a3);
    v32 = (uint64_t *)a3[1];
    v33 = 126 - 2 * __clz(((char *)v32 - *a3) >> 3);
    if (v32 == (uint64_t *)*a3)
      v34 = 0;
    else
      v34 = v33;
    return sub_1888190B0((uint64_t)*a3, v32, v34, 1);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetInt32(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetInt32", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 1)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetInt32", 1);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(unsigned int *)(a3 + 112));
  else
    return *(unsigned int *)(a2
                           + *(int *)(*(_QWORD *)(a1 + 24)
                                    + 4
                                    * (int)(-286331153
                                          * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetInt32", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 1)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetInt32", 1);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt32((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), a4, (uint64_t *)a3);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(_DWORD *)(a2
              + *(int *)(*(_QWORD *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedInt32", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 1)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedInt32", 1);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(unsigned int *)(*(_QWORD *)(a2
                                       + *(int *)(*(_QWORD *)(a1 + 24)
                                                + 4
                                                * (int)(-286331153
                                                      * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                           + 4 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedInt32", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 1)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedInt32", 1);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(_DWORD *)(*(_QWORD *)(a2
                          + *(int *)(*(_QWORD *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
              + 4 * a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddInt32", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 1)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddInt32", 1);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt32((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a4, a3);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(_DWORD *)(v11 + 4 * v10) = a4;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetInt64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetInt64", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 2)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetInt64", 2);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_QWORD *)(a3 + 112));
  else
    return *(_QWORD *)(a2
                     + *(int *)(*(_QWORD *)(a1 + 24)
                              + 4
                              * (int)(-286331153
                                    * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetInt64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetInt64", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 2)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetInt64", 2);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt64((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), a4, (uint64_t *)a3);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(_QWORD *)(a2
              + *(int *)(*(_QWORD *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedInt64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedInt64", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 2)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedInt64", 2);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(_QWORD *)(*(_QWORD *)(a2
                                 + *(int *)(*(_QWORD *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                     + 8 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedInt64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedInt64", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 2)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedInt64", 2);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(_QWORD *)(*(_QWORD *)(a2
                          + *(int *)(*(_QWORD *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
              + 8 * a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddInt64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddInt64", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 2)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddInt64", 2);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt64((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a4, a3);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<long long>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(_QWORD *)(v11 + 8 * v10) = a4;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetUInt32(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetUInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetUInt32", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 3)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetUInt32", 3);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(unsigned int *)(a3 + 112));
  else
    return *(unsigned int *)(a2
                           + *(int *)(*(_QWORD *)(a1 + 24)
                                    + 4
                                    * (int)(-286331153
                                          * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetUInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetUInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetUInt32", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 3)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetUInt32", 3);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt32((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), a4, (uint64_t *)a3);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(_DWORD *)(a2
              + *(int *)(*(_QWORD *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedUInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedUInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedUInt32", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 3)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedUInt32", 3);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedUInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(unsigned int *)(*(_QWORD *)(a2
                                       + *(int *)(*(_QWORD *)(a1 + 24)
                                                + 4
                                                * (int)(-286331153
                                                      * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                           + 4 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedUInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedUInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedUInt32", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 3)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedUInt32", 3);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedUInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(_DWORD *)(*(_QWORD *)(a2
                          + *(int *)(*(_QWORD *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
              + 4 * a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddUInt32(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddUInt32", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddUInt32", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 3)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddUInt32", 3);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt32((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a4, a3);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(_DWORD *)(v11 + 4 * v10) = a4;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetUInt64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetUInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetUInt64", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 4)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetUInt64", 4);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_QWORD *)(a3 + 112));
  else
    return *(_QWORD *)(a2
                     + *(int *)(*(_QWORD *)(a1 + 24)
                              + 4
                              * (int)(-286331153
                                    * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetUInt64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetUInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetUInt64", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 4)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetUInt64", 4);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt64((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), a4, (uint64_t *)a3);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(_QWORD *)(a2
              + *(int *)(*(_QWORD *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedUInt64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedUInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedUInt64", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 4)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedUInt64", 4);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedUInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(_QWORD *)(*(_QWORD *)(a2
                                 + *(int *)(*(_QWORD *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                     + 8 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedUInt64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedUInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedUInt64", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 4)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedUInt64", 4);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedUInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(_QWORD *)(*(_QWORD *)(a2
                          + *(int *)(*(_QWORD *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
              + 8 * a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddUInt64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddUInt64", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddUInt64", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 4)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddUInt64", 4);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt64((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a4, a3);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<long long>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(_QWORD *)(v11 + 8 * v10) = a4;
  }
}

float AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetFloat(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetFloat", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetFloat", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 6)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetFloat", 6);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetFloat((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(float *)(a3 + 112));
  else
    return *(float *)(a2
                    + *(int *)(*(_QWORD *)(a1 + 24)
                             + 4
                             * (int)(-286331153
                                   * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetFloat(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetFloat", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetFloat", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 6)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetFloat", 6);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetFloat((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), (uint64_t *)a3, a4);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(float *)(a2
             + *(int *)(*(_QWORD *)(a1 + 24)
                      + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

float AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedFloat(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedFloat", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedFloat", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 6)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedFloat", 6);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedFloat((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(float *)(*(_QWORD *)(a2
                                + *(int *)(*(_QWORD *)(a1 + 24)
                                         + 4
                                         * (int)(-286331153
                                               * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                    + 4 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedFloat(uint64_t a1, uint64_t a2, uint64_t a3, int a4, float a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedFloat", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedFloat", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 6)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedFloat", 6);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedFloat((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(float *)(*(_QWORD *)(a2
                         + *(int *)(*(_QWORD *)(a1 + 24)
                                  + 4
                                  * (int)(-286331153
                                        * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
             + 4 * a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddFloat(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddFloat", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddFloat", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 6)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddFloat", 6);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddFloat((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a3, a4);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(float *)(v11 + 4 * v10) = a4;
  }
}

double AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetDouble(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetDouble", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetDouble", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 5)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetDouble", 5);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetDouble((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(double *)(a3 + 112));
  else
    return *(double *)(a2
                     + *(int *)(*(_QWORD *)(a1 + 24)
                              + 4
                              * (int)(-286331153
                                    * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetDouble(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetDouble", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetDouble", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 5)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetDouble", 5);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetDouble((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), (uint64_t *)a3, a4);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(double *)(a2
              + *(int *)(*(_QWORD *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

double AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedDouble(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedDouble", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedDouble", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 5)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedDouble", 5);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedDouble((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(double *)(*(_QWORD *)(a2
                                 + *(int *)(*(_QWORD *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                     + 8 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedDouble(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedDouble", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedDouble", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 5)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedDouble", 5);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedDouble((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(double *)(*(_QWORD *)(a2
                          + *(int *)(*(_QWORD *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
              + 8 * a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddDouble(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddDouble", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddDouble", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 5)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddDouble", 5);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddDouble((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a3, a4);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<long long>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(double *)(v11 + 8 * v10) = a4;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetBool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetBool", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetBool", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 7)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetBool", 7);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetBool((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(unsigned __int8 *)(a3 + 112));
  else
    return *(unsigned __int8 *)(a2
                              + *(int *)(*(_QWORD *)(a1 + 24)
                                       + 4
                                       * (int)(-286331153
                                             * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetBool(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetBool", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetBool", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 7)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetBool", 7);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetBool((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), a4, (uint64_t *)a3);
  }
  else
  {
    v9 = *(_QWORD *)(a3 + 56);
    v11 = *(_QWORD *)(v9 + 48);
    v10 = (_QWORD *)(v9 + 48);
    *(_BYTE *)(a2 + *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)(-286331153 * ((unint64_t)(a3 - v11) >> 3)))) = a4;
    if (*(_BYTE *)(a3 + 52))
    {
      v12 = *(_QWORD *)(a3 + 64);
      if (v12)
        v10 = (_QWORD *)(v12 + 112);
      else
        v10 = (_QWORD *)(*(_QWORD *)(a3 + 32) + 128);
    }
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)(-286331153 * ((unint64_t)(a3 - *v10) >> 3)) / 32)) |= 1 << (-17 * ((unint64_t)(a3 - *v10) >> 3));
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedBool(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedBool", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedBool", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 7)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedBool", 7);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedBool((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(unsigned __int8 *)(*(_QWORD *)(a2
                                          + *(int *)(*(_QWORD *)(a1 + 24)
                                                   + 4
                                                   * (int)(-286331153
                                                         * ((unint64_t)(a3
                                                                             - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                              + a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedBool(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedBool", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedBool", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 7)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedBool", 7);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedBool((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, a5);
  else
    *(_BYTE *)(*(_QWORD *)(a2
                         + *(int *)(*(_QWORD *)(a1 + 24)
                                  + 4
                                  * (int)(-286331153
                                        * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
             + a4) = a5;
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddBool(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddBool", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddBool", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 7)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddBool", 7);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddBool((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), a4, a3);
  }
  else
  {
    v9 = (_DWORD *)(a2
                  + *(int *)(*(_QWORD *)(a1 + 24)
                           + 4
                           * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 == v9[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<BOOL>::Reserve(v9, v10 + 1);
      v10 = v9[2];
    }
    v11 = *(_QWORD *)v9;
    v9[2] = v10 + 1;
    *(_BYTE *)(v11 + v10) = a4;
  }
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetString(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  uint64_t v8;
  uint64_t Int64;
  __int128 v10;
  std::string::size_type v11;
  __int128 *v12;
  const std::string::value_type *v13;
  std::string::size_type v14;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetString", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetString", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetString", 9);
  if (*(_BYTE *)(a3 + 52))
  {
    Int64 = AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_QWORD *)(a3 + 112));
    if ((*(char *)(Int64 + 23) & 0x80000000) == 0)
    {
      v10 = *(_OWORD *)Int64;
      v11 = *(_QWORD *)(Int64 + 16);
LABEL_12:
      a4->__r_.__value_.__r.__words[2] = v11;
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v10;
      return;
    }
    v13 = *(const std::string::value_type **)Int64;
    v14 = *(_QWORD *)(Int64 + 8);
  }
  else
  {
    v12 = *(__int128 **)(a2
                       + *(int *)(*(_QWORD *)(a1 + 24)
                                + 4
                                * (int)(-286331153
                                      * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    if ((*((char *)v12 + 23) & 0x80000000) == 0)
    {
      v10 = *v12;
      v11 = *((_QWORD *)v12 + 2);
      goto LABEL_12;
    }
    v13 = *(const std::string::value_type **)v12;
    v14 = *((_QWORD *)v12 + 1);
  }
  std::string::__init_copy_ctor_external(a4, v13, v14);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetStringReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetStringReference", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetStringReference", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetStringReference", 9);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt64((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_QWORD *)(a3 + 112));
  else
    return *(_QWORD *)(a2
                     + *(int *)(*(_QWORD *)(a1 + 24)
                              + 4
                              * (int)(-286331153
                                    * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  std::string *v9;
  unint64_t v10;
  uint64_t v11;
  std::string *v12;
  std::string *v13;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetString", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetString", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetString", 9);
  if (*(_BYTE *)(a3 + 52))
  {
    v9 = (std::string *)AddrObjGoogle::protobuf::internal::ExtensionSet::MutableString((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), (uint64_t *)a3);
LABEL_10:
    std::string::operator=(v9, (const std::string *)a4);
    return;
  }
  v10 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
  *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v10 / 32)) |= 1 << v10;
  v11 = *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v10);
  v9 = *(std::string **)(a2 + v11);
  if (v9 != *(std::string **)(*(_QWORD *)(a1 + 16) + v11))
    goto LABEL_10;
  v12 = (std::string *)operator new();
  v13 = v12;
  if (*(char *)(a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v12, *(const std::string::value_type **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)&v12->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
    v12->__r_.__value_.__r.__words[2] = *(_QWORD *)(a4 + 16);
  }
  *(_QWORD *)(a2 + v11) = v13;
}

void sub_18881795C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedString(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, std::string *a5@<X8>)
{
  uint64_t v10;
  uint64_t RepeatedString;
  __int128 v12;
  std::string::size_type v13;
  __int128 *v14;
  const std::string::value_type *v15;
  std::string::size_type v16;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "GetRepeatedString", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedString", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedString", 9);
  if (*(_BYTE *)(a3 + 52))
  {
    RepeatedString = AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedString((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
    if ((*(char *)(RepeatedString + 23) & 0x80000000) == 0)
    {
      v12 = *(_OWORD *)RepeatedString;
      v13 = *(_QWORD *)(RepeatedString + 16);
LABEL_12:
      a5->__r_.__value_.__r.__words[2] = v13;
      *(_OWORD *)&a5->__r_.__value_.__l.__data_ = v12;
      return;
    }
    v15 = *(const std::string::value_type **)RepeatedString;
    v16 = *(_QWORD *)(RepeatedString + 8);
  }
  else
  {
    v14 = *(__int128 **)(*(_QWORD *)(a2
                                   + *(int *)(*(_QWORD *)(a1 + 24)
                                            + 4
                                            * (int)(-286331153
                                                  * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                       + 8 * a4);
    if ((*((char *)v14 + 23) & 0x80000000) == 0)
    {
      v12 = *v14;
      v13 = *((_QWORD *)v14 + 2);
      goto LABEL_12;
    }
    v15 = *(const std::string::value_type **)v14;
    v16 = *((_QWORD *)v14 + 1);
  }
  std::string::__init_copy_ctor_external(a5, v15, v16);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedStringReference(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedStringReference", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedStringReference", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedStringReference", 9);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedString((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(_QWORD *)(*(_QWORD *)(a2
                                 + *(int *)(*(_QWORD *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                     + 8 * a4);
}

std::string *AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedString(uint64_t a1, uint64_t a2, uint64_t a3, int a4, const std::string *a5)
{
  uint64_t v10;
  std::string *v11;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedString", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedString", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedString", 9);
  if (*(_BYTE *)(a3 + 52))
    v11 = (std::string *)AddrObjGoogle::protobuf::internal::ExtensionSet::MutableRepeatedString((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    v11 = *(std::string **)(*(_QWORD *)(a2
                                      + *(int *)(*(_QWORD *)(a1 + 24)
                                               + 4
                                               * (int)(-286331153
                                                     * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                          + 8 * a4);
  return std::string::operator=(v11, a5);
}

std::string *AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddString(uint64_t a1, uint64_t a2, uint64_t a3, const std::string *a4)
{
  int *v8;
  std::string *v9;
  int *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = *(int **)(a1 + 8);
  if (*(int **)(a3 + 56) != v8)
    sub_188813FAC((uint64_t)v8, a3, "AddString", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddString", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 9)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddString", 9);
  if (*(_BYTE *)(a3 + 52))
  {
    v9 = (std::string *)AddrObjGoogle::protobuf::internal::ExtensionSet::AddString((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), a3);
  }
  else
  {
    v10 = (int *)(a2
                + *(int *)(*(_QWORD *)(a1 + 24)
                         + 4
                         * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v11 = v10[3];
    v12 = v10[2];
    if ((int)v12 >= v11)
    {
      if (v11 == v10[4])
      {
        v8 = AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10, v11 + 1);
        v11 = v10[3];
      }
      v10[3] = v11 + 1;
      v9 = (std::string *)AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New((AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)v8);
      v14 = *(_QWORD *)v10;
      v15 = v10[2];
      v10[2] = v15 + 1;
      *(_QWORD *)(v14 + 8 * v15) = v9;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      v10[2] = v12 + 1;
      v9 = *(std::string **)(v13 + 8 * v12);
    }
  }
  return std::string::operator=(v9, a4);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int Int32;
  uint64_t ValueByNumber;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  char v18;
  std::string v19[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v6)
    sub_188813FAC(v6, a3, "GetEnum", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetEnum", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 8)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetEnum", 8);
  if (*(_BYTE *)(a3 + 52))
    Int32 = AddrObjGoogle::protobuf::internal::ExtensionSet::GetInt32((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(unsigned int *)(*(_QWORD *)(a3 + 112) + 16));
  else
    Int32 = *(_DWORD *)(a2
                      + *(int *)(*(_QWORD *)(a1 + 24)
                               + 4
                               * (int)(-286331153
                                     * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
  ValueByNumber = AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(*(AddrObjGoogle::protobuf::EnumDescriptor **)(a3 + 80), Int32);
  if (!ValueByNumber)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 910);
    v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: result != NULL: ");
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Value ");
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, Int32);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, " is not valid for field ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, *(const std::string::value_type **)(a3 + 8));
    v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, " of type ");
    v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, *(const std::string::value_type **)(*(_QWORD *)(a3 + 80) + 8));
    v16 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, ".");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v16);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  return ValueByNumber;
}

void sub_188817FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "SetEnum", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetEnum", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 8)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetEnum", 8);
  if (*(_QWORD *)(a4 + 24) != *(_QWORD *)(a3 + 80))
    sub_188818178(*(_QWORD *)(a1 + 8), a3, "SetEnum", a4);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetInt32((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_DWORD *)(a4 + 16), (uint64_t *)a3);
  }
  else
  {
    v9 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
    *(_DWORD *)(a2
              + *(int *)(*(_QWORD *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)) >> 30))) = *(_DWORD *)(a4 + 16);
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v9 / 32)) |= 1 << v9;
  }
}

void sub_188818178(uint64_t a1, uint64_t a2, const std::string::value_type *a3, uint64_t a4)
{
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  std::string *v17;
  char v18;
  std::string v19[2];

  AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 123);
  v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v19, "Protocol Buffer reflection usage error:\n  Method      : AddrObjGoogle::protobuf::Reflection::");
  v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, a3);
  v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "\n  Message type: ");
  v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1 + 8));
  v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "\n  Field       : ");
  v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, *(const std::string::value_type **)(a2 + 8));
  v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "\n  Problem     : Enum value did not match field type:\n    Expected  : ");
  v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, *(const std::string::value_type **)(*(_QWORD *)(a2 + 80) + 8));
  v16 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "\n    Actual    : ");
  v17 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, *(const std::string::value_type **)(a4 + 8));
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v17);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
}

void sub_188818248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedEnum(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  int RepeatedEnum;
  uint64_t ValueByNumber;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  std::string *v17;
  std::string *v18;
  char v20;
  std::string v21[2];

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedEnum", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedEnum", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 8)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedEnum", 8);
  if (*(_BYTE *)(a3 + 52))
    RepeatedEnum = AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedEnum((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    RepeatedEnum = *(_DWORD *)(*(_QWORD *)(a2
                                         + *(int *)(*(_QWORD *)(a1 + 24)
                                                  + 4
                                                  * (int)(-286331153
                                                        * ((unint64_t)(a3
                                                                            - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                             + 4 * a4);
  ValueByNumber = AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(*(AddrObjGoogle::protobuf::EnumDescriptor **)(a3 + 80), RepeatedEnum);
  if (!ValueByNumber)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 942);
    v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: result != NULL: ");
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "Value ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, RepeatedEnum);
    v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, " is not valid for field ");
    v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, *(const std::string::value_type **)(a3 + 8));
    v16 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, " of type ");
    v17 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, *(const std::string::value_type **)(*(_QWORD *)(a3 + 80) + 8));
    v18 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v17, ".");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (AddrObjGoogle::protobuf::internal::LogMessage *)v18);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  return ValueByNumber;
}

void sub_18881840C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::SetRepeatedEnum(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v10)
    sub_188813FAC(v10, a3, "SetRepeatedEnum", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "SetRepeatedEnum", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 8)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "SetRepeatedEnum", 8);
  if (*(_QWORD *)(a5 + 24) != *(_QWORD *)(a3 + 80))
    sub_188818178(*(_QWORD *)(a1 + 8), a3, "SetRepeatedEnum", a5);
  if (*(_BYTE *)(a3 + 52))
    AddrObjGoogle::protobuf::internal::ExtensionSet::SetRepeatedEnum((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4, *(_DWORD *)(a5 + 16));
  else
    *(_DWORD *)(*(_QWORD *)(a2
                          + *(int *)(*(_QWORD *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
              + 4 * a4) = *(_DWORD *)(a5 + 16);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  _DWORD *v10;
  int v11;
  uint64_t v12;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddEnum", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddEnum", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 8)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddEnum", 8);
  if (*(_QWORD *)(a4 + 24) != *(_QWORD *)(a3 + 80))
    sub_188818178(*(_QWORD *)(a1 + 8), a3, "AddEnum", a4);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddInt32((uint64_t **)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), *(_BYTE *)(a3 + 44), *(_BYTE *)(*(_QWORD *)(a3 + 96) + 44), *(_DWORD *)(a4 + 16), a3);
  }
  else
  {
    v9 = *(_DWORD *)(a4 + 16);
    v10 = (_DWORD *)(a2
                   + *(int *)(*(_QWORD *)(a1 + 24)
                            + 4
                            * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v11 = v10[2];
    if (v11 == v10[3])
    {
      AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(v10, v11 + 1);
      v11 = v10[2];
    }
    v12 = *(_QWORD *)v10;
    v10[2] = v11 + 1;
    *(_DWORD *)(v12 + 4 * v11) = v9;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetMessage", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetMessage", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetMessage", 10);
  if (!a4)
    a4 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetMessage(a2 + *(int *)(a1 + 40), *(_DWORD *)(a3 + 40), *(_QWORD *)(a3 + 72), a4);
  v10 = *(int *)(*(_QWORD *)(a1 + 24)
               + 4 * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)));
  result = *(_QWORD *)(a2 + v10);
  if (!result)
    return *(_QWORD *)(*(_QWORD *)(a1 + 16) + v10);
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::MutableMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "MutableMessage", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "MutableMessage", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "MutableMessage", 10);
  if (!a4)
    a4 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::MutableMessage((uint64_t **)(a2 + *(int *)(a1 + 40)), a3, a4);
  v10 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
  *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v10 / 32)) |= 1 << v10;
  v11 = *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v10);
  result = *(_QWORD *)(a2 + v11);
  if (!result)
  {
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 16) + v11) + 24))(*(_QWORD *)(*(_QWORD *)(a1 + 16) + v11));
    *(_QWORD *)(a2 + v11) = result;
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::ReleaseMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "ReleaseMessage", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) == 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "ReleaseMessage", "Field is repeated; the method requires a singular field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "ReleaseMessage", 10);
  if (!a4)
    a4 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::ReleaseMessage(a2 + *(int *)(a1 + 40), a3, a4);
  v10 = 0xEEEEEEEEEEEEEEEFLL * ((a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3);
  *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v10 / 32)) &= ~(1 << v10);
  v11 = *(int *)(*(_QWORD *)(a1 + 24) + 4 * (int)v10);
  result = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a2 + v11) = 0;
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::GetRepeatedMessage(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "GetRepeatedMessage", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "GetRepeatedMessage", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "GetRepeatedMessage", 10);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::GetRepeatedMessage((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(_QWORD *)(*(_QWORD *)(a2
                                 + *(int *)(*(_QWORD *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                     + 8 * a4);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::MutableRepeatedMessage(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "MutableRepeatedMessage", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "MutableRepeatedMessage", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "MutableRepeatedMessage", 10);
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::MutableRepeatedMessage((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40), a4);
  else
    return *(_QWORD *)(*(_QWORD *)(a2
                                 + *(int *)(*(_QWORD *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))))
                     + 8 * a4);
}

void AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::AddMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a3 + 56) != v8)
    sub_188813FAC(v8, a3, "AddMessage", "Field does not match message type.");
  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "AddMessage", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != 10)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "AddMessage", 10);
  if (!a4)
    a4 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a3 + 52))
  {
    AddrObjGoogle::protobuf::internal::ExtensionSet::AddMessage((uint64_t **)(a2 + *(int *)(a1 + 40)), a3, a4);
  }
  else
  {
    v9 = (int *)(a2
               + *(int *)(*(_QWORD *)(a1 + 24)
                        + 4
                        * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3))));
    v10 = v9[2];
    if (v10 >= v9[3] || (v11 = v10, v12 = *(uint64_t **)v9, ++v10, v9[2] = v10, !v12[v11]))
    {
      if (v10)
        v13 = **(_QWORD **)v9;
      else
        v13 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a4 + 16))(a4, *(_QWORD *)(a3 + 72));
      v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 24))(v13);
      AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<AddrObjGoogle::protobuf::RepeatedPtrField<AddrObjGoogle::protobuf::MessageLite>::TypeHandler>(v9, v14);
    }
  }
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::MutableRawRepeatedField(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  char v17;
  std::string v18[2];

  if (*(_DWORD *)(a3 + 48) != 3)
    sub_188813FAC(*(_QWORD *)(a1 + 8), a3, "\"MutableRawRepeatedField\"", "Field is singular; the method requires a repeated field.");
  if (AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 44)] != a4)
    sub_1888147F8(*(_QWORD *)(a1 + 8), a3, "MutableRawRepeatedField", a4);
  if ((a5 & 0x80000000) == 0 && *(_DWORD *)(*(_QWORD *)(a3 + 96) + 40) != a5)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 1110);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (field->options().ctype()) == (ctype): ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, "subtype mismatch");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  if (a6 && *(_QWORD *)(a3 + 72) != a6)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/generated_message_reflection.cc", 1112);
    v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (field->message_type()) == (desc): ");
    v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "wrong submessage type");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (AddrObjGoogle::protobuf::internal::LogMessage *)v15);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  if (*(_BYTE *)(a3 + 52))
    return AddrObjGoogle::protobuf::internal::ExtensionSet::MutableRawRepeatedField((AddrObjGoogle::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *(_DWORD *)(a3 + 40));
  else
    return a2
         + *(int *)(*(_QWORD *)(a1 + 24)
                  + 4 * (int)(-286331153 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 56) + 48)) >> 3)));
}

void sub_188818FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::FindKnownExtensionByName(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_DWORD *)(a1 + 40) == -1)
    return 0;
  result = AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByName(*(_QWORD *)(a1 + 48), a2);
  if (result)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (*(_QWORD *)(result + 56) == v5)
      return result;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 8);
  }
  if (!*(_BYTE *)(*(_QWORD *)(v5 + 32) + 64))
    return 0;
  result = AddrObjGoogle::protobuf::DescriptorPool::FindMessageTypeByName(*(_QWORD *)(a1 + 48), a2);
  if (!result)
    return result;
  v6 = result;
  v7 = *(unsigned int *)(result + 104);
  if ((int)v7 < 1)
    return 0;
  for (result = *(_QWORD *)(result + 112);
        *(_QWORD *)(result + 56) != *(_QWORD *)(a1 + 8)
     || *(_DWORD *)(result + 44) != 11
     || *(_DWORD *)(result + 48) != 1
     || *(_QWORD *)(result + 72) != v6;
        result += 120)
  {
    if (!--v7)
      return 0;
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::internal::GeneratedMessageReflection::FindKnownExtensionByNumber(AddrObjGoogle::protobuf::DescriptorPool **this, uint64_t a2)
{
  if (*((_DWORD *)this + 10) == -1)
    return 0;
  else
    return AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByNumber(this[6], this[1], a2);
}

uint64_t sub_1888190B0(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  BOOL v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t *v59;
  int64_t v60;
  int64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  int v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t *v87;
  uint64_t v89;
  uint64_t v90;
  int v91;

  v7 = (uint64_t *)result;
LABEL_2:
  v8 = v7;
  while (2)
  {
    v7 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = a2 - v8;
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v38 = *(a2 - 1);
        v39 = *v8;
        if (*(_DWORD *)(v38 + 40) < *(_DWORD *)(*v8 + 40))
        {
          *v8 = v38;
          *(a2 - 1) = v39;
        }
        return result;
      case 3uLL:
        return (uint64_t)sub_1888197A4(v8, v8 + 1, a2 - 1);
      case 4uLL:
        return (uint64_t)sub_188819A14(v8, v8 + 1, v8 + 2, a2 - 1);
      case 5uLL:
        v40 = v8 + 1;
        v41 = v8 + 2;
        v42 = v8 + 3;
        result = (uint64_t)sub_188819A14(v8, v8 + 1, v8 + 2, v8 + 3);
        v43 = *(a2 - 1);
        v44 = v8[3];
        if (*(_DWORD *)(v43 + 40) < *(_DWORD *)(v44 + 40))
        {
          *v42 = v43;
          *(a2 - 1) = v44;
          v45 = *v42;
          v46 = *v41;
          v47 = *(_DWORD *)(*v42 + 40);
          if (v47 < *(_DWORD *)(*v41 + 40))
          {
            *v41 = v45;
            *v42 = v46;
            v48 = *v40;
            if (v47 < *(_DWORD *)(*v40 + 40))
            {
              v8[1] = v45;
              v8[2] = v48;
              v49 = *v8;
              if (v47 < *(_DWORD *)(*v8 + 40))
              {
                *v8 = v45;
                v8[1] = v49;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 191)
        {
          v50 = v8 + 1;
          v52 = v8 == a2 || v50 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v52)
            {
              v53 = 0;
              v54 = v8;
              do
              {
                v56 = *v54;
                v55 = v54[1];
                v54 = v50;
                v57 = *(_DWORD *)(v55 + 40);
                if (v57 < *(_DWORD *)(v56 + 40))
                {
                  v58 = v53;
                  while (1)
                  {
                    *(uint64_t *)((char *)v8 + v58 + 8) = v56;
                    if (!v58)
                      break;
                    v56 = *(uint64_t *)((char *)v8 + v58 - 8);
                    v58 -= 8;
                    if (v57 >= *(_DWORD *)(v56 + 40))
                    {
                      v59 = (uint64_t *)((char *)v8 + v58 + 8);
                      goto LABEL_80;
                    }
                  }
                  v59 = v8;
LABEL_80:
                  *v59 = v55;
                }
                v50 = v54 + 1;
                v53 += 8;
              }
              while (v54 + 1 != a2);
            }
          }
          else if (!v52)
          {
            do
            {
              v90 = *v7;
              v89 = v7[1];
              v7 = v50;
              v91 = *(_DWORD *)(v89 + 40);
              if (v91 < *(_DWORD *)(v90 + 40))
              {
                do
                {
                  *v50 = v90;
                  v90 = *(v50 - 2);
                  --v50;
                }
                while (v91 < *(_DWORD *)(v90 + 40));
                *v50 = v89;
              }
              v50 = v7 + 1;
            }
            while (v7 + 1 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v8 != a2)
          {
            v60 = (v10 - 2) >> 1;
            v61 = v60;
            do
            {
              v62 = v61;
              if (v60 >= v61)
              {
                v63 = (2 * v61) | 1;
                v64 = &v8[v63];
                v65 = *v64;
                if (2 * v62 + 2 < (uint64_t)v10)
                {
                  result = *(unsigned int *)(v65 + 40);
                  if ((int)result < *(_DWORD *)(v64[1] + 40))
                  {
                    v65 = v64[1];
                    ++v64;
                    v63 = 2 * v62 + 2;
                  }
                }
                v66 = &v8[v62];
                v67 = *v66;
                v68 = *(_DWORD *)(*v66 + 40);
                if (*(_DWORD *)(v65 + 40) >= v68)
                {
                  do
                  {
                    v69 = v64;
                    *v66 = v65;
                    if (v60 < v63)
                      break;
                    result = (2 * v63) | 1;
                    v64 = &v8[result];
                    v70 = 2 * v63 + 2;
                    v65 = *v64;
                    if (v70 < (uint64_t)v10 && *(_DWORD *)(v65 + 40) < *(_DWORD *)(v64[1] + 40))
                    {
                      v65 = v64[1];
                      ++v64;
                      result = v70;
                    }
                    v66 = v69;
                    v63 = result;
                  }
                  while (*(_DWORD *)(v65 + 40) >= v68);
                  *v69 = v67;
                }
              }
              v61 = v62 - 1;
            }
            while (v62);
            v71 = (unint64_t)v9 >> 3;
            do
            {
              v72 = 0;
              v73 = *v8;
              v74 = v8;
              do
              {
                v75 = &v74[v72];
                v78 = v75[1];
                v76 = v75 + 1;
                v77 = v78;
                v79 = (2 * v72) | 1;
                v80 = 2 * v72 + 2;
                if (v80 < v71)
                {
                  result = *(unsigned int *)(v77 + 40);
                  if ((int)result < *(_DWORD *)(v76[1] + 40))
                  {
                    v77 = v76[1];
                    ++v76;
                    v79 = v80;
                  }
                }
                *v74 = v77;
                v74 = v76;
                v72 = v79;
              }
              while (v79 <= (uint64_t)((unint64_t)(v71 - 2) >> 1));
              if (v76 == --a2)
              {
                *v76 = v73;
              }
              else
              {
                *v76 = *a2;
                *a2 = v73;
                v81 = (char *)v76 - (char *)v8 + 8;
                if (v81 >= 9)
                {
                  v82 = (((unint64_t)v81 >> 3) - 2) >> 1;
                  v83 = &v8[v82];
                  v84 = *v83;
                  v85 = *v76;
                  v86 = *(_DWORD *)(*v76 + 40);
                  if (*(_DWORD *)(*v83 + 40) < v86)
                  {
                    do
                    {
                      v87 = v83;
                      *v76 = v84;
                      if (!v82)
                        break;
                      v82 = (v82 - 1) >> 1;
                      v83 = &v8[v82];
                      v84 = *v83;
                      v76 = v87;
                    }
                    while (*(_DWORD *)(*v83 + 40) < v86);
                    *v87 = v85;
                  }
                }
              }
            }
            while (v71-- > 2);
          }
          return result;
        }
        v11 = v10 >> 1;
        v12 = &v8[v10 >> 1];
        if ((unint64_t)v9 < 0x401)
        {
          result = (uint64_t)sub_1888197A4(&v7[v10 >> 1], v7, a2 - 1);
        }
        else
        {
          sub_1888197A4(v7, &v7[v10 >> 1], a2 - 1);
          sub_1888197A4(v7 + 1, v12 - 1, a2 - 2);
          sub_1888197A4(v7 + 2, &v7[v11 + 1], a2 - 3);
          result = (uint64_t)sub_1888197A4(v12 - 1, v12, &v7[v11 + 1]);
          v13 = *v7;
          *v7 = *v12;
          *v12 = v13;
        }
        --a3;
        v14 = *v7;
        if ((a4 & 1) == 0)
        {
          v15 = *(_DWORD *)(v14 + 40);
          if (*(_DWORD *)(*(v7 - 1) + 40) < v15)
            goto LABEL_12;
          if (v15 >= *(_DWORD *)(*(a2 - 1) + 40))
          {
            v30 = v7 + 1;
            do
            {
              v8 = v30;
              if (v30 >= a2)
                break;
              ++v30;
            }
            while (v15 >= *(_DWORD *)(*v8 + 40));
          }
          else
          {
            v8 = v7;
            do
            {
              v29 = v8[1];
              ++v8;
            }
            while (v15 >= *(_DWORD *)(v29 + 40));
          }
          v31 = a2;
          if (v8 < a2)
          {
            v31 = a2;
            do
              v32 = *--v31;
            while (v15 < *(_DWORD *)(v32 + 40));
          }
          if (v8 < v31)
          {
            v33 = *v8;
            v34 = *v31;
            do
            {
              *v8 = v34;
              *v31 = v33;
              do
              {
                v35 = v8[1];
                ++v8;
                v33 = v35;
              }
              while (v15 >= *(_DWORD *)(v35 + 40));
              do
              {
                v36 = *--v31;
                v34 = v36;
              }
              while (v15 < *(_DWORD *)(v36 + 40));
            }
            while (v8 < v31);
          }
          v37 = v8 - 1;
          if (v8 - 1 != v7)
            *v7 = *v37;
          a4 = 0;
          *v37 = v14;
          continue;
        }
        v15 = *(_DWORD *)(v14 + 40);
LABEL_12:
        v16 = 0;
        do
          v17 = v7[++v16];
        while (*(_DWORD *)(v17 + 40) < v15);
        v18 = &v7[v16];
        v19 = a2;
        if (v16 == 1)
        {
          v19 = a2;
          do
          {
            if (v18 >= v19)
              break;
            v21 = *--v19;
          }
          while (*(_DWORD *)(v21 + 40) >= v15);
        }
        else
        {
          do
            v20 = *--v19;
          while (*(_DWORD *)(v20 + 40) >= v15);
        }
        if (v18 >= v19)
        {
          v27 = v18 - 1;
        }
        else
        {
          v22 = *v19;
          v23 = &v7[v16];
          v24 = v19;
          do
          {
            *v23 = v22;
            *v24 = v17;
            do
            {
              v25 = v23[1];
              ++v23;
              v17 = v25;
            }
            while (*(_DWORD *)(v25 + 40) < v15);
            do
            {
              v26 = *--v24;
              v22 = v26;
            }
            while (*(_DWORD *)(v26 + 40) >= v15);
          }
          while (v23 < v24);
          v27 = v23 - 1;
        }
        if (v27 != v7)
          *v7 = *v27;
        *v27 = v14;
        if (v18 < v19)
        {
LABEL_33:
          result = sub_1888190B0(v7, v27, a3, a4 & 1);
          a4 = 0;
          v8 = v27 + 1;
          continue;
        }
        v28 = sub_18881982C(v7, v27);
        v8 = v27 + 1;
        result = sub_18881982C(v27 + 1, a2);
        if (!(_DWORD)result)
        {
          if (v28)
            continue;
          goto LABEL_33;
        }
        a2 = v27;
        if (!v28)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t *sub_1888197A4(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v3 = *a2;
  v4 = *result;
  v5 = *(_DWORD *)(*a2 + 40);
  v6 = *(_DWORD *)(*result + 40);
  v7 = *a3;
  v8 = *(_DWORD *)(*a3 + 40);
  if (v5 >= v6)
  {
    if (v8 < v5)
    {
      *a2 = v7;
      *a3 = v3;
      v9 = *result;
      if (*(_DWORD *)(*a2 + 40) < *(_DWORD *)(*result + 40))
      {
        *result = *a2;
        *a2 = v9;
      }
    }
  }
  else
  {
    if (v8 >= v5)
    {
      *result = v3;
      *a2 = v4;
      if (*(_DWORD *)(*a3 + 40) >= v6)
        return result;
      *a2 = *a3;
    }
    else
    {
      *result = v7;
    }
    *a3 = v4;
  }
  return result;
}

BOOL sub_18881982C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = *a1;
      if (*(_DWORD *)(v6 + 40) < *(_DWORD *)(*a1 + 40))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return result;
    case 3:
      sub_1888197A4(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_188819A14(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      v18 = a1 + 1;
      v19 = a1 + 2;
      v20 = a1 + 3;
      sub_188819A14(a1, a1 + 1, a1 + 2, a1 + 3);
      v21 = *(a2 - 1);
      v22 = a1[3];
      if (*(_DWORD *)(v21 + 40) < *(_DWORD *)(v22 + 40))
      {
        *v20 = v21;
        *(a2 - 1) = v22;
        v23 = *v20;
        v24 = *v19;
        v25 = *(_DWORD *)(*v20 + 40);
        if (v25 < *(_DWORD *)(*v19 + 40))
        {
          *v19 = v23;
          *v20 = v24;
          v26 = *v18;
          if (v25 < *(_DWORD *)(*v18 + 40))
          {
            a1[1] = v23;
            a1[2] = v26;
            v27 = *a1;
            if (v25 < *(_DWORD *)(*a1 + 40))
            {
              *a1 = v23;
              a1[1] = v27;
            }
          }
        }
      }
      return 1;
    default:
      v8 = a1 + 2;
      sub_1888197A4(a1, a1 + 1, a1 + 2);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 24;
      break;
  }
  while (1)
  {
    v12 = *v9;
    v13 = *v8;
    v14 = *(_DWORD *)(*v9 + 40);
    if (v14 < *(_DWORD *)(*v8 + 40))
    {
      v15 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v15) = v13;
        v16 = v15 - 8;
        if (v15 == 8)
          break;
        v13 = *(uint64_t *)((char *)a1 + v15 - 16);
        v15 -= 8;
        if (v14 >= *(_DWORD *)(v13 + 40))
        {
          v17 = (uint64_t *)((char *)a1 + v16);
          goto LABEL_13;
        }
      }
      v17 = a1;
LABEL_13:
      *v17 = v12;
      if (++v10 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v11 += 8;
    if (++v9 == a2)
      return 1;
  }
}

uint64_t *sub_188819A14(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1888197A4(a1, a2, a3);
  v9 = *a3;
  if (*(_DWORD *)(*a4 + 40) < *(_DWORD *)(*a3 + 40))
  {
    *a3 = *a4;
    *a4 = v9;
    v10 = *a2;
    if (*(_DWORD *)(*a3 + 40) < *(_DWORD *)(*a2 + 40))
    {
      *a2 = *a3;
      *a3 = v10;
      v11 = *a1;
      if (*(_DWORD *)(*a2 + 40) < *(_DWORD *)(*a1 + 40))
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

unsigned __int8 *AddrObjGoogle::protobuf::MessageLite::SerializeWithCachedSizesToArray(AddrObjGoogle::protobuf::MessageLite *this, unsigned __int8 *a2)
{
  int v4;
  std::string *v5;
  char v7;
  std::string v8[2];
  _BYTE v9[32];
  _BYTE v10[32];

  v4 = (*(uint64_t (**)(AddrObjGoogle::protobuf::MessageLite *))(*(_QWORD *)this + 96))(this);
  AddrObjGoogle::protobuf::io::ArrayOutputStream::ArrayOutputStream((uint64_t)v10, a2, v4, -1);
  AddrObjGoogle::protobuf::io::CodedOutputStream::CodedOutputStream((uint64_t)v9, (uint64_t)v10);
  (*(void (**)(AddrObjGoogle::protobuf::MessageLite *, _BYTE *))(*(_QWORD *)this + 80))(this, v9);
  if (v9[24])
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/message_lite.cc", 225);
    v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !coded_out.HadError(): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (AddrObjGoogle::protobuf::internal::LogMessage *)v5);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::io::CodedOutputStream::~CodedOutputStream((AddrObjGoogle::protobuf::io::CodedOutputStream *)v9);
  AddrObjGoogle::protobuf::io::ArrayOutputStream::~ArrayOutputStream((AddrObjGoogle::protobuf::io::ArrayOutputStream *)v10);
  return &a2[v4];
}

void sub_188819B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  void *v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, void *);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  AddrObjGoogle::protobuf::io::CodedOutputStream::~CodedOutputStream((AddrObjGoogle::protobuf::io::CodedOutputStream *)va1);
  AddrObjGoogle::protobuf::io::ArrayOutputStream::~ArrayOutputStream((AddrObjGoogle::protobuf::io::ArrayOutputStream *)(v3 - 64));
  _Unwind_Resume(a1);
}

void sub_188819BB4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  const std::string::value_type *p_p;
  std::string::size_type v5;
  const std::string::value_type *v6;
  std::string::size_type v7;
  void *__p;
  std::string::size_type v9;
  unsigned __int8 v10;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  std::string::append(a2, "Can't ");
  std::string::append(a2, "parse");
  std::string::append(a2, " message of type \"");
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 16))(&__p, a1);
  if ((v10 & 0x80u) == 0)
    p_p = (const std::string::value_type *)&__p;
  else
    p_p = (const std::string::value_type *)__p;
  if ((v10 & 0x80u) == 0)
    v5 = v10;
  else
    v5 = v9;
  std::string::append(a2, p_p, v5);
  if ((char)v10 < 0)
    operator delete(__p);
  std::string::append(a2, "\" because it is missing required fields: ");
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)a1 + 48))(&__p, a1);
  if ((v10 & 0x80u) == 0)
    v6 = (const std::string::value_type *)&__p;
  else
    v6 = (const std::string::value_type *)__p;
  if ((v10 & 0x80u) == 0)
    v7 = v10;
  else
    v7 = v9;
  std::string::append(a2, v6, v7);
  if ((char)v10 < 0)
    operator delete(__p);
}

void sub_188819CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

void sub_188819CFC(int a1, int a2, int a3)
{
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  char v10;
  std::string v11[2];

  if (a1 != a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/message_lite.cc", 64);
    v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): ");
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v5, "Protocol message was modified concurrently during serialization.");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (a3 != a1)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/message_lite.cc", 66);
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): ");
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v7, "Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/message_lite.cc", 70);
  v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "This shouldn't be called if all the sizes are equal.");
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (AddrObjGoogle::protobuf::internal::LogMessage *)v9);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
}

void sub_188819E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::MessageLite::AppendToString(uint64_t a1, std::string *a2)
{
  AddrObjGoogle::protobuf::MessageLite::AppendPartialToString(a1, a2);
  return 1;
}

uint64_t AddrObjGoogle::protobuf::MessageLite::SerializeAsString@<X0>(AddrObjGoogle::protobuf::MessageLite *this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return AddrObjGoogle::protobuf::MessageLite::AppendPartialToString((uint64_t)this, a2);
}

void sub_188819E6C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::AppendToList(_QWORD *a1, const AddrObjGoogle::protobuf::Descriptor *a2, AddrObjGoogle::protobuf::DescriptorPool *a3, void **a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t ExtensionByNumber;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  BOOL v34;

  v4 = a1 + 1;
  v5 = (_QWORD *)*a1;
  if ((_QWORD *)*a1 != a1 + 1)
  {
    v9 = (uint64_t)(a4 + 2);
    while (!*((_BYTE *)v5 + 49))
    {
      if ((*((_BYTE *)v5 + 50) & 1) == 0)
        goto LABEL_7;
LABEL_39:
      v32 = (_QWORD *)v5[1];
      if (v32)
      {
        do
        {
          v33 = v32;
          v32 = (_QWORD *)*v32;
        }
        while (v32);
      }
      else
      {
        do
        {
          v33 = (_QWORD *)v5[2];
          v34 = *v33 == (_QWORD)v5;
          v5 = v33;
        }
        while (!v34);
      }
      v5 = v33;
      if (v33 == v4)
        return;
    }
    if ((int)AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::GetSize((AddrObjGoogle::protobuf::internal::ExtensionSet::Extension *)(v5 + 5)) <= 0)
      goto LABEL_39;
LABEL_7:
    v10 = v5[7];
    if (v10)
    {
      v12 = a4[1];
      v11 = (unint64_t)a4[2];
      if ((unint64_t)v12 < v11)
      {
        *v12 = v10;
        v13 = v12 + 1;
LABEL_38:
        a4[1] = v13;
        goto LABEL_39;
      }
      v18 = ((char *)v12 - (_BYTE *)*a4) >> 3;
      if ((unint64_t)(v18 + 1) >> 61)
        goto LABEL_46;
      v19 = v11 - (_QWORD)*a4;
      v20 = v19 >> 2;
      if (v19 >> 2 <= (unint64_t)(v18 + 1))
        v20 = v18 + 1;
      if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8)
        v21 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v21 = v20;
      if (v21)
      {
        v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v9, v21);
        v10 = v5[7];
      }
      else
      {
        v22 = 0;
      }
      v26 = &v22[8 * v18];
      *(_QWORD *)v26 = v10;
      v13 = v26 + 8;
      v28 = (char *)*a4;
      v27 = (char *)a4[1];
      if (v27 != *a4)
      {
        do
        {
          v29 = *((_QWORD *)v27 - 1);
          v27 -= 8;
          *((_QWORD *)v26 - 1) = v29;
          v26 -= 8;
        }
        while (v27 != v28);
LABEL_35:
        v27 = (char *)*a4;
      }
    }
    else
    {
      ExtensionByNumber = AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByNumber(a3, a2, *((unsigned int *)v5 + 8));
      v15 = ExtensionByNumber;
      v17 = (uint64_t *)a4[1];
      v16 = (unint64_t)a4[2];
      if ((unint64_t)v17 < v16)
      {
        *v17 = ExtensionByNumber;
        v13 = v17 + 1;
        goto LABEL_38;
      }
      v23 = ((char *)v17 - (_BYTE *)*a4) >> 3;
      if ((unint64_t)(v23 + 1) >> 61)
LABEL_46:
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v24 = v16 - (_QWORD)*a4;
      v25 = v24 >> 2;
      if (v24 >> 2 <= (unint64_t)(v23 + 1))
        v25 = v23 + 1;
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF8)
        v21 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v21 = v25;
      if (v21)
        v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v9, v21);
      else
        v22 = 0;
      v26 = &v22[8 * v23];
      *(_QWORD *)v26 = v15;
      v13 = v26 + 8;
      v30 = (char *)*a4;
      v27 = (char *)a4[1];
      if (v27 != *a4)
      {
        do
        {
          v31 = *((_QWORD *)v27 - 1);
          v27 -= 8;
          *((_QWORD *)v26 - 1) = v31;
          v26 -= 8;
        }
        while (v27 != v30);
        goto LABEL_35;
      }
    }
    *a4 = v26;
    a4[1] = v13;
    a4[2] = &v22[8 * v21];
    if (v27)
      operator delete(v27);
    goto LABEL_38;
  }
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::GetMessage(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  v6 = *(_QWORD *)(a1 + 8);
  v4 = a1 + 8;
  v5 = v6;
  if (!v6)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16))(a4, a3);
  v7 = v4;
  do
  {
    v8 = *(_DWORD *)(v5 + 32);
    v9 = v8 < a2;
    if (v8 >= a2)
      v10 = (uint64_t *)v5;
    else
      v10 = (uint64_t *)(v5 + 8);
    if (!v9)
      v7 = v5;
    v5 = *v10;
  }
  while (*v10);
  if (v7 == v4 || *(_DWORD *)(v7 + 32) > a2 || (*(_BYTE *)(v7 + 50) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16))(a4, a3);
  v11 = *(_QWORD *)(v7 + 40);
  if ((*(_BYTE *)(v7 + 50) & 0x10) == 0)
    return *(_QWORD *)(v7 + 40);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16))(a4, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 24))(v11, v13);
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::MutableMessage(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v14;

  v14 = 0;
  if (AddrObjGoogle::protobuf::internal::ExtensionSet::MaybeNewExtension(a1, *(_DWORD *)(a2 + 40), (uint64_t *)a2, &v14))
  {
    v5 = v14;
    *(_BYTE *)(v14 + 8) = *(_DWORD *)(a2 + 44);
    *(_BYTE *)(v5 + 9) = 0;
    *(_BYTE *)(v5 + 11) = 0;
    v6 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a3 + 16))(a3, *(_QWORD *)(a2 + 72));
    *(_BYTE *)(v14 + 10) &= 0xFu;
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
    *(_QWORD *)v14 = v7;
    v8 = v14;
    *(_BYTE *)(v14 + 10) &= 0xF0u;
    return *(_QWORD *)v8;
  }
  else
  {
    v10 = (uint64_t *)v14;
    v11 = *(_BYTE *)(v14 + 10);
    *(_BYTE *)(v14 + 10) = v11 & 0xF0;
    v9 = *v10;
    if ((v11 & 0x10) != 0)
    {
      v12 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a3 + 16))(a3, *(_QWORD *)(a2 + 72));
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 32))(v9, v12);
    }
  }
  return v9;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::ReleaseMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return 0;
  v6 = *(_DWORD *)(a2 + 40);
  v7 = a1 + 8;
  do
  {
    v8 = *(_DWORD *)(v3 + 32);
    v9 = v8 < v6;
    if (v8 >= v6)
      v10 = (uint64_t *)v3;
    else
      v10 = (uint64_t *)(v3 + 8);
    if (!v9)
      v7 = v3;
    v3 = *v10;
  }
  while (*v10);
  if (v7 == a1 + 8 || v6 < *(_DWORD *)(v7 + 32))
    return 0;
  v11 = *(_QWORD *)(v7 + 40);
  if ((*(_BYTE *)(v7 + 50) & 0x10) != 0)
  {
    v13 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a3 + 16))(a3, *(_QWORD *)(a2 + 72));
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 48))(v11, v13);
    v14 = *(_QWORD *)(v7 + 40);
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  v15 = *(_DWORD *)(a2 + 40);
  std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>(a1, &v15);
  return v11;
}

void AddrObjGoogle::protobuf::internal::ExtensionSet::AddMessage(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int **v5;
  uint64_t v6;
  int **v7;
  int *v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  std::string *v13;
  char v14;
  std::string v15[2];
  int **v16;

  v16 = 0;
  if (AddrObjGoogle::protobuf::internal::ExtensionSet::MaybeNewExtension(a1, *(_DWORD *)(a2 + 40), (uint64_t *)a2, &v16))
  {
    v5 = v16;
    *((_BYTE *)v16 + 8) = *(_DWORD *)(a2 + 44);
    *((_BYTE *)v5 + 9) = 1;
    v6 = operator new();
    *(_QWORD *)v6 = 0;
    *(_QWORD *)(v6 + 8) = 0;
    *(_DWORD *)(v6 + 16) = 0;
    *v16 = (int *)v6;
  }
  v7 = v16;
  v8 = *v16;
  v9 = (*v16)[2];
  if (v9 < (*v16)[3])
  {
    v10 = *(uint64_t **)v8;
    v8[2] = v9 + 1;
    if (v10[v9])
      return;
    v8 = *v7;
    v9 = (*v7)[2];
  }
  if (v9)
  {
    v11 = **(_QWORD **)v8;
  }
  else
  {
    v11 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a3 + 16))(a3, *(_QWORD *)(a2 + 72));
    if (!v11)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set_heavy.cc", 207);
      v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: prototype != NULL: ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      __break(1u);
      return;
    }
  }
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11);
  AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<AddrObjGoogle::protobuf::RepeatedPtrField<AddrObjGoogle::protobuf::MessageLite>::TypeHandler>(*v16, v12);
}

void sub_18881A45C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::internal::DescriptorPoolExtensionFinder::Find(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ExtensionByNumber;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  char v14;
  std::string v15[2];

  ExtensionByNumber = AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByNumber(*(AddrObjGoogle::protobuf::DescriptorPool **)(a1 + 8), *(const AddrObjGoogle::protobuf::Descriptor **)(a1 + 24), a2);
  v6 = ExtensionByNumber;
  if (ExtensionByNumber)
  {
    v7 = *(unsigned int *)(ExtensionByNumber + 44);
    *(_BYTE *)a3 = v7;
    *(_BYTE *)(a3 + 1) = *(_DWORD *)(ExtensionByNumber + 48) == 3;
    *(_BYTE *)(a3 + 2) = *(_BYTE *)(*(_QWORD *)(ExtensionByNumber + 96) + 44);
    *(_QWORD *)(a3 + 24) = ExtensionByNumber;
    v8 = AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[v7];
    if (v8 == 8)
    {
      *(_QWORD *)(a3 + 8) = sub_18881A5A4;
      *(_QWORD *)(a3 + 16) = *(_QWORD *)(ExtensionByNumber + 80);
    }
    else if (v8 == 10)
    {
      v9 = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a1 + 16) + 16))(*(_QWORD *)(a1 + 16), *(_QWORD *)(ExtensionByNumber + 72));
      *(_QWORD *)(a3 + 8) = v9;
      if (!v9)
      {
        AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/extension_set_heavy.cc", 235);
        v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: output->message_prototype != NULL: ");
        v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "Extension factory's GetPrototype() returned NULL for extension: ");
        v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, *(const std::string::value_type **)(v6 + 8));
        AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (AddrObjGoogle::protobuf::internal::LogMessage *)v12);
        AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      }
    }
  }
  return v6 != 0;
}

void sub_18881A58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_18881A5A4(AddrObjGoogle::protobuf::EnumDescriptor *a1, int a2)
{
  return AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(a1, a2) != 0;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelf(AddrObjGoogle::protobuf::internal::ExtensionSet *this)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t **v3;
  int v4;
  uint64_t *v5;
  uint64_t **v6;
  BOOL v7;

  v1 = (32 * *((_DWORD *)this + 4));
  v2 = *(uint64_t ***)this;
  v3 = (uint64_t **)((char *)this + 8);
  if (*(AddrObjGoogle::protobuf::internal::ExtensionSet **)this != (AddrObjGoogle::protobuf::internal::ExtensionSet *)((char *)this + 8))
  {
    do
    {
      v4 = AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelf(v2 + 5);
      v5 = v2[1];
      if (v5)
      {
        do
        {
          v6 = (uint64_t **)v5;
          v5 = (uint64_t *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (uint64_t **)v2[2];
          v7 = *v6 == (uint64_t *)v2;
          v2 = v6;
        }
        while (!v7);
      }
      v1 = (v4 + v1);
      v2 = v6;
    }
    while (v6 != v3);
  }
  return v1;
}

uint64_t AddrObjGoogle::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelf(uint64_t **this)
{
  int v1;
  int v2;
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((_BYTE *)this + 9))
  {
    switch(*((_BYTE *)this + 8))
    {
      case 1:
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        if (!**this)
          goto LABEL_18;
        v2 = 8 * *((_DWORD *)*this + 3);
        goto LABEL_17;
      case 2:
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        if (!**this)
          goto LABEL_18;
        v2 = 4 * *((_DWORD *)*this + 3);
        goto LABEL_17;
      case 8:
        if (**this)
        {
          v2 = *((_DWORD *)*this + 3);
LABEL_17:
          result = (v2 + 16);
        }
        else
        {
LABEL_18:
          result = 16;
        }
        break;
      case 9:
      case 0xC:
        v6 = *this;
        if (**this)
          v7 = 8 * *((_DWORD *)v6 + 4);
        else
          v7 = 0;
        if (*((int *)v6 + 3) >= 1)
        {
          v9 = 0;
          do
            v7 += AddrObjGoogle::protobuf::internal::StringSpaceUsedExcludingSelf(*(_QWORD *)(*v6 + 8 * v9++)) + 24;
          while (v9 < *((int *)v6 + 3));
        }
        goto LABEL_32;
      case 0xA:
      case 0xB:
        v8 = *this;
        if (**this)
          v7 = 8 * *((_DWORD *)v8 + 4);
        else
          v7 = 0;
        if (*((int *)v8 + 3) >= 1)
        {
          v10 = 0;
          do
          {
            v7 += (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*v8 + 8 * v10) + 128))(*(_QWORD *)(*v8 + 8 * v10));
            ++v10;
          }
          while (v10 < *((int *)v8 + 3));
        }
LABEL_32:
        result = (v7 + 24);
        break;
      default:
        return 0;
    }
  }
  else if (v1 == 10)
  {
    v4 = **this;
    if ((*((_BYTE *)this + 10) & 0x10) != 0)
      v5 = *(uint64_t (**)(void))(v4 + 72);
    else
      v5 = *(uint64_t (**)(void))(v4 + 128);
    return v5();
  }
  else if (v1 == 9)
  {
    return AddrObjGoogle::protobuf::internal::StringSpaceUsedExcludingSelf((unint64_t)*this) + 24;
  }
  else
  {
    return 0;
  }
  return result;
}

void AddrObjGoogle::protobuf::internal::DescriptorPoolExtensionFinder::~DescriptorPoolExtensionFinder(AddrObjGoogle::protobuf::internal::DescriptorPoolExtensionFinder *this)
{
  addr_obj::Localization::getDisplayLanguage(this);
  JUMPOUT(0x18D76437CLL);
}

_BYTE *AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32SignExtendedToArray(AddrObjGoogle::protobuf::io::CodedOutputStream *this, _BYTE *a2, unsigned __int8 *a3)
{
  if ((this & 0x80000000) != 0)
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64ToArray((int)this, a2, a3);
  if (this > 0x7F)
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(this, a2, a3);
  *a2 = (_BYTE)this;
  return a2 + 1;
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::~Tables(AddrObjGoogle::protobuf::DescriptorPool::Tables *this)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void **v19;

  v2 = (uint64_t *)*((_QWORD *)this + 16);
  v3 = (uint64_t *)*((_QWORD *)this + 17);
  if (v2 != v3)
  {
    do
    {
      v5 = *v2++;
      v4 = v5;
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    }
    while (v2 != v3);
    v2 = (uint64_t *)*((_QWORD *)this + 16);
  }
  *((_QWORD *)this + 17) = v2;
  v6 = *((_QWORD *)this + 22);
  if (*((_QWORD *)this + 23) != v6)
  {
    v7 = 0;
    do
    {
      operator delete(*(void **)(v6 + 8 * v7++));
      v6 = *((_QWORD *)this + 22);
    }
    while (v7 < (*((_QWORD *)this + 23) - v6) >> 3);
  }
  AddrObjGoogle::protobuf::STLDeleteContainerPointers<std::__wrap_iter<std::string **>>(*((_QWORD *)this + 13), *((uint64_t **)this + 14));
  *((_QWORD *)this + 14) = *((_QWORD *)this + 13);
  AddrObjGoogle::protobuf::STLDeleteContainerPointers<std::__wrap_iter<AddrObjGoogle::protobuf::FileDescriptorTables **>>(*((AddrObjGoogle::protobuf::FileDescriptorTables **)this + 19), *((AddrObjGoogle::protobuf::FileDescriptorTables **)this + 20));
  *((_QWORD *)this + 20) = *((_QWORD *)this + 19);
  v8 = (void *)*((_QWORD *)this + 47);
  if (v8)
  {
    *((_QWORD *)this + 48) = v8;
    operator delete(v8);
  }
  v9 = (void *)*((_QWORD *)this + 44);
  if (v9)
  {
    *((_QWORD *)this + 45) = v9;
    operator delete(v9);
  }
  v10 = (void *)*((_QWORD *)this + 41);
  if (v10)
  {
    *((_QWORD *)this + 42) = v10;
    operator delete(v10);
  }
  v11 = (void *)*((_QWORD *)this + 38);
  if (v11)
  {
    *((_QWORD *)this + 39) = v11;
    operator delete(v11);
  }
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)this + 280, *((_QWORD **)this + 36));
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 240);
  v12 = (_QWORD *)*((_QWORD *)this + 27);
  if (v12)
  {
    do
    {
      v13 = (_QWORD *)*v12;
      operator delete(v12);
      v12 = v13;
    }
    while (v13);
  }
  v14 = (void *)*((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v14)
    operator delete(v14);
  v15 = (void *)*((_QWORD *)this + 22);
  if (v15)
  {
    *((_QWORD *)this + 23) = v15;
    operator delete(v15);
  }
  v16 = (void *)*((_QWORD *)this + 19);
  if (v16)
  {
    *((_QWORD *)this + 20) = v16;
    operator delete(v16);
  }
  v17 = (void *)*((_QWORD *)this + 16);
  if (v17)
  {
    *((_QWORD *)this + 17) = v17;
    operator delete(v17);
  }
  v18 = (void *)*((_QWORD *)this + 13);
  if (v18)
  {
    *((_QWORD *)this + 14) = v18;
    operator delete(v18);
  }
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 64);
  std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)this + 24);
  v19 = (void **)this;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v19);
}

void AddrObjGoogle::protobuf::FileDescriptorTables::~FileDescriptorTables(AddrObjGoogle::protobuf::FileDescriptorTables *this)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  void *v16;

  v2 = (_QWORD *)*((_QWORD *)this + 22);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = (void *)*((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    operator delete(v4);
  v5 = (_QWORD *)*((_QWORD *)this + 17);
  if (v5)
  {
    do
    {
      v6 = (_QWORD *)*v5;
      operator delete(v5);
      v5 = v6;
    }
    while (v6);
  }
  v7 = (void *)*((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v7)
    operator delete(v7);
  v8 = (_QWORD *)*((_QWORD *)this + 12);
  if (v8)
  {
    do
    {
      v9 = (_QWORD *)*v8;
      operator delete(v8);
      v8 = v9;
    }
    while (v9);
  }
  v10 = (void *)*((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v10)
    operator delete(v10);
  v11 = (_QWORD *)*((_QWORD *)this + 7);
  if (v11)
  {
    do
    {
      v12 = (_QWORD *)*v11;
      operator delete(v11);
      v11 = v12;
    }
    while (v12);
  }
  v13 = (void *)*((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v13)
    operator delete(v13);
  v14 = (_QWORD *)*((_QWORD *)this + 2);
  if (v14)
  {
    do
    {
      v15 = (_QWORD *)*v14;
      operator delete(v14);
      v14 = v15;
    }
    while (v15);
  }
  v16 = *(void **)this;
  *(_QWORD *)this = 0;
  if (v16)
    operator delete(v16);
}

__int128 *AddrObjGoogle::protobuf::FileDescriptorTables::kEmpty(AddrObjGoogle::protobuf::FileDescriptorTables *this)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)&qword_1EDF50898);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_1EDF50898))
  {
    xmmword_1EDF507D0 = 0u;
    unk_1EDF507E0 = 0u;
    dword_1EDF507F0 = 1065353216;
    unk_1EDF507F8 = 0u;
    unk_1EDF50808 = 0u;
    dword_1EDF50818 = 1065353216;
    xmmword_1EDF50820 = 0u;
    unk_1EDF50830 = 0u;
    dword_1EDF50840 = 1065353216;
    unk_1EDF50848 = 0u;
    unk_1EDF50858 = 0u;
    dword_1EDF50868 = 1065353216;
    xmmword_1EDF50870 = 0u;
    unk_1EDF50880 = 0u;
    dword_1EDF50890 = 1065353216;
    __cxa_guard_release(&qword_1EDF50898);
  }
  return &xmmword_1EDF507D0;
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::AddCheckpoint(AddrObjGoogle::protobuf::DescriptorPool::Tables *this)
{
  unint64_t v2;
  _OWORD *v3;
  __int128 v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  _BYTE v18[28];

  AddrObjGoogle::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(v18, this);
  v3 = (_OWORD *)*((_QWORD *)this + 39);
  v2 = *((_QWORD *)this + 40);
  if ((unint64_t)v3 >= v2)
  {
    v6 = *((_QWORD *)this + 38);
    v7 = 0x6DB6DB6DB6DB6DB7 * (((uint64_t)v3 - v6) >> 2);
    v8 = v7 + 1;
    if ((unint64_t)(v7 + 1) > 0x924924924924924)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v9 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v2 - v6) >> 2);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x492492492492492)
      v10 = 0x924924924924924;
    else
      v10 = v8;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<AddrObjGoogle::protobuf::DescriptorPool::Tables::CheckPoint>>((uint64_t)this + 320, v10);
    else
      v11 = 0;
    v12 = &v11[28 * v7];
    v13 = &v11[28 * v10];
    v14 = *(_OWORD *)v18;
    *(_OWORD *)(v12 + 12) = *(_OWORD *)&v18[12];
    *(_OWORD *)v12 = v14;
    v5 = v12 + 28;
    v16 = (char *)*((_QWORD *)this + 38);
    v15 = (char *)*((_QWORD *)this + 39);
    if (v15 != v16)
    {
      do
      {
        v17 = *(_OWORD *)(v15 - 28);
        *((_OWORD *)v12 - 1) = *((_OWORD *)v15 - 1);
        *(_OWORD *)(v12 - 28) = v17;
        v12 -= 28;
        v15 -= 28;
      }
      while (v15 != v16);
      v15 = (char *)*((_QWORD *)this + 38);
    }
    *((_QWORD *)this + 38) = v12;
    *((_QWORD *)this + 39) = v5;
    *((_QWORD *)this + 40) = v13;
    if (v15)
      operator delete(v15);
  }
  else
  {
    v4 = *(_OWORD *)v18;
    *(_OWORD *)((char *)v3 + 12) = *(_OWORD *)&v18[12];
    *v3 = v4;
    v5 = (char *)v3 + 28;
  }
  *((_QWORD *)this + 39) = v5;
}

void AddrObjGoogle::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(AddrObjGoogle::protobuf::DescriptorPool::Tables *this)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  char v6;
  unint64_t v7;
  unsigned __int8 *v8;
  int v9;
  int8x8_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unint64_t v13;
  void **v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t i;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = *((_QWORD *)this + 39);
  v2 = *(int *)(v39 - 12);
  v3 = *((_QWORD *)this + 41);
  v4 = *((_QWORD *)this + 42);
  if (v2 >= (v4 - v3) >> 3)
    goto LABEL_55;
  v37 = (char *)this + 216;
  do
  {
    v5 = *(const char **)(v3 + 8 * v2);
    v6 = *v5;
    if (*v5)
    {
      v7 = 0;
      v8 = (unsigned __int8 *)(v5 + 1);
      do
      {
        v7 = 5 * v7 + v6;
        v9 = *v8++;
        v6 = v9;
      }
      while (v9);
    }
    else
    {
      v7 = 0;
    }
    v10 = *(int8x8_t *)((char *)this + 208);
    if (!*(_QWORD *)&v10)
      goto LABEL_54;
    v11 = (uint8x8_t)vcnt_s8(v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v13 = v7;
      if (v7 >= *(_QWORD *)&v10)
        v13 = v7 % *(_QWORD *)&v10;
    }
    else
    {
      v13 = (*(_QWORD *)&v10 - 1) & v7;
    }
    v14 = *(void ***)(*((_QWORD *)this + 25) + 8 * v13);
    if (!v14)
      goto LABEL_54;
    v15 = (char *)*v14;
    if (!*v14)
      goto LABEL_54;
    v38 = *((_QWORD *)this + 25);
    v40 = *(_QWORD *)&v10 - 1;
    while (1)
    {
      v16 = *((_QWORD *)v15 + 1);
      if (v16 == v7)
        break;
      if (v12 > 1)
      {
        if (v16 >= *(_QWORD *)&v10)
          v16 %= *(_QWORD *)&v10;
      }
      else
      {
        v16 &= v40;
      }
      if (v16 != v13)
        goto LABEL_54;
LABEL_24:
      v15 = *(char **)v15;
      if (!v15)
        goto LABEL_54;
    }
    if (strcmp(*((const char **)v15 + 2), v5))
      goto LABEL_24;
    if (v12 > 1)
    {
      v17 = v38;
      if (v7 >= *(_QWORD *)&v10)
        v7 %= *(_QWORD *)&v10;
    }
    else
    {
      v7 &= v40;
      v17 = v38;
    }
    v18 = *(char **)v15;
    v19 = *(char **)(v17 + 8 * v7);
    do
    {
      v20 = v19;
      v19 = *(char **)v19;
    }
    while (v19 != v15);
    if (v20 == v37)
      goto LABEL_43;
    v21 = *((_QWORD *)v20 + 1);
    if (v12 > 1)
    {
      if (v21 >= *(_QWORD *)&v10)
        v21 %= *(_QWORD *)&v10;
    }
    else
    {
      v21 &= v40;
    }
    if (v21 == v7)
    {
LABEL_45:
      if (v18)
      {
        v22 = *((_QWORD *)v18 + 1);
        goto LABEL_47;
      }
    }
    else
    {
LABEL_43:
      if (!v18)
        goto LABEL_44;
      v22 = *((_QWORD *)v18 + 1);
      if (v12 > 1)
      {
        v23 = *((_QWORD *)v18 + 1);
        if (v22 >= *(_QWORD *)&v10)
          v23 = v22 % *(_QWORD *)&v10;
      }
      else
      {
        v23 = v22 & v40;
      }
      if (v23 != v7)
      {
LABEL_44:
        *(_QWORD *)(v17 + 8 * v7) = 0;
        v18 = *(char **)v15;
        goto LABEL_45;
      }
LABEL_47:
      if (v12 > 1)
      {
        if (v22 >= *(_QWORD *)&v10)
          v22 %= *(_QWORD *)&v10;
      }
      else
      {
        v22 &= v40;
      }
      if (v22 != v7)
      {
        *(_QWORD *)(*((_QWORD *)this + 25) + 8 * v22) = v20;
        v18 = *(char **)v15;
      }
    }
    *(_QWORD *)v20 = v18;
    *(_QWORD *)v15 = 0;
    --*((_QWORD *)this + 28);
    operator delete(v15);
    v3 = *((_QWORD *)this + 41);
    v4 = *((_QWORD *)this + 42);
LABEL_54:
    ++v2;
  }
  while (v2 < (v4 - v3) >> 3);
LABEL_55:
  v24 = *(int *)(v39 - 8);
  v25 = *((_QWORD *)this + 44);
  if (v24 < (*((_QWORD *)this + 45) - v25) >> 3)
  {
    v26 = 8 * v24;
    do
    {
      std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::__erase_unique<char const*>((_QWORD *)this + 30, (const char **)(v25 + v26));
      ++v24;
      v25 = *((_QWORD *)this + 44);
      v26 += 8;
    }
    while (v24 < (*((_QWORD *)this + 45) - v25) >> 3);
  }
  v27 = *(int *)(v39 - 4);
  v28 = *((_QWORD *)this + 47);
  if (v27 < (*((_QWORD *)this + 48) - v28) >> 4)
  {
    v29 = 16 * v27;
    do
    {
      std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>((uint64_t **)this + 35, (unint64_t *)(v28 + v29));
      ++v27;
      v28 = *((_QWORD *)this + 47);
      v29 += 16;
    }
    while (v27 < (*((_QWORD *)this + 48) - v28) >> 4);
  }
  std::vector<zilch::StringList::Entry>::resize((uint64_t)this + 328, *(int *)(v39 - 12));
  std::vector<zilch::StringList::Entry>::resize((uint64_t)this + 352, *(int *)(v39 - 8));
  std::vector<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>::resize((uint64_t)this + 376, *(int *)(v39 - 4));
  AddrObjGoogle::protobuf::STLDeleteContainerPointers<std::__wrap_iter<std::string **>>(*((_QWORD *)this + 13) + 8 * *(int *)(v39 - 28), *((uint64_t **)this + 14));
  v30 = (uint64_t *)(*((_QWORD *)this + 16) + 8 * *(int *)(v39 - 24));
  v31 = (uint64_t *)*((_QWORD *)this + 17);
  while (v30 != v31)
  {
    v33 = *v30++;
    v32 = v33;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  }
  AddrObjGoogle::protobuf::STLDeleteContainerPointers<std::__wrap_iter<AddrObjGoogle::protobuf::FileDescriptorTables **>>((AddrObjGoogle::protobuf::FileDescriptorTables *)(*((_QWORD *)this + 19) + 8 * *(int *)(v39 - 20)), *((AddrObjGoogle::protobuf::FileDescriptorTables **)this + 20));
  v34 = *(int *)(v39 - 16);
  v35 = *((_QWORD *)this + 22);
  for (i = *((_QWORD *)this + 23); v34 < (i - v35) >> 3; i = *((_QWORD *)this + 23))
  {
    operator delete(*(void **)(v35 + 8 * v34++));
    v35 = *((_QWORD *)this + 22);
  }
  std::vector<zilch::StringList::Entry>::resize((uint64_t)this + 104, *(int *)(v39 - 28));
  std::vector<zilch::StringList::Entry>::resize((uint64_t)this + 128, *(int *)(v39 - 24));
  std::vector<zilch::StringList::Entry>::resize((uint64_t)this + 152, *(int *)(v39 - 20));
  std::vector<zilch::StringList::Entry>::resize((uint64_t)this + 176, *(int *)(v39 - 16));
  *((_QWORD *)this + 39) -= 28;
}

void std::vector<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 16 * a2;
  }
  else
  {
    std::vector<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>::__append((void **)a1, a2 - v2);
  }
}

uint64_t AddrObjGoogle::protobuf::STLDeleteContainerPointers<std::__wrap_iter<std::string **>>(uint64_t result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  if ((uint64_t *)result != a2)
  {
    v3 = (uint64_t *)result;
    do
    {
      v5 = *v3++;
      v4 = v5;
      if (v5)
      {
        if (*(char *)(v4 + 23) < 0)
          operator delete(*(void **)v4);
        result = MEMORY[0x18D76437C](v4, 0x1012C40EC159624);
      }
    }
    while (v3 != a2);
  }
  return result;
}

AddrObjGoogle::protobuf::FileDescriptorTables *AddrObjGoogle::protobuf::STLDeleteContainerPointers<std::__wrap_iter<AddrObjGoogle::protobuf::FileDescriptorTables **>>(AddrObjGoogle::protobuf::FileDescriptorTables *result, AddrObjGoogle::protobuf::FileDescriptorTables *a2)
{
  AddrObjGoogle::protobuf::FileDescriptorTables *v3;
  AddrObjGoogle::protobuf::FileDescriptorTables *v4;

  if (result != a2)
  {
    v3 = result;
    do
    {
      v4 = *(AddrObjGoogle::protobuf::FileDescriptorTables **)v3;
      v3 = (AddrObjGoogle::protobuf::FileDescriptorTables *)((char *)v3 + 8);
      result = v4;
      if (v4)
      {
        AddrObjGoogle::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
        result = (AddrObjGoogle::protobuf::FileDescriptorTables *)MEMORY[0x18D76437C]();
      }
    }
    while (v3 != a2);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::Tables::AddFile(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v24;

  v4 = (uint64_t)(a1 + 30);
  v5 = *(_QWORD **)a2;
  if (*(char *)(*(_QWORD *)a2 + 23) < 0)
    v5 = (_QWORD *)*v5;
  *(_QWORD *)&v24 = v5;
  *((_QWORD *)&v24 + 1) = a2;
  std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,AddrObjGoogle::protobuf::FileDescriptor const*>>(v4, (const char **)&v24, &v24);
  v7 = v6;
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD **)a2;
    if (*(char *)(*(_QWORD *)a2 + 23) < 0)
      v8 = (_QWORD *)*v8;
    v10 = (_QWORD *)a1[45];
    v9 = a1[46];
    if ((unint64_t)v10 >= v9)
    {
      v12 = a1[44];
      v13 = ((uint64_t)v10 - v12) >> 3;
      if ((unint64_t)(v13 + 1) >> 61)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v14 = v9 - v12;
      v15 = v14 >> 2;
      if (v14 >> 2 <= (unint64_t)(v13 + 1))
        v15 = v13 + 1;
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8)
        v16 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v16 = v15;
      if (v16)
        v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 46), v16);
      else
        v17 = 0;
      v18 = &v17[8 * v13];
      v19 = &v17[8 * v16];
      *(_QWORD *)v18 = v8;
      v11 = v18 + 8;
      v21 = (char *)a1[44];
      v20 = (char *)a1[45];
      if (v20 != v21)
      {
        do
        {
          v22 = *((_QWORD *)v20 - 1);
          v20 -= 8;
          *((_QWORD *)v18 - 1) = v22;
          v18 -= 8;
        }
        while (v20 != v21);
        v20 = (char *)a1[44];
      }
      a1[44] = v18;
      a1[45] = v11;
      a1[46] = v19;
      if (v20)
        operator delete(v20);
    }
    else
    {
      *v10 = v8;
      v11 = v10 + 1;
    }
    a1[45] = v11;
  }
  return v7 & 1;
}

void AddrObjGoogle::protobuf::FileDescriptorTables::AddFieldByStylizedNames(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8[2];
  uint64_t v9[2];
  uint64_t v10;

  v10 = a2;
  if (*(_BYTE *)(a2 + 52))
  {
    v4 = *(_QWORD *)(a2 + 64);
    if (v4)
      goto LABEL_6;
    v5 = (uint64_t *)(a2 + 32);
  }
  else
  {
    v5 = (uint64_t *)(a2 + 56);
  }
  v4 = *v5;
LABEL_6:
  v6 = *(_QWORD *)(a2 + 16);
  if (*(char *)(v6 + 23) < 0)
    v6 = *(_QWORD *)v6;
  v9[0] = v4;
  v9[1] = v6;
  sub_18881B334((float *)(a1 + 40), v9, &v10);
  v7 = *(_QWORD *)(a2 + 24);
  if (*(char *)(v7 + 23) < 0)
    v7 = *(_QWORD *)v7;
  v8[0] = v4;
  v8[1] = v7;
  sub_18881B334((float *)(a1 + 80), v8, &v10);
}

void sub_18881B334(float *a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  const char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8x8_t v15;
  unint64_t v16;
  uint64_t ***v17;
  uint64_t **i;
  unint64_t v19;
  _QWORD *v20;
  float v21;
  float v22;
  _BOOL4 v23;
  unint64_t v24;
  unint64_t v25;
  int8x8_t prime;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint8x8_t v32;
  unint64_t v33;
  uint8x8_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;

  v6 = *a2;
  v5 = (const char *)a2[1];
  v7 = *v5;
  if (*v5)
  {
    v8 = 0;
    v9 = (unsigned __int8 *)(v5 + 1);
    do
    {
      v8 = 5 * v8 + v7;
      v10 = *v9++;
      v7 = v10;
    }
    while (v10);
  }
  else
  {
    v8 = 0;
  }
  v11 = *a3;
  v12 = v8 - v6;
  v13 = v12 + (v6 << 16);
  v14 = *((_QWORD *)a1 + 1);
  if (v14)
  {
    v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      v3 = v12 + (v6 << 16);
      if (v13 >= v14)
        v3 = v13 % v14;
    }
    else
    {
      v3 = (v14 - 1) & v13;
    }
    v17 = *(uint64_t ****)(*(_QWORD *)a1 + 8 * v3);
    if (v17)
    {
      for (i = *v17; i; i = (uint64_t **)*i)
      {
        v19 = (unint64_t)i[1];
        if (v19 == v13)
        {
          if (i[2] == (uint64_t *)v6 && !strcmp((const char *)i[3], v5))
            return;
        }
        else
        {
          if (v16 > 1)
          {
            if (v19 >= v14)
              v19 %= v14;
          }
          else
          {
            v19 &= v14 - 1;
          }
          if (v19 != v3)
            break;
        }
      }
    }
  }
  v20 = operator new(0x28uLL);
  *v20 = 0;
  v20[1] = v13;
  v20[2] = v6;
  v20[3] = v5;
  v20[4] = v11;
  v21 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v22 = a1[8];
  if (!v14 || (float)(v22 * (float)v14) < v21)
  {
    v23 = (v14 & (v14 - 1)) == 0;
    if (v14 < 3)
      v23 = 0;
    v24 = (2 * v14) | !v23;
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = (int8x8_t)v25;
    else
      prime = (int8x8_t)v24;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v14 = *((_QWORD *)a1 + 1);
    }
    if (*(_QWORD *)&prime > v14)
      goto LABEL_36;
    if (*(_QWORD *)&prime < v14)
    {
      v33 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v14 < 3 || (v34 = (uint8x8_t)vcnt_s8((int8x8_t)v14), v34.i16[0] = vaddlv_u8(v34), v34.u32[0] > 1uLL))
      {
        v33 = std::__next_prime(v33);
      }
      else
      {
        v35 = 1 << -(char)__clz(v33 - 1);
        if (v33 >= 2)
          v33 = v35;
      }
      if (*(_QWORD *)&prime <= v33)
        prime = (int8x8_t)v33;
      if (*(_QWORD *)&prime >= v14)
      {
        v14 = *((_QWORD *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_36:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v27 = operator new(8 * *(_QWORD *)&prime);
          v28 = *(_QWORD **)a1;
          *(_QWORD *)a1 = v27;
          if (v28)
            operator delete(v28);
          v29 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v29++) = 0;
          while (*(_QWORD *)&prime != v29);
          v30 = (_QWORD *)*((_QWORD *)a1 + 2);
          if (v30)
          {
            v31 = v30[1];
            v32 = (uint8x8_t)vcnt_s8(prime);
            v32.i16[0] = vaddlv_u8(v32);
            if (v32.u32[0] > 1uLL)
            {
              if (v31 >= *(_QWORD *)&prime)
                v31 %= *(_QWORD *)&prime;
            }
            else
            {
              v31 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v31) = a1 + 4;
            v36 = (_QWORD *)*v30;
            if (*v30)
            {
              do
              {
                v37 = v36[1];
                if (v32.u32[0] > 1uLL)
                {
                  if (v37 >= *(_QWORD *)&prime)
                    v37 %= *(_QWORD *)&prime;
                }
                else
                {
                  v37 &= *(_QWORD *)&prime - 1;
                }
                if (v37 != v31)
                {
                  if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v37))
                  {
                    *(_QWORD *)(*(_QWORD *)a1 + 8 * v37) = v30;
                    goto LABEL_61;
                  }
                  *v30 = *v36;
                  *v36 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v37);
                  **(_QWORD **)(*(_QWORD *)a1 + 8 * v37) = v36;
                  v36 = v30;
                }
                v37 = v31;
LABEL_61:
                v30 = v36;
                v36 = (_QWORD *)*v36;
                v31 = v37;
              }
              while (v36);
            }
          }
          v14 = (unint64_t)prime;
          goto LABEL_65;
        }
        v41 = *(_QWORD **)a1;
        *(_QWORD *)a1 = 0;
        if (v41)
          operator delete(v41);
        v14 = 0;
        *((_QWORD *)a1 + 1) = 0;
      }
    }
LABEL_65:
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14)
        v3 = v13 % v14;
      else
        v3 = v13;
    }
    else
    {
      v3 = (v14 - 1) & v13;
    }
  }
  v38 = *(_QWORD **)a1;
  v39 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v39)
  {
    *v20 = *v39;
LABEL_78:
    *v39 = v20;
    goto LABEL_79;
  }
  *v20 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v20;
  v38[v3] = a1 + 4;
  if (*v20)
  {
    v40 = *(_QWORD *)(*v20 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v40 >= v14)
        v40 %= v14;
    }
    else
    {
      v40 &= v14 - 1;
    }
    v39 = (_QWORD *)(*(_QWORD *)a1 + 8 * v40);
    goto LABEL_78;
  }
LABEL_79:
  ++*((_QWORD *)a1 + 3);
}

void sub_18881B754(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorTables::AddFieldByNumber(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;
  _QWORD *v14;
  float v15;
  float v16;
  _BOOL4 v17;
  unint64_t v18;
  unint64_t v19;
  int8x8_t prime;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint8x8_t v26;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  void *v37;

  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(int *)(a2 + 40);
  v7 = v6 - v5 + (v5 << 16);
  v8 = *(_QWORD *)(a1 + 128);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v2 = v6 - v5 + (v5 << 16);
      if (v7 >= v8)
        v2 = v7 % v8;
    }
    else
    {
      v2 = (v8 - 1) & v7;
    }
    v10 = *(uint64_t ***)(*(_QWORD *)(a1 + 120) + 8 * v2);
    if (v10)
    {
      for (i = *v10; i; i = (uint64_t *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == (_DWORD)v6)
            return 0;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v2)
            break;
        }
      }
    }
  }
  v14 = operator new(0x28uLL);
  *v14 = 0;
  v14[1] = v7;
  v14[2] = v5;
  *((_DWORD *)v14 + 6) = v6;
  v14[4] = a2;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 144) + 1);
  v16 = *(float *)(a1 + 152);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    v17 = (v8 & (v8 - 1)) == 0;
    if (v8 < 3)
      v17 = 0;
    v18 = (2 * v8) | !v17;
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = (int8x8_t)v19;
    else
      prime = (int8x8_t)v18;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v8 = *(_QWORD *)(a1 + 128);
    }
    if (*(_QWORD *)&prime > v8)
      goto LABEL_34;
    if (*(_QWORD *)&prime < v8)
    {
      v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 144) / *(float *)(a1 + 152));
      if (v8 < 3 || (v28 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        v27 = std::__next_prime(v27);
      }
      else
      {
        v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2)
          v27 = v29;
      }
      if (*(_QWORD *)&prime <= v27)
        prime = (int8x8_t)v27;
      if (*(_QWORD *)&prime >= v8)
      {
        v8 = *(_QWORD *)(a1 + 128);
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v21 = operator new(8 * *(_QWORD *)&prime);
          v22 = *(void **)(a1 + 120);
          *(_QWORD *)(a1 + 120) = v21;
          if (v22)
            operator delete(v22);
          v23 = 0;
          *(int8x8_t *)(a1 + 128) = prime;
          do
            *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8 * v23++) = 0;
          while (*(_QWORD *)&prime != v23);
          v24 = *(_QWORD **)(a1 + 136);
          if (v24)
          {
            v25 = v24[1];
            v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(_QWORD *)&prime)
                v25 %= *(_QWORD *)&prime;
            }
            else
            {
              v25 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8 * v25) = a1 + 136;
            v30 = (_QWORD *)*v24;
            if (*v24)
            {
              do
              {
                v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(_QWORD *)&prime)
                    v31 %= *(_QWORD *)&prime;
                }
                else
                {
                  v31 &= *(_QWORD *)&prime - 1;
                }
                if (v31 != v25)
                {
                  v32 = *(_QWORD *)(a1 + 120);
                  if (!*(_QWORD *)(v32 + 8 * v31))
                  {
                    *(_QWORD *)(v32 + 8 * v31) = v24;
                    goto LABEL_59;
                  }
                  *v24 = *v30;
                  *v30 = **(_QWORD **)(*(_QWORD *)(a1 + 120) + 8 * v31);
                  **(_QWORD **)(*(_QWORD *)(a1 + 120) + 8 * v31) = v30;
                  v30 = v24;
                }
                v31 = v25;
LABEL_59:
                v24 = v30;
                v30 = (_QWORD *)*v30;
                v25 = v31;
              }
              while (v30);
            }
          }
          v8 = (unint64_t)prime;
          goto LABEL_63;
        }
        v37 = *(void **)(a1 + 120);
        *(_QWORD *)(a1 + 120) = 0;
        if (v37)
          operator delete(v37);
        v8 = 0;
        *(_QWORD *)(a1 + 128) = 0;
      }
    }
LABEL_63:
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v2 = v7 % v8;
      else
        v2 = v6 - v5 + (v5 << 16);
    }
    else
    {
      v2 = (v8 - 1) & v7;
    }
  }
  v33 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD **)(v33 + 8 * v2);
  if (v34)
  {
    *v14 = *v34;
LABEL_76:
    *v34 = v14;
    goto LABEL_77;
  }
  *v14 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  *(_QWORD *)(v33 + 8 * v2) = a1 + 136;
  if (*v14)
  {
    v35 = *(_QWORD *)(*v14 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v35 >= v8)
        v35 %= v8;
    }
    else
    {
      v35 &= v8 - 1;
    }
    v34 = (_QWORD *)(*(_QWORD *)(a1 + 120) + 8 * v35);
    goto LABEL_76;
  }
LABEL_77:
  ++*(_QWORD *)(a1 + 144);
  return 1;
}

void sub_18881BB64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::FileDescriptorTables::AddEnumValueByNumber(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;
  _QWORD *v14;
  float v15;
  float v16;
  _BOOL4 v17;
  unint64_t v18;
  unint64_t v19;
  int8x8_t prime;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint8x8_t v26;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  void *v37;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a2 + 16);
  v7 = v6 - v5 + (v5 << 16);
  v8 = *(_QWORD *)(a1 + 168);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v2 = v6 - v5 + (v5 << 16);
      if (v7 >= v8)
        v2 = v7 % v8;
    }
    else
    {
      v2 = (v8 - 1) & v7;
    }
    v10 = *(uint64_t ***)(*(_QWORD *)(a1 + 160) + 8 * v2);
    if (v10)
    {
      for (i = *v10; i; i = (uint64_t *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == (_DWORD)v6)
            return 0;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v2)
            break;
        }
      }
    }
  }
  v14 = operator new(0x28uLL);
  *v14 = 0;
  v14[1] = v7;
  v14[2] = v5;
  *((_DWORD *)v14 + 6) = v6;
  v14[4] = a2;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 184) + 1);
  v16 = *(float *)(a1 + 192);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    v17 = (v8 & (v8 - 1)) == 0;
    if (v8 < 3)
      v17 = 0;
    v18 = (2 * v8) | !v17;
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = (int8x8_t)v19;
    else
      prime = (int8x8_t)v18;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v8 = *(_QWORD *)(a1 + 168);
    }
    if (*(_QWORD *)&prime > v8)
      goto LABEL_34;
    if (*(_QWORD *)&prime < v8)
    {
      v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 184) / *(float *)(a1 + 192));
      if (v8 < 3 || (v28 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        v27 = std::__next_prime(v27);
      }
      else
      {
        v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2)
          v27 = v29;
      }
      if (*(_QWORD *)&prime <= v27)
        prime = (int8x8_t)v27;
      if (*(_QWORD *)&prime >= v8)
      {
        v8 = *(_QWORD *)(a1 + 168);
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v21 = operator new(8 * *(_QWORD *)&prime);
          v22 = *(void **)(a1 + 160);
          *(_QWORD *)(a1 + 160) = v21;
          if (v22)
            operator delete(v22);
          v23 = 0;
          *(int8x8_t *)(a1 + 168) = prime;
          do
            *(_QWORD *)(*(_QWORD *)(a1 + 160) + 8 * v23++) = 0;
          while (*(_QWORD *)&prime != v23);
          v24 = *(_QWORD **)(a1 + 176);
          if (v24)
          {
            v25 = v24[1];
            v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(_QWORD *)&prime)
                v25 %= *(_QWORD *)&prime;
            }
            else
            {
              v25 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)(a1 + 160) + 8 * v25) = a1 + 176;
            v30 = (_QWORD *)*v24;
            if (*v24)
            {
              do
              {
                v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(_QWORD *)&prime)
                    v31 %= *(_QWORD *)&prime;
                }
                else
                {
                  v31 &= *(_QWORD *)&prime - 1;
                }
                if (v31 != v25)
                {
                  v32 = *(_QWORD *)(a1 + 160);
                  if (!*(_QWORD *)(v32 + 8 * v31))
                  {
                    *(_QWORD *)(v32 + 8 * v31) = v24;
                    goto LABEL_59;
                  }
                  *v24 = *v30;
                  *v30 = **(_QWORD **)(*(_QWORD *)(a1 + 160) + 8 * v31);
                  **(_QWORD **)(*(_QWORD *)(a1 + 160) + 8 * v31) = v30;
                  v30 = v24;
                }
                v31 = v25;
LABEL_59:
                v24 = v30;
                v30 = (_QWORD *)*v30;
                v25 = v31;
              }
              while (v30);
            }
          }
          v8 = (unint64_t)prime;
          goto LABEL_63;
        }
        v37 = *(void **)(a1 + 160);
        *(_QWORD *)(a1 + 160) = 0;
        if (v37)
          operator delete(v37);
        v8 = 0;
        *(_QWORD *)(a1 + 168) = 0;
      }
    }
LABEL_63:
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v2 = v7 % v8;
      else
        v2 = v6 - v5 + (v5 << 16);
    }
    else
    {
      v2 = (v8 - 1) & v7;
    }
  }
  v33 = *(_QWORD *)(a1 + 160);
  v34 = *(_QWORD **)(v33 + 8 * v2);
  if (v34)
  {
    *v14 = *v34;
LABEL_76:
    *v34 = v14;
    goto LABEL_77;
  }
  *v14 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = v14;
  *(_QWORD *)(v33 + 8 * v2) = a1 + 176;
  if (*v14)
  {
    v35 = *(_QWORD *)(*v14 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v35 >= v8)
        v35 %= v8;
    }
    else
    {
      v35 &= v8 - 1;
    }
    v34 = (_QWORD *)(*(_QWORD *)(a1 + 160) + 8 * v35);
    goto LABEL_76;
  }
LABEL_77:
  ++*(_QWORD *)(a1 + 184);
  return 1;
}

void sub_18881BF74(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::Tables::AddExtension(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  int v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v21;
  int v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a2 + 56);
  v4 = *(_DWORD *)(a2 + 40);
  v21 = v3;
  v22 = v4;
  v23 = a2;
  std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::pair<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int> const,AddrObjGoogle::protobuf::FieldDescriptor const*>>((uint64_t **)(a1 + 280), &v21, (uint64_t)&v21);
  v6 = v5;
  if ((v5 & 1) != 0)
  {
    v8 = *(_QWORD *)(a1 + 384);
    v7 = *(_QWORD *)(a1 + 392);
    if (v8 >= v7)
    {
      v10 = *(_QWORD *)(a1 + 376);
      v11 = (uint64_t)(v8 - v10) >> 4;
      v12 = v11 + 1;
      if ((unint64_t)(v11 + 1) >> 60)
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      v13 = v7 - v10;
      if (v13 >> 3 > v12)
        v12 = v13 >> 3;
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
        v14 = 0xFFFFFFFFFFFFFFFLL;
      else
        v14 = v12;
      if (v14)
        v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(a1 + 392, v14);
      else
        v15 = 0;
      v16 = &v15[16 * v11];
      v17 = &v15[16 * v14];
      *(_QWORD *)v16 = v3;
      *((_DWORD *)v16 + 2) = v4;
      v9 = v16 + 16;
      v19 = *(char **)(a1 + 376);
      v18 = *(char **)(a1 + 384);
      if (v18 != v19)
      {
        do
        {
          *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
          v16 -= 16;
          v18 -= 16;
        }
        while (v18 != v19);
        v18 = *(char **)(a1 + 376);
      }
      *(_QWORD *)(a1 + 376) = v16;
      *(_QWORD *)(a1 + 384) = v9;
      *(_QWORD *)(a1 + 392) = v17;
      if (v18)
        operator delete(v18);
    }
    else
    {
      *(_QWORD *)v8 = v3;
      *(_DWORD *)(v8 + 8) = v4;
      v9 = (char *)(v8 + 16);
    }
    *(_QWORD *)(a1 + 384) = v9;
  }
  return v6 & 1;
}

std::string *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(_QWORD *a1, uint64_t a2)
{
  std::string *v4;
  std::string *v5;
  unint64_t v6;
  std::string **v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  std::string **v15;
  char *v16;
  char *v17;
  char *v18;
  std::string *v19;

  v4 = (std::string *)operator new();
  v5 = v4;
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v4->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
  }
  v6 = a1[15];
  v7 = (std::string **)a1[14];
  if ((unint64_t)v7 >= v6)
  {
    v9 = a1[13];
    v10 = ((uint64_t)v7 - v9) >> 3;
    if ((unint64_t)(v10 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v11 = v6 - v9;
    v12 = v11 >> 2;
    if (v11 >> 2 <= (unint64_t)(v10 + 1))
      v12 = v10 + 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    if (v13)
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 15), v13);
    else
      v14 = 0;
    v15 = (std::string **)&v14[8 * v10];
    v16 = &v14[8 * v13];
    *v15 = v5;
    v8 = v15 + 1;
    v18 = (char *)a1[13];
    v17 = (char *)a1[14];
    if (v17 != v18)
    {
      do
      {
        v19 = (std::string *)*((_QWORD *)v17 - 1);
        v17 -= 8;
        *--v15 = v19;
      }
      while (v17 != v18);
      v17 = (char *)a1[13];
    }
    a1[13] = v15;
    a1[14] = v8;
    a1[15] = v16;
    if (v17)
      operator delete(v17);
  }
  else
  {
    *v7 = v5;
    v8 = v7 + 1;
  }
  a1[14] = v8;
  return v5;
}

void sub_18881C1D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateFileTables(AddrObjGoogle::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_DWORD *)(v2 + 32) = 1065353216;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_DWORD *)(v2 + 72) = 1065353216;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 112) = 1065353216;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_DWORD *)(v2 + 152) = 1065353216;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_DWORD *)(v2 + 192) = 1065353216;
  v3 = *((_QWORD *)this + 21);
  v4 = (uint64_t *)*((_QWORD *)this + 20);
  if ((unint64_t)v4 >= v3)
  {
    v6 = *((_QWORD *)this + 19);
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)this + 168, v10);
    else
      v11 = 0;
    v12 = (uint64_t *)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)*((_QWORD *)this + 19);
    v14 = (char *)*((_QWORD *)this + 20);
    if (v14 != v15)
    {
      do
      {
        v16 = *((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)*((_QWORD *)this + 19);
    }
    *((_QWORD *)this + 19) = v12;
    *((_QWORD *)this + 20) = v5;
    *((_QWORD *)this + 21) = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  *((_QWORD *)this + 20) = v5;
  return v2;
}

void *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(AddrObjGoogle::protobuf::DescriptorPool::Tables *this, int a2)
{
  void *v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (!a2)
    return 0;
  v3 = operator new(a2);
  v4 = *((_QWORD *)this + 24);
  v5 = (_QWORD *)*((_QWORD *)this + 23);
  if ((unint64_t)v5 >= v4)
  {
    v7 = *((_QWORD *)this + 22);
    v8 = ((uint64_t)v5 - v7) >> 3;
    if ((unint64_t)(v8 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v9 = v4 - v7;
    v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1))
      v10 = v8 + 1;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    if (v11)
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)this + 192, v11);
    else
      v12 = 0;
    v13 = &v12[8 * v8];
    v14 = &v12[8 * v11];
    *(_QWORD *)v13 = v3;
    v6 = v13 + 8;
    v16 = (char *)*((_QWORD *)this + 22);
    v15 = (char *)*((_QWORD *)this + 23);
    if (v15 != v16)
    {
      do
      {
        v17 = *((_QWORD *)v15 - 1);
        v15 -= 8;
        *((_QWORD *)v13 - 1) = v17;
        v13 -= 8;
      }
      while (v15 != v16);
      v15 = (char *)*((_QWORD *)this + 22);
    }
    *((_QWORD *)this + 22) = v13;
    *((_QWORD *)this + 23) = v6;
    *((_QWORD *)this + 24) = v14;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *v5 = v3;
    v6 = v5 + 1;
  }
  *((_QWORD *)this + 23) = v6;
  return v3;
}

void AddrObjGoogle::protobuf::DescriptorPool::~DescriptorPool(AddrObjGoogle::protobuf::DescriptorPool::Tables **this)
{
  AddrObjGoogle::protobuf::internal::Mutex *v2;

  v2 = *this;
  if (v2)
  {
    AddrObjGoogle::protobuf::internal::Mutex::~Mutex(v2);
    MEMORY[0x18D76437C]();
  }
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::DescriptorPool::Tables>::~scoped_ptr(this + 4);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::generated_pool(AddrObjGoogle::protobuf::DescriptorPool *this)
{
  uint64_t v1;
  _QWORD v3[2];
  char v4;

  v1 = qword_1EDF508B0;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = sub_188829E44;
    v4 = 0;
    AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&qword_1EDF508B0, (uint64_t)v3);
    AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)v3);
  }
  return qword_1EDF508A0;
}

void sub_18881C4D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0((AddrObjGoogle::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::FindFileByName(pthread_mutex_t ***a1, char *a2)
{
  pthread_mutex_t **v4;
  _QWORD *v5;
  const char *v6;
  uint64_t **v7;
  uint64_t FileByName;
  pthread_mutex_t **v9;
  _QWORD *v10;
  const char *v11;
  uint64_t **v12;
  pthread_mutex_t **v14;
  const char *v15;

  v4 = *a1;
  v14 = v4;
  if (v4)
    AddrObjGoogle::protobuf::internal::Mutex::Lock(v4);
  v5 = a1[4] + 30;
  if (a2[23] >= 0)
    v6 = a2;
  else
    v6 = *(const char **)a2;
  v15 = v6;
  v7 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v5, &v15);
  if (!v7 || (FileByName = (uint64_t)v7[3]) == 0)
  {
    v9 = a1[3];
    if (!v9 || (FileByName = AddrObjGoogle::protobuf::DescriptorPool::FindFileByName(v9, a2)) == 0)
    {
      if (!AddrObjGoogle::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((uint64_t)a1, a2)
        || ((v10 = a1[4] + 30, a2[23] >= 0) ? (v11 = a2) : (v11 = *(const char **)a2),
            (v15 = v11,
             (v12 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v10, &v15)) == 0)|| (FileByName = (uint64_t)v12[3]) == 0))
      {
        FileByName = 0;
      }
    }
  }
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v14);
  return FileByName;
}

void sub_18881C5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, pthread_mutex_t **a9)
{
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&a9);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE v6[208];

  if (!*(_QWORD *)(a1 + 8)
    || std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*(_QWORD *)(a1 + 32) + 24), a2))
  {
    return 0;
  }
  AddrObjGoogle::protobuf::FileDescriptorProto::FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)v6);
  if ((*(unsigned int (**)(_QWORD, _BYTE *, _BYTE *))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, v6)&& AddrObjGoogle::protobuf::DescriptorPool::BuildFileFromDatabase((addr_obj::Localization **)a1, (const AddrObjGoogle::protobuf::FileDescriptorProto *)v6))
  {
    v4 = 1;
  }
  else
  {
    std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*(_QWORD *)(a1 + 32) + 24, a2, (uint64_t)a2);
    v4 = 0;
  }
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)v6);
  return v4;
}

void sub_18881C680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)&a9);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(AddrObjGoogle::protobuf::DescriptorPool *a1, uint64_t a2)
{
  _BOOL8 v4;
  _QWORD *v5;
  const char *v6;
  uint64_t **v7;
  _BYTE v9[16];
  uint64_t v10;
  const char *v11;

  if (!*((_QWORD *)a1 + 1)
    || (AddrObjGoogle::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, a2) & 1) != 0)
  {
    return 0;
  }
  AddrObjGoogle::protobuf::FileDescriptorProto::FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)v9);
  v4 = ((*(uint64_t (**)(_QWORD, uint64_t, _BYTE *))(**((_QWORD **)a1 + 1) + 24))(*((_QWORD *)a1 + 1), a2, v9) & 1) != 0&& ((v5 = (_QWORD *)(*((_QWORD *)a1 + 4) + 240), *(char *)(v10 + 23) >= 0)? (v6 = (const char *)v10): (v6 = *(const char **)v10), (v11 = v6, (v7 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v5, &v11)) == 0)|| !v7[3])&& AddrObjGoogle::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const AddrObjGoogle::protobuf::FileDescriptorProto *)v9) != 0;
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)v9);
  return v4;
}

void sub_18881C75C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (sub_18881C798(*(int8x8_t **)(a1 + 32), (pthread_mutex_t ***)a1, a2) == 1)
    return v2;
  else
    return 0;
}

unint64_t sub_18881C798(int8x8_t *a1, pthread_mutex_t ***a2, uint64_t a3)
{
  pthread_mutex_t **v6;
  const char *v7;
  char v8;
  unint64_t v9;
  unsigned __int8 *v10;
  int v11;
  int8x8_t v12;
  uint64_t *v13;
  uint8x8_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t **v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  pthread_mutex_t **v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  unsigned __int8 *v27;
  int8x8_t *v28;
  int v29;
  uint64_t *v30;
  int8x8_t v31;
  uint8x8_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t **v35;
  uint64_t *i;
  unint64_t v37;
  pthread_mutex_t **v38;

  v6 = *a2;
  v38 = v6;
  if (v6)
    AddrObjGoogle::protobuf::internal::Mutex::Lock(v6);
  if (*(char *)(a3 + 23) >= 0)
    v7 = (const char *)a3;
  else
    v7 = *(const char **)a3;
  v8 = *v7;
  if (*v7)
  {
    v9 = 0;
    v10 = (unsigned __int8 *)(v7 + 1);
    do
    {
      v9 = 5 * v9 + v8;
      v11 = *v10++;
      v8 = v11;
    }
    while (v11);
  }
  else
  {
    v9 = 0;
  }
  v12 = a1[26];
  v13 = &qword_1EDF508B8;
  if (!*(_QWORD *)&v12)
    goto LABEL_27;
  v14 = (uint8x8_t)vcnt_s8(v12);
  v14.i16[0] = vaddlv_u8(v14);
  v15 = v14.u32[0];
  if (v14.u32[0] > 1uLL)
  {
    v16 = v9;
    if (v9 >= *(_QWORD *)&v12)
      v16 = v9 % *(_QWORD *)&v12;
  }
  else
  {
    v16 = (*(_QWORD *)&v12 - 1) & v9;
  }
  v17 = *(uint64_t ***)(*(_QWORD *)&a1[25] + 8 * v16);
  if (!v17 || (v18 = *v17) == 0)
  {
LABEL_27:
    sub_188829F58();
    v30 = &qword_1EDF508B8;
    goto LABEL_28;
  }
  while (1)
  {
    v19 = v18[1];
    if (v9 == v19)
      break;
    if (v15 > 1)
    {
      if (v19 >= *(_QWORD *)&v12)
        v19 %= *(_QWORD *)&v12;
    }
    else
    {
      v19 &= *(_QWORD *)&v12 - 1;
    }
    if (v19 != v16)
      goto LABEL_27;
LABEL_26:
    v18 = (uint64_t *)*v18;
    if (!v18)
      goto LABEL_27;
  }
  if (strcmp((const char *)v18[2], v7))
    goto LABEL_26;
  v30 = v18 + 3;
LABEL_28:
  v20 = *v30;
  v21 = HIDWORD(*v30);
  if (!*v30)
  {
    v23 = a2[3];
    if (!v23 || (v24 = sub_18881C798(v23[4], v23, a3), LODWORD(v20) = v24, v21 = HIDWORD(v24), !(_DWORD)v24))
    {
      if (AddrObjGoogle::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((AddrObjGoogle::protobuf::DescriptorPool *)a2, a3))
      {
        if (*(char *)(a3 + 23) < 0)
          a3 = *(_QWORD *)a3;
        v25 = *(_BYTE *)a3;
        if (*(_BYTE *)a3)
        {
          v26 = 0;
          v27 = (unsigned __int8 *)(a3 + 1);
          v28 = a1;
          do
          {
            v26 = 5 * v26 + v25;
            v29 = *v27++;
            v25 = v29;
          }
          while (v29);
        }
        else
        {
          v26 = 0;
          v28 = a1;
        }
        v31 = v28[26];
        if (v31)
        {
          v32 = (uint8x8_t)vcnt_s8(v31);
          v32.i16[0] = vaddlv_u8(v32);
          v33 = v32.u32[0];
          if (v32.u32[0] > 1uLL)
          {
            v34 = v26;
            if (v26 >= *(_QWORD *)&v31)
              v34 = v26 % *(_QWORD *)&v31;
          }
          else
          {
            v34 = (*(_QWORD *)&v31 - 1) & v26;
          }
          v35 = *(uint64_t ***)(*(_QWORD *)&a1[25] + 8 * v34);
          if (v35)
          {
            for (i = *v35; i; i = (uint64_t *)*i)
            {
              v37 = i[1];
              if (v26 == v37)
              {
                if (!strcmp((const char *)i[2], (const char *)a3))
                {
                  v13 = i + 3;
                  goto LABEL_58;
                }
              }
              else
              {
                if (v33 > 1)
                {
                  if (v37 >= *(_QWORD *)&v31)
                    v37 %= *(_QWORD *)&v31;
                }
                else
                {
                  v37 &= *(_QWORD *)&v31 - 1;
                }
                if (v37 != v34)
                  break;
              }
            }
          }
        }
        sub_188829F58();
LABEL_58:
        v20 = *v13;
        v21 = HIDWORD(*v13);
      }
      else
      {
        LODWORD(v20) = 0;
      }
    }
  }
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v38);
  return v20 | ((unint64_t)v21 << 32);
}

void sub_18881CA6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((pthread_mutex_t ***)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (sub_18881C798(*(int8x8_t **)(a1 + 32), (pthread_mutex_t ***)a1, a2) != 2)
    return 0;
  result = v2;
  if (!*(_BYTE *)(v2 + 52))
    return 0;
  return result;
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByNumber(AddrObjGoogle::protobuf::DescriptorPool *this, const AddrObjGoogle::protobuf::Descriptor *a2, uint64_t a3)
{
  pthread_mutex_t **v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t ExtensionByNumber;
  AddrObjGoogle::protobuf::DescriptorPool *v10;
  uint64_t v11;
  uint64_t *v12;
  pthread_mutex_t **v14;
  const AddrObjGoogle::protobuf::Descriptor *v15;
  uint64_t v16;

  v6 = *(pthread_mutex_t ***)this;
  v14 = v6;
  if (v6)
    AddrObjGoogle::protobuf::internal::Mutex::Lock(v6);
  v7 = *((_QWORD *)this + 4);
  v15 = a2;
  v16 = a3;
  v8 = std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::find<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(v7 + 280, (unint64_t *)&v15);
  if ((uint64_t *)(v7 + 288) == v8 || (ExtensionByNumber = v8[6]) == 0)
  {
    v10 = (AddrObjGoogle::protobuf::DescriptorPool *)*((_QWORD *)this + 3);
    if (!v10 || (ExtensionByNumber = AddrObjGoogle::protobuf::DescriptorPool::FindExtensionByNumber(v10, a2, a3)) == 0)
    {
      if (!AddrObjGoogle::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(this, a2, a3)
        || (v11 = *((_QWORD *)this + 4),
            v15 = a2,
            v16 = a3,
            v12 = std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::find<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(v11 + 280, (unint64_t *)&v15), (uint64_t *)(v11 + 288) == v12)|| (ExtensionByNumber = v12[6]) == 0)
      {
        ExtensionByNumber = 0;
      }
    }
  }
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v14);
  return ExtensionByNumber;
}

void sub_18881CBA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((pthread_mutex_t ***)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(AddrObjGoogle::protobuf::DescriptorPool *this, const AddrObjGoogle::protobuf::Descriptor *a2, uint64_t a3)
{
  _QWORD *v6;
  const char *v7;
  uint64_t **v8;
  _BOOL8 v9;
  _BYTE v11[16];
  uint64_t v12;
  const char *v13;

  if (!*((_QWORD *)this + 1))
    return 0;
  AddrObjGoogle::protobuf::FileDescriptorProto::FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)v11);
  v9 = ((*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _BYTE *))(**((_QWORD **)this + 1) + 32))(*((_QWORD *)this + 1), *((_QWORD *)a2 + 1), a3, v11) & 1) != 0&& ((v6 = (_QWORD *)(*((_QWORD *)this + 4) + 240), *(char *)(v12 + 23) >= 0)? (v7 = (const char *)v12): (v7 = *(const char **)v12), (v13 = v7, (v8 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v6, &v13)) == 0)|| !v8[3])&& AddrObjGoogle::protobuf::DescriptorPool::BuildFileFromDatabase((addr_obj::Localization **)this, (const AddrObjGoogle::protobuf::FileDescriptorProto *)v11) != 0;
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)v11);
  return v9;
}

void sub_18881CC7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::Descriptor::FindFieldByNumber(AddrObjGoogle::protobuf::Descriptor *this, int a2)
{
  int8x8_t *v2;
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v12;

  v2 = *(int8x8_t **)(*((_QWORD *)this + 2) + 144);
  v3 = v2[16];
  if (!*(_QWORD *)&v3)
    return 0;
  v4 = 0xFFFFLL * (_QWORD)this + a2;
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    v6 = 0xFFFFLL * (_QWORD)this + a2;
    if (v4 >= *(_QWORD *)&v3)
      v6 = v4 % *(_QWORD *)&v3;
  }
  else
  {
    v6 = (*(_QWORD *)&v3 - 1) & v4;
  }
  v7 = *(uint64_t ***)(*(_QWORD *)&v2[15] + 8 * v6);
  if (!v7)
    return 0;
  v8 = *v7;
  if (!v8)
    return 0;
  while (1)
  {
    v9 = v8[1];
    if (v4 == v9)
      break;
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v6)
      return 0;
LABEL_20:
    v8 = (uint64_t *)*v8;
    if (!v8)
      return 0;
  }
  if ((AddrObjGoogle::protobuf::Descriptor *)v8[2] != this || *((_DWORD *)v8 + 6) != a2)
    goto LABEL_20;
  v12 = v8[4];
  if (!v12)
    return 0;
  if (*(_BYTE *)(v12 + 52))
    return 0;
  else
    return v8[4];
}

uint64_t AddrObjGoogle::protobuf::Descriptor::FindFieldByName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (!sub_18881CDB0(*(_QWORD **)(*(_QWORD *)(a1 + 16) + 144), a1, a2, 2))
    return 0;
  if (*(_BYTE *)(v2 + 52))
    return 0;
  return v2;
}

uint64_t sub_18881CDB0(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  const char *v6;
  char v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int8x8_t v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *i;
  unint64_t v18;
  uint64_t result;
  uint64_t *v20;

  if (*(char *)(a3 + 23) >= 0)
    v6 = (const char *)a3;
  else
    v6 = *(const char **)a3;
  v7 = *v6;
  if (*v6)
  {
    v8 = 0;
    v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      v8 = 5 * v8 + v7;
      v10 = *v9++;
      v7 = v10;
    }
    while (v10);
  }
  else
  {
    v8 = 0;
  }
  v11 = (int8x8_t)a1[1];
  if (v11)
  {
    v12 = v8 - a2 + (a2 << 16);
    v13 = (uint8x8_t)vcnt_s8(v11);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v15 = v8 - a2 + (a2 << 16);
      if (v12 >= *(_QWORD *)&v11)
        v15 = v12 % *(_QWORD *)&v11;
    }
    else
    {
      v15 = (*(_QWORD *)&v11 - 1) & v12;
    }
    v16 = *(uint64_t ***)(*a1 + 8 * v15);
    if (v16)
    {
      for (i = *v16; i; i = (uint64_t *)*i)
      {
        v18 = i[1];
        if (v12 == v18)
        {
          if (i[2] == a2 && !strcmp((const char *)i[3], v6))
          {
            v20 = i + 4;
            goto LABEL_27;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v18 >= *(_QWORD *)&v11)
              v18 %= *(_QWORD *)&v11;
          }
          else
          {
            v18 &= *(_QWORD *)&v11 - 1;
          }
          if (v18 != v15)
            break;
        }
      }
    }
  }
  sub_188829F58();
  v20 = &qword_1EDF508B8;
LABEL_27:
  result = *v20;
  if (*v20 != a4)
  {
    sub_188829F58();
    return qword_1EDF508B8;
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptor::FindValueByName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (sub_18881CDB0(*(_QWORD **)(*(_QWORD *)(a1 + 16) + 144), a1, a2, 4))
    return v2;
  else
    return 0;
}

uint64_t AddrObjGoogle::protobuf::EnumDescriptor::FindValueByNumber(AddrObjGoogle::protobuf::EnumDescriptor *this, int a2)
{
  int8x8_t *v2;
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *i;
  unint64_t v9;

  v2 = *(int8x8_t **)(*((_QWORD *)this + 2) + 144);
  v3 = v2[21];
  if (v3)
  {
    v4 = 0xFFFFLL * (_QWORD)this + a2;
    v5 = (uint8x8_t)vcnt_s8(v3);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      v6 = 0xFFFFLL * (_QWORD)this + a2;
      if (v4 >= *(_QWORD *)&v3)
        v6 = v4 % *(_QWORD *)&v3;
    }
    else
    {
      v6 = (*(_QWORD *)&v3 - 1) & v4;
    }
    v7 = *(uint64_t ***)(*(_QWORD *)&v2[20] + 8 * v6);
    if (v7)
    {
      for (i = *v7; i; i = (uint64_t *)*i)
      {
        v9 = i[1];
        if (v4 == v9)
        {
          if ((AddrObjGoogle::protobuf::EnumDescriptor *)i[2] == this && *((_DWORD *)i + 6) == a2)
            return i[4];
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(_QWORD *)&v3)
              v9 %= *(_QWORD *)&v3;
          }
          else
          {
            v9 &= *(_QWORD *)&v3 - 1;
          }
          if (v9 != v6)
            return 0;
        }
      }
    }
  }
  return 0;
}

BOOL AddrObjGoogle::protobuf::Descriptor::IsExtensionNumber(AddrObjGoogle::protobuf::Descriptor *this, int a2)
{
  unint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  BOOL v5;

  v2 = *((unsigned int *)this + 22);
  if ((int)v2 < 1)
  {
    return 0;
  }
  else
  {
    v3 = 0;
    v4 = (_DWORD *)(*((_QWORD *)this + 12) + 4);
    v5 = 1;
    do
    {
      if (*(v4 - 1) <= a2 && *v4 > a2)
        break;
      v4 += 2;
      v5 = ++v3 < v2;
    }
    while (v2 != v3);
  }
  return v5;
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::BuildFileFromDatabase(addr_obj::Localization **this, const AddrObjGoogle::protobuf::FileDescriptorProto *a2)
{
  addr_obj::Localization *v4;
  addr_obj::Localization *v5;
  uint64_t v6;
  void *v8[6];
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;

  addr_obj::Localization::getDisplayLanguage(*this);
  v4 = this[4];
  v5 = this[2];
  v8[0] = this;
  v8[1] = v4;
  v10 = 0;
  v11 = 0;
  v14[0] = 0;
  v14[1] = 0;
  v8[2] = v5;
  memset(&v8[3], 0, 24);
  v9 = 0;
  v12 = 0;
  v13 = v14;
  v15 = 0u;
  v16 = 0u;
  v6 = AddrObjGoogle::protobuf::DescriptorBuilder::BuildFile((AddrObjGoogle::protobuf::DescriptorBuilder *)v8, a2);
  AddrObjGoogle::protobuf::DescriptorBuilder::~DescriptorBuilder(v8);
  return v6;
}

void sub_18881D100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  int8x8_t *v5;
  std::string *p_str;
  char v7;
  unint64_t v8;
  std::string::value_type *v9;
  int v10;
  int8x8_t v11;
  uint8x8_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t **v15;
  uint64_t *i;
  unint64_t v17;
  int v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t IsSubSymbolOfBuiltType;
  std::string v25;
  std::string __str;
  char v27;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __str = *(std::string *)a2;
  v3 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v3 == -1)
  {
LABEL_39:
    v21 = *(_QWORD *)(a1 + 24);
    if (v21)
      IsSubSymbolOfBuiltType = AddrObjGoogle::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v21, a2);
    else
      IsSubSymbolOfBuiltType = 0;
  }
  else
  {
    v4 = v3;
    while (1)
    {
      std::string::basic_string(&v25, &__str, 0, v4, (std::allocator<char> *)&v27);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      __str = v25;
      v5 = *(int8x8_t **)(a1 + 32);
      if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_str = &__str;
      else
        p_str = (std::string *)v25.__r_.__value_.__r.__words[0];
      v7 = p_str->__r_.__value_.__s.__data_[0];
      if (p_str->__r_.__value_.__s.__data_[0])
      {
        v8 = 0;
        v9 = &p_str->__r_.__value_.__s.__data_[1];
        do
        {
          v8 = 5 * v8 + v7;
          v10 = *v9++;
          v7 = v10;
        }
        while (v10);
      }
      else
      {
        v8 = 0;
      }
      v11 = v5[26];
      if (v11)
      {
        v12 = (uint8x8_t)vcnt_s8(v11);
        v12.i16[0] = vaddlv_u8(v12);
        v13 = v12.u32[0];
        if (v12.u32[0] > 1uLL)
        {
          v14 = v8;
          if (v8 >= *(_QWORD *)&v11)
            v14 = v8 % *(_QWORD *)&v11;
        }
        else
        {
          v14 = (*(_QWORD *)&v11 - 1) & v8;
        }
        v15 = *(uint64_t ***)(*(_QWORD *)&v5[25] + 8 * v14);
        if (v15)
        {
          for (i = *v15; i; i = (uint64_t *)*i)
          {
            v17 = i[1];
            if (v8 == v17)
            {
              if (!strcmp((const char *)i[2], (const char *)p_str))
              {
                v20 = i + 3;
                goto LABEL_33;
              }
            }
            else
            {
              if (v13 > 1)
              {
                if (v17 >= *(_QWORD *)&v11)
                  v17 %= *(_QWORD *)&v11;
              }
              else
              {
                v17 &= *(_QWORD *)&v11 - 1;
              }
              if (v17 != v14)
                break;
            }
          }
        }
      }
      sub_188829F58();
      v20 = &qword_1EDF508B8;
LABEL_33:
      v18 = *(_DWORD *)v20;
      if (v18 && v18 != 7)
        break;
      v4 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v4 == -1)
        goto LABEL_39;
    }
    IsSubSymbolOfBuiltType = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return IsSubSymbolOfBuiltType;
}

void sub_18881D33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::FieldDescriptor::DefaultValueAsString(AddrObjGoogle::protobuf::FieldDescriptor *this@<X0>, char *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  int v4;
  std::string *v7;
  std::string *v8;
  char *v9;
  __int128 *v10;
  __int128 v11;
  std::string::size_type v12;
  std::string *v13;
  std::string *v14;
  uint64_t v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  std::string v18;
  std::string v19;

  v4 = (int)a2;
  if (!*((_BYTE *)this + 104))
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 1429);
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(&v19, "CHECK failed: has_default_value(): ");
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v7, "No default value");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19.__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)this + 11))
  {
    case 1:
      AddrObjGoogle::protobuf::SimpleDtoa(*((double *)this + 14), a2, a4);
      return;
    case 2:
      AddrObjGoogle::protobuf::SimpleFtoa(*((float *)this + 28), a2, a4);
      return;
    case 3:
    case 0x10:
    case 0x12:
      AddrObjGoogle::protobuf::SimpleItoa(*((AddrObjGoogle::protobuf **)this + 14), a3, a4);
      return;
    case 4:
    case 6:
      AddrObjGoogle::protobuf::SimpleItoa(*((AddrObjGoogle::protobuf **)this + 14), a3, a4);
      return;
    case 5:
    case 0xF:
    case 0x11:
      AddrObjGoogle::protobuf::SimpleItoa((AddrObjGoogle::protobuf *)*((unsigned int *)this + 28), a3, a4);
      return;
    case 7:
    case 0xD:
      AddrObjGoogle::protobuf::SimpleItoa((AddrObjGoogle::protobuf *)*((unsigned int *)this + 28), a3, a4);
      return;
    case 8:
      if (*((_BYTE *)this + 112))
        v9 = "true";
      else
        v9 = "false";
      goto LABEL_18;
    case 9:
    case 0xC:
      if (v4)
        AddrObjGoogle::protobuf::CEscape(*((_QWORD *)this + 14), &v18);
      v15 = *((_QWORD *)this + 14);
      if (*((_DWORD *)this + 11) == 12)
        AddrObjGoogle::protobuf::CEscape(v15, a4);
      if ((*(char *)(v15 + 23) & 0x80000000) == 0)
      {
        v11 = *(_OWORD *)v15;
        v12 = *(_QWORD *)(v15 + 16);
        goto LABEL_15;
      }
      v16 = *(const std::string::value_type **)v15;
      v17 = *(_QWORD *)(v15 + 8);
      goto LABEL_25;
    case 0xA:
    case 0xB:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 1467);
      v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(&v19, "Messages can't have default values!");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v13);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19.__r_.__value_.__l.__data_);
      goto LABEL_17;
    case 0xE:
      v10 = (__int128 *)**((_QWORD **)this + 14);
      if (*((char *)v10 + 23) < 0)
      {
        v16 = *(const std::string::value_type **)v10;
        v17 = *((_QWORD *)v10 + 1);
LABEL_25:
        std::string::__init_copy_ctor_external(a4, v16, v17);
      }
      else
      {
        v11 = *v10;
        v12 = *((_QWORD *)v10 + 2);
LABEL_15:
        a4->__r_.__value_.__r.__words[2] = v12;
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v11;
      }
      return;
    default:
LABEL_17:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 1470);
      v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(&v19, "Can't get here: failed to get default value as string");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v14);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19.__r_.__value_.__l.__data_);
      v9 = "";
LABEL_18:
      std::string::basic_string[abi:ne180100]<0>(a4, v9);
      return;
  }
}

void sub_18881D60C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::FileDescriptor::CopyTo(const AddrObjGoogle::protobuf::FileOptions **this, AddrObjGoogle::protobuf::FileDescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  AddrObjGoogle::protobuf::internal *v7;
  const AddrObjGoogle::protobuf::FileOptions *v8;
  uint64_t *v9;
  std::string *v10;
  uint64_t v11;
  const std::string *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  std::string *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const AddrObjGoogle::protobuf::FileOptions *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  AddrObjGoogle::protobuf::DescriptorProto *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const AddrObjGoogle::protobuf::FileOptions *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const AddrObjGoogle::protobuf::FileOptions *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const AddrObjGoogle::protobuf::FileOptions *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v60;
  uint64_t v61;
  uint64_t v62;
  const AddrObjGoogle::protobuf::FileOptions *v63;
  AddrObjGoogle::protobuf::FileOptions *v64;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 51) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v6, v4);
  v8 = this[1];
  if (*((char *)v8 + 23) < 0)
  {
    if (!*((_QWORD *)v8 + 1))
      goto LABEL_12;
  }
  else if (!*((_BYTE *)v8 + 23))
  {
    goto LABEL_12;
  }
  *((_DWORD *)a2 + 51) |= 2u;
  v9 = (uint64_t *)*((_QWORD *)a2 + 3);
  if (v9 == AddrObjGoogle::protobuf::internal::kEmptyString(v7))
  {
    v10 = (std::string *)operator new();
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 3) = v10;
  }
  else
  {
    v10 = (std::string *)*((_QWORD *)a2 + 3);
  }
  v7 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v10, (const std::string *)v8);
LABEL_12:
  if (*((int *)this + 6) >= 1)
  {
    v11 = 0;
    do
    {
      v12 = (const std::string *)**((_QWORD **)this[4] + v11);
      v13 = *((_DWORD *)a2 + 11);
      v14 = *((int *)a2 + 10);
      if ((int)v14 >= v13)
      {
        if (v13 == *((_DWORD *)a2 + 12))
        {
          v7 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 8, v13 + 1);
          v13 = *((_DWORD *)a2 + 11);
        }
        *((_DWORD *)a2 + 11) = v13 + 1;
        v16 = (std::string *)AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New(v7);
        v17 = *((_QWORD *)a2 + 4);
        v18 = *((int *)a2 + 10);
        *((_DWORD *)a2 + 10) = v18 + 1;
        *(_QWORD *)(v17 + 8 * v18) = v16;
      }
      else
      {
        v15 = *((_QWORD *)a2 + 4);
        *((_DWORD *)a2 + 10) = v14 + 1;
        v16 = *(std::string **)(v15 + 8 * v14);
      }
      v7 = (AddrObjGoogle::protobuf::internal *)std::string::operator=(v16, v12);
      ++v11;
    }
    while (v11 < *((int *)this + 6));
  }
  if (*((int *)this + 10) >= 1)
  {
    v19 = 0;
    do
    {
      v20 = *((_DWORD *)this[6] + v19);
      v21 = *((_DWORD *)a2 + 16);
      if (v21 == *((_DWORD *)a2 + 17))
      {
        v7 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::RepeatedField<int>::Reserve((_DWORD *)a2 + 14, v21 + 1);
        v21 = *((_DWORD *)a2 + 16);
      }
      v22 = *((_QWORD *)a2 + 7);
      *((_DWORD *)a2 + 16) = v21 + 1;
      *(_DWORD *)(v22 + 4 * v21) = v20;
      ++v19;
    }
    while (v19 < *((int *)this + 10));
  }
  if (*((int *)this + 14) >= 1)
  {
    v23 = 0;
    do
    {
      v24 = *((_DWORD *)this[8] + v23);
      v25 = *((_DWORD *)a2 + 20);
      if (v25 == *((_DWORD *)a2 + 21))
      {
        v7 = (AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::RepeatedField<int>::Reserve((_DWORD *)a2 + 18, v25 + 1);
        v25 = *((_DWORD *)a2 + 20);
      }
      v26 = *((_QWORD *)a2 + 9);
      *((_DWORD *)a2 + 20) = v25 + 1;
      *(_DWORD *)(v26 + 4 * v25) = v24;
      ++v23;
    }
    while (v23 < *((int *)this + 14));
  }
  if (*((int *)this + 18) >= 1)
  {
    v27 = 0;
    v28 = 0;
    do
    {
      v29 = this[10];
      v30 = *((_DWORD *)a2 + 25);
      v31 = *((int *)a2 + 24);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)a2 + 26))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 22, v30 + 1);
          v30 = *((_DWORD *)a2 + 25);
        }
        *((_DWORD *)a2 + 25) = v30 + 1;
        v33 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::DescriptorProto>::New();
        v34 = *((_QWORD *)a2 + 11);
        v35 = *((int *)a2 + 24);
        *((_DWORD *)a2 + 24) = v35 + 1;
        *(_QWORD *)(v34 + 8 * v35) = v33;
      }
      else
      {
        v32 = *((_QWORD *)a2 + 11);
        *((_DWORD *)a2 + 24) = v31 + 1;
        v33 = *(AddrObjGoogle::protobuf::DescriptorProto **)(v32 + 8 * v31);
      }
      AddrObjGoogle::protobuf::Descriptor::CopyTo((const AddrObjGoogle::protobuf::MessageOptions **)((char *)v29 + v27), v33);
      ++v28;
      v27 += 120;
    }
    while (v28 < *((int *)this + 18));
  }
  if (*((int *)this + 22) >= 1)
  {
    v36 = 0;
    v37 = 0;
    do
    {
      v38 = this[12];
      v39 = *((_DWORD *)a2 + 31);
      v40 = *((int *)a2 + 30);
      if ((int)v40 >= v39)
      {
        if (v39 == *((_DWORD *)a2 + 32))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 28, v39 + 1);
          v39 = *((_DWORD *)a2 + 31);
        }
        *((_DWORD *)a2 + 31) = v39 + 1;
        v42 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::EnumDescriptorProto>::New();
        v43 = *((_QWORD *)a2 + 14);
        v44 = *((int *)a2 + 30);
        *((_DWORD *)a2 + 30) = v44 + 1;
        *(_QWORD *)(v43 + 8 * v44) = v42;
      }
      else
      {
        v41 = *((_QWORD *)a2 + 14);
        *((_DWORD *)a2 + 30) = v40 + 1;
        v42 = *(AddrObjGoogle::protobuf::EnumDescriptorProto **)(v41 + 8 * v40);
      }
      AddrObjGoogle::protobuf::EnumDescriptor::CopyTo((const AddrObjGoogle::protobuf::EnumOptions **)((char *)v38 + v36), v42);
      ++v37;
      v36 += 56;
    }
    while (v37 < *((int *)this + 22));
  }
  if (*((int *)this + 26) >= 1)
  {
    v45 = 0;
    v46 = 0;
    do
    {
      v47 = this[14];
      v48 = *((_DWORD *)a2 + 37);
      v49 = *((int *)a2 + 36);
      if ((int)v49 >= v48)
      {
        if (v48 == *((_DWORD *)a2 + 38))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 34, v48 + 1);
          v48 = *((_DWORD *)a2 + 37);
        }
        *((_DWORD *)a2 + 37) = v48 + 1;
        v51 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::ServiceDescriptorProto>::New();
        v52 = *((_QWORD *)a2 + 17);
        v53 = *((int *)a2 + 36);
        *((_DWORD *)a2 + 36) = v53 + 1;
        *(_QWORD *)(v52 + 8 * v53) = v51;
      }
      else
      {
        v50 = *((_QWORD *)a2 + 17);
        *((_DWORD *)a2 + 36) = v49 + 1;
        v51 = *(AddrObjGoogle::protobuf::ServiceDescriptorProto **)(v50 + 8 * v49);
      }
      AddrObjGoogle::protobuf::ServiceDescriptor::CopyTo((const AddrObjGoogle::protobuf::ServiceOptions **)((char *)v47 + v45), v51);
      ++v46;
      v45 += 48;
    }
    while (v46 < *((int *)this + 26));
  }
  if (*((int *)this + 30) >= 1)
  {
    v54 = 0;
    v55 = 0;
    do
    {
      v56 = this[16];
      v57 = *((_DWORD *)a2 + 43);
      v58 = *((int *)a2 + 42);
      if ((int)v58 >= v57)
      {
        if (v57 == *((_DWORD *)a2 + 44))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 40, v57 + 1);
          v57 = *((_DWORD *)a2 + 43);
        }
        *((_DWORD *)a2 + 43) = v57 + 1;
        v60 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FieldDescriptorProto>::New();
        v61 = *((_QWORD *)a2 + 20);
        v62 = *((int *)a2 + 42);
        *((_DWORD *)a2 + 42) = v62 + 1;
        *(_QWORD *)(v61 + 8 * v62) = v60;
      }
      else
      {
        v59 = *((_QWORD *)a2 + 20);
        *((_DWORD *)a2 + 42) = v58 + 1;
        v60 = *(AddrObjGoogle::protobuf::FieldDescriptorProto **)(v59 + 8 * v58);
      }
      AddrObjGoogle::protobuf::FieldDescriptor::CopyTo((const AddrObjGoogle::protobuf::FieldOptions **)((char *)v56 + v54), v60);
      ++v55;
      v54 += 120;
    }
    while (v55 < *((int *)this + 30));
  }
  v63 = this[17];
  if (v63 != (const AddrObjGoogle::protobuf::FileOptions *)AddrObjGoogle::protobuf::FileOptions::default_instance(v7))
  {
    *((_DWORD *)a2 + 51) |= 0x200u;
    v64 = (AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)a2 + 23);
    if (!v64)
    {
      v64 = (AddrObjGoogle::protobuf::FileOptions *)operator new();
      AddrObjGoogle::protobuf::FileOptions::FileOptions(v64);
      *((_QWORD *)a2 + 23) = v64;
    }
    AddrObjGoogle::protobuf::FileOptions::CopyFrom(v64, this[17]);
  }
}

void sub_18881DB74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::Descriptor::CopyTo(const AddrObjGoogle::protobuf::MessageOptions **this, AddrObjGoogle::protobuf::DescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  AddrObjGoogle::protobuf::MessageOptions *v7;
  uint64_t v8;
  uint64_t v9;
  const AddrObjGoogle::protobuf::MessageOptions *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const AddrObjGoogle::protobuf::MessageOptions *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  AddrObjGoogle::protobuf::DescriptorProto *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const AddrObjGoogle::protobuf::MessageOptions *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  AddrObjGoogle::protobuf::EnumDescriptorProto *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  const AddrObjGoogle::protobuf::MessageOptions *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  AddrObjGoogle::protobuf::FieldDescriptorProto *v51;
  uint64_t v52;
  uint64_t v53;
  const AddrObjGoogle::protobuf::MessageOptions *v54;
  AddrObjGoogle::protobuf::MessageOptions *v55;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 39) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = (AddrObjGoogle::protobuf::MessageOptions *)std::string::operator=(v6, v4);
  if (*((int *)this + 11) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = this[6];
      v11 = *((_DWORD *)a2 + 9);
      v12 = *((int *)a2 + 8);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)a2 + 10))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 6, v11 + 1);
          v11 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v11 + 1;
        v14 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FieldDescriptorProto>::New();
        v15 = *((_QWORD *)a2 + 3);
        v16 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v16 + 1;
        *(_QWORD *)(v15 + 8 * v16) = v14;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 3);
        *((_DWORD *)a2 + 8) = v12 + 1;
        v14 = *(AddrObjGoogle::protobuf::FieldDescriptorProto **)(v13 + 8 * v12);
      }
      AddrObjGoogle::protobuf::FieldDescriptor::CopyTo((const AddrObjGoogle::protobuf::FieldOptions **)((char *)v10 + v8), v14);
      ++v9;
      v8 += 120;
    }
    while (v9 < *((int *)this + 11));
  }
  if (*((int *)this + 14) >= 1)
  {
    v17 = 0;
    v18 = 0;
    do
    {
      v19 = this[8];
      v20 = *((_DWORD *)a2 + 21);
      v21 = *((int *)a2 + 20);
      if ((int)v21 >= v20)
      {
        if (v20 == *((_DWORD *)a2 + 22))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 18, v20 + 1);
          v20 = *((_DWORD *)a2 + 21);
        }
        *((_DWORD *)a2 + 21) = v20 + 1;
        v23 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::DescriptorProto>::New();
        v24 = *((_QWORD *)a2 + 9);
        v25 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v25 + 1;
        *(_QWORD *)(v24 + 8 * v25) = v23;
      }
      else
      {
        v22 = *((_QWORD *)a2 + 9);
        *((_DWORD *)a2 + 20) = v21 + 1;
        v23 = *(AddrObjGoogle::protobuf::DescriptorProto **)(v22 + 8 * v21);
      }
      v7 = (AddrObjGoogle::protobuf::MessageOptions *)AddrObjGoogle::protobuf::Descriptor::CopyTo((const AddrObjGoogle::protobuf::MessageOptions *)((char *)v19 + v17), v23);
      ++v18;
      v17 += 120;
    }
    while (v18 < *((int *)this + 14));
  }
  if (*((int *)this + 18) >= 1)
  {
    v26 = 0;
    v27 = 0;
    do
    {
      v28 = this[10];
      v29 = *((_DWORD *)a2 + 27);
      v30 = *((int *)a2 + 26);
      if ((int)v30 >= v29)
      {
        if (v29 == *((_DWORD *)a2 + 28))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 24, v29 + 1);
          v29 = *((_DWORD *)a2 + 27);
        }
        *((_DWORD *)a2 + 27) = v29 + 1;
        v32 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::EnumDescriptorProto>::New();
        v33 = *((_QWORD *)a2 + 12);
        v34 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 26) = v34 + 1;
        *(_QWORD *)(v33 + 8 * v34) = v32;
      }
      else
      {
        v31 = *((_QWORD *)a2 + 12);
        *((_DWORD *)a2 + 26) = v30 + 1;
        v32 = *(AddrObjGoogle::protobuf::EnumDescriptorProto **)(v31 + 8 * v30);
      }
      AddrObjGoogle::protobuf::EnumDescriptor::CopyTo((const AddrObjGoogle::protobuf::EnumOptions **)((char *)v28 + v26), v32);
      ++v27;
      v26 += 56;
    }
    while (v27 < *((int *)this + 18));
  }
  if (*((int *)this + 22) >= 1)
  {
    v35 = 0;
    v36 = 0;
    do
    {
      v37 = *((_DWORD *)a2 + 33);
      v38 = *((int *)a2 + 32);
      if ((int)v38 >= v37)
      {
        if (v37 == *((_DWORD *)a2 + 34))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 30, v37 + 1);
          v37 = *((_DWORD *)a2 + 33);
        }
        *((_DWORD *)a2 + 33) = v37 + 1;
        v7 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::DescriptorProto_ExtensionRange>::New();
        v40 = *((_QWORD *)a2 + 15);
        v41 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 32) = v41 + 1;
        *(_QWORD *)(v40 + 8 * v41) = v7;
      }
      else
      {
        v39 = *((_QWORD *)a2 + 15);
        *((_DWORD *)a2 + 32) = v38 + 1;
        v7 = *(AddrObjGoogle::protobuf::MessageOptions **)(v39 + 8 * v38);
      }
      v42 = (int *)((char *)this[12] + v35);
      v43 = *v42;
      v44 = *((_DWORD *)v7 + 7);
      *((_DWORD *)v7 + 7) = v44 | 1;
      LODWORD(v42) = v42[1];
      *((_DWORD *)v7 + 7) = v44 | 3;
      *((_DWORD *)v7 + 4) = v43;
      *((_DWORD *)v7 + 5) = (_DWORD)v42;
      ++v36;
      v35 += 8;
    }
    while (v36 < *((int *)this + 22));
  }
  if (*((int *)this + 26) >= 1)
  {
    v45 = 0;
    v46 = 0;
    do
    {
      v47 = this[14];
      v48 = *((_DWORD *)a2 + 15);
      v49 = *((int *)a2 + 14);
      if ((int)v49 >= v48)
      {
        if (v48 == *((_DWORD *)a2 + 16))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 12, v48 + 1);
          v48 = *((_DWORD *)a2 + 15);
        }
        *((_DWORD *)a2 + 15) = v48 + 1;
        v51 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::FieldDescriptorProto>::New();
        v52 = *((_QWORD *)a2 + 6);
        v53 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v53 + 1;
        *(_QWORD *)(v52 + 8 * v53) = v51;
      }
      else
      {
        v50 = *((_QWORD *)a2 + 6);
        *((_DWORD *)a2 + 14) = v49 + 1;
        v51 = *(AddrObjGoogle::protobuf::FieldDescriptorProto **)(v50 + 8 * v49);
      }
      AddrObjGoogle::protobuf::FieldDescriptor::CopyTo((const AddrObjGoogle::protobuf::FieldOptions **)((char *)v47 + v45), v51);
      ++v46;
      v45 += 120;
    }
    while (v46 < *((int *)this + 26));
  }
  v54 = this[4];
  if (v54 != (const AddrObjGoogle::protobuf::MessageOptions *)AddrObjGoogle::protobuf::MessageOptions::default_instance(v7))
  {
    *((_DWORD *)a2 + 39) |= 0x40u;
    v55 = (AddrObjGoogle::protobuf::MessageOptions *)*((_QWORD *)a2 + 18);
    if (!v55)
    {
      v55 = (AddrObjGoogle::protobuf::MessageOptions *)operator new();
      AddrObjGoogle::protobuf::MessageOptions::MessageOptions(v55);
      *((_QWORD *)a2 + 18) = v55;
    }
    AddrObjGoogle::protobuf::MessageOptions::CopyFrom(v55, this[4]);
  }
}

void sub_18881DFA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumDescriptor::CopyTo(const AddrObjGoogle::protobuf::EnumOptions **this, AddrObjGoogle::protobuf::EnumDescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const AddrObjGoogle::protobuf::EnumOptions *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v14;
  uint64_t v15;
  uint64_t v16;
  const AddrObjGoogle::protobuf::EnumOptions *v17;
  AddrObjGoogle::protobuf::EnumOptions *v18;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 15) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = std::string::operator=(v6, v4);
  if (*((int *)this + 11) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = this[6];
      v11 = *((_DWORD *)a2 + 9);
      v12 = *((int *)a2 + 8);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)a2 + 10))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 6, v11 + 1);
          v11 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v11 + 1;
        v14 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::EnumValueDescriptorProto>::New();
        v15 = *((_QWORD *)a2 + 3);
        v16 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v16 + 1;
        *(_QWORD *)(v15 + 8 * v16) = v14;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 3);
        *((_DWORD *)a2 + 8) = v12 + 1;
        v14 = *(AddrObjGoogle::protobuf::EnumValueDescriptorProto **)(v13 + 8 * v12);
      }
      AddrObjGoogle::protobuf::EnumValueDescriptor::CopyTo((const AddrObjGoogle::protobuf::EnumValueOptions **)((char *)v10 + v8), v14);
      ++v9;
      v8 += 40;
    }
    while (v9 < *((int *)this + 11));
  }
  v17 = this[4];
  if (v17 != (const AddrObjGoogle::protobuf::EnumOptions *)AddrObjGoogle::protobuf::EnumOptions::default_instance((AddrObjGoogle::protobuf::EnumOptions *)v7))
  {
    *((_DWORD *)a2 + 15) |= 4u;
    v18 = (AddrObjGoogle::protobuf::EnumOptions *)*((_QWORD *)a2 + 6);
    if (!v18)
    {
      v18 = (AddrObjGoogle::protobuf::EnumOptions *)operator new();
      AddrObjGoogle::protobuf::EnumOptions::EnumOptions(v18);
      *((_QWORD *)a2 + 6) = v18;
    }
    AddrObjGoogle::protobuf::EnumOptions::CopyFrom(v18, this[4]);
  }
}

void sub_18881E14C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::ServiceDescriptor::CopyTo(const AddrObjGoogle::protobuf::ServiceOptions **this, AddrObjGoogle::protobuf::ServiceDescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  const AddrObjGoogle::protobuf::ServiceOptions *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v14;
  uint64_t v15;
  uint64_t v16;
  const AddrObjGoogle::protobuf::ServiceOptions *v17;
  AddrObjGoogle::protobuf::ServiceOptions *v18;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 15) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = std::string::operator=(v6, v4);
  if (*((int *)this + 8) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = this[5];
      v11 = *((_DWORD *)a2 + 9);
      v12 = *((int *)a2 + 8);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)a2 + 10))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 6, v11 + 1);
          v11 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v11 + 1;
        v14 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<AddrObjGoogle::protobuf::MethodDescriptorProto>::New();
        v15 = *((_QWORD *)a2 + 3);
        v16 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v16 + 1;
        *(_QWORD *)(v15 + 8 * v16) = v14;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 3);
        *((_DWORD *)a2 + 8) = v12 + 1;
        v14 = *(AddrObjGoogle::protobuf::MethodDescriptorProto **)(v13 + 8 * v12);
      }
      AddrObjGoogle::protobuf::MethodDescriptor::CopyTo((const AddrObjGoogle::protobuf::MethodOptions **)((char *)v10 + v8), v14);
      ++v9;
      v8 += 48;
    }
    while (v9 < *((int *)this + 8));
  }
  v17 = this[3];
  if (v17 != (const AddrObjGoogle::protobuf::ServiceOptions *)AddrObjGoogle::protobuf::ServiceOptions::default_instance((AddrObjGoogle::protobuf::ServiceOptions *)v7))
  {
    *((_DWORD *)a2 + 15) |= 4u;
    v18 = (AddrObjGoogle::protobuf::ServiceOptions *)*((_QWORD *)a2 + 6);
    if (!v18)
    {
      v18 = (AddrObjGoogle::protobuf::ServiceOptions *)operator new();
      AddrObjGoogle::protobuf::ServiceOptions::ServiceOptions(v18);
      *((_QWORD *)a2 + 6) = v18;
    }
    AddrObjGoogle::protobuf::ServiceOptions::CopyFrom(v18, this[3]);
  }
}

void sub_18881E2F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FieldDescriptor::CopyTo(const AddrObjGoogle::protobuf::FieldOptions **this, AddrObjGoogle::protobuf::FieldDescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  std::string *v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t *v14;
  std::string *v15;
  uint64_t v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  int v20;
  const AddrObjGoogle::protobuf::FieldOptions *v21;
  int v22;
  uint64_t *v23;
  _QWORD *v24;
  int v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t *v28;
  std::string *v29;
  const AddrObjGoogle::protobuf::FieldOptions *v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  const std::string::value_type *v34;
  std::string::size_type v35;
  uint64_t *v36;
  AddrObjGoogle::protobuf::internal *v37;
  std::string *v38;
  const AddrObjGoogle::protobuf::FieldOptions *v39;
  AddrObjGoogle::protobuf::FieldOptions *v40;
  std::string __str;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 18) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = std::string::operator=(v6, v4);
  v9 = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 6) = *((_DWORD *)this + 10);
  *((_DWORD *)a2 + 7) = *((_DWORD *)this + 12);
  v10 = *((_DWORD *)this + 11);
  v11 = v9 | 0xE;
  *((_DWORD *)a2 + 18) = v9 | 0xE;
  *((_DWORD *)a2 + 16) = v10;
  if (*((_BYTE *)this + 52))
  {
    if (!*((_BYTE *)this[7] + 41))
    {
      *((_DWORD *)a2 + 18) = v9 | 0x2E;
      v12 = (uint64_t *)*((_QWORD *)a2 + 5);
      if (v12 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
      {
        v13 = (_QWORD *)operator new();
        v13[1] = 0;
        v13[2] = 0;
        *v13 = 0;
        *((_QWORD *)a2 + 5) = v13;
      }
      else
      {
        v13 = (_QWORD *)*((_QWORD *)a2 + 5);
      }
      v7 = (std::string *)MEMORY[0x18D7640AC](v13, ".");
      v11 = *((_DWORD *)a2 + 18);
    }
    *((_DWORD *)a2 + 18) = v11 | 0x20;
    v14 = (uint64_t *)*((_QWORD *)a2 + 5);
    if (v14 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
    {
      v15 = (std::string *)operator new();
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)a2 + 5) = v15;
    }
    else
    {
      v15 = (std::string *)*((_QWORD *)a2 + 5);
    }
    v16 = *((_QWORD *)this[7] + 1);
    v17 = *(char *)(v16 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)*((_QWORD *)this[7] + 1);
    else
      v18 = *(const std::string::value_type **)v16;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(v16 + 23);
    else
      v19 = *(_QWORD *)(v16 + 8);
    v7 = std::string::append(v15, v18, v19);
    v10 = *((_DWORD *)this + 11);
  }
  v20 = AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[v10];
  if (v20 == 8)
  {
    v25 = *((_DWORD *)a2 + 18);
    if (!*((_BYTE *)this[10] + 41))
    {
      *((_DWORD *)a2 + 18) = v25 | 0x10;
      v26 = (uint64_t *)*((_QWORD *)a2 + 4);
      if (v26 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
      {
        v27 = (_QWORD *)operator new();
        v27[1] = 0;
        v27[2] = 0;
        *v27 = 0;
        *((_QWORD *)a2 + 4) = v27;
      }
      else
      {
        v27 = (_QWORD *)*((_QWORD *)a2 + 4);
      }
      v7 = (std::string *)MEMORY[0x18D7640AC](v27, ".");
      v25 = *((_DWORD *)a2 + 18);
    }
    *((_DWORD *)a2 + 18) = v25 | 0x10;
    v31 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v31 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
    {
      v29 = (std::string *)operator new();
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)a2 + 4) = v29;
    }
    else
    {
      v29 = (std::string *)*((_QWORD *)a2 + 4);
    }
    v30 = this[10];
  }
  else
  {
    if (v20 != 10)
      goto LABEL_49;
    v21 = this[9];
    v22 = *((_DWORD *)a2 + 18);
    if (*((_BYTE *)v21 + 40))
    {
      *((_DWORD *)a2 + 16) = 1;
      v22 &= ~8u;
      *((_DWORD *)a2 + 18) = v22;
    }
    if (!*((_BYTE *)v21 + 41))
    {
      *((_DWORD *)a2 + 18) = v22 | 0x10;
      v23 = (uint64_t *)*((_QWORD *)a2 + 4);
      if (v23 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
      {
        v24 = (_QWORD *)operator new();
        v24[1] = 0;
        v24[2] = 0;
        *v24 = 0;
        *((_QWORD *)a2 + 4) = v24;
      }
      else
      {
        v24 = (_QWORD *)*((_QWORD *)a2 + 4);
      }
      v7 = (std::string *)MEMORY[0x18D7640AC](v24, ".");
      v22 = *((_DWORD *)a2 + 18);
    }
    *((_DWORD *)a2 + 18) = v22 | 0x10;
    v28 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v28 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
    {
      v29 = (std::string *)operator new();
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)a2 + 4) = v29;
    }
    else
    {
      v29 = (std::string *)*((_QWORD *)a2 + 4);
    }
    v30 = this[9];
  }
  v32 = *((_QWORD *)v30 + 1);
  v33 = *(char *)(v32 + 23);
  if (v33 >= 0)
    v34 = (const std::string::value_type *)v32;
  else
    v34 = *(const std::string::value_type **)v32;
  if (v33 >= 0)
    v35 = *(unsigned __int8 *)(v32 + 23);
  else
    v35 = *(_QWORD *)(v32 + 8);
  v7 = std::string::append(v29, v34, v35);
LABEL_49:
  if (*((_BYTE *)this + 104))
  {
    AddrObjGoogle::protobuf::FieldDescriptor::DefaultValueAsString((AddrObjGoogle::protobuf::FieldDescriptor *)this, 0, v8, &__str);
    *((_DWORD *)a2 + 18) |= 0x40u;
    v36 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v36 == AddrObjGoogle::protobuf::internal::kEmptyString(v37))
    {
      v38 = (std::string *)operator new();
      v38->__r_.__value_.__r.__words[0] = 0;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      *((_QWORD *)a2 + 6) = v38;
    }
    else
    {
      v38 = (std::string *)*((_QWORD *)a2 + 6);
    }
    v7 = std::string::operator=(v38, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  v39 = this[12];
  if (v39 != (const AddrObjGoogle::protobuf::FieldOptions *)AddrObjGoogle::protobuf::FieldOptions::default_instance((AddrObjGoogle::protobuf::FieldOptions *)v7))
  {
    *((_DWORD *)a2 + 18) |= 0x80u;
    v40 = (AddrObjGoogle::protobuf::FieldOptions *)*((_QWORD *)a2 + 7);
    if (!v40)
    {
      v40 = (AddrObjGoogle::protobuf::FieldOptions *)operator new();
      AddrObjGoogle::protobuf::FieldOptions::FieldOptions(v40);
      *((_QWORD *)a2 + 7) = v40;
    }
    AddrObjGoogle::protobuf::FieldOptions::CopyFrom(v40, this[12]);
  }
}

void sub_18881E714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  MEMORY[0x18D76437C](v15, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumValueDescriptor::CopyTo(const AddrObjGoogle::protobuf::EnumValueOptions **this, AddrObjGoogle::protobuf::EnumValueDescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  std::string *v7;
  int v8;
  const AddrObjGoogle::protobuf::EnumValueOptions *v9;
  AddrObjGoogle::protobuf::EnumValueOptions *v10;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 10) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = std::string::operator=(v6, v4);
  v8 = *((_DWORD *)this + 4);
  *((_DWORD *)a2 + 10) |= 2u;
  *((_DWORD *)a2 + 8) = v8;
  v9 = this[4];
  if (v9 != (const AddrObjGoogle::protobuf::EnumValueOptions *)AddrObjGoogle::protobuf::EnumValueOptions::default_instance((AddrObjGoogle::protobuf::EnumValueOptions *)v7))
  {
    *((_DWORD *)a2 + 10) |= 4u;
    v10 = (AddrObjGoogle::protobuf::EnumValueOptions *)*((_QWORD *)a2 + 3);
    if (!v10)
    {
      v10 = (AddrObjGoogle::protobuf::EnumValueOptions *)operator new();
      AddrObjGoogle::protobuf::EnumValueOptions::EnumValueOptions(v10);
      *((_QWORD *)a2 + 3) = v10;
    }
    AddrObjGoogle::protobuf::EnumValueOptions::CopyFrom(v10, this[4]);
  }
}

void sub_18881E840(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::MethodDescriptor::CopyTo(const AddrObjGoogle::protobuf::MethodOptions **this, AddrObjGoogle::protobuf::MethodDescriptorProto *a2)
{
  const std::string *v4;
  uint64_t *v5;
  std::string *v6;
  std::string *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t *v10;
  std::string *v11;
  uint64_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  std::string *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t *v19;
  std::string *v20;
  uint64_t v21;
  int v22;
  const std::string::value_type *v23;
  std::string::size_type v24;
  std::string *v25;
  const AddrObjGoogle::protobuf::MethodOptions *v26;
  AddrObjGoogle::protobuf::MethodOptions *v27;

  v4 = (const std::string *)*this;
  *((_DWORD *)a2 + 13) |= 1u;
  v5 = (uint64_t *)*((_QWORD *)a2 + 2);
  if (v5 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)this))
  {
    v6 = (std::string *)operator new();
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v6 = (std::string *)*((_QWORD *)a2 + 2);
  }
  v7 = std::string::operator=(v6, v4);
  if (!*((_BYTE *)this[3] + 41))
  {
    *((_DWORD *)a2 + 13) |= 2u;
    v8 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v8 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
    {
      v9 = (_QWORD *)operator new();
      v9[1] = 0;
      v9[2] = 0;
      *v9 = 0;
      *((_QWORD *)a2 + 3) = v9;
    }
    else
    {
      v9 = (_QWORD *)*((_QWORD *)a2 + 3);
    }
    v7 = (std::string *)MEMORY[0x18D7640AC](v9, ".");
  }
  *((_DWORD *)a2 + 13) |= 2u;
  v10 = (uint64_t *)*((_QWORD *)a2 + 3);
  if (v10 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v7))
  {
    v11 = (std::string *)operator new();
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 3) = v11;
  }
  else
  {
    v11 = (std::string *)*((_QWORD *)a2 + 3);
  }
  v12 = *((_QWORD *)this[3] + 1);
  v13 = *(char *)(v12 + 23);
  if (v13 >= 0)
    v14 = (const std::string::value_type *)*((_QWORD *)this[3] + 1);
  else
    v14 = *(const std::string::value_type **)v12;
  if (v13 >= 0)
    v15 = *(unsigned __int8 *)(v12 + 23);
  else
    v15 = *(_QWORD *)(v12 + 8);
  v16 = std::string::append(v11, v14, v15);
  if (!*((_BYTE *)this[4] + 41))
  {
    *((_DWORD *)a2 + 13) |= 4u;
    v17 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v17 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v16))
    {
      v18 = (_QWORD *)operator new();
      v18[1] = 0;
      v18[2] = 0;
      *v18 = 0;
      *((_QWORD *)a2 + 4) = v18;
    }
    else
    {
      v18 = (_QWORD *)*((_QWORD *)a2 + 4);
    }
    v16 = (std::string *)MEMORY[0x18D7640AC](v18, ".");
  }
  *((_DWORD *)a2 + 13) |= 4u;
  v19 = (uint64_t *)*((_QWORD *)a2 + 4);
  if (v19 == AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v16))
  {
    v20 = (std::string *)operator new();
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)a2 + 4) = v20;
  }
  else
  {
    v20 = (std::string *)*((_QWORD *)a2 + 4);
  }
  v21 = *((_QWORD *)this[4] + 1);
  v22 = *(char *)(v21 + 23);
  if (v22 >= 0)
    v23 = (const std::string::value_type *)*((_QWORD *)this[4] + 1);
  else
    v23 = *(const std::string::value_type **)v21;
  if (v22 >= 0)
    v24 = *(unsigned __int8 *)(v21 + 23);
  else
    v24 = *(_QWORD *)(v21 + 8);
  v25 = std::string::append(v20, v23, v24);
  v26 = this[5];
  if (v26 != (const AddrObjGoogle::protobuf::MethodOptions *)AddrObjGoogle::protobuf::MethodOptions::default_instance((AddrObjGoogle::protobuf::MethodOptions *)v25))
  {
    *((_DWORD *)a2 + 13) |= 8u;
    v27 = (AddrObjGoogle::protobuf::MethodOptions *)*((_QWORD *)a2 + 5);
    if (!v27)
    {
      v27 = (AddrObjGoogle::protobuf::MethodOptions *)operator new();
      AddrObjGoogle::protobuf::MethodOptions::MethodOptions(v27);
      *((_QWORD *)a2 + 5) = v27;
    }
    AddrObjGoogle::protobuf::MethodOptions::CopyFrom(v27, this[5]);
  }
}

void sub_18881EAD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

BOOL sub_18881EAFC(int a1, uint64_t a2, std::string *a3)
{
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  void **p_p;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *__p;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  void **v43;
  int v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__p, 2 * a1, 32);
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v6 = sub_18882A038(a1, a2, (uint64_t)&v19);
  v8 = v19;
  v7 = v20;
  if (v6)
  {
    if (v20 == v19)
    {
      v7 = v19;
    }
    else
    {
      v9 = 0;
      v10 = 0;
      do
      {
        v11 = v24;
        p_p = (void **)__p;
        if ((v24 & 0x80u) == 0)
          p_p = &__p;
        v43 = p_p;
        if ((v24 & 0x80u) != 0)
          v11 = v23;
        v44 = v11;
        v13 = v8 + v9;
        if (*(char *)(v8 + v9 + 23) >= 0)
          v14 = v8 + v9;
        else
          v14 = *(_QWORD *)(v8 + v9);
        v41 = v14;
        v15 = *(unsigned __int8 *)(v13 + 23);
        v16 = *(_QWORD *)(v13 + 8);
        if ((v15 & 0x80u) == 0)
          LODWORD(v16) = v15;
        v42 = v16;
        v39 = 0;
        v40 = -1;
        v37 = 0;
        v38 = -1;
        v35 = 0;
        v36 = -1;
        v33 = 0;
        v34 = -1;
        v31 = 0;
        v32 = -1;
        v29 = 0;
        v30 = -1;
        v27 = 0;
        v28 = -1;
        v25 = 0;
        v26 = -1;
        *((_QWORD *)&v18 + 1) = &v29;
        *(_QWORD *)&v18 = &v31;
        AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0option $1;\n",
          (uint64_t)&v43,
          (uint64_t)&v41,
          (uint64_t)&v39,
          (uint64_t)&v37,
          (uint64_t)&v35,
          (uint64_t)&v33,
          v18,
          (uint64_t)&v27,
          (uint64_t)&v25);
        ++v10;
        v8 = v19;
        v7 = v20;
        v9 += 24;
      }
      while (0xAAAAAAAAAAAAAAABLL * ((v20 - v19) >> 3) > v10);
    }
  }
  v43 = (void **)&v19;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v43);
  if ((char)v24 < 0)
    operator delete(__p);
  return v8 != v7;
}

void sub_18881ECF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  *(_QWORD *)(v21 - 144) = &a13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 144));
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumDescriptor::DebugString(int *a1, int a2, std::string *a3)
{
  int v6;
  void *p_p;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  void *__p;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  int v39;
  void *v40;
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__p, 2 * a2, 32);
  v6 = v21;
  p_p = __p;
  if ((v21 & 0x80u) == 0)
    p_p = &__p;
  v40 = p_p;
  if ((v21 & 0x80u) != 0)
    v6 = v20;
  v41 = v6;
  v8 = *(uint64_t **)a1;
  v9 = *(char *)(*(_QWORD *)a1 + 23);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if (v9 < 0)
    v8 = **(uint64_t ***)a1;
  v38 = v8;
  v11 = v9;
  if (v9 < 0)
    v11 = v10;
  v39 = v11;
  v36 = 0;
  v37 = -1;
  v34 = 0;
  v35 = -1;
  v32 = 0;
  v33 = -1;
  v30 = 0;
  v31 = -1;
  v28 = 0;
  v29 = -1;
  v26 = 0;
  v27 = -1;
  v24 = 0;
  v25 = -1;
  v22 = 0;
  v23 = -1;
  *(_QWORD *)&v17 = &v28;
  *((_QWORD *)&v17 + 1) = &v26;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0enum $1 {\n", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, v17, (uint64_t)&v24, (uint64_t)&v22);
  v12 = a2 + 1;
  sub_18881EAFC(v12, *((_QWORD *)a1 + 4), a3);
  if (a1[11] >= 1)
  {
    v13 = 0;
    v14 = 0;
    do
    {
      AddrObjGoogle::protobuf::EnumValueDescriptor::DebugString((uint64_t ***)(*((_QWORD *)a1 + 6) + v13), v12, a3);
      ++v14;
      v13 += 40;
    }
    while (v14 < a1[11]);
  }
  v15 = v21;
  v16 = &__p;
  if ((v21 & 0x80u) != 0)
    v16 = __p;
  v40 = v16;
  if ((v21 & 0x80u) != 0)
    v15 = v20;
  v41 = v15;
  v38 = 0;
  v39 = -1;
  v36 = 0;
  v37 = -1;
  v34 = 0;
  v35 = -1;
  v32 = 0;
  v33 = -1;
  v30 = 0;
  v31 = -1;
  v28 = 0;
  v29 = -1;
  v26 = 0;
  v27 = -1;
  v24 = 0;
  v25 = -1;
  v22 = 0;
  v23 = -1;
  *(_QWORD *)&v18 = &v28;
  *((_QWORD *)&v18 + 1) = &v26;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, v18, (uint64_t)&v24, (uint64_t)&v22);
  if ((char)v21 < 0)
    operator delete(__p);
}

void sub_18881EF80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::Descriptor::DebugString(uint64_t a1, int a2, std::string *a3)
{
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t j;
  uint64_t v15;
  int v16;
  uint64_t k;
  unint64_t v18;
  _QWORD *m;
  unint64_t v20;
  int v21;
  void *p_p;
  const char *v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void *v41;
  int v42;
  void *v43;
  const char *v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  void *v50;
  int v51;
  void *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  int v59;
  uint64_t *v60;
  _QWORD *v61[2];
  void *__p;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  const char *v79;
  int v80;
  _BYTE v81[36];
  const char *v82;
  int v83;
  _BYTE v84[36];
  void *v85;
  int v86;
  uint64_t v87;

  v87 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__p, 2 * a2, 32);
  std::string::append(a3, " {\n");
  v6 = (a2 + 1);
  sub_18881EAFC(a2 + 1, *(_QWORD *)(a1 + 32), a3);
  v61[0] = 0;
  v61[1] = 0;
  v60 = (uint64_t *)v61;
  v8 = *(_DWORD *)(a1 + 44);
  if (v8 >= 1)
  {
    v9 = 0;
    for (i = 0; i < v8; ++i)
    {
      v11 = *(_QWORD *)(a1 + 48) + v9;
      if (*(_DWORD *)(v11 + 44) == 10)
      {
        v85 = *(void **)(v11 + 72);
        std::__tree<AddrObjGoogle::protobuf::Descriptor const*>::__emplace_unique_key_args<AddrObjGoogle::protobuf::Descriptor const*,AddrObjGoogle::protobuf::Descriptor const*>(&v60, (unint64_t *)&v85, (uint64_t *)&v85);
        v8 = *(_DWORD *)(a1 + 44);
      }
      v9 += 120;
    }
  }
  v12 = *(_DWORD *)(a1 + 104);
  if (v12 >= 1)
  {
    v13 = 0;
    for (j = 0; j < v12; ++j)
    {
      v15 = *(_QWORD *)(a1 + 112) + v13;
      if (*(_DWORD *)(v15 + 44) == 10)
      {
        v85 = *(void **)(v15 + 72);
        std::__tree<AddrObjGoogle::protobuf::Descriptor const*>::__emplace_unique_key_args<AddrObjGoogle::protobuf::Descriptor const*,AddrObjGoogle::protobuf::Descriptor const*>(&v60, (unint64_t *)&v85, (uint64_t *)&v85);
        v12 = *(_DWORD *)(a1 + 104);
      }
      v13 += 120;
    }
  }
  v59 = a2;
  v16 = *(_DWORD *)(a1 + 56);
  if (v16 >= 1)
  {
    for (k = 0; k < v16; ++k)
    {
      v18 = *(_QWORD *)(a1 + 64) + 120 * k;
      for (m = v61[0]; m; m = (_QWORD *)*m)
      {
        v20 = m[4];
        if (v18 >= v20)
        {
          if (v20 >= v18)
            goto LABEL_27;
          ++m;
        }
      }
      v21 = v64;
      p_p = __p;
      if ((v64 & 0x80u) == 0)
        p_p = &__p;
      v85 = p_p;
      if ((v64 & 0x80u) != 0)
        v21 = v63;
      v86 = v21;
      v23 = *(const char **)v18;
      v24 = *(char *)(*(_QWORD *)v18 + 23);
      v25 = *((_QWORD *)v23 + 1);
      if (v24 < 0)
        v23 = *(const char **)v23;
      v82 = v23;
      v26 = v24;
      if (v24 < 0)
        v26 = v25;
      v83 = v26;
      v79 = 0;
      v80 = -1;
      v77 = 0;
      v78 = -1;
      v75 = 0;
      v76 = -1;
      v73 = 0;
      v74 = -1;
      v71 = 0;
      v72 = -1;
      v69 = 0;
      v70 = -1;
      v67 = 0;
      v68 = -1;
      v65 = 0;
      v66 = -1;
      *(_QWORD *)&v53 = &v71;
      *((_QWORD *)&v53 + 1) = &v69;
      AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0  message $1", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v53, (uint64_t)&v67, (uint64_t)&v65);
      AddrObjGoogle::protobuf::Descriptor::DebugString(*(_QWORD *)(a1 + 64) + 120 * k, v6, a3);
      v16 = *(_DWORD *)(a1 + 56);
LABEL_27:
      ;
    }
  }
  if (*(int *)(a1 + 72) >= 1)
  {
    v27 = 0;
    v28 = 0;
    do
    {
      AddrObjGoogle::protobuf::EnumDescriptor::DebugString((int *)(*(_QWORD *)(a1 + 80) + v27), v6, a3);
      ++v28;
      v27 += 56;
    }
    while (v28 < *(int *)(a1 + 72));
  }
  if (*(int *)(a1 + 44) >= 1)
  {
    v29 = 0;
    v30 = 0;
    do
    {
      AddrObjGoogle::protobuf::FieldDescriptor::DebugString(*(_QWORD *)(a1 + 48) + v29, v6, a3);
      ++v30;
      v29 += 120;
    }
    while (v30 < *(int *)(a1 + 44));
  }
  if (*(int *)(a1 + 88) >= 1)
  {
    v31 = 0;
    v32 = 0;
    do
    {
      v33 = v64;
      v34 = __p;
      if ((v64 & 0x80u) == 0)
        v34 = &__p;
      v85 = v34;
      if ((v64 & 0x80u) != 0)
        v33 = v63;
      v86 = v33;
      v82 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(*(_QWORD *)(a1 + 96) + v31), v84, v7);
      v83 = strlen(v82);
      v79 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(*(_QWORD *)(a1 + 96) + v31 + 4) - 1), v81, v35);
      v80 = strlen(v79);
      v77 = 0;
      v78 = -1;
      v75 = 0;
      v76 = -1;
      v73 = 0;
      v74 = -1;
      v71 = 0;
      v72 = -1;
      v69 = 0;
      v70 = -1;
      v67 = 0;
      v68 = -1;
      v65 = 0;
      v66 = -1;
      *((_QWORD *)&v54 + 1) = &v69;
      *(_QWORD *)&v54 = &v71;
      AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0  extensions $1 to $2;\n",
        (uint64_t)&v85,
        (uint64_t)&v82,
        (uint64_t)&v79,
        (uint64_t)&v77,
        (uint64_t)&v75,
        (uint64_t)&v73,
        v54,
        (uint64_t)&v67,
        (uint64_t)&v65);
      ++v32;
      v31 += 8;
    }
    while (v32 < *(int *)(a1 + 88));
  }
  if (*(int *)(a1 + 104) >= 1)
  {
    v36 = 0;
    v37 = 0;
    v38 = 56;
    do
    {
      v39 = *(_QWORD *)(a1 + 112);
      if (*(_QWORD *)(v39 + v38) != v37)
      {
        v37 = *(_QWORD *)(v39 + v38);
        if (v38 != 56)
        {
          v40 = v64;
          v41 = __p;
          if ((v64 & 0x80u) == 0)
            v41 = &__p;
          v85 = v41;
          if ((v64 & 0x80u) != 0)
            v40 = v63;
          v86 = v40;
          v82 = 0;
          v83 = -1;
          v79 = 0;
          v80 = -1;
          v77 = 0;
          v78 = -1;
          v75 = 0;
          v76 = -1;
          v73 = 0;
          v74 = -1;
          v71 = 0;
          v72 = -1;
          v69 = 0;
          v70 = -1;
          v67 = 0;
          v68 = -1;
          v65 = 0;
          v66 = -1;
          *(_QWORD *)&v55 = &v71;
          *((_QWORD *)&v55 + 1) = &v69;
          AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0  }\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v55, (uint64_t)&v67, (uint64_t)&v65);
          v37 = *(_QWORD *)(*(_QWORD *)(a1 + 112) + v38);
        }
        v42 = v64;
        v43 = __p;
        if ((v64 & 0x80u) == 0)
          v43 = &__p;
        v85 = v43;
        if ((v64 & 0x80u) != 0)
          v42 = v63;
        v86 = v42;
        v44 = *(const char **)(v37 + 8);
        v45 = v44[23];
        v46 = *((_QWORD *)v44 + 1);
        if (v45 < 0)
          v44 = *(const char **)v44;
        v82 = v44;
        v47 = v45;
        if (v45 < 0)
          v47 = v46;
        v83 = v47;
        v79 = 0;
        v80 = -1;
        v77 = 0;
        v78 = -1;
        v75 = 0;
        v76 = -1;
        v73 = 0;
        v74 = -1;
        v71 = 0;
        v72 = -1;
        v69 = 0;
        v70 = -1;
        v67 = 0;
        v68 = -1;
        v65 = 0;
        v66 = -1;
        *(_QWORD *)&v56 = &v71;
        *((_QWORD *)&v56 + 1) = &v69;
        AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0  extend .$1 {\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v56, (uint64_t)&v67, (uint64_t)&v65);
        v39 = *(_QWORD *)(a1 + 112);
      }
      AddrObjGoogle::protobuf::FieldDescriptor::DebugString(v39 + v38 - 56, (v59 + 2), a3);
      ++v36;
      v48 = *(int *)(a1 + 104);
      v38 += 120;
    }
    while (v36 < v48);
    if ((int)v48 > 0)
    {
      v49 = v64;
      v50 = &__p;
      if ((v64 & 0x80u) != 0)
        v50 = __p;
      v85 = v50;
      if ((v64 & 0x80u) != 0)
        v49 = v63;
      v86 = v49;
      v82 = 0;
      v83 = -1;
      v79 = 0;
      v80 = -1;
      v77 = 0;
      v78 = -1;
      v75 = 0;
      v76 = -1;
      v73 = 0;
      v74 = -1;
      v71 = 0;
      v72 = -1;
      v69 = 0;
      v70 = -1;
      v67 = 0;
      v68 = -1;
      v65 = 0;
      v66 = -1;
      *(_QWORD *)&v57 = &v71;
      *((_QWORD *)&v57 + 1) = &v69;
      AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0  }\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v57, (uint64_t)&v67, (uint64_t)&v65);
    }
  }
  v51 = v64;
  v52 = &__p;
  if ((v64 & 0x80u) != 0)
    v52 = __p;
  v85 = v52;
  if ((v64 & 0x80u) != 0)
    v51 = v63;
  v86 = v51;
  v82 = 0;
  v83 = -1;
  v79 = 0;
  v80 = -1;
  v77 = 0;
  v78 = -1;
  v75 = 0;
  v76 = -1;
  v73 = 0;
  v74 = -1;
  v71 = 0;
  v72 = -1;
  v69 = 0;
  v70 = -1;
  v67 = 0;
  v68 = -1;
  v65 = 0;
  v66 = -1;
  *(_QWORD *)&v58 = &v71;
  *((_QWORD *)&v58 + 1) = &v69;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v58, (uint64_t)&v67, (uint64_t)&v65);
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&v60, v61[0]);
  if ((char)v64 < 0)
    operator delete(__p);
}

void sub_18881F74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, _QWORD *a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)&a15, a16);
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::FieldDescriptor::DebugString(uint64_t a1, int a2, std::string *a3)
{
  uint64_t v6;
  int v7;
  void *p_b;
  char *v9;
  int v10;
  std::string *p_p;
  uint64_t **v12;
  uint64_t *v13;
  int v14;
  uint64_t v15;
  int v16;
  char *v17;
  int v18;
  std::string *v19;
  int v20;
  const std::string::value_type *v21;
  std::string *v22;
  std::string::size_type size;
  __int128 v24;
  __int128 v25;
  std::string v26;
  std::string __p;
  void *__b;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  const char *v41;
  int v42;
  _BYTE v43[36];
  uint64_t *v44;
  int v45;
  std::string *v46;
  int v47;
  const char *v48;
  int v49;
  std::string v50[2];
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  memset(&__p, 0, sizeof(__p));
  v6 = *(unsigned int *)(a1 + 44);
  if ((_DWORD)v6 == 11 || (_DWORD)v6 == 14)
  {
    std::operator+<char>();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    __p = v50[0];
  }
  else
  {
    MEMORY[0x18D7640AC](&__p, AddrObjGoogle::protobuf::FieldDescriptor::kTypeToName[v6]);
  }
  v7 = v30;
  p_b = &__b;
  if ((v30 & 0x80u) != 0)
    p_b = __b;
  v50[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
  if ((v30 & 0x80u) != 0)
    v7 = v29;
  LODWORD(v50[0].__r_.__value_.__r.__words[1]) = v7;
  v48 = AddrObjGoogle::protobuf::FieldDescriptor::kLabelToName[*(unsigned int *)(a1 + 48)];
  v49 = strlen(v48);
  v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  p_p = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  v46 = p_p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v10 = __p.__r_.__value_.__r.__words[1];
  v47 = v10;
  v12 = (uint64_t **)a1;
  if (*(_DWORD *)(a1 + 44) == 10)
    v12 = *(uint64_t ***)(a1 + 72);
  v13 = *v12;
  v14 = *((char *)v13 + 23);
  v15 = v13[1];
  if (v14 < 0)
    v13 = (uint64_t *)*v13;
  v44 = v13;
  v16 = v14;
  if (v14 < 0)
    v16 = v15;
  v45 = v16;
  v41 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*(unsigned int *)(a1 + 40), v43, v9);
  v42 = strlen(v41);
  v39 = 0;
  v40 = -1;
  v37 = 0;
  v38 = -1;
  v35 = 0;
  v36 = -1;
  v33 = 0;
  v34 = -1;
  v31 = 0;
  v32 = -1;
  *(_QWORD *)&v24 = &v37;
  *((_QWORD *)&v24 + 1) = &v35;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0$1 $2 $3 = $4", (uint64_t)v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v41, (uint64_t)&v39, v24, (uint64_t)&v33, (uint64_t)&v31);
  v18 = *(unsigned __int8 *)(a1 + 104);
  if (*(_BYTE *)(a1 + 104))
  {
    AddrObjGoogle::protobuf::FieldDescriptor::DefaultValueAsString((AddrObjGoogle::protobuf::FieldDescriptor *)a1, (char *)1, v17, &v26);
    v19 = (std::string *)v26.__r_.__value_.__r.__words[0];
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v19 = &v26;
    v50[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
    v20 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v20 = v26.__r_.__value_.__r.__words[1];
    LODWORD(v50[0].__r_.__value_.__r.__words[1]) = v20;
    v48 = 0;
    v49 = -1;
    v46 = 0;
    v47 = -1;
    v44 = 0;
    v45 = -1;
    v41 = 0;
    v42 = -1;
    v39 = 0;
    v40 = -1;
    v37 = 0;
    v38 = -1;
    v35 = 0;
    v36 = -1;
    v33 = 0;
    v34 = -1;
    v31 = 0;
    v32 = -1;
    *(_QWORD *)&v25 = &v37;
    *((_QWORD *)&v25 + 1) = &v35;
    AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, " [default = $0", (uint64_t)v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v41, (uint64_t)&v39, v25, (uint64_t)&v33, (uint64_t)&v31);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
  }
  memset(v50, 0, 24);
  if (sub_18881FD74(a2, *(_QWORD *)(a1 + 96), v50))
  {
    if (v18)
      v21 = ", ";
    else
      v21 = " [";
    std::string::append(a3, v21);
    if ((v50[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v22 = v50;
    else
      v22 = (std::string *)v50[0].__r_.__value_.__r.__words[0];
    if ((v50[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v50[0].__r_.__value_.__r.__words[2]);
    else
      size = v50[0].__r_.__value_.__l.__size_;
    std::string::append(a3, (const std::string::value_type *)v22, size);
  }
  else if (!v18)
  {
    goto LABEL_41;
  }
  std::string::append(a3, "]");
LABEL_41:
  if (*(_DWORD *)(a1 + 44) == 10)
    AddrObjGoogle::protobuf::Descriptor::DebugString(*(_QWORD *)(a1 + 72), a2, a3);
  else
    std::string::append(a3, ";\n");
  if (SHIBYTE(v50[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v50[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if ((char)v30 < 0)
    operator delete(__b);
}

void sub_18881FB90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a25 < 0)
    operator delete(__p);
  if (a32 < 0)
    operator delete(a27);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::FieldDescriptor::DebugString(AddrObjGoogle::protobuf::FieldDescriptor *this@<X0>, std::string *a2@<X8>)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  if (*((_BYTE *)this + 52))
  {
    v4 = *(uint64_t **)(*((_QWORD *)this + 7) + 8);
    v5 = *((char *)v4 + 23);
    v6 = v4[1];
    if (v5 < 0)
      v4 = (uint64_t *)*v4;
    v28 = v4;
    v7 = v5;
    if (v5 < 0)
      v7 = v6;
    v29 = v7;
    v26 = 0;
    v27 = -1;
    v24 = 0;
    v25 = -1;
    v22 = 0;
    v23 = -1;
    v20 = 0;
    v21 = -1;
    v18 = 0;
    v19 = -1;
    v16 = 0;
    v17 = -1;
    v14 = 0;
    v15 = -1;
    v12 = 0;
    v13 = -1;
    v10 = 0;
    v11 = -1;
    *(_QWORD *)&v9 = &v16;
    *((_QWORD *)&v9 + 1) = &v14;
    AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a2, "extend .$0 {\n", (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, (uint64_t)&v18, v9, (uint64_t)&v12, (uint64_t)&v10);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  AddrObjGoogle::protobuf::FieldDescriptor::DebugString((uint64_t)this, v8, a2);
  if (*((_BYTE *)this + 52))
    std::string::append(a2, "}\n");
}

void sub_18881FD54(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

BOOL sub_18881FD74(int a1, uint64_t a2, std::string *a3)
{
  const std::string::value_type *p_p;
  std::string::size_type v5;
  _BOOL8 v6;
  void *__p;
  std::string::size_type v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = 0;
  v12 = 0;
  v13 = 0;
  if (sub_18882A038(a1, a2, (uint64_t)&v11))
  {
    __p = 0;
    v9 = 0;
    v10 = 0;
    AddrObjGoogle::protobuf::JoinStrings(&v11, ", ", (uint64_t)&__p);
    if (v10 >= 0)
      p_p = (const std::string::value_type *)&__p;
    else
      p_p = (const std::string::value_type *)__p;
    if (v10 >= 0)
      v5 = HIBYTE(v10);
    else
      v5 = v9;
    std::string::append(a3, p_p, v5);
    if (SHIBYTE(v10) < 0)
      operator delete(__p);
  }
  v6 = v11 != v12;
  __p = &v11;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  return v6;
}

void sub_18881FE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  __p = &a15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::EnumValueDescriptor::DebugString(uint64_t ***a1, int a2, std::string *a3)
{
  char *v6;
  int v7;
  std::string *p_b;
  uint64_t **v9;
  int v10;
  uint64_t *v11;
  int v12;
  int v13;
  std::string *p_p;
  __int128 v15;
  __int128 v16;
  std::string __p;
  void *__b;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  const char *v35;
  int v36;
  char v37[36];
  uint64_t **v38;
  int v39;
  std::string *v40;
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  v7 = v20;
  p_b = (std::string *)__b;
  if ((v20 & 0x80u) == 0)
    p_b = (std::string *)&__b;
  v40 = p_b;
  if ((v20 & 0x80u) != 0)
    v7 = v19;
  v41 = v7;
  v9 = *a1;
  v10 = *((char *)*a1 + 23);
  v11 = (*a1)[1];
  if (v10 < 0)
    v9 = (uint64_t **)**a1;
  v38 = v9;
  v12 = v10;
  if (v10 < 0)
    v12 = (int)v11;
  v39 = v12;
  v35 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*((unsigned int *)a1 + 4), v37, v6);
  v36 = strlen(v35);
  v33 = 0;
  v34 = -1;
  v31 = 0;
  v32 = -1;
  v29 = 0;
  v30 = -1;
  v27 = 0;
  v28 = -1;
  v25 = 0;
  v26 = -1;
  v23 = 0;
  v24 = -1;
  v21 = 0;
  v22 = -1;
  *(_QWORD *)&v15 = &v27;
  *((_QWORD *)&v15 + 1) = &v25;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, "$0$1 = $2", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, v15, (uint64_t)&v23, (uint64_t)&v21);
  memset(&__p, 0, sizeof(__p));
  if (sub_18881FD74(a2, (uint64_t)a1[4], &__p))
  {
    v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v40 = p_p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v13 = __p.__r_.__value_.__r.__words[1];
    v41 = v13;
    v38 = 0;
    v39 = -1;
    v35 = 0;
    v36 = -1;
    v33 = 0;
    v34 = -1;
    v31 = 0;
    v32 = -1;
    v29 = 0;
    v30 = -1;
    v27 = 0;
    v28 = -1;
    v25 = 0;
    v26 = -1;
    v23 = 0;
    v24 = -1;
    v21 = 0;
    v22 = -1;
    *(_QWORD *)&v16 = &v27;
    *((_QWORD *)&v16 + 1) = &v25;
    AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a3, " [$0]", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, v16, (uint64_t)&v23, (uint64_t)&v21);
  }
  std::string::append(a3, ";\n");
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if ((char)v20 < 0)
    operator delete(__b);
}

void sub_1888200AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::BuildFile(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::FileDescriptorProto *a2)
{
  char *v4;
  _QWORD *v5;
  std::string::size_type v6;
  uint64_t **v7;
  uint64_t v8;
  char v9;
  std::string::size_type size;
  std::string::size_type v11;
  int v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  BOOL v21;
  BOOL v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  const std::string::value_type *v41;
  std::string::size_type v42;
  uint64_t v43;
  int v44;
  const std::string::value_type *v45;
  std::string::size_type v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  std::string::size_type v50;
  uint64_t **v51;
  uint64_t *v52;
  uint64_t v53;
  void **v54;
  AddrObjGoogle::protobuf::SourceCodeInfo *Bytes;
  AddrObjGoogle::protobuf::SourceCodeInfo *v56;
  AddrObjGoogle::protobuf::SourceCodeInfo *v57;
  const AddrObjGoogle::protobuf::SourceCodeInfo *v58;
  uint64_t FileTables;
  _QWORD *v60;
  uint64_t v61;
  const std::string::value_type *v62;
  int v63;
  uint64_t v64;
  const void **v65;
  char v66;
  const std::string::value_type *v67;
  std::string *v68;
  __int128 v69;
  uint64_t v70;
  _QWORD *v71;
  std::string::size_type v72;
  uint64_t **v73;
  uint64_t *FileByName;
  uint64_t v75;
  uint64_t v76;
  std::string *v77;
  std::string::size_type v78;
  char v79;
  std::string *v80;
  std::string::size_type v81;
  char v82;
  uint64_t v83;
  int v84;
  int v85;
  const std::string::value_type *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  const std::string::value_type *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  const void *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  AddrObjGoogle::protobuf::FileDescriptorProto *v103;
  uint64_t v104;
  uint64_t v105;
  const AddrObjGoogle::protobuf::FileOptions *v106;
  std::string::size_type v107;
  uint64_t v108;
  AddrObjGoogle::protobuf::Message *v109;
  uint64_t v110;
  uint64_t FieldByName;
  uint64_t v112;
  std::string *v113;
  std::string *v114;
  std::string *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  std::string *v120;
  std::string *v121;
  std::string *v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  std::string *v127;
  std::string *v128;
  std::string *v129;
  std::string::size_type v130;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char **v136;
  char *v137[2];
  std::string v138;
  uint64_t v139;
  char v140;
  std::string v141;
  std::string v142;
  uint64_t v143;

  v143 = *MEMORY[0x1E0C80C00];
  v4 = (char *)this + 56;
  std::string::operator=((std::string *)((char *)this + 56), *((const std::string **)a2 + 2));
  v5 = (_QWORD *)(*((_QWORD *)this + 1) + 240);
  if (*((char *)this + 79) >= 0)
    v6 = (std::string::size_type)v4;
  else
    v6 = *((_QWORD *)this + 7);
  v138.__r_.__value_.__r.__words[0] = v6;
  v7 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v5, (const char **)&v138.__r_.__value_.__l.__data_);
  if (!v7)
    goto LABEL_31;
  v8 = (uint64_t)v7[3];
  if (!v8)
    goto LABEL_31;
  AddrObjGoogle::protobuf::FileDescriptorProto::FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)&v138);
  AddrObjGoogle::protobuf::FileDescriptor::CopyTo((const AddrObjGoogle::protobuf::FileOptions **)v8, (AddrObjGoogle::protobuf::FileDescriptorProto *)&v138);
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString((AddrObjGoogle::protobuf::MessageLite *)&v138, &v141);
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a2, &v142);
  v9 = HIBYTE(v141.__r_.__value_.__r.__words[2]);
  if ((v141.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v141.__r_.__value_.__r.__words[2]);
  else
    size = v141.__r_.__value_.__l.__size_;
  v11 = HIBYTE(v142.__r_.__value_.__r.__words[2]);
  v12 = SHIBYTE(v142.__r_.__value_.__r.__words[2]);
  if ((v142.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v11 = v142.__r_.__value_.__l.__size_;
  if (size != v11)
  {
    v22 = 0;
    if ((SHIBYTE(v142.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  if ((v142.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v13 = &v142;
  else
    v13 = (std::string *)v142.__r_.__value_.__r.__words[0];
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
  {
    v22 = memcmp(v141.__r_.__value_.__l.__data_, v13, v141.__r_.__value_.__l.__size_) == 0;
    goto LABEL_28;
  }
  if (*((_BYTE *)&v141.__r_.__value_.__s + 23))
  {
    v14 = HIBYTE(v141.__r_.__value_.__r.__words[2]) - 1;
    v15 = &v141;
    do
    {
      v17 = v15->__r_.__value_.__s.__data_[0];
      v15 = (std::string *)((char *)v15 + 1);
      v16 = v17;
      v19 = v13->__r_.__value_.__s.__data_[0];
      v13 = (std::string *)((char *)v13 + 1);
      v18 = v19;
      v21 = v14-- != 0;
      v22 = v16 == v18;
    }
    while (v16 == v18 && v21);
LABEL_28:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_29;
LABEL_25:
    operator delete(v142.__r_.__value_.__l.__data_);
    if ((*((_BYTE *)&v141.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_30;
    goto LABEL_26;
  }
  v22 = 1;
  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_25;
LABEL_29:
  if (v9 < 0)
LABEL_26:
    operator delete(v141.__r_.__value_.__l.__data_);
LABEL_30:
  AddrObjGoogle::protobuf::FileDescriptorProto::~FileDescriptorProto((AddrObjGoogle::protobuf::FileDescriptorProto *)&v138);
  if (v22)
    return v8;
LABEL_31:
  v23 = (uint64_t *)*((_QWORD *)this + 1);
  v24 = *v23;
  v135 = v23[1];
  if (v135 != *v23)
  {
    v25 = 0;
    v26 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
    v27 = (char)v26[23];
    if (v27 >= 0)
      v28 = v26[23];
    else
      v28 = *((_QWORD *)v26 + 1);
    if ((unint64_t)((uint64_t)(v135 - v24) / 24) <= 1)
      v29 = 1;
    else
      v29 = (uint64_t)(v135 - v24) / 24;
    do
    {
      v30 = (unsigned __int8 *)(v24 + 24 * v25);
      v31 = v30[23];
      if ((v31 & 0x80u) == 0)
        v32 = v30[23];
      else
        v32 = *((_QWORD *)v30 + 1);
      if (v32 == v28)
      {
        if (v27 >= 0)
          v33 = v26;
        else
          v33 = *(unsigned __int8 **)v26;
        if ((v31 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v30, v33, *((_QWORD *)v30 + 1)))
          {
LABEL_55:
            std::string::basic_string[abi:ne180100]<0>(&v138, "File recursively imports itself: ");
            v36 = **((_QWORD **)this + 1);
            if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)this + 1) + 8) - v36) >> 3) > v25)
            {
              v37 = v25;
              v38 = 24 * v25;
              do
              {
                v39 = v36 + v38;
                v40 = *(char *)(v39 + 23);
                if (v40 >= 0)
                  v41 = (const std::string::value_type *)v39;
                else
                  v41 = *(const std::string::value_type **)v39;
                if (v40 >= 0)
                  v42 = *(unsigned __int8 *)(v39 + 23);
                else
                  v42 = *(_QWORD *)(v39 + 8);
                std::string::append(&v138, v41, v42);
                std::string::append(&v138, " -> ");
                ++v37;
                v36 = **((_QWORD **)this + 1);
                v38 += 24;
              }
              while (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)this + 1) + 8) - v36) >> 3) > v37);
            }
            v43 = *((_QWORD *)a2 + 2);
            v44 = *(char *)(v43 + 23);
            if (v44 >= 0)
              v45 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
            else
              v45 = *(const std::string::value_type **)v43;
            if (v44 >= 0)
              v46 = *(unsigned __int8 *)(v43 + 23);
            else
              v46 = *(_QWORD *)(v43 + 8);
            std::string::append(&v138, v45, v46);
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 2), (uint64_t)a2, 9, (const std::string::value_type *)&v138);
            if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v138.__r_.__value_.__l.__data_);
            return 0;
          }
        }
        else
        {
          if (!v30[23])
            goto LABEL_55;
          while (*v30 == *v33)
          {
            ++v30;
            ++v33;
            if (!--v31)
              goto LABEL_55;
          }
        }
      }
      ++v25;
    }
    while (v25 != v29);
  }
  if (*(_QWORD *)(*(_QWORD *)this + 8))
  {
    v34 = (__int128 *)*((_QWORD *)a2 + 2);
    if (v135 >= v23[2])
    {
      v35 = std::vector<std::string>::__push_back_slow_path<std::string const&>(v23, v34);
    }
    else
    {
      std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v23, v34);
      v35 = v135 + 24;
    }
    v23[1] = v35;
    if (*((int *)a2 + 10) >= 1)
    {
      v47 = 0;
      do
      {
        v48 = *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v47);
        v49 = (_QWORD *)(*((_QWORD *)this + 1) + 240);
        if (*(char *)(v48 + 23) >= 0)
          v50 = *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v47);
        else
          v50 = *(_QWORD *)v48;
        v138.__r_.__value_.__r.__words[0] = v50;
        v51 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v49, (const char **)&v138.__r_.__value_.__l.__data_);
        if ((!v51 || !v51[3])
          && (!*(_QWORD *)(*(_QWORD *)this + 24)
           || !AddrObjGoogle::protobuf::DescriptorPool::FindFileByName(*(_QWORD *)(*(_QWORD *)this + 24), *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v47))))
        {
          AddrObjGoogle::protobuf::DescriptorPool::TryFindFileInFallbackDatabase();
        }
        ++v47;
      }
      while (v47 < *((int *)a2 + 10));
    }
    v52 = (uint64_t *)*((_QWORD *)this + 1);
    v53 = v52[1];
    v54 = (void **)(v53 - 24);
    v23 = v52;
    if (*(char *)(v53 - 1) < 0)
    {
      operator delete(*v54);
      v23 = (uint64_t *)*((_QWORD *)this + 1);
    }
    v52[1] = (uint64_t)v54;
  }
  AddrObjGoogle::protobuf::DescriptorPool::Tables::AddCheckpoint((AddrObjGoogle::protobuf::DescriptorPool::Tables *)v23);
  Bytes = (AddrObjGoogle::protobuf::SourceCodeInfo *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 160);
  v8 = (uint64_t)Bytes;
  *((_QWORD *)this + 10) = Bytes;
  if ((*((_BYTE *)a2 + 205) & 4) != 0)
  {
    v57 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::SourceCodeInfo>(*((_QWORD **)this + 1));
    v56 = v57;
    v58 = (const AddrObjGoogle::protobuf::SourceCodeInfo *)*((_QWORD *)a2 + 24);
    if (!v58)
      v58 = *(const AddrObjGoogle::protobuf::SourceCodeInfo **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(v57)
                                                              + 192);
    AddrObjGoogle::protobuf::SourceCodeInfo::CopyFrom(v56, v58);
  }
  else
  {
    v56 = (AddrObjGoogle::protobuf::SourceCodeInfo *)AddrObjGoogle::protobuf::SourceCodeInfo::default_instance(Bytes);
  }
  *(_QWORD *)(v8 + 152) = v56;
  FileTables = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateFileTables(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this
                                                                                   + 1));
  *((_QWORD *)this + 11) = FileTables;
  *(_QWORD *)(*((_QWORD *)this + 10) + 144) = FileTables;
  if ((*((_BYTE *)a2 + 204) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&v138, "");
    std::string::basic_string[abi:ne180100]<0>(&v141, "Missing field: FileDescriptorProto.name.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)&v138, (uint64_t)a2, 9, (const std::string::value_type *)&v141);
    if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v141.__r_.__value_.__l.__data_);
    if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v138.__r_.__value_.__l.__data_);
  }
  *(_QWORD *)v8 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  v60 = (_QWORD *)*((_QWORD *)this + 1);
  if ((*((_BYTE *)a2 + 204) & 2) != 0)
  {
    *(_QWORD *)(v8 + 8) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 3));
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&v138, "");
    *(_QWORD *)(v8 + 8) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v60, (uint64_t)&v138);
    if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v138.__r_.__value_.__l.__data_);
  }
  *(_QWORD *)(v8 + 16) = *(_QWORD *)this;
  if ((AddrObjGoogle::protobuf::DescriptorPool::Tables::AddFile(*((_QWORD **)this + 1), v8) & 1) == 0)
  {
    v62 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
    std::string::basic_string[abi:ne180100]<0>(&v138, "A file with this name is already in the pool.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v62, (uint64_t)a2, 9, (const std::string::value_type *)&v138);
    if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v138.__r_.__value_.__l.__data_);
    AddrObjGoogle::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this
                                                                              + 1));
    return 0;
  }
  v61 = *(_QWORD *)(v8 + 8);
  if ((*(char *)(v61 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(v61 + 23))
      goto LABEL_111;
    goto LABEL_110;
  }
  if (*(_QWORD *)(v61 + 8))
LABEL_110:
    AddrObjGoogle::protobuf::DescriptorBuilder::AddPackage((uint64_t)this, v61, (uint64_t)a2, v8);
LABEL_111:
  v137[0] = 0;
  v137[1] = 0;
  v136 = v137;
  v63 = *((_DWORD *)a2 + 10);
  *(_DWORD *)(v8 + 24) = v63;
  *(_QWORD *)(v8 + 32) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 8 * v63);
  if (*((int *)a2 + 10) >= 1)
  {
    v64 = 0;
    while (1)
    {
      v65 = *(const void ***)(*((_QWORD *)a2 + 4) + 8 * v64);
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)&v136, v65, (uint64_t)v65);
      if ((v66 & 1) == 0)
      {
        v67 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
        std::operator+<char>();
        v68 = std::string::append(&v141, "\" was listed twice.");
        v69 = *(_OWORD *)&v68->__r_.__value_.__l.__data_;
        v138.__r_.__value_.__r.__words[2] = v68->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v138.__r_.__value_.__l.__data_ = v69;
        v68->__r_.__value_.__l.__size_ = 0;
        v68->__r_.__value_.__r.__words[2] = 0;
        v68->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v67, (uint64_t)a2, 9, (const std::string::value_type *)&v138);
        if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v138.__r_.__value_.__l.__data_);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      v70 = *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v64);
      v71 = (_QWORD *)(*((_QWORD *)this + 1) + 240);
      if (*(char *)(v70 + 23) >= 0)
        v72 = *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v64);
      else
        v72 = *(_QWORD *)v70;
      v138.__r_.__value_.__r.__words[0] = v72;
      v73 = std::__hash_table<std::__hash_value_type<char const*,void (*)(std::string const&)>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,void (*)(std::string const&)>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,void (*)(std::string const&)>>>::find<char const*>(v71, (const char **)&v138.__r_.__value_.__l.__data_);
      if (v73)
      {
        FileByName = v73[3];
        if (FileByName)
          goto LABEL_140;
      }
      v75 = *(_QWORD *)this;
      v76 = *(_QWORD *)(*(_QWORD *)this + 24);
      if (!v76)
        goto LABEL_126;
      FileByName = (uint64_t *)AddrObjGoogle::protobuf::DescriptorPool::FindFileByName(v76, *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v64));
      if (!FileByName)
        break;
LABEL_140:
      *(_QWORD *)(*(_QWORD *)(v8 + 32) + 8 * v64++) = FileByName;
      if (v64 >= *((int *)a2 + 10))
        goto LABEL_141;
    }
    v75 = *(_QWORD *)this;
LABEL_126:
    if (*(_BYTE *)(v75 + 41))
    {
      FileByName = (uint64_t *)AddrObjGoogle::protobuf::DescriptorBuilder::NewPlaceholderFile((uint64_t *)this, *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v64));
    }
    else
    {
      memset(&v138, 0, sizeof(v138));
      if (*(_QWORD *)(v75 + 8))
      {
        std::operator+<char>();
        v77 = std::string::append(&v141, "\" was not found or had errors.");
        v78 = v77->__r_.__value_.__r.__words[0];
        v142.__r_.__value_.__r.__words[0] = v77->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v142.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v77->__r_.__value_.__r.__words[1] + 7);
        v79 = HIBYTE(v77->__r_.__value_.__r.__words[2]);
        v77->__r_.__value_.__l.__size_ = 0;
        v77->__r_.__value_.__r.__words[2] = 0;
        v77->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v138.__r_.__value_.__l.__data_);
        v138.__r_.__value_.__r.__words[0] = v78;
        v138.__r_.__value_.__l.__size_ = v142.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&v138.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v142.__r_.__value_.__r.__words + 7);
        *((_BYTE *)&v138.__r_.__value_.__s + 23) = v79;
      }
      else
      {
        std::operator+<char>();
        v80 = std::string::append(&v141, "\" has not been loaded.");
        v81 = v80->__r_.__value_.__r.__words[0];
        v142.__r_.__value_.__r.__words[0] = v80->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v142.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v80->__r_.__value_.__r.__words[1] + 7);
        v82 = HIBYTE(v80->__r_.__value_.__r.__words[2]);
        v80->__r_.__value_.__l.__size_ = 0;
        v80->__r_.__value_.__r.__words[2] = 0;
        v80->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v138.__r_.__value_.__l.__data_);
        v138.__r_.__value_.__r.__words[0] = v81;
        v138.__r_.__value_.__l.__size_ = v142.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&v138.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v142.__r_.__value_.__r.__words + 7);
        *((_BYTE *)&v138.__r_.__value_.__s + 23) = v82;
      }
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v141.__r_.__value_.__l.__data_);
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 2), (uint64_t)a2, 9, (const std::string::value_type *)&v138);
      if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v138.__r_.__value_.__l.__data_);
      FileByName = 0;
    }
    goto LABEL_140;
  }
LABEL_141:
  *(_QWORD *)(v8 + 48) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 4 * *((_DWORD *)a2 + 16));
  if (*((int *)a2 + 16) < 1)
  {
    v84 = 0;
  }
  else
  {
    v83 = 0;
    v84 = 0;
    do
    {
      v85 = *(_DWORD *)(*((_QWORD *)a2 + 7) + 4 * v83);
      if (v85 < 0 || v85 >= *((_DWORD *)a2 + 10))
      {
        v86 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
        std::string::basic_string[abi:ne180100]<0>(&v138, "Invalid public dependency index.");
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v86, (uint64_t)a2, 9, (const std::string::value_type *)&v138);
        if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v138.__r_.__value_.__l.__data_);
      }
      else
      {
        *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v84++) = v85;
      }
      ++v83;
    }
    while (v83 < *((int *)a2 + 16));
  }
  *(_DWORD *)(v8 + 40) = v84;
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)this + 96, *((_QWORD **)this + 13));
  *((_QWORD *)this + 12) = (char *)this + 104;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  if (*(int *)(v8 + 24) >= 1)
  {
    v87 = 0;
    do
      AddrObjGoogle::protobuf::DescriptorBuilder::RecordPublicDependencies((uint64_t *)this, *(_QWORD *)(*(_QWORD *)(v8 + 32) + 8 * v87++));
    while (v87 < *(int *)(v8 + 24));
  }
  *(_QWORD *)(v8 + 64) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 4 * *((_DWORD *)a2 + 20));
  if (*((int *)a2 + 20) < 1)
  {
    v89 = 0;
  }
  else
  {
    v88 = 0;
    v89 = 0;
    do
    {
      v90 = *(_DWORD *)(*((_QWORD *)a2 + 9) + 4 * v88);
      if (v90 < 0 || v90 >= *((_DWORD *)a2 + 10))
      {
        v91 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
        std::string::basic_string[abi:ne180100]<0>(&v138, "Invalid weak dependency index.");
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v91, (uint64_t)a2, 9, (const std::string::value_type *)&v138);
        if (SHIBYTE(v138.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v138.__r_.__value_.__l.__data_);
      }
      else
      {
        *(_DWORD *)(*(_QWORD *)(v8 + 64) + 4 * v89++) = v90;
      }
      ++v88;
    }
    while (v88 < *((int *)a2 + 20));
  }
  *(_DWORD *)(v8 + 56) = v89;
  v92 = *((_DWORD *)a2 + 24);
  *(_DWORD *)(v8 + 72) = v92;
  *(_QWORD *)(v8 + 80) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 120 * v92);
  if (*((int *)a2 + 24) >= 1)
  {
    v93 = 0;
    v94 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildMessage(this, *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a2 + 11) + 8 * v94++), 0, (AddrObjGoogle::protobuf::Descriptor *)(*(_QWORD *)(v8 + 80) + v93));
      v93 += 120;
    }
    while (v94 < *((int *)a2 + 24));
  }
  v95 = *((_DWORD *)a2 + 30);
  *(_DWORD *)(v8 + 88) = v95;
  *(_QWORD *)(v8 + 96) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 56 * v95);
  if (*((int *)a2 + 30) >= 1)
  {
    v96 = 0;
    v97 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildEnum(this, *(const AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)a2 + 14) + 8 * v97++), 0, (AddrObjGoogle::protobuf::EnumDescriptor *)(*(_QWORD *)(v8 + 96) + v96));
      v96 += 56;
    }
    while (v97 < *((int *)a2 + 30));
  }
  v98 = *((_DWORD *)a2 + 36);
  *(_DWORD *)(v8 + 104) = v98;
  *(_QWORD *)(v8 + 112) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 48 * v98);
  if (*((int *)a2 + 36) >= 1)
  {
    v100 = 0;
    v101 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildService(this, *(const AddrObjGoogle::protobuf::ServiceDescriptorProto **)(*((_QWORD *)a2 + 17) + 8 * v101++), v99, (AddrObjGoogle::protobuf::ServiceDescriptor *)(*(_QWORD *)(v8 + 112) + v100));
      v100 += 48;
    }
    while (v101 < *((int *)a2 + 36));
  }
  v102 = *((_DWORD *)a2 + 42);
  *(_DWORD *)(v8 + 120) = v102;
  v103 = (AddrObjGoogle::protobuf::FileDescriptorProto *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 120 * v102);
  *(_QWORD *)(v8 + 128) = v103;
  if (*((int *)a2 + 42) >= 1)
  {
    v104 = 0;
    v105 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildFieldOrExtension(this, *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 20) + 8 * v105++), 0, (AddrObjGoogle::protobuf::FieldDescriptor *)(*(_QWORD *)(v8 + 128) + v104), 1);
      v104 += 120;
    }
    while (v105 < *((int *)a2 + 42));
  }
  if ((*((_BYTE *)a2 + 205) & 2) != 0)
  {
    v106 = (const AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)a2 + 23);
    if (!v106)
      v106 = *(const AddrObjGoogle::protobuf::FileOptions **)(AddrObjGoogle::protobuf::FileDescriptorProto::default_instance_(v103)
                                                            + 184);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptions(this, v106, (AddrObjGoogle::protobuf::FileDescriptor *)v8);
  }
  else
  {
    *(_QWORD *)(v8 + 136) = 0;
  }
  AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkFile(this, (AddrObjGoogle::protobuf::FileDescriptor *)v8, a2);
  if (*((_BYTE *)this + 48))
    goto LABEL_211;
  AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)&v138, this);
  v107 = *((_QWORD *)this + 3);
  if (v107 == *((_QWORD *)this + 4))
    goto LABEL_209;
  do
  {
    v108 = *(_QWORD *)(v107 + 48);
    v109 = *(AddrObjGoogle::protobuf::Message **)(v107 + 56);
    v138.__r_.__value_.__l.__size_ = v107;
    v110 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v109 + 152))(v109);
    std::string::basic_string[abi:ne180100]<0>(&v141, "uninterpreted_option");
    FieldByName = AddrObjGoogle::protobuf::Descriptor::FindFieldByName(v110, (uint64_t)&v141);
    v112 = FieldByName;
    if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v141.__r_.__value_.__l.__data_);
      if (v112)
        goto LABEL_188;
    }
    else if (FieldByName)
    {
      goto LABEL_188;
    }
    v113 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v141, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4272);
    v114 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v113, "CHECK failed: uninterpreted_options_field != NULL: ");
    v115 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v114, "No field named \"uninterpreted_option\" in the Options proto.");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v142, (AddrObjGoogle::protobuf::internal::LogMessage *)v115);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v141.__r_.__value_.__l.__data_);
LABEL_188:
    v116 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v109 + 144))(v109);
    (*(void (**)(uint64_t, AddrObjGoogle::protobuf::Message *, uint64_t))(*(_QWORD *)v116 + 56))(v116, v109, v112);
    v117 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v108 + 152))(v108);
    std::string::basic_string[abi:ne180100]<0>(&v141, "uninterpreted_option");
    v118 = AddrObjGoogle::protobuf::Descriptor::FindFieldByName(v117, (uint64_t)&v141);
    v119 = v118;
    if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v141.__r_.__value_.__l.__data_);
      if (v119)
        goto LABEL_193;
    }
    else if (v118)
    {
      goto LABEL_193;
    }
    v120 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v141, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4280);
    v121 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v120, "CHECK failed: original_uninterpreted_options_field != NULL: ");
    v122 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v121, "No field named \"uninterpreted_option\" in the Options proto.");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v142, (AddrObjGoogle::protobuf::internal::LogMessage *)v122);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v141.__r_.__value_.__l.__data_);
LABEL_193:
    v123 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v108 + 144))(v108);
    v124 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v123 + 48))(v123, v108, v119);
    if (v124 < 1)
    {
LABEL_197:
      *(_OWORD *)&v138.__r_.__value_.__r.__words[1] = 0uLL;
      memset(&v142, 0, sizeof(v142));
      AddrObjGoogle::protobuf::MessageLite::AppendToString((uint64_t)v109, &v142);
      if (!AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v109, (uint64_t *)&v142))
      {
        v127 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v141, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4310);
        v128 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v127, "CHECK failed: options->ParseFromString(buf): ");
        v129 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v128, "Protocol message serialized itself in invalid fashion.");
        AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v140, (AddrObjGoogle::protobuf::internal::LogMessage *)v129);
        AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v141.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v142.__r_.__value_.__l.__data_);
    }
    else
    {
      v125 = 0;
      while (1)
      {
        v126 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v108 + 144))(v108);
        v138.__r_.__value_.__r.__words[2] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v126 + 352))(v126, v108, v119, v125);
        if ((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)&v138, v109) & 1) == 0)break;
        v125 = (v125 + 1);
        if (v124 == (_DWORD)v125)
          goto LABEL_197;
      }
      *(_OWORD *)&v138.__r_.__value_.__r.__words[1] = 0uLL;
    }
    v107 += 64;
  }
  while (v107 != *((_QWORD *)this + 4));
  v130 = *((_QWORD *)this + 3);
  while (v107 != v130)
  {
    v107 -= 64;
    sub_18882B890(v107);
  }
  v107 = v130;
LABEL_209:
  *((_QWORD *)this + 4) = v107;
  AddrObjGoogle::protobuf::DynamicMessageFactory::~DynamicMessageFactory((AddrObjGoogle::protobuf::DynamicMessageFactory *)&v139);
  if (*((_BYTE *)this + 48)
    || (AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFileOptions((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this, (AddrObjGoogle::protobuf::FileDescriptor *)v8, a2), *((_BYTE *)this + 48)))
  {
LABEL_211:
    AddrObjGoogle::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this
                                                                              + 1));
    v8 = 0;
  }
  else
  {
    v132 = (_QWORD *)*((_QWORD *)this + 1);
    v133 = v132[38];
    v134 = v132[39] - 28;
    v132[39] = v134;
    if (v133 == v134)
    {
      v132[42] = v132[41];
      v132[45] = v132[44];
      v132[48] = v132[47];
    }
  }
  std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::destroy((uint64_t)&v136, v137[0]);
  return v8;
}

void sub_188821010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::destroy((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  void *v2;
  uint64_t v3;
  void *v4;

  if (*((char *)this + 151) < 0)
    operator delete(this[16]);
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy((uint64_t)(this + 12), this[13]);
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
  v2 = this[3];
  if (v2)
  {
    v3 = (uint64_t)this[4];
    v4 = this[3];
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 64;
        sub_18882B890(v3);
      }
      while ((void *)v3 != v2);
      v4 = this[3];
    }
    this[4] = v2;
    operator delete(v4);
  }
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  char v16;
  std::string v17[2];

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, const std::string::value_type *, uint64_t, uint64_t, const std::string::value_type *))(*(_QWORD *)v8 + 16))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 48))
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 2553);
      v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v17, "Invalid proto descriptor for file \"");
      v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, (const std::string::value_type *)(a1 + 56));
      v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "\":");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
    }
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 2556);
    v12 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v17, "  ");
    v13 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v12, a2);
    v14 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, ": ");
    v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, a5);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (AddrObjGoogle::protobuf::internal::LogMessage *)v15);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  *(_BYTE *)(a1 + 48) = 1;
}

void sub_188821348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4)
{
  std::string *v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  void *v25;
  std::string *v26;
  __int128 v27;
  std::string v28;
  std::string v29;
  std::string v30;
  std::string v31;
  std::string v32;
  __int128 v33;
  std::string::size_type v34;

  if (*(_QWORD *)(a1 + 120))
  {
    std::operator+<char>();
    v8 = std::string::append(&v28, "\" seems to be defined in \"");
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    v10 = **(_QWORD **)(a1 + 120);
    v11 = *(char *)(v10 + 23);
    if (v11 >= 0)
      v12 = **(const std::string::value_type ***)(a1 + 120);
    else
      v12 = *(const std::string::value_type **)v10;
    if (v11 >= 0)
      v13 = *(unsigned __int8 *)(v10 + 23);
    else
      v13 = *(_QWORD *)(v10 + 8);
    v14 = std::string::append(&v29, v12, v13);
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    v16 = std::string::append(&v30, "\", which is not imported by \"");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = *(char *)(a1 + 79);
    if (v18 >= 0)
      v19 = (const std::string::value_type *)(a1 + 56);
    else
      v19 = *(const std::string::value_type **)(a1 + 56);
    if (v18 >= 0)
      v20 = *(unsigned __int8 *)(a1 + 79);
    else
      v20 = *(_QWORD *)(a1 + 64);
    v21 = std::string::append(&v31, v19, v20);
    v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    v23 = std::string::append(&v32, "\".  To use it here, please add the necessary import.");
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v34 = v23->__r_.__value_.__r.__words[2];
    v33 = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v33);
    if (SHIBYTE(v34) < 0)
      operator delete((void *)v33);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v32.__r_.__value_.__l.__data_);
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v29.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    {
      v25 = (void *)v28.__r_.__value_.__r.__words[0];
LABEL_30:
      operator delete(v25);
    }
  }
  else
  {
    std::operator+<char>();
    v26 = std::string::append(&v32, "\" is not defined.");
    v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v34 = v26->__r_.__value_.__r.__words[2];
    v33 = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v33);
    if (SHIBYTE(v34) < 0)
      operator delete((void *)v33);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    {
      v25 = (void *)v32.__r_.__value_.__r.__words[0];
      goto LABEL_30;
    }
  }
}

void sub_1888215AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  uint64_t v35;

  if (*(char *)(v35 - 57) < 0)
    operator delete(*(void **)(v35 - 80));
  if (*(char *)(v35 - 89) < 0)
    operator delete(*(void **)(v35 - 112));
  _Unwind_Resume(exception_object);
}

BOOL AddrObjGoogle::protobuf::DescriptorBuilder::IsInPackage(uint64_t a1, uint64_t a2, const void **a3)
{
  const void **v4;
  size_t v5;
  size_t v6;
  _BYTE *v7;
  size_t v8;
  size_t v9;
  const void **v10;
  const void *v11;
  int v12;

  v4 = *(const void ***)(a2 + 8);
  v5 = *((unsigned __int8 *)v4 + 23);
  if ((v5 & 0x80u) == 0)
    v6 = *((unsigned __int8 *)v4 + 23);
  else
    v6 = (size_t)v4[1];
  v7 = (_BYTE *)*((unsigned __int8 *)a3 + 23);
  if (*((char *)a3 + 23) < 0)
  {
    v8 = (size_t)a3[1];
    if (v6 < v8)
      return 0;
  }
  else
  {
    v8 = *((unsigned __int8 *)a3 + 23);
    if (v6 < (unint64_t)v7)
      return 0;
  }
  if ((v5 & 0x80) == 0)
  {
    if (v8 != -1)
    {
      if (v5 >= v8)
        v9 = v8;
      else
        v9 = *((unsigned __int8 *)v4 + 23);
      v10 = *(const void ***)(a2 + 8);
      goto LABEL_19;
    }
LABEL_34:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  if (v8 == -1)
    goto LABEL_34;
  if ((unint64_t)v4[1] >= v8)
    v9 = v8;
  else
    v9 = (size_t)v4[1];
  v10 = (const void **)*v4;
LABEL_19:
  if ((char)v7 >= 0)
    v11 = a3;
  else
    v11 = *a3;
  v12 = memcmp(v10, v11, v9);
  if (v9 != v8 || v12 != 0)
    return 0;
  if ((v7 & 0x80) != 0)
    v7 = a3[1];
  if ((_BYTE *)v6 == v7)
    return 1;
  if ((v5 & 0x80) != 0)
    v4 = (const void **)*v4;
  return v7[(_QWORD)v4] == 46;
}

uint64_t *AddrObjGoogle::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t *result, uint64_t a2)
{
  AddrObjGoogle::protobuf::DescriptorBuilder *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = a2;
  if (a2)
  {
    v2 = (AddrObjGoogle::protobuf::DescriptorBuilder *)result;
    result = std::__tree<AddrObjGoogle::protobuf::Descriptor const*>::__emplace_unique_key_args<AddrObjGoogle::protobuf::Descriptor const*,AddrObjGoogle::protobuf::Descriptor const*>((uint64_t **)result + 12, (unint64_t *)&v6, &v6);
    if ((v3 & 1) != 0)
    {
      v4 = v6;
      if (v6)
      {
        v5 = 0;
        do
        {
          if (v5 >= *(int *)(v4 + 40))
            break;
          result = (uint64_t *)AddrObjGoogle::protobuf::DescriptorBuilder::RecordPublicDependencies(v2, *(const AddrObjGoogle::protobuf::FileDescriptor **)(*(_QWORD *)(v4 + 32)+ 8* *(int *)(*(_QWORD *)(v4 + 48)+ 4 * v5++)));
          v4 = v6;
        }
        while (v6);
      }
    }
  }
  return result;
}

_OWORD *AddrObjGoogle::protobuf::DescriptorBuilder::NewPlaceholderFile(uint64_t *a1, uint64_t a2)
{
  _OWORD *Bytes;
  std::string *String;
  uint64_t *v6;
  uint64_t v7;
  AddrObjGoogle::protobuf::FileDescriptorTables *v8;

  Bytes = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes((AddrObjGoogle::protobuf::DescriptorPool::Tables *)a1[1], 160);
  *Bytes = 0u;
  Bytes[1] = 0u;
  Bytes[2] = 0u;
  Bytes[3] = 0u;
  Bytes[4] = 0u;
  Bytes[5] = 0u;
  Bytes[6] = 0u;
  Bytes[7] = 0u;
  Bytes[8] = 0u;
  Bytes[9] = 0u;
  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString((_QWORD *)a1[1], a2);
  *(_QWORD *)Bytes = String;
  v6 = AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)String);
  v7 = *a1;
  *((_QWORD *)Bytes + 1) = v6;
  *((_QWORD *)Bytes + 2) = v7;
  v8 = (AddrObjGoogle::protobuf::FileDescriptorTables *)AddrObjGoogle::protobuf::FileOptions::default_instance((AddrObjGoogle::protobuf::FileOptions *)v6);
  *((_QWORD *)Bytes + 17) = v8;
  AddrObjGoogle::protobuf::FileDescriptorTables::kEmpty(v8);
  *((_QWORD *)Bytes + 18) = &xmmword_1EDF507D0;
  return Bytes;
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string::size_type v8;
  std::string::size_type v9;
  _QWORD *v10;
  std::string *String;
  int8x8_t *v12;
  const char *v13;
  char v14;
  unint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int8x8_t v18;
  uint8x8_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t **v22;
  uint64_t *v23;
  unint64_t v24;
  int v25;
  std::string *v26;
  __int128 v27;
  uint64_t *v28;
  std::string v29;
  std::string v30;
  std::string v31;
  std::string v32;

  if (sub_188821C6C(*(_QWORD *)(a1 + 8), (const char *)a2, 7, a4))
  {
    v8 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v8 == -1)
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (uint64_t *)a2, (const std::string::value_type *)a2, a3);
    }
    else
    {
      v9 = v8;
      v10 = *(_QWORD **)(a1 + 8);
      std::string::basic_string(&v32, (const std::string *)a2, 0, v8, (std::allocator<char> *)&v31);
      String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v10, (uint64_t)&v32);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
      AddrObjGoogle::protobuf::DescriptorBuilder::AddPackage(a1, String, a3, a4);
      std::string::basic_string(&v32, (const std::string *)a2, v9 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v31);
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (uint64_t *)&v32, (const std::string::value_type *)a2, a3);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v32.__r_.__value_.__l.__data_);
    }
    return;
  }
  v12 = *(int8x8_t **)(a1 + 8);
  if (*(char *)(a2 + 23) >= 0)
    v13 = (const char *)a2;
  else
    v13 = *(const char **)a2;
  v14 = *v13;
  if (*v13)
  {
    v15 = 0;
    v16 = (unsigned __int8 *)(v13 + 1);
    do
    {
      v15 = 5 * v15 + v14;
      v17 = *v16++;
      v14 = v17;
    }
    while (v17);
  }
  else
  {
    v15 = 0;
  }
  v18 = v12[26];
  if (!*(_QWORD *)&v18)
    goto LABEL_32;
  v19 = (uint8x8_t)vcnt_s8(v18);
  v19.i16[0] = vaddlv_u8(v19);
  v20 = v19.u32[0];
  if (v19.u32[0] > 1uLL)
  {
    v21 = v15;
    if (v15 >= *(_QWORD *)&v18)
      v21 = v15 % *(_QWORD *)&v18;
  }
  else
  {
    v21 = (*(_QWORD *)&v18 - 1) & v15;
  }
  v22 = *(uint64_t ***)(*(_QWORD *)&v12[25] + 8 * v21);
  if (!v22 || (v23 = *v22) == 0)
  {
LABEL_32:
    sub_188829F58();
    v28 = &qword_1EDF508B8;
    goto LABEL_33;
  }
  while (1)
  {
    v24 = v23[1];
    if (v15 == v24)
      break;
    if (v20 > 1)
    {
      if (v24 >= *(_QWORD *)&v18)
        v24 %= *(_QWORD *)&v18;
    }
    else
    {
      v24 &= *(_QWORD *)&v18 - 1;
    }
    if (v24 != v21)
      goto LABEL_32;
LABEL_31:
    v23 = (uint64_t *)*v23;
    if (!v23)
      goto LABEL_32;
  }
  if (strcmp((const char *)v23[2], v13))
    goto LABEL_31;
  v28 = v23 + 3;
LABEL_33:
  v25 = *(_DWORD *)v28;
  if (*(_DWORD *)v28 != 7)
  {
    std::operator+<char>();
    v26 = std::string::append(&v29, "\" is already defined (as something other than a package) in file \"");
    v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    __asm { BR              X10 }
  }
}

void sub_188821BF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_188821C6C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  const char *v9;
  char v10;
  unint64_t v11;
  unsigned __int8 *v12;
  int v13;
  unint64_t v14;
  uint8x8_t v15;
  unint64_t v16;
  uint64_t ***v17;
  uint64_t **v18;
  unint64_t v19;
  uint64_t result;
  _QWORD *v21;
  float v22;
  float v23;
  _BOOL4 v24;
  unint64_t v25;
  unint64_t v26;
  int8x8_t prime;
  void *v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint8x8_t v33;
  unint64_t v34;
  uint8x8_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  const char *v43;
  unint64_t v44;
  const char **v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void *v58;

  v5 = a4;
  if (a2[23] >= 0)
    v9 = a2;
  else
    v9 = *(const char **)a2;
  v10 = *v9;
  if (*v9)
  {
    v11 = 0;
    v12 = (unsigned __int8 *)(v9 + 1);
    do
    {
      v11 = 5 * v11 + v10;
      v13 = *v12++;
      v10 = v13;
    }
    while (v13);
  }
  else
  {
    v11 = 0;
  }
  v14 = *(_QWORD *)(a1 + 208);
  if (v14)
  {
    v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      v4 = v11;
      if (v11 >= v14)
        v4 = v11 % v14;
    }
    else
    {
      v4 = (v14 - 1) & v11;
    }
    v17 = *(uint64_t ****)(*(_QWORD *)(a1 + 200) + 8 * v4);
    if (v17)
    {
      v18 = *v17;
      if (*v17)
      {
        while (1)
        {
          v19 = (unint64_t)v18[1];
          if (v19 == v11)
          {
            result = strcmp((const char *)v18[2], v9);
            if (!(_DWORD)result)
              return result;
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14)
                v19 %= v14;
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v4)
            {
LABEL_26:
              v5 = a4;
              break;
            }
          }
          v18 = (uint64_t **)*v18;
          if (!v18)
            goto LABEL_26;
        }
      }
    }
  }
  v21 = operator new(0x28uLL);
  *v21 = 0;
  v21[1] = v11;
  v21[2] = v9;
  v21[3] = a3;
  v21[4] = v5;
  v22 = (float)(unint64_t)(*(_QWORD *)(a1 + 224) + 1);
  v23 = *(float *)(a1 + 232);
  if (v14 && (float)(v23 * (float)v14) >= v22)
  {
    v11 = v4;
    goto LABEL_73;
  }
  v24 = (v14 & (v14 - 1)) == 0;
  if (v14 < 3)
    v24 = 0;
  v25 = (2 * v14) | !v24;
  v26 = vcvtps_u32_f32(v22 / v23);
  if (v25 <= v26)
    prime = (int8x8_t)v26;
  else
    prime = (int8x8_t)v25;
  if (*(_QWORD *)&prime == 1)
  {
    prime = (int8x8_t)2;
  }
  else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
  {
    prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
    v14 = *(_QWORD *)(a1 + 208);
  }
  if (*(_QWORD *)&prime <= v14)
  {
    if (*(_QWORD *)&prime >= v14)
      goto LABEL_69;
    v34 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 224) / *(float *)(a1 + 232));
    if (v14 < 3 || (v35 = (uint8x8_t)vcnt_s8((int8x8_t)v14), v35.i16[0] = vaddlv_u8(v35), v35.u32[0] > 1uLL))
    {
      v34 = std::__next_prime(v34);
    }
    else
    {
      v36 = 1 << -(char)__clz(v34 - 1);
      if (v34 >= 2)
        v34 = v36;
    }
    if (*(_QWORD *)&prime <= v34)
      prime = (int8x8_t)v34;
    if (*(_QWORD *)&prime >= v14)
    {
      v14 = *(_QWORD *)(a1 + 208);
      goto LABEL_69;
    }
    if (!*(_QWORD *)&prime)
    {
      v58 = *(void **)(a1 + 200);
      *(_QWORD *)(a1 + 200) = 0;
      if (v58)
        operator delete(v58);
      v14 = 0;
      *(_QWORD *)(a1 + 208) = 0;
      goto LABEL_69;
    }
  }
  if (*(_QWORD *)&prime >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  v28 = operator new(8 * *(_QWORD *)&prime);
  v29 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v28;
  if (v29)
    operator delete(v29);
  v30 = 0;
  *(int8x8_t *)(a1 + 208) = prime;
  do
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * v30++) = 0;
  while (*(_QWORD *)&prime != v30);
  v31 = *(_QWORD **)(a1 + 216);
  if (v31)
  {
    v32 = v31[1];
    v33 = (uint8x8_t)vcnt_s8(prime);
    v33.i16[0] = vaddlv_u8(v33);
    if (v33.u32[0] > 1uLL)
    {
      if (v32 >= *(_QWORD *)&prime)
        v32 %= *(_QWORD *)&prime;
    }
    else
    {
      v32 &= *(_QWORD *)&prime - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * v32) = a1 + 216;
    v37 = (_QWORD *)*v31;
    if (*v31)
    {
      do
      {
        v38 = v37[1];
        if (v33.u32[0] > 1uLL)
        {
          if (v38 >= *(_QWORD *)&prime)
            v38 %= *(_QWORD *)&prime;
        }
        else
        {
          v38 &= *(_QWORD *)&prime - 1;
        }
        if (v38 != v32)
        {
          v39 = *(_QWORD *)(a1 + 200);
          if (!*(_QWORD *)(v39 + 8 * v38))
          {
            *(_QWORD *)(v39 + 8 * v38) = v31;
            goto LABEL_65;
          }
          *v31 = *v37;
          *v37 = **(_QWORD **)(*(_QWORD *)(a1 + 200) + 8 * v38);
          **(_QWORD **)(*(_QWORD *)(a1 + 200) + 8 * v38) = v37;
          v37 = v31;
        }
        v38 = v32;
LABEL_65:
        v31 = v37;
        v37 = (_QWORD *)*v37;
        v32 = v38;
      }
      while (v37);
    }
  }
  v14 = (unint64_t)prime;
LABEL_69:
  if ((v14 & (v14 - 1)) != 0)
  {
    if (v11 >= v14)
      v11 %= v14;
  }
  else
  {
    v11 &= v14 - 1;
  }
LABEL_73:
  v40 = *(_QWORD *)(a1 + 200);
  v41 = *(_QWORD **)(v40 + 8 * v11);
  if (v41)
  {
    *v21 = *v41;
LABEL_81:
    *v41 = v21;
    goto LABEL_82;
  }
  *v21 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 216) = v21;
  *(_QWORD *)(v40 + 8 * v11) = a1 + 216;
  if (*v21)
  {
    v42 = *(_QWORD *)(*v21 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v42 >= v14)
        v42 %= v14;
    }
    else
    {
      v42 &= v14 - 1;
    }
    v41 = (_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * v42);
    goto LABEL_81;
  }
LABEL_82:
  ++*(_QWORD *)(a1 + 224);
  if (a2[23] >= 0)
    v43 = a2;
  else
    v43 = *(const char **)a2;
  v45 = *(const char ***)(a1 + 336);
  v44 = *(_QWORD *)(a1 + 344);
  if ((unint64_t)v45 >= v44)
  {
    v47 = *(_QWORD *)(a1 + 328);
    v48 = ((uint64_t)v45 - v47) >> 3;
    if ((unint64_t)(v48 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v49 = v44 - v47;
    v50 = v49 >> 2;
    if (v49 >> 2 <= (unint64_t)(v48 + 1))
      v50 = v48 + 1;
    if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8)
      v51 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v51 = v50;
    if (v51)
      v52 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a1 + 344, v51);
    else
      v52 = 0;
    v53 = &v52[8 * v48];
    v54 = &v52[8 * v51];
    *(_QWORD *)v53 = v43;
    v46 = v53 + 8;
    v56 = *(char **)(a1 + 328);
    v55 = *(char **)(a1 + 336);
    if (v55 != v56)
    {
      do
      {
        v57 = *((_QWORD *)v55 - 1);
        v55 -= 8;
        *((_QWORD *)v53 - 1) = v57;
        v53 -= 8;
      }
      while (v55 != v56);
      v55 = *(char **)(a1 + 328);
    }
    *(_QWORD *)(a1 + 328) = v53;
    *(_QWORD *)(a1 + 336) = v46;
    *(_QWORD *)(a1 + 344) = v54;
    if (v55)
      operator delete(v55);
  }
  else
  {
    *v45 = v43;
    v46 = v45 + 1;
  }
  *(_QWORD *)(a1 + 336) = v46;
  return 1;
}

void sub_188822160(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, uint64_t *a2, const std::string::value_type *a3, uint64_t a4)
{
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t *v13;
  std::string *v14;
  __int128 v15;
  unint64_t v16;
  std::string v17;
  void *__p[2];
  std::string::size_type v19;

  v7 = *((unsigned __int8 *)a2 + 23);
  v8 = *((char *)a2 + 23) < 0;
  v9 = a2[1];
  if (*((char *)a2 + 23) >= 0)
    v10 = *((unsigned __int8 *)a2 + 23);
  else
    v10 = a2[1];
  if (v10)
  {
    for (i = 0; i < v16; ++i)
    {
      if (v8)
        v13 = (uint64_t *)*a2;
      else
        v13 = a2;
      if (*((unsigned __int8 *)v13 + i) - 123 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v13 + i) - 91 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v13 + i) - 58 <= 0xFFFFFFF5
        && *((_BYTE *)v13 + i) != 95)
      {
        std::operator+<char>();
        v14 = std::string::append(&v17, "\" is not a valid identifier.");
        v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        v19 = v14->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v19) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v17.__r_.__value_.__l.__data_);
        v7 = *((unsigned __int8 *)a2 + 23);
        v9 = a2[1];
      }
      v8 = (v7 & 0x80u) != 0;
      if ((v7 & 0x80u) == 0)
        v16 = v7;
      else
        v16 = v9;
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Missing name.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (const std::string::value_type *)__p);
    if (SHIBYTE(v19) < 0)
      operator delete(__p[0]);
  }
}

void sub_188822300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::ValidateQualifiedName(uint64_t a1, uint64_t *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t *v5;
  int v6;

  v2 = 0;
  v3 = 0;
  v4 = *((unsigned __int8 *)a2 + 23);
  if ((v4 & 0x80) != 0)
    goto LABEL_4;
LABEL_2:
  v5 = a2;
  if (v2 >= v4)
    return (v4 != 0) & ~v3;
  while (1)
  {
    if (*((unsigned __int8 *)v5 + v2) - 97 >= 0x1A
      && *((unsigned __int8 *)v5 + v2) - 65 >= 0x1A
      && *((unsigned __int8 *)v5 + v2) - 48 >= 0xA)
    {
      v6 = *((unsigned __int8 *)v5 + v2);
      if (v6 != 95)
        break;
    }
    v3 = 0;
LABEL_10:
    ++v2;
    if ((v4 & 0x80) == 0)
      goto LABEL_2;
LABEL_4:
    v5 = (uint64_t *)*a2;
    if (a2[1] <= v2)
    {
      v4 = a2[1];
      return (v4 != 0) & ~v3;
    }
  }
  if (!(v3 & 1 | (v6 != 46)))
  {
    v3 = 1;
    goto LABEL_10;
  }
  return 0;
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptions(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::FileOptions *a2, AddrObjGoogle::protobuf::FileDescriptor *a3)
{
  const void **v6;
  size_t v7;
  void **v8;
  const void *v9;
  void *__p[2];
  char v11;

  v6 = (const void **)*((_QWORD *)a3 + 1);
  if (*((char *)v6 + 23) >= 0)
    v7 = *((unsigned __int8 *)v6 + 23);
  else
    v7 = (size_t)v6[1];
  v8 = __p;
  std::string::basic_string[abi:ne180100]((uint64_t)__p, v7 + 6);
  if (v11 < 0)
    v8 = (void **)__p[0];
  if (v7)
  {
    if (*((char *)v6 + 23) >= 0)
      v9 = v6;
    else
      v9 = *v6;
    memmove(v8, v9, v7);
  }
  strcpy((char *)v8 + v7, ".dummy");
  AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::FileDescriptor>((uint64_t)this, (__int128 *)__p, *(__int128 **)a3, a2, (uint64_t)a3);
  if (v11 < 0)
    operator delete(__p[0]);
}

void sub_1888224D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::FileDescriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::FileOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::FileOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 136) = v10;
  if (*((int *)v10 + 20) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1888225C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::SourceCodeInfo *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::SourceCodeInfo>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::SourceCodeInfo *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::SourceCodeInfo **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::SourceCodeInfo **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::SourceCodeInfo *v16;

  v2 = (AddrObjGoogle::protobuf::SourceCodeInfo *)operator new();
  AddrObjGoogle::protobuf::SourceCodeInfo::SourceCodeInfo(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::SourceCodeInfo **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::SourceCodeInfo **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::SourceCodeInfo *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_1888226EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::BuildMessage(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::DescriptorProto *a2, const AddrObjGoogle::protobuf::Descriptor *a3, AddrObjGoogle::protobuf::Descriptor *a4)
{
  uint64_t *v8;
  std::string *String;
  std::string *v10;
  uint64_t v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  AddrObjGoogle::protobuf::DescriptorProto *Bytes;
  uint64_t v29;
  uint64_t v30;
  AddrObjGoogle::protobuf::MessageLite *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  uint64_t v39;
  AddrObjGoogle::protobuf *v40;
  uint64_t v41;
  const std::string::value_type *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  const char *v46;
  int v47;
  const char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  uint64_t v56;
  uint64_t v57;
  AddrObjGoogle::protobuf *v58;
  const std::string::value_type *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  const char ***v67;
  AddrObjGoogle::protobuf::DescriptorBuilder *v68;
  const AddrObjGoogle::protobuf::DescriptorProto *v69;
  std::string __p;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  const char *v83;
  int v84;
  _BYTE v85[36];
  const char *v86;
  int v87;
  _BYTE v88[36];
  const char *v89;
  int v90;
  _BYTE v91[36];
  const char *v92;
  int v93;
  _BYTE v94[36];
  uint64_t v95;

  v95 = *MEMORY[0x1E0C80C00];
  if (a3)
    v8 = (uint64_t *)((char *)a3 + 8);
  else
    v8 = (uint64_t *)(*((_QWORD *)this + 10) + 8);
  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *v8);
  v10 = String;
  if ((SHIBYTE(String->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((_BYTE *)&String->__r_.__value_.__s + 23))
      goto LABEL_7;
    goto LABEL_6;
  }
  if (String->__r_.__value_.__l.__size_)
LABEL_6:
    std::string::append(String, 1uLL, 46);
LABEL_7:
  v11 = *((_QWORD *)a2 + 2);
  v12 = *(char *)(v11 + 23);
  if (v12 >= 0)
    v13 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
  else
    v13 = *(const std::string::value_type **)v11;
  if (v12 >= 0)
    v14 = *(unsigned __int8 *)(v11 + 23);
  else
    v14 = *(_QWORD *)(v11 + 8);
  std::string::append(v10, v13, v14);
  AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 2), (const std::string::value_type *)v10, (uint64_t)a2);
  *(_QWORD *)a4 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  *((_QWORD *)a4 + 1) = v10;
  *((_QWORD *)a4 + 2) = *((_QWORD *)this + 10);
  *((_QWORD *)a4 + 3) = a3;
  *((_WORD *)a4 + 20) = 0;
  v15 = *((_DWORD *)a2 + 8);
  *((_DWORD *)a4 + 11) = v15;
  *((_QWORD *)a4 + 6) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 120 * v15);
  if (*((int *)a2 + 8) >= 1)
  {
    v16 = 0;
    v17 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildFieldOrExtension(this, *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 3) + 8 * v17++), a4, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a4 + 6) + v16), 0);
      v16 += 120;
    }
    while (v17 < *((int *)a2 + 8));
  }
  v18 = *((_DWORD *)a2 + 20);
  *((_DWORD *)a4 + 14) = v18;
  *((_QWORD *)a4 + 8) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 120 * v18);
  if (*((int *)a2 + 20) >= 1)
  {
    v19 = 0;
    v20 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildMessage(this, *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a2 + 9) + 8 * v20++), a4, (AddrObjGoogle::protobuf::Descriptor *)(*((_QWORD *)a4 + 8) + v19));
      v19 += 120;
    }
    while (v20 < *((int *)a2 + 20));
  }
  v21 = *((_DWORD *)a2 + 26);
  *((_DWORD *)a4 + 18) = v21;
  *((_QWORD *)a4 + 10) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 56 * v21);
  if (*((int *)a2 + 26) >= 1)
  {
    v22 = 0;
    v23 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildEnum(this, *(const AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)a2 + 12) + 8 * v23++), a4, (AddrObjGoogle::protobuf::EnumDescriptor *)(*((_QWORD *)a4 + 10) + v22));
      v22 += 56;
    }
    while (v23 < *((int *)a2 + 26));
  }
  v24 = *((_DWORD *)a2 + 32);
  *((_DWORD *)a4 + 22) = v24;
  *((_QWORD *)a4 + 12) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 8 * v24);
  if (*((int *)a2 + 32) >= 1)
  {
    v25 = 0;
    v26 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildExtensionRange((uint64_t)this, *(_QWORD *)(*((_QWORD *)a2 + 15) + v25), (uint64_t)a4, (int *)(*((_QWORD *)a4 + 12) + v25));
      ++v26;
      v25 += 8;
    }
    while (v26 < *((int *)a2 + 32));
  }
  v27 = *((_DWORD *)a2 + 14);
  *((_DWORD *)a4 + 26) = v27;
  Bytes = (AddrObjGoogle::protobuf::DescriptorProto *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this + 1), 120 * v27);
  *((_QWORD *)a4 + 14) = Bytes;
  if (*((int *)a2 + 14) >= 1)
  {
    v29 = 0;
    v30 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::BuildFieldOrExtension(this, *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a2 + 6) + 8 * v30++), a4, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a4 + 14) + v29), 1);
      v29 += 120;
    }
    while (v30 < *((int *)a2 + 14));
  }
  if ((*((_BYTE *)a2 + 156) & 0x40) != 0)
  {
    v31 = (AddrObjGoogle::protobuf::MessageLite *)*((_QWORD *)a2 + 18);
    if (!v31)
      v31 = *(AddrObjGoogle::protobuf::MessageLite **)(AddrObjGoogle::protobuf::DescriptorProto::default_instance_(Bytes)
                                                     + 144);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::Descriptor>((uint64_t)this, *((__int128 **)a4 + 1), *((__int128 **)a4 + 1), v31, (uint64_t)a4);
  }
  else
  {
    *((_QWORD *)a4 + 4) = 0;
  }
  v68 = this;
  v69 = a2;
  sub_188823620((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t *)a3, *(_QWORD *)a4, (uint64_t)a2, 1, (uint64_t)a4);
  v33 = *((_DWORD *)a4 + 11);
  v34 = *((_DWORD *)a4 + 22);
  if (v33 >= 1)
  {
    for (i = 0; i < v33; ++i)
    {
      if (v34 >= 1)
      {
        v36 = 0;
        v37 = 0;
        v67 = (const char ***)(*((_QWORD *)a4 + 6) + 120 * i);
        v38 = v67 + 5;
        do
        {
          v39 = *((_QWORD *)a4 + 12);
          v40 = (AddrObjGoogle::protobuf *)*(unsigned int *)(v39 + v36);
          if ((int)v40 <= *v38)
          {
            v41 = v39 + v36;
            if (*v38 < *(_DWORD *)(v39 + v36 + 4))
            {
              v42 = (const std::string::value_type *)v67[1];
              v43 = *(_QWORD *)(*((_QWORD *)a2 + 15) + v36);
              v92 = AddrObjGoogle::protobuf::FastInt32ToBuffer(v40, v94, v32);
              v93 = strlen(v92);
              v89 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v41 + 4) - 1), v91, v44);
              v90 = strlen(v89);
              v46 = (const char *)*v67;
              v47 = *((char *)*v67 + 23);
              v48 = (*v67)[1];
              if (v47 < 0)
                v46 = **v67;
              v86 = v46;
              v49 = v47;
              if (v47 < 0)
                v49 = (int)v48;
              v87 = v49;
              v83 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*v38, v85, v45);
              v84 = strlen(v83);
              v81 = 0;
              v82 = -1;
              v79 = 0;
              v80 = -1;
              v77 = 0;
              v78 = -1;
              v75 = 0;
              v76 = -1;
              v73 = 0;
              v74 = -1;
              v71 = 0;
              v72 = -1;
              AddrObjGoogle::protobuf::strings::Substitute("Extension range $0 to $1 includes field \"$2\" ($3).", (uint64_t)&v92, (uint64_t)&v89, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, &__p, (uint64_t)&v75, (uint64_t)&v73, (uint64_t)&v71);
              AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v42, v43, 1, (const std::string::value_type *)&__p);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              v34 = *((_DWORD *)a4 + 22);
            }
          }
          ++v37;
          v36 += 8;
        }
        while (v37 < v34);
        v33 = *((_DWORD *)a4 + 11);
      }
    }
  }
  if (v34 >= 1)
  {
    v50 = 0;
    v51 = 0;
    v52 = 1;
    do
    {
      v53 = v51 + 1;
      if (v51 + 1 >= v34)
      {
        v64 = v34;
      }
      else
      {
        v65 = v51 + 1;
        v66 = v50;
        v54 = (_DWORD *)(*((_QWORD *)a4 + 12) + 8 * v51);
        v55 = v54 + 1;
        v56 = v52;
        do
        {
          v57 = *((_QWORD *)a4 + 12) + v50;
          v58 = (AddrObjGoogle::protobuf *)*(unsigned int *)(v57 + 8);
          if (*v55 > (int)v58 && *(_DWORD *)(v57 + 12) > *v54)
          {
            v59 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
            v60 = *(_QWORD *)(*((_QWORD *)v69 + 15) + 8 * v56);
            v92 = AddrObjGoogle::protobuf::FastInt32ToBuffer(v58, v94, v32);
            v93 = strlen(v92);
            v89 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*(_DWORD *)(v57 + 12) - 1), v91, v61);
            v90 = strlen(v89);
            v86 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)*v54, v88, v62);
            v87 = strlen(v86);
            v83 = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)(*v55 - 1), v85, v63);
            v84 = strlen(v83);
            v81 = 0;
            v82 = -1;
            v79 = 0;
            v80 = -1;
            v77 = 0;
            v78 = -1;
            v75 = 0;
            v76 = -1;
            v73 = 0;
            v74 = -1;
            v71 = 0;
            v72 = -1;
            AddrObjGoogle::protobuf::strings::Substitute("Extension range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v92, (uint64_t)&v89, (uint64_t)&v86, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, &__p, (uint64_t)&v75, (uint64_t)&v73, (uint64_t)&v71);
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v68, v59, v60, 1, (const std::string::value_type *)&__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v34 = *((_DWORD *)a4 + 22);
          }
          ++v56;
          v50 += 8;
        }
        while (v34 > (int)v56);
        v64 = v34;
        v53 = v65;
        v50 = v66;
      }
      ++v52;
      v50 += 8;
      v51 = v53;
    }
    while (v53 < v64);
  }
}

void sub_188822E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::BuildEnum(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::EnumDescriptorProto *a2, const AddrObjGoogle::protobuf::Descriptor *a3, AddrObjGoogle::protobuf::EnumDescriptor *a4)
{
  uint64_t *v8;
  std::string *String;
  std::string *v10;
  uint64_t v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  int v15;
  AddrObjGoogle::protobuf::EnumDescriptorProto *Bytes;
  uint64_t v17;
  uint64_t v18;
  AddrObjGoogle::protobuf::MessageLite *v19;
  void *__p[2];
  char v22;

  if (a3)
    v8 = (uint64_t *)((char *)a3 + 8);
  else
    v8 = (uint64_t *)(*((_QWORD *)this + 10) + 8);
  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *v8);
  v10 = String;
  if ((SHIBYTE(String->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((_BYTE *)&String->__r_.__value_.__s + 23))
      goto LABEL_7;
    goto LABEL_6;
  }
  if (String->__r_.__value_.__l.__size_)
LABEL_6:
    std::string::append(String, 1uLL, 46);
LABEL_7:
  v11 = *((_QWORD *)a2 + 2);
  v12 = *(char *)(v11 + 23);
  if (v12 >= 0)
    v13 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
  else
    v13 = *(const std::string::value_type **)v11;
  if (v12 >= 0)
    v14 = *(unsigned __int8 *)(v11 + 23);
  else
    v14 = *(_QWORD *)(v11 + 8);
  std::string::append(v10, v13, v14);
  AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 2), (const std::string::value_type *)v10, (uint64_t)a2);
  *(_QWORD *)a4 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  *((_QWORD *)a4 + 1) = v10;
  *((_QWORD *)a4 + 2) = *((_QWORD *)this + 10);
  *((_QWORD *)a4 + 3) = a3;
  *((_WORD *)a4 + 20) = 0;
  v15 = *((_DWORD *)a2 + 8);
  if (!v15)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Enums must contain at least one value.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)v10, (uint64_t)a2, 0, (const std::string::value_type *)__p);
    if (v22 < 0)
      operator delete(__p[0]);
    v15 = *((_DWORD *)a2 + 8);
  }
  *((_DWORD *)a4 + 11) = v15;
  Bytes = (AddrObjGoogle::protobuf::EnumDescriptorProto *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this+ 1), 40 * v15);
  *((_QWORD *)a4 + 6) = Bytes;
  if (*((int *)a2 + 8) >= 1)
  {
    v17 = 0;
    v18 = 0;
    do
    {
      Bytes = (AddrObjGoogle::protobuf::EnumDescriptorProto *)AddrObjGoogle::protobuf::DescriptorBuilder::BuildEnumValue(this, *(const AddrObjGoogle::protobuf::EnumValueDescriptorProto **)(*((_QWORD *)a2 + 3) + 8 * v18++), a4, (AddrObjGoogle::protobuf::EnumValueDescriptor *)(*((_QWORD *)a4 + 6) + v17));
      v17 += 40;
    }
    while (v18 < *((int *)a2 + 8));
  }
  if ((*((_BYTE *)a2 + 60) & 4) != 0)
  {
    v19 = (AddrObjGoogle::protobuf::MessageLite *)*((_QWORD *)a2 + 6);
    if (!v19)
      v19 = *(AddrObjGoogle::protobuf::MessageLite **)(AddrObjGoogle::protobuf::EnumDescriptorProto::default_instance_(Bytes)
                                                     + 48);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::EnumDescriptor>((uint64_t)this, *((__int128 **)a4 + 1), *((__int128 **)a4 + 1), v19, (uint64_t)a4);
  }
  else
  {
    *((_QWORD *)a4 + 4) = 0;
  }
  return sub_188823620((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t *)a3, *(_QWORD *)a4, (uint64_t)a2, 3, (uint64_t)a4);
}

void sub_188823000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::BuildService(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::ServiceDescriptorProto *a2, const void *a3, AddrObjGoogle::protobuf::ServiceDescriptor *a4)
{
  std::string *String;
  std::string *v8;
  uint64_t v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  int v13;
  AddrObjGoogle::protobuf::ServiceDescriptorProto *Bytes;
  uint64_t v15;
  uint64_t v16;
  AddrObjGoogle::protobuf::MessageLite *v17;

  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *(_QWORD *)(*((_QWORD *)this + 10) + 8));
  v8 = String;
  if ((SHIBYTE(String->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((_BYTE *)&String->__r_.__value_.__s + 23))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (String->__r_.__value_.__l.__size_)
LABEL_3:
    std::string::append(String, 1uLL, 46);
LABEL_4:
  v9 = *((_QWORD *)a2 + 2);
  v10 = *(char *)(v9 + 23);
  if (v10 >= 0)
    v11 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
  else
    v11 = *(const std::string::value_type **)v9;
  if (v10 >= 0)
    v12 = *(unsigned __int8 *)(v9 + 23);
  else
    v12 = *(_QWORD *)(v9 + 8);
  std::string::append(v8, v11, v12);
  AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 2), (const std::string::value_type *)v8, (uint64_t)a2);
  *(_QWORD *)a4 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  *((_QWORD *)a4 + 1) = v8;
  *((_QWORD *)a4 + 2) = *((_QWORD *)this + 10);
  v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)a4 + 8) = v13;
  Bytes = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(*((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this+ 1), 48 * v13);
  *((_QWORD *)a4 + 5) = Bytes;
  if (*((int *)a2 + 8) >= 1)
  {
    v15 = 0;
    v16 = 0;
    do
    {
      Bytes = (AddrObjGoogle::protobuf::ServiceDescriptorProto *)AddrObjGoogle::protobuf::DescriptorBuilder::BuildMethod(this, *(const AddrObjGoogle::protobuf::MethodDescriptorProto **)(*((_QWORD *)a2 + 3) + 8 * v16++), a4, (const std::string::value_type ***)(*((_QWORD *)a4 + 5) + v15));
      v15 += 48;
    }
    while (v16 < *((int *)a2 + 8));
  }
  if ((*((_BYTE *)a2 + 60) & 4) != 0)
  {
    v17 = (AddrObjGoogle::protobuf::MessageLite *)*((_QWORD *)a2 + 6);
    if (!v17)
      v17 = *(AddrObjGoogle::protobuf::MessageLite **)(AddrObjGoogle::protobuf::ServiceDescriptorProto::default_instance_(Bytes)
                                                     + 48);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::ServiceDescriptor>((uint64_t)this, *((__int128 **)a4 + 1), *((__int128 **)a4 + 1), v17, (uint64_t)a4);
  }
  else
  {
    *((_QWORD *)a4 + 3) = 0;
  }
  return sub_188823620((uint64_t)this, *((_QWORD *)a4 + 1), 0, *(_QWORD *)a4, (uint64_t)a2, 5, (uint64_t)a4);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkFile(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::FileDescriptor *a2, const AddrObjGoogle::protobuf::FileDescriptorProto *a3)
{
  AddrObjGoogle::protobuf::DescriptorBuilder *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  if (!*((_QWORD *)a2 + 17))
  {
    this = (AddrObjGoogle::protobuf::DescriptorBuilder *)AddrObjGoogle::protobuf::FileOptions::default_instance(this);
    *((_QWORD *)a2 + 17) = this;
  }
  if (*((int *)a2 + 18) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkMessage(v5, (AddrObjGoogle::protobuf::Descriptor *)(*((_QWORD *)a2 + 10) + v6), *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 11) + 8 * v7++));
      v6 += 120;
    }
    while (v7 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkField(v5, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 16) + v8), *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 20) + 8 * v9++));
      v8 += 120;
    }
    while (v9 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 22) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      this = AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkEnum(this, (AddrObjGoogle::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 12) + v10), a3);
      ++v11;
      v10 += 56;
    }
    while (v11 < *((int *)a2 + 22));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkService(v5, (AddrObjGoogle::protobuf::ServiceDescriptor *)(*((_QWORD *)a2 + 14) + v12), *(const AddrObjGoogle::protobuf::ServiceDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v13++));
      v12 += 48;
    }
    while (v13 < *((int *)a2 + 26));
  }
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFileOptions(AddrObjGoogle::protobuf::DescriptorPool::Tables **this, AddrObjGoogle::protobuf::FileDescriptor *a2, const AddrObjGoogle::protobuf::FileDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::FileOptions *v14;
  AddrObjGoogle::protobuf::FileOptions *v15;
  uint64_t v16;
  uint64_t v17;
  AddrObjGoogle::protobuf::FileOptions *v18;
  const std::string::value_type *v19;
  std::string *v20;
  __int128 v21;
  std::string v22;
  void *__p[2];
  std::string::size_type v24;

  if (*((int *)a2 + 18) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (AddrObjGoogle::protobuf::Descriptor *)(*((_QWORD *)a2 + 10) + v6), *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 11) + 8 * v7++));
      v6 += 120;
    }
    while (v7 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 22) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateEnumOptions((AddrObjGoogle::protobuf::DescriptorBuilder *)this, (AddrObjGoogle::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 12) + v8), *(const AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)a3 + 14) + 8 * v9++));
      v8 += 56;
    }
    while (v9 < *((int *)a2 + 22));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateServiceOptions((AddrObjGoogle::protobuf::DescriptorBuilder *)this, (AddrObjGoogle::protobuf::ServiceDescriptor *)(*((_QWORD *)a2 + 14) + v10), *(const AddrObjGoogle::protobuf::ServiceDescriptorProto **)(*((_QWORD *)a3 + 17) + 8 * v11++));
      v10 += 48;
    }
    while (v11 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 16) + v12), *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 20) + 8 * v13++));
      v12 += 120;
    }
    while (v13 < *((int *)a2 + 30));
  }
  v14 = (AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)a2 + 17);
  v15 = (AddrObjGoogle::protobuf::FileOptions *)AddrObjGoogle::protobuf::FileOptions::default_instance((AddrObjGoogle::protobuf::FileOptions *)this);
  if ((v14 == v15 || *(_DWORD *)(*((_QWORD *)a2 + 17) + 56) != 3) && *((int *)a2 + 6) >= 1)
  {
    v16 = 0;
    while (1)
    {
      v17 = *(_QWORD *)(*((_QWORD *)a2 + 4) + 8 * v16);
      if (v17)
      {
        v18 = *(AddrObjGoogle::protobuf::FileOptions **)(v17 + 136);
        v15 = (AddrObjGoogle::protobuf::FileOptions *)AddrObjGoogle::protobuf::FileOptions::default_instance(v15);
        if (v18 != v15 && *(_DWORD *)(*(_QWORD *)(v17 + 136) + 56) == 3)
          break;
      }
      if (++v16 >= *((int *)a2 + 6))
        return;
    }
    v19 = *(const std::string::value_type **)a2;
    std::operator+<char>();
    v20 = std::string::append(&v22, "\" which is.");
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v24 = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, (uint64_t)a3, 9, (const std::string::value_type *)__p);
    if (SHIBYTE(v24) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v22.__r_.__value_.__l.__data_);
  }
}

void sub_1888234F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::BuildExtensionRange(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  int v7;
  int v8;
  const std::string::value_type *v10;
  const std::string::value_type *v11;
  void *__p[2];
  char v13;

  v7 = *(_DWORD *)(a2 + 16);
  *a4 = v7;
  v8 = *(_DWORD *)(a2 + 20);
  a4[1] = v8;
  if (v7 <= 0)
  {
    v10 = *(const std::string::value_type **)(a3 + 8);
    std::string::basic_string[abi:ne180100]<0>(__p, "Extension numbers must be positive integers.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, v10, a2, 1, (const std::string::value_type *)__p);
    if (v13 < 0)
      operator delete(__p[0]);
    v7 = *a4;
    v8 = a4[1];
  }
  if (v7 >= v8)
  {
    v11 = *(const std::string::value_type **)(a3 + 8);
    std::string::basic_string[abi:ne180100]<0>(__p, "Extension range end number must be greater than start number.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, v11, a2, 1, (const std::string::value_type *)__p);
    if (v13 < 0)
      operator delete(__p[0]);
  }
}

void sub_188823600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_188823620(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v11;
  int8x8_t *v15;
  const char *v16;
  char v17;
  unint64_t v18;
  unsigned __int8 *v19;
  int v20;
  std::string *v21;
  std::string *v22;
  std::string *v23;
  int8x8_t v24;
  uint8x8_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t **v28;
  uint64_t *i;
  unint64_t v30;
  const std::string::value_type ***v31;
  const std::string::value_type ****v32;
  const std::string::value_type **v33;
  std::string *v34;
  __int128 v35;
  int v36;
  const std::string::value_type *v37;
  std::string::size_type v38;
  std::string *v39;
  __int128 v40;
  std::string *v41;
  __int128 v42;
  void *v43;
  std::string::size_type v44;
  std::string::size_type v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  __int128 v49;
  std::string *v50;
  std::string::size_type size;
  std::string *v52;
  __int128 v53;
  std::string *v54;
  __int128 v55;
  std::string *v56;
  __int128 v57;
  uint64_t *v58;
  const std::string::value_type ****v59;
  std::string v60;
  std::string v61;
  std::string v62;
  std::string v63;
  std::string v64;
  std::string __p[2];
  char v66[9];

  v11 = a3;
  if (!a3)
    v11 = *(uint64_t **)(a1 + 80);
  if (sub_188821C6C(*(_QWORD *)(a1 + 8), (const char *)a2, a6, a7))
  {
    if ((sub_188824D08(*(float **)(a1 + 88), v11, a4, a6, a7) & 1) != 0)
      return 1;
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 2870);
    v21 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "\"");
    v22 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, (const std::string::value_type *)a2);
    v23 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v22, "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v64, (AddrObjGoogle::protobuf::internal::LogMessage *)v23);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  else
  {
    v15 = *(int8x8_t **)(a1 + 8);
    if (*(char *)(a2 + 23) >= 0)
      v16 = (const char *)a2;
    else
      v16 = *(const char **)a2;
    v17 = *v16;
    if (*v16)
    {
      v18 = 0;
      v19 = (unsigned __int8 *)(v16 + 1);
      do
      {
        v18 = 5 * v18 + v17;
        v20 = *v19++;
        v17 = v20;
      }
      while (v20);
    }
    else
    {
      v18 = 0;
    }
    v24 = v15[26];
    if (v24)
    {
      v25 = (uint8x8_t)vcnt_s8(v24);
      v25.i16[0] = vaddlv_u8(v25);
      v26 = v25.u32[0];
      if (v25.u32[0] > 1uLL)
      {
        v27 = v18;
        if (v18 >= *(_QWORD *)&v24)
          v27 = v18 % *(_QWORD *)&v24;
      }
      else
      {
        v27 = (*(_QWORD *)&v24 - 1) & v18;
      }
      v28 = *(uint64_t ***)(*(_QWORD *)&v15[25] + 8 * v27);
      if (v28)
      {
        for (i = *v28; i; i = (uint64_t *)*i)
        {
          v30 = i[1];
          if (v18 == v30)
          {
            if (!strcmp((const char *)i[2], v16))
            {
              v58 = i + 3;
              v59 = (const std::string::value_type ****)(i + 4);
              goto LABEL_32;
            }
          }
          else
          {
            if (v26 > 1)
            {
              if (v30 >= *(_QWORD *)&v24)
                v30 %= *(_QWORD *)&v24;
            }
            else
            {
              v30 &= *(_QWORD *)&v24 - 1;
            }
            if (v30 != v27)
              break;
          }
        }
      }
    }
    sub_188829F58();
    v58 = &qword_1EDF508B8;
    v59 = (const std::string::value_type ****)&qword_1EDF508C0;
LABEL_32:
    v31 = *v59;
    switch(*(_DWORD *)v58)
    {
      case 1:
      case 3:
      case 5:
        v32 = (const std::string::value_type ****)(v31 + 2);
        goto LABEL_39;
      case 2:
        v32 = (const std::string::value_type ****)(v31 + 4);
        goto LABEL_39;
      case 4:
        v33 = v31[3];
        goto LABEL_38;
      case 6:
        v33 = v31[2];
LABEL_38:
        v32 = (const std::string::value_type ****)(v33 + 2);
LABEL_39:
        v31 = *v32;
        break;
      case 7:
        break;
      default:
        v31 = 0;
        break;
    }
    if (v31 == *(const std::string::value_type ****)(a1 + 80))
    {
      v44 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v44 == -1)
      {
        std::operator+<char>();
        v56 = std::string::append(&v64, "\" is already defined.");
        v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
        __p[0].__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v57;
        v56->__r_.__value_.__l.__size_ = 0;
        v56->__r_.__value_.__r.__words[2] = 0;
        v56->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p[0].__r_.__value_.__l.__data_);
        if ((SHIBYTE(v64.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return 0;
        v43 = (void *)v64.__r_.__value_.__r.__words[0];
      }
      else
      {
        v45 = v44;
        std::string::basic_string(&v61, (const std::string *)a2, v44 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v60);
        v46 = std::string::insert(&v61, 0, "\"");
        v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
        v62.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v47;
        v46->__r_.__value_.__l.__size_ = 0;
        v46->__r_.__value_.__r.__words[2] = 0;
        v46->__r_.__value_.__r.__words[0] = 0;
        v48 = std::string::append(&v62, "\" is already defined in \"");
        v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
        v63.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v49;
        v48->__r_.__value_.__l.__size_ = 0;
        v48->__r_.__value_.__r.__words[2] = 0;
        v48->__r_.__value_.__r.__words[0] = 0;
        std::string::basic_string(&v60, (const std::string *)a2, 0, v45, (std::allocator<char> *)v66);
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v50 = &v60;
        else
          v50 = (std::string *)v60.__r_.__value_.__r.__words[0];
        if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v60.__r_.__value_.__r.__words[2]);
        else
          size = v60.__r_.__value_.__l.__size_;
        v52 = std::string::append(&v63, (const std::string::value_type *)v50, size);
        v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
        v64.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v53;
        v52->__r_.__value_.__l.__size_ = 0;
        v52->__r_.__value_.__r.__words[2] = 0;
        v52->__r_.__value_.__r.__words[0] = 0;
        v54 = std::string::append(&v64, "\".");
        v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
        __p[0].__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v55;
        v54->__r_.__value_.__l.__size_ = 0;
        v54->__r_.__value_.__r.__words[2] = 0;
        v54->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p[0].__r_.__value_.__l.__data_);
        if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v64.__r_.__value_.__l.__data_);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v60.__r_.__value_.__l.__data_);
        if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v63.__r_.__value_.__l.__data_);
        if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v62.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v61.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return 0;
        v43 = (void *)v61.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      std::operator+<char>();
      v34 = std::string::append(&v62, "\" is already defined in file \"");
      v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v63.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      v36 = *((char *)*v31 + 23);
      if (v36 >= 0)
        v37 = (const std::string::value_type *)*v31;
      else
        v37 = **v31;
      if (v36 >= 0)
        v38 = *((unsigned __int8 *)*v31 + 23);
      else
        v38 = (std::string::size_type)(*v31)[1];
      v39 = std::string::append(&v63, v37, v38);
      v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
      v64.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v40;
      v39->__r_.__value_.__l.__size_ = 0;
      v39->__r_.__value_.__r.__words[2] = 0;
      v39->__r_.__value_.__r.__words[0] = 0;
      v41 = std::string::append(&v64, "\".");
      v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
      __p[0].__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v42;
      v41->__r_.__value_.__l.__size_ = 0;
      v41->__r_.__value_.__r.__words[2] = 0;
      v41->__r_.__value_.__r.__words[0] = 0;
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p[0].__r_.__value_.__l.__data_);
      if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v64.__r_.__value_.__l.__data_);
      if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v63.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v62.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return 0;
      v43 = (void *)v62.__r_.__value_.__r.__words[0];
    }
    operator delete(v43);
  }
  return 0;
}

void sub_188823B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a47 < 0)
    operator delete(__p);
  if (a40 < 0)
    operator delete(a35);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::BuildFieldOrExtension(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::FieldDescriptorProto *a2, const AddrObjGoogle::protobuf::Descriptor *a3, AddrObjGoogle::protobuf::FieldDescriptor *a4, int a5)
{
  uint64_t *v10;
  std::string *String;
  std::string *v12;
  uint64_t v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  __int128 *v17;
  __int128 v18;
  std::string::size_type v19;
  std::string::size_type size;
  std::string *v21;
  std::string *v22;
  int v23;
  unsigned __int8 **v24;
  std::string::size_type v25;
  unsigned __int8 *v26;
  int v27;
  unsigned __int8 *v28;
  std::string *v29;
  _QWORD *v30;
  std::string::size_type v31;
  unsigned __int8 *v32;
  BOOL v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unint64_t v36;
  BOOL v37;
  unsigned __int8 **v38;
  int v39;
  BOOL v40;
  unsigned __int8 *v41;
  int v42;
  std::string *v43;
  unint64_t v44;
  char **v45;
  int v46;
  int v47;
  char *v48;
  int v49;
  const std::string::value_type *v50;
  int v51;
  const std::string::value_type *v52;
  int v53;
  const std::string::value_type *v54;
  void *v55;
  const std::string::value_type *v56;
  char *v57;
  const std::string::value_type *v58;
  const std::string::value_type *v59;
  AddrObjGoogle::protobuf::MessageLite *v60;
  const char *v61;
  const char *v62;
  const char *v63;
  const char *v64;
  int v65;
  unsigned __int16 *v66;
  int v67;
  unsigned __int16 *v68;
  int v69;
  unsigned __int16 *v70;
  const std::string::value_type *v71;
  int v72;
  int v73;
  unint64_t v75;
  int v76;
  int v77;
  int v79;
  const std::string::value_type *v80;
  char *v81;
  char *v82;
  float v83;
  uint64_t v84;
  const std::string::value_type *v85;
  std::string __p;
  std::string v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  int v103;
  char *__endptr;
  int v105;
  char v106[36];
  std::string v107;
  uint64_t v108;

  v108 = *MEMORY[0x1E0C80C00];
  if (a3)
    v10 = (uint64_t *)((char *)a3 + 8);
  else
    v10 = (uint64_t *)(*((_QWORD *)this + 10) + 8);
  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *v10);
  v12 = String;
  if ((SHIBYTE(String->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*((_BYTE *)&String->__r_.__value_.__s + 23))
      goto LABEL_7;
    goto LABEL_6;
  }
  if (String->__r_.__value_.__l.__size_)
LABEL_6:
    std::string::append(String, 1uLL, 46);
LABEL_7:
  v13 = *((_QWORD *)a2 + 2);
  v14 = *(char *)(v13 + 23);
  if (v14 >= 0)
    v15 = (const std::string::value_type *)*((_QWORD *)a2 + 2);
  else
    v15 = *(const std::string::value_type **)v13;
  if (v14 >= 0)
    v16 = *(unsigned __int8 *)(v13 + 23);
  else
    v16 = *(_QWORD *)(v13 + 8);
  std::string::append(v12, v15, v16);
  AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 2), (const std::string::value_type *)v12, (uint64_t)a2);
  *(_QWORD *)a4 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  *((_QWORD *)a4 + 1) = v12;
  *((_QWORD *)a4 + 4) = *((_QWORD *)this + 10);
  *((_DWORD *)a4 + 10) = *((_DWORD *)a2 + 6);
  *((_BYTE *)a4 + 52) = a5;
  v17 = (__int128 *)*((_QWORD *)a2 + 2);
  if (*((char *)v17 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v87, *(const std::string::value_type **)v17, *((_QWORD *)v17 + 1));
  }
  else
  {
    v18 = *v17;
    v87.__r_.__value_.__r.__words[2] = *((_QWORD *)v17 + 2);
    *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v18;
  }
  v19 = HIBYTE(v87.__r_.__value_.__r.__words[2]);
  size = v87.__r_.__value_.__l.__size_;
  v21 = (std::string *)v87.__r_.__value_.__r.__words[0];
  if ((v87.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = (std::string *)((char *)&v87 + HIBYTE(v87.__r_.__value_.__r.__words[2]));
  else
    v22 = (std::string *)(v87.__r_.__value_.__r.__words[0] + v87.__r_.__value_.__l.__size_);
  if ((v87.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = &v87;
  if (v21 != v22)
  {
    do
    {
      v23 = v21->__r_.__value_.__s.__data_[0];
      if ((v23 - 65) <= 0x19)
        v21->__r_.__value_.__s.__data_[0] = v23 + 32;
      v21 = (std::string *)((char *)v21 + 1);
    }
    while (v21 != v22);
    v19 = HIBYTE(v87.__r_.__value_.__r.__words[2]);
    size = v87.__r_.__value_.__l.__size_;
  }
  v24 = (unsigned __int8 **)*((_QWORD *)a2 + 2);
  if ((v19 & 0x80u) == 0)
    v25 = v19;
  else
    v25 = size;
  v26 = (unsigned __int8 *)*((unsigned __int8 *)v24 + 23);
  v27 = (char)v26;
  if ((char)v26 < 0)
    v26 = v24[1];
  if ((unsigned __int8 *)v25 != v26)
    goto LABEL_44;
  if (v27 >= 0)
    v28 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
  else
    v28 = *v24;
  if ((v19 & 0x80) != 0)
  {
    if (!memcmp(v87.__r_.__value_.__l.__data_, v28, size))
      goto LABEL_45;
LABEL_44:
    *((_QWORD *)a4 + 2) = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), (uint64_t)&v87);
    v24 = (unsigned __int8 **)*((_QWORD *)a2 + 2);
    goto LABEL_46;
  }
  if ((_DWORD)v19)
  {
    v29 = &v87;
    while (v29->__r_.__value_.__s.__data_[0] == *v28)
    {
      v29 = (std::string *)((char *)v29 + 1);
      ++v28;
      if (!--v19)
        goto LABEL_45;
    }
    goto LABEL_44;
  }
LABEL_45:
  *((_QWORD *)a4 + 2) = *(_QWORD *)a4;
LABEL_46:
  v30 = (_QWORD *)*((_QWORD *)this + 1);
  memset(&v107, 0, sizeof(v107));
  if (*((char *)v24 + 23) >= 0)
    v31 = *((unsigned __int8 *)v24 + 23);
  else
    v31 = (std::string::size_type)v24[1];
  std::string::reserve(&v107, v31);
  v32 = (unsigned __int8 *)*((unsigned __int8 *)v24 + 23);
  v33 = *((char *)v24 + 23) < 0;
  v34 = v24[1];
  if (*((char *)v24 + 23) >= 0)
    v35 = (unsigned __int8 *)*((unsigned __int8 *)v24 + 23);
  else
    v35 = v24[1];
  if (v35)
  {
    v36 = 0;
    v37 = 0;
    do
    {
      v38 = (unsigned __int8 **)*v24;
      if (!v33)
        v38 = v24;
      v39 = *((unsigned __int8 *)v38 + v36);
      v40 = v39 == 95;
      if (v39 != 95)
      {
        if (v37)
        {
          if ((v39 - 97) > 0x19)
            LOBYTE(v39) = *((_BYTE *)v38 + v36);
          else
            LOBYTE(v39) = v39 - 32;
        }
        std::string::push_back(&v107, v39);
        v32 = (unsigned __int8 *)*((unsigned __int8 *)v24 + 23);
        v34 = v24[1];
      }
      ++v36;
      v33 = (char)v32 < 0;
      if ((char)v32 >= 0)
        v41 = v32;
      else
        v41 = v34;
      v37 = v40;
    }
    while ((unint64_t)v41 > v36);
  }
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v107.__r_.__value_.__l.__size_)
    {
      v43 = (std::string *)v107.__r_.__value_.__r.__words[0];
      v42 = *v107.__r_.__value_.__l.__data_;
      if ((v42 - 65) <= 0x19)
        goto LABEL_72;
    }
  }
  else if (*((_BYTE *)&v107.__r_.__value_.__s + 23))
  {
    LOBYTE(v42) = v107.__r_.__value_.__s.__data_[0];
    if (v107.__r_.__value_.__s.__data_[0] - 65 < 0x1A)
    {
      v43 = &v107;
LABEL_72:
      v43->__r_.__value_.__s.__data_[0] = v42 + 32;
    }
  }
  v44 = (unint64_t)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v30, (uint64_t)&v107);
  *((_QWORD *)a4 + 3) = v44;
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v107.__r_.__value_.__l.__data_);
  v46 = *((_DWORD *)a2 + 16);
  v47 = *((_DWORD *)a2 + 7);
  *(_OWORD *)((char *)a4 + 56) = 0u;
  v48 = (char *)a4 + 56;
  *((_DWORD *)a4 + 11) = v46;
  *((_DWORD *)a4 + 12) = v47;
  *((_QWORD *)a4 + 11) = 0;
  *(_OWORD *)((char *)a4 + 72) = 0u;
  v49 = *((_DWORD *)a2 + 18);
  *((_BYTE *)a4 + 104) = (v49 & 0x40) != 0;
  if ((v49 & 0x40) != 0 && v47 == 3)
  {
    v50 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
    std::string::basic_string[abi:ne180100]<0>(&v107, "Repeated fields can't have default values.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v50, (uint64_t)a2, 4, (const std::string::value_type *)&v107);
    if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v107.__r_.__value_.__l.__data_);
    v49 = *((_DWORD *)a2 + 18);
  }
  if ((v49 & 8) != 0)
  {
    if ((v49 & 0x40) == 0)
    {
      switch(*((_DWORD *)a4 + 11))
      {
        case 1:
        case 3:
        case 4:
        case 6:
          *((_QWORD *)a4 + 14) = 0;
          break;
        case 2:
        case 5:
        case 7:
          *((_DWORD *)a4 + 28) = 0;
          break;
        case 8:
          *((_BYTE *)a4 + 112) = 0;
          break;
        case 9:
          v44 = (unint64_t)AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)v44);
          *((_QWORD *)a4 + 14) = v44;
          break;
        default:
          goto LABEL_81;
      }
      goto LABEL_81;
    }
    __endptr = 0;
    switch(*((_DWORD *)a4 + 11))
    {
      case 1:
        v44 = *((_QWORD *)a2 + 6);
        v65 = *(char *)(v44 + 23);
        if (v65 < 0)
        {
          if (*(_QWORD *)(v44 + 8) != 3)
          {
LABEL_151:
            v44 = std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((_QWORD *)v44, "-inf");
            if ((_DWORD)v44)
            {
              v75 = 0xFFF0000000000000;
LABEL_179:
              *((_QWORD *)a4 + 14) = v75;
              goto LABEL_182;
            }
            v44 = std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*((_QWORD **)a2 + 6), "nan");
            if ((_DWORD)v44)
            {
              v75 = 0x7FF8000000000000;
              goto LABEL_179;
            }
            v81 = (char *)*((_QWORD *)a2 + 6);
            if (v81[23] < 0)
              v81 = *(char **)v81;
            *((double *)a4 + 14) = AddrObjGoogle::protobuf::NoLocaleStrtod((AddrObjGoogle::protobuf *)v81, (char *)&__endptr, v45);
LABEL_182:
            if (!__endptr)
              break;
            v84 = *((_QWORD *)a2 + 6);
            if (*(char *)(v84 + 23) < 0)
            {
              if (!*(_QWORD *)(v84 + 8))
                goto LABEL_188;
            }
            else if (!*(_BYTE *)(v84 + 23))
            {
LABEL_188:
              v85 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
              std::string::basic_string[abi:ne180100]<0>(&v107, "Couldn't parse default value.");
              AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v85, (uint64_t)a2, 4, (const std::string::value_type *)&v107);
              if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v107.__r_.__value_.__l.__data_);
              break;
            }
            if (!*__endptr)
              break;
            goto LABEL_188;
          }
          v66 = *(unsigned __int16 **)v44;
        }
        else
        {
          v66 = (unsigned __int16 *)*((_QWORD *)a2 + 6);
          if (v65 != 3)
            goto LABEL_151;
        }
        v72 = *v66;
        v73 = *((unsigned __int8 *)v66 + 2);
        if (v72 == 28265 && v73 == 102)
        {
          v75 = 0x7FF0000000000000;
          goto LABEL_179;
        }
        goto LABEL_151;
      case 2:
        v44 = *((_QWORD *)a2 + 6);
        v67 = *(char *)(v44 + 23);
        if (v67 < 0)
        {
          if (*(_QWORD *)(v44 + 8) != 3)
            goto LABEL_161;
          v68 = *(unsigned __int16 **)v44;
        }
        else
        {
          v68 = (unsigned __int16 *)*((_QWORD *)a2 + 6);
          if (v67 != 3)
            goto LABEL_161;
        }
        v76 = *v68;
        v77 = *((unsigned __int8 *)v68 + 2);
        if (v76 == 28265 && v77 == 102)
        {
          v79 = 2139095040;
          goto LABEL_181;
        }
LABEL_161:
        v44 = std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((_QWORD *)v44, "-inf");
        if ((_DWORD)v44)
        {
          v79 = -8388608;
        }
        else
        {
          v44 = std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*((_QWORD **)a2 + 6), "nan");
          if (!(_DWORD)v44)
          {
            v82 = (char *)*((_QWORD *)a2 + 6);
            if (v82[23] < 0)
              v82 = *(char **)v82;
            v83 = AddrObjGoogle::protobuf::NoLocaleStrtod((AddrObjGoogle::protobuf *)v82, (char *)&__endptr, v45);
            *((float *)a4 + 28) = v83;
            goto LABEL_182;
          }
          v79 = 2143289344;
        }
LABEL_181:
        *((_DWORD *)a4 + 28) = v79;
        goto LABEL_182;
      case 3:
      case 0x10:
      case 0x12:
        v62 = (const char *)*((_QWORD *)a2 + 6);
        if (v62[23] < 0)
          v62 = *(const char **)v62;
        v44 = strtoll(v62, &__endptr, 0);
        goto LABEL_144;
      case 4:
      case 6:
        v64 = (const char *)*((_QWORD *)a2 + 6);
        if (v64[23] < 0)
          v64 = *(const char **)v64;
        v44 = strtoull(v64, &__endptr, 0);
        goto LABEL_144;
      case 5:
      case 0xF:
      case 0x11:
        v61 = (const char *)*((_QWORD *)a2 + 6);
        if (v61[23] < 0)
          v61 = *(const char **)v61;
        v44 = strtol(v61, &__endptr, 0);
        goto LABEL_124;
      case 7:
      case 0xD:
        v63 = (const char *)*((_QWORD *)a2 + 6);
        if (v63[23] < 0)
          v63 = *(const char **)v63;
        v44 = strtoul(v63, &__endptr, 0);
LABEL_124:
        *((_DWORD *)a4 + 28) = v44;
        goto LABEL_182;
      case 8:
        v44 = *((_QWORD *)a2 + 6);
        v69 = *(char *)(v44 + 23);
        if (v69 < 0)
        {
          if (*(_QWORD *)(v44 + 8) != 4)
            goto LABEL_168;
          v70 = *(unsigned __int16 **)v44;
        }
        else
        {
          v70 = (unsigned __int16 *)*((_QWORD *)a2 + 6);
          if (v69 != 4)
            goto LABEL_168;
        }
        if (*(_DWORD *)v70 == 1702195828)
        {
          *((_BYTE *)a4 + 112) = 1;
          goto LABEL_182;
        }
LABEL_168:
        v44 = std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((_QWORD *)v44, "false");
        if ((_DWORD)v44)
        {
          *((_BYTE *)a4 + 112) = 0;
        }
        else
        {
          v80 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
          std::string::basic_string[abi:ne180100]<0>(&v107, "Boolean default must be true or false.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v80, (uint64_t)a2, 4, (const std::string::value_type *)&v107);
          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v107.__r_.__value_.__l.__data_);
        }
        goto LABEL_182;
      case 9:
      case 0xC:
        if (*((_DWORD *)a4 + 11) == 12)
          AddrObjGoogle::protobuf::UnescapeCEscapeString(*((_QWORD *)a2 + 6), &v107);
        v44 = (unint64_t)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 6));
LABEL_144:
        *((_QWORD *)a4 + 14) = v44;
        goto LABEL_182;
      case 0xA:
      case 0xB:
        v71 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
        std::string::basic_string[abi:ne180100]<0>(&v107, "Messages can't have default values.");
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v71, (uint64_t)a2, 4, (const std::string::value_type *)&v107);
        if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v107.__r_.__value_.__l.__data_);
        *((_BYTE *)a4 + 104) = 0;
        goto LABEL_182;
      case 0xE:
        *((_QWORD *)a4 + 14) = 0;
        goto LABEL_182;
      default:
        break;
    }
  }
LABEL_81:
  v51 = *((_DWORD *)a4 + 10);
  if (v51 <= 0)
  {
    v54 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
    std::string::basic_string[abi:ne180100]<0>(&v107, "Field numbers must be positive integers.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v54, (uint64_t)a2, 1, (const std::string::value_type *)&v107);
    if ((SHIBYTE(v107.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_96;
    v55 = (void *)v107.__r_.__value_.__r.__words[0];
    goto LABEL_95;
  }
  if (v51 >> 29 && (a5 & 1) == 0)
  {
    v52 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
    v107.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)0x1FFFFFFF, &v107.__r_.__value_.__s.__data_[12], (char *)v45);
    LODWORD(v107.__r_.__value_.__r.__words[1]) = strlen(v107.__r_.__value_.__l.__data_);
    __endptr = 0;
    v105 = -1;
    v102 = 0;
    v103 = -1;
    v100 = 0;
    v101 = -1;
    v98 = 0;
    v99 = -1;
    v96 = 0;
    v97 = -1;
    v94 = 0;
    v95 = -1;
    v92 = 0;
    v93 = -1;
    v90 = 0;
    v91 = -1;
    v88 = 0;
    v89 = -1;
    AddrObjGoogle::protobuf::strings::Substitute("Field numbers cannot be greater than $0.", (uint64_t)&v107, (uint64_t)&__endptr, (uint64_t)&v102, (uint64_t)&v100, (uint64_t)&v98, (uint64_t)&v96, (uint64_t)&v94, &__p, (uint64_t)&v92, (uint64_t)&v90, (uint64_t)&v88);
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v52, (uint64_t)a2, 1, (const std::string::value_type *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v53 = *((_DWORD *)a2 + 18);
    goto LABEL_99;
  }
  if ((v51 - 19000) <= 0x3E7)
  {
    v56 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
    v107.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)0x4A38, &v107.__r_.__value_.__s.__data_[12], (char *)v45);
    LODWORD(v107.__r_.__value_.__r.__words[1]) = strlen(v107.__r_.__value_.__l.__data_);
    __endptr = AddrObjGoogle::protobuf::FastInt32ToBuffer((AddrObjGoogle::protobuf *)0x4E1F, v106, v57);
    v105 = strlen(__endptr);
    v102 = 0;
    v103 = -1;
    v100 = 0;
    v101 = -1;
    v98 = 0;
    v99 = -1;
    v96 = 0;
    v97 = -1;
    v94 = 0;
    v95 = -1;
    v92 = 0;
    v93 = -1;
    v90 = 0;
    v91 = -1;
    v88 = 0;
    v89 = -1;
    AddrObjGoogle::protobuf::strings::Substitute("Field numbers $0 through $1 are reserved for the protocol buffer library implementation.", (uint64_t)&v107, (uint64_t)&__endptr, (uint64_t)&v102, (uint64_t)&v100, (uint64_t)&v98, (uint64_t)&v96, (uint64_t)&v94, &__p, (uint64_t)&v92, (uint64_t)&v90, (uint64_t)&v88);
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v56, (uint64_t)a2, 1, (const std::string::value_type *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      v55 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_95:
      operator delete(v55);
    }
  }
LABEL_96:
  v53 = *((_DWORD *)a2 + 18);
  if (a5)
  {
    v48 = (char *)a4 + 64;
    if ((v53 & 0x20) != 0)
      goto LABEL_103;
    v58 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
    std::string::basic_string[abi:ne180100]<0>(&v107, "FieldDescriptorProto.extendee not set for extension field.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v58, (uint64_t)a2, 3, (const std::string::value_type *)&v107);
    goto LABEL_101;
  }
LABEL_99:
  if ((v53 & 0x20) == 0)
    goto LABEL_103;
  v59 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
  std::string::basic_string[abi:ne180100]<0>(&v107, "FieldDescriptorProto.extendee set for non-extension field.");
  AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v59, (uint64_t)a2, 3, (const std::string::value_type *)&v107);
LABEL_101:
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v107.__r_.__value_.__l.__data_);
LABEL_103:
  *(_QWORD *)v48 = a3;
  if ((*((_BYTE *)a2 + 72) & 0x80) != 0)
  {
    v60 = (AddrObjGoogle::protobuf::MessageLite *)*((_QWORD *)a2 + 7);
    if (!v60)
      v60 = *(AddrObjGoogle::protobuf::MessageLite **)(AddrObjGoogle::protobuf::FieldDescriptorProto::default_instance_((AddrObjGoogle::protobuf::FieldDescriptorProto *)v44)
                                                     + 56);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::FieldDescriptor>((uint64_t)this, *((__int128 **)a4 + 1), *((__int128 **)a4 + 1), v60, (uint64_t)a4);
  }
  else
  {
    *((_QWORD *)a4 + 12) = 0;
  }
  sub_188823620((uint64_t)this, *((_QWORD *)a4 + 1), (uint64_t *)a3, *(_QWORD *)a4, (uint64_t)a2, 2, (uint64_t)a4);
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
}

void sub_188824788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  if (*(char *)(v23 - 113) < 0)
    operator delete(*(void **)(v23 - 136));
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::BuildEnumValue(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::EnumValueDescriptorProto *a2, const AddrObjGoogle::protobuf::EnumDescriptor *a3, AddrObjGoogle::protobuf::EnumValueDescriptor *a4)
{
  std::string *String;
  std::string *v9;
  std::string::size_type size;
  uint64_t v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  AddrObjGoogle::protobuf::EnumValueDescriptorProto *v15;
  AddrObjGoogle::protobuf::MessageLite *v16;
  char v17;
  uint64_t v18;
  std::string::size_type v19;
  std::string *v20;
  std::string::size_type v21;
  char v22;
  const std::string::value_type *v23;
  std::string *v24;
  __int128 v25;
  std::string *v26;
  std::string::size_type v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  __int128 v31;
  int v32;
  const std::string::value_type *v33;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  std::string *v37;
  __int128 v38;
  std::string v40;
  std::string v41;
  std::string v42;
  std::string v43;
  std::string v44;
  std::string v45;
  std::string v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a4 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  *((_DWORD *)a4 + 4) = *((_DWORD *)a2 + 8);
  *((_QWORD *)a4 + 3) = a3;
  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a3 + 1));
  v9 = String;
  if (SHIBYTE(String->__r_.__value_.__r.__words[2]) < 0)
    size = String->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(String->__r_.__value_.__r.__words[2]);
  if (*(char *)(*(_QWORD *)a3 + 23) < 0)
    v11 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  else
    v11 = *(unsigned __int8 *)(*(_QWORD *)a3 + 23);
  std::string::resize(String, size - v11, 0);
  v12 = *(char *)(*(_QWORD *)a4 + 23);
  if (v12 >= 0)
    v13 = *(const std::string::value_type **)a4;
  else
    v13 = **(const std::string::value_type ***)a4;
  if (v12 >= 0)
    v14 = *(unsigned __int8 *)(*(_QWORD *)a4 + 23);
  else
    v14 = *(_QWORD *)(*(_QWORD *)a4 + 8);
  std::string::append(v9, v13, v14);
  *((_QWORD *)a4 + 1) = v9;
  AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 2), (const std::string::value_type *)v9, (uint64_t)a2);
  if ((*((_BYTE *)a2 + 40) & 4) != 0)
  {
    v16 = (AddrObjGoogle::protobuf::MessageLite *)*((_QWORD *)a2 + 3);
    if (!v16)
      v16 = *(AddrObjGoogle::protobuf::MessageLite **)(AddrObjGoogle::protobuf::EnumValueDescriptorProto::default_instance_(v15)
                                                     + 24);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::EnumValueDescriptor>((uint64_t)this, *((__int128 **)a4 + 1), *((__int128 **)a4 + 1), v16, (uint64_t)a4);
  }
  else
  {
    *((_QWORD *)a4 + 4) = 0;
  }
  v17 = sub_188823620((uint64_t)this, *((_QWORD *)a4 + 1), *((uint64_t **)a3 + 3), *(_QWORD *)a4, (uint64_t)a2, 4, (uint64_t)a4);
  if (sub_188824D08(*((float **)this + 11), (uint64_t *)a3, *(_QWORD *)a4, 4, (uint64_t)a4)
    && (v17 & 1) == 0)
  {
    memset(&v45, 0, sizeof(v45));
    v18 = *((_QWORD *)a3 + 3);
    if (!v18)
      v18 = *((_QWORD *)this + 10);
    std::string::operator=(&v45, *(const std::string **)(v18 + 8));
    v19 = HIBYTE(v45.__r_.__value_.__r.__words[2]);
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v19 = v45.__r_.__value_.__l.__size_;
    if (v19)
    {
      std::operator+<char>();
      v20 = std::string::append(&v44, "\"");
      v21 = v20->__r_.__value_.__r.__words[0];
      v46.__r_.__value_.__r.__words[0] = v20->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v46.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v20->__r_.__value_.__r.__words[1] + 7);
      v22 = HIBYTE(v20->__r_.__value_.__r.__words[2]);
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v45.__r_.__value_.__l.__data_);
      v45.__r_.__value_.__r.__words[0] = v21;
      v45.__r_.__value_.__l.__size_ = v46.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&v45.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v46.__r_.__value_.__r.__words + 7);
      *((_BYTE *)&v45.__r_.__value_.__s + 23) = v22;
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
    }
    else
    {
      MEMORY[0x18D7640AC](&v45, "the global scope");
    }
    v23 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
    std::operator+<char>();
    v24 = std::string::append(&v40, "\" must be unique within ");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v26 = &v45;
    else
      v26 = (std::string *)v45.__r_.__value_.__r.__words[0];
    if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = HIBYTE(v45.__r_.__value_.__r.__words[2]);
    else
      v27 = v45.__r_.__value_.__l.__size_;
    v28 = std::string::append(&v41, (const std::string::value_type *)v26, v27);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = std::string::append(&v42, ", not just within \"");
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    v32 = *(char *)(*(_QWORD *)a3 + 23);
    if (v32 >= 0)
      v33 = *(const std::string::value_type **)a3;
    else
      v33 = **(const std::string::value_type ***)a3;
    if (v32 >= 0)
      v34 = *(unsigned __int8 *)(*(_QWORD *)a3 + 23);
    else
      v34 = *(_QWORD *)(*(_QWORD *)a3 + 8);
    v35 = std::string::append(&v43, v33, v34);
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    v37 = std::string::append(&v46, "\".");
    v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v38;
    v37->__r_.__value_.__l.__size_ = 0;
    v37->__r_.__value_.__r.__words[2] = 0;
    v37->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v23, (uint64_t)a2, 0, (const std::string::value_type *)&v44);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v46.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v41.__r_.__value_.__l.__data_);
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v40.__r_.__value_.__l.__data_);
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v45.__r_.__value_.__l.__data_);
  }
  return AddrObjGoogle::protobuf::FileDescriptorTables::AddEnumValueByNumber(*((_QWORD *)this + 11), (uint64_t)a4);
}

void sub_188824C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (a42 < 0)
    operator delete(__p);
  if (*(char *)(v42 - 113) < 0)
    operator delete(*(void **)(v42 - 136));
  _Unwind_Resume(exception_object);
}

uint64_t sub_188824D08(float *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v6;
  const char *v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint8x8_t v18;
  unint64_t v19;
  uint64_t ***v20;
  uint64_t **v21;
  unint64_t v22;
  uint64_t result;
  _QWORD *v24;
  float v25;
  float v26;
  _BOOL4 v27;
  unint64_t v28;
  unint64_t v29;
  int8x8_t prime;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint8x8_t v36;
  unint64_t v37;
  uint8x8_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  _QWORD *v45;

  v6 = a5;
  if (*(char *)(a3 + 23) >= 0)
    v10 = (const char *)a3;
  else
    v10 = *(const char **)a3;
  v11 = *v10;
  if (*v10)
  {
    v12 = 0;
    v13 = (unsigned __int8 *)(v10 + 1);
    do
    {
      v12 = 5 * v12 + v11;
      v14 = *v13++;
      v11 = v14;
    }
    while (v14);
  }
  else
  {
    v12 = 0;
  }
  v15 = v12 - (_QWORD)a2;
  v16 = v15 + ((_QWORD)a2 << 16);
  v17 = *((_QWORD *)a1 + 1);
  if (v17)
  {
    v18 = (uint8x8_t)vcnt_s8((int8x8_t)v17);
    v18.i16[0] = vaddlv_u8(v18);
    v19 = v18.u32[0];
    if (v18.u32[0] > 1uLL)
    {
      v5 = v15 + ((_QWORD)a2 << 16);
      if (v16 >= v17)
        v5 = v16 % v17;
    }
    else
    {
      v5 = (v17 - 1) & v16;
    }
    v20 = *(uint64_t ****)(*(_QWORD *)a1 + 8 * v5);
    if (v20)
    {
      v21 = *v20;
      if (*v20)
      {
        while (1)
        {
          v22 = (unint64_t)v21[1];
          if (v22 == v16)
          {
            if (v21[2] == a2)
            {
              result = strcmp((const char *)v21[3], v10);
              if (!(_DWORD)result)
                return result;
            }
          }
          else
          {
            if (v19 > 1)
            {
              if (v22 >= v17)
                v22 %= v17;
            }
            else
            {
              v22 &= v17 - 1;
            }
            if (v22 != v5)
            {
LABEL_27:
              v6 = a5;
              break;
            }
          }
          v21 = (uint64_t **)*v21;
          if (!v21)
            goto LABEL_27;
        }
      }
    }
  }
  v24 = operator new(0x30uLL);
  *v24 = 0;
  v24[1] = v16;
  v24[2] = a2;
  v24[3] = v10;
  v24[4] = a4;
  v24[5] = v6;
  v25 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v26 = a1[8];
  if (!v17 || (float)(v26 * (float)v17) < v25)
  {
    v27 = (v17 & (v17 - 1)) == 0;
    if (v17 < 3)
      v27 = 0;
    v28 = (2 * v17) | !v27;
    v29 = vcvtps_u32_f32(v25 / v26);
    if (v28 <= v29)
      prime = (int8x8_t)v29;
    else
      prime = (int8x8_t)v28;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v17 = *((_QWORD *)a1 + 1);
    }
    if (*(_QWORD *)&prime > v17)
      goto LABEL_40;
    if (*(_QWORD *)&prime < v17)
    {
      v37 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v17 < 3 || (v38 = (uint8x8_t)vcnt_s8((int8x8_t)v17), v38.i16[0] = vaddlv_u8(v38), v38.u32[0] > 1uLL))
      {
        v37 = std::__next_prime(v37);
      }
      else
      {
        v39 = 1 << -(char)__clz(v37 - 1);
        if (v37 >= 2)
          v37 = v39;
      }
      if (*(_QWORD *)&prime <= v37)
        prime = (int8x8_t)v37;
      if (*(_QWORD *)&prime >= v17)
      {
        v17 = *((_QWORD *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_40:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v31 = operator new(8 * *(_QWORD *)&prime);
          v32 = *(_QWORD **)a1;
          *(_QWORD *)a1 = v31;
          if (v32)
            operator delete(v32);
          v33 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v33++) = 0;
          while (*(_QWORD *)&prime != v33);
          v34 = (_QWORD *)*((_QWORD *)a1 + 2);
          if (v34)
          {
            v35 = v34[1];
            v36 = (uint8x8_t)vcnt_s8(prime);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              if (v35 >= *(_QWORD *)&prime)
                v35 %= *(_QWORD *)&prime;
            }
            else
            {
              v35 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = a1 + 4;
            v40 = (_QWORD *)*v34;
            if (*v34)
            {
              do
              {
                v41 = v40[1];
                if (v36.u32[0] > 1uLL)
                {
                  if (v41 >= *(_QWORD *)&prime)
                    v41 %= *(_QWORD *)&prime;
                }
                else
                {
                  v41 &= *(_QWORD *)&prime - 1;
                }
                if (v41 != v35)
                {
                  if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v41))
                  {
                    *(_QWORD *)(*(_QWORD *)a1 + 8 * v41) = v34;
                    goto LABEL_65;
                  }
                  *v34 = *v40;
                  *v40 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v41);
                  **(_QWORD **)(*(_QWORD *)a1 + 8 * v41) = v40;
                  v40 = v34;
                }
                v41 = v35;
LABEL_65:
                v34 = v40;
                v40 = (_QWORD *)*v40;
                v35 = v41;
              }
              while (v40);
            }
          }
          v17 = (unint64_t)prime;
          goto LABEL_69;
        }
        v45 = *(_QWORD **)a1;
        *(_QWORD *)a1 = 0;
        if (v45)
          operator delete(v45);
        v17 = 0;
        *((_QWORD *)a1 + 1) = 0;
      }
    }
LABEL_69:
    if ((v17 & (v17 - 1)) != 0)
    {
      if (v16 >= v17)
        v5 = v16 % v17;
      else
        v5 = v16;
    }
    else
    {
      v5 = (v17 - 1) & v16;
    }
  }
  v42 = *(_QWORD **)a1;
  v43 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v43)
  {
    *v24 = *v43;
LABEL_82:
    *v43 = v24;
    goto LABEL_83;
  }
  *v24 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v24;
  v42[v5] = a1 + 4;
  if (*v24)
  {
    v44 = *(_QWORD *)(*v24 + 8);
    if ((v17 & (v17 - 1)) != 0)
    {
      if (v44 >= v17)
        v44 %= v17;
    }
    else
    {
      v44 &= v17 - 1;
    }
    v43 = (_QWORD *)(*(_QWORD *)a1 + 8 * v44);
    goto LABEL_82;
  }
LABEL_83:
  ++*((_QWORD *)a1 + 3);
  return 1;
}

void sub_188825150(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::BuildMethod(AddrObjGoogle::protobuf::DescriptorBuilder *this, const AddrObjGoogle::protobuf::MethodDescriptorProto *a2, const AddrObjGoogle::protobuf::ServiceDescriptor *a3, const std::string::value_type ***a4)
{
  std::string *String;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  AddrObjGoogle::protobuf::MethodDescriptorProto *v12;
  AddrObjGoogle::protobuf::MessageLite *v13;

  *a4 = (const std::string::value_type **)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a2 + 2));
  a4[2] = (const std::string::value_type **)a3;
  String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(*((_QWORD **)this + 1), *((_QWORD *)a3 + 1));
  std::string::append(String, 1uLL, 46);
  v9 = *((char *)*a4 + 23);
  if (v9 >= 0)
    v10 = (const std::string::value_type *)*a4;
  else
    v10 = **a4;
  if (v9 >= 0)
    v11 = *((unsigned __int8 *)*a4 + 23);
  else
    v11 = (std::string::size_type)(*a4)[1];
  std::string::append(String, v10, v11);
  a4[1] = (const std::string::value_type **)&String->__r_.__value_.__l.__data_;
  AddrObjGoogle::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 2), (const std::string::value_type *)String, (uint64_t)a2);
  a4[3] = 0;
  a4[4] = 0;
  if ((*((_BYTE *)a2 + 52) & 8) != 0)
  {
    v13 = (AddrObjGoogle::protobuf::MessageLite *)*((_QWORD *)a2 + 5);
    if (!v13)
      v13 = *(AddrObjGoogle::protobuf::MessageLite **)(AddrObjGoogle::protobuf::MethodDescriptorProto::default_instance_(v12)
                                                     + 40);
    AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::MethodDescriptor>((uint64_t)this, (__int128 *)a4[1], (__int128 *)a4[1], v13, (uint64_t)a4);
  }
  else
  {
    a4[5] = 0;
  }
  return sub_188823620((uint64_t)this, (uint64_t)a4[1], (uint64_t *)a3, (uint64_t)*a4, (uint64_t)a2, 6, (uint64_t)a4);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkMessage(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::Descriptor *a2, const AddrObjGoogle::protobuf::DescriptorProto *a3)
{
  AddrObjGoogle::protobuf::DescriptorBuilder *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  if (!*((_QWORD *)a2 + 4))
  {
    this = (AddrObjGoogle::protobuf::DescriptorBuilder *)AddrObjGoogle::protobuf::MessageOptions::default_instance(this);
    *((_QWORD *)a2 + 4) = this;
  }
  if (*((int *)a2 + 14) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      this = (AddrObjGoogle::protobuf::DescriptorBuilder *)AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkMessage(v5, (AddrObjGoogle::protobuf::Descriptor *)(*((_QWORD *)a2 + 8) + v6), *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 9) + 8 * v7++));
      v6 += 120;
    }
    while (v7 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 18) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      this = AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkEnum(this, (AddrObjGoogle::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 10) + v8), a3);
      ++v9;
      v8 += 56;
    }
    while (v9 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 11) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkField(v5, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 6) + v10), *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 3) + 8 * v11++));
      v10 += 120;
    }
    while (v11 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkField(v5, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 14) + v12), *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 6) + 8 * v13++));
      v12 += 120;
    }
    while (v13 < *((int *)a2 + 26));
  }
}

void AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkField(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::FieldDescriptor *a2, const AddrObjGoogle::protobuf::FieldDescriptorProto *a3)
{
  unsigned int v6;
  const std::string::value_type *v7;
  void *v8;
  char *v9;
  int8x8_t *v10;
  AddrObjGoogle::protobuf *v11;
  int8x8_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8x8_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  AddrObjGoogle::protobuf *v24;
  unint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  BOOL v28;
  const std::string::value_type *v29;
  uint64_t **v30;
  int v31;
  uint64_t *v32;
  int v33;
  const std::string::value_type *v34;
  std::string *v35;
  __int128 v36;
  int v37;
  const std::string::value_type *v38;
  std::string *v39;
  __int128 v40;
  uint64_t **v41;
  uint64_t *i;
  char *v43;
  const std::string::value_type *v45;
  std::string::size_type v46;
  int v47;
  uint64_t v48;
  int v49;
  std::string::size_type v50;
  int v51;
  uint64_t v52;
  int v53;
  std::string::size_type v54;
  int v55;
  uint64_t v56;
  int v57;
  std::string::size_type v58;
  int v59;
  uint64_t v60;
  int v61;
  const std::string::value_type *v62;
  const std::string::value_type *v63;
  std::string *v64;
  __int128 v65;
  const std::string::value_type *v66;
  uint64_t v67;
  const std::string::value_type *v68;
  std::string *v69;
  __int128 v70;
  uint64_t v71;
  int v72;
  const std::string::value_type *v73;
  std::string::size_type v74;
  std::string *v75;
  __int128 v76;
  std::string *v77;
  __int128 v78;
  const std::string::value_type *v79;
  std::string *v80;
  __int128 v81;
  std::string::size_type *v82;
  std::string __p;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  std::string v96;
  std::string v97;
  std::string v98;
  __int128 v99;
  std::string::size_type v100;
  uint64_t v101;

  v101 = *MEMORY[0x1E0C80C00];
  if (!*((_QWORD *)a2 + 12))
    *((_QWORD *)a2 + 12) = AddrObjGoogle::protobuf::FieldOptions::default_instance(this);
  if ((*((_BYTE *)a3 + 72) & 0x20) != 0)
  {
    v17 = sub_188825F0C((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this, *((_QWORD *)a3 + 5), *((_QWORD *)a2 + 1), 2, 0);
    if (v17 != 1)
    {
      if (!v17)
      {
        AddrObjGoogle::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 3);
        return;
      }
      v34 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      std::operator+<char>();
      v35 = std::string::append(&v98, "\" is not a message type.");
      v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v100 = v35->__r_.__value_.__r.__words[2];
      v99 = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v34, (uint64_t)a3, 3, (const std::string::value_type *)&v99);
      goto LABEL_38;
    }
    *((_QWORD *)a2 + 7) = v18;
    v24 = (AddrObjGoogle::protobuf *)*((unsigned int *)a2 + 10);
    v25 = *(unsigned int *)(v18 + 88);
    if ((int)v25 < 1)
      goto LABEL_31;
    v26 = 0;
    v27 = (_DWORD *)(*(_QWORD *)(v18 + 96) + 4);
    v28 = 1;
    do
    {
      if (*(v27 - 1) <= (int)v24 && *v27 > (int)v24)
        break;
      v28 = ++v26 < v25;
      v27 += 2;
    }
    while (v25 != v26);
    if (!v28)
    {
LABEL_31:
      v29 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      v30 = *(uint64_t ***)(v18 + 8);
      v31 = *((char *)v30 + 23);
      v32 = v30[1];
      if (v31 < 0)
        v30 = (uint64_t **)*v30;
      *(_QWORD *)&v99 = v30;
      v33 = v31;
      if (v31 < 0)
        v33 = (int)v32;
      DWORD2(v99) = v33;
      v98.__r_.__value_.__r.__words[0] = (std::string::size_type)AddrObjGoogle::protobuf::FastInt32ToBuffer(v24, &v98.__r_.__value_.__s.__data_[12], v19);
      LODWORD(v98.__r_.__value_.__r.__words[1]) = strlen(v98.__r_.__value_.__l.__data_);
      v97.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v97.__r_.__value_.__r.__words[1]) = -1;
      v96.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v96.__r_.__value_.__r.__words[1]) = -1;
      v94 = 0;
      v95 = -1;
      v92 = 0;
      v93 = -1;
      v90 = 0;
      v91 = -1;
      v88 = 0;
      v89 = -1;
      v86 = 0;
      v87 = -1;
      v84 = 0;
      v85 = -1;
      AddrObjGoogle::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)&v99, (uint64_t)&v98, (uint64_t)&v97, (uint64_t)&v96, (uint64_t)&v94, (uint64_t)&v92, (uint64_t)&v90, &__p, (uint64_t)&v88, (uint64_t)&v86, (uint64_t)&v84);
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v29, (uint64_t)a3, 1, (const std::string::value_type *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  v6 = *((_DWORD *)a3 + 18);
  if ((v6 & 0x10) != 0)
  {
    v20 = (v6 >> 6) & 1;
    if (*((_DWORD *)a3 + 16) == 14)
      v21 = 1;
    else
      v21 = v20;
    v22 = sub_188825F0C((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this, *((_QWORD *)a3 + 4), *((_QWORD *)a2 + 1), v21, 1);
    if (!v22)
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2);
      return;
    }
    if ((*((_BYTE *)a3 + 72) & 8) != 0)
    {
      v37 = AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a2 + 11)];
      if (v37 == 8)
      {
        if (v22 == 3)
        {
LABEL_95:
          *((_QWORD *)a2 + 10) = v23;
          if (*(_BYTE *)(v23 + 40))
          {
            *((_BYTE *)a2 + 104) = 0;
          }
          else if (*((_BYTE *)a2 + 104))
          {
            if (sub_188826418((uint64_t)this, *((std::string **)a3 + 6), *(_QWORD *)(v23 + 8), 0) == 4
              && *(_QWORD *)(v67 + 24) == *((_QWORD *)a2 + 10))
            {
              *((_QWORD *)a2 + 14) = v67;
              goto LABEL_10;
            }
            v68 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
            std::operator+<char>();
            v69 = std::string::append(&v96, "\" has no value named \"");
            v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
            v97.__r_.__value_.__r.__words[2] = v69->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v97.__r_.__value_.__l.__data_ = v70;
            v69->__r_.__value_.__l.__size_ = 0;
            v69->__r_.__value_.__r.__words[2] = 0;
            v69->__r_.__value_.__r.__words[0] = 0;
            v71 = *((_QWORD *)a3 + 6);
            v72 = *(char *)(v71 + 23);
            if (v72 >= 0)
              v73 = (const std::string::value_type *)*((_QWORD *)a3 + 6);
            else
              v73 = *(const std::string::value_type **)v71;
            if (v72 >= 0)
              v74 = *(unsigned __int8 *)(v71 + 23);
            else
              v74 = *(_QWORD *)(v71 + 8);
            v75 = std::string::append(&v97, v73, v74);
            v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
            v98.__r_.__value_.__r.__words[2] = v75->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v76;
            v75->__r_.__value_.__l.__size_ = 0;
            v75->__r_.__value_.__r.__words[2] = 0;
            v75->__r_.__value_.__r.__words[0] = 0;
            v77 = std::string::append(&v98, "\".");
            v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
            v100 = v77->__r_.__value_.__r.__words[2];
            v99 = v78;
            v77->__r_.__value_.__l.__size_ = 0;
            v77->__r_.__value_.__r.__words[2] = 0;
            v77->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v68, (uint64_t)a3, 4, (const std::string::value_type *)&v99);
            if (SHIBYTE(v100) < 0)
              operator delete((void *)v99);
            if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v98.__r_.__value_.__l.__data_);
            if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v97.__r_.__value_.__l.__data_);
            if ((SHIBYTE(v96.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_10;
            v8 = (void *)v96.__r_.__value_.__r.__words[0];
            goto LABEL_9;
          }
          if (*(int *)(v23 + 44) >= 1)
            *((_QWORD *)a2 + 14) = *(_QWORD *)(v23 + 48);
          goto LABEL_10;
        }
        v79 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v80 = std::string::append(&v98, "\" is not an enum type.");
        v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
        v100 = v80->__r_.__value_.__r.__words[2];
        v99 = v81;
        v80->__r_.__value_.__l.__size_ = 0;
        v80->__r_.__value_.__r.__words[2] = 0;
        v80->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v79, (uint64_t)a3, 2, (const std::string::value_type *)&v99);
LABEL_38:
        if (SHIBYTE(v100) < 0)
          operator delete((void *)v99);
        if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v98.__r_.__value_.__l.__data_);
        return;
      }
      if (v37 != 10)
      {
        v66 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::string::basic_string[abi:ne180100]<0>(&v99, "Field with primitive type has type_name.");
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v66, (uint64_t)a3, 2, (const std::string::value_type *)&v99);
        goto LABEL_7;
      }
      if (v22 != 1)
      {
        v38 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v39 = std::string::append(&v98, "\" is not a message type.");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v100 = v39->__r_.__value_.__r.__words[2];
        v99 = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v38, (uint64_t)a3, 2, (const std::string::value_type *)&v99);
        goto LABEL_38;
      }
    }
    else
    {
      if (v22 != 1)
      {
        if (v22 == 3)
        {
          *((_DWORD *)a2 + 11) = 14;
          goto LABEL_95;
        }
        v63 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v64 = std::string::append(&v98, "\" is not a type.");
        v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
        v100 = v64->__r_.__value_.__r.__words[2];
        v99 = v65;
        v64->__r_.__value_.__l.__size_ = 0;
        v64->__r_.__value_.__r.__words[2] = 0;
        v64->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v63, (uint64_t)a3, 2, (const std::string::value_type *)&v99);
        goto LABEL_38;
      }
      *((_DWORD *)a2 + 11) = 11;
    }
    *((_QWORD *)a2 + 9) = v23;
    if (!*((_BYTE *)a2 + 104))
      goto LABEL_10;
    v62 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&v99, "Messages can't have default values.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v62, (uint64_t)a3, 4, (const std::string::value_type *)&v99);
    goto LABEL_7;
  }
  if ((AddrObjGoogle::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a2 + 11)] | 2) != 0xA)
    goto LABEL_10;
  v7 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  std::string::basic_string[abi:ne180100]<0>(&v99, "Field with message or enum type missing type_name.");
  AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v7, (uint64_t)a3, 2, (const std::string::value_type *)&v99);
LABEL_7:
  if (SHIBYTE(v100) < 0)
  {
    v8 = (void *)v99;
LABEL_9:
    operator delete(v8);
  }
LABEL_10:
  if ((AddrObjGoogle::protobuf::FileDescriptorTables::AddFieldByNumber(*((_QWORD *)this + 11), (uint64_t)a2) & 1) == 0)
  {
    v10 = (int8x8_t *)*((_QWORD *)this + 11);
    v11 = (AddrObjGoogle::protobuf *)*((int *)a2 + 10);
    v12 = v10[16];
    if (v12)
    {
      v13 = *((_QWORD *)a2 + 7);
      v14 = (unint64_t)v11 + 0x10000 * v13 - v13;
      v15 = (uint8x8_t)vcnt_s8(v12);
      v15.i16[0] = vaddlv_u8(v15);
      if (v15.u32[0] > 1uLL)
      {
        v16 = (unint64_t)v11 + 0x10000 * v13 - v13;
        if (v14 >= *(_QWORD *)&v12)
          v16 = v14 % *(_QWORD *)&v12;
      }
      else
      {
        v16 = (*(_QWORD *)&v12 - 1) & v14;
      }
      v41 = *(uint64_t ***)(*(_QWORD *)&v10[15] + 8 * v16);
      if (v41)
      {
        for (i = *v41; i; i = (uint64_t *)*i)
        {
          v43 = (char *)i[1];
          if ((char *)v14 == v43)
          {
            if (i[2] == v13 && *((_DWORD *)i + 6) == (_DWORD)v11)
            {
              v82 = (std::string::size_type *)i[4];
              goto LABEL_65;
            }
          }
          else
          {
            if (v15.u32[0] > 1uLL)
            {
              if ((unint64_t)v43 >= *(_QWORD *)&v12)
                v43 = (char *)((unint64_t)v43 % *(_QWORD *)&v12);
            }
            else
            {
              v43 = (char *)((unint64_t)v43 & (*(_QWORD *)&v12 - 1));
            }
            if (v43 != (char *)v16)
              break;
          }
        }
      }
    }
    v82 = 0;
LABEL_65:
    v45 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    if (*((_BYTE *)a2 + 52))
    {
      *(_QWORD *)&v99 = AddrObjGoogle::protobuf::FastInt32ToBuffer(v11, (_BYTE *)&v99 + 12, v9);
      DWORD2(v99) = strlen((const char *)v99);
      v46 = *(_QWORD *)(*((_QWORD *)a2 + 7) + 8);
      v47 = *(char *)(v46 + 23);
      v48 = *(_QWORD *)(v46 + 8);
      if (v47 < 0)
        v46 = *(_QWORD *)v46;
      v98.__r_.__value_.__r.__words[0] = v46;
      v49 = v47;
      if (v47 < 0)
        v49 = v48;
      LODWORD(v98.__r_.__value_.__r.__words[1]) = v49;
      v50 = v82[1];
      v51 = *(char *)(v50 + 23);
      v52 = *(_QWORD *)(v50 + 8);
      if (v51 < 0)
        v50 = *(_QWORD *)v50;
      v97.__r_.__value_.__r.__words[0] = v50;
      v53 = v51;
      if (v51 < 0)
        v53 = v52;
      LODWORD(v97.__r_.__value_.__r.__words[1]) = v53;
      v96.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v96.__r_.__value_.__r.__words[1]) = -1;
      v94 = 0;
      v95 = -1;
      v92 = 0;
      v93 = -1;
      v90 = 0;
      v91 = -1;
      v88 = 0;
      v89 = -1;
      v86 = 0;
      v87 = -1;
      v84 = 0;
      v85 = -1;
      AddrObjGoogle::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)&v99, (uint64_t)&v98, (uint64_t)&v97, (uint64_t)&v96, (uint64_t)&v94, (uint64_t)&v92, (uint64_t)&v90, &__p, (uint64_t)&v88, (uint64_t)&v86, (uint64_t)&v84);
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v45, (uint64_t)a3, 1, (const std::string::value_type *)&__p);
    }
    else
    {
      *(_QWORD *)&v99 = AddrObjGoogle::protobuf::FastInt32ToBuffer(v11, (_BYTE *)&v99 + 12, v9);
      DWORD2(v99) = strlen((const char *)v99);
      v54 = *(_QWORD *)(*((_QWORD *)a2 + 7) + 8);
      v55 = *(char *)(v54 + 23);
      v56 = *(_QWORD *)(v54 + 8);
      if (v55 < 0)
        v54 = *(_QWORD *)v54;
      v98.__r_.__value_.__r.__words[0] = v54;
      v57 = v55;
      if (v55 < 0)
        v57 = v56;
      LODWORD(v98.__r_.__value_.__r.__words[1]) = v57;
      v58 = *v82;
      v59 = *(char *)(*v82 + 23);
      v60 = *(_QWORD *)(*v82 + 8);
      if (v59 < 0)
        v58 = *(_QWORD *)*v82;
      v97.__r_.__value_.__r.__words[0] = v58;
      v61 = v59;
      if (v59 < 0)
        v61 = v60;
      LODWORD(v97.__r_.__value_.__r.__words[1]) = v61;
      v96.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v96.__r_.__value_.__r.__words[1]) = -1;
      v94 = 0;
      v95 = -1;
      v92 = 0;
      v93 = -1;
      v90 = 0;
      v91 = -1;
      v88 = 0;
      v89 = -1;
      v86 = 0;
      v87 = -1;
      v84 = 0;
      v85 = -1;
      AddrObjGoogle::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)&v99, (uint64_t)&v98, (uint64_t)&v97, (uint64_t)&v96, (uint64_t)&v94, (uint64_t)&v92, (uint64_t)&v90, &__p, (uint64_t)&v88, (uint64_t)&v86, (uint64_t)&v84);
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v45, (uint64_t)a3, 1, (const std::string::value_type *)&__p);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (*((_BYTE *)a2 + 52))
    AddrObjGoogle::protobuf::DescriptorPool::Tables::AddExtension(*((_QWORD *)this + 1), (uint64_t)a2);
  AddrObjGoogle::protobuf::FileDescriptorTables::AddFieldByStylizedNames(*((_QWORD *)this + 11), (uint64_t)a2);
}

void sub_188825D30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v17;

  if (*(char *)(v17 - 89) < 0)
    operator delete(*(void **)(v17 - 112));
  if (*(char *)(v17 - 137) < 0)
    operator delete(*(void **)(v17 - 160));
  if (*(char *)(v17 - 185) < 0)
    operator delete(*(void **)(v17 - 208));
  if (*(char *)(v17 - 233) < 0)
    operator delete(*(void **)(v17 - 256));
  _Unwind_Resume(exception_object);
}

AddrObjGoogle::protobuf::EnumOptions *AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkEnum(AddrObjGoogle::protobuf::EnumOptions *this, AddrObjGoogle::protobuf::EnumDescriptor *a2, const AddrObjGoogle::protobuf::EnumDescriptorProto *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!*((_QWORD *)a2 + 4))
  {
    this = (AddrObjGoogle::protobuf::EnumOptions *)AddrObjGoogle::protobuf::EnumOptions::default_instance(this);
    *((_QWORD *)a2 + 4) = this;
  }
  v4 = *((_DWORD *)a2 + 11);
  if (v4 >= 1)
  {
    v5 = 0;
    v6 = 32;
    do
    {
      v7 = *((_QWORD *)a2 + 6);
      if (!*(_QWORD *)(v7 + v6))
      {
        this = (AddrObjGoogle::protobuf::EnumOptions *)AddrObjGoogle::protobuf::EnumValueOptions::default_instance(this);
        *(_QWORD *)(v7 + v6) = this;
        v4 = *((_DWORD *)a2 + 11);
      }
      ++v5;
      v6 += 40;
    }
    while (v5 < v4);
  }
  return this;
}

void AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkService(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::ServiceDescriptor *a2, const AddrObjGoogle::protobuf::ServiceDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*((_QWORD *)a2 + 3))
    *((_QWORD *)a2 + 3) = AddrObjGoogle::protobuf::ServiceOptions::default_instance(this);
  if (*((int *)a2 + 8) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkMethod(this, (AddrObjGoogle::protobuf::MethodDescriptor *)(*((_QWORD *)a2 + 5) + v6), *(const AddrObjGoogle::protobuf::MethodDescriptorProto **)(*((_QWORD *)a3 + 3) + 8 * v7++));
      v6 += 48;
    }
    while (v7 < *((int *)a2 + 8));
  }
}

unint64_t sub_188825F0C(AddrObjGoogle::protobuf::DescriptorPool::Tables **a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v8;
  _BYTE *v9;
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v10;
  std::string *String;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  std::string::size_type v15;
  std::string::size_type v16;
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v17;
  std::string *v18;
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v19;
  std::string *v20;
  _OWORD *Bytes;
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v22;
  size_t size;
  std::string *p_p;
  std::string *v25;
  std::string *v26;
  AddrObjGoogle::protobuf::FileDescriptorTables *v27;
  char *v28;
  _BYTE *v29;
  _OWORD *v30;
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v31;
  std::string *v32;
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v33;
  size_t v34;
  std::string *v35;
  std::string *v36;
  char *v37;
  _BYTE *v38;
  _QWORD *v39;
  uint64_t v40;
  std::string __p;
  char v43;

  v8 = sub_188826418((uint64_t)a1, (std::string *)a2, a3, a5);
  if ((_DWORD)v8)
    goto LABEL_61;
  if (*((_BYTE *)*a1 + 41))
  {
    if ((AddrObjGoogle::protobuf::DescriptorBuilder::ValidateQualifiedName(v8, (uint64_t *)a2) & 1) == 0)
    {
      sub_188829F58();
      v13 = qword_1EDF508B8 & 0xFFFFFFFF00000000;
      v14 = qword_1EDF508B8;
LABEL_60:
      v8 = v14 | v13;
LABEL_61:
      v12 = v8;
      return v8 & 0xFFFFFFFF00000000 | v12;
    }
    if (*(char *)(a2 + 23) >= 0)
      v9 = (_BYTE *)a2;
    else
      v9 = *(_BYTE **)a2;
    v10 = a1[1];
    if (*v9 == 46)
    {
      std::string::basic_string(&__p, (const std::string *)a2, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v43);
      String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v10, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      String = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(a1[1], a2);
    }
    v15 = std::string::rfind(String, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v15 == -1)
    {
      v18 = (std::string *)AddrObjGoogle::protobuf::internal::kEmptyString((AddrObjGoogle::protobuf::internal *)0xFFFFFFFFFFFFFFFFLL);
      v20 = String;
    }
    else
    {
      v16 = v15;
      v17 = a1[1];
      std::string::basic_string(&__p, String, 0, v15, (std::allocator<char> *)&v43);
      v18 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v17, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v19 = a1[1];
      std::string::basic_string(&__p, String, v16 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v43);
      v20 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v19, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    Bytes = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(a1[1], 160);
    *Bytes = 0u;
    Bytes[1] = 0u;
    Bytes[2] = 0u;
    Bytes[3] = 0u;
    Bytes[4] = 0u;
    Bytes[5] = 0u;
    Bytes[6] = 0u;
    Bytes[7] = 0u;
    Bytes[8] = 0u;
    Bytes[9] = 0u;
    *((_QWORD *)Bytes + 19) = AddrObjGoogle::protobuf::SourceCodeInfo::default_instance((AddrObjGoogle::protobuf::SourceCodeInfo *)Bytes);
    v22 = a1[1];
    if ((String->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(String->__r_.__value_.__r.__words[2]);
    else
      size = String->__r_.__value_.__l.__size_;
    p_p = &__p;
    std::string::basic_string[abi:ne180100]((uint64_t)&__p, size + 18);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if (size)
    {
      if ((String->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v25 = String;
      else
        v25 = (std::string *)String->__r_.__value_.__r.__words[0];
      memmove(p_p, v25, size);
    }
    strcpy((char *)p_p + size, ".placeholder.proto");
    v26 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v22, (uint64_t)&__p);
    *(_QWORD *)Bytes = v26;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *((_QWORD *)Bytes + 1) = v18;
    *((_QWORD *)Bytes + 2) = *a1;
    v27 = (AddrObjGoogle::protobuf::FileDescriptorTables *)AddrObjGoogle::protobuf::FileOptions::default_instance((AddrObjGoogle::protobuf::FileOptions *)v26);
    *((_QWORD *)Bytes + 17) = v27;
    AddrObjGoogle::protobuf::FileDescriptorTables::kEmpty(v27);
    *((_QWORD *)Bytes + 18) = &xmmword_1EDF507D0;
    if (a4 != 1)
    {
      v14 = 1;
      *((_DWORD *)Bytes + 18) = 1;
      v37 = (char *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(a1[1], 120);
      *((_QWORD *)Bytes + 10) = v37;
      *(_OWORD *)(v37 + 24) = 0u;
      *(_OWORD *)(v37 + 40) = 0u;
      *(_OWORD *)(v37 + 56) = 0u;
      *(_OWORD *)(v37 + 72) = 0u;
      *(_OWORD *)(v37 + 88) = 0u;
      *(_OWORD *)(v37 + 104) = 0u;
      *(_QWORD *)v37 = v20;
      *((_QWORD *)v37 + 1) = String;
      *((_QWORD *)v37 + 2) = Bytes;
      *((_QWORD *)v37 + 4) = AddrObjGoogle::protobuf::MessageOptions::default_instance((AddrObjGoogle::protobuf::MessageOptions *)v37);
      v37[40] = 1;
      if (*(char *)(a2 + 23) >= 0)
        v38 = (_BYTE *)a2;
      else
        v38 = *(_BYTE **)a2;
      v37[41] = *v38 != 46;
      if (a4 == 2)
      {
        *((_DWORD *)v37 + 22) = 1;
        v39 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(a1[1], 8);
        v13 = 0;
        *((_QWORD *)v37 + 12) = v39;
        *v39 = 0x2000000000000001;
      }
      else
      {
        v13 = 0;
      }
      goto LABEL_60;
    }
    *((_DWORD *)Bytes + 22) = 1;
    v28 = (char *)AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(a1[1], 56);
    *((_QWORD *)Bytes + 12) = v28;
    *(_OWORD *)(v28 + 24) = 0u;
    *(_OWORD *)(v28 + 40) = 0u;
    *(_QWORD *)v28 = v20;
    *((_QWORD *)v28 + 1) = String;
    *((_QWORD *)v28 + 2) = Bytes;
    *((_QWORD *)v28 + 4) = AddrObjGoogle::protobuf::EnumOptions::default_instance((AddrObjGoogle::protobuf::EnumOptions *)v28);
    v28[40] = 1;
    if (*(char *)(a2 + 23) >= 0)
      v29 = (_BYTE *)a2;
    else
      v29 = *(_BYTE **)a2;
    v28[41] = *v29 != 46;
    *((_DWORD *)v28 + 11) = 1;
    v30 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateBytes(a1[1], 40);
    *((_QWORD *)v28 + 6) = v30;
    *v30 = 0u;
    v30[1] = 0u;
    *((_QWORD *)v30 + 4) = 0;
    v31 = a1[1];
    std::string::basic_string[abi:ne180100]<0>(&__p, "PLACEHOLDER_VALUE");
    v32 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v31, (uint64_t)&__p);
    *(_QWORD *)v30 = v32;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v18->__r_.__value_.__r.__words[2]) < 0)
    {
      if (v18->__r_.__value_.__l.__size_)
        goto LABEL_39;
    }
    else if (*((_BYTE *)&v18->__r_.__value_.__s + 23))
    {
LABEL_39:
      v33 = a1[1];
      if ((v18->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v34 = HIBYTE(v18->__r_.__value_.__r.__words[2]);
      else
        v34 = v18->__r_.__value_.__l.__size_;
      v35 = &__p;
      std::string::basic_string[abi:ne180100]((uint64_t)&__p, v34 + 18);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v35 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (v34)
      {
        if ((v18->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v36 = v18;
        else
          v36 = (std::string *)v18->__r_.__value_.__r.__words[0];
        memmove(v35, v36, v34);
      }
      strcpy((char *)v35 + v34, ".PLACEHOLDER_VALUE");
      v32 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateString(v33, (uint64_t)&__p);
      *((_QWORD *)v30 + 1) = v32;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_59;
    }
    *((_QWORD *)v30 + 1) = *(_QWORD *)v30;
LABEL_59:
    *((_DWORD *)v30 + 4) = 0;
    *((_QWORD *)v30 + 3) = v28;
    v40 = AddrObjGoogle::protobuf::EnumValueOptions::default_instance((AddrObjGoogle::protobuf::EnumValueOptions *)v32);
    v13 = 0;
    *((_QWORD *)v30 + 4) = v40;
    v14 = 3;
    goto LABEL_60;
  }
  v12 = 0;
  return v8 & 0xFFFFFFFF00000000 | v12;
}

void sub_1888263E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_188826418(uint64_t a1, std::string *__str, uint64_t a3, int a4)
{
  std::string *v8;
  uint64_t v9;
  std::string::size_type v10;
  std::string::size_type v11;
  std::string::size_type size;
  std::string *v13;
  std::string::size_type v14;
  uint64_t v15;
  std::string::size_type v16;
  std::string::size_type v17;
  uint64_t v18;
  std::string __p;
  std::string v21;
  char v22;

  *(_QWORD *)(a1 + 120) = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__str->__r_.__value_.__l.__size_)
      goto LABEL_8;
    v8 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  else
  {
    v8 = __str;
    if (!*((_BYTE *)&__str->__r_.__value_.__s + 23))
      goto LABEL_8;
  }
  if (v8->__r_.__value_.__s.__data_[0] == 46)
  {
    std::string::basic_string(&v21, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
    v9 = sub_18882A5B0(a1, &v21);
    goto LABEL_42;
  }
LABEL_8:
  v10 = std::string::find(__str, 46, 0);
  memset(&v21, 0, sizeof(v21));
  if (v10 == -1)
  {
    std::string::operator=(&v21, __str);
  }
  else
  {
    std::string::basic_string(&__p, __str, 0, v10, (std::allocator<char> *)&v22);
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
    v21 = __p;
  }
  if (*(char *)(a3 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  else
    __p = *(std::string *)a3;
  while (1)
  {
    v11 = std::string::rfind(&__p, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v11 == -1)
      break;
    std::string::erase(&__p, v11, 0xFFFFFFFFFFFFFFFFLL);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(&__p, 1uLL, 46);
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v13 = &v21;
    else
      v13 = (std::string *)v21.__r_.__value_.__r.__words[0];
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
    else
      v14 = v21.__r_.__value_.__l.__size_;
    std::string::append(&__p, (const std::string::value_type *)v13, v14);
    v15 = sub_18882A5B0(a1, &__p);
    v9 = v15;
    if ((_DWORD)v15)
    {
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
      else
        v16 = v21.__r_.__value_.__l.__size_;
      v17 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
      if ((v17 & 0x80u) != 0)
        v17 = __str->__r_.__value_.__l.__size_;
      if (v17 <= v16)
      {
        if (a4 != 1 || (v15 & 0xFFFFFFFD) == 1)
          goto LABEL_40;
      }
      else if ((((_DWORD)v15 - 1) & 0xFFFFFFF9) == 0)
      {
        std::string::append(&__p, __str, v16, v17 - v16);
        v18 = sub_18882A5B0(a1, &__p);
        goto LABEL_39;
      }
    }
    std::string::erase(&__p, size, 0xFFFFFFFFFFFFFFFFLL);
  }
  v18 = sub_18882A5B0(a1, __str);
LABEL_39:
  v9 = v18;
LABEL_40:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_42:
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
  return v9;
}

void sub_188826698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::CrossLinkMethod(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::MethodDescriptor *a2, const AddrObjGoogle::protobuf::MethodDescriptorProto *a3)
{
  int v6;
  uint64_t v7;
  const std::string::value_type *v8;
  std::string *v9;
  __int128 v10;
  int v11;
  uint64_t v12;
  const std::string::value_type *v13;
  std::string *v14;
  __int128 v15;
  std::string v16;
  void *__p[2];
  std::string::size_type v18;

  if (!*((_QWORD *)a2 + 5))
    *((_QWORD *)a2 + 5) = AddrObjGoogle::protobuf::MethodOptions::default_instance(this);
  v6 = sub_188825F0C((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this, *((_QWORD *)a3 + 3), *((_QWORD *)a2 + 1), 0, 0);
  if (v6 == 1)
  {
    *((_QWORD *)a2 + 3) = v7;
  }
  else if (v6)
  {
    v8 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::operator+<char>();
    v9 = std::string::append(&v16, "\" is not a message type.");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v18 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v8, (uint64_t)a3, 5, (const std::string::value_type *)__p);
    if (SHIBYTE(v18) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else
  {
    AddrObjGoogle::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 5);
  }
  v11 = sub_188825F0C((AddrObjGoogle::protobuf::DescriptorPool::Tables **)this, *((_QWORD *)a3 + 4), *((_QWORD *)a2 + 1), 0, 0);
  if (v11 == 1)
  {
    *((_QWORD *)a2 + 4) = v12;
  }
  else if (v11)
  {
    v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::operator+<char>();
    v14 = std::string::append(&v16, "\" is not a message type.");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v18 = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v13, (uint64_t)a3, 6, (const std::string::value_type *)__p);
    if (SHIBYTE(v18) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else
  {
    AddrObjGoogle::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 6);
  }
}

void sub_1888268AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMessageOptions(AddrObjGoogle::protobuf::DescriptorPool::Tables **this, AddrObjGoogle::protobuf::Descriptor *a2, const AddrObjGoogle::protobuf::DescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  const std::string::value_type *v18;
  uint64_t v19;
  std::string __p;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  const char *v39;
  int v40;
  _BYTE v41[36];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  if (*((int *)a2 + 11) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 6) + v6), *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 3) + 8 * v7++));
      v6 += 120;
    }
    while (v7 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMessageOptions((AddrObjGoogle::protobuf::DescriptorBuilder *)this, (AddrObjGoogle::protobuf::Descriptor *)(*((_QWORD *)a2 + 8) + v8), *(const AddrObjGoogle::protobuf::DescriptorProto **)(*((_QWORD *)a3 + 9) + 8 * v9++));
      v8 += 120;
    }
    while (v9 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 18) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateEnumOptions((AddrObjGoogle::protobuf::DescriptorBuilder *)this, (AddrObjGoogle::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 10) + v10), *(const AddrObjGoogle::protobuf::EnumDescriptorProto **)(*((_QWORD *)a3 + 12) + 8 * v11++));
      v10 += 56;
    }
    while (v11 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v12 = 0;
    v13 = 0;
    do
    {
      AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (AddrObjGoogle::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 14) + v12), *(const AddrObjGoogle::protobuf::FieldDescriptorProto **)(*((_QWORD *)a3 + 6) + 8 * v13++));
      v12 += 120;
    }
    while (v13 < *((int *)a2 + 26));
  }
  if (*(_BYTE *)(*((_QWORD *)a2 + 4) + 64))
    v14 = 0x7FFFFFFFLL;
  else
    v14 = 0x1FFFFFFFLL;
  v15 = *((_DWORD *)a2 + 22);
  if (v15 >= 1)
  {
    v16 = 0;
    v17 = 4;
    do
    {
      if ((uint64_t)(v14 + 1) < *(int *)(*((_QWORD *)a2 + 12) + v17))
      {
        v18 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        v19 = *(_QWORD *)(*((_QWORD *)a3 + 15) + 8 * v16);
        v39 = AddrObjGoogle::protobuf::FastInt64ToBuffer(v14, v41, (char *)a3);
        v40 = strlen(v39);
        v37 = 0;
        v38 = -1;
        v35 = 0;
        v36 = -1;
        v33 = 0;
        v34 = -1;
        v31 = 0;
        v32 = -1;
        v29 = 0;
        v30 = -1;
        v27 = 0;
        v28 = -1;
        v25 = 0;
        v26 = -1;
        v23 = 0;
        v24 = -1;
        v21 = 0;
        v22 = -1;
        AddrObjGoogle::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v39, (uint64_t)&v37, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, (uint64_t)&v27, &__p, (uint64_t)&v25, (uint64_t)&v23, (uint64_t)&v21);
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v18, v19, 1, (const std::string::value_type *)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v15 = *((_DWORD *)a2 + 22);
      }
      ++v16;
      v17 += 8;
    }
    while (v16 < v15);
  }
}

void sub_188826B9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateEnumOptions(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::EnumDescriptor *a2, const AddrObjGoogle::protobuf::EnumDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  int v17;
  uint64_t *v18;
  const std::string *v19;
  uint64_t **v20;
  std::string *v21;
  __int128 v22;
  uint64_t **v23;
  uint64_t **v24;
  const std::string::value_type *v25;
  uint64_t *v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  std::string *v34;
  char *v35;
  std::string __p[2];
  int v37;
  std::string v38;
  std::string v39;
  void *v40[2];
  std::string::size_type v41;
  uint64_t *v42;
  _QWORD v43[2];
  int *v44;

  v6 = *((_QWORD *)a2 + 4);
  if ((*(_BYTE *)(v6 + 72) & 1) == 0 || !*(_BYTE *)(v6 + 64))
  {
    v43[0] = 0;
    v43[1] = 0;
    v42 = v43;
    if (*((int *)a2 + 11) < 1)
    {
      v35 = 0;
    }
    else
    {
      v7 = 0;
      do
      {
        v8 = *((_QWORD *)a2 + 6);
        v9 = v8 + 40 * v7;
        v12 = *(_DWORD *)(v9 + 16);
        v11 = (int *)(v9 + 16);
        v10 = v12;
        v13 = v43[0];
        if (!v43[0])
          goto LABEL_14;
        v14 = v43;
        do
        {
          v15 = (uint64_t *)v13;
          v16 = v14;
          v17 = *(_DWORD *)(v13 + 32);
          v18 = (uint64_t *)(v13 + 8);
          if (v17 >= v10)
          {
            v18 = v15;
            v14 = v15;
          }
          v13 = *v18;
        }
        while (v13);
        if (v14 == v43)
          goto LABEL_14;
        if (v17 < v10)
          v15 = v16;
        if (v10 >= *((_DWORD *)v15 + 8))
        {
          std::operator+<char>();
          v21 = std::string::append(&v38, "\" uses the same enum value as \"");
          v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
          v39.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v22;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          v21->__r_.__value_.__r.__words[0] = 0;
          v37 = *v11;
          v44 = &v37;
          v23 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v42, &v37, (uint64_t)&unk_189C5F219, &v44);
          v26 = v23[5];
          v24 = v23 + 5;
          v25 = (const std::string::value_type *)v26;
          v27 = *((char *)v24 + 23);
          if (v27 >= 0)
            v28 = (const std::string::value_type *)v24;
          else
            v28 = v25;
          if (v27 >= 0)
            v29 = *((unsigned __int8 *)v24 + 23);
          else
            v29 = (std::string::size_type)v24[1];
          v30 = std::string::append(&v39, v28, v29);
          v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          __p[0].__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          v32 = std::string::append(__p, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
          v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
          v41 = v32->__r_.__value_.__r.__words[2];
          *(_OWORD *)v40 = v33;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          v32->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p[0].__r_.__value_.__l.__data_);
          if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v39.__r_.__value_.__l.__data_);
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v38.__r_.__value_.__l.__data_);
          if (*(_BYTE *)(*((_QWORD *)a2 + 4) + 64))
          {
            AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4159);
            v34 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, (const std::string::value_type *)v40);
            AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v39, (AddrObjGoogle::protobuf::internal::LogMessage *)v34);
            AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
          }
          else
          {
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 1, (const std::string::value_type *)v40);
          }
          if (SHIBYTE(v41) < 0)
            operator delete(v40[0]);
        }
        else
        {
LABEL_14:
          v19 = *(const std::string **)(v8 + 40 * v7 + 8);
          LODWORD(v40[0]) = v10;
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v40;
          v20 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v42, (int *)v40, (uint64_t)&unk_189C5F219, __p);
          std::string::operator=((std::string *)(v20 + 5), v19);
        }
        ++v7;
      }
      while (v7 < *((int *)a2 + 11));
      v35 = (char *)v43[0];
    }
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&v42, v35);
  }
}

void sub_188826E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  uint64_t v37;

  if (a37 < 0)
    operator delete(__p);
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(v37 - 128, *(char **)(v37 - 120));
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateServiceOptions(AddrObjGoogle::protobuf::DescriptorBuilder *this, AddrObjGoogle::protobuf::ServiceDescriptor *a2, const AddrObjGoogle::protobuf::ServiceDescriptorProto *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  const std::string::value_type *v9;
  void *__p[2];
  char v11;

  v3 = *((_QWORD *)a2 + 2);
  if (v3)
  {
    v7 = *(_QWORD *)(v3 + 136);
    if (v7 != AddrObjGoogle::protobuf::FileOptions::default_instance(this)
      && *(_DWORD *)(*(_QWORD *)(v3 + 136) + 56) == 3)
    {
      v8 = *(_QWORD *)(*((_QWORD *)a2 + 2) + 136);
      if (*(_BYTE *)(v8 + 62) || *(_BYTE *)(v8 + 63))
      {
        v9 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::string::basic_string[abi:ne180100]<0>(__p, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.");
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v9, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        if (v11 < 0)
          operator delete(__p[0]);
      }
    }
  }
}

void sub_188826FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateFieldOptions(AddrObjGoogle::protobuf::DescriptorPool::Tables **this, AddrObjGoogle::protobuf::FieldDescriptor *a2, const AddrObjGoogle::protobuf::FieldDescriptorProto *a3)
{
  AddrObjGoogle::protobuf::DescriptorBuilder *v5;
  _BYTE *v6;
  const std::string::value_type *v7;
  const std::string::value_type *v8;
  uint64_t v9;
  AddrObjGoogle::protobuf::DescriptorBuilder *v10;
  const std::string::value_type *v11;
  const std::string::value_type *v12;
  uint64_t v13;
  AddrObjGoogle::protobuf::FileOptions *v14;
  AddrObjGoogle::protobuf::FileOptions *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const std::string::value_type *v19;
  void *__p[2];
  char v21;

  v5 = (AddrObjGoogle::protobuf::DescriptorBuilder *)this;
  v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  if ((v6[84] & 0x10) != 0)
  {
    AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMapKey(this, a2, a3);
    v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  }
  if (v6[45] && *((_DWORD *)a2 + 11) != 11)
  {
    v7 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(__p, "[lazy = true] can only be specified for submessage fields.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v7, (uint64_t)a3, 2, (const std::string::value_type *)__p);
    if (v21 < 0)
      operator delete(__p[0]);
    v6 = (_BYTE *)*((_QWORD *)a2 + 12);
  }
  if (v6[44] && (*((_DWORD *)a2 + 12) != 3 || (*((_DWORD *)a2 + 11) - 13) >= 0xFFFFFFFC))
  {
    v8 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(__p, "[packed = true] can only be specified for repeated primitive fields.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v8, (uint64_t)a3, 2, (const std::string::value_type *)__p);
    if (v21 < 0)
      operator delete(__p[0]);
  }
  v9 = *((_QWORD *)a2 + 7);
  if (v9)
  {
    v10 = *(AddrObjGoogle::protobuf::DescriptorBuilder **)(v9 + 32);
    this = (AddrObjGoogle::protobuf::DescriptorPool::Tables **)AddrObjGoogle::protobuf::MessageOptions::default_instance((AddrObjGoogle::protobuf::MessageOptions *)this);
    if (v10 != (AddrObjGoogle::protobuf::DescriptorBuilder *)this)
    {
      if (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)a2 + 7) + 32) + 64))
      {
        if (*((_BYTE *)a2 + 52))
        {
          if (*((_DWORD *)a2 + 12) == 1 && *((_DWORD *)a2 + 11) == 11)
            goto LABEL_23;
          v11 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "Extensions of MessageSets must be optional messages.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v11, (uint64_t)a3, 2, (const std::string::value_type *)__p);
        }
        else
        {
          v12 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "MessageSets cannot have fields, only extensions.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v12, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        }
        if (v21 < 0)
          operator delete(__p[0]);
      }
    }
  }
LABEL_23:
  v13 = *((_QWORD *)a2 + 4);
  if (v13)
  {
    v14 = *(AddrObjGoogle::protobuf::FileOptions **)(v13 + 136);
    v15 = (AddrObjGoogle::protobuf::FileOptions *)AddrObjGoogle::protobuf::FileOptions::default_instance((AddrObjGoogle::protobuf::FileOptions *)this);
    if (v14 != v15 && *(_DWORD *)(*(_QWORD *)(v13 + 136) + 56) == 3)
    {
      v16 = *((_QWORD *)a2 + 7);
      if (v16)
      {
        v17 = *(_QWORD *)(v16 + 16);
        if (!v17
          || (v18 = *(_QWORD *)(v17 + 136), v18 == AddrObjGoogle::protobuf::FileOptions::default_instance(v15))
          || *(_DWORD *)(*(_QWORD *)(v17 + 136) + 56) != 3)
        {
          v19 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v19, (uint64_t)a3, 3, (const std::string::value_type *)__p);
          if (v21 < 0)
            operator delete(__p[0]);
        }
      }
    }
  }
}

void sub_188827234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::ValidateMapKey(AddrObjGoogle::protobuf::DescriptorPool::Tables **this, AddrObjGoogle::protobuf::FieldDescriptor *a2, const AddrObjGoogle::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  const void **v8;
  size_t v9;
  std::string *v10;
  const void *v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  std::string *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  const std::string::value_type *v19;
  const std::string::value_type *v20;
  const std::string::value_type *v21;
  void *v22;
  const std::string::value_type *v23;
  std::string *v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  const std::string::value_type *v34;
  const std::string::value_type *v35;
  std::string v36;
  std::string v37;
  std::string v38;
  std::string __p;

  if (*((_DWORD *)a2 + 12) != 3)
  {
    v19 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "map type is only allowed for repeated fields.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    goto LABEL_28;
  }
  if ((*((_DWORD *)a2 + 11) & 0xFFFFFFFE) != 0xA)
  {
    v20 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "map type is only allowed for fields with a message type.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    goto LABEL_28;
  }
  v6 = *((_QWORD *)a2 + 9);
  if (!v6)
  {
    v21 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "Could not find field type.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v21, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    goto LABEL_28;
  }
  v7 = *(_QWORD *)(*((_QWORD *)a2 + 12) + 48);
  v8 = *(const void ***)(v6 + 8);
  if (*((char *)v8 + 23) >= 0)
    v9 = *((unsigned __int8 *)v8 + 23);
  else
    v9 = (size_t)v8[1];
  v10 = &v38;
  std::string::basic_string[abi:ne180100]((uint64_t)&v38, v9 + 1);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v10 = (std::string *)v38.__r_.__value_.__r.__words[0];
  if (v9)
  {
    if (*((char *)v8 + 23) >= 0)
      v11 = v8;
    else
      v11 = *v8;
    memmove(v10, v11, v9);
  }
  *(_WORD *)((char *)&v10->__r_.__value_.__l.__data_ + v9) = 46;
  v12 = *(char *)(v7 + 23);
  if (v12 >= 0)
    v13 = (const std::string::value_type *)v7;
  else
    v13 = *(const std::string::value_type **)v7;
  if (v12 >= 0)
    v14 = *(unsigned __int8 *)(v7 + 23);
  else
    v14 = *(_QWORD *)(v7 + 8);
  v15 = std::string::append(&v38, v13, v14);
  __p = *v15;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  v16 = sub_188825F0C(this, v7, (uint64_t)&__p, 0, 0);
  v18 = v17;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v38.__r_.__value_.__l.__data_);
    if (!v16)
      goto LABEL_34;
    goto LABEL_33;
  }
  if (v16)
  {
LABEL_33:
    if (*(_BYTE *)(v18 + 52))
      goto LABEL_34;
    if (*(_DWORD *)(v18 + 48) == 3)
    {
      v34 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      std::string::basic_string[abi:ne180100]<0>(&__p, "map_key must not name a repeated field.");
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v34, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    }
    else
    {
      if ((*(_DWORD *)(v18 + 44) & 0xFFFFFFFE) != 0xA)
      {
        *((_QWORD *)a2 + 11) = v18;
        return;
      }
      v35 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      std::string::basic_string[abi:ne180100]<0>(&__p, "map key must name a scalar or string field.");
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v35, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
    }
LABEL_28:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    v22 = (void *)__p.__r_.__value_.__r.__words[0];
    goto LABEL_30;
  }
LABEL_34:
  v23 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  std::operator+<char>();
  v24 = std::string::append(&v36, "\" in type \"");
  v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  v26 = *(_QWORD *)(v6 + 8);
  v27 = *(char *)(v26 + 23);
  if (v27 >= 0)
    v28 = *(const std::string::value_type **)(v6 + 8);
  else
    v28 = *(const std::string::value_type **)v26;
  if (v27 >= 0)
    v29 = *(unsigned __int8 *)(v26 + 23);
  else
    v29 = *(_QWORD *)(v26 + 8);
  v30 = std::string::append(&v37, v28, v29);
  v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  v32 = std::string::append(&v38, "\".");
  v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  AddrObjGoogle::protobuf::DescriptorBuilder::AddError((uint64_t)this, v23, (uint64_t)a3, 2, (const std::string::value_type *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v38.__r_.__value_.__l.__data_);
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v37.__r_.__value_.__l.__data_);
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
  {
    v22 = (void *)v36.__r_.__value_.__r.__words[0];
LABEL_30:
    operator delete(v22);
  }
}

void sub_1888275DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, AddrObjGoogle::protobuf::DescriptorBuilder *a2)
{
  std::string *v3;
  char v5;
  std::string v6[2];

  *(_QWORD *)this = a2;
  AddrObjGoogle::protobuf::DynamicMessageFactory::DynamicMessageFactory((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 24));
  if (!*(_QWORD *)this)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4252);
    v3 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: builder_: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (AddrObjGoogle::protobuf::internal::LogMessage *)v3);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  return this;
}

void sub_18882770C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  AddrObjGoogle::protobuf::DynamicMessageFactory *v3;
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  AddrObjGoogle::protobuf::DynamicMessageFactory::~DynamicMessageFactory(v3);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, AddrObjGoogle::protobuf::Message *a2)
{
  uint64_t v3;
  uint64_t *v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  pthread_mutex_t ****v12;
  uint64_t v13;
  const std::string::value_type **v14;
  const std::string::value_type **v15;
  std::string *v16;
  std::string *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  std::string::size_type size;
  std::string *v24;
  __int128 v25;
  const std::string::value_type *v26;
  std::string::size_type v27;
  AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *FieldByName;
  uint64_t v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t **v48;
  void ***v49;
  uint64_t *v50;
  AddrObjGoogle::protobuf::UnknownFieldSet *v51;
  uint64_t v52;
  uint64_t *v53;
  int v54;
  _QWORD *v55;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v56;
  std::string *v57;
  std::string *v58;
  std::string *v59;
  std::string *v60;
  std::string *v61;
  void ***v62;
  AddrObjGoogle::protobuf::UnknownFieldSet *v63;
  uint64_t v64;
  void ***v65;
  uint64_t v66;
  std::string *v67;
  __int128 v68;
  std::string *v69;
  __int128 v70;
  std::string *v71;
  __int128 v72;
  void *v73;
  std::string *v74;
  __int128 v75;
  int v76;
  const std::string::value_type *v77;
  std::string::size_type v78;
  std::string *v79;
  __int128 v80;
  std::string *v81;
  __int128 v82;
  std::string *v83;
  std::string *v84;
  std::string *v85;
  char v87;
  std::string v88;
  char v89;
  AddrObjGoogle::protobuf::UnknownFieldSet *v90;
  std::string v91;
  std::string v92;
  std::string v93;
  void *__p;
  uint64_t *v95;
  uint64_t *v96;
  __int128 v97;
  int64_t v98;

  v3 = *((_QWORD *)this + 2);
  if (!*(_DWORD *)(v3 + 24))
  {
    std::string::basic_string[abi:ne180100]<0>(&v97, "Option must have a name.");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 7, (const std::string::value_type *)&v97);
LABEL_84:
    if (SHIBYTE(v98) < 0)
      operator delete((void *)v97);
    return 0;
  }
  v5 = *(uint64_t **)(**(_QWORD **)(v3 + 16) + 16);
  v6 = *((char *)v5 + 23);
  if (v6 < 0)
  {
    if (v5[1] != 20)
      goto LABEL_15;
    v5 = (uint64_t *)*v5;
  }
  else if (v6 != 20)
  {
    goto LABEL_15;
  }
  v7 = (uint64_t *)*v5;
  v8 = v5[1];
  v9 = *((_DWORD *)v5 + 4);
  if (v7 == (uint64_t *)0x707265746E696E75 && v8 == 0x706F5F6465746572 && v9 == 1852795252)
  {
    std::string::basic_string[abi:ne180100]<0>(&v97, "Option must not use reserved name \"uninterpreted_option\".");
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 7, (const std::string::value_type *)&v97);
    goto LABEL_84;
  }
LABEL_15:
  v12 = *(pthread_mutex_t *****)this;
  v13 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  if (sub_18882A72C(v12, *v12, *(_QWORD *)(v13 + 8)) == 1)
  {
    v15 = v14;
    if (!v14)
      goto LABEL_19;
  }
  else
  {
    v15 = (const std::string::value_type **)(*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    if (!v15)
    {
LABEL_19:
      v16 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v97, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4351);
      v17 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: options_descriptor: ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v88, (AddrObjGoogle::protobuf::internal::LogMessage *)v17);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v97);
    }
  }
  __p = 0;
  v95 = 0;
  v96 = 0;
  std::string::basic_string[abi:ne180100]<0>(&v93, "");
  v18 = *((_QWORD *)this + 2);
  if (*(int *)(v18 + 24) >= 1)
  {
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 16) + 8 * v19);
      v22 = *(_QWORD *)(v21 + 16);
      size = HIBYTE(v93.__r_.__value_.__r.__words[2]);
      if ((v93.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v93.__r_.__value_.__l.__size_;
      if (size)
      {
        std::string::append(&v93, ".");
        v21 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 2) + 16) + 8 * v19);
      }
      if (*(_BYTE *)(v21 + 24))
      {
        std::operator+<char>();
        v24 = std::string::append(&v88, ")");
        v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
        v98 = v24->__r_.__value_.__r.__words[2];
        v97 = v25;
        v24->__r_.__value_.__l.__size_ = 0;
        v24->__r_.__value_.__r.__words[2] = 0;
        v24->__r_.__value_.__r.__words[0] = 0;
        if (v98 >= 0)
          v26 = (const std::string::value_type *)&v97;
        else
          v26 = (const std::string::value_type *)v97;
        if (v98 >= 0)
          v27 = HIBYTE(v98);
        else
          v27 = *((_QWORD *)&v97 + 1);
        std::string::append(&v93, v26, v27);
        if (SHIBYTE(v98) < 0)
          operator delete((void *)v97);
        if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v88.__r_.__value_.__l.__data_);
        FieldByName = (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)sub_188825F0C(*(AddrObjGoogle::protobuf::DescriptorPool::Tables ***)this, v22, *((_QWORD *)this + 1), 0, 0);
        if ((_DWORD)FieldByName == 2)
          v20 = v29;
        if (!v20)
        {
LABEL_87:
          if (!*(_BYTE *)(**(_QWORD **)this + 41))
          {
            std::operator+<char>();
            v67 = std::string::append(&v88, "\" unknown.");
            v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
            v98 = v67->__r_.__value_.__r.__words[2];
            v97 = v68;
            v67->__r_.__value_.__l.__size_ = 0;
            v67->__r_.__value_.__r.__words[2] = 0;
            v67->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 7, (const std::string::value_type *)&v97);
            goto LABEL_93;
          }
LABEL_90:
          AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(FieldByName, *((const AddrObjGoogle::protobuf::UninterpretedOption **)this + 2), a2);
          v66 = 1;
          goto LABEL_115;
        }
      }
      else
      {
        v30 = *(char *)(v22 + 23);
        if (v30 >= 0)
          v31 = (const std::string::value_type *)v22;
        else
          v31 = *(const std::string::value_type **)v22;
        if (v30 >= 0)
          v32 = *(unsigned __int8 *)(v22 + 23);
        else
          v32 = *(_QWORD *)(v22 + 8);
        std::string::append(&v93, v31, v32);
        FieldByName = (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *)AddrObjGoogle::protobuf::Descriptor::FindFieldByName((uint64_t)v15, v22);
        v20 = (uint64_t)FieldByName;
        if (!FieldByName)
          goto LABEL_87;
      }
      v33 = *(_QWORD *)(v20 + 56);
      if ((const std::string::value_type **)v33 != v15)
        break;
      if (*(_DWORD *)(v20 + 48) == 3)
      {
        std::operator+<char>();
        v69 = std::string::append(&v88, "\" is repeated. Repeated options are not supported.");
        v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
        v98 = v69->__r_.__value_.__r.__words[2];
        v97 = v70;
        v69->__r_.__value_.__l.__size_ = 0;
        v69->__r_.__value_.__r.__words[2] = 0;
        v69->__r_.__value_.__r.__words[0] = 0;
        AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 7, (const std::string::value_type *)&v97);
        goto LABEL_93;
      }
      v18 = *((_QWORD *)this + 2);
      v34 = *(int *)(v18 + 24);
      if (v19 < v34 - 1)
      {
        if ((*(_DWORD *)(v20 + 44) & 0xFFFFFFFE) != 0xA)
        {
          std::operator+<char>();
          v71 = std::string::append(&v88, "\" is an atomic type, not a message.");
          v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
          v98 = v71->__r_.__value_.__r.__words[2];
          v97 = v72;
          v71->__r_.__value_.__l.__size_ = 0;
          v71->__r_.__value_.__r.__words[2] = 0;
          v71->__r_.__value_.__r.__words[0] = 0;
          AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 7, (const std::string::value_type *)&v97);
LABEL_93:
          if (SHIBYTE(v98) < 0)
            operator delete((void *)v97);
          if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
          {
            v73 = (void *)v88.__r_.__value_.__r.__words[0];
            goto LABEL_97;
          }
          goto LABEL_111;
        }
        v35 = v95;
        if (v95 >= v96)
        {
          v37 = ((char *)v95 - (_BYTE *)__p) >> 3;
          if ((unint64_t)(v37 + 1) >> 61)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v38 = ((char *)v96 - (_BYTE *)__p) >> 2;
          if (v38 <= v37 + 1)
            v38 = v37 + 1;
          if ((unint64_t)((char *)v96 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFF8)
            v39 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v39 = v38;
          if (v39)
            v40 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v96, v39);
          else
            v40 = 0;
          v41 = (uint64_t *)&v40[8 * v37];
          *v41 = v20;
          v36 = v41 + 1;
          v42 = (char *)v95;
          v43 = (char *)__p;
          if (v95 != __p)
          {
            do
            {
              v44 = *((_QWORD *)v42 - 1);
              v42 -= 8;
              *--v41 = v44;
            }
            while (v42 != v43);
            v42 = (char *)__p;
          }
          __p = v41;
          v95 = v36;
          v96 = (uint64_t *)&v40[8 * v39];
          if (v42)
            operator delete(v42);
        }
        else
        {
          *v95 = v20;
          v36 = v35 + 1;
        }
        v95 = v36;
        v15 = *(const std::string::value_type ***)(v20 + 72);
        v18 = *((_QWORD *)this + 2);
        LODWORD(v34) = *(_DWORD *)(v18 + 24);
      }
      if (++v19 >= (int)v34)
        goto LABEL_72;
    }
    if (*(_BYTE *)(v33 + 40))
      goto LABEL_90;
    std::operator+<char>();
    v74 = std::string::append(&v91, "\" is not a field or extension of message \"");
    v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
    v92.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v92.__r_.__value_.__l.__data_ = v75;
    v74->__r_.__value_.__l.__size_ = 0;
    v74->__r_.__value_.__r.__words[2] = 0;
    v74->__r_.__value_.__r.__words[0] = 0;
    v76 = (*v15)[23];
    if (v76 >= 0)
      v77 = *v15;
    else
      v77 = *(const std::string::value_type **)*v15;
    if (v76 >= 0)
      v78 = *((unsigned __int8 *)*v15 + 23);
    else
      v78 = *((_QWORD *)*v15 + 1);
    v79 = std::string::append(&v92, v77, v78);
    v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
    v88.__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v80;
    v79->__r_.__value_.__l.__size_ = 0;
    v79->__r_.__value_.__r.__words[2] = 0;
    v79->__r_.__value_.__r.__words[0] = 0;
    v81 = std::string::append(&v88, "\".");
    v82 = *(_OWORD *)&v81->__r_.__value_.__l.__data_;
    v98 = v81->__r_.__value_.__r.__words[2];
    v97 = v82;
    v81->__r_.__value_.__l.__size_ = 0;
    v81->__r_.__value_.__r.__words[2] = 0;
    v81->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 7, (const std::string::value_type *)&v97);
    if (SHIBYTE(v98) < 0)
      operator delete((void *)v97);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
    if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v92.__r_.__value_.__l.__data_);
    if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
    {
      v73 = (void *)v91.__r_.__value_.__r.__words[0];
LABEL_97:
      operator delete(v73);
    }
LABEL_111:
    v66 = 0;
    goto LABEL_115;
  }
  v20 = 0;
LABEL_72:
  v45 = __p;
  v46 = (uint64_t)v95;
  v47 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 144))(a2);
  v48 = (uint64_t **)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v47 + 16))(v47, a2);
  if ((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet((uint64_t *)this, (uint64_t)v45, v46, v20, (uint64_t)&v93, v48) & 1) == 0)goto LABEL_111;
  v49 = (void ***)operator new();
  AddrObjGoogle::protobuf::UnknownFieldSet::UnknownFieldSet(v49);
  v91.__r_.__value_.__r.__words[0] = (std::string::size_type)v49;
  if ((AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(this, (const AddrObjGoogle::protobuf::FieldDescriptor *)v20, v49) & 1) == 0)goto LABEL_113;
  v50 = v95;
  if (v95 == __p)
  {
LABEL_82:
    v64 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a2 + 144))(a2);
    v65 = (void ***)(*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v64 + 24))(v64, a2);
    AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom(v65, (const AddrObjGoogle::protobuf::UnknownFieldSet *)v91.__r_.__value_.__l.__data_);
    v66 = 1;
    goto LABEL_114;
  }
  while (1)
  {
    v51 = (AddrObjGoogle::protobuf::UnknownFieldSet *)operator new();
    AddrObjGoogle::protobuf::UnknownFieldSet::UnknownFieldSet(v51);
    v90 = v51;
    v53 = v50 - 1;
    v52 = *(v50 - 1);
    v54 = *(_DWORD *)(v52 + 44);
    if (v54 != 10)
      break;
    v62 = (void ***)AddrObjGoogle::protobuf::UnknownFieldSet::AddGroup((void ***)v51, *(_DWORD *)(v52 + 40));
    AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom(v62, (const AddrObjGoogle::protobuf::UnknownFieldSet *)v91.__r_.__value_.__l.__data_);
LABEL_81:
    v63 = v90;
    v90 = 0;
    AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::reset((AddrObjGoogle::protobuf::UnknownFieldSet **)&v91, v63);
    AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr(&v90);
    --v50;
    if (v53 == __p)
      goto LABEL_82;
  }
  if (v54 == 11)
  {
    v55 = AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited((void ***)v51, *(_DWORD *)(v52 + 40));
    AddrObjGoogle::protobuf::io::StringOutputStream::StringOutputStream(&v92, (uint64_t)v55);
    AddrObjGoogle::protobuf::io::CodedOutputStream::CodedOutputStream((uint64_t)&v88, (uint64_t)&v92);
    AddrObjGoogle::protobuf::internal::WireFormat::SerializeUnknownFields((uint64_t **)v91.__r_.__value_.__l.__data_, (const AddrObjGoogle::protobuf::UnknownFieldSet *)&v88, v56);
    if (v89)
    {
      v57 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v97, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4469);
      v58 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v57, "CHECK failed: !out.HadError(): ");
      v59 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v58, "Unexpected failure while serializing option submessage ");
      v60 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v59, (const std::string::value_type *)&v93);
      v61 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v60, "\".");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v87, (AddrObjGoogle::protobuf::internal::LogMessage *)v61);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v97);
    }
    AddrObjGoogle::protobuf::io::CodedOutputStream::~CodedOutputStream((AddrObjGoogle::protobuf::io::CodedOutputStream *)&v88);
    AddrObjGoogle::protobuf::io::StringOutputStream::~StringOutputStream((AddrObjGoogle::protobuf::io::StringOutputStream *)&v92);
    goto LABEL_81;
  }
  v83 = (std::string *)AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v97, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4482);
  v84 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v83, "Invalid wire type for CPPTYPE_MESSAGE: ");
  v85 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v84, *(_DWORD *)(*(v50 - 1) + 44));
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v88, (AddrObjGoogle::protobuf::internal::LogMessage *)v85);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v97);
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr(&v90);
LABEL_113:
  v66 = 0;
LABEL_114:
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr((AddrObjGoogle::protobuf::UnknownFieldSet **)&v91);
LABEL_115:
  if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v93.__r_.__value_.__l.__data_);
  if (__p)
  {
    v95 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v66;
}

void sub_18882802C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, AddrObjGoogle::protobuf::UnknownFieldSet *a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38)
{
  uint64_t v38;
  uint64_t v39;
  void *v41;

  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)(v39 - 144));
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr(&a18);
  AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr((AddrObjGoogle::protobuf::UnknownFieldSet **)&a19);
  if (a37 < 0)
    operator delete(__p);
  v41 = a38;
  if (a38)
  {
    *(_QWORD *)(v38 + 8) = a38;
    operator delete(v41);
  }
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, const AddrObjGoogle::protobuf::UninterpretedOption *a2, AddrObjGoogle::protobuf::Message *a3)
{
  uint64_t v5;
  uint64_t FieldByName;
  uint64_t v7;
  std::string *v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  std::string __p[2];

  v5 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a3 + 152))(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "uninterpreted_option");
  FieldByName = AddrObjGoogle::protobuf::Descriptor::FindFieldByName(v5, (uint64_t)__p);
  v7 = FieldByName;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (!v7)
    {
LABEL_5:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4501);
      v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: field != NULL: ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
  }
  else if (!FieldByName)
  {
    goto LABEL_5;
  }
  v9 = (*(uint64_t (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)a3 + 144))(a3);
  v10 = (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::Message *, uint64_t, _QWORD))(*(_QWORD *)v9 + 520))(v9, a3, v7, 0);
  return (*(uint64_t (**)(uint64_t, const AddrObjGoogle::protobuf::UninterpretedOption *))(*(_QWORD *)v10
                                                                                                  + 104))(v10, a2);
}

void sub_188828300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t **a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  int v20;
  const void *v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  std::string *v31;
  std::string __p[2];
  std::string v36;

  if (a2 == a3)
  {
    v23 = 0;
    v24 = *a6;
    v25 = -1;
    do
    {
      if (v24)
        v26 = (unint64_t)(v24[1] - *v24) >> 4;
      else
        LODWORD(v26) = 0;
      if (++v25 >= (int)v26)
        return 1;
      v27 = *(_DWORD *)(*v24 + v23);
      v23 += 16;
    }
    while ((v27 & 0x1FFFFFFF) != *(_DWORD *)(a4 + 40));
    std::operator+<char>();
    v28 = std::string::append(&v36, "\" was already set.");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v36.__r_.__value_.__l.__data_);
    return 0;
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v12 = a2 + 8;
    while (1)
    {
      v13 = *a6;
      if (*a6)
        v14 = (unint64_t)(v13[1] - *v13) >> 4;
      else
        LODWORD(v14) = 0;
      v15 = v11 >= (int)v14;
      if (v11 >= (int)v14)
        break;
      v16 = *v13;
      v17 = *(_DWORD *)(*v13 + v10);
      if ((v17 & 0x1FFFFFFF) == *(_DWORD *)(*(_QWORD *)a2 + 40))
      {
        v18 = *(_DWORD *)(*(_QWORD *)a2 + 44);
        if (v18 == 10)
        {
          if (v17 >> 29 == 4
            && (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v12, a3, a4, a5, *(_QWORD *)(v16 + v10 + 8)) & 1) == 0)
          {
            return v15;
          }
        }
        else
        {
          if (v18 != 11)
          {
            AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4560);
            v30 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "Invalid wire type for CPPTYPE_MESSAGE: ");
            v31 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v30, v18);
            AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v36, (AddrObjGoogle::protobuf::internal::LogMessage *)v31);
            AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
            return 0;
          }
          if (v17 >> 29 == 3)
          {
            AddrObjGoogle::protobuf::UnknownFieldSet::UnknownFieldSet(__p);
            v19 = *(_QWORD *)(v16 + v10 + 8);
            v20 = *(char *)(v19 + 23);
            if (v20 >= 0)
              v21 = *(const void **)(v16 + v10 + 8);
            else
              v21 = *(const void **)v19;
            if (v20 >= 0)
              v22 = *(unsigned __int8 *)(v19 + 23);
            else
              v22 = *(_DWORD *)(v19 + 8);
            if (AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromArray((AddrObjGoogle::protobuf::UnknownFieldSet *)__p, v21, v22)&& (AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v12, a3, a4, a5, __p) & 1) == 0)
            {
              AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)__p);
              return 0;
            }
            AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)__p);
          }
        }
      }
      ++v11;
      v10 += 16;
    }
  }
  return v15;
}

void sub_1888285A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, const AddrObjGoogle::protobuf::FieldDescriptor *a2, void ***a3)
{
  int v3;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  double v25;
  float v26;
  _DWORD *v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 v33;
  const std::string *v34;
  std::string *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  std::string::size_type size;
  uint64_t v44;
  int v45;
  const std::string::value_type *v46;
  std::string::size_type v47;
  uint64_t v48;
  std::string *v49;
  __int128 v50;
  int v51;
  const std::string::value_type *v52;
  std::string::size_type v53;
  std::string *v54;
  __int128 v55;
  std::string *v56;
  __int128 v57;
  uint64_t v58;
  int v59;
  const std::string::value_type *v60;
  std::string::size_type v61;
  std::string *v62;
  __int128 v63;
  std::string *v64;
  __int128 v65;
  char v66;
  int v67;
  std::string *v68;
  __int128 v69;
  int v70;
  const std::string::value_type *v71;
  std::string::size_type v72;
  std::string *v73;
  __int128 v74;
  std::string *v75;
  __int128 v76;
  uint64_t v77;
  int v78;
  const std::string::value_type *v79;
  std::string::size_type v80;
  std::string *v81;
  __int128 v82;
  std::string *v83;
  __int128 v84;
  void *v85;
  std::string *v86;
  __int128 v87;
  std::string v88;
  std::string v89;
  std::string v90;
  std::string v91;
  std::string v92;
  std::string v93;
  std::string v94;

  v3 = *((_DWORD *)a2 + 11);
  switch(v3)
  {
    case 1:
      v13 = *((_QWORD *)this + 2);
      v14 = *(_DWORD *)(v13 + 92);
      if ((v14 & 0x10) != 0)
      {
        v25 = *(double *)(v13 + 64);
      }
      else if ((v14 & 4) != 0)
      {
        v25 = (double)*(unint64_t *)(v13 + 48);
      }
      else
      {
        if ((v14 & 8) == 0)
          goto LABEL_140;
        v25 = (double)*(uint64_t *)(v13 + 56);
      }
      AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 10), *(uint64_t *)&v25);
      return 1;
    case 2:
      v15 = *((_QWORD *)this + 2);
      v16 = *(_DWORD *)(v15 + 92);
      if ((v16 & 0x10) != 0)
      {
        v26 = *(double *)(v15 + 64);
      }
      else if ((v16 & 4) != 0)
      {
        v26 = (float)*(unint64_t *)(v15 + 48);
      }
      else
      {
        if ((v16 & 8) == 0)
          goto LABEL_140;
        v26 = (float)*(uint64_t *)(v15 + 56);
      }
      AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 10), SLODWORD(v26));
      return 1;
    case 3:
    case 16:
    case 18:
      v9 = *((_QWORD *)this + 2);
      v10 = *(_DWORD *)(v9 + 92);
      if ((v10 & 4) != 0)
      {
        v22 = *(_QWORD *)(v9 + 48);
        if (v22 < 0)
          goto LABEL_140;
        v23 = *((_DWORD *)a2 + 10);
      }
      else
      {
        if ((v10 & 8) == 0)
          goto LABEL_140;
        v23 = *((_DWORD *)a2 + 10);
        v22 = *(_QWORD *)(v9 + 56);
      }
      AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64((int)this, v23, v22, v3, a3);
      return 1;
    case 4:
    case 6:
      v12 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v12 + 92) & 4) == 0)
        goto LABEL_140;
      AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64((int)this, *((_DWORD *)a2 + 10), *(_QWORD *)(v12 + 48), v3, a3);
      return 1;
    case 5:
    case 15:
    case 17:
      v7 = *((_QWORD *)this + 2);
      v8 = *(_DWORD *)(v7 + 92);
      if ((v8 & 4) != 0)
      {
        v21 = *(_QWORD *)(v7 + 48);
        if ((unint64_t)v21 >> 31)
          goto LABEL_140;
        goto LABEL_46;
      }
      if ((v8 & 8) != 0)
      {
        v21 = *(_QWORD *)(v7 + 56);
        if (v21 > (uint64_t)0xFFFFFFFF7FFFFFFFLL)
        {
LABEL_46:
          AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32((int)this, *((_DWORD *)a2 + 10), v21, v3, a3);
          return 1;
        }
      }
      goto LABEL_140;
    case 7:
    case 13:
      v11 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v11 + 92) & 4) == 0)
        goto LABEL_140;
      v24 = *(_QWORD *)(v11 + 48);
      if (HIDWORD(v24))
        goto LABEL_140;
      AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32((int)this, *((_DWORD *)a2 + 10), v24, v3, a3);
      return 1;
    case 8:
      v17 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v17 + 92) & 2) == 0)
        goto LABEL_140;
      v27 = *(_DWORD **)(v17 + 40);
      if (*((char *)v27 + 23) < 0)
      {
        v36 = *((_QWORD *)v27 + 1);
        if (v36 != 4 || **(_DWORD **)v27 != 1702195828)
        {
          if (v36 != 5)
            goto LABEL_140;
          v27 = *(_DWORD **)v27;
          goto LABEL_57;
        }
      }
      else
      {
        v28 = *((unsigned __int8 *)v27 + 23);
        if (v28 != 4)
        {
          if (v28 != 5)
            goto LABEL_140;
LABEL_57:
          v37 = *v27;
          v38 = *((unsigned __int8 *)v27 + 4);
          if (v37 != 1936482662 || v38 != 101)
          {
LABEL_140:
            std::operator+<char>();
            v86 = std::string::append(&v93, "\".");
            v87 = *(_OWORD *)&v86->__r_.__value_.__l.__data_;
            v94.__r_.__value_.__r.__words[2] = v86->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v87;
            v86->__r_.__value_.__l.__size_ = 0;
            v86->__r_.__value_.__r.__words[2] = 0;
            v86->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)&v94);
            if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v94.__r_.__value_.__l.__data_);
            if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
            {
              v85 = (void *)v93.__r_.__value_.__r.__words[0];
LABEL_144:
              operator delete(v85);
            }
            return 0;
          }
          v40 = 0;
LABEL_147:
          v67 = *((_DWORD *)a2 + 10);
          goto LABEL_148;
        }
        if (*v27 != 1702195828)
          goto LABEL_140;
      }
      v40 = 1;
      goto LABEL_147;
    case 9:
    case 12:
      v19 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v19 + 92) & 0x20) == 0)
        goto LABEL_140;
      v34 = *(const std::string **)(v19 + 72);
      v35 = (std::string *)AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited(a3, *((_DWORD *)a2 + 10));
      std::string::operator=(v35, v34);
      return 1;
    case 10:
    case 11:
      result = AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(this, a2, a3);
      if (!(_DWORD)result)
        return result;
      return 1;
    case 14:
      v18 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v18 + 92) & 2) == 0)
        goto LABEL_140;
      v29 = (_QWORD *)*((_QWORD *)a2 + 10);
      v30 = *(_QWORD *)(v18 + 40);
      v31 = *(_QWORD *)(v29[2] + 16);
      if (v31 != AddrObjGoogle::protobuf::DescriptorPool::generated_pool(this))
      {
        v32 = (__int128 *)v29[1];
        if (*((char *)v32 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v94, *(const std::string::value_type **)v32, *((_QWORD *)v32 + 1));
        }
        else
        {
          v33 = *v32;
          v94.__r_.__value_.__r.__words[2] = *((_QWORD *)v32 + 2);
          *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v33;
        }
        size = HIBYTE(v94.__r_.__value_.__r.__words[2]);
        if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          size = v94.__r_.__value_.__l.__size_;
        if (*(char *)(*v29 + 23) < 0)
          v44 = *(_QWORD *)(*v29 + 8);
        else
          v44 = *(unsigned __int8 *)(*v29 + 23);
        std::string::resize(&v94, size - v44, 0);
        v45 = *(char *)(v30 + 23);
        if (v45 >= 0)
          v46 = (const std::string::value_type *)v30;
        else
          v46 = *(const std::string::value_type **)v30;
        if (v45 >= 0)
          v47 = *(unsigned __int8 *)(v30 + 23);
        else
          v47 = *(_QWORD *)(v30 + 8);
        std::string::append(&v94, v46, v47);
        if (sub_18882A72C(*(pthread_mutex_t *****)this, **(pthread_mutex_t *****)this, (uint64_t)&v94) == 4)
        {
          v42 = v48;
          if (*(_QWORD **)(v48 + 24) != v29)
          {
            std::operator+<char>();
            v49 = std::string::append(&v88, "\" has no value named \"");
            v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
            v89.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v50;
            v49->__r_.__value_.__l.__size_ = 0;
            v49->__r_.__value_.__r.__words[2] = 0;
            v49->__r_.__value_.__r.__words[0] = 0;
            v51 = *(char *)(v30 + 23);
            if (v51 >= 0)
              v52 = (const std::string::value_type *)v30;
            else
              v52 = *(const std::string::value_type **)v30;
            if (v51 >= 0)
              v53 = *(unsigned __int8 *)(v30 + 23);
            else
              v53 = *(_QWORD *)(v30 + 8);
            v54 = std::string::append(&v89, v52, v53);
            v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
            v90.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v55;
            v54->__r_.__value_.__l.__size_ = 0;
            v54->__r_.__value_.__r.__words[2] = 0;
            v54->__r_.__value_.__r.__words[0] = 0;
            v56 = std::string::append(&v90, "\" for option \"");
            v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
            v91.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v57;
            v56->__r_.__value_.__l.__size_ = 0;
            v56->__r_.__value_.__r.__words[2] = 0;
            v56->__r_.__value_.__r.__words[0] = 0;
            v58 = *((_QWORD *)a2 + 1);
            v59 = *(char *)(v58 + 23);
            if (v59 >= 0)
              v60 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
            else
              v60 = *(const std::string::value_type **)v58;
            if (v59 >= 0)
              v61 = *(unsigned __int8 *)(v58 + 23);
            else
              v61 = *(_QWORD *)(v58 + 8);
            v62 = std::string::append(&v91, v60, v61);
            v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
            v92.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v92.__r_.__value_.__l.__data_ = v63;
            v62->__r_.__value_.__l.__size_ = 0;
            v62->__r_.__value_.__r.__words[2] = 0;
            v62->__r_.__value_.__r.__words[0] = 0;
            v64 = std::string::append(&v92, "\". This appears to be a value from a sibling type.");
            v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
            v93.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v93.__r_.__value_.__l.__data_ = v65;
            v64->__r_.__value_.__l.__size_ = 0;
            v64->__r_.__value_.__r.__words[2] = 0;
            v64->__r_.__value_.__r.__words[0] = 0;
            AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)&v93);
            if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v93.__r_.__value_.__l.__data_);
            if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v92.__r_.__value_.__l.__data_);
            if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v91.__r_.__value_.__l.__data_);
            if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v90.__r_.__value_.__l.__data_);
            if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v89.__r_.__value_.__l.__data_);
            if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v88.__r_.__value_.__l.__data_);
            v66 = 0;
            v42 = 0;
LABEL_110:
            if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v94.__r_.__value_.__l.__data_);
            if ((v66 & 1) == 0)
              return 0;
            goto LABEL_113;
          }
        }
        else
        {
          v42 = 0;
        }
        v66 = 1;
        goto LABEL_110;
      }
      if (!sub_18881CDB0(*(_QWORD **)(v29[2] + 144), (uint64_t)v29, v30, 4))
        goto LABEL_115;
      v42 = v41;
LABEL_113:
      if (v42)
      {
        v67 = *((_DWORD *)a2 + 10);
        v40 = *(int *)(v42 + 16);
LABEL_148:
        AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(a3, v67, v40);
        return 1;
      }
LABEL_115:
      std::operator+<char>();
      v68 = std::string::append(&v89, "\" has no value named \"");
      v69 = *(_OWORD *)&v68->__r_.__value_.__l.__data_;
      v90.__r_.__value_.__r.__words[2] = v68->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v69;
      v68->__r_.__value_.__l.__size_ = 0;
      v68->__r_.__value_.__r.__words[2] = 0;
      v68->__r_.__value_.__r.__words[0] = 0;
      v70 = *(char *)(v30 + 23);
      if (v70 >= 0)
        v71 = (const std::string::value_type *)v30;
      else
        v71 = *(const std::string::value_type **)v30;
      if (v70 >= 0)
        v72 = *(unsigned __int8 *)(v30 + 23);
      else
        v72 = *(_QWORD *)(v30 + 8);
      v73 = std::string::append(&v90, v71, v72);
      v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
      v91.__r_.__value_.__r.__words[2] = v73->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v74;
      v73->__r_.__value_.__l.__size_ = 0;
      v73->__r_.__value_.__r.__words[2] = 0;
      v73->__r_.__value_.__r.__words[0] = 0;
      v75 = std::string::append(&v91, "\" for option \"");
      v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
      v92.__r_.__value_.__r.__words[2] = v75->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v92.__r_.__value_.__l.__data_ = v76;
      v75->__r_.__value_.__l.__size_ = 0;
      v75->__r_.__value_.__r.__words[2] = 0;
      v75->__r_.__value_.__r.__words[0] = 0;
      v77 = *((_QWORD *)a2 + 1);
      v78 = *(char *)(v77 + 23);
      if (v78 >= 0)
        v79 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      else
        v79 = *(const std::string::value_type **)v77;
      if (v78 >= 0)
        v80 = *(unsigned __int8 *)(v77 + 23);
      else
        v80 = *(_QWORD *)(v77 + 8);
      v81 = std::string::append(&v92, v79, v80);
      v82 = *(_OWORD *)&v81->__r_.__value_.__l.__data_;
      v93.__r_.__value_.__r.__words[2] = v81->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v93.__r_.__value_.__l.__data_ = v82;
      v81->__r_.__value_.__l.__size_ = 0;
      v81->__r_.__value_.__r.__words[2] = 0;
      v81->__r_.__value_.__r.__words[0] = 0;
      v83 = std::string::append(&v93, "\".");
      v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
      v94.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v84;
      v83->__r_.__value_.__l.__size_ = 0;
      v83->__r_.__value_.__r.__words[2] = 0;
      v83->__r_.__value_.__r.__words[0] = 0;
      AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)&v94);
      if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v94.__r_.__value_.__l.__data_);
      if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v93.__r_.__value_.__l.__data_);
      if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v92.__r_.__value_.__l.__data_);
      if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v91.__r_.__value_.__l.__data_);
      if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v90.__r_.__value_.__l.__data_);
      if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
      {
        v85 = (void *)v89.__r_.__value_.__r.__words[0];
        goto LABEL_144;
      }
      return 0;
    default:
      return 1;
  }
}

void sub_1888291C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 105) < 0)
    operator delete(*(void **)(v42 - 128));
  if (a42 < 0)
    operator delete(__p);
  if (a35 < 0)
    operator delete(a30);
  if (a28 < 0)
    operator delete(a23);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  if (*(char *)(v42 - 73) < 0)
    operator delete(*(void **)(v42 - 96));
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::reset(AddrObjGoogle::protobuf::UnknownFieldSet **a1, AddrObjGoogle::protobuf::UnknownFieldSet *a2)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *result;

  result = *a1;
  if (result != a2)
  {
    if (result)
    {
      AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(result);
      result = (AddrObjGoogle::protobuf::UnknownFieldSet *)MEMORY[0x18D76437C]();
    }
    *a1 = a2;
  }
  return result;
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  switch(a4)
  {
    case 17:
      a3 = (2 * (_DWORD)a3) ^ ((int)a3 >> 31);
      goto LABEL_6;
    case 15:
      AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
      break;
    case 5:
      a3 = (int)a3;
LABEL_6:
      AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
      return;
    default:
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4893);
      v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT32: ");
      v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      break;
  }
}

void sub_1888294A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (a4 == 18)
  {
    a3 = (2 * a3) ^ (a3 >> 63);
LABEL_6:
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 16)
  {
    if (a4 != 3)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4915);
      v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT64: ");
      v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    goto LABEL_6;
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
}

void sub_188829568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(int a1, int a2, unsigned int a3, int a4, void ***this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (a4 == 7)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
  }
  else if (a4 == 13)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4932);
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT32: ");
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_188829624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (a4 == 6)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
  }
  else if (a4 == 4)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4949);
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT64: ");
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, a4);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_1888296DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter *this, const AddrObjGoogle::protobuf::FieldDescriptor *a2, void ***a3)
{
  std::string *v5;
  __int128 v6;
  int v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  uint64_t v21;
  void *Prototype;
  AddrObjGoogle::protobuf::Message *v24;
  std::string *v25;
  std::string *v26;
  std::string *v27;
  std::string::size_type v28;
  int v29;
  std::string *v30;
  std::string *v31;
  __int128 v32;
  const std::string::value_type *size;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  void *v37;
  std::string *v38;
  AddrObjGoogle::protobuf::UnknownFieldSet *v39;
  std::string *p_str;
  int v41;
  std::string v43;
  std::string v44;
  uint64_t v45;
  std::string __p[2];
  std::string v47;
  std::string v48;
  std::string __str;

  if ((*(_BYTE *)(*((_QWORD *)this + 2) + 92) & 0x40) == 0)
  {
    std::operator+<char>();
    v5 = std::string::append(&v47, "\" is a message. To set the entire message, use syntax like \"");
    v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    v7 = *(char *)(*(_QWORD *)a2 + 23);
    if (v7 >= 0)
      v8 = *(const std::string::value_type **)a2;
    else
      v8 = **(const std::string::value_type ***)a2;
    if (v7 >= 0)
      v9 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
    else
      v9 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    v10 = std::string::append(&v48, v8, v9);
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = *(char *)(*(_QWORD *)a2 + 23);
    if (v14 >= 0)
      v15 = *(const std::string::value_type **)a2;
    else
      v15 = **(const std::string::value_type ***)a2;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
    else
      v16 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    v17 = std::string::append(&v43, v15, v16);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v44, ".foo = value\".");
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    return 0;
  }
  Prototype = AddrObjGoogle::protobuf::DynamicMessageFactory::GetPrototype((pthread_mutex_t **)this + 3, *((const AddrObjGoogle::protobuf::Descriptor **)a2 + 9));
  v24 = (AddrObjGoogle::protobuf::Message *)(*(uint64_t (**)(void *))(*(_QWORD *)Prototype + 24))(Prototype);
  if (!v24)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4847);
    v25 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: dynamic.get() != NULL: ");
    v26 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v25, "Could not create an instance of ");
    AddrObjGoogle::protobuf::FieldDescriptor::DebugString(a2, &v44);
    v27 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v26, (const std::string::value_type *)&v44);
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v43, (AddrObjGoogle::protobuf::internal::LogMessage *)v27);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v44.__r_.__value_.__l.__data_);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  v44.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1E1BFEFA0;
  *(_OWORD *)&v44.__r_.__value_.__r.__words[1] = 0uLL;
  v45 = 0;
  v28 = *(_QWORD *)this;
  v47.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E1BF5770;
  v47.__r_.__value_.__l.__size_ = v28;
  AddrObjGoogle::protobuf::TextFormat::Parser::Parser((uint64_t)&v43);
  v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&v44;
  v43.__r_.__value_.__l.__size_ = (std::string::size_type)&v47;
  v21 = AddrObjGoogle::protobuf::TextFormat::Parser::ParseFromString((uint64_t)&v43, *(_DWORD **)(*((_QWORD *)this + 2) + 80), v24);
  if ((v21 & 1) != 0)
  {
    memset(&__str, 0, sizeof(__str));
    AddrObjGoogle::protobuf::MessageLite::SerializeToString((uint64_t)v24, (uint64_t)&__str);
    v29 = *((_DWORD *)a2 + 11);
    if (v29 == 11)
    {
      v30 = (std::string *)AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited(a3, *((_DWORD *)a2 + 10));
      std::string::operator=(v30, &__str);
    }
    else
    {
      if (v29 != 10)
      {
        AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/descriptor.cc", 4867);
        v38 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
        AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v48, (AddrObjGoogle::protobuf::internal::LogMessage *)v38);
        AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      v39 = (AddrObjGoogle::protobuf::UnknownFieldSet *)AddrObjGoogle::protobuf::UnknownFieldSet::AddGroup(a3, *((_DWORD *)a2 + 10));
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_str = &__str;
      else
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v41 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      else
        v41 = __str.__r_.__value_.__r.__words[1];
      AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromArray(v39, p_str, v41);
    }
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_58;
    v37 = (void *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::operator+<char>();
    v31 = std::string::append(&v48, "\": ");
    v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    if (v45 >= 0)
      size = &v44.__r_.__value_.__s.__data_[8];
    else
      size = (const std::string::value_type *)v44.__r_.__value_.__l.__size_;
    if (v45 >= 0)
      v34 = HIBYTE(v45);
    else
      v34 = v44.__r_.__value_.__r.__words[2];
    v35 = std::string::append(&__str, size, v34);
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    AddrObjGoogle::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_58;
    v37 = (void *)v48.__r_.__value_.__r.__words[0];
  }
  operator delete(v37);
LABEL_58:
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v43);
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v47);
  v44.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1E1BFEFA0;
  if (SHIBYTE(v45) < 0)
    operator delete((void *)v44.__r_.__value_.__l.__size_);
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v44);
  if (v24)
    (*(void (**)(AddrObjGoogle::protobuf::Message *))(*(_QWORD *)v24 + 8))(v24);
  return v21;
}

void sub_188829B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;
  uint64_t v39;

  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a23);
  if (*(char *)(v39 - 73) < 0)
    operator delete(*(void **)(v39 - 96));
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&a9);
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&a33);
  sub_188829CF4(&__p);
  if (v38)
    (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
  _Unwind_Resume(a1);
}

uint64_t sub_188829CF4(void **this)
{
  *this = off_1E1BFEFA0;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  return addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)this);
}

uint64_t std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  void *v2;

  std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(int a1, void **__p)
{
  void **v2;
  void **v3;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_DWORD *AddrObjGoogle::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(_DWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2[17] - a2[16]) >> 3;
  *result = (a2[14] - a2[13]) >> 3;
  result[1] = v2;
  v3 = (a2[23] - a2[22]) >> 3;
  result[2] = (a2[20] - a2[19]) >> 3;
  result[3] = v3;
  v4 = (a2[45] - a2[44]) >> 3;
  result[4] = (a2[42] - a2[41]) >> 3;
  result[5] = v4;
  result[6] = (a2[48] - a2[47]) >> 4;
  return result;
}

void AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(pthread_mutex_t ***this)
{
  pthread_mutex_t **v1;

  v1 = *this;
  if (v1)
    AddrObjGoogle::protobuf::internal::Mutex::Unlock(v1);
}

void sub_188829E44()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(void);

  v0 = (_QWORD *)operator new();
  AddrObjGoogle::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase(v0);
  qword_1EDF508A8 = (uint64_t)v0;
  v1 = operator new();
  AddrObjGoogle::protobuf::DescriptorPool::DescriptorPool(v1, qword_1EDF508A8, 0);
  qword_1EDF508A0 = v1;
  AddrObjGoogle::protobuf::internal::OnShutdown((AddrObjGoogle::protobuf::internal *)sub_188829EFC, v2);
}

void sub_188829EBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1060C4032DA966FLL);
  _Unwind_Resume(a1);
}

uint64_t sub_188829EFC()
{
  uint64_t result;

  if (qword_1EDF508A8)
    (*(void (**)(uint64_t))(*(_QWORD *)qword_1EDF508A8 + 8))(qword_1EDF508A8);
  qword_1EDF508A8 = 0;
  result = qword_1EDF508A0;
  if (qword_1EDF508A0)
  {
    AddrObjGoogle::protobuf::DescriptorPool::~DescriptorPool((AddrObjGoogle::protobuf::DescriptorPool::Tables **)qword_1EDF508A0);
    result = MEMORY[0x18D76437C]();
  }
  qword_1EDF508A0 = 0;
  return result;
}

void sub_188829F58()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_1EDF508C8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1EDF508C8))
    {
      LODWORD(qword_1EDF508B8) = 0;
      qword_1EDF508C0 = 0;
      __cxa_guard_release(&qword_1EDF508C8);
    }
  }
}

uint64_t *std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::find<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(uint64_t a1, unint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v5;
  int v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(uint64_t **)(a1 + 8);
  v2 = (uint64_t *)(a1 + 8);
  v3 = v4;
  if (!v4)
    return v2;
  v5 = *a2;
  v6 = *((_DWORD *)a2 + 2);
  v7 = v2;
  do
  {
    v8 = v3[4];
    if (v8 >= v5)
    {
      if (v5 >= v8)
      {
        if (*((_DWORD *)v3 + 10) < v6)
          ++v3;
        else
          v7 = v3;
      }
      else
      {
        v7 = v3;
      }
    }
    else
    {
      ++v3;
    }
    v3 = (uint64_t *)*v3;
  }
  while (v3);
  if (v7 == v2)
    return v2;
  v9 = v7[4];
  if (v5 < v9 || v9 >= v5 && v6 < *((_DWORD *)v7 + 10))
    return v2;
  return v7;
}

BOOL sub_18882A038(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  int v10;
  int v11;
  unsigned int i;
  uint64_t v13;
  uint64_t v14;
  std::__split_buffer<std::string>::pointer p_p;
  std::string::size_type end_high;
  uint64_t v17;
  uint64_t v18;
  std::string *v19;
  std::string::size_type v20;
  char v21;
  std::string::size_type size;
  std::string *v23;
  std::string *v24;
  std::string *v25;
  std::string::size_type v26;
  std::string *v27;
  std::string::size_type v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::string *v38;
  std::string *v39;
  std::string::size_type v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  std::string::size_type __n;
  int v46;
  std::string v47;
  std::string v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  std::__split_buffer<std::string> __p;
  std::string v53;
  _QWORD v54[4];

  v54[2] = *MEMORY[0x1E0C80C00];
  std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)a3);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 144))(a2);
  v49 = 0;
  v50 = 0;
  v51 = 0;
  v44 = v6;
  v7 = a2;
  (*(void (**)(uint64_t, uint64_t, _QWORD **))(*(_QWORD *)v6 + 96))(v6, a2, &v49);
  v8 = v50;
  if (v50 != v49)
  {
    v9 = 0;
    v46 = a1 + 1;
    __n = 2 * a1;
    v8 = v49;
    while (1)
    {
      v10 = *(_DWORD *)(v8[v9] + 48);
      if (v10 != 3)
        break;
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v44 + 48))(v44, v7);
      if (v11 >= 1)
        goto LABEL_7;
LABEL_66:
      ++v9;
      v8 = v49;
      if (v9 >= v50 - v49)
        goto LABEL_67;
    }
    v11 = 1;
LABEL_7:
    for (i = 0; i != v11; ++i)
    {
      memset(&v48, 0, sizeof(v48));
      v13 = v49[v9];
      if ((*(_DWORD *)(v13 + 44) & 0xFFFFFFFE) == 0xA)
      {
        memset(&__p, 0, 24);
        AddrObjGoogle::protobuf::TextFormat::Printer::Printer(&v47);
        LODWORD(v47.__r_.__value_.__l.__data_) = v46;
        if (v10 == 3)
          v14 = i;
        else
          v14 = 0xFFFFFFFFLL;
        AddrObjGoogle::protobuf::TextFormat::Printer::PrintFieldValueToString((int *)&v47, v7, v49[v9], v14, (uint64_t)&__p);
        std::string::append(&v48, "{\n");
        if (SHIBYTE(__p.__end_) >= 0)
          p_p = (std::__split_buffer<std::string>::pointer)&__p;
        else
          p_p = __p.__first_;
        if (SHIBYTE(__p.__end_) >= 0)
          end_high = HIBYTE(__p.__end_);
        else
          end_high = (std::string::size_type)__p.__begin_;
        std::string::append(&v48, (const std::string::value_type *)p_p, end_high);
        std::string::append(&v48, __n, 32);
        std::string::append(&v48, "}");
        addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)&v47);
        if (SHIBYTE(__p.__end_) < 0)
          operator delete(__p.__first_);
      }
      else
      {
        if (v10 == 3)
          v17 = i;
        else
          v17 = 0xFFFFFFFFLL;
        AddrObjGoogle::protobuf::TextFormat::PrintFieldValueToString(v7, v13, v17, (uint64_t)&v48);
      }
      memset(&v47, 0, sizeof(v47));
      v18 = v49[v9];
      if (*(_BYTE *)(v18 + 52))
      {
        std::operator+<char>();
        v19 = std::string::append((std::string *)&__p, ")");
        v20 = v19->__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = v19->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v19->__r_.__value_.__r.__words[1] + 7);
        v21 = HIBYTE(v19->__r_.__value_.__r.__words[2]);
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v47.__r_.__value_.__l.__data_);
        v47.__r_.__value_.__r.__words[0] = v20;
        v47.__r_.__value_.__l.__size_ = v53.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&v47.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7);
        *((_BYTE *)&v47.__r_.__value_.__s + 23) = v21;
        if (SHIBYTE(__p.__end_) < 0)
          operator delete(__p.__first_);
      }
      else
      {
        std::string::operator=(&v47, *(const std::string **)v18);
      }
      if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v47.__r_.__value_.__r.__words[2]);
      else
        size = v47.__r_.__value_.__l.__size_;
      std::string::basic_string[abi:ne180100]((uint64_t)&v53, size + 3);
      if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = &v53;
      else
        v23 = (std::string *)v53.__r_.__value_.__r.__words[0];
      if (size)
      {
        if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v24 = &v47;
        else
          v24 = (std::string *)v47.__r_.__value_.__r.__words[0];
        memmove(v23, v24, size);
      }
      *(_DWORD *)((char *)&v23->__r_.__value_.__l.__data_ + size) = 2112800;
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v25 = &v48;
      else
        v25 = (std::string *)v48.__r_.__value_.__r.__words[0];
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v26 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
      else
        v26 = v48.__r_.__value_.__l.__size_;
      v27 = std::string::append(&v53, (const std::string::value_type *)v25, v26);
      v28 = v27->__r_.__value_.__r.__words[0];
      v54[0] = v27->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v54 + 7) = *(std::string::size_type *)((char *)&v27->__r_.__value_.__r.__words[1] + 7);
      v29 = HIBYTE(v27->__r_.__value_.__r.__words[2]);
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      v30 = *(_QWORD *)(a3 + 8);
      v31 = *(_QWORD *)(a3 + 16);
      if (v30 >= v31)
      {
        v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *(_QWORD *)a3) >> 3);
        v35 = v34 + 1;
        if (v34 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v36 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - *(_QWORD *)a3) >> 3);
        if (2 * v36 > v35)
          v35 = 2 * v36;
        if (v36 >= 0x555555555555555)
          v37 = 0xAAAAAAAAAAAAAAALL;
        else
          v37 = v35;
        __p.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
        if (v37)
          v38 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(a3 + 16, v37);
        else
          v38 = 0;
        v39 = v38 + v34;
        __p.__first_ = v38;
        __p.__begin_ = v39;
        __p.__end_cap_.__value_ = &v38[v37];
        v40 = v54[0];
        v39->__r_.__value_.__r.__words[0] = v28;
        v39->__r_.__value_.__l.__size_ = v40;
        *(std::string::size_type *)((char *)&v39->__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v54 + 7);
        *((_BYTE *)&v39->__r_.__value_.__s + 23) = v29;
        __p.__end_ = v39 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__p);
        v33 = *(_QWORD *)(a3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&__p);
      }
      else
      {
        v32 = v54[0];
        *(_QWORD *)v30 = v28;
        *(_QWORD *)(v30 + 8) = v32;
        *(_QWORD *)(v30 + 15) = *(_QWORD *)((char *)v54 + 7);
        *(_BYTE *)(v30 + 23) = v29;
        v33 = v30 + 24;
        *(_QWORD *)(a3 + 8) = v30 + 24;
      }
      *(_QWORD *)(a3 + 8) = v33;
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v53.__r_.__value_.__l.__data_);
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v47.__r_.__value_.__l.__data_);
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v48.__r_.__value_.__l.__data_);
    }
    goto LABEL_66;
  }
LABEL_67:
  v42 = *(_QWORD *)a3;
  v41 = *(_QWORD *)(a3 + 8);
  if (v8)
  {
    v50 = v8;
    operator delete(v8);
  }
  return v42 != v41;
}

void sub_18882A4E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,uint64_t a28,std::__split_buffer<std::string> *a29)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_18882A5B0(uint64_t a1, std::string *a2)
{
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *i;
  _QWORD *v12;
  unint64_t v13;
  _BOOL8 v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;

  v4 = sub_18882A72C((pthread_mutex_t ****)a1, *(pthread_mutex_t ****)a1, (uint64_t)a2);
  v6 = v4;
  if ((_DWORD)v4 && *(_BYTE *)(*(_QWORD *)a1 + 40))
  {
    v7 = v5;
    switch((int)v4)
    {
      case 1:
      case 3:
      case 5:
        v8 = v5 + 2;
        goto LABEL_10;
      case 2:
        v8 = v5 + 4;
        goto LABEL_10;
      case 4:
        v9 = v5[3];
        goto LABEL_9;
      case 6:
        v9 = v5[2];
LABEL_9:
        v8 = (_QWORD *)(v9 + 16);
LABEL_10:
        v7 = (_QWORD *)*v8;
        break;
      case 7:
        break;
      default:
        v7 = 0;
        break;
    }
    v10 = *(_QWORD *)(a1 + 80);
    if (v7 != (_QWORD *)v10)
    {
      v12 = (_QWORD *)(a1 + 104);
      for (i = *(_QWORD **)(a1 + 104); i; i = (_QWORD *)*i)
      {
        v13 = i[4];
        if ((unint64_t)v7 >= v13)
        {
          if (v13 >= (unint64_t)v7)
            return v6;
          ++i;
        }
      }
      if ((_DWORD)v4 != 7)
        goto LABEL_28;
      v14 = AddrObjGoogle::protobuf::DescriptorBuilder::IsInPackage(v4, v10, (const void **)&a2->__r_.__value_.__l.__data_);
      if (v14)
        return v6;
      v15 = *(_QWORD **)(a1 + 96);
      if (v15 == v12)
      {
LABEL_28:
        *(_QWORD *)(a1 + 120) = v7;
        std::string::operator=((std::string *)(a1 + 128), a2);
        sub_188829F58();
        return qword_1EDF508B8;
      }
      while (1)
      {
        v16 = v15[4];
        if (v16)
        {
          LOBYTE(v14) = AddrObjGoogle::protobuf::DescriptorBuilder::IsInPackage(v14, v16, (const void **)&a2->__r_.__value_.__l.__data_);
          if (v14)
            break;
        }
        v17 = (_QWORD *)v15[1];
        if (v17)
        {
          do
          {
            v18 = v17;
            v17 = (_QWORD *)*v17;
          }
          while (v17);
        }
        else
        {
          do
          {
            v18 = (_QWORD *)v15[2];
            v19 = *v18 == (_QWORD)v15;
            v15 = v18;
          }
          while (!v19);
        }
        v15 = v18;
        if (v18 == v12)
          goto LABEL_28;
      }
    }
  }
  return v6;
}

unint64_t sub_18882A72C(pthread_mutex_t ****a1, pthread_mutex_t ***a2, uint64_t a3)
{
  pthread_mutex_t **v6;
  int8x8_t *v7;
  const char *v8;
  char v9;
  unint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int8x8_t v13;
  uint8x8_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t **v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  pthread_mutex_t **v23;
  unint64_t v24;
  int8x8_t *v25;
  char v26;
  unint64_t v27;
  unsigned __int8 *v28;
  int v29;
  uint64_t *v30;
  uint64_t *v31;
  int8x8_t v32;
  uint8x8_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t **v36;
  uint64_t *i;
  unint64_t v38;
  pthread_mutex_t **v39;

  if (*a1 == a2)
  {
    v39 = 0;
  }
  else
  {
    v6 = *a2;
    v39 = v6;
    if (v6)
      AddrObjGoogle::protobuf::internal::Mutex::Lock(v6);
  }
  v7 = (int8x8_t *)a2[4];
  if (*(char *)(a3 + 23) >= 0)
    v8 = (const char *)a3;
  else
    v8 = *(const char **)a3;
  v9 = *v8;
  if (*v8)
  {
    v10 = 0;
    v11 = (unsigned __int8 *)(v8 + 1);
    do
    {
      v10 = 5 * v10 + v9;
      v12 = *v11++;
      v9 = v12;
    }
    while (v12);
  }
  else
  {
    v10 = 0;
  }
  v13 = v7[26];
  if (!*(_QWORD *)&v13)
    goto LABEL_29;
  v14 = (uint8x8_t)vcnt_s8(v13);
  v14.i16[0] = vaddlv_u8(v14);
  v15 = v14.u32[0];
  if (v14.u32[0] > 1uLL)
  {
    v16 = v10;
    if (v10 >= *(_QWORD *)&v13)
      v16 = v10 % *(_QWORD *)&v13;
  }
  else
  {
    v16 = (*(_QWORD *)&v13 - 1) & v10;
  }
  v17 = *(uint64_t ***)(*(_QWORD *)&v7[25] + 8 * v16);
  if (!v17 || (v18 = *v17) == 0)
  {
LABEL_29:
    sub_188829F58();
    v31 = &qword_1EDF508B8;
    v30 = &qword_1EDF508B8;
    goto LABEL_30;
  }
  while (1)
  {
    v19 = v18[1];
    if (v10 == v19)
      break;
    if (v15 > 1)
    {
      if (v19 >= *(_QWORD *)&v13)
        v19 %= *(_QWORD *)&v13;
    }
    else
    {
      v19 &= *(_QWORD *)&v13 - 1;
    }
    if (v19 != v16)
      goto LABEL_29;
LABEL_28:
    v18 = (uint64_t *)*v18;
    if (!v18)
      goto LABEL_29;
  }
  if (strcmp((const char *)v18[2], v8))
    goto LABEL_28;
  v30 = v18 + 3;
  v31 = &qword_1EDF508B8;
LABEL_30:
  v20 = *v30;
  v21 = HIDWORD(*v30);
  if (!*v30)
  {
    v23 = a2[3];
    if (!v23 || (v24 = sub_18882A72C(a1, v23, a3), LODWORD(v20) = v24, v21 = HIDWORD(v24), !(_DWORD)v24))
    {
      if (AddrObjGoogle::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((AddrObjGoogle::protobuf::DescriptorPool *)a2, a3))
      {
        v25 = (int8x8_t *)a2[4];
        if (*(char *)(a3 + 23) < 0)
          a3 = *(_QWORD *)a3;
        v26 = *(_BYTE *)a3;
        if (*(_BYTE *)a3)
        {
          v27 = 0;
          v28 = (unsigned __int8 *)(a3 + 1);
          do
          {
            v27 = 5 * v27 + v26;
            v29 = *v28++;
            v26 = v29;
          }
          while (v29);
        }
        else
        {
          v27 = 0;
        }
        v32 = v25[26];
        if (v32)
        {
          v33 = (uint8x8_t)vcnt_s8(v32);
          v33.i16[0] = vaddlv_u8(v33);
          v34 = v33.u32[0];
          if (v33.u32[0] > 1uLL)
          {
            v35 = v27;
            if (v27 >= *(_QWORD *)&v32)
              v35 = v27 % *(_QWORD *)&v32;
          }
          else
          {
            v35 = (*(_QWORD *)&v32 - 1) & v27;
          }
          v36 = *(uint64_t ***)(*(_QWORD *)&v25[25] + 8 * v35);
          if (v36)
          {
            for (i = *v36; i; i = (uint64_t *)*i)
            {
              v38 = i[1];
              if (v27 == v38)
              {
                if (!strcmp((const char *)i[2], (const char *)a3))
                {
                  v31 = i + 3;
                  goto LABEL_60;
                }
              }
              else
              {
                if (v34 > 1)
                {
                  if (v38 >= *(_QWORD *)&v32)
                    v38 %= *(_QWORD *)&v32;
                }
                else
                {
                  v38 &= *(_QWORD *)&v32 - 1;
                }
                if (v38 != v35)
                  break;
              }
            }
          }
        }
        sub_188829F58();
LABEL_60:
        v20 = *v31;
        v21 = HIDWORD(*v31);
      }
      else
      {
        LODWORD(v20) = 0;
      }
    }
  }
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v39);
  return v20 | ((unint64_t)v21 << 32);
}

void sub_18882AA10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((pthread_mutex_t ***)va);
  _Unwind_Resume(a1);
}

void sub_18882AA28(void **this)
{
  *this = off_1E1BFEFA0;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  addr_obj::Localization::getDisplayLanguage((addr_obj::Localization *)this);
  JUMPOUT(0x18D76437CLL);
}

std::string *sub_18882AA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string *v5;
  int v6;
  const std::string::value_type *v7;
  std::string::size_type v8;

  v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a1 + 31))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(a1 + 16))
LABEL_3:
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  v6 = *(char *)(a4 + 23);
  if (v6 >= 0)
    v7 = (const std::string::value_type *)a4;
  else
    v7 = *(const std::string::value_type **)a4;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a4 + 23);
  else
    v8 = *(_QWORD *)(a4 + 8);
  return std::string::append(v5, v7, v8);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
  addr_obj::Localization::getDisplayLanguage(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  addr_obj::Localization *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = ***(addr_obj::Localization ****)(a1 + 8);
  if (v6)
    addr_obj::Localization::getDisplayLanguage(v6);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 152))(a2);
  v8 = sub_188826418(*(_QWORD *)(a1 + 8), a3, *(_QWORD *)(v7 + 8), 0);
  if (v8 == 1)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v7 + 32) + 64))
      return 0;
    v11 = *(unsigned int *)(v9 + 104);
    if ((int)v11 < 1)
      return 0;
    for (result = *(_QWORD *)(v9 + 112);
          *(_QWORD *)(result + 56) != v7
       || *(_DWORD *)(result + 44) != 11
       || *(_DWORD *)(result + 48) != 1
       || *(_QWORD *)(result + 72) != v9;
          result += 120)
    {
      if (!--v11)
        return 0;
    }
  }
  else
  {
    if (v8 != 2)
      return 0;
    result = v9;
    if (!*(_BYTE *)(v9 + 52))
      return 0;
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<AddrObjGoogle::protobuf::DescriptorPool::Tables::CheckPoint>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x924924924924925)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(28 * a2);
}

uint64_t *std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::__erase_unique<char const*>(_QWORD *a1, const char **a2)
{
  uint64_t *result;

  result = (uint64_t *)std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::find<char const*>(a1, a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::find<char const*>(_QWORD *a1, const char **a2)
{
  const char *v2;
  char v3;
  unint64_t v4;
  unsigned __int8 *v5;
  int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t ***v11;
  uint64_t **i;
  unint64_t v13;

  v2 = *a2;
  v3 = **a2;
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      v4 = 5 * v4 + v3;
      v6 = *v5++;
      v3 = v6;
    }
    while (v6);
  }
  else
  {
    v4 = 0;
  }
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v4;
    if (v4 >= *(_QWORD *)&v7)
      v10 = v4 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v4;
  }
  v11 = *(uint64_t ****)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  for (i = *v11; i; i = (uint64_t **)*i)
  {
    v13 = (unint64_t)i[1];
    if (v13 == v4)
    {
      if (!strcmp((const char *)i[2], v2))
        return i;
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(_QWORD *)&v7)
          v13 %= *(_QWORD *)&v7;
      }
      else
      {
        v13 &= *(_QWORD *)&v7 - 1;
      }
      if (v13 != v10)
        return 0;
    }
  }
  return i;
}

uint64_t std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::erase(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *__p;

  v2 = *a2;
  std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::remove(a1, a2, (uint64_t)&__p);
  v3 = __p;
  __p = 0;
  if (v3)
    operator delete(v3);
  return v2;
}

_QWORD *std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::remove@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  v6 = *(_QWORD **)(*result + 8 * v4);
  do
  {
    v7 = v6;
    v6 = (_QWORD *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2)
    goto LABEL_18;
  v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(_QWORD *)&v3)
      v8 %= *(_QWORD *)&v3;
  }
  else
  {
    v8 &= *(_QWORD *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v9 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v4)
LABEL_19:
      *(_QWORD *)(*result + 8 * v4) = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v3)
        v11 %= *(_QWORD *)&v3;
    }
    else
    {
      v11 &= *(_QWORD *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(_QWORD *)(*result + 8 * v11) = v7;
      v10 = *a2;
    }
  }
  *v7 = v10;
  *a2 = 0;
  --result[3];
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(uint64_t **a1, unint64_t *a2)
{
  uint64_t *v3;
  uint64_t *v4;

  v3 = std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::find<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3)
    return 0;
  v4 = v3;
  std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__remove_node_pointer(a1, v3);
  operator delete(v4);
  return 1;
}

void std::vector<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>::__append(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  _DWORD *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_DWORD **)(v4 - 8);
  if (a2 <= (v6 - (_BYTE *)v7) >> 4)
  {
    if (a2)
    {
      v14 = &v7[4 * a2];
      do
      {
        *(_QWORD *)v7 = 0;
        v7[2] = 0;
        v7 += 4;
      }
      while (v7 != v14);
      v7 = v14;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = (char *)v7 - (_BYTE *)*a1;
    v9 = a2 + (v8 >> 4);
    if (v9 >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 4;
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 3 > v9)
      v9 = v11 >> 3;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0)
      v12 = 0xFFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(v4, v12);
    else
      v13 = 0;
    v15 = &v13[16 * v10];
    v16 = &v15[16 * a2];
    v17 = v15;
    do
    {
      *(_QWORD *)v17 = 0;
      *((_DWORD *)v17 + 2) = 0;
      v17 += 16;
    }
    while (v17 != v16);
    v18 = &v13[16 * v12];
    v20 = (char *)*a1;
    v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v19 - 1);
        v15 -= 16;
        v19 -= 16;
      }
      while (v19 != v20);
      v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v18;
    if (v19)
      operator delete(v19);
  }
}

void *std::__hash_table<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::hash<char const*>,AddrObjGoogle::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>,AddrObjGoogle::protobuf::streq,AddrObjGoogle::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,AddrObjGoogle::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,AddrObjGoogle::protobuf::FileDescriptor const*>>(uint64_t a1, const char **a2, _OWORD *a3)
{
  unint64_t v3;
  const char *v6;
  char v7;
  unint64_t v8;
  unsigned __int8 *v9;
  int v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v6 = *a2;
  v7 = **a2;
  if (v7)
  {
    v8 = 0;
    v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      v8 = 5 * v8 + v7;
      v10 = *v9++;
      v7 = v10;
    }
    while (v10);
  }
  else
  {
    v8 = 0;
  }
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v11)
        v3 = v8 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v8;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v8)
        {
          if (!strcmp(*((const char **)i + 2), v6))
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v8;
  *((_OWORD *)i + 1) = *a3;
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11)
        v3 = v8 % v11;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v11 - 1) & v8;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v24)
  {
    *(_QWORD *)i = *v24;
LABEL_43:
    *v24 = i;
    goto LABEL_44;
  }
  *(_QWORD *)i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v23 + 8 * v3) = a1 + 16;
  if (*(_QWORD *)i)
  {
    v25 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v25 >= v11)
        v25 %= v11;
    }
    else
    {
      v25 &= v11 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_43;
  }
LABEL_44:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_18882B29C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::pair<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int> const,AddrObjGoogle::protobuf::FieldDescriptor const*>>(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v5;
  _OWORD *v6;
  uint64_t **v7;
  uint64_t v9;

  v5 = std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>((uint64_t)a1, &v9, a2);
  v6 = (_OWORD *)*v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = operator new(0x38uLL);
    v6[2] = *(_OWORD *)a3;
    *((_QWORD *)v6 + 6) = *(_QWORD *)(a3 + 16);
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *std::__tree<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>,std::less<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>,AddrObjGoogle::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<AddrObjGoogle::protobuf::Descriptor const*,int>>(uint64_t a1, _QWORD *a2, unint64_t *a3)
{
  uint64_t *result;
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  int v7;
  uint64_t *v8;
  unint64_t v9;
  int v10;

  v5 = *(uint64_t **)(a1 + 8);
  result = (uint64_t *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = *a3;
    v7 = *((_DWORD *)a3 + 2);
    while (1)
    {
      while (1)
      {
        v8 = v4;
        v9 = v4[4];
        if (v6 >= v9)
          break;
LABEL_4:
        v4 = (uint64_t *)*v8;
        result = v8;
        if (!*v8)
          goto LABEL_12;
      }
      if (v9 >= v6)
      {
        v10 = *((_DWORD *)v8 + 10);
        if (v7 < v10)
          goto LABEL_4;
        if (v10 >= v7)
          goto LABEL_12;
      }
      result = v8 + 1;
      v4 = (uint64_t *)v8[1];
      if (!v4)
        goto LABEL_12;
    }
  }
  v8 = result;
LABEL_12:
  *a2 = v8;
  return result;
}

AddrObjGoogle::protobuf::DescriptorPool::Tables **AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::DescriptorPool::Tables>::~scoped_ptr(AddrObjGoogle::protobuf::DescriptorPool::Tables **a1)
{
  AddrObjGoogle::protobuf::DescriptorPool::Tables *v2;

  v2 = *a1;
  if (v2)
  {
    AddrObjGoogle::protobuf::DescriptorPool::Tables::~Tables(v2);
    MEMORY[0x18D76437C]();
  }
  return a1;
}

unsigned __int8 *std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(_QWORD *a1, _BYTE *a2)
{
  _BYTE *v3;
  char v4;
  unint64_t v5;
  unsigned __int8 *v6;
  int v7;
  int8x8_t v8;
  uint8x8_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 **v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *(_BYTE **)a2;
  if ((char)a2[23] >= 0)
    v3 = a2;
  v4 = *v3;
  if (*v3)
  {
    v5 = 0;
    v6 = v3 + 1;
    do
    {
      v5 = 5 * v5 + v4;
      v7 = *v6++;
      v4 = v7;
    }
    while (v7);
  }
  else
  {
    v5 = 0;
  }
  v8 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v8)
    return 0;
  v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    v11 = v5;
    if (v5 >= *(_QWORD *)&v8)
      v11 = v5 % *(_QWORD *)&v8;
  }
  else
  {
    v11 = (*(_QWORD *)&v8 - 1) & v5;
  }
  v12 = *(unsigned __int8 ***)(*a1 + 8 * v11);
  if (!v12)
    return 0;
  v13 = *v12;
  if (*v12)
  {
    v14 = (uint64_t)(a1 + 4);
    do
    {
      v15 = *((_QWORD *)v13 + 1);
      if (v5 == v15)
      {
        if ((std::equal_to<std::string>::operator()[abi:ne180100](v14, v13 + 16, a2) & 1) != 0)
          return v13;
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(_QWORD *)&v8)
            v15 %= *(_QWORD *)&v8;
        }
        else
        {
          v15 &= *(_QWORD *)&v8 - 1;
        }
        if (v15 != v11)
          return 0;
      }
      v13 = *(unsigned __int8 **)v13;
    }
    while (v13);
  }
  return v13;
}

unsigned __int8 *std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  unint64_t v3;
  _BYTE *v7;
  char v8;
  unint64_t v9;
  unsigned __int8 *v10;
  int v11;
  unint64_t v12;
  uint8x8_t v13;
  unint64_t v14;
  unsigned __int8 **v15;
  unsigned __int8 *i;
  unint64_t v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD v27[3];

  v7 = *(_BYTE **)a2;
  if ((char)a2[23] >= 0)
    v7 = a2;
  v8 = *v7;
  if (*v7)
  {
    v9 = 0;
    v10 = v7 + 1;
    do
    {
      v9 = 5 * v9 + v8;
      v11 = *v10++;
      v8 = v11;
    }
    while (v11);
  }
  else
  {
    v9 = 0;
  }
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      v3 = v9;
      if (v9 >= v12)
        v3 = v9 % v12;
    }
    else
    {
      v3 = (v12 - 1) & v9;
    }
    v15 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v3);
    if (v15)
    {
      for (i = *v15; i; i = *(unsigned __int8 **)i)
      {
        v17 = *((_QWORD *)i + 1);
        if (v17 == v9)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12)
              v17 %= v12;
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v3)
            break;
        }
      }
    }
  }
  std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(a1, v9, a3, (uint64_t)v27);
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    v20 = 1;
    if (v12 >= 3)
      v20 = (v12 & (v12 - 1)) != 0;
    v21 = v20 | (2 * v12);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v23);
    v12 = *(_QWORD *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v9 >= v12)
        v3 = v9 % v12;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v12 - 1) & v9;
    }
  }
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v24)
  {
    *(_QWORD *)v27[0] = *v24;
    *v24 = v27[0];
  }
  else
  {
    *(_QWORD *)v27[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v27[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v27[0])
    {
      v25 = *(_QWORD *)(*(_QWORD *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12)
          v25 %= v12;
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v25) = v27[0];
    }
  }
  i = (unsigned __int8 *)v27[0];
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_18882B780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p)
    std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]((uint64_t)&a11, __p);
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  std::string *v9;

  v7 = a1 + 16;
  v8 = operator new(0x28uLL);
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  v9 = (std::string *)(v8 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v9->__r_.__value_.__r.__words[2] = *(_QWORD *)(a3 + 16);
  }
  *(_BYTE *)(a4 + 16) = 1;
}

void sub_18882B828(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0)
      operator delete(__p[2]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void sub_18882B890(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

uint64_t std::pair<std::string,std::string>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

AddrObjGoogle::protobuf::FileOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::FileOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::FileOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::FileOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::FileOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::FileOptions *v16;

  v2 = (AddrObjGoogle::protobuf::FileOptions *)operator new();
  AddrObjGoogle::protobuf::FileOptions::FileOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::FileOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::FileOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::FileOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882BA10(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

void sub_18882BA34(void **a1, __int128 *a2)
{
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  char *v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v4 = (char *)a1[1];
  v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    v9 = (v4 - (_BYTE *)*a1) >> 6;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 58)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 5 > v10)
      v10 = v11 >> 5;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFC0)
      v12 = 0x3FFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 >> 58)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v13 = (char *)operator new(v12 << 6);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[64 * v9];
    *(_OWORD *)v14 = *a2;
    *((_QWORD *)v14 + 2) = *((_QWORD *)a2 + 2);
    v15 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)a2 + 2) = 0;
    *((_QWORD *)a2 + 3) = 0;
    *(_QWORD *)a2 = 0;
    *((_QWORD *)a2 + 1) = 0;
    *(_OWORD *)(v14 + 24) = v15;
    *((_QWORD *)v14 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    v16 = (char *)*a1;
    v17 = (char *)a1[1];
    if (v17 == *a1)
    {
      v8 = v14 + 64;
      *a1 = v14;
      a1[1] = v14 + 64;
      a1[2] = &v13[64 * v12];
    }
    else
    {
      v18 = &v13[64 * v9];
      do
      {
        v19 = *((_OWORD *)v17 - 4);
        *((_QWORD *)v18 - 6) = *((_QWORD *)v17 - 6);
        *((_OWORD *)v18 - 4) = v19;
        *((_QWORD *)v17 - 7) = 0;
        *((_QWORD *)v17 - 6) = 0;
        *((_QWORD *)v17 - 8) = 0;
        v20 = *(_OWORD *)(v17 - 40);
        *((_QWORD *)v18 - 3) = *((_QWORD *)v17 - 3);
        *(_OWORD *)(v18 - 40) = v20;
        *((_QWORD *)v17 - 4) = 0;
        *((_QWORD *)v17 - 3) = 0;
        *((_QWORD *)v17 - 5) = 0;
        *((_OWORD *)v18 - 1) = *((_OWORD *)v17 - 1);
        v18 -= 64;
        v17 -= 64;
      }
      while (v17 != v16);
      v17 = (char *)*a1;
      v21 = (uint64_t)a1[1];
      v8 = v14 + 64;
      *a1 = v18;
      a1[1] = v14 + 64;
      a1[2] = &v13[64 * v12];
      while ((char *)v21 != v17)
      {
        v21 -= 64;
        sub_18882B890(v21);
      }
    }
    if (v17)
      operator delete(v17);
  }
  else
  {
    v6 = *a2;
    *((_QWORD *)v4 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v4 = v6;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v7 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)v4 + 5) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)a2 + 3) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    v8 = v4 + 64;
  }
  a1[1] = v8;
}

std::string *sub_18882BBEC(std::string *this, __int128 *a2, __int128 *a3, std::string::size_type a4, std::string::size_type a5)
{
  __int128 v9;
  std::string *v10;
  __int128 v11;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v9 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v9;
  }
  v10 = this + 1;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v10, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v11 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  this[2].__r_.__value_.__r.__words[0] = a4;
  this[2].__r_.__value_.__l.__size_ = a5;
  return this;
}

void sub_18882BC78(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(*(std::string **)(a1 + 8), *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *(_QWORD *)(v3 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v3 = v4;
  }
  *(_QWORD *)(a1 + 8) = v3 + 24;
}

void sub_18882BCE8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t **v5;
  uint64_t *result;
  uint64_t *v7;
  uint64_t v8;

  v5 = (uint64_t **)std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  result = *v5;
  if (!*v5)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  std::string *v7;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x38uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v7->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
  }
  *(_BYTE *)(a3 + 16) = 1;
}

void sub_18882BDEC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::pair<void const*,int>>,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::Descriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::MessageOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::MessageOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 32) = v10;
  if (*((int *)v10 + 12) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18882BEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::MessageOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::MessageOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::MessageOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::MessageOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::MessageOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::MessageOptions *v16;

  v2 = (AddrObjGoogle::protobuf::MessageOptions *)operator new();
  AddrObjGoogle::protobuf::MessageOptions::MessageOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::MessageOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::MessageOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::MessageOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882C004(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::FieldDescriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::FieldOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::FieldOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 96) = v10;
  if (*((int *)v10 + 16) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18882C0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::FieldOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::FieldOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::FieldOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::FieldOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::FieldOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::FieldOptions *v16;

  v2 = (AddrObjGoogle::protobuf::FieldOptions *)operator new();
  AddrObjGoogle::protobuf::FieldOptions::FieldOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::FieldOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::FieldOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::FieldOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882C224(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::EnumDescriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::EnumOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::EnumOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 32) = v10;
  if (*((int *)v10 + 12) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18882C31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::EnumOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::EnumOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::EnumOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::EnumOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::EnumOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::EnumOptions *v16;

  v2 = (AddrObjGoogle::protobuf::EnumOptions *)operator new();
  AddrObjGoogle::protobuf::EnumOptions::EnumOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::EnumOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::EnumOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::EnumOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882C444(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::EnumValueDescriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::EnumValueOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::EnumValueOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 32) = v10;
  if (*((int *)v10 + 12) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18882C53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::EnumValueOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::EnumValueOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::EnumValueOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::EnumValueOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::EnumValueOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::EnumValueOptions *v16;

  v2 = (AddrObjGoogle::protobuf::EnumValueOptions *)operator new();
  AddrObjGoogle::protobuf::EnumValueOptions::EnumValueOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::EnumValueOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::EnumValueOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::EnumValueOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882C664(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::ServiceDescriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::ServiceOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::ServiceOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 24) = v10;
  if (*((int *)v10 + 12) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18882C75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::ServiceOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::ServiceOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::ServiceOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::ServiceOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::ServiceOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::ServiceOptions *v16;

  v2 = (AddrObjGoogle::protobuf::ServiceOptions *)operator new();
  AddrObjGoogle::protobuf::ServiceOptions::ServiceOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::ServiceOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::ServiceOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::ServiceOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882C884(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::DescriptorBuilder::AllocateOptionsImpl<AddrObjGoogle::protobuf::MethodDescriptor>(uint64_t a1, __int128 *a2, __int128 *a3, AddrObjGoogle::protobuf::MessageLite *a4, uint64_t a5)
{
  AddrObjGoogle::protobuf::MethodOptions *v10;
  std::string __p;
  void *v12;
  char v13;

  v10 = AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::MethodOptions>(*(_QWORD **)(a1 + 8));
  AddrObjGoogle::protobuf::MessageLite::SerializeAsString(a4, &__p);
  AddrObjGoogle::protobuf::MessageLite::ParseFromString((uint64_t)v10, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(a5 + 40) = v10;
  if (*((int *)v10 + 12) >= 1)
  {
    sub_18882BBEC(&__p, a2, a3, (std::string::size_type)a4, (std::string::size_type)v10);
    sub_18882BA34((void **)(a1 + 24), (__int128 *)&__p);
    if (v13 < 0)
      operator delete(v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18882C97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  std::pair<std::string,std::string>::~pair((uint64_t)&__p);
  _Unwind_Resume(a1);
}

AddrObjGoogle::protobuf::MethodOptions *AddrObjGoogle::protobuf::DescriptorPool::Tables::AllocateMessage<AddrObjGoogle::protobuf::MethodOptions>(_QWORD *a1)
{
  AddrObjGoogle::protobuf::MethodOptions *v2;
  unint64_t v3;
  AddrObjGoogle::protobuf::MethodOptions **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  AddrObjGoogle::protobuf::MethodOptions **v12;
  char *v13;
  char *v14;
  char *v15;
  AddrObjGoogle::protobuf::MethodOptions *v16;

  v2 = (AddrObjGoogle::protobuf::MethodOptions *)operator new();
  AddrObjGoogle::protobuf::MethodOptions::MethodOptions(v2);
  v3 = a1[18];
  v4 = (AddrObjGoogle::protobuf::MethodOptions **)a1[17];
  if ((unint64_t)v4 >= v3)
  {
    v6 = a1[16];
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a1 + 18), v10);
    else
      v11 = 0;
    v12 = (AddrObjGoogle::protobuf::MethodOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    *v12 = v2;
    v5 = v12 + 1;
    v15 = (char *)a1[16];
    v14 = (char *)a1[17];
    if (v14 != v15)
    {
      do
      {
        v16 = (AddrObjGoogle::protobuf::MethodOptions *)*((_QWORD *)v14 - 1);
        v14 -= 8;
        *--v12 = v16;
      }
      while (v14 != v15);
      v14 = (char *)a1[16];
    }
    a1[16] = v12;
    a1[17] = v5;
    a1[18] = v13;
    if (v14)
      operator delete(v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[17] = v5;
  return v2;
}

void sub_18882CAA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  int v8;
  uint64_t **v9;
  int v10;
  _DWORD *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((_QWORD *)v11 + 6) = 0;
    *((_QWORD *)v11 + 7) = 0;
    *((_QWORD *)v11 + 5) = 0;
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

AddrObjGoogle::protobuf::UnknownFieldSet **AddrObjGoogle::protobuf::internal::scoped_ptr<AddrObjGoogle::protobuf::UnknownFieldSet>::~scoped_ptr(AddrObjGoogle::protobuf::UnknownFieldSet **a1)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v2;

  v2 = *a1;
  if (v2)
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
    MEMORY[0x18D76437C]();
  }
  return a1;
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  uint64_t *v1;
  uint64_t v2;
  AddrObjGoogle::protobuf::UnknownFieldSet *v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(uint64_t **)this;
  v2 = *(_QWORD *)(*(_QWORD *)this + 8);
  if (v2 != **(_QWORD **)this)
  {
    v3 = this;
    v4 = 0;
    v5 = 0;
    v2 = **(_QWORD **)this;
    do
    {
      this = AddrObjGoogle::protobuf::UnknownField::Delete((AddrObjGoogle::protobuf::UnknownFieldSet *)(v2 + v4));
      ++v5;
      v1 = *(uint64_t **)v3;
      v2 = **(_QWORD **)v3;
      v4 += 16;
    }
    while (v5 < (*(_QWORD *)(*(_QWORD *)v3 + 8) - v2) >> 4);
  }
  v1[1] = v2;
  return this;
}

AddrObjGoogle::protobuf::UnknownFieldSet *AddrObjGoogle::protobuf::UnknownField::Delete(AddrObjGoogle::protobuf::UnknownFieldSet *this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)this >> 29;
  if (v1 == 4)
  {
    this = (AddrObjGoogle::protobuf::UnknownFieldSet *)*((_QWORD *)this + 1);
    if (this)
    {
      AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet(this);
      goto LABEL_10;
    }
  }
  else if (v1 == 3)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0)
        operator delete(*(void **)v2);
LABEL_10:
      JUMPOUT(0x18D76437CLL);
    }
  }
  return this;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddField(void ***this, const AddrObjGoogle::protobuf::UnknownField *a2)
{
  void **v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  v4 = *this;
  if (!*this)
  {
    v4 = (void **)operator new();
    v4[1] = 0;
    v4[2] = 0;
    *v4 = 0;
    *this = v4;
  }
  v5 = (unint64_t)v4[2];
  v6 = v4[1];
  if ((unint64_t)v6 >= v5)
  {
    v8 = ((char *)v6 - (_BYTE *)*v4) >> 4;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = v5 - (_QWORD)*v4;
    if (v10 >> 3 > v9)
      v9 = v10 >> 3;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v4 + 2), v11);
    else
      v12 = 0;
    v13 = &v12[16 * v8];
    v14 = &v12[16 * v11];
    *(_OWORD *)v13 = *(_OWORD *)a2;
    v7 = v13 + 16;
    v16 = (char *)*v4;
    v15 = (char *)v4[1];
    if (v15 != *v4)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v15 - 1);
        v13 -= 16;
        v15 -= 16;
      }
      while (v15 != v16);
      v15 = (char *)*v4;
    }
    *v4 = v13;
    v4[1] = v7;
    v4[2] = v14;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *v6 = *(_OWORD *)a2;
    v7 = v6 + 1;
  }
  v4[1] = v7;
  AddrObjGoogle::protobuf::UnknownField::DeepCopy((const AddrObjGoogle::protobuf::UnknownFieldSet **)(*this)[1] - 2);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(uint64_t **this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  int v7;

  if (!*this)
    return 0;
  v1 = **this;
  v2 = (*this)[1];
  v3 = (((_DWORD)v2 - (_DWORD)v1) & 0xFFFFFFF0) + 24;
  if (v2 != v1)
  {
    v5 = 0;
    v6 = 0;
    do
    {
      v7 = *(_DWORD *)(v1 + v5) >> 29;
      if (v7 == 4)
      {
        v3 = v3
           + AddrObjGoogle::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(*(AddrObjGoogle::protobuf::UnknownFieldSet **)(v1 + v5 + 8))
           + 8;
      }
      else if (v7 == 3)
      {
        v3 = v3
           + AddrObjGoogle::protobuf::internal::StringSpaceUsedExcludingSelf(*(_QWORD *)(v1 + v5 + 8))
           + 24;
      }
      ++v6;
      v1 = **this;
      v5 += 16;
    }
    while (v6 < ((*this)[1] - v1) >> 4);
  }
  return v3;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddVarint(void ***this, int a2, uint64_t a3)
{
  void **v5;
  int v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v5 = *this;
  if (!*this)
  {
    v5 = (void **)operator new();
    v5[1] = 0;
    v5[2] = 0;
    *v5 = 0;
    *this = v5;
  }
  v7 = a2 & 0x1FFFFFFF;
  v8 = (char *)v5[2];
  v9 = (char *)v5[1];
  if (v9 >= v8)
  {
    v11 = (v9 - (_BYTE *)*v5) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v13 = v8 - (_BYTE *)*v5;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v5 + 2), v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = v7;
    *((_QWORD *)v16 + 1) = a3;
    v10 = v16 + 16;
    v19 = (char *)*v5;
    v18 = (char *)v5[1];
    if (v18 != *v5)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = (char *)*v5;
    }
    *v5 = v16;
    v5[1] = v10;
    v5[2] = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *(_DWORD *)v9 = v7;
    *((_QWORD *)v9 + 1) = a3;
    v10 = v9 + 16;
  }
  v5[1] = v10;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed32(void ***this, int a2, int a3)
{
  void **v5;
  int v7;
  unint64_t v8;
  int *v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  char *v18;
  char *v19;

  v5 = *this;
  if (!*this)
  {
    v5 = (void **)operator new();
    v5[1] = 0;
    v5[2] = 0;
    *v5 = 0;
    *this = v5;
  }
  v7 = a2 & 0x1FFFFFFF | 0x20000000;
  v8 = (unint64_t)v5[2];
  v9 = (int *)v5[1];
  if ((unint64_t)v9 >= v8)
  {
    v11 = ((char *)v9 - (_BYTE *)*v5) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v13 = v8 - (_QWORD)*v5;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v5 + 2), v14);
    else
      v15 = 0;
    v16 = (int *)&v15[16 * v11];
    v17 = &v15[16 * v14];
    *v16 = v7;
    v16[2] = a3;
    v10 = v16 + 4;
    v19 = (char *)*v5;
    v18 = (char *)v5[1];
    if (v18 != *v5)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 4;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = (char *)*v5;
    }
    *v5 = v16;
    v5[1] = v10;
    v5[2] = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *v9 = v7;
    v9[2] = a3;
    v10 = v9 + 4;
  }
  v5[1] = v10;
}

void AddrObjGoogle::protobuf::UnknownFieldSet::AddFixed64(void ***this, int a2, uint64_t a3)
{
  void **v5;
  int v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v5 = *this;
  if (!*this)
  {
    v5 = (void **)operator new();
    v5[1] = 0;
    v5[2] = 0;
    *v5 = 0;
    *this = v5;
  }
  v7 = a2 & 0x1FFFFFFF | 0x40000000;
  v8 = (char *)v5[2];
  v9 = (char *)v5[1];
  if (v9 >= v8)
  {
    v11 = (v9 - (_BYTE *)*v5) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v13 = v8 - (_BYTE *)*v5;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v5 + 2), v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = v7;
    *((_QWORD *)v16 + 1) = a3;
    v10 = v16 + 16;
    v19 = (char *)*v5;
    v18 = (char *)v5[1];
    if (v18 != *v5)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = (char *)*v5;
    }
    *v5 = v16;
    v5[1] = v10;
    v5[2] = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *(_DWORD *)v9 = v7;
    *((_QWORD *)v9 + 1) = a3;
    v10 = v9 + 16;
  }
  v5[1] = v10;
}

_QWORD *AddrObjGoogle::protobuf::UnknownFieldSet::AddLengthDelimited(void ***this, int a2)
{
  void **v4;
  int v5;
  _QWORD *v6;
  void **v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  if (!*this)
  {
    v4 = (void **)operator new();
    v4[1] = 0;
    v4[2] = 0;
    *v4 = 0;
    *this = v4;
  }
  v5 = a2 & 0x1FFFFFFF | 0x60000000;
  v6 = (_QWORD *)operator new();
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  v7 = *this;
  v8 = (char *)v7[1];
  v9 = (char *)v7[2];
  if (v8 >= v9)
  {
    v11 = (v8 - (_BYTE *)*v7) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v13 = v9 - (_BYTE *)*v7;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v7 + 2), v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = v5;
    *((_QWORD *)v16 + 1) = v6;
    v10 = v16 + 16;
    v19 = (char *)*v7;
    v18 = (char *)v7[1];
    if (v18 != *v7)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = (char *)*v7;
    }
    *v7 = v16;
    v7[1] = v10;
    v7[2] = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *(_DWORD *)v8 = v5;
    *((_QWORD *)v8 + 1) = v6;
    v10 = v8 + 16;
  }
  v7[1] = v10;
  return v6;
}

_QWORD *AddrObjGoogle::protobuf::UnknownFieldSet::AddGroup(void ***this, int a2)
{
  void **v4;
  unsigned int v5;
  _QWORD *v6;
  void **v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  if (!*this)
  {
    v4 = (void **)operator new();
    v4[1] = 0;
    v4[2] = 0;
    *v4 = 0;
    *this = v4;
  }
  v5 = a2 & 0x1FFFFFFF | 0x80000000;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v7 = *this;
  v8 = (char *)v7[1];
  v9 = (char *)v7[2];
  if (v8 >= v9)
  {
    v11 = (v8 - (_BYTE *)*v7) >> 4;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v13 = v9 - (_BYTE *)*v7;
    if (v13 >> 3 > v12)
      v12 = v13 >> 3;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
      v14 = 0xFFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>((uint64_t)(v7 + 2), v14);
    else
      v15 = 0;
    v16 = &v15[16 * v11];
    v17 = &v15[16 * v14];
    *(_DWORD *)v16 = v5;
    *((_QWORD *)v16 + 1) = v6;
    v10 = v16 + 16;
    v19 = (char *)*v7;
    v18 = (char *)v7[1];
    if (v18 != *v7)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      v18 = (char *)*v7;
    }
    *v7 = v16;
    v7[1] = v10;
    v7[2] = v17;
    if (v18)
      operator delete(v18);
  }
  else
  {
    *(_DWORD *)v8 = v5;
    *((_QWORD *)v8 + 1) = v6;
    v10 = v8 + 16;
  }
  v7[1] = v10;
  return v6;
}

void AddrObjGoogle::protobuf::UnknownField::DeepCopy(const AddrObjGoogle::protobuf::UnknownFieldSet **this)
{
  int v2;
  std::string *v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  const AddrObjGoogle::protobuf::UnknownFieldSet *v5;
  __int128 v6;

  v2 = *(_DWORD *)this >> 29;
  if (v2 == 4)
  {
    v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)operator new();
    *(_QWORD *)v4 = 0;
    AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom(v4, this[1]);
  }
  else
  {
    if (v2 != 3)
      return;
    v3 = (std::string *)operator new();
    v4 = (AddrObjGoogle::protobuf::UnknownFieldSet *)v3;
    v5 = this[1];
    if (*((char *)v5 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v3, *(const std::string::value_type **)v5, *((_QWORD *)v5 + 1));
    }
    else
    {
      v6 = *(_OWORD *)v5;
      v3->__r_.__value_.__r.__words[2] = *((_QWORD *)v5 + 2);
      *(_OWORD *)&v3->__r_.__value_.__l.__data_ = v6;
    }
  }
  this[1] = v4;
}

void sub_18882D568(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::MergeFromCodedStream(void ***this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6;
  void **v8;

  v8 = 0;
  if (AddrObjGoogle::protobuf::internal::WireFormat::SkipMessage(a2, &v8, a3, a4) && *((_BYTE *)a2 + 36))
  {
    AddrObjGoogle::protobuf::UnknownFieldSet::MergeFrom(this, (const AddrObjGoogle::protobuf::UnknownFieldSet *)&v8);
    v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)&v8);
  return v6;
}

void sub_18882D5F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AddrObjGoogle::protobuf::UnknownFieldSet::~UnknownFieldSet((AddrObjGoogle::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromCodedStream(AddrObjGoogle::protobuf::UnknownFieldSet *this, AddrObjGoogle::protobuf::io::CodedInputStream *a2, AddrObjGoogle::protobuf::UnknownFieldSet *a3, AddrObjGoogle::protobuf::UnknownFieldSet *a4)
{
  if (*(_QWORD *)this)
    AddrObjGoogle::protobuf::UnknownFieldSet::ClearFallback(this);
  return AddrObjGoogle::protobuf::UnknownFieldSet::MergeFromCodedStream((void ***)this, a2, a3, a4);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(AddrObjGoogle::protobuf::UnknownFieldSet *a1, uint64_t a2)
{
  AddrObjGoogle::protobuf::UnknownFieldSet *v3;
  AddrObjGoogle::protobuf::UnknownFieldSet *v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD v8[5];
  __int128 v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v8[0] = a2;
  memset(&v8[1], 0, 30);
  v9 = xmmword_189C5ED80;
  v10 = 0;
  v11 = AddrObjGoogle::protobuf::io::CodedInputStream::default_recursion_limit_;
  v12 = 0;
  v13 = 0;
  AddrObjGoogle::protobuf::io::CodedInputStream::Refresh((AddrObjGoogle::protobuf::io::CodedInputStream *)v8);
  v5 = AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromCodedStream(a1, (AddrObjGoogle::protobuf::io::CodedInputStream *)v8, v3, v4);
  if (BYTE4(v8[4]))
    v6 = v5;
  else
    v6 = 0;
  AddrObjGoogle::protobuf::io::CodedInputStream::~CodedInputStream((AddrObjGoogle::protobuf::io::CodedInputStream *)v8);
  return v6;
}

void sub_18882D6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AddrObjGoogle::protobuf::io::CodedInputStream::~CodedInputStream((AddrObjGoogle::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromArray(AddrObjGoogle::protobuf::UnknownFieldSet *this, const void *a2, int a3)
{
  uint64_t v4;
  _BYTE v6[32];

  AddrObjGoogle::protobuf::io::ArrayInputStream::ArrayInputStream((uint64_t)v6, a2, a3, -1);
  v4 = AddrObjGoogle::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(this, (uint64_t)v6);
  AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream((AddrObjGoogle::protobuf::io::ArrayInputStream *)v6);
  return v4;
}

void sub_18882D71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream((AddrObjGoogle::protobuf::io::ArrayInputStream *)&a9);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnknownField::SerializeLengthDelimitedNoTag(AddrObjGoogle::protobuf::UnknownField *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char *v6;
  int v7;

  v3 = *((_QWORD *)this + 1);
  if (*(char *)(v3 + 23) < 0)
    v4 = *(_QWORD *)(v3 + 8);
  else
    LODWORD(v4) = *(unsigned __int8 *)(v3 + 23);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, v4);
  v5 = *(char *)(v3 + 23);
  if (v5 >= 0)
    v6 = (char *)v3;
  else
    v6 = *(char **)v3;
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(v3 + 23);
  else
    v7 = *(_DWORD *)(v3 + 8);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int (*a2)(uint64_t), _DWORD *a3)
{
  char *v6;
  unsigned int v7;
  uint64_t result;
  int v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;

  v14 = 0;
  v6 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
  {
    result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
    if (!(_DWORD)result)
      return result;
    v7 = v14;
  }
  else
  {
    v7 = *v6;
    v14 = v7;
    *((_QWORD *)this + 1) = v6 + 1;
  }
  v9 = AddrObjGoogle::protobuf::io::CodedInputStream::PushLimit(this, v7);
  if ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v15 = 0;
      v10 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v10 >= *((_QWORD *)this + 2) || *v10 < 0)
      {
        result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)this + 1) = v10 + 1;
      }
      if (a2(v11))
      {
        v12 = a3[2];
        if (v12 == a3[3])
        {
          AddrObjGoogle::protobuf::RepeatedField<int>::Reserve(a3, v12 + 1);
          v12 = a3[2];
        }
        v13 = *(_QWORD *)a3;
        a3[2] = v12 + 1;
        *(_DWORD *)(v13 + 4 * v12) = v11;
      }
    }
    while ((int)AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  AddrObjGoogle::protobuf::io::CodedInputStream::PopLimit((uint64_t)this, v9);
  return 1;
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, signed int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  if (a2 < 0)
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
  else
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteInt64(AddrObjGoogle::protobuf::internal::WireFormatLite *this, unint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteUInt32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, unsigned int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (2 * a2) ^ (a2 >> 31));
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteSInt64(AddrObjGoogle::protobuf::internal::WireFormatLite *this, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * (_DWORD)this);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, (2 * a2) ^ (a2 >> 63));
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed32(AddrObjGoogle::protobuf::internal::WireFormatLite *this, int a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (8 * (_DWORD)this) | 5);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFixed64(AddrObjGoogle::protobuf::internal::WireFormatLite *this, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, (8 * (_DWORD)this) | 1);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, a2);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteFloat(AddrObjGoogle::protobuf::internal::WireFormatLite *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, float a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * (_DWORD)this) | 5);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, SLODWORD(a3));
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteDouble(AddrObjGoogle::protobuf::internal::WireFormatLite *this, AddrObjGoogle::protobuf::io::CodedOutputStream *a2, double a3, AddrObjGoogle::protobuf::io::CodedOutputStream *a4)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * (_DWORD)this) | 1);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(uint64_t *)&a3);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteString(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  int v5;
  std::string *v6;
  unsigned int v7;
  int v8;
  char *v9;
  int v10;
  char v12;
  std::string v13[2];

  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(_QWORD *)(a2 + 8) >> 31)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/wire_format_lite.cc", 285);
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(_BYTE *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0)
    v7 = v5;
  else
    v7 = *(_DWORD *)(a2 + 8);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (char *)a2;
  else
    v9 = *(char **)a2;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(_DWORD *)(a2 + 8);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_18882DB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteBytes(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  int v5;
  std::string *v6;
  unsigned int v7;
  int v8;
  char *v9;
  int v10;
  char v12;
  std::string v13[2];

  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(_QWORD *)(a2 + 8) >> 31)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/wire_format_lite.cc", 292);
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(_BYTE *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0)
    v7 = v5;
  else
    v7 = *(_DWORD *)(a2 + 8);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  v8 = *(char *)(a2 + 23);
  if (v8 >= 0)
    v9 = (char *)a2;
  else
    v9 = *(char **)a2;
  if (v8 >= 0)
    v10 = *(unsigned __int8 *)(a2 + 23);
  else
    v10 = *(_DWORD *)(a2 + 8);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_18882DC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteGroup(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 3);
  (*(void (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(_QWORD *)a2 + 80))(a2, this);
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 4u);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessage(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  unsigned int v5;

  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 96))(a2);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  return (*(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(_QWORD *)a2 + 80))(a2, this);
}

uint64_t AddrObjGoogle::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(int a1, uint64_t a2, AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  signed int v5;
  int v6;
  BOOL v7;
  int v8;
  AddrObjGoogle::protobuf::io::CodedOutputStream *v9;
  uint64_t (*v10)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *);
  uint64_t v11;

  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 96))(a2);
  AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  v6 = *((_DWORD *)this + 4);
  v7 = __OFSUB__(v6, v5);
  v8 = v6 - v5;
  if (v8 < 0 != v7
    || (v9 = (AddrObjGoogle::protobuf::io::CodedOutputStream *)*((_QWORD *)this + 1),
        *((_QWORD *)this + 1) = (char *)v9 + v5,
        *((_DWORD *)this + 4) = v8,
        !v9))
  {
    v10 = *(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(_QWORD *)a2 + 80);
    v11 = a2;
    v9 = this;
  }
  else
  {
    v10 = *(uint64_t (**)(uint64_t, AddrObjGoogle::protobuf::io::CodedOutputStream *))(*(_QWORD *)a2 + 88);
    v11 = a2;
  }
  return v10(v11, v9);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayInputStream::ArrayInputStream(uint64_t this, const void *a2, int a3, int a4)
{
  int v4;

  *(_QWORD *)this = &off_1E1BF5EE0;
  *(_QWORD *)(this + 8) = a2;
  if (a4 <= 0)
    v4 = a3;
  else
    v4 = a4;
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

void AddrObjGoogle::protobuf::io::ArrayInputStream::~ArrayInputStream(AddrObjGoogle::protobuf::io::ArrayInputStream *this)
{
  addr_obj::Localization::getDisplayLanguage(this);
  JUMPOUT(0x18D76437CLL);
}

BOOL AddrObjGoogle::protobuf::io::ArrayInputStream::Next(AddrObjGoogle::protobuf::io::ArrayInputStream *this, const void **a2, int *a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v3 = *((int *)this + 6);
  v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5))
      v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 7) = v5;
    *a2 = (const void *)(*((_QWORD *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void AddrObjGoogle::protobuf::io::ArrayInputStream::BackUp(AddrObjGoogle::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 80);
    v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 82);
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 83);
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((_QWORD *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_18882DF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::io::ArrayInputStream::Skip(AddrObjGoogle::protobuf::io::ArrayInputStream *this, int a2)
{
  std::string *v4;
  int v5;
  int v6;
  int v7;
  _BOOL8 result;
  int v9;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 89);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_DWORD *)this + 4);
  v6 = *((_DWORD *)this + 6);
  v7 = v5 - v6;
  result = v5 - v6 >= a2;
  v9 = v6 + a2;
  if (v7 >= a2)
    v5 = v9;
  *((_DWORD *)this + 6) = v5;
  *((_DWORD *)this + 7) = 0;
  return result;
}

void sub_18882E040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayInputStream::ByteCount(AddrObjGoogle::protobuf::io::ArrayInputStream *this)
{
  return *((int *)this + 6);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayOutputStream::ArrayOutputStream(uint64_t this, void *a2, int a3, int a4)
{
  int v4;

  *(_QWORD *)this = &off_1E1BF5F20;
  *(_QWORD *)(this + 8) = a2;
  if (a4 <= 0)
    v4 = a3;
  else
    v4 = a4;
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

void AddrObjGoogle::protobuf::io::ArrayOutputStream::~ArrayOutputStream(AddrObjGoogle::protobuf::io::ArrayOutputStream *this)
{
  addr_obj::Localization::getDisplayLanguage(this);
  JUMPOUT(0x18D76437CLL);
}

BOOL AddrObjGoogle::protobuf::io::ArrayOutputStream::Next(AddrObjGoogle::protobuf::io::ArrayOutputStream *this, void **a2, int *a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v3 = *((int *)this + 6);
  v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5))
      v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 7) = v5;
    *a2 = (void *)(*((_QWORD *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void AddrObjGoogle::protobuf::io::ArrayOutputStream::BackUp(AddrObjGoogle::protobuf::io::ArrayOutputStream *this, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 133);
    v5 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    v6 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v6);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 135);
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 136);
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((_QWORD *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_18882E20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::ArrayOutputStream::ByteCount(AddrObjGoogle::protobuf::io::ArrayOutputStream *this)
{
  return *((int *)this + 6);
}

_QWORD *AddrObjGoogle::protobuf::io::StringOutputStream::StringOutputStream(_QWORD *result, uint64_t a2)
{
  *result = &off_1E1BF5F58;
  result[1] = a2;
  return result;
}

void AddrObjGoogle::protobuf::io::StringOutputStream::~StringOutputStream(AddrObjGoogle::protobuf::io::StringOutputStream *this)
{
  addr_obj::Localization::getDisplayLanguage(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::io::StringOutputStream::Next(AddrObjGoogle::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  std::string::size_type v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v6 = *((_QWORD *)this + 1);
  if (*(char *)(v6 + 23) < 0)
  {
    v7 = *(_QWORD *)(v6 + 8);
    v9 = (int)v7;
    v8 = (*(_QWORD *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if ((int)v7 < v8)
      goto LABEL_10;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(v6 + 23);
    if (v7 < 0x16)
    {
      v8 = 22;
      v9 = *(unsigned __int8 *)(v6 + 23);
      goto LABEL_10;
    }
    v9 = *(unsigned __int8 *)(v6 + 23);
  }
  if (2 * (int)v7 <= 16)
    v8 = 16;
  else
    v8 = (2 * v7);
LABEL_10:
  std::string::resize((std::string *)v6, v8, 0);
  v10 = (uint64_t *)*((_QWORD *)this + 1);
  if (*((char *)v10 + 23) < 0)
  {
    if (v10[1])
    {
      v10 = (uint64_t *)*v10;
      goto LABEL_16;
    }
  }
  else if (*((_BYTE *)v10 + 23))
  {
    goto LABEL_16;
  }
  v10 = 0;
LABEL_16:
  *a2 = (char *)v10 + v9;
  v11 = *((_QWORD *)this + 1);
  if (*(char *)(v11 + 23) < 0)
    v11 = *(_QWORD *)(v11 + 8);
  else
    LODWORD(v11) = *(unsigned __int8 *)(v11 + 23);
  *a3 = v11 - v7;
  return 1;
}

void AddrObjGoogle::protobuf::io::StringOutputStream::BackUp(AddrObjGoogle::protobuf::io::StringOutputStream *this, int a2)
{
  std::string *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  if (a2 < 0)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 177);
    v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)this + 1);
  LODWORD(v6) = *(char *)(v5 + 23);
  if ((v6 & 0x80000000) != 0)
    v7 = *(_QWORD *)(v5 + 8);
  else
    v7 = *(unsigned __int8 *)(v5 + 23);
  if (v7 < a2)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/zero_copy_stream_impl_lite.cc", 178);
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (target_->size()): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v5 = *((_QWORD *)this + 1);
    LOBYTE(v6) = *(_BYTE *)(v5 + 23);
  }
  if ((v6 & 0x80) != 0)
    v6 = *(_QWORD *)(v5 + 8);
  else
    v6 = v6;
  std::string::resize((std::string *)v5, v6 - a2, 0);
}

void sub_18882E444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::StringOutputStream::ByteCount(AddrObjGoogle::protobuf::io::StringOutputStream *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 1);
  if (*(char *)(v1 + 23) < 0)
    return *(_QWORD *)(v1 + 8);
  else
    return *(unsigned __int8 *)(v1 + 23);
}

uint64_t addr_obj::venue::Formatter::fromPattern(uint64_t result, int *a2, int a3)
{
  uint64_t v4;
  const addr_obj::venue::Template *v5;
  unint64_t v6;
  uint64_t v7;
  const addr_obj::venue::Template *v8;
  unint64_t v9;
  uint64_t v10;
  const addr_obj::venue::Template *v11;
  unint64_t v12;
  uint64_t v13;
  const addr_obj::venue::Template *v14;
  unint64_t v15;
  uint64_t v16;
  const addr_obj::venue::Template *v17;
  unint64_t v18;
  uint64_t v19;
  const addr_obj::venue::Template *v20;
  unint64_t v21;
  const addr_obj::venue::Template *v22;
  unint64_t v23;
  uint64_t v24;
  const addr_obj::venue::Template *v25;
  unint64_t v26;
  uint64_t v27;
  const addr_obj::venue::Template *v28;
  unint64_t v29;
  uint64_t v30;
  const addr_obj::venue::Template *v31;
  unint64_t v32;
  uint64_t v33;
  const addr_obj::venue::Template *v34;
  unint64_t v35;
  uint64_t v36;
  const addr_obj::venue::Template *v37;
  unint64_t v38;
  uint64_t v39;
  const addr_obj::venue::Template *v40;
  unint64_t v41;
  uint64_t v42;
  const addr_obj::venue::Template *v43;
  unint64_t v44;
  uint64_t v45;
  const addr_obj::venue::Template *v46;
  unint64_t v47;
  uint64_t v48;
  const addr_obj::venue::Template *v49;
  unint64_t v50;
  uint64_t v51;
  const addr_obj::venue::Template *v52;
  unint64_t v53;
  uint64_t v54;
  const addr_obj::venue::Template *v55;
  unint64_t v56;
  uint64_t v57;
  const addr_obj::venue::Template *v58;
  unint64_t v59;
  uint64_t v60;

  v4 = result;
  switch(a3)
  {
    case 0:
      v5 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 8, a2);
      v6 = *(_QWORD *)(v4 + 8);
      if (v6 >= *(_QWORD *)(v4 + 16))
      {
        v7 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v5);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v5);
        v7 = v6 + 96;
        *(_QWORD *)(v4 + 8) = v6 + 96;
      }
      *(_QWORD *)(v4 + 8) = v7;
      v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 7, a2);
      v21 = *(_QWORD *)(v4 + 8);
      if (v21 >= *(_QWORD *)(v4 + 16))
        goto LABEL_64;
      goto LABEL_63;
    case 1:
      v11 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 10, a2);
      v12 = *(_QWORD *)(v4 + 8);
      if (v12 >= *(_QWORD *)(v4 + 16))
      {
        v13 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v11);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v11);
        v13 = v12 + 96;
        *(_QWORD *)(v4 + 8) = v12 + 96;
      }
      *(_QWORD *)(v4 + 8) = v13;
      v22 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 9, a2);
      v23 = *(_QWORD *)(v4 + 8);
      if (v23 >= *(_QWORD *)(v4 + 16))
      {
        v24 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v22);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v22);
        v24 = v23 + 96;
        *(_QWORD *)(v4 + 8) = v23 + 96;
      }
      *(_QWORD *)(v4 + 8) = v24;
      v31 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 11, a2);
      v32 = *(_QWORD *)(v4 + 8);
      if (v32 >= *(_QWORD *)(v4 + 16))
      {
        v33 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v31);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v31);
        v33 = v32 + 96;
        *(_QWORD *)(v4 + 8) = v32 + 96;
      }
      *(_QWORD *)(v4 + 8) = v33;
      v40 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 3, a2);
      v41 = *(_QWORD *)(v4 + 8);
      if (v41 >= *(_QWORD *)(v4 + 16))
      {
        v42 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v40);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v40);
        v42 = v41 + 96;
        *(_QWORD *)(v4 + 8) = v41 + 96;
      }
      *(_QWORD *)(v4 + 8) = v42;
      v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 0, a2);
      v21 = *(_QWORD *)(v4 + 8);
      if (v21 < *(_QWORD *)(v4 + 16))
        goto LABEL_63;
      goto LABEL_64;
    case 2:
      v8 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 12, a2);
      v9 = *(_QWORD *)(v4 + 8);
      if (v9 >= *(_QWORD *)(v4 + 16))
      {
        v10 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v8);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v8);
        v10 = v9 + 96;
        *(_QWORD *)(v4 + 8) = v9 + 96;
      }
      *(_QWORD *)(v4 + 8) = v10;
      v17 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 6, a2);
      v18 = *(_QWORD *)(v4 + 8);
      if (v18 >= *(_QWORD *)(v4 + 16))
      {
        v19 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v17);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v17);
        v19 = v18 + 96;
        *(_QWORD *)(v4 + 8) = v18 + 96;
      }
      *(_QWORD *)(v4 + 8) = v19;
      v28 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 4, a2);
      v29 = *(_QWORD *)(v4 + 8);
      if (v29 >= *(_QWORD *)(v4 + 16))
      {
        v30 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v28);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v28);
        v30 = v29 + 96;
        *(_QWORD *)(v4 + 8) = v29 + 96;
      }
      *(_QWORD *)(v4 + 8) = v30;
      v37 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 5, a2);
      v38 = *(_QWORD *)(v4 + 8);
      if (v38 >= *(_QWORD *)(v4 + 16))
      {
        v39 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v37);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v37);
        v39 = v38 + 96;
        *(_QWORD *)(v4 + 8) = v38 + 96;
      }
      *(_QWORD *)(v4 + 8) = v39;
      v46 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 2, a2);
      v47 = *(_QWORD *)(v4 + 8);
      if (v47 >= *(_QWORD *)(v4 + 16))
      {
        v48 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v46);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v46);
        v48 = v47 + 96;
        *(_QWORD *)(v4 + 8) = v47 + 96;
      }
      *(_QWORD *)(v4 + 8) = v48;
      v52 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 1, a2);
      v53 = *(_QWORD *)(v4 + 8);
      if (v53 >= *(_QWORD *)(v4 + 16))
      {
        v54 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v52);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v52);
        v54 = v53 + 96;
        *(_QWORD *)(v4 + 8) = v53 + 96;
      }
      *(_QWORD *)(v4 + 8) = v54;
      v55 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 3, a2);
      v56 = *(_QWORD *)(v4 + 8);
      if (v56 >= *(_QWORD *)(v4 + 16))
      {
        v57 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v55);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v55);
        v57 = v56 + 96;
        *(_QWORD *)(v4 + 8) = v56 + 96;
      }
      *(_QWORD *)(v4 + 8) = v57;
      v58 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 0, a2);
      v59 = *(_QWORD *)(v4 + 8);
      if (v59 >= *(_QWORD *)(v4 + 16))
      {
        v60 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v58);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v58);
        v60 = v59 + 96;
        *(_QWORD *)(v4 + 8) = v59 + 96;
      }
      *(_QWORD *)(v4 + 8) = v60;
      v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 13, a2);
      v21 = *(_QWORD *)(v4 + 8);
      if (v21 < *(_QWORD *)(v4 + 16))
        goto LABEL_63;
      goto LABEL_64;
    case 3:
      v14 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 0, a2);
      v15 = *(_QWORD *)(v4 + 8);
      if (v15 >= *(_QWORD *)(v4 + 16))
      {
        v16 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v14);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v14);
        v16 = v15 + 96;
        *(_QWORD *)(v4 + 8) = v15 + 96;
      }
      *(_QWORD *)(v4 + 8) = v16;
      v25 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 1, a2);
      v26 = *(_QWORD *)(v4 + 8);
      if (v26 >= *(_QWORD *)(v4 + 16))
      {
        v27 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v25);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v25);
        v27 = v26 + 96;
        *(_QWORD *)(v4 + 8) = v26 + 96;
      }
      *(_QWORD *)(v4 + 8) = v27;
      v34 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 2, a2);
      v35 = *(_QWORD *)(v4 + 8);
      if (v35 >= *(_QWORD *)(v4 + 16))
      {
        v36 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v34);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v34);
        v36 = v35 + 96;
        *(_QWORD *)(v4 + 8) = v35 + 96;
      }
      *(_QWORD *)(v4 + 8) = v36;
      v43 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 12, a2);
      v44 = *(_QWORD *)(v4 + 8);
      if (v44 >= *(_QWORD *)(v4 + 16))
      {
        v45 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v43);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v43);
        v45 = v44 + 96;
        *(_QWORD *)(v4 + 8) = v44 + 96;
      }
      *(_QWORD *)(v4 + 8) = v45;
      v49 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 13, a2);
      v50 = *(_QWORD *)(v4 + 8);
      if (v50 >= *(_QWORD *)(v4 + 16))
      {
        v51 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v49);
      }
      else
      {
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v49);
        v51 = v50 + 96;
        *(_QWORD *)(v4 + 8) = v50 + 96;
      }
      *(_QWORD *)(v4 + 8) = v51;
      v20 = (const addr_obj::venue::Template *)addr_obj::venue::TemplateFactory::TemplateForStyleAndParams((uint64_t)&unk_189C5F38D, 3, a2);
      v21 = *(_QWORD *)(v4 + 8);
      if (v21 >= *(_QWORD *)(v4 + 16))
      {
LABEL_64:
        result = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)v4, v20);
      }
      else
      {
LABEL_63:
        addr_obj::venue::Template::Template(*(std::string **)(v4 + 8), v20);
        result = v21 + 96;
        *(_QWORD *)(v4 + 8) = v21 + 96;
      }
      *(_QWORD *)(v4 + 8) = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_18882EA68(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_18882EAC0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_QWORD *addr_obj::venue::Formatter::Formatter(_QWORD *a1, int *a2, int a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  addr_obj::venue::Formatter::fromPattern((uint64_t)a1, a2, a3);
  return a1;
}

void sub_18882EAFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

addr_obj::venue::Formatter *addr_obj::venue::Formatter::Formatter(addr_obj::venue::Formatter *this, const addr_obj::VenueFormatterProto *a2)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  addr_obj::venue::Formatter::fromProto(this, a2);
  return this;
}

void sub_18882EB48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void addr_obj::venue::Formatter::fromProto(addr_obj::venue::Formatter *this, const addr_obj::VenueFormatterProto *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9[3];
  void *v10;
  void *v11;
  void *__p;
  void *v13;
  uint64_t v14;
  void **v15;

  v5 = *(_QWORD *)this;
  v4 = *((_QWORD *)this + 1);
  if (v4 != *(_QWORD *)this)
  {
    do
    {
      v4 -= 96;
      std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100]((uint64_t)this + 16, v4);
    }
    while (v4 != v5);
  }
  *((_QWORD *)this + 1) = v5;
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      addr_obj::venue::Template::Template((addr_obj::venue::Template *)v9, *(const addr_obj::VenueTemplateProto **)(*((_QWORD *)a2 + 2) + 8 * v6));
      v7 = *((_QWORD *)this + 1);
      if (v7 >= *((_QWORD *)this + 2))
      {
        v8 = std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>((uint64_t *)this, (const addr_obj::venue::Template *)v9);
      }
      else
      {
        addr_obj::venue::Template::Template(*((std::string **)this + 1), (const addr_obj::venue::Template *)v9);
        v8 = v7 + 96;
        *((_QWORD *)this + 1) = v7 + 96;
      }
      *((_QWORD *)this + 1) = v8;
      v15 = (void **)&v14;
      std::vector<addr_obj::venue::Decorator>::__destroy_vector::operator()[abi:ne180100](&v15);
      if (__p)
      {
        v13 = __p;
        operator delete(__p);
      }
      if (v10)
      {
        v11 = v10;
        operator delete(v10);
      }
      if (v9[0])
      {
        v9[1] = v9[0];
        operator delete(v9[0]);
      }
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
}

void sub_18882EC6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  addr_obj::venue::Template::~Template((addr_obj::venue::Template *)va);
  _Unwind_Resume(a1);
}

std::string *addr_obj::venue::Formatter::Formatter(std::string *this, addr_obj::venue::Template **a2)
{
  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(this, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  return this;
}

void addr_obj::venue::Formatter::toProto(int ***this, addr_obj::VenueFormatterProto *a2)
{
  int **v2;
  int *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  addr_obj::VenueTemplateProto *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *this;
  if (*this != this[1])
  {
    v5 = (int *)((char *)a2 + 16);
    do
    {
      v6 = *((_DWORD *)a2 + 7);
      v7 = *((int *)a2 + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a2 + 8))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v6 + 1);
          v6 = *((_DWORD *)a2 + 7);
        }
        *((_DWORD *)a2 + 7) = v6 + 1;
        v9 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<addr_obj::VenueTemplateProto>::New();
        v10 = *((_QWORD *)a2 + 2);
        v11 = *((int *)a2 + 6);
        *((_DWORD *)a2 + 6) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)a2 + 2);
        *((_DWORD *)a2 + 6) = v7 + 1;
        v9 = *(addr_obj::VenueTemplateProto **)(v8 + 8 * v7);
      }
      addr_obj::venue::Template::toProto(v2, v9);
      v2 += 12;
    }
    while (v2 != this[1]);
  }
}

addr_obj::Logger *addr_obj::venue::Formatter::find(addr_obj::venue::Formatter *a1, uint64_t *a2)
{
  addr_obj::Logger *result;
  addr_obj::Logger *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t *i;
  unint64_t v9;
  unint64_t *j;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  void *__p[2];
  char v19;
  void *v20;
  char v21;
  void *v22[2];
  char v23;
  void *v24[2];
  char v25;
  _QWORD v26[11];
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  result = *(addr_obj::Logger **)a1;
  v5 = (addr_obj::Logger *)*((_QWORD *)a1 + 1);
  if (result != v5)
  {
    v6 = *a2;
    v7 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
    while (2)
    {
      for (i = *(unint64_t **)result; ; ++i)
      {
        if (i == *((unint64_t **)result + 1))
        {
          for (j = (unint64_t *)*((_QWORD *)result + 3); j != *((unint64_t **)result + 4); ++j)
          {
            if (*j < v7)
            {
              v11 = v6 + 24 * *j;
              if (*(char *)(v11 + 23) < 0)
              {
                if (*(_QWORD *)(v11 + 8))
                  goto LABEL_19;
              }
              else if (*(_BYTE *)(v11 + 23))
              {
                goto LABEL_19;
              }
            }
          }
          return result;
        }
        if (*i >= v7)
          break;
        v9 = v6 + 24 * *i;
        if (*(char *)(v9 + 23) < 0)
        {
          if (!*(_QWORD *)(v9 + 8))
            break;
        }
        else if (!*(_BYTE *)(v9 + 23))
        {
          break;
        }
      }
LABEL_19:
      result = (addr_obj::Logger *)((char *)result + 96);
      if (result != v5)
        continue;
      break;
    }
  }
  if (addr_obj::Logger::isInitialized(result))
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v26);
    v12 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, (uint64_t)"could not find matching template for venue fields ", 50);
    v13 = *a2;
    v29 = a2[1];
    v30 = v13;
    v14 = addr_obj::stream_container<std::__wrap_iter<std::string const*>>(v12, &v30, &v29);
    v15 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)";", 1);
    v16 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)" only following are available: ", 31);
    v17 = addr_obj::venue::operator<<(v16, a1);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)"; the label will be empty",
      25);
    std::string::basic_string[abi:ne180100]<0>(v24, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
    std::string::basic_string[abi:ne180100]<0>(v22, "find");
    std::stringbuf::str();
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    addr_obj::Logger::log(16, (uint64_t)v24, 130, (uint64_t)v22, (uint64_t)&v20, (uint64_t)__p);
    if (v19 < 0)
      operator delete(__p[0]);
    if (v21 < 0)
      operator delete(v20);
    if (v23 < 0)
      operator delete(v22[0]);
    if (v25 < 0)
      operator delete(v24[0]);
    v26[0] = *MEMORY[0x1E0DE4F60];
    *(_QWORD *)((char *)v26 + *(_QWORD *)(v26[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
    v26[1] = MEMORY[0x1E0DE4FB8] + 16;
    if (v27 < 0)
      operator delete((void *)v26[9]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x18D764310](&v28);
  }
  return 0;
}

void sub_18882EFE4(void *__p, int a2, int a3, __int16 a4, char a5, char a6, std::string *a7, void *a8, void *__pa, int a10, __int16 a11, char a12, char a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,__int128 a21,std::string::size_type a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void *v37;
  void *v38;
  const std::string::value_type *v39;
  std::string *v40;
  __int128 v41;
  void *v42;

  if (SHIBYTE(a14) < 0)
    operator delete(__pa);
  if (a20 < 0)
    operator delete(a15);
  if (SHIBYTE(a22) < 0)
    operator delete((void *)a21);
  if (a29 < 0)
    operator delete(a24);
  std::ostringstream::~ostringstream((uint64_t)&a30);
  v37 = __cxa_begin_catch(__p);
  if (a2 == 2)
  {
    v38 = v37;
    std::string::basic_string[abi:ne180100]<0>(&a30, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a24, "find");
    std::string::basic_string[abi:ne180100]<0>(&a15, "Exception caught during formatting of the log line: ");
    v39 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v38 + 16))(v38);
    v40 = std::string::append((std::string *)&a15, v39);
    v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    a22 = v40->__r_.__value_.__r.__words[2];
    a21 = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a30, 130, (uint64_t)&a24, (uint64_t)&a21, (uint64_t)&__pa);
    if (SHIBYTE(a14) < 0)
      operator delete(__pa);
    if (SHIBYTE(a22) < 0)
      operator delete((void *)a21);
    if (a20 < 0)
    {
      v42 = a15;
LABEL_20:
      operator delete(v42);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a30, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a24, "find");
    std::string::basic_string[abi:ne180100]<0>(&a21, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a15, "");
    addr_obj::Logger::log(16, (uint64_t)&a30, 130, (uint64_t)&a24, (uint64_t)&a21, (uint64_t)&a15);
    if (a20 < 0)
      operator delete(a15);
    if (SHIBYTE(a22) < 0)
    {
      v42 = (void *)a21;
      goto LABEL_20;
    }
  }
  if (a29 < 0)
    operator delete(a24);
  if (a35 < 0)
    operator delete(a30);
  __cxa_end_catch();
  JUMPOUT(0x18882EFCCLL);
}

void sub_18882F1F0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a14 < 0)
    operator delete(__p);
  if (a26 < 0)
    operator delete(a21);
  if (a20 < 0)
    operator delete(a15);
  if (a33 < 0)
    operator delete(a28);
  if (a39 < 0)
    operator delete(a34);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18882F1E8);
}

void sub_18882F2FC()
{
  __cxa_end_catch();
  JUMPOUT(0x18882F304);
}

_QWORD *addr_obj::venue::operator<<(_QWORD *a1, addr_obj::venue::Formatter *this)
{
  void **v3;
  uint64_t v4;
  _QWORD *v5;
  void *__p[2];
  unsigned __int8 v8;

  addr_obj::venue::Formatter::str((uint64_t *)__p, this);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v3, v4);
  if ((char)v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_18882F37C(void *a1, std::string *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::string::~string((std::string *)&a10);
  __cxa_call_unexpected(a1);
}

void addr_obj::venue::Formatter::label(addr_obj::Logger *a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X8>)
{
  addr_obj::Logger *v5;
  addr_obj::Logger *v6;
  const addr_obj::venue::Field *v7;
  const addr_obj::venue::Field *v8;
  uint64_t v9;
  std::string::size_type size;
  std::string *v11;
  uint64_t Decorator;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  addr_obj *isInitialized;
  __int128 *v30;
  __int128 v31;
  void *v32[2];
  char v33;
  void *v34;
  char v35;
  std::string v36;
  uint64_t v37;
  uint64_t v38;
  void *__p;
  char v40;
  _BYTE v41[152];
  void *v42[2];
  char v43;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  if (*a2 == a2[1])
  {
    isInitialized = (addr_obj *)addr_obj::Logger::isInitialized(a1);
    if ((_DWORD)isInitialized)
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v37);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v37, (uint64_t)"cannot format an empty venue ; returning empty",
        46);
      std::string::basic_string[abi:ne180100]<0>(v42, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>(&v36, "label");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v32, "");
      addr_obj::Logger::log(16, (uint64_t)v42, 138, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)v32);
      if (v33 < 0)
        operator delete(v32[0]);
      if (v35 < 0)
        operator delete(v34);
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v36.__r_.__value_.__l.__data_);
      if (v43 < 0)
        operator delete(v42[0]);
      v37 = *MEMORY[0x1E0DE4F60];
      *(uint64_t *)((char *)&v37 + *(_QWORD *)(v37 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
      v38 = MEMORY[0x1E0DE4FB8] + 16;
      if (v40 < 0)
        operator delete(__p);
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      isInitialized = (addr_obj *)MEMORY[0x18D764310](v41);
    }
    v30 = addr_obj::emptyString(isInitialized);
    if (*((char *)v30 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)v30, *((_QWORD *)v30 + 1));
      return;
    }
LABEL_70:
    v31 = *v30;
    a3->__r_.__value_.__r.__words[2] = *((_QWORD *)v30 + 2);
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v31;
    return;
  }
  v5 = addr_obj::venue::Formatter::find(a1, a2);
  if (!v5)
  {
    v30 = addr_obj::emptyString(0);
    if (*((char *)v30 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)v30, *((_QWORD *)v30 + 1));
      return;
    }
    goto LABEL_70;
  }
  v6 = v5;
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v37);
  memset(&v36, 0, sizeof(v36));
  v8 = (const addr_obj::venue::Field *)*((_QWORD *)v6 + 6);
  v7 = (const addr_obj::venue::Field *)*((_QWORD *)v6 + 7);
  while (v8 != v7)
  {
    if (*(_QWORD *)v8 < 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3))
    {
      v9 = *a2 + 24 * *(_QWORD *)v8;
      if (*(char *)(v9 + 23) < 0)
      {
        if (*(_QWORD *)(v9 + 8))
        {
LABEL_9:
          if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
          else
            size = v36.__r_.__value_.__l.__size_;
          if (size)
          {
            if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v11 = &v36;
            else
              v11 = (std::string *)v36.__r_.__value_.__r.__words[0];
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v37, (uint64_t)v11, size);
          }
          Decorator = addr_obj::venue::Template::getDecorator(v6, v8);
          v13 = (char *)&v37 + *(_QWORD *)(v37 - 24);
          if ((v13[32] & 5) == 0)
          {
            (*(void (**)(void **__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v13 + 5) + 32))(v42, *((_QWORD *)v13 + 5), 0, 1, 16);
            if (v44 >= 1)
            {
              v25 = *(unsigned __int8 *)(Decorator + 23);
              if ((v25 & 0x80u) != 0)
                v25 = *(_QWORD *)(Decorator + 8);
              if (v25)
              {
                v26 = *(char *)(Decorator + 23);
                if (v26 >= 0)
                  v27 = Decorator;
                else
                  v27 = *(_QWORD *)Decorator;
                if (v26 >= 0)
                  v28 = *(unsigned __int8 *)(Decorator + 23);
                else
                  v28 = *(_QWORD *)(Decorator + 8);
                std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v37, v27, v28);
              }
            }
          }
          v14 = *(char *)(Decorator + 47);
          if (v14 >= 0)
            v15 = Decorator + 24;
          else
            v15 = *(_QWORD *)(Decorator + 24);
          if (v14 >= 0)
            v16 = *(unsigned __int8 *)(Decorator + 47);
          else
            v16 = *(_QWORD *)(Decorator + 32);
          v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v37, v15, v16);
          v18 = *(char *)(v9 + 23);
          if (v18 >= 0)
            v19 = v9;
          else
            v19 = *(_QWORD *)v9;
          if (v18 >= 0)
            v20 = *(unsigned __int8 *)(v9 + 23);
          else
            v20 = *(_QWORD *)(v9 + 8);
          v21 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, v19, v20);
          v22 = *(char *)(Decorator + 71);
          if (v22 >= 0)
            v23 = Decorator + 48;
          else
            v23 = *(_QWORD *)(Decorator + 48);
          if (v22 >= 0)
            v24 = *(unsigned __int8 *)(Decorator + 71);
          else
            v24 = *(_QWORD *)(Decorator + 56);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, v23, v24);
          std::string::operator=(&v36, (const std::string *)(Decorator + 72));
          v7 = (const addr_obj::venue::Field *)*((_QWORD *)v6 + 7);
        }
      }
      else if (*(_BYTE *)(v9 + 23))
      {
        goto LABEL_9;
      }
    }
    v8 = (const addr_obj::venue::Field *)((char *)v8 + 16);
  }
  std::stringbuf::str();
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v36.__r_.__value_.__l.__data_);
  v37 = *MEMORY[0x1E0DE4F60];
  *(uint64_t *)((char *)&v37 + *(_QWORD *)(v37 - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
  v38 = MEMORY[0x1E0DE4FB8] + 16;
  if (v40 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x18D764310](v41);
}

void sub_18882F7F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::string *a17, void *a18, uint64_t a19, __int128 a20,std::string::size_type a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;
  void *v31;
  void *v32;
  const std::string::value_type *v33;
  std::string *v34;
  __int128 v35;

  if (a2)
  {
    if (a16 < 0)
      operator delete(__p);
    if (SHIBYTE(a19) < 0)
      operator delete(a17);
    if (SHIBYTE(a21) < 0)
      operator delete((void *)a20);
    if (*(char *)(v28 - 209) < 0)
      operator delete(*(void **)(v28 - 232));
    std::ostringstream::~ostringstream((uint64_t)&a23);
    v31 = __cxa_begin_catch(exception_object);
    if (a2 == 2)
    {
      v32 = v31;
      std::string::basic_string[abi:ne180100]<0>(&a23, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>((_QWORD *)(v28 - 232), "label");
      std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
      v33 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v32 + 16))(v32);
      v34 = std::string::append((std::string *)&a17, v33);
      v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      a21 = v34->__r_.__value_.__r.__words[2];
      a20 = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      addr_obj::Logger::log(16, (uint64_t)&a23, 138, v28 - 232, (uint64_t)&a20, (uint64_t)&__p);
      if (a16 < 0)
        operator delete(__p);
      if (SHIBYTE(a21) < 0)
        operator delete((void *)a20);
      if (SHIBYTE(a19) < 0)
        operator delete(a17);
      if (*(char *)(v28 - 209) < 0)
        operator delete(*(void **)(v28 - 232));
      if (a28 < 0)
        operator delete(a23);
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&a23, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>((_QWORD *)(v28 - 232), "label");
      std::string::basic_string[abi:ne180100]<0>(&a20, "Unexpected exception caught during formatting of the log line");
      std::string::basic_string[abi:ne180100]<0>(&a17, "");
      addr_obj::Logger::log(16, (uint64_t)&a23, 138, v28 - 232, (uint64_t)&a20, (uint64_t)&a17);
      if (SHIBYTE(a19) < 0)
        operator delete(a17);
      if (SHIBYTE(a21) < 0)
        operator delete((void *)a20);
      if (*(char *)(v28 - 209) < 0)
        operator delete(*(void **)(v28 - 232));
      if (a28 < 0)
        operator delete(a23);
    }
    __cxa_end_catch();
    JUMPOUT(0x18882F73CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t addr_obj::venue::Formatter::str(addr_obj::venue::Formatter *this)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD v8[11];
  char v9;
  uint64_t v10;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"venue::Formatter: ", 18);
  v2 = (_QWORD *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" template(s): ", 14);
  if (*((_QWORD *)this + 1) != *(_QWORD *)this)
  {
    v3 = 0;
    v4 = 0;
    do
    {
      if (v4)
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)", ", 2);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"template[", 9);
      v5 = (_QWORD *)std::ostream::operator<<();
      v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"]: ", 3);
      addr_obj::venue::operator<<(v6, (addr_obj::venue::Decorator **)(*(_QWORD *)this + v3));
      ++v4;
      v3 += 96;
    }
    while (v4 != 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 5));
  }
  std::stringbuf::str();
  v8[0] = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)((char *)v8 + *(_QWORD *)(v8[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
  v8[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v9 < 0)
    operator delete((void *)v8[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D764310](&v10);
}

void sub_18882FD7C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  __cxa_call_unexpected(a1);
}

std::string *addr_obj::venue::Formatters::Formatters(std::string *this, addr_obj::venue::Template ***a2)
{
  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  std::vector<addr_obj::venue::Formatter>::__init_with_size[abi:ne180100]<addr_obj::venue::Formatter*,addr_obj::venue::Formatter*>(this, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (a2[1] - *a2));
  return this;
}

addr_obj::venue::Formatters *addr_obj::venue::Formatters::Formatters(addr_obj::venue::Formatters *this, const addr_obj::venue::VenueInfoFormatterParams *a2)
{
  uint64_t i;
  unint64_t v5;
  uint64_t v6;
  addr_obj::venue::Template *v8[3];
  addr_obj::venue::Template **v9;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  std::vector<addr_obj::venue::Formatter>::reserve((uint64_t *)this, 4uLL);
  for (i = 0; i != 4; ++i)
  {
    addr_obj::venue::Formatter::Formatter(v8, (int *)a2, i);
    v5 = *((_QWORD *)this + 1);
    if (v5 >= *((_QWORD *)this + 2))
    {
      v6 = std::vector<addr_obj::venue::Formatter>::__push_back_slow_path<addr_obj::venue::Formatter>((uint64_t *)this, v8);
    }
    else
    {
      std::vector<addr_obj::venue::Formatter>::__construct_one_at_end[abi:ne180100]<addr_obj::venue::Formatter>((uint64_t)this, v8);
      v6 = v5 + 24;
    }
    *((_QWORD *)this + 1) = v6;
    v9 = v8;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)&v9);
  }
  return this;
}

void sub_18882FE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<addr_obj::venue::Formatter>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void **std::vector<addr_obj::venue::Formatter>::reserve(uint64_t *a1, unint64_t a2)
{
  void **result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7[5];

  v4 = a1[2];
  result = (void **)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 24 * v6;
    std::vector<addr_obj::venue::Formatter>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer(v7);
  }
  return result;
}

void sub_18882FF6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

unint64_t addr_obj::venue::Formatters::size(addr_obj::venue::Formatters *this)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 3);
}

uint64_t addr_obj::venue::Formatters::operator[](_QWORD *a1, unint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  addr_obj::Logger *v7;
  void **v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  std::logic_error *exception;
  void *v13[2];
  char v14;
  std::string v15;
  void *v16[2];
  char v17;
  void *__p[2];
  unsigned __int8 v19;
  void *v20[2];
  _QWORD v21[33];

  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v21);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"out of range access: index <", 28);
    v3 = (_QWORD *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)"> is too big; only ", 19);
    v4 = (_QWORD *)std::ostream::operator<<();
    v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)" elements exist", 15);
    v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"; library version: ",
           19);
    v7 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v7))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v20);
      std::stringbuf::str();
      if ((v19 & 0x80u) == 0)
        v8 = __p;
      else
        v8 = (void **)__p[0];
      if ((v19 & 0x80u) == 0)
        v9 = v19;
      else
        v9 = (uint64_t)__p[1];
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)v8, v9);
      if ((char)v19 < 0)
        operator delete(__p[0]);
      std::string::basic_string[abi:ne180100]<0>(__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>(v16, "operator[]");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v13, "");
      addr_obj::Logger::log(16, (uint64_t)__p, 215, (uint64_t)v16, (uint64_t)&v15, (uint64_t)v13);
      if (v14 < 0)
        operator delete(v13[0]);
      if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v15.__r_.__value_.__l.__data_);
      if (v17 < 0)
        operator delete(v16[0]);
      if ((char)v19 < 0)
        operator delete(__p[0]);
      std::ostringstream::~ostringstream((uint64_t)v20);
    }
    v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"; at ", 5);
    v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp", 89);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)":", 1);
    std::ostream::operator<<();
    exception = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v20, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(exception, (const void **)v20, (uint64_t)__p);
  }
  return *a1 + 24 * a2;
}

void sub_188830550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  int v30;
  uint64_t v32;

  if (a23 < 0)
    operator delete(__p);
  if (a29 < 0)
  {
    operator delete(a24);
    if ((v30 & 1) == 0)
    {
LABEL_8:
      std::ostringstream::~ostringstream((uint64_t)&v32);
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v29);
  goto LABEL_8;
}

void sub_1888305AC(_Unwind_Exception *a1)
{
  uint64_t v2;

  std::ostringstream::~ostringstream((uint64_t)&v2);
  _Unwind_Resume(a1);
}

_QWORD *addr_obj::venue::operator<<(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v4 = (_QWORD *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)" formatter(s): ", 15);
  if (a2[1] != *a2)
  {
    v5 = 0;
    v6 = 0;
    do
    {
      if (v6)
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)", ", 2);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)"formatter[", 10);
      v7 = (_QWORD *)std::ostream::operator<<();
      v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)"]: ", 3);
      addr_obj::venue::operator<<(v8, (addr_obj::venue::Formatter *)(*a2 + v5));
      ++v6;
      v5 += 24;
    }
    while (v6 != 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 3));
  }
  return a1;
}

void sub_1888306D4(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1888306B8);
}

_QWORD *addr_obj::venue::operator<<(_QWORD *a1, _QWORD **a2)
{
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  addr_obj::Logger *v6;
  void **v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  std::logic_error *exception;
  void *v12[2];
  char v13;
  std::string v14;
  void *v15[2];
  char v16;
  void *__p[2];
  unsigned __int8 v18;
  void *v19[2];
  _QWORD v20[33];

  v2 = *a2;
  if (!v2)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v20);
    v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)"empty pointer to Formatters class", 33);
    v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"; library version: ",
           19);
    v6 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v6))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v19);
      std::stringbuf::str();
      if ((v18 & 0x80u) == 0)
        v7 = __p;
      else
        v7 = (void **)__p[0];
      if ((v18 & 0x80u) == 0)
        v8 = v18;
      else
        v8 = (uint64_t)__p[1];
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v19, (uint64_t)v7, v8);
      if ((char)v18 < 0)
        operator delete(__p[0]);
      std::string::basic_string[abi:ne180100]<0>(__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp");
      std::string::basic_string[abi:ne180100]<0>(v15, "operator<<");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v12, "");
      addr_obj::Logger::log(16, (uint64_t)__p, 239, (uint64_t)v15, (uint64_t)&v14, (uint64_t)v12);
      if (v13 < 0)
        operator delete(v12[0]);
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v14.__r_.__value_.__l.__data_);
      if (v16 < 0)
        operator delete(v15[0]);
      if ((char)v18 < 0)
        operator delete(__p[0]);
      std::ostringstream::~ostringstream((uint64_t)v19);
    }
    v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)"; at ", 5);
    v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/venue_Formatter.cpp", 89);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)":", 1);
    std::ostream::operator<<();
    exception = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v19, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(exception, (const void **)v19, (uint64_t)__p);
  }
  return addr_obj::venue::operator<<(a1, v2);
}

void sub_188830C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  int v30;
  uint64_t v32;

  if (a23 < 0)
    operator delete(__p);
  if (a29 < 0)
  {
    operator delete(a24);
    if ((v30 & 1) == 0)
    {
LABEL_8:
      std::ostringstream::~ostringstream((uint64_t)&v32);
      _Unwind_Resume(a1);
    }
  }
  else if (!v30)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v29);
  goto LABEL_8;
}

void sub_188830C88(_Unwind_Exception *a1)
{
  uint64_t v2;

  std::ostringstream::~ostringstream((uint64_t)&v2);
  _Unwind_Resume(a1);
}

uint64_t std::vector<addr_obj::venue::Template>::__push_back_slow_path<addr_obj::venue::Template const&>(uint64_t *a1, const addr_obj::venue::Template *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  std::string *v14;
  std::string *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL)
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x155555555555555)
    v9 = 0x2AAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<addr_obj::venue::Decorator>>(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = (std::string *)&v10[96 * v4];
  v16 = &v10[96 * v9];
  addr_obj::venue::Template::Template(v14, a2);
  v15 = v14 + 4;
  std::vector<addr_obj::venue::Template>::__swap_out_circular_buffer(a1, &v13);
  v11 = a1[1];
  std::__split_buffer<addr_obj::venue::Template>::~__split_buffer(&v13);
  return v11;
}

void sub_188830DA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<addr_obj::venue::Template>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<addr_obj::venue::Template>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>,std::reverse_iterator<addr_obj::venue::Template*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 96;
      std::allocator<addr_obj::venue::Template>::construct[abi:ne180100]<addr_obj::venue::Template,addr_obj::venue::Template>(a1, (_QWORD *)(v7 - 96), v9);
      v7 = *((_QWORD *)&v16 + 1) - 96;
      *((_QWORD *)&v16 + 1) -= 96;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

__n128 std::allocator<addr_obj::venue::Template>::construct[abi:ne180100]<addr_obj::venue::Template,addr_obj::venue::Template>(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  __n128 result;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  *(_OWORD *)a2 = *(_OWORD *)a3;
  a2[2] = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  a2[3] = 0;
  a2[4] = 0;
  a2[5] = 0;
  *(_OWORD *)(a2 + 3) = *(_OWORD *)(a3 + 24);
  a2[5] = *(_QWORD *)(a3 + 40);
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  a2[6] = 0;
  a2[7] = 0;
  a2[8] = 0;
  *((_OWORD *)a2 + 3) = *(_OWORD *)(a3 + 48);
  a2[8] = *(_QWORD *)(a3 + 64);
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  a2[9] = 0;
  a2[10] = 0;
  a2[11] = 0;
  result = *(__n128 *)(a3 + 72);
  *(__n128 *)(a2 + 9) = result;
  a2[11] = *(_QWORD *)(a3 + 88);
  *(_QWORD *)(a3 + 72) = 0;
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  return result;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>::operator()[abi:ne180100]((uint64_t *)a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,std::reverse_iterator<addr_obj::venue::Template*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](v3, v1);
      v1 += 96;
    }
    while (v1 != v2);
  }
}

void std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void **v6;

  v6 = (void **)(a2 + 72);
  std::vector<addr_obj::venue::Decorator>::__destroy_vector::operator()[abi:ne180100](&v6);
  v3 = *(void **)(a2 + 48);
  if (v3)
  {
    *(_QWORD *)(a2 + 56) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a2 + 24);
  if (v4)
  {
    *(_QWORD *)(a2 + 32) = v4;
    operator delete(v4);
  }
  v5 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)(a2 + 8) = v5;
    operator delete(v5);
  }
}

void **std::__split_buffer<addr_obj::venue::Template>::~__split_buffer(void **a1)
{
  std::__split_buffer<addr_obj::venue::Template>::clear[abi:ne180100](a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void std::__split_buffer<addr_obj::venue::Template>::clear[abi:ne180100](_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 96;
    std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](v4, i - 96);
  }
}

void std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 96;
        std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::string *std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(std::string *result, addr_obj::venue::Template *a2, addr_obj::venue::Template *a3, unint64_t a4)
{
  std::string *v6;

  if (a4)
  {
    v6 = result;
    std::vector<addr_obj::venue::Decorator>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*,addr_obj::venue::Template*,addr_obj::venue::Template*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_1888311A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*,addr_obj::venue::Template*,addr_obj::venue::Template*>(uint64_t a1, addr_obj::venue::Template *a2, addr_obj::venue::Template *a3, std::string *this)
{
  std::string *v4;
  const addr_obj::venue::Template *v6;
  _QWORD v8[3];
  char v9;
  addr_obj::venue::Template *v10;
  addr_obj::venue::Template *v11;

  v4 = this;
  v10 = (addr_obj::venue::Template *)this;
  v11 = (addr_obj::venue::Template *)this;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      addr_obj::venue::Template::Template(v4, v6);
      v6 = (const addr_obj::venue::Template *)((char *)v6 + 96);
      v4 = (std::string *)((char *)v11 + 96);
      v11 = (addr_obj::venue::Template *)((char *)v11 + 96);
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_188831250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>::operator()[abi:ne180100]((uint64_t *)a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Template>,addr_obj::venue::Template*>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 96;
      std::allocator<addr_obj::venue::Template>::destroy[abi:ne180100](v5, v3);
    }
    while (v3 != v4);
  }
}

_QWORD *addr_obj::stream_container<std::__wrap_iter<std::string const*>>(_QWORD *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  if (*a3 != *a2)
  {
    v6 = *(char *)(v4 + 23);
    v7 = v6 >= 0 ? *a2 : *(_QWORD *)v4;
    v8 = v6 >= 0 ? *(unsigned __int8 *)(v4 + 23) : *(_QWORD *)(v4 + 8);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, v7, v8);
    for (i = v4 + 24; i != *a3; i += 24)
    {
      v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)", ", 2);
      v11 = *(char *)(i + 23);
      if (v11 >= 0)
        v12 = i;
      else
        v12 = *(_QWORD *)i;
      if (v11 >= 0)
        v13 = *(unsigned __int8 *)(i + 23);
      else
        v13 = *(_QWORD *)(i + 8);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, v12, v13);
    }
  }
  return a1;
}

std::string *std::vector<addr_obj::venue::Formatter>::__init_with_size[abi:ne180100]<addr_obj::venue::Formatter*,addr_obj::venue::Formatter*>(std::string *result, addr_obj::venue::Template **a2, addr_obj::venue::Template **a3, unint64_t a4)
{
  std::string *v6;

  if (a4)
  {
    v6 = result;
    std::vector<zilch::TrafficDynamicTile::Flow>::__vallocate[abi:ne180100](result, a4);
    result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*,addr_obj::venue::Formatter*,addr_obj::venue::Formatter*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_1888313FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<addr_obj::venue::Formatter>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*,addr_obj::venue::Formatter*,addr_obj::venue::Formatter*>(uint64_t a1, addr_obj::venue::Template **a2, addr_obj::venue::Template **a3, std::string *a4)
{
  std::string *v4;
  addr_obj::venue::Template **v6;
  _QWORD v8[3];
  char v9;
  std::string *v10;
  std::string *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v4->__r_.__value_.__r.__words[0] = 0;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * ((v6[1] - *v6) >> 5));
      v4 = ++v11;
      v6 += 3;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1888314C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,addr_obj::venue::Formatter*>::operator()[abi:ne180100](uint64_t a1)
{
  void **v1;
  void **v2;
  void **v3;

  v1 = **(void ****)(a1 + 16);
  v2 = **(void ****)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 3;
    v3 = v1;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v3);
  }
}

void std::vector<addr_obj::venue::Formatter>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;
  void **v6;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        v6 = v4;
        std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::vector<addr_obj::venue::Formatter>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>,std::reverse_iterator<addr_obj::venue::Formatter*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  std::string *v10;
  addr_obj::venue::Template *v11;
  addr_obj::venue::Template *v12;
  uint64_t v13;
  _QWORD v15[3];
  char v16;
  __int128 v17;
  __int128 v18;

  v7 = a7;
  *(_QWORD *)&v18 = a6;
  *((_QWORD *)&v18 + 1) = a7;
  v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  v16 = 0;
  if (a3 == a5)
  {
    v13 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      *(_QWORD *)(v7 - 24) = 0;
      *(_QWORD *)(v7 - 16) = 0;
      v10 = (std::string *)(v7 - 24);
      v10->__r_.__value_.__r.__words[2] = 0;
      v11 = *(addr_obj::venue::Template **)(v9 - 24);
      v12 = *(addr_obj::venue::Template **)(v9 - 16);
      v9 -= 24;
      std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v10, v11, v12, 0xAAAAAAAAAAAAAAABLL * ((v12 - v11) >> 5));
      v7 = *((_QWORD *)&v18 + 1) - 24;
      *((_QWORD *)&v18 + 1) -= 24;
    }
    while (v9 != a5);
    v13 = v18;
  }
  v16 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v15);
  return v13;
}

void sub_1888316F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>::operator()[abi:ne180100](a1);
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<addr_obj::venue::Formatter>,std::reverse_iterator<addr_obj::venue::Formatter*>>::operator()[abi:ne180100](uint64_t a1)
{
  void **v1;
  void **v2;
  void **v3;

  v1 = *(void ***)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(void ***)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    v3 = v1;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v3);
    v1 += 3;
  }
}

void **std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer(void **a1)
{
  std::__split_buffer<addr_obj::venue::Formatter>::clear[abi:ne180100]((uint64_t)a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void std::__split_buffer<addr_obj::venue::Formatter>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t i;
  uint64_t v2;
  void **v4;
  void **v5;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 24);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = v4;
    std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100](&v5);
  }
}

std::string *std::vector<addr_obj::venue::Formatter>::__construct_one_at_end[abi:ne180100]<addr_obj::venue::Formatter>(uint64_t a1, addr_obj::venue::Template **a2)
{
  std::string *v3;
  std::string *result;

  v3 = *(std::string **)(a1 + 8);
  v3->__r_.__value_.__r.__words[0] = 0;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  result = std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v3, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  *(_QWORD *)(a1 + 8) = v3 + 1;
  return result;
}

void sub_188831858(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<addr_obj::venue::Formatter>::__push_back_slow_path<addr_obj::venue::Formatter>(uint64_t *a1, addr_obj::venue::Template **a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  std::string *v11;
  uint64_t v12;
  void *v14[2];
  std::string *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x555555555555555)
    v9 = 0xAAAAAAAAAAAAAAALL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(v7, v9);
  else
    v10 = 0;
  v11 = (std::string *)&v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v15 = v11;
  v16 = &v10[24 * v9];
  v11->__r_.__value_.__r.__words[0] = 0;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  std::vector<addr_obj::venue::Template>::__init_with_size[abi:ne180100]<addr_obj::venue::Template*,addr_obj::venue::Template*>(v11, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  ++v15;
  std::vector<addr_obj::venue::Formatter>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer(v14);
  return v12;
}

void sub_18883196C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<addr_obj::venue::Formatter>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 96) = a2;
  *(_QWORD *)(a1 + 104) = a3;
  *(_QWORD *)(a1 + 140) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 160) = -1;
  *(_BYTE *)(a1 + 164) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)a1 = 0;
  AddrObjGoogle::protobuf::io::Tokenizer::Refresh(a1);
  return a1;
}

void sub_1888319F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 79) < 0)
    operator delete(*v3);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::Refresh(uint64_t this)
{
  uint64_t v1;
  std::string *v2;
  uint64_t v3;
  int v4;
  char *v5;
  char v6;
  char *v7;

  v1 = this;
  if (*(_BYTE *)(this + 136))
  {
    *(_BYTE *)(this + 112) = 0;
  }
  else
  {
    v2 = *(std::string **)(this + 152);
    if (v2)
    {
      v3 = *(int *)(v1 + 160);
      v4 = *(_DWORD *)(v1 + 128);
      if (v4 > (int)v3)
      {
        std::string::append(v2, (const std::string::value_type *)(*(_QWORD *)(v1 + 120) + v3), v4 - (int)v3);
        *(_DWORD *)(v1 + 160) = 0;
      }
    }
    v7 = 0;
    *(_QWORD *)(v1 + 120) = 0;
    *(_DWORD *)(v1 + 132) = 0;
    while (1)
    {
      this = (*(uint64_t (**)(_QWORD, char **, uint64_t))(**(_QWORD **)(v1 + 96) + 16))(*(_QWORD *)(v1 + 96), &v7, v1 + 128);
      if ((this & 1) == 0)
        break;
      if (*(_DWORD *)(v1 + 128))
      {
        v5 = v7;
        *(_QWORD *)(v1 + 120) = v7;
        v6 = *v5;
        goto LABEL_11;
      }
    }
    v6 = 0;
    *(_DWORD *)(v1 + 128) = 0;
    *(_BYTE *)(v1 + 136) = 1;
LABEL_11:
    *(_BYTE *)(v1 + 112) = v6;
  }
  return this;
}

void AddrObjGoogle::protobuf::io::Tokenizer::~Tokenizer(AddrObjGoogle::protobuf::io::Tokenizer *this)
{
  int v2;
  int v3;

  v2 = *((_DWORD *)this + 32);
  v3 = *((_DWORD *)this + 33);
  if (v2 > v3)
    (*(void (**)(_QWORD, _QWORD))(**((_QWORD **)this + 12) + 24))(*((_QWORD *)this + 12), (v2 - v3));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::NextChar(uint64_t this)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(this + 112);
  if (v1 == 9)
  {
    v2 = *(_DWORD *)(this + 144);
    if (v2 <= 0)
      v3 = -(-v2 & 7);
    else
      v3 = *(_DWORD *)(this + 144) & 7;
    v4 = v2 - v3 + 8;
  }
  else
  {
    if (v1 == 10)
    {
      *(_QWORD *)(this + 140) = (*(_DWORD *)(this + 140) + 1);
      goto LABEL_10;
    }
    v4 = *(_DWORD *)(this + 144) + 1;
  }
  *(_DWORD *)(this + 144) = v4;
LABEL_10:
  v5 = *(_DWORD *)(this + 128);
  v6 = *(int *)(this + 132) + 1;
  *(_DWORD *)(this + 132) = v6;
  if ((int)v6 >= v5)
    return AddrObjGoogle::protobuf::io::Tokenizer::Refresh(this);
  *(_BYTE *)(this + 112) = *(_BYTE *)(*(_QWORD *)(this + 120) + v6);
  return this;
}

void AddrObjGoogle::protobuf::io::Tokenizer::ConsumeString(AddrObjGoogle::protobuf::io::Tokenizer *this, unsigned __int8 a2)
{
  int v4;
  int v6;
  int v7;
  BOOL v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  void *__p[2];
  char v20;

  while (1)
  {
    while (1)
    {
      v4 = *((char *)this + 112);
      if (v4 != 92)
        break;
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v7 = *((unsigned __int8 *)this + 112);
      v8 = (v7 - 97) > 0x15 || ((1 << (v7 - 97)) & 0x2A2023) == 0;
      if (!v8
        || (v7 - 34) <= 0x3A && ((1 << (v7 - 34)) & 0x400000020000021) != 0
        || (v7 & 0xF8) == 0x30)
      {
        goto LABEL_15;
      }
      if (*((unsigned __int8 *)this + 112) > 0x74u)
      {
        if (v7 == 117)
        {
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((_BYTE *)this + 112) - 48) >= 0xAu
            && ((v15 = *((unsigned __int8 *)this + 112) - 65, v15 > 0x25) || ((1 << v15) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v16 = *((unsigned __int8 *)this + 112) - 65, v16 > 0x25) || ((1 << v16) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v17 = *((unsigned __int8 *)this + 112) - 65, v17 > 0x25) || ((1 << v17) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v18 = *((unsigned __int8 *)this + 112) - 65, v18 > 0x25) || ((1 << v18) & 0x3F0000003FLL) == 0))
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected four hex digits for \\u escape sequence.");
            (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_46;
          }
          goto LABEL_15;
        }
        if (v7 != 120)
          goto LABEL_20;
        goto LABEL_23;
      }
      if (v7 == 85)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_BYTE *)this + 112) != 48)
          goto LABEL_45;
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_BYTE *)this + 112) != 48)
          goto LABEL_45;
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((_BYTE *)this + 112) & 0xFE) != 0x30)
          goto LABEL_45;
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((_BYTE *)this + 112) - 48) >= 0xAu)
        {
          v10 = *((unsigned __int8 *)this + 112) - 65;
          if (v10 > 0x25 || ((1 << v10) & 0x3F0000003FLL) == 0)
            goto LABEL_45;
        }
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((_BYTE *)this + 112) - 48) >= 0xAu)
        {
          v11 = *((unsigned __int8 *)this + 112) - 65;
          if (v11 > 0x25 || ((1 << v11) & 0x3F0000003FLL) == 0)
            goto LABEL_45;
        }
        if ((AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((_BYTE *)this + 112) - 48) >= 0xAu)
          && ((v12 = *((unsigned __int8 *)this + 112) - 65, v12 > 0x25) || ((1 << v12) & 0x3F0000003FLL) == 0)
          || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((_BYTE *)this + 112) - 48) >= 0xAu)
          && ((v13 = *((unsigned __int8 *)this + 112) - 65, v13 > 0x25) || ((1 << v13) & 0x3F0000003FLL) == 0)
          || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((_BYTE *)this + 112) - 48) >= 0xAu)
          && ((v14 = *((unsigned __int8 *)this + 112) - 65, v14 > 0x25) || ((1 << v14) & 0x3F0000003FLL) == 0))
        {
LABEL_45:
          std::string::basic_string[abi:ne180100]<0>(__p, "Expected eight hex digits up to 10ffff for \\U escape sequence");
          (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          goto LABEL_46;
        }
        goto LABEL_15;
      }
      if (v7 == 88)
      {
LABEL_23:
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((_BYTE *)this + 112) - 48) >= 0xAu)
        {
          v9 = *((unsigned __int8 *)this + 112) - 65;
          if (v9 > 0x25 || ((1 << v9) & 0x3F0000003FLL) == 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected hex digits for escape sequence.");
            (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_46;
          }
        }
LABEL_15:
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      }
      else
      {
LABEL_20:
        std::string::basic_string[abi:ne180100]<0>(__p, "Invalid escape sequence in string literal.");
        (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_46:
        if (v20 < 0)
          operator delete(__p[0]);
      }
    }
    if (v4 == 10 || v4 == 0)
      break;
    v6 = *((unsigned __int8 *)this + 112);
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    if (v6 == a2)
      return;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "String literals cannot cross line boundaries.");
  (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  if (v20 < 0)
    operator delete(__p[0]);
}

void sub_188832048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::ConsumeNumber(AddrObjGoogle::protobuf::io::Tokenizer *this, int a2, int a3)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  unsigned int v8;
  uint64_t v9;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  void *__p[2];
  char v21;

  if (a2)
  {
    v4 = *((unsigned __int8 *)this + 112);
    if ((v4 | 0x20) == 0x78)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if ((*((_BYTE *)this + 112) - 48) > 9u
        && ((v5 = *((unsigned __int8 *)this + 112) - 65, v18 = v5 > 0x25, v6 = (1 << v5) & 0x3F0000003FLL, !v18)
          ? (v7 = v6 == 0)
          : (v7 = 1),
            v7))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "\"0x\" must be followed by hex digits.");
        (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0)
          operator delete(__p[0]);
      }
      else
      {
        do
        {
          do
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          while ((*((_BYTE *)this + 112) - 48) < 0xAu);
          v8 = *((unsigned __int8 *)this + 112) - 65;
          v18 = v8 > 0x25;
          v9 = (1 << v8) & 0x3F0000003FLL;
        }
        while (!v18 && v9 != 0);
      }
LABEL_14:
      v11 = 0;
      goto LABEL_49;
    }
    if ((v4 - 48) <= 9)
    {
      if ((v4 & 0xF8) != 0x30)
        goto LABEL_21;
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v12 = *((unsigned __int8 *)this + 112);
      }
      while ((v12 & 0xF8) == 0x30);
      if ((v12 - 48) <= 9)
      {
LABEL_21:
        std::string::basic_string[abi:ne180100]<0>(__p, "Numbers starting with leading zero must be in octal.");
        (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0)
          operator delete(__p[0]);
        if (*((unsigned __int8 *)this + 112) - 48 <= 9)
        {
          do
          {
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            v11 = 0;
          }
          while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
          goto LABEL_49;
        }
      }
      goto LABEL_14;
    }
  }
  v13 = *((unsigned __int8 *)this + 112);
  v14 = v13 - 48;
  if (a3)
  {
    if (v14 <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  else
  {
    if (v14 <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
    if (v13 != 46)
    {
      v11 = 0;
      goto LABEL_35;
    }
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    v13 = *((unsigned __int8 *)this + 112);
    if ((v13 - 48) <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  v11 = 1;
LABEL_35:
  if ((v13 | 0x20) == 0x65)
  {
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    v15 = *((unsigned __int8 *)this + 112);
    if (v15 == 45 || v15 == 43)
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    if (*((unsigned __int8 *)this + 112) - 48 > 9)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "\"e\" must be followed by exponent.");
      (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v21 < 0)
        operator delete(__p[0]);
    }
    else
    {
      do
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
    }
    v11 = 1;
  }
  if (*((_BYTE *)this + 164))
  {
    v16 = *((unsigned __int8 *)this + 112);
    if (v16 == 70 || v16 == 102)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v11 = 1;
    }
  }
LABEL_49:
  v17 = *((unsigned __int8 *)this + 112);
  v18 = v17 != 95 && (v17 & 0xFFFFFFDF) - 65 > 0x19;
  if (v18)
  {
    if (v17 != 46)
      goto LABEL_61;
    if (v11)
      std::string::basic_string[abi:ne180100]<0>(__p, "Already saw decimal point or exponent; can't have another one.");
    else
      std::string::basic_string[abi:ne180100]<0>(__p, "Hex and octal numbers must be integers.");
    (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Need space between number and identifier.");
    (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  if (v21 < 0)
    operator delete(__p[0]);
LABEL_61:
  if (v11)
    return 4;
  else
    return 3;
}

void sub_18883241C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::ConsumeLineComment(uint64_t this, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = this;
  if (a2)
  {
    *(_QWORD *)(this + 152) = a2;
    *(_DWORD *)(this + 160) = *(_DWORD *)(this + 132);
  }
  while (*(_BYTE *)(v3 + 112))
  {
    if (*(_BYTE *)(v3 + 112) == 10)
    {
      this = AddrObjGoogle::protobuf::io::Tokenizer::NextChar(v3);
      break;
    }
    this = AddrObjGoogle::protobuf::io::Tokenizer::NextChar(v3);
  }
  if (a2)
  {
    v4 = *(_DWORD *)(v3 + 132);
    v5 = *(int *)(v3 + 160);
    if (v4 != (_DWORD)v5)
      this = (uint64_t)std::string::append(*(std::string **)(v3 + 152), (const std::string::value_type *)(*(_QWORD *)(v3 + 120) + v5), v4 - (int)v5);
    *(_QWORD *)(v3 + 152) = 0;
    *(_DWORD *)(v3 + 160) = -1;
  }
  return this;
}

void AddrObjGoogle::protobuf::io::Tokenizer::ConsumeBlockComment(AddrObjGoogle::protobuf::io::Tokenizer *this, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v17;

  v4 = *((unsigned int *)this + 35);
  v5 = (*((_DWORD *)this + 36) - 2);
  if (a2)
  {
    *((_QWORD *)this + 19) = a2;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
  }
  while (1)
  {
    while (1)
    {
      v6 = *((unsigned __int8 *)this + 112);
      if (v6 > 0x29)
        break;
      if (*((_BYTE *)this + 112))
      {
        if (v6 != 10)
          goto LABEL_22;
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (a2)
        {
          v7 = *((_DWORD *)this + 33);
          v8 = *((int *)this + 40);
          if (v7 != (_DWORD)v8)
            std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((_QWORD *)this + 15) + v8), v7 - (int)v8);
          *((_QWORD *)this + 19) = 0;
          *((_DWORD *)this + 40) = -1;
        }
        while (1)
        {
          v9 = *((unsigned __int8 *)this + 112);
          if (v9 > 0x2A)
            break;
          if (((1 << v9) & 0x100003A00) == 0)
          {
            if (v9 == 42)
            {
              AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
              if (*((_BYTE *)this + 112) == 47)
              {
                AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
                return;
              }
            }
            break;
          }
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        }
        if (a2)
        {
          *((_QWORD *)this + 19) = a2;
          *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
        }
      }
      else
      {
LABEL_24:
        if (!v6)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "End-of-file inside block comment.");
          (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          if (v17 < 0)
            operator delete(__p[0]);
          v10 = *((_QWORD *)this + 13);
          std::string::basic_string[abi:ne180100]<0>(__p, "  Comment started here.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)v10 + 16))(v10, v4, v5, __p);
          if (v17 < 0)
            operator delete(__p[0]);
          if (a2)
          {
            v11 = *((_DWORD *)this + 33);
            v12 = *((int *)this + 40);
            if (v11 != (_DWORD)v12)
              std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((_QWORD *)this + 15) + v12), v11 - (int)v12);
            *((_QWORD *)this + 19) = 0;
            *((_DWORD *)this + 40) = -1;
          }
          return;
        }
      }
    }
    if (v6 == 42)
      break;
    if (v6 == 47)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v6 = *((unsigned __int8 *)this + 112);
      if (v6 != 42)
        goto LABEL_24;
      std::string::basic_string[abi:ne180100]<0>(__p, "\"/*\" inside block comment.  Block comments cannot be nested.");
      (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v17 < 0)
        operator delete(__p[0]);
    }
    else
    {
LABEL_22:
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
  }
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  v6 = *((unsigned __int8 *)this + 112);
  if (v6 != 47)
    goto LABEL_24;
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  if (a2)
  {
    v13 = *((_DWORD *)this + 33);
    v14 = *((int *)this + 40);
    if (v13 != (_DWORD)v14)
      std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((_QWORD *)this + 15) + v14), v13 - (int)v14);
    *((_QWORD *)this + 19) = 0;
    *((_DWORD *)this + 40) = -1;
    if (*(char *)(a2 + 23) < 0)
      v15 = *(_QWORD *)(a2 + 8);
    else
      v15 = *(unsigned __int8 *)(a2 + 23);
    std::string::erase((std::string *)a2, v15 - 2, 0xFFFFFFFFFFFFFFFFLL);
  }
}

void sub_188832790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::TryConsumeCommentStart(AddrObjGoogle::protobuf::io::Tokenizer *this)
{
  int v2;
  int v3;
  int v4;

  v2 = *((_DWORD *)this + 42);
  if (v2 == 1)
  {
    if (*((_BYTE *)this + 112) == 35)
    {
LABEL_8:
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      return 0;
    }
    return 3;
  }
  if (v2 || *((_BYTE *)this + 112) != 47)
    return 3;
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  v3 = *((unsigned __int8 *)this + 112);
  if (v3 != 42)
  {
    if (v3 != 47)
    {
      *(_DWORD *)this = 6;
      MEMORY[0x18D7640AC]((char *)this + 8, "/");
      v4 = *((_DWORD *)this + 36);
      *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
      *((_DWORD *)this + 9) = v4 - 1;
      *((_DWORD *)this + 10) = v4;
      return 2;
    }
    goto LABEL_8;
  }
  AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  return 1;
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::Next(AddrObjGoogle::protobuf::io::Tokenizer *this)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t result;
  int v6;
  AddrObjGoogle::protobuf::io::Tokenizer *v7;
  int v8;
  int v9;
  int v10;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  AddrObjGoogle::protobuf::io::Tokenizer *v18;
  unsigned __int8 v19;
  int v20;
  uint64_t v21;
  void *__p[2];
  char v23;

  *((_DWORD *)this + 12) = *(_DWORD *)this;
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)this + 8));
  *((_QWORD *)this + 10) = *((_QWORD *)this + 4);
  *((_DWORD *)this + 22) = *((_DWORD *)this + 10);
  if (*((_BYTE *)this + 136))
    goto LABEL_2;
  while (1)
  {
LABEL_4:
    while (1)
    {
      v2 = *((unsigned __int8 *)this + 112);
      if ((v2 - 9) >= 5 && v2 != 32)
        break;
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    v3 = AddrObjGoogle::protobuf::io::Tokenizer::TryConsumeCommentStart(this);
    if (!v3)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::ConsumeLineComment((uint64_t)this, 0);
      goto LABEL_20;
    }
    if (v3 != 1)
      break;
    AddrObjGoogle::protobuf::io::Tokenizer::ConsumeBlockComment(this, 0);
LABEL_20:
    if (*((_BYTE *)this + 136))
      goto LABEL_2;
  }
  if (v3 == 2)
    return 1;
  if (*((_BYTE *)this + 136))
    goto LABEL_2;
  v4 = *((unsigned __int8 *)this + 112);
  if (v4 > 0x1F)
  {
    *(_DWORD *)this = 0;
    if (*((char *)this + 31) < 0)
    {
      **((_BYTE **)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      v4 = *((unsigned __int8 *)this + 112);
    }
    else
    {
      *((_BYTE *)this + 8) = 0;
      *((_BYTE *)this + 31) = 0;
    }
    *((_QWORD *)this + 4) = *(_QWORD *)((char *)this + 140);
    *((_QWORD *)this + 19) = (char *)this + 8;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
    if (v4 == 95 || (v4 & 0xFFFFFFDF) - 65 <= 0x19)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v9 = *((unsigned __int8 *)this + 112);
      if (v9 == 95 || (v9 - 48) < 0xA || (v9 & 0xFFFFFFDF) - 65 <= 0x19)
      {
        do
        {
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          v10 = *((unsigned __int8 *)this + 112);
        }
        while (v10 == 95 || (v10 - 48) < 0xA || (v10 & 0xFFFFFFDF) - 65 < 0x1A);
      }
      v13 = 2;
      goto LABEL_65;
    }
    if (v4 == 46)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (*((unsigned __int8 *)this + 112) - 48 <= 9)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_DWORD *)this + 12) == 2
          && *((_DWORD *)this + 8) == *((_DWORD *)this + 20)
          && *((_DWORD *)this + 9) == *((_DWORD *)this + 22))
        {
          v14 = *((_QWORD *)this + 13);
          v15 = *((unsigned int *)this + 35);
          v16 = (*((_DWORD *)this + 36) - 2);
          std::string::basic_string[abi:ne180100]<0>(__p, "Need space between identifier and decimal point.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)v14 + 16))(v14, v15, v16, __p);
          if (v23 < 0)
            operator delete(__p[0]);
        }
        v7 = this;
        v8 = 0;
        v17 = 1;
        goto LABEL_57;
      }
    }
    else
    {
      if (v4 == 48)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v7 = this;
        v8 = 1;
LABEL_56:
        v17 = 0;
LABEL_57:
        v13 = AddrObjGoogle::protobuf::io::Tokenizer::ConsumeNumber(v7, v8, v17);
LABEL_65:
        *(_DWORD *)this = v13;
        v20 = *((_DWORD *)this + 33);
        v21 = *((int *)this + 40);
        if (v20 != (_DWORD)v21)
          std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((_QWORD *)this + 15) + v21), v20 - (int)v21);
        *((_QWORD *)this + 19) = 0;
        *((_DWORD *)this + 40) = -1;
        v6 = *((_DWORD *)this + 36);
        result = 1;
        goto LABEL_24;
      }
      if (v4 - 48 <= 9)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v7 = this;
        v8 = 0;
        goto LABEL_56;
      }
      if (v4 == 39)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v18 = this;
        v19 = 39;
        goto LABEL_62;
      }
      if (v4 == 34)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v18 = this;
        v19 = 34;
LABEL_62:
        AddrObjGoogle::protobuf::io::Tokenizer::ConsumeString(v18, v19);
        v13 = 5;
        goto LABEL_65;
      }
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    v13 = 6;
    goto LABEL_65;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "Invalid control characters encountered in text.");
  (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  if (v23 < 0)
    operator delete(__p[0]);
  while (1)
  {
    do
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    while (*((unsigned __int8 *)this + 112) - 1 < 0x1F);
    if (*((_BYTE *)this + 136))
      break;
    if (*((_BYTE *)this + 112))
      goto LABEL_4;
  }
LABEL_2:
  *(_DWORD *)this = 1;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  result = 0;
  v6 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 9) = v6;
LABEL_24:
  *((_DWORD *)this + 10) = v6;
  return result;
}

void sub_188832C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AddrObjGoogle::protobuf::io::Tokenizer::ParseInteger(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  unsigned __int8 *v4;
  int v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  signed int v16;
  int v17;
  void *__p;
  std::string v20[2];

  v4 = *(unsigned __int8 **)a1;
  if (*(char *)(a1 + 23) >= 0)
    v4 = (unsigned __int8 *)a1;
  v5 = *v4;
  if (v5 == 48)
  {
    if ((v4[1] | 0x20) == 0x78)
    {
      v6 = v4[2];
      v4 += 2;
      LOBYTE(v5) = v6;
      v7 = 16;
      if (!v6)
      {
LABEL_8:
        v8 = 0;
LABEL_25:
        *a3 = v8;
        return 1;
      }
    }
    else
    {
      LOBYTE(v5) = 48;
      v7 = 8;
    }
  }
  else
  {
    v7 = 10;
    if (!*v4)
      goto LABEL_8;
  }
  v8 = 0;
  v9 = v7;
  v10 = v4 + 1;
  while (1)
  {
    v11 = (char)v5;
    v12 = (v5 - 48);
    v13 = (v11 - 65) >= 0x1A ? -1 : v11 - 55;
    v14 = (v11 - 97) <= 0x19 ? v11 - 87 : v13;
    v15 = v11 - 48;
    v16 = v12 <= 9 ? v15 : v14;
    if (v16 >= v9)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/tokenizer.cc", 859);
      AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v20, " Tokenizer::ParseInteger() passed text that could not have been tokenized as an integer: ");
      AddrObjGoogle::protobuf::CEscape(a1, &__p);
    }
    if (a2 < v16 || v8 > (a2 - v16) / v9)
      return 0;
    v8 = v16 + v8 * v9;
    v17 = *v10++;
    LOBYTE(v5) = v17;
    if (!v17)
      goto LABEL_25;
  }
}

void sub_188832DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0)
    operator delete(__p);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::io::Tokenizer::ParseFloat(uint64_t a1, uint64_t a2, char **a3)
{
  AddrObjGoogle::protobuf *v4;
  unsigned __int8 *v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  void *__p;
  std::string v11[2];
  char v12[8];

  if (*(char *)(a1 + 23) >= 0)
    v4 = (AddrObjGoogle::protobuf *)a1;
  else
    v4 = *(AddrObjGoogle::protobuf **)a1;
  *(_QWORD *)v12 = 0;
  AddrObjGoogle::protobuf::NoLocaleStrtod(v4, v12, a3);
  v5 = *(unsigned __int8 **)v12;
  v6 = **(_BYTE **)v12;
  if ((v6 | 0x20) == 0x65)
  {
    v7 = (unsigned __int8 *)++*(_QWORD *)v12;
    v6 = v5[1];
    if (v6 == 45 || v6 == 43)
    {
      v7 = v5 + 2;
      *(_QWORD *)v12 = v5 + 2;
      v6 = v5[2];
    }
    v5 = v7;
  }
  if ((v6 | 0x20) == 0x66)
    *(_QWORD *)v12 = ++v5;
  v8 = v5 - (unsigned __int8 *)v4;
  v9 = *(unsigned __int8 *)(a1 + 23);
  if ((v9 & 0x80u) != 0)
    v9 = *(_QWORD *)(a1 + 8);
  if (v8 != v9 || *(_BYTE *)v4 == 45)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/tokenizer.cc", 892);
    AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v11, " Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: ");
    AddrObjGoogle::protobuf::CEscape(a1, &__p);
  }
}

void sub_188832F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  if (a16 < 0)
    operator delete(__p);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a17);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::io::Tokenizer::ParseStringAppend(uint64_t a1, std::string *this)
{
  uint64_t v3;
  char v4;
  std::string::size_type size;
  std::string::size_type v7;
  std::string::value_type *v8;
  std::string::value_type *v9;
  int v10;
  std::string::value_type *v11;
  int v12;
  std::string::value_type v13;
  std::string::value_type *v14;
  std::string::value_type v15;
  std::string::value_type v16;
  BOOL v17;
  std::string::value_type *v18;
  std::string::value_type v19;
  int v20;
  std::string::value_type v21;
  std::string::value_type v22;
  std::string::value_type *v23;
  int v24;
  std::string::value_type *v25;
  int v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  std::string::value_type v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  std::string::value_type *v39;
  AddrObjGoogle::protobuf *v40;
  std::string::size_type v41;
  char v42;
  std::string::value_type v43;
  int v44;
  char v45;
  char v46;
  unsigned int v47;
  char v48;
  unsigned int __p[5];
  std::string v50;

  v3 = *(unsigned __int8 *)(a1 + 23);
  v4 = v3;
  if ((v3 & 0x80u) != 0)
    v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)&v50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/tokenizer.cc", 1017);
    AddrObjGoogle::protobuf::internal::LogMessage::operator<<(&v50, " Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: ");
    AddrObjGoogle::protobuf::CEscape(a1, __p);
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    size = this->__r_.__value_.__l.__size_;
    v7 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    v7 = 22;
  }
  if (size + v3 > v7)
  {
    std::string::reserve(this, size + v3);
    v4 = *(_BYTE *)(a1 + 23);
  }
  if (v4 >= 0)
    v8 = (std::string::value_type *)a1;
  else
    v8 = *(std::string::value_type **)a1;
  while (1)
  {
    v9 = v8;
    v11 = v8 + 1;
    v10 = v8[1];
    if (v10 != 92)
      break;
    v8 += 2;
    v12 = v9[2];
    if (v9[2])
    {
      if (((char)v12 & 0xFFFFFFF8) == 0x30)
      {
        v13 = v12 - 48;
        v15 = v9[3];
        v14 = v9 + 3;
        v16 = v15 + 8 * (v12 - 48) - 48;
        v17 = (v15 & 0xF8) == 48;
        if ((v15 & 0xF8) == 0x30)
          v18 = v14;
        else
          v18 = v8;
        if (v17)
          v13 = v16;
        v19 = v18[1];
        v20 = v19 & 0xF8;
        v21 = v19 + 8 * v13 - 48;
        if (v20 == 48)
          v8 = v18 + 1;
        else
          v8 = v18;
        if (v20 == 48)
          v13 = v21;
        v22 = v13;
        goto LABEL_62;
      }
      if (v12 == 85 || v12 == 117)
      {
        __p[0] = 0;
        v30 = v9[2];
        if (v30 == 117)
          v31 = 4;
        else
          v31 = 8 * (v30 == 85);
        if (!sub_1888334E0(v9 + 3, v31, __p))
        {
          v22 = *v8;
          goto LABEL_62;
        }
        v38 = v31 | 3u;
        v39 = &v9[v38];
        v40 = (AddrObjGoogle::protobuf *)__p[0];
        if (__p[0] >> 10 == 54)
        {
          if (*v39 == 92 && v39[1] == 117)
          {
            LODWORD(v50.__r_.__value_.__l.__data_) = 0;
            if (sub_1888334E0(v39 + 2, 4, (unsigned int *)&v50))
            {
              if (LODWORD(v50.__r_.__value_.__l.__data_) >> 10 == 55)
              {
                LODWORD(v40) = ((LODWORD(v50.__r_.__value_.__l.__data_) - 56320) | (((_DWORD)v40 << 10) - 56623104))
                             + 0x10000;
                __p[0] = v40;
                v38 += 6;
              }
            }
          }
          v39 = &v9[v38];
        }
        else
        {
          if (__p[0] < 0x80)
          {
            v41 = 1;
            goto LABEL_92;
          }
          if (__p[0] <= 0x7FF)
          {
            v40 = (AddrObjGoogle::protobuf *)((4 * __p[0]) & 0x1F00 | __p[0] & 0x3F | 0xC080);
            v41 = 2;
            goto LABEL_92;
          }
        }
        if (!(v40 >> 16))
        {
          v40 = (AddrObjGoogle::protobuf *)((4 * (_DWORD)v40) & 0x3F00 | v40 & 0x3F | ((unsigned __int16)v40 >> 12 << 16) | 0xE08080u);
          v41 = 3;
LABEL_92:
          LODWORD(v50.__r_.__value_.__l.__data_) = AddrObjGoogle::protobuf::ghtonl(v40);
          std::string::append(this, (const std::string::value_type *)v50.__r_.__value_.__r.__words - v41 + 4, v41);
          goto LABEL_93;
        }
        if (!(v40 >> 21))
        {
          v40 = (AddrObjGoogle::protobuf *)((16 * (_DWORD)v40) & 0x3F0000 | v40 & 0x3F | (((v40 >> 18) & 7) << 24) | (((v40 >> 6) & 0x3F) << 8) | 0xF0808080);
          v41 = 4;
          goto LABEL_92;
        }
        AddrObjGoogle::protobuf::StringAppendF(this, "\\U%08x", v32, v33, v34, v35, v36, v37, (char)v40);
LABEL_93:
        v8 = v39 - 1;
      }
      else if (v12 == 120)
      {
        v26 = v9[3];
        v25 = v9 + 3;
        v24 = v26;
        v27 = v26 - 48;
        v28 = v26 - 97;
        if ((v26 - 48) < 0xA || v28 < 6u)
        {
          if (v27 <= 9u)
          {
            v29 = v24 - 48;
            goto LABEL_73;
          }
        }
        else if ((v24 - 65) > 5)
        {
          v29 = 0;
          v25 = v8;
          goto LABEL_73;
        }
        if ((v24 - 65) >= 0x1A)
          v42 = -1;
        else
          v42 = v24 - 55;
        v43 = v24 - 87;
        if (v28 <= 0x19u)
          v29 = v43;
        else
          v29 = v42;
LABEL_73:
        v44 = v25[1];
        if ((v44 - 48) >= 0xA && (v44 - 97) >= 6u)
        {
          if ((v44 - 65) > 5)
            goto LABEL_85;
          v45 = 16 * v29;
LABEL_79:
          v47 = (v44 - 97);
          if ((v44 - 65) >= 0x1A)
            v48 = -1;
          else
            v48 = v44 - 55;
          v46 = v44 - 87;
          if (v47 > 0x19)
            v46 = v48;
          goto LABEL_84;
        }
        v45 = 16 * v29;
        if ((v44 - 48) > 9u)
          goto LABEL_79;
        v46 = v44 - 48;
LABEL_84:
        v29 = v46 + v45;
        ++v25;
LABEL_85:
        std::string::push_back(this, v29);
        v8 = v25;
      }
      else
      {
        if ((char)v12 > 97)
        {
          switch((char)v12)
          {
            case 'n':
              v22 = 10;
              break;
            case 'o':
            case 'p':
            case 'q':
            case 's':
            case 'u':
              goto LABEL_100;
            case 'r':
              v22 = 13;
              break;
            case 't':
              v22 = 9;
              break;
            case 'v':
              v22 = 11;
              break;
            default:
              if ((char)v12 == 102)
              {
                v22 = 12;
              }
              else
              {
                if ((char)v12 != 98)
                  goto LABEL_100;
                v22 = 8;
              }
              break;
          }
        }
        else if ((char)v12 <= 62)
        {
          if ((char)v12 != 34)
          {
            if ((char)v12 == 39)
            {
              v22 = 39;
              goto LABEL_62;
            }
            goto LABEL_100;
          }
          v22 = 34;
        }
        else
        {
          if ((char)v12 == 63)
            goto LABEL_100;
          if ((char)v12 != 92)
          {
            if ((char)v12 == 97)
            {
              v22 = 7;
              goto LABEL_62;
            }
LABEL_100:
            v22 = 63;
            goto LABEL_62;
          }
          v22 = 92;
        }
LABEL_62:
        std::string::push_back(this, v22);
      }
    }
    else
    {
LABEL_29:
      if (*(char *)(a1 + 23) >= 0)
        v23 = (std::string::value_type *)a1;
      else
        v23 = *(std::string::value_type **)a1;
      if (v10 != *v23 || (v8 = v11, v9[2]))
      {
        std::string::push_back(this, v10);
        v8 = v11;
      }
    }
  }
  if (v8[1])
    goto LABEL_29;
}

void sub_1888334AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18)
{
  if (a17 < 0)
    operator delete(__p);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_1888334E0(_BYTE *a1, int a2, unsigned int *a3)
{
  unsigned int v3;
  _BYTE *v4;
  int v5;
  _BOOL8 v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;

  *a3 = 0;
  if (!a2)
    return 0;
  if (a2 < 1)
    return 1;
  v3 = 0;
  v4 = &a1[a2];
  do
  {
    v5 = (char)*a1;
    v6 = *a1 != 0;
    if (!*a1)
      break;
    v7 = 16 * v3;
    v8 = v5 - 48;
    v9 = v5 - 97;
    if ((v5 - 65) >= 0x1A)
      v10 = -1;
    else
      v10 = v5 - 55;
    v11 = v5 - 87;
    if (v9 > 0x19)
      v11 = v10;
    if (v8 <= 9)
      v11 = v8;
    v3 = v11 + v7;
    *a3 = v3;
    ++a1;
  }
  while (a1 < v4);
  return v6;
}

void addr_obj::VenueInfo::~VenueInfo(void ***this)
{
  void ***v2;

  std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](this + 3, 0);
  v2 = this;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v2);
}

std::vector<std::string> *addr_obj::VenueInfo::VenueInfo(std::vector<std::string> *this)
{
  std::string *v2;

  std::vector<std::string>::vector(this, 7uLL);
  v2 = (std::string *)operator new();
  v2->__r_.__value_.__r.__words[0] = 0;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  this[1].__begin_ = v2;
  addr_obj::VenueInfo::validate((addr_obj::VenueInfo *)this);
  return this;
}

void sub_188833604(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void ***v2;
  void ***v3;
  va_list va;

  va_start(va, a2);
  v3 = v2;
  std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](v3, 0);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

unint64_t addr_obj::VenueInfo::validate(addr_obj::VenueInfo *this)
{
  addr_obj::venue::Formatters *v2;
  unint64_t result;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  addr_obj::Logger *v8;
  void *p_p;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  addr_obj::Logger *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  addr_obj::Logger *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  std::logic_error *v25;
  _QWORD *v26;
  _QWORD *v27;
  std::logic_error *exception;
  _QWORD *v29;
  _QWORD *v30;
  std::logic_error *v31;
  void *v32[2];
  char v33;
  std::string v34;
  void *v35[2];
  char v36;
  void *__p;
  uint64_t v38;
  unsigned __int8 v39;
  void *v40[2];
  _QWORD v41[33];

  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 3) <= 4)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v41);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"only <", 6);
    v4 = (_QWORD *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)"> fields are present; at least <",
      32);
    v5 = (_QWORD *)std::ostream::operator<<();
    v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"> are required", 14);
    v7 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"; library version: ",
           19);
    v8 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v8))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v40);
      std::stringbuf::str();
      if ((v39 & 0x80u) == 0)
        p_p = &__p;
      else
        p_p = __p;
      if ((v39 & 0x80u) == 0)
        v10 = v39;
      else
        v10 = v38;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v40, (uint64_t)p_p, v10);
      if ((char)v39 < 0)
        operator delete(__p);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(v35, "validate");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v32, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 337, (uint64_t)v35, (uint64_t)&v34, (uint64_t)v32);
      if (v33 < 0)
        operator delete(v32[0]);
      if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v34.__r_.__value_.__l.__data_);
      if (v36 < 0)
        operator delete(v35[0]);
      if ((char)v39 < 0)
        operator delete(__p);
      std::ostringstream::~ostringstream((uint64_t)v40);
    }
    v26 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"; at ", 5);
    v27 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp", 83);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v27, (uint64_t)":", 1);
    std::ostream::operator<<();
    exception = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v40, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(exception, (const void **)v40, (uint64_t)&__p);
  }
  v2 = (addr_obj::venue::Formatters *)*((_QWORD *)this + 3);
  if (!v2)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v41);
    v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"the formatters_ must not be empty", 33);
    v12 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"; library version: ",
            19);
    v13 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v13))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v40);
      std::stringbuf::str();
      if ((v39 & 0x80u) == 0)
        v14 = &__p;
      else
        v14 = __p;
      if ((v39 & 0x80u) == 0)
        v15 = v39;
      else
        v15 = v38;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v40, (uint64_t)v14, v15);
      if ((char)v39 < 0)
        operator delete(__p);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(v35, "validate");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v32, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 339, (uint64_t)v35, (uint64_t)&v34, (uint64_t)v32);
      if (v33 < 0)
        operator delete(v32[0]);
      if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v34.__r_.__value_.__l.__data_);
      if (v36 < 0)
        operator delete(v35[0]);
      if ((char)v39 < 0)
        operator delete(__p);
      std::ostringstream::~ostringstream((uint64_t)v40);
    }
    v29 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"; at ", 5);
    v30 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v29, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp", 83);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v30, (uint64_t)":", 1);
    std::ostream::operator<<();
    v31 = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v40, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(v31, (const void **)v40, (uint64_t)&__p);
  }
  result = addr_obj::venue::Formatters::size(v2);
  if (result)
  {
    result = addr_obj::venue::Formatters::size(*((addr_obj::venue::Formatters **)this + 3));
    if (result <= 3)
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v41);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"only <", 6);
      addr_obj::venue::Formatters::size(*((addr_obj::venue::Formatters **)this + 3));
      v16 = (_QWORD *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"> formatters are present; at least <",
        36);
      v17 = (_QWORD *)std::ostream::operator<<();
      v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)"> are expected", 14);
      v19 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"; library version: ",
              19);
      v20 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v19, (uint64_t)"11.3.0", 6);
      if (addr_obj::Logger::isInitialized(v20))
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v40);
        std::stringbuf::str();
        if ((v39 & 0x80u) == 0)
          v21 = &__p;
        else
          v21 = __p;
        if ((v39 & 0x80u) == 0)
          v22 = v39;
        else
          v22 = v38;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v40, (uint64_t)v21, v22);
        if ((char)v39 < 0)
          operator delete(__p);
        std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
        std::string::basic_string[abi:ne180100]<0>(v35, "validate");
        std::stringbuf::str();
        std::string::basic_string[abi:ne180100]<0>(v32, "");
        addr_obj::Logger::log(16, (uint64_t)&__p, 344, (uint64_t)v35, (uint64_t)&v34, (uint64_t)v32);
        if (v33 < 0)
          operator delete(v32[0]);
        if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v34.__r_.__value_.__l.__data_);
        if (v36 < 0)
          operator delete(v35[0]);
        if ((char)v39 < 0)
          operator delete(__p);
        std::ostringstream::~ostringstream((uint64_t)v40);
      }
      v23 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v41, (uint64_t)"; at ", 5);
      v24 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp", 83);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v24, (uint64_t)":", 1);
      std::ostream::operator<<();
      v25 = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
      std::string::basic_string[abi:ne180100]<0>(v40, "LogicError");
      std::stringbuf::str();
      addr_obj::Exception<std::logic_error>::Exception(v25, (const void **)v40, (uint64_t)&__p);
    }
  }
  return result;
}

void sub_1888346F8()
{
  __cxa_end_catch();
  JUMPOUT(0x188834714);
}

void sub_188834710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
  std::ostringstream::~ostringstream((uint64_t)&a54);
  _Unwind_Resume(a1);
}

std::string *addr_obj::VenueInfo::VenueInfo(std::string *this, const addr_obj::VenueInfo *a2)
{
  std::string *v4;

  this->__r_.__value_.__r.__words[0] = 0;
  this->__r_.__value_.__l.__size_ = 0;
  this->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(this, *(__int128 **)a2, *((__int128 **)a2 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)a2 + 1) - *(_QWORD *)a2) >> 3));
  v4 = (std::string *)operator new();
  addr_obj::venue::Formatters::Formatters(v4, *((addr_obj::venue::Template ****)a2 + 3));
  this[1].__r_.__value_.__r.__words[0] = (std::string::size_type)v4;
  return this;
}

void sub_1888347AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x18D76437C](v2, 0x20C40960023A9);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

std::vector<std::string> *addr_obj::VenueInfo::VenueInfo(std::vector<std::string> *this, const addr_obj::VenueInfoProto *a2)
{
  uint64_t *v4;
  uint64_t **v5;
  int v6;
  std::vector<std::string>::pointer begin;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  addr_obj::Logger *v21;
  void *p_p;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  addr_obj::Logger *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  std::logic_error *v34;
  _QWORD *v35;
  _QWORD *v36;
  std::logic_error *exception;
  void *v38[2];
  char v39;
  std::string v40;
  void *v41[2];
  char v42;
  void *__p;
  uint64_t v44;
  unsigned __int8 v45;
  void *v46[2];
  addr_obj::venue::Template *v47[33];

  std::vector<std::string>::vector(this, *((int *)a2 + 6));
  v4 = (uint64_t *)operator new();
  v5 = (uint64_t **)&this[1];
  *v4 = 0;
  v4[1] = 0;
  v4[2] = 0;
  this[1].__begin_ = (std::vector<std::string>::pointer)v4;
  if (*((int *)a2 + 6) <= 4)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v47);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v47, (uint64_t)"only <", 6);
    v17 = (_QWORD *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)"> fields are present; at least <",
      32);
    v18 = (_QWORD *)std::ostream::operator<<();
    v19 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)"> are required", 14);
    v20 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v19, (uint64_t)"; library version: ",
            19);
    v21 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v21))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v46);
      std::stringbuf::str();
      if ((v45 & 0x80u) == 0)
        p_p = &__p;
      else
        p_p = __p;
      if ((v45 & 0x80u) == 0)
        v23 = v45;
      else
        v23 = v44;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v46, (uint64_t)p_p, v23);
      if ((char)v45 < 0)
        operator delete(__p);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(v41, "VenueInfo");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v38, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 126, (uint64_t)v41, (uint64_t)&v40, (uint64_t)v38);
      if (v39 < 0)
        operator delete(v38[0]);
      if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v40.__r_.__value_.__l.__data_);
      if (v42 < 0)
        operator delete(v41[0]);
      if ((char)v45 < 0)
        operator delete(__p);
      std::ostringstream::~ostringstream((uint64_t)v46);
    }
    v35 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v47, (uint64_t)"; at ", 5);
    v36 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp", 83);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v36, (uint64_t)":", 1);
    std::ostream::operator<<();
    exception = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v46, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(exception, (const void **)v46, (uint64_t)&__p);
  }
  v6 = *((_DWORD *)a2 + 12);
  if ((v6 - 1) < 3)
  {
    std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v47);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v47, (uint64_t)"only <", 6);
    v24 = (_QWORD *)std::ostream::operator<<();
    v25 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v24, (uint64_t)"> formatter(s) are present", 26);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v25, (uint64_t)"; either zero or at least <",
      27);
    v26 = (_QWORD *)std::ostream::operator<<();
    v27 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, (uint64_t)"> are required", 14);
    v28 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v27, (uint64_t)"; library version: ",
            19);
    v29 = (addr_obj::Logger *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v28, (uint64_t)"11.3.0", 6);
    if (addr_obj::Logger::isInitialized(v29))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v46);
      std::stringbuf::str();
      if ((v45 & 0x80u) == 0)
        v30 = &__p;
      else
        v30 = __p;
      if ((v45 & 0x80u) == 0)
        v31 = v45;
      else
        v31 = v44;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v46, (uint64_t)v30, v31);
      if ((char)v45 < 0)
        operator delete(__p);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(v41, "VenueInfo");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(v38, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 138, (uint64_t)v41, (uint64_t)&v40, (uint64_t)v38);
      if (v39 < 0)
        operator delete(v38[0]);
      if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v40.__r_.__value_.__l.__data_);
      if (v42 < 0)
        operator delete(v41[0]);
      if ((char)v45 < 0)
        operator delete(__p);
      std::ostringstream::~ostringstream((uint64_t)v46);
    }
    v32 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v47, (uint64_t)"; at ", 5);
    v33 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v32, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp", 83);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v33, (uint64_t)":", 1);
    std::ostream::operator<<();
    v34 = (std::logic_error *)__cxa_allocate_exception(0x28uLL);
    std::string::basic_string[abi:ne180100]<0>(v46, "LogicError");
    std::stringbuf::str();
    addr_obj::Exception<std::logic_error>::Exception(v34, (const void **)v46, (uint64_t)&__p);
  }
  begin = this->__begin_;
  if (this->__end_ != this->__begin_)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    do
    {
      std::string::operator=(&begin[v9], *(const std::string **)(*((_QWORD *)a2 + 2) + (v8 >> 29)));
      ++v10;
      begin = this->__begin_;
      ++v9;
      v8 += 0x100000000;
    }
    while (v10 < 0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_ - (char *)this->__begin_) >> 3));
    v6 = *((_DWORD *)a2 + 12);
    v4 = *v5;
  }
  std::vector<addr_obj::venue::Formatter>::reserve(v4, v6);
  if (v6 >= 1)
  {
    v11 = 0;
    v12 = 8 * v6;
    do
    {
      v13 = *v5;
      addr_obj::venue::Formatter::Formatter((addr_obj::venue::Formatter *)v47, *(const addr_obj::VenueFormatterProto **)(*((_QWORD *)a2 + 5) + v11));
      v14 = v13[1];
      if (v14 >= v13[2])
      {
        v15 = std::vector<addr_obj::venue::Formatter>::__push_back_slow_path<addr_obj::venue::Formatter>(v13, v47);
      }
      else
      {
        addr_obj::venue::Formatter::Formatter((std::string *)v13[1], v47);
        v15 = v14 + 24;
        v13[1] = v14 + 24;
      }
      v13[1] = v15;
      v46[0] = v47;
      std::vector<addr_obj::venue::Template>::__destroy_vector::operator()[abi:ne180100]((void ***)v46);
      v11 += 8;
    }
    while (v12 != v11);
  }
  addr_obj::VenueInfo::validate((addr_obj::VenueInfo *)this);
  return this;
}

void sub_18883547C()
{
  __cxa_end_catch();
  JUMPOUT(0x188835494);
}

void sub_188835490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void **a54)
{
  void ***v54;

  std::ostringstream::~ostringstream((uint64_t)&a54);
  std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](v54, 0);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a54);
  _Unwind_Resume(a1);
}

void sub_1888354A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void **a54)
{
  void ***v54;

  std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](v54, 0);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a54);
  _Unwind_Resume(a1);
}

void addr_obj::VenueInfo::toProto(const std::string **this, addr_obj::VenueInfoProto *a2)
{
  AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *v4;
  const std::string *i;
  int v6;
  uint64_t v7;
  uint64_t v8;
  std::string *v9;
  uint64_t v10;
  uint64_t v11;
  const std::string *v12;
  int ***v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  addr_obj::VenueFormatterProto *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)(*(uint64_t (**)(addr_obj::VenueInfoProto *))(*(_QWORD *)a2 + 32))(a2);
  for (i = *this; i != this[1]; ++i)
  {
    v6 = *((_DWORD *)a2 + 7);
    v7 = *((int *)a2 + 6);
    if ((int)v7 >= v6)
    {
      if (v6 == *((_DWORD *)a2 + 8))
      {
        v4 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 4, v6 + 1);
        v6 = *((_DWORD *)a2 + 7);
      }
      *((_DWORD *)a2 + 7) = v6 + 1;
      v9 = (std::string *)AddrObjGoogle::protobuf::internal::StringTypeHandlerBase::New(v4);
      v10 = *((_QWORD *)a2 + 2);
      v11 = *((int *)a2 + 6);
      *((_DWORD *)a2 + 6) = v11 + 1;
      *(_QWORD *)(v10 + 8 * v11) = v9;
    }
    else
    {
      v8 = *((_QWORD *)a2 + 2);
      *((_DWORD *)a2 + 6) = v7 + 1;
      v9 = *(std::string **)(v8 + 8 * v7);
    }
    v4 = (AddrObjGoogle::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v9, i);
  }
  v12 = this[3];
  v13 = (int ***)v12->__r_.__value_.__r.__words[0];
  if (v12->__r_.__value_.__r.__words[0] != v12->__r_.__value_.__l.__size_)
  {
    do
    {
      v14 = *((_DWORD *)a2 + 13);
      v15 = *((int *)a2 + 12);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)a2 + 14))
        {
          AddrObjGoogle::protobuf::internal::RepeatedPtrFieldBase::Reserve((int *)a2 + 10, v14 + 1);
          v14 = *((_DWORD *)a2 + 13);
        }
        *((_DWORD *)a2 + 13) = v14 + 1;
        v17 = AddrObjGoogle::protobuf::internal::GenericTypeHandler<addr_obj::VenueFormatterProto>::New();
        v18 = *((_QWORD *)a2 + 5);
        v19 = *((int *)a2 + 12);
        *((_DWORD *)a2 + 12) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)a2 + 5);
        *((_DWORD *)a2 + 12) = v15 + 1;
        v17 = *(addr_obj::VenueFormatterProto **)(v16 + 8 * v15);
      }
      addr_obj::venue::Formatter::toProto(v13, v17);
      v13 += 3;
    }
    while (v13 != (int ***)this[3]->__r_.__value_.__l.__size_);
  }
}

void addr_obj::VenueInfo::getLabel(uint64_t a1@<X0>, unsigned int a2@<W1>, std::string *a3@<X8>)
{
  unsigned __int8 v6;
  addr_obj::Debugging *v7;
  addr_obj::Logger *v8;
  int v9;
  std::string::size_type size;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  std::string v15;
  std::string v16;
  std::string __p[2];

  v6 = atomic_load((unsigned __int8 *)&qword_1EDF508E8);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_1EDF508E8))
  {
    std::string::basic_string[abi:ne180100]<0>(&v16, "ZZZ");
    std::string::basic_string[abi:ne180100]<0>(&v15, "qq");
    addr_obj::venue::VenueInfoFormatterParams::VenueInfoFormatterParams((uint64_t)__p, 0, (__int128 *)&v16, (__int128 *)&v15);
    addr_obj::venue::Formatters::Formatters((addr_obj::venue::Formatters *)qword_1EDF508D0, (const addr_obj::venue::VenueInfoFormatterParams *)__p);
    addr_obj::venue::VenueInfoFormatterParams::~VenueInfoFormatterParams((void **)&__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
    __cxa_guard_release(&qword_1EDF508E8);
  }
  v7 = (addr_obj::Debugging *)addr_obj::venue::Formatters::size(*(addr_obj::venue::Formatters **)(a1 + 24));
  if ((unint64_t)v7 <= a2)
  {
    v7 = (addr_obj::Debugging *)addr_obj::venue::Formatters::operator[](qword_1EDF508D0, a2);
    v8 = v7;
  }
  else
  {
    v8 = (addr_obj::Logger *)(**(_QWORD **)(a1 + 24) + 24 * a2);
  }
  v9 = addr_obj::Debugging::addChar(v7);
  if (!v9)
    goto LABEL_13;
  addr_obj::venue::Formatter::label(v8, (uint64_t *)a1, __p);
  size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
  if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p[0].__r_.__value_.__l.__size_;
  if (size)
  {
    addr_obj::venue::Formatter::label(v8, (uint64_t *)a1, &v15);
    v11 = std::string::insert(&v15, 0, "[");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v16.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v16, "]");
    v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    a3->__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
  }
  else
  {
LABEL_13:
    addr_obj::venue::Formatter::label(v8, (uint64_t *)a1, a3);
    if (!v9)
      return;
  }
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
}

void sub_188835844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  addr_obj::venue::VenueInfoFormatterParams::~VenueInfoFormatterParams(&a22);
  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  __cxa_guard_abort(&qword_1EDF508E8);
  _Unwind_Resume(a1);
}

void addr_obj::venue::VenueInfoFormatterParams::~VenueInfoFormatterParams(void **this)
{
  if (*((char *)this + 55) < 0)
    operator delete(this[4]);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

void addr_obj::VenueInfo::getShortAddress(addr_obj *a1@<X0>, uint64_t a2@<X1>, addr_obj *a3@<X2>, std::string *a4@<X8>)
{
  uint64_t v5;
  __int128 *v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  __int128 *v13;
  __int128 *v14;
  __int128 v15;
  std::string::size_type size;
  __int128 *v17;
  __int128 v18;
  void *__p[2];
  char v20;
  std::string v21;

  v5 = *(unsigned __int8 *)(a2 + 23);
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
  {
    v10 = addr_obj::emptyString(a1);
    if (*((char *)v10 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v10, *((_QWORD *)v10 + 1));
    }
    else
    {
      v11 = *v10;
      a4->__r_.__value_.__r.__words[2] = *((_QWORD *)v10 + 2);
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v11;
    }
    return;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)a1 + 1) - *(_QWORD *)a1) >> 3) <= 1)
    v9 = addr_obj::emptyString(a1);
  else
    v9 = (__int128 *)(*(_QWORD *)a1 + 24);
  if (*((char *)v9 + 23) < 0)
    v12 = *((_QWORD *)v9 + 1);
  else
    v12 = *((unsigned __int8 *)v9 + 23);
  v13 = *(__int128 **)a1;
  v14 = (__int128 *)*((_QWORD *)a1 + 1);
  if (!v12)
  {
    if (v14 != v13)
      goto LABEL_17;
LABEL_16:
    v13 = addr_obj::emptyString((addr_obj *)v13);
    goto LABEL_17;
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)v14 - (char *)v13) >> 3) <= 1)
    goto LABEL_16;
  v13 = (__int128 *)((char *)v13 + 24);
LABEL_17:
  if (*((char *)v13 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)v13, *((_QWORD *)v13 + 1));
  }
  else
  {
    v15 = *v13;
    v21.__r_.__value_.__r.__words[2] = *((_QWORD *)v13 + 2);
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
  }
  size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v21.__r_.__value_.__l.__size_;
  if (size)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    addr_obj::Formatting::buildLegacyShortAddress(a3, (uint64_t)&v21, a2, (uint64_t)__p, a4);
    if (v20 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v17 = addr_obj::emptyString((addr_obj *)v13);
    if (*((char *)v17 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v17, *((_QWORD *)v17 + 1));
    }
    else
    {
      v18 = *v17;
      a4->__r_.__value_.__r.__words[2] = *((_QWORD *)v17 + 2);
      *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v18;
    }
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_188835AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__int128 *addr_obj::VenueInfo::getLevel(addr_obj::VenueInfo *this)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)this + 1) - *(_QWORD *)this) >> 3) <= 3)
    return addr_obj::emptyString(this);
  else
    return (__int128 *)(*(_QWORD *)this + 72);
}

BOOL addr_obj::VenueInfo::empty(addr_obj::VenueInfo *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL8 result;
  BOOL v5;

  v1 = *((_QWORD *)this + 1);
  if (*(_QWORD *)this == v1)
    return 1;
  v2 = *(_QWORD *)this + 24;
  do
  {
    if (*(char *)(v2 - 1) < 0)
      v3 = *(_QWORD *)(v2 - 16);
    else
      v3 = *(unsigned __int8 *)(v2 - 1);
    result = v3 == 0;
    if (v3)
      v5 = 1;
    else
      v5 = v2 == v1;
    v2 += 24;
  }
  while (!v5);
  return result;
}

uint64_t addr_obj::VenueInfo::str(__int128 **this)
{
  __int128 *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  addr_obj *v7;
  addr_obj *v8;
  __int128 *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  addr_obj *v16;
  addr_obj *v17;
  __int128 *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v25[2];
  _QWORD v26[11];
  char v27;
  uint64_t v28;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v25);
  v2 = *this;
  if (this[1] == *this)
    v2 = addr_obj::emptyString((addr_obj *)v2);
  v3 = *((char *)v2 + 23);
  if (v3 >= 0)
    v4 = (uint64_t)v2;
  else
    v4 = *(_QWORD *)v2;
  if (v3 >= 0)
    v5 = *((unsigned __int8 *)v2 + 23);
  else
    v5 = *((_QWORD *)v2 + 1);
  v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, v4, v5);
  v7 = (addr_obj *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"(", 1);
  v8 = v7;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this[1] - (char *)*this) >> 3) <= 1)
    v9 = addr_obj::emptyString(v7);
  else
    v9 = (__int128 *)((char *)*this + 24);
  v10 = *((char *)v9 + 23);
  if (v10 >= 0)
    v11 = (uint64_t)v9;
  else
    v11 = *(_QWORD *)v9;
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)v9 + 23);
  else
    v12 = *((_QWORD *)v9 + 1);
  v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, v11, v12);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, (uint64_t)")", 1);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this[1] - (char *)*this) >> 3) >= 3)
  {
    v14 = 2;
    v15 = 48;
    do
    {
      v16 = (addr_obj *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, (uint64_t)", ", 2);
      v17 = v16;
      if (0xAAAAAAAAAAAAAAABLL * (((char *)this[1] - (char *)*this) >> 3) <= v14)
        v18 = addr_obj::emptyString(v16);
      else
        v18 = (__int128 *)((char *)*this + v15);
      v19 = *((char *)v18 + 23);
      if (v19 >= 0)
        v20 = (uint64_t)v18;
      else
        v20 = *(_QWORD *)v18;
      if (v19 >= 0)
        v21 = *((unsigned __int8 *)v18 + 23);
      else
        v21 = *((_QWORD *)v18 + 1);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, v20, v21);
      ++v14;
      v15 += 24;
    }
    while (v14 < 0xAAAAAAAAAAAAAAABLL * (((char *)this[1] - (char *)*this) >> 3));
  }
  v22 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v26, (uint64_t)"; formatters: ", 14);
  addr_obj::venue::operator<<(v22, (_QWORD **)this + 3);
  std::stringbuf::str();
  v25[0] = *MEMORY[0x1E0DE4F50];
  v23 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v25 + *(_QWORD *)(v25[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v26[0] = v23;
  v26[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v27 < 0)
    operator delete((void *)v26[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x18D764310](&v28);
}

void sub_188835DC0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::string *v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;

  __cxa_begin_catch(a1);
  v12 = *(__int128 **)v11;
  if (*(_QWORD *)(v11 + 8) == *(_QWORD *)v11)
    v12 = addr_obj::emptyString((addr_obj *)v12);
  if (*((char *)v12 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v10, *(const std::string::value_type **)v12, *((_QWORD *)v12 + 1));
  }
  else
  {
    v13 = *v12;
    v10->__r_.__value_.__r.__words[2] = *((_QWORD *)v12 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v13;
  }
  __cxa_end_catch();
  JUMPOUT(0x188835DA0);
}

void sub_188835E20(void *a1)
{
  __cxa_end_catch();
  __cxa_call_unexpected(a1);
}

uint64_t addr_obj::VenueInfo::toDebugJsonString@<X0>(uint64_t **this@<X0>, addr_obj::Json *a2@<X8>)
{
  addr_obj *v4;
  uint64_t *v5;
  addr_obj *v6;
  uint64_t *v7;
  addr_obj *v8;
  uint64_t *v9;
  addr_obj *v10;
  uint64_t *v11;
  addr_obj *v12;
  uint64_t *v13;
  addr_obj::Json *v14;
  void *v16[2];
  char v17;
  std::string __p;
  _QWORD v19[11];
  char v20;
  uint64_t v21;

  addr_obj::Json::Json((addr_obj::Json *)v19);
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::COMPLETE)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 2u, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v17 < 0)
    operator delete(v16[0]);
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::COMPLETE_PREFER_LONG_NAME)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 3u, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v17 < 0)
    operator delete(v16[0]);
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::EXTERIOR)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 0, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v17 < 0)
    operator delete(v16[0]);
  std::string::basic_string[abi:ne180100]<0>(v16, "getLabel(venue::LabelContext::INTERIOR)");
  addr_obj::VenueInfo::getLabel((uint64_t)this, 1u, &__p);
  addr_obj::Json::append(v19, (uint64_t *)v16, (uint64_t *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v17 < 0)
    operator delete(v16[0]);
  v4 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getFullName");
  v5 = *this;
  if (this[1] == *this)
    v5 = (uint64_t *)addr_obj::emptyString(v4);
  addr_obj::Json::append(v19, (uint64_t *)v16, v5);
  if (v17 < 0)
    operator delete(v16[0]);
  v6 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getShortName");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 1)
    v7 = (uint64_t *)addr_obj::emptyString(v6);
  else
    v7 = *this + 3;
  addr_obj::Json::append(v19, (uint64_t *)v16, v7);
  if (v17 < 0)
    operator delete(v16[0]);
  v8 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getLevel");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 3)
    v9 = (uint64_t *)addr_obj::emptyString(v8);
  else
    v9 = *this + 9;
  addr_obj::Json::append(v19, (uint64_t *)v16, v9);
  if (v17 < 0)
    operator delete(v16[0]);
  v10 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getBuilding");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 2)
    v11 = (uint64_t *)addr_obj::emptyString(v10);
  else
    v11 = *this + 6;
  addr_obj::Json::append(v19, (uint64_t *)v16, v11);
  if (v17 < 0)
    operator delete(v16[0]);
  v12 = (addr_obj *)std::string::basic_string[abi:ne180100]<0>(v16, "getShortLevel");
  if (0xAAAAAAAAAAAAAAABLL * (this[1] - *this) <= 4)
    v13 = (uint64_t *)addr_obj::emptyString(v12);
  else
    v13 = *this + 12;
  addr_obj::Json::append(v19, (uint64_t *)v16, v13);
  if (v17 < 0)
    operator delete(v16[0]);
  v14 = addr_obj::Json::close((addr_obj::Json *)v19);
  addr_obj::Json::Json(a2, v14);
  v19[0] = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)((char *)v19 + *(_QWORD *)(v19[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
  v19[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v20 < 0)
    operator delete((void *)v19[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D764310](&v21);
}

void sub_1888361EC(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *__s, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a70;
  uint64_t a71;
  addr_obj::Logger *v73;
  _QWORD *v74;
  const char *v75;
  size_t v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  size_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  addr_obj::Logger *v85;
  addr_obj::Logger *v86;
  _QWORD *v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;

  if (a70 < 0)
    operator delete(__p);
  if (a34 < 0)
    operator delete(a29);
  if (a2 == 4)
  {
    v73 = (addr_obj::Logger *)__cxa_begin_catch(a1);
    if (addr_obj::Logger::isInitialized(v73))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
      v74 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"std::exception: ", 16);
      v75 = (const char *)(*(uint64_t (**)(addr_obj::Logger *))(*(_QWORD *)v73 + 16))(v73);
      v76 = strlen(v75);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v74, (uint64_t)v75, v76);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(&a11, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
      if (a16 < 0)
        operator delete(a11);
      if (a22 < 0)
        operator delete(a17);
      if (a28 < 0)
        operator delete(a23);
      if (a70 < 0)
        operator delete(__p);
      std::ostringstream::~ostringstream((uint64_t)&a29);
    }
    v77 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
    v78 = addr_obj::Json::operator<<<char [52]>(v77, "Json addr_obj::VenueInfo::toDebugJsonString() const");
    v79 = addr_obj::Json::operator<<<char [19]>(v78, ": std::exception: ");
    a29 = (void *)(*(uint64_t (**)(addr_obj::Logger *))(*(_QWORD *)v73 + 16))(v73);
    addr_obj::Json::operator<<<char const*>(v79, (char **)&a29);
    __cxa_end_catch();
  }
  else if (a2 == 3)
  {
    __s = (char *)__cxa_begin_catch(a1);
    if (addr_obj::Logger::isInitialized((addr_obj::Logger *)__s))
    {
      std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
      v80 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"const char* exception: ", 23);
      v81 = strlen(__s);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v80, (uint64_t)__s, v81);
      std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
      std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
      std::stringbuf::str();
      std::string::basic_string[abi:ne180100]<0>(&a11, "");
      addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
      if (a16 < 0)
        operator delete(a11);
      if (a22 < 0)
        operator delete(a17);
      if (a28 < 0)
        operator delete(a23);
      if (a70 < 0)
        operator delete(__p);
      std::ostringstream::~ostringstream((uint64_t)&a29);
    }
    v82 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
    v83 = addr_obj::Json::operator<<<char [52]>(v82, "Json addr_obj::VenueInfo::toDebugJsonString() const");
    v84 = addr_obj::Json::operator<<<char [17]>(v83, ": const char *: ");
    addr_obj::Json::operator<<<char const*>(v84, &__s);
    __cxa_end_catch();
  }
  else
  {
    v85 = (addr_obj::Logger *)__cxa_begin_catch(a1);
    if (a2 == 2)
    {
      v86 = v85;
      if (addr_obj::Logger::isInitialized(v85))
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
        v87 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"std::string exception: ", 23);
        v88 = *((char *)v86 + 23);
        if (v88 >= 0)
          v89 = (uint64_t)v86;
        else
          v89 = *(_QWORD *)v86;
        if (v88 >= 0)
          v90 = *((unsigned __int8 *)v86 + 23);
        else
          v90 = *((_QWORD *)v86 + 1);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v87, v89, v90);
        std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
        std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
        std::stringbuf::str();
        std::string::basic_string[abi:ne180100]<0>(&a11, "");
        addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
        if (a16 < 0)
          operator delete(a11);
        if (a22 < 0)
          operator delete(a17);
        if (a28 < 0)
          operator delete(a23);
        if (a70 < 0)
          operator delete(__p);
        std::ostringstream::~ostringstream((uint64_t)&a29);
      }
      v91 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
      v92 = addr_obj::Json::operator<<<char [52]>(v91, "Json addr_obj::VenueInfo::toDebugJsonString() const");
      v93 = addr_obj::Json::operator<<<char [26]>(v92, ": std::string exception: ");
      addr_obj::Json::escape(v93, (uint64_t *)v86);
      __cxa_end_catch();
    }
    else
    {
      if (addr_obj::Logger::isInitialized(v85))
      {
        std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&a29);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&a29, (uint64_t)"unknown exception", 17);
        std::string::basic_string[abi:ne180100]<0>(&__p, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
        std::string::basic_string[abi:ne180100]<0>(&a23, "toDebugJsonString");
        std::stringbuf::str();
        std::string::basic_string[abi:ne180100]<0>(&a11, "");
        addr_obj::Logger::log(16, (uint64_t)&__p, 325, (uint64_t)&a23, (uint64_t)&a17, (uint64_t)&a11);
        if (a16 < 0)
          operator delete(a11);
        if (a22 < 0)
          operator delete(a17);
        if (a28 < 0)
          operator delete(a23);
        if (a70 < 0)
          operator delete(__p);
        std::ostringstream::~ostringstream((uint64_t)&a29);
      }
      v94 = addr_obj::Json::operator<<<char [3]>(&a71, "; ");
      v95 = addr_obj::Json::operator<<<char [52]>(v94, "Json addr_obj::VenueInfo::toDebugJsonString() const");
      addr_obj::Json::operator<<<char [20]>(v95, ": unknown exception");
      __cxa_end_catch();
    }
  }
  JUMPOUT(0x188835FA8);
}

void sub_18883C500(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883C3D0);
}

void sub_18883CB30(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883C400);
}

void sub_18883CBC8()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18883CBD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883CA84);
}

void sub_18883CC60()
{
  __cxa_end_catch();
  JUMPOUT(0x18883CBB8);
}

void sub_18883CC6C(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 325, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883C158);
}

void sub_18883CCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x18883CFFCLL);
}

void sub_18883CCE8()
{
  JUMPOUT(0x18883CCF0);
}

void sub_18883CEA8(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883C2D4);
}

void sub_18883CF44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883CDFCLL);
}

void sub_18883CFD0()
{
  __cxa_end_catch();
  JUMPOUT(0x18883CF30);
}

void sub_18883CFDC()
{
  JUMPOUT(0x18883CFE4);
}

void sub_18883CFF4()
{
  JUMPOUT(0x18883CFFCLL);
}

void sub_18883D19C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883C1A4);
}

void sub_18883D234()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18883D240(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883D0F0);
}

void sub_18883D2CC()
{
  __cxa_end_catch();
  JUMPOUT(0x18883D224);
}

void sub_18883D2D8()
{
  JUMPOUT(0x18883D2E0);
}

void sub_18883D794(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883D664);
}

void sub_18883DDC4(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883D694);
}

void sub_18883DE5C()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18883DE68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883DD18);
}

void sub_18883DEF4()
{
  __cxa_end_catch();
  JUMPOUT(0x18883DE4CLL);
}

void sub_18883DF00(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 324, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883D3ECLL);
}

void sub_18883DF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x18883E290);
}

void sub_18883DF7C()
{
  JUMPOUT(0x18883DF84);
}

void sub_18883E13C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883D568);
}

void sub_18883E1D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883E090);
}

void sub_18883E264()
{
  __cxa_end_catch();
  JUMPOUT(0x18883E1C4);
}

void sub_18883E270()
{
  JUMPOUT(0x18883E278);
}

void sub_18883E288()
{
  JUMPOUT(0x18883E290);
}

void sub_18883E430(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883D438);
}

void sub_18883E4C8()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18883E4D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883E384);
}

void sub_18883E560()
{
  __cxa_end_catch();
  JUMPOUT(0x18883E4B8);
}

void sub_18883E56C()
{
  JUMPOUT(0x18883E574);
}

void sub_18883EA28(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883E8F8);
}

void sub_18883F058(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883E928);
}

void sub_18883F0F0()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18883F0FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883EFACLL);
}

void sub_18883F188()
{
  __cxa_end_catch();
  JUMPOUT(0x18883F0E0);
}

void sub_18883F194(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 323, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883E680);
}

void sub_18883F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x18883F524);
}

void sub_18883F210()
{
  JUMPOUT(0x18883F218);
}

void sub_18883F3D0(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883E7FCLL);
}

void sub_18883F46C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883F324);
}

void sub_18883F4F8()
{
  __cxa_end_catch();
  JUMPOUT(0x18883F458);
}

void sub_18883F504()
{
  JUMPOUT(0x18883F50CLL);
}

void sub_18883F51C()
{
  JUMPOUT(0x18883F524);
}

void sub_18883F6C4(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883E6CCLL);
}

void sub_18883F75C()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18883F768(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883F618);
}

void sub_18883F7F4()
{
  __cxa_end_catch();
  JUMPOUT(0x18883F74CLL);
}

void sub_18883F800()
{
  JUMPOUT(0x18883F808);
}

void sub_18883FCC0(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883FB90);
}

void sub_1888402F0(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883FBC0);
}

void sub_188840388()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_188840394(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x188840244);
}

void sub_188840420()
{
  __cxa_end_catch();
  JUMPOUT(0x188840378);
}

void sub_18884042C(void *a1, int a2, void *__p, uint64_t a4, int a5, __int16 a6, char a7, char a8, std::string *a9, void *a10, void *__pa, int a12, __int16 a13, char a14, char a15, void *a16, void *a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,__int128 a23,std::string::size_type a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  void *v69;
  void *v70;
  const std::string::value_type *v71;
  std::string *v72;
  __int128 v73;

  if (SHIBYTE(a16) < 0)
    operator delete(__pa);
  if (SHIBYTE(a22) < 0)
    operator delete(a17);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)a23);
  if (a66 < 0)
    operator delete(a61);
  std::ostringstream::~ostringstream((uint64_t)&a25);
  v69 = __cxa_begin_catch(a1);
  if (a2 == v66)
  {
    v70 = v69;
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a17, "Exception caught during formatting of the log line: ");
    v71 = (const std::string::value_type *)(*(uint64_t (**)(void *))(*(_QWORD *)v70 + 16))(v70);
    v72 = std::string::append((std::string *)&a17, v71);
    v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    a24 = v72->__r_.__value_.__r.__words[2];
    a23 = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string[abi:ne180100]<0>(&__pa, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&__pa);
    if (SHIBYTE(a16) < 0)
      operator delete(__pa);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&a25, "/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/src/VenueInfo.cpp");
    std::string::basic_string[abi:ne180100]<0>(&a61, "toDebugJsonString");
    std::string::basic_string[abi:ne180100]<0>(&a23, "Unexpected exception caught during formatting of the log line");
    std::string::basic_string[abi:ne180100]<0>(&a17, "");
    addr_obj::Logger::log(16, (uint64_t)&a25, 322, (uint64_t)&a61, (uint64_t)&a23, (uint64_t)&a17);
    if (SHIBYTE(a22) < 0)
      operator delete(a17);
    if (SHIBYTE(a24) < 0)
      operator delete((void *)a23);
    if (a66 < 0)
      operator delete(a61);
    if (SHIBYTE(a27) < 0)
      operator delete(a25);
  }
  __cxa_end_catch();
  JUMPOUT(0x18883F910);
}

void sub_18884049C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  std::ostringstream::~ostringstream((uint64_t *)va);
  JUMPOUT(0x1888407C4);
}

void sub_1888404A8()
{
  JUMPOUT(0x1888404B0);
}

void sub_188840668(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883FA94);
}

void sub_188840700()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_18884070C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1888405BCLL);
}

void sub_188840798()
{
  __cxa_end_catch();
  JUMPOUT(0x1888406F0);
}

void sub_1888407A4()
{
  JUMPOUT(0x1888407ACLL);
}

void sub_1888407BC()
{
  JUMPOUT(0x1888407C4);
}

void sub_188840964(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x18883F95CLL);
}

void sub_1888409FC()
{
  __cxa_end_catch();
  JUMPOUT(0x188840AB0);
}

void sub_188840A08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a65;
  char a70;

  if (a16 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a22 < 0)
    operator delete(a17);
  if (a70 < 0)
    operator delete(a65);
  if (a34 < 0)
    operator delete(a29);
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1888408B8);
}

void sub_188840A94()
{
  __cxa_end_catch();
  JUMPOUT(0x1888409ECLL);
}

void sub_188840AA4()
{
  JUMPOUT(0x188840AB8);
}

void sub_188840AAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  std::ostringstream::~ostringstream((uint64_t)&a56);
  __cxa_call_unexpected(a1);
}

_QWORD *addr_obj::Json::operator<<<char [52]>(_QWORD *a1, char *a2)
{
  void *__p[2];
  char v5;

  std::string::basic_string[abi:ne180100]<0>(__p, a2);
  addr_obj::Json::escape(a1, (uint64_t *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
  return a1;
}

_QWORD *addr_obj::operator<<(_QWORD *a1, __int128 **this)
{
  void **v3;
  uint64_t v4;
  _QWORD *v5;
  void *__p[2];
  unsigned __int8 v8;

  addr_obj::VenueInfo::str(this);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v3, v4);
  if ((char)v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_188840B7C(void *a1, std::string *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::string::~string((std::string *)&a10);
  __cxa_call_unexpected(a1);
}

uint64_t addr_obj::venue::VenueInfoFormatterParams::VenueInfoFormatterParams(uint64_t a1, int a2, __int128 *a3, __int128 *a4)
{
  __int128 v6;
  std::string *v7;
  __int128 v8;

  *(_DWORD *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v6 = *a3;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v6;
  }
  v7 = (std::string *)(a1 + 32);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v8 = *a4;
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a4 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

void sub_188840C14(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::resize(std::vector<std::string> *this, std::vector<std::string>::size_type __sz)
{
  std::vector<std::string>::pointer end;
  std::vector<std::string>::size_type v4;
  BOOL v5;
  std::vector<std::string>::size_type v6;
  std::string *v7;

  end = this->__end_;
  v4 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)this->__begin_) >> 3);
  v5 = __sz >= v4;
  v6 = __sz - v4;
  if (v6 != 0 && v5)
  {
    std::vector<std::string>::__append(this, v6);
  }
  else if (!v5)
  {
    v7 = &this->__begin_[__sz];
    while (end != v7)
    {
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(end[-1].__r_.__value_.__l.__data_);
      --end;
    }
    this->__end_ = v7;
  }
}

void std::vector<std::string>::__append(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  std::allocator<std::string> *p_end_cap;
  std::string *v5;
  std::string *value;
  std::string *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::string *v12;
  size_t v13;
  size_t v14;
  std::__split_buffer<std::string> __v;

  value = this->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::string> *)&this->__end_cap_;
  v5 = value;
  v7 = (std::string *)*((_QWORD *)p_end_cap - 1);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)v7) >> 3) >= __n)
  {
    if (__n)
    {
      v13 = 24 * ((24 * __n - 24) / 0x18) + 24;
      bzero(*((void **)p_end_cap - 1), v13);
      v7 = (std::string *)((char *)v7 + v13);
    }
    this->__end_ = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)this->__begin_) >> 3);
    v9 = v8 + __n;
    if (v8 + __n > 0xAAAAAAAAAAAAAAALL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)this->__begin_) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    __v.__end_cap_.__value_ = p_end_cap;
    if (v11)
      v12 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)p_end_cap, v11);
    else
      v12 = 0;
    __v.__first_ = v12;
    __v.__begin_ = v12 + v8;
    __v.__end_cap_.__value_ = &v12[v11];
    v14 = 24 * ((24 * __n - 24) / 0x18) + 24;
    bzero(__v.__begin_, v14);
    __v.__end_ = (std::__split_buffer<std::string>::pointer)((char *)__v.__begin_ + v14);
    std::vector<std::string>::__swap_out_circular_buffer(this, &__v);
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
}

void sub_188840E0C(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a10);
  _Unwind_Resume(a1);
}

void ***std::unique_ptr<addr_obj::venue::Formatters>::reset[abi:ne180100](void ***result, void **a2)
{
  void **v2;
  void **v3;

  v2 = *result;
  *result = a2;
  if (v2)
  {
    v3 = v2;
    std::vector<addr_obj::venue::Formatter>::__destroy_vector::operator()[abi:ne180100](&v3);
    return (void ***)MEMORY[0x18D76437C](v2, 0x20C40960023A9);
  }
  return result;
}

std::vector<std::string> *__cdecl std::vector<std::string>::vector(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  std::vector<std::string>::pointer end;
  size_t v5;

  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<zilch::TrafficDynamicTile::Flow>::__vallocate[abi:ne180100](this, __n);
    end = this->__end_;
    v5 = 24 * ((24 * __n - 24) / 0x18) + 24;
    bzero(end, v5);
    this->__end_ = (std::vector<std::string>::pointer)((char *)end + v5);
  }
  return this;
}

void sub_188840EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

_DWORD *AddrObjGoogle::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(_DWORD *this)
{
  _DWORD *v1;
  uint64_t v2;
  unsigned int v3;

  if (this[7] + this[11] + this[4] - this[2] >= 1)
  {
    v1 = this;
    this = (_DWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 24))(*(_QWORD *)this);
    v2 = *((_QWORD *)v1 + 1);
    v3 = v1[6] - v1[11] + v2 - v1[4];
    *((_QWORD *)v1 + 2) = v2;
    v1[11] = 0;
    *((_QWORD *)v1 + 3) = v3;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::BytesUntilLimit(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  int v1;

  v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF)
    return 0xFFFFFFFFLL;
  else
    return (v1
                        - *((_DWORD *)this + 6)
                        + *((_DWORD *)this + 11)
                        + *((_DWORD *)this + 4)
                        - *((_DWORD *)this + 2));
}

void AddrObjGoogle::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  std::string *v2;
  std::string *v3;
  std::string *v4;
  char v5;
  std::string v6[2];

  AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/coded_stream.cc", 172);
  v2 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  v3 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  v4 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
  AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (AddrObjGoogle::protobuf::internal::LogMessage *)v4);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_188841038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::Skip(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t result;
  int v9;
  int v10;
  uint64_t v11;

  if ((a2 & 0x80000000) == 0)
  {
    v4 = *((_QWORD *)this + 1);
    v3 = (_QWORD *)((char *)this + 8);
    v5 = *((_QWORD *)this + 2) - v4;
    v6 = __OFSUB__(a2, (_DWORD)v5);
    v7 = a2 - v5;
    if ((v7 < 0) ^ v6 | (v7 == 0))
    {
      *v3 = v4 + a2;
      return 1;
    }
    if (*((int *)this + 11) >= 1)
    {
      result = 0;
      *v3 = v4 + (int)v5;
      return result;
    }
    *v3 = 0;
    *((_QWORD *)this + 2) = 0;
    v9 = *((_DWORD *)this + 10);
    if (*((_DWORD *)this + 12) < v9)
      v9 = *((_DWORD *)this + 12);
    v10 = *((_DWORD *)this + 6);
    v11 = (v9 - v10);
    if ((int)v11 >= v7)
    {
      *((_DWORD *)this + 6) = v10 + v7;
      return (*(uint64_t (**)(_QWORD))(**(_QWORD **)this + 32))(*(_QWORD *)this);
    }
    if ((int)v11 >= 1)
    {
      *((_DWORD *)this + 6) = v9;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)this + 32))(*(_QWORD *)this, v11);
    }
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  std::string *v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  int v24;
  char v25;
  int v26;
  uint64_t v27;
  std::string v28[2];

  v2 = *((_DWORD *)this + 11);
  if (v2 > 0 || *((int *)this + 7) > 0 || (v3 = *((_DWORD *)this + 6), v3 == *((_DWORD *)this + 10)))
  {
    v4 = *((_DWORD *)this + 6) - v2;
    v5 = *((_DWORD *)this + 12);
    if (v4 >= v5 && v5 != *((_DWORD *)this + 10))
      AddrObjGoogle::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    return 0;
  }
  else
  {
    v8 = *((_DWORD *)this + 13);
    if ((v8 & 0x80000000) == 0 && v3 >= v8)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/coded_stream.cc", 506);
      v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v28, "Reading dangerously large protocol message.  If the message turns out to be larger than ");
      v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v9, *((_DWORD *)this + 12));
      v11 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v10, " bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (AddrObjGoogle::protobuf::internal::LogMessage *)v11);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
      *((_DWORD *)this + 13) = -2;
    }
    v27 = 0;
    v26 = 0;
    v12 = *(_QWORD *)this;
    do
    {
      v6 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(_QWORD *)v12 + 16))(v12, &v27, &v26);
      if (!(_DWORD)v6)
      {
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        return v6;
      }
      v13 = v26;
    }
    while (!v26);
    v14 = v27 + v26;
    *((_QWORD *)this + 1) = v27;
    *((_QWORD *)this + 2) = v14;
    if (v13 < 0)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/io/coded_stream.cc", 523);
      v15 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (buffer_size) >= (0): ");
      AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v25, (AddrObjGoogle::protobuf::internal::LogMessage *)v15);
      AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
      v13 = v26;
    }
    v16 = *((_DWORD *)this + 6);
    v17 = v16 - (v13 ^ 0x7FFFFFFF);
    if (v16 <= (v13 ^ 0x7FFFFFFF))
    {
      v19 = v13 + v16;
      v18 = *((_QWORD *)this + 2);
    }
    else
    {
      *((_DWORD *)this + 7) = v17;
      v18 = *((_QWORD *)this + 2) - v17;
      *((_QWORD *)this + 2) = v18;
      v19 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v19;
    v20 = *((_DWORD *)this + 10);
    v21 = v18 + *((int *)this + 11);
    *((_QWORD *)this + 2) = v21;
    v22 = *((_DWORD *)this + 12);
    if (v22 >= v20)
      v22 = v20;
    v23 = __OFSUB__(v19, v22);
    v24 = v19 - v22;
    if ((v24 < 0) ^ v23 | (v24 == 0))
      v24 = 0;
    else
      *((_QWORD *)this + 2) = v21 - v24;
    *((_DWORD *)this + 11) = v24;
  }
  return v6;
}

void sub_1888412F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadRaw(AddrObjGoogle::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  int v6;
  const void *v7;
  int v8;
  BOOL v9;

  while (1)
  {
    v6 = a3;
    v7 = (const void *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2) - (_DWORD)v7;
    v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0))
      break;
    memcpy(__dst, v7, v8);
    __dst += v8;
    *((_QWORD *)this + 1) += v8;
    if ((AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v6 <= v8;
  }
  memcpy(__dst, v7, v6);
  *((_QWORD *)this + 1) += v6;
  return v6 <= v8;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadString(uint64_t a1, std::string *this, std::string::size_type __n)
{
  unsigned int v3;
  std::string *v4;

  if ((__n & 0x80000000) != 0)
    return 0;
  v3 = __n;
  v4 = this;
  if (*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 8) < (int)__n)
    return AddrObjGoogle::protobuf::io::CodedInputStream::ReadStringFallback((AddrObjGoogle::protobuf::io::CodedInputStream *)a1, this, __n);
  std::string::resize(this, __n, 0);
  if (v3)
  {
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v4->__r_.__value_.__l.__size_)
      {
LABEL_11:
        v4 = 0;
        goto LABEL_12;
      }
      v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
    }
    else if (!*((_BYTE *)&v4->__r_.__value_.__s + 23))
    {
      goto LABEL_11;
    }
LABEL_12:
    memcpy(v4, *(const void **)(a1 + 8), v3);
    *(_QWORD *)(a1 + 8) += v3;
  }
  return 1;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadStringFallback(AddrObjGoogle::protobuf::io::CodedInputStream *this, std::string *a2, int a3)
{
  int v6;
  const std::string::value_type *v7;
  int v8;
  BOOL v9;

  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((_BYTE *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = 0;
  }
  while (1)
  {
    v6 = a3;
    v7 = (const std::string::value_type *)*((_QWORD *)this + 1);
    v8 = *((_QWORD *)this + 2) - (_DWORD)v7;
    v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0))
      break;
    if (v8)
    {
      std::string::append(a2, v7, v8);
      v7 = (const std::string::value_type *)*((_QWORD *)this + 1);
    }
    *((_QWORD *)this + 1) = &v7[v8];
    if ((AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v6 <= v8;
  }
  std::string::append(a2, v7, v6);
  *((_QWORD *)this + 1) += v6;
  return v6 <= v8;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(AddrObjGoogle::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  unsigned int *v3;
  _BOOL8 result;
  char __dst[4];

  v3 = (unsigned int *)*((_QWORD *)this + 1);
  if (((*((_DWORD *)this + 4) - (_DWORD)v3) & 0xFFFFFFFC) != 0)
  {
    *((_QWORD *)this + 1) = v3 + 1;
  }
  else
  {
    v3 = (unsigned int *)__dst;
    result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadRaw(this, __dst, 4);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

BOOL AddrObjGoogle::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(AddrObjGoogle::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  unint64_t *v3;
  _BOOL8 result;
  char v5[8];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = (unint64_t *)*((_QWORD *)this + 1);
  if (((*((_DWORD *)this + 4) - (_DWORD)v3) & 0xFFFFFFF8) != 0)
  {
    *((_QWORD *)this + 1) = v3 + 1;
  }
  else
  {
    v3 = (unint64_t *)v5;
    result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadRaw(this, v5, 8);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

unint64_t AddrObjGoogle::protobuf::io::CodedInputStream::ReadTagSlow(AddrObjGoogle::protobuf::io::CodedInputStream *this)
{
  char *v2;
  unsigned __int8 *v3;
  unint64_t result;
  int v5;
  BOOL v6;
  unint64_t v7;

  v2 = (char *)*((_QWORD *)this + 1);
  v3 = (unsigned __int8 *)*((_QWORD *)this + 2);
  if (v2 != (char *)v3)
  {
LABEL_4:
    v7 = 0;
    if (v2 >= (char *)v3 || *v2 < 0)
    {
      result = AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v7);
      if ((_DWORD)result)
        return v7;
    }
    else
    {
      result = *v2;
      *((_QWORD *)this + 1) = v2 + 1;
    }
    return result;
  }
  if (AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this))
  {
    v2 = (char *)*((_QWORD *)this + 1);
    v3 = (unsigned __int8 *)*((_QWORD *)this + 2);
    goto LABEL_4;
  }
  v5 = *((_DWORD *)this + 12);
  result = 0;
  v6 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v5 || *((_DWORD *)this + 10) == v5;
  *((_BYTE *)this + 36) = v6;
  return result;
}

uint64_t AddrObjGoogle::protobuf::io::CodedInputStream::ReadVarint64Slow(AddrObjGoogle::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char v7;

  v4 = 0;
  v5 = 0;
  while (v4 != 10)
  {
    while (1)
    {
      v6 = (char *)*((_QWORD *)this + 1);
      if (v6 != *((char **)this + 2))
        break;
      if ((AddrObjGoogle::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
        return 0;
    }
    v7 = *v6;
    v5 |= (unint64_t)(*v6 & 0x7F) << (7 * v4);
    *((_QWORD *)this + 1) = v6 + 1;
    ++v4;
    if ((v7 & 0x80) == 0)
    {
      *a2 = v5;
      return 1;
    }
  }
  return 0;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::Refresh(AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v4 = 0;
  result = (*(uint64_t (**)(_QWORD, uint64_t *, char *))(**(_QWORD **)this + 16))(*(_QWORD *)this, &v4, (char *)this + 16);
  if ((_DWORD)result)
  {
    v3 = v4;
    *((_DWORD *)this + 5) += *((_DWORD *)this + 4);
  }
  else
  {
    v3 = 0;
    *((_DWORD *)this + 4) = 0;
    *((_BYTE *)this + 24) = 1;
  }
  *((_QWORD *)this + 1) = v3;
  return result;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 24) = 0;
  AddrObjGoogle::protobuf::io::CodedOutputStream::Refresh((AddrObjGoogle::protobuf::io::CodedOutputStream *)a1);
  *(_BYTE *)(a1 + 24) = 0;
  return a1;
}

void AddrObjGoogle::protobuf::io::CodedOutputStream::~CodedOutputStream(AddrObjGoogle::protobuf::io::CodedOutputStream *this)
{
  if (*((int *)this + 4) >= 1)
    (*(void (**)(void))(**(_QWORD **)this + 24))();
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw(AddrObjGoogle::protobuf::io::CodedOutputStream *this, char *__src, int a3)
{
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t result;

  while (1)
  {
    v6 = *((int *)this + 4);
    v7 = (void *)*((_QWORD *)this + 1);
    if ((int)v6 >= a3)
      break;
    memcpy(v7, __src, v6);
    v8 = *((int *)this + 4);
    a3 -= v8;
    __src += v8;
    result = AddrObjGoogle::protobuf::io::CodedOutputStream::Refresh(this);
    if ((result & 1) == 0)
      return result;
  }
  result = (uint64_t)memcpy(v7, __src, a3);
  *((_QWORD *)this + 1) += a3;
  *((_DWORD *)this + 4) -= a3;
  return result;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian32(uint64_t this, int a2)
{
  int __src;

  if (*(_DWORD *)(this + 16) < 4u)
  {
    __src = a2;
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, (char *)&__src, 4);
  }
  else
  {
    **(_DWORD **)(this + 8) = a2;
    *(_QWORD *)(this + 8) += 4;
    *(_DWORD *)(this + 16) -= 4;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteLittleEndian64(uint64_t this, uint64_t a2)
{
  _QWORD v2[2];

  v2[1] = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(this + 16) < 8u)
  {
    v2[0] = a2;
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, (char *)v2, 8);
  }
  else
  {
    **(_QWORD **)(this + 8) = a2;
    *(_QWORD *)(this + 8) += 8;
    *(_DWORD *)(this + 16) -= 8;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint32(uint64_t this, unsigned int a2)
{
  _BYTE *v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  char __src[5];

  if (*(int *)(this + 16) < 5)
  {
    if (a2 < 0x80)
    {
      LODWORD(v4) = 0;
    }
    else
    {
      v4 = 0;
      do
      {
        __src[v4++] = a2 | 0x80;
        v5 = a2 >> 14;
        a2 >>= 7;
      }
      while (v5);
    }
    __src[v4] = a2;
    return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, __src, (int)v4 + 1);
  }
  else
  {
    v2 = *(_BYTE **)(this + 8);
    *v2 = a2 | 0x80;
    if (a2 < 0x80)
    {
      *v2 = a2 & 0x7F;
      v3 = (_DWORD)v2 + 1;
    }
    else
    {
      v2[1] = (a2 >> 7) | 0x80;
      if (a2 < 0x4000)
      {
        v2[1] = (a2 >> 7) & 0x7F;
        v3 = (_DWORD)v2 + 2;
      }
      else
      {
        v2[2] = (a2 >> 14) | 0x80;
        if (a2 < 0x200000)
        {
          v2[2] = (a2 >> 14) & 0x7F;
          v3 = (_DWORD)v2 + 3;
        }
        else
        {
          v2[3] = (a2 >> 21) | 0x80;
          if (a2 >> 28)
          {
            v2[4] = a2 >> 28;
            v3 = (_DWORD)v2 + 5;
          }
          else
          {
            v3 = (_DWORD)v2 + 4;
            v2[3] = (a2 >> 21) & 0x7F;
          }
        }
      }
    }
    v6 = v3 - (_DWORD)v2;
    *(_QWORD *)(this + 8) += v6;
    *(_DWORD *)(this + 16) -= v6;
  }
  return this;
}

uint64_t AddrObjGoogle::protobuf::io::CodedOutputStream::WriteVarint64(uint64_t this, unint64_t a2)
{
  _BYTE *v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  char __src[10];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (*(int *)(this + 16) >= 10)
  {
    v2 = *(_BYTE **)(this + 8);
    v3 = a2 >> 28;
    if (HIBYTE(a2))
    {
      if (HIBYTE(a2) >= 0x80)
      {
        v2[9] = -127;
        v4 = 10;
      }
      else
      {
        v4 = 9;
      }
      v2[8] = HIBYTE(a2) | 0x80;
    }
    else
    {
      if (!(_DWORD)v3)
      {
        if (!(a2 >> 14))
        {
          if (a2 < 0x80)
          {
            v4 = 1;
            goto LABEL_24;
          }
          v4 = 2;
LABEL_23:
          v2[1] = (a2 >> 7) | 0x80;
LABEL_24:
          *v2 = a2 | 0x80;
          v2[v4 - 1] &= ~0x80u;
          *(_QWORD *)(this + 8) += v4;
          *(_DWORD *)(this + 16) -= v4;
          return this;
        }
        if (a2 < 0x200000)
        {
          v4 = 3;
          goto LABEL_22;
        }
        v4 = 4;
LABEL_21:
        v2[3] = (a2 >> 21) | 0x80;
LABEL_22:
        v2[2] = (a2 >> 14) | 0x80;
        goto LABEL_23;
      }
      if (!(v3 >> 14))
      {
        if (v3 < 0x80)
        {
          v4 = 5;
LABEL_20:
          v2[4] = v3 | 0x80;
          goto LABEL_21;
        }
        v4 = 6;
LABEL_19:
        v2[5] = (a2 >> 35) | 0x80;
        goto LABEL_20;
      }
      if (v3 < 0x200000)
      {
        v4 = 7;
        goto LABEL_18;
      }
      v4 = 8;
    }
    v2[7] = (a2 >> 49) | 0x80;
LABEL_18:
    v2[6] = (a2 >> 42) | 0x80;
    goto LABEL_19;
  }
  if (a2 < 0x80)
  {
    LODWORD(v5) = 0;
  }
  else
  {
    v5 = 0;
    do
    {
      __src[v5++] = a2 | 0x80;
      v6 = a2 >> 14;
      a2 >>= 7;
    }
    while (v6);
  }
  __src[v5] = a2;
  return AddrObjGoogle::protobuf::io::CodedOutputStream::WriteRaw((AddrObjGoogle::protobuf::io::CodedOutputStream *)this, __src, (int)v5 + 1);
}

uint64_t AddrObjGoogle::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

std::string *AddrObjGoogle::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  std::string::append(a1 + 1, a2);
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  v3 = a1 + 1;
  v4 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

_QWORD *AddrObjGoogle::protobuf::internal::VersionString@<X0>(AddrObjGoogle::protobuf::internal *this@<X0>, _QWORD *a2@<X8>)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

void AddrObjGoogle::protobuf::internal::LogFinisher::operator=(uint64_t a1, AddrObjGoogle::protobuf::internal::LogMessage *a2)
{
  AddrObjGoogle::protobuf::internal::LogMessage::Finish(a2);
}

void AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
}

uint64_t AddrObjGoogle::protobuf::internal::DefaultLogHandler(int a1, const char *a2, int a3, uint64_t a4)
{
  FILE **v4;
  const char *v5;

  v4 = (FILE **)MEMORY[0x1E0C80C10];
  if (*(char *)(a4 + 23) >= 0)
    v5 = (const char *)a4;
  else
    v5 = *(const char **)a4;
  fprintf((FILE *)*MEMORY[0x1E0C80C10], "[libprotobuf %s %s:%d] %s\n", off_1E1BFEFD8[a1], a2, a3, v5);
  return fflush(*v4);
}

uint64_t AddrObjGoogle::protobuf::internal::DeleteLogSilencerCount(AddrObjGoogle::protobuf::internal *this)
{
  uint64_t result;

  result = qword_1EDF508F0;
  if (qword_1EDF508F0)
  {
    AddrObjGoogle::protobuf::internal::Mutex::~Mutex((pthread_mutex_t **)qword_1EDF508F0);
    result = MEMORY[0x18D76437C]();
  }
  qword_1EDF508F0 = 0;
  return result;
}

void AddrObjGoogle::protobuf::internal::InitLogSilencerCount(AddrObjGoogle::protobuf::internal *this)
{
  _QWORD *v1;
  pthread_mutex_t *v2;
  void (*v3)(void);

  v1 = (_QWORD *)operator new();
  v2 = (pthread_mutex_t *)operator new();
  *v1 = v2;
  pthread_mutex_init(v2, 0);
  qword_1EDF508F0 = (uint64_t)v1;
  AddrObjGoogle::protobuf::internal::OnShutdown((AddrObjGoogle::protobuf::internal *)AddrObjGoogle::protobuf::internal::DeleteLogSilencerCount, v3);
}

void sub_188841F14(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

unint64_t *AddrObjGoogle::protobuf::internal::InitLogSilencerCountOnce(AddrObjGoogle::protobuf::internal *this)
{
  uint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = AddrObjGoogle::protobuf::internal::log_silencer_count_init_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &off_1E1BF6040;
    v3[1] = AddrObjGoogle::protobuf::internal::InitLogSilencerCount;
    v4 = 0;
    return AddrObjGoogle::protobuf::GoogleOnceInitImpl((unint64_t *)&AddrObjGoogle::protobuf::internal::log_silencer_count_init_, (uint64_t)v3);
  }
  return result;
}

std::string *AddrObjGoogle::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d", a2);
  __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

void AddrObjGoogle::protobuf::internal::LogMessage::Finish(AddrObjGoogle::protobuf::internal::LogMessage *this)
{
  int v2;
  pthread_mutex_t **v3;
  int v4;
  void *exception;

  if (*(_DWORD *)this == 3)
  {
    v2 = 3;
  }
  else
  {
    AddrObjGoogle::protobuf::internal::InitLogSilencerCountOnce(this);
    v3 = (pthread_mutex_t **)qword_1EDF508F0;
    AddrObjGoogle::protobuf::internal::Mutex::Lock((pthread_mutex_t **)qword_1EDF508F0);
    v4 = dword_1EDF508F8;
    AddrObjGoogle::protobuf::internal::Mutex::Unlock(v3);
    if (v4 > 0)
      goto LABEL_6;
    v2 = *(_DWORD *)this;
  }
  off_1EDF46560(v2, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
LABEL_6:
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    AddrObjGoogle::protobuf::FatalException::FatalException(exception, *((_QWORD *)this + 1), *((unsigned int *)this + 4), (char *)this + 24);
  }
}

void sub_1888420C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::internal::FunctionClosure0::~FunctionClosure0(AddrObjGoogle::protobuf::internal::FunctionClosure0 *this)
{
  JUMPOUT(0x18D76437CLL);
}

void AddrObjGoogle::protobuf::internal::Mutex::~Mutex(pthread_mutex_t **this)
{
  pthread_mutex_destroy(*this);
  if (*this)
    MEMORY[0x18D76437C](*this, 0x1000C40FA0F61DDLL);
}

uint64_t AddrObjGoogle::protobuf::ghtonl(AddrObjGoogle::protobuf *this)
{
  return bswap32(this);
}

void AddrObjGoogle::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&off_1E1BF53D8;
  if (SHIBYTE(this[5].__vftable) < 0)
    operator delete(this[3].__vftable);
  std::exception::~exception(this);
}

{
  AddrObjGoogle::protobuf::FatalException::~FatalException(this);
  JUMPOUT(0x18D76437CLL);
}

uint64_t AddrObjGoogle::protobuf::FatalException::what(AddrObjGoogle::protobuf::FatalException *this)
{
  uint64_t result;

  result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0)
    return *(_QWORD *)result;
  return result;
}

uint64_t AddrObjGoogle::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, __int128 *a4)
{
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = &off_1E1BF53D8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_188842220(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::strings::Substitute(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, std::string *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v12;

  a9->__r_.__value_.__r.__words[0] = 0;
  a9->__r_.__value_.__l.__size_ = 0;
  a9->__r_.__value_.__r.__words[2] = 0;
  *((_QWORD *)&v12 + 1) = a10;
  *(_QWORD *)&v12 = a8;
  AddrObjGoogle::protobuf::strings::SubstituteAndAppend(a9, a1, a2, a3, a4, a5, a6, a7, v12, a11, a12);
}

void sub_18884229C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void AddrObjGoogle::protobuf::strings::SubstituteAndAppend(std::string *this, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  std::string *v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  std::string::size_type size;
  std::string *v21;
  std::string *v22;
  std::string *v23;
  uint64_t v24;
  int v25;
  int v26;
  _BYTE *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  const void ***v31;
  const void **v32;
  std::string *v33;
  void *v34[2];
  void *__p[2];
  std::string v36[2];
  uint64_t v37;
  _QWORD v38[5];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v37 = a3;
  v38[0] = a4;
  v38[1] = a5;
  v38[2] = a6;
  v38[3] = a7;
  v38[4] = a8;
  v39 = a9;
  v40 = a10;
  v41 = a11;
  v42 = 0;
  v11 = *a2;
  if (!*a2)
    return;
  v12 = a3;
  v14 = this;
  v15 = 0;
  LODWORD(v16) = 0;
  do
  {
    if (v11 != 36)
      goto LABEL_8;
    v16 = (int)v16 + 1;
    v17 = a2[v16];
    v18 = v17 - 48;
    if ((v17 - 48) > 9)
    {
      if (v17 != 36)
      {
        AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/substitute.cc", 98);
        AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v36, "Invalid strings::Substitute() format string: \"");
        std::string::basic_string[abi:ne180100]<0>(v34, a2);
        AddrObjGoogle::protobuf::CEscape((uint64_t)v34, __p);
      }
LABEL_8:
      ++v15;
      goto LABEL_9;
    }
    v19 = *(_DWORD *)(v38[v18 - 1] + 8);
    if (v19 == -1)
    {
      AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/substitute.cc", 85);
      v21 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v36, "strings::Substitute format string invalid: asked for \"$");
      v22 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v21, v18);
      v23 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v22, "\", but only ");
      v24 = 0;
      while (*(_DWORD *)(v12 + 8) != -1)
      {
        v25 = v24 + 1;
        v12 = v38[v24++];
        if (!v12)
          goto LABEL_36;
      }
      v25 = v24;
LABEL_36:
      v33 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v23, v25);
      AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v33, " args were given.  Full format string was: \"");
      std::string::basic_string[abi:ne180100]<0>(v34, a2);
      AddrObjGoogle::protobuf::CEscape((uint64_t)v34, __p);
    }
    v15 += v19;
LABEL_9:
    v16 = (int)v16 + 1;
    v11 = a2[v16];
  }
  while (a2[v16]);
  if (v15)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      size = this->__r_.__value_.__l.__size_;
    else
      LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::resize(this, v15 + (int)size, 0);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v14->__r_.__value_.__l.__size_)
        goto LABEL_24;
      v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
    }
    else if (!*((_BYTE *)&v14->__r_.__value_.__s + 23))
    {
LABEL_24:
      v14 = 0;
    }
    v26 = 0;
    v27 = (char *)v14 + (int)size;
    while (2)
    {
      v28 = a2[v26];
      if (v28 == 36)
      {
        v29 = v26 + 1;
        v30 = a2[v29];
        if ((v30 - 48) > 9)
        {
          if ((_DWORD)v30 != 36)
            goto LABEL_29;
          *v27++ = 36;
        }
        else
        {
          v31 = (const void ***)&v38[v30 - 49];
          v32 = *v31;
          memcpy(v27, **v31, *((int *)*v31 + 2));
          v27 += *((int *)v32 + 2);
        }
      }
      else
      {
        if (!a2[v26])
          return;
        *v27++ = v28;
LABEL_29:
        LODWORD(v29) = v26;
      }
      v26 = v29 + 1;
      continue;
    }
  }
}

void sub_1888425D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23)
{
  if (a22 < 0)
    operator delete(__p);
  if (a16 < 0)
    operator delete(a11);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage(&a23);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::StringAppendV(std::string *a1, char *__format, va_list a3)
{
  uint64_t result;
  int v6;
  char *v7;
  int v8;
  char __str[1024];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  result = vsnprintf(__str, 0x400uLL, __format, a3);
  v6 = result;
  if ((int)result > 1023)
  {
    v7 = (char *)operator new[]();
    v8 = vsnprintf(v7, (v6 + 1), __format, a3);
    if ((v8 & 0x80000000) == 0 && v8 <= v6)
      std::string::append(a1, v7, v8);
    return MEMORY[0x18D764364](v7, 0x1000C8077774924);
  }
  else if ((result & 0x80000000) == 0)
  {
    return (uint64_t)std::string::append(a1, __str, result);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::StringAppendF(std::string *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return AddrObjGoogle::protobuf::StringAppendV(a1, a2, &a9);
}

void AddrObjGoogle::protobuf::JoinStrings(uint64_t *a1, char *__s, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  std::string *v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  char v18;
  std::string v19[2];

  v5 = *a1;
  v6 = a1[1];
  if (!a3)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 242);
    v7 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: result != NULL: ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (AddrObjGoogle::protobuf::internal::LogMessage *)v7);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    **(_BYTE **)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 23) = 0;
  }
  v8 = strlen(__s);
  if (v6 == v5)
  {
    std::string::reserve((std::string *)a3, 0);
  }
  else
  {
    v9 = v8;
    v10 = 0;
    v11 = 0;
    v12 = v5;
    do
    {
      if (v10)
        v13 = v8;
      else
        v13 = 0;
      if (*(char *)(v12 + 23) < 0)
        v14 = *(_QWORD *)(v5 + 8 + v10);
      else
        LODWORD(v14) = *(unsigned __int8 *)(v12 + 23);
      v11 += v13 + v14;
      v12 += 24;
      v10 += 24;
    }
    while (v12 != v6);
    std::string::reserve((std::string *)a3, v11);
    v15 = 0;
    do
    {
      if (v15)
        std::string::append((std::string *)a3, __s, v9);
      v16 = (const std::string::value_type *)(v5 + v15);
      if (*(char *)(v5 + v15 + 23) < 0)
      {
        v16 = *(const std::string::value_type **)(v5 + v15);
        v17 = *(_QWORD *)(v5 + v15 + 8);
      }
      else
      {
        v17 = *(unsigned __int8 *)(v5 + v15 + 23);
      }
      std::string::append((std::string *)a3, v16, v17);
      v15 += 24;
    }
    while (v5 + v15 != v6);
  }
}

void sub_1888428C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 *i;
  int v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  char v7;
  unsigned __int8 v8;
  int v9;
  char v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned int v16;
  char v17;

  if (a1 == a2)
  {
    for (i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    i = a2;
  }
  while (1)
  {
    v3 = *a1;
    if (v3 != 92)
    {
      if (!*a1)
        goto LABEL_57;
      goto LABEL_55;
    }
    v4 = a1 + 1;
    v3 = (char)a1[1];
    if (v3 <= 62)
      break;
    if (v3 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v3) = 10;
          goto LABEL_54;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_56;
        case 'r':
          LOBYTE(v3) = 13;
          goto LABEL_54;
        case 't':
          LOBYTE(v3) = 9;
          goto LABEL_54;
        case 'v':
          LOBYTE(v3) = 11;
          goto LABEL_54;
        case 'x':
          goto LABEL_28;
        default:
          if (v3 == 102)
          {
            LOBYTE(v3) = 12;
          }
          else
          {
            if (v3 != 98)
              goto LABEL_56;
            LOBYTE(v3) = 8;
          }
          break;
      }
      goto LABEL_54;
    }
    if (v3 > 91)
    {
      if (v3 != 92)
      {
        if (v3 != 97)
          goto LABEL_56;
        LOBYTE(v3) = 7;
      }
LABEL_54:
      a1 = v4;
LABEL_55:
      *i++ = v3;
      v4 = a1;
      goto LABEL_56;
    }
    if (v3 == 63)
      goto LABEL_54;
    if (v3 != 88)
      goto LABEL_56;
LABEL_28:
    if ((a1[2] - 48) < 0xAu || (v11 = a1[2] - 65, v11 <= 0x25) && ((1 << v11) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v3) = 0;
      v12 = a1 + 1;
      while (1)
      {
        v14 = *++v12;
        v13 = v14;
        if ((v14 - 48) >= 0xAu
          && (v13 - 65 > 0x25 || ((1 << (v13 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        v16 = v13;
        v17 = v13 + 9;
        if (v16 <= 0x39)
          v17 = v16;
        v4 = v12;
        LOBYTE(v3) = v17 & 0xF | (16 * v3);
      }
      goto LABEL_54;
    }
LABEL_56:
    a1 = v4 + 1;
  }
  if (v3 > 47)
  {
    if ((v3 - 48) >= 8)
      goto LABEL_56;
    LOBYTE(v3) = v3 - 48;
    v6 = a1[2];
    v5 = a1 + 2;
    v7 = v6 + 8 * v3 - 48;
    if ((v6 & 0xF8) == 0x30)
    {
      v4 = v5;
      LOBYTE(v3) = v7;
    }
    v8 = v4[1];
    v9 = v8 & 0xF8;
    v10 = v8 + 8 * v3 - 48;
    if (v9 == 48)
      a1 = v4 + 1;
    else
      a1 = v4;
    if (v9 == 48)
      LOBYTE(v3) = v10;
    goto LABEL_55;
  }
  if (v3 == 34 || v3 == 39)
    goto LABEL_54;
  if (a1[1])
    goto LABEL_56;
LABEL_57:
  *i = 0;
  return ((_DWORD)i - (_DWORD)a2);
}

void AddrObjGoogle::protobuf::UnescapeCEscapeString(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;

  v4 = (unsigned __int8 *)operator new[]();
  if (*(char *)(a1 + 23) >= 0)
    v5 = (unsigned __int8 *)a1;
  else
    v5 = *(unsigned __int8 **)a1;
  v6 = AddrObjGoogle::protobuf::UnescapeCEscapeSequences(v5, v4);
  std::string::basic_string[abi:ne180100](a2, v4, v6);
  JUMPOUT(0x18D764364);
}

void sub_188842B8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D764364](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

uint64_t AddrObjGoogle::protobuf::CEscapeInternal(AddrObjGoogle::protobuf *this, const char *a2, uint64_t a3, char *a4, int a5, char a6)
{
  int v6;
  char v9;
  unsigned __int8 *v10;
  char v11;
  uint64_t v12;
  const char *v13;
  unsigned __int8 *v14;
  int v15;
  int v16;

  v6 = (int)a4;
  if ((int)a2 >= 1)
  {
    v9 = a5;
    v10 = (unsigned __int8 *)this;
    v11 = 0;
    LODWORD(v12) = 0;
    if (a5)
      v13 = "\\x%02x";
    else
      v13 = "\\%03o";
    v14 = (unsigned __int8 *)this + (int)a2;
    while (1)
    {
      if (v6 - (int)v12 < 2)
        return 0xFFFFFFFFLL;
      v15 = (char)*v10;
      if (v15 > 33)
      {
        switch(v15)
        {
          case '"':
            v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 8796;
            goto LABEL_20;
          case '\'':
            v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 10076;
            goto LABEL_20;
          case '\\':
            v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 23644;
            goto LABEL_20;
        }
      }
      else
      {
        switch(v15)
        {
          case 9:
            v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29788;
            goto LABEL_20;
          case 10:
            v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 28252;
            goto LABEL_20;
          case 13:
            v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29276;
LABEL_20:
            v16 = 2;
            goto LABEL_21;
        }
      }
      if (v15 < 0 && (a6 & 1) != 0
        || (v15 - 32) <= 0x5E
        && ((v11 & 1) == 0
         || (v15 - 48) >= 0xA
         && (*v10 - 65 > 0x25 || ((1 << (v15 - 65)) & 0x3F0000003FLL) == 0)))
      {
        v11 = 0;
        *(_BYTE *)(a3 + (int)v12) = v15;
        v16 = 1;
      }
      else
      {
        if ((v6 - v12) < 5)
          return 0xFFFFFFFFLL;
        v16 = snprintf((char *)(a3 + (int)v12), 5uLL, v13, *v10);
        v11 = v9;
      }
LABEL_21:
      v12 = (v16 + v12);
      if (++v10 >= v14)
        goto LABEL_34;
    }
  }
  v12 = 0;
LABEL_34:
  if ((int)v12 >= v6)
    return 0xFFFFFFFFLL;
  *(_BYTE *)(a3 + (int)v12) = 0;
  return v12;
}

void AddrObjGoogle::protobuf::CEscape(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  char *v5;
  void *v6;
  char v7;
  AddrObjGoogle::protobuf *v8;
  const char *v9;
  int v10;

  v4 = *(unsigned __int8 *)(a1 + 23);
  if ((v4 & 0x80u) != 0)
    v4 = *(_DWORD *)(a1 + 8);
  v5 = (char *)((4 * v4) | 1u);
  v6 = (void *)operator new[]();
  v7 = *(_BYTE *)(a1 + 23);
  if (v7 >= 0)
    v8 = (AddrObjGoogle::protobuf *)a1;
  else
    v8 = *(AddrObjGoogle::protobuf **)a1;
  if (v7 >= 0)
    v9 = (const char *)*(unsigned __int8 *)(a1 + 23);
  else
    v9 = (const char *)*(unsigned int *)(a1 + 8);
  v10 = AddrObjGoogle::protobuf::CEscapeInternal(v8, v9, (uint64_t)v6, v5, 0, 0);
  std::string::basic_string[abi:ne180100](a2, v6, v10);
  JUMPOUT(0x18D764364);
}

void sub_188842E58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D764364](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void AddrObjGoogle::protobuf::strings::Utf8SafeCEscape(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  char *v5;
  void *v6;
  char v7;
  AddrObjGoogle::protobuf *v8;
  const char *v9;
  int v10;

  v4 = *(unsigned __int8 *)(a1 + 23);
  if ((v4 & 0x80u) != 0)
    v4 = *(_DWORD *)(a1 + 8);
  v5 = (char *)((4 * v4) | 1u);
  v6 = (void *)operator new[]();
  v7 = *(_BYTE *)(a1 + 23);
  if (v7 >= 0)
    v8 = (AddrObjGoogle::protobuf *)a1;
  else
    v8 = *(AddrObjGoogle::protobuf **)a1;
  if (v7 >= 0)
    v9 = (const char *)*(unsigned __int8 *)(a1 + 23);
  else
    v9 = (const char *)*(unsigned int *)(a1 + 8);
  v10 = AddrObjGoogle::protobuf::CEscapeInternal(v8, v9, (uint64_t)v6, v5, 0, 1);
  std::string::basic_string[abi:ne180100](a2, v6, v10);
  JUMPOUT(0x18D764364);
}

void sub_188842F3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D764364](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

_BYTE *AddrObjGoogle::protobuf::FastInt64ToBuffer(unint64_t this, _BYTE *a2, char *a3)
{
  unint64_t v3;
  _BYTE *result;
  BOOL v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;

  v3 = this;
  a2[21] = 0;
  if ((this & 0x8000000000000000) != 0)
  {
    if (this < 0xFFFFFFFFFFFFFFF7)
    {
      v7 = -10 - this;
      result = a2 + 19;
      a2[20] = (v7 % 0xA) | 0x30;
      v8 = v7 / 0xA + 1;
      do
      {
        *result-- = (v8 % 0xA) | 0x30;
        v9 = v8 > 9;
        v8 /= 0xAuLL;
      }
      while (v9);
    }
    else
    {
      v6 = 48 - this;
      result = a2 + 19;
      a2[20] = v6;
    }
    *result = 45;
  }
  else
  {
    result = a2 + 21;
    do
    {
      *--result = (v3 % 0xA) | 0x30;
      v5 = v3 >= 0xA;
      v3 /= 0xAuLL;
    }
    while (v5);
  }
  return result;
}

_BYTE *AddrObjGoogle::protobuf::FastInt32ToBuffer(AddrObjGoogle::protobuf *this, _BYTE *a2, char *a3)
{
  unsigned int v3;
  _BYTE *result;
  BOOL v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  BOOL v10;

  v3 = this;
  a2[11] = 0;
  if ((this & 0x80000000) != 0)
  {
    if (this < 0xFFFFFFF7)
    {
      v7 = -10 - (_DWORD)this;
      v8 = (-10 - (int)this) / 0xAu;
      result = a2 + 9;
      a2[10] = (v7 % 0xA) | 0x30;
      v9 = v8 + 1;
      do
      {
        *result-- = (v9 % 0xA) | 0x30;
        v10 = v9 > 9;
        v9 /= 0xAu;
      }
      while (v10);
    }
    else
    {
      v6 = 48 - (_BYTE)this;
      result = a2 + 9;
      a2[10] = v6;
    }
    *result = 45;
  }
  else
  {
    result = a2 + 11;
    do
    {
      *--result = (v3 % 0xA) | 0x30;
      v5 = v3 >= 0xA;
      v3 /= 0xAu;
    }
    while (v5);
  }
  return result;
}

uint64_t AddrObjGoogle::protobuf::FastHex64ToBuffer(unint64_t this, uint64_t a2, char *a3)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)(a2 + 16) = 0;
  v3 = 15;
  do
  {
    *(_BYTE *)(a2 + v3) = a0123456789abcd[this & 0xF];
    this >>= 4;
    v4 = v3-- + 1;
  }
  while (v4 > 1);
  return a2;
}

uint64_t AddrObjGoogle::protobuf::FastHex32ToBuffer(AddrObjGoogle::protobuf *this, uint64_t a2, char *a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = this;
  *(_BYTE *)(a2 + 8) = 0;
  v4 = 7;
  do
  {
    *(_BYTE *)(a2 + v4) = a0123456789abcd[v3 & 0xF];
    v3 >>= 4;
    v5 = v4-- + 1;
  }
  while (v5 > 1);
  return a2;
}

_BYTE *AddrObjGoogle::protobuf::FastUInt32ToBufferLeft(AddrObjGoogle::protobuf *this, _BYTE *a2, char *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE *v7;

  if (this >= 0x3B9ACA00)
  {
    v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(v6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      v6 = this / 0x64uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v6];
      a2 += 2;
LABEL_9:
      LODWORD(this) = (_DWORD)this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(v5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      v5 = this / 0x2710uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v5];
      a2 += 2;
LABEL_7:
      LODWORD(this) = (_DWORD)this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v4];
      a2 += 2;
LABEL_5:
      LODWORD(this) = (_DWORD)this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD(this) = (_DWORD)this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * (int)this];
  v7 = a2 + 2;
LABEL_11:
  *v7 = 0;
  return v7;
}

_BYTE *AddrObjGoogle::protobuf::FastUInt64ToBufferLeft(AddrObjGoogle::protobuf *this, _BYTE *a2, char *a3)
{
  int v3;
  unint64_t v5;
  _WORD *v6;
  unsigned int v7;

  v3 = (int)this;
  if (!((unint64_t)this >> 32))
    return AddrObjGoogle::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  v5 = (unint64_t)this / 0x3B9ACA00;
  v6 = (_WORD *)AddrObjGoogle::protobuf::FastUInt64ToBufferLeft((AddrObjGoogle::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
  v7 = v3 - 1000000000 * v5;
  *v6 = *(_WORD *)&a00010203040506[2 * (v7 / 0x989680uLL)];
  v7 %= 0x989680u;
  v6[1] = *(_WORD *)&a00010203040506[2 * (v7 / 0x186A0uLL)];
  v7 %= 0x186A0u;
  v6[2] = *(_WORD *)&a00010203040506[2 * (v7 / 0x3E8uLL)];
  v7 %= 0x3E8u;
  v6[3] = *(_WORD *)&a00010203040506[2 * (v7 / 0xAuLL)];
  v6[4] = (v7 % 0xA + 48);
  return (char *)v6 + 9;
}

_QWORD *AddrObjGoogle::protobuf::SimpleItoa@<X0>(AddrObjGoogle::protobuf *this@<X0>, char *a2@<X2>, _QWORD *a3@<X8>)
{
  char *v4;
  _BYTE v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v4 = AddrObjGoogle::protobuf::FastInt32ToBuffer(this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v4 = AddrObjGoogle::protobuf::FastUInt32ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(a3, v6, v4, v4 - v6);
}

{
  char *v4;
  _BYTE v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v4 = AddrObjGoogle::protobuf::FastInt64ToBuffer((unint64_t)this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v4 = AddrObjGoogle::protobuf::FastUInt64ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(a3, v6, v4, v4 - v6);
}

_QWORD *AddrObjGoogle::protobuf::SimpleDtoa@<X0>(double a1@<D0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  char __s[32];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  AddrObjGoogle::protobuf::DoubleToBuffer((AddrObjGoogle::protobuf *)__s, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, __s);
}

AddrObjGoogle::protobuf *AddrObjGoogle::protobuf::DoubleToBuffer(AddrObjGoogle::protobuf *this, double a2, char *a3)
{
  int v5;
  char *v7;

  if (a2 == INFINITY)
  {
    v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((_BYTE *)this + 4) = 0;
    v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x20uLL, "%.*g", 15, a2);
  if (strtod((const char *)this, 0) != a2)
    snprintf((char *)this, 0x20uLL, "%.*g", 17, a2);
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v7);
  return this;
}

_QWORD *AddrObjGoogle::protobuf::SimpleFtoa@<X0>(float a1@<S0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  char v6[24];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  AddrObjGoogle::protobuf::FloatToBuffer((AddrObjGoogle::protobuf *)v6, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v6);
}

AddrObjGoogle::protobuf *AddrObjGoogle::protobuf::FloatToBuffer(AddrObjGoogle::protobuf *this, float a2, char *a3)
{
  int v5;
  float *v7;
  char *v8;
  char v9[4];

  if (a2 == INFINITY)
  {
    v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((_BYTE *)this + 4) = 0;
    v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x18uLL, "%.*g", 6, a2);
  *(float *)v9 = 0.0;
  if (!AddrObjGoogle::protobuf::safe_strtof(this, (float *)v9, v7) || *(float *)v9 != a2)
    snprintf((char *)this, 0x18uLL, "%.*g", 8, a2);
  AddrObjGoogle::protobuf::DelocalizeRadix(this, v8);
  return this;
}

char *AddrObjGoogle::protobuf::DelocalizeRadix(AddrObjGoogle::protobuf *this, char *a2)
{
  char *result;
  const char *i;
  int v5;
  int v7;
  unsigned __int8 *v8;
  const char *v9;
  int v10;
  BOOL v11;
  size_t v13;

  result = strchr((char *)this, 46);
  if (!result)
  {
    for (i = (char *)this + 2; ; ++i)
    {
      v5 = *((unsigned __int8 *)i - 2);
      if ((v5 - 48) >= 0xA
        && ((v5 - 43) > 0x3A || ((1 << (v5 - 43)) & 0x400000004000005) == 0))
      {
        break;
      }
    }
    if (*(i - 2))
    {
      v8 = (unsigned __int8 *)(i - 1);
      v7 = *((unsigned __int8 *)i - 1);
      *((_BYTE *)i - 2) = 46;
      if ((v7 - 48) >= 0xA
        && ((v7 - 43) > 0x3A || ((1 << (v7 - 43)) & 0x400000004000005) == 0))
      {
        if (v7)
        {
          do
          {
            v9 = i;
            v10 = *(unsigned __int8 *)i;
            if ((v10 - 48) < 0xA)
              break;
            ++i;
            v11 = (v10 - 43) > 0x3A || ((1 << (v10 - 43)) & 0x400000004000005) == 0;
          }
          while (v11 && v10 != 0);
          v13 = strlen(v9) + 1;
          return (char *)memmove(v8, v9, v13);
        }
      }
    }
  }
  return result;
}

BOOL AddrObjGoogle::protobuf::safe_strtof(AddrObjGoogle::protobuf *this, float *a2, float *a3)
{
  char *v6;

  v6 = 0;
  *__error() = 0;
  *a2 = strtof((const char *)this, &v6);
  return *(_BYTE *)this && !*v6 && *__error() == 0;
}

std::string *AddrObjGoogle::protobuf::LocalizeRadix@<X0>(AddrObjGoogle::protobuf *this@<X0>, char *a2@<X1>, std::string *a3@<X8>)
{
  int v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  size_t v11;
  char v13;
  std::string v14[2];
  char __str;
  std::string::value_type v16[15];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v7 = snprintf(&__str, 0x10uLL, "%.1f", 1.5);
  if (__str != 49)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 1163);
    v8 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (temp[0]) == ('1'): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v8);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (v16[v7 - 2] != 53)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 1164);
    v9 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (temp[size-1]) == ('5'): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v9);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (v7 >= 7)
  {
    AddrObjGoogle::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libaddr_obj/cpp/AddrObjGoogle/protobuf/stubs/strutil.cc", 1165);
    v10 = AddrObjGoogle::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (size) <= (6): ");
    AddrObjGoogle::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (AddrObjGoogle::protobuf::internal::LogMessage *)v10);
    AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  v11 = strlen((const char *)this);
  std::string::reserve(a3, v11 + v7 - 3);
  std::string::append[abi:ne180100]<char const*,0>(a3, (char *)this, a2);
  std::string::append(a3, v16, v7 - 2);
  return std::string::append(a3, a2 + 1);
}

void sub_188843B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  AddrObjGoogle::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *std::string::append[abi:ne180100]<char const*,0>(std::string *this, char *a2, char *a3)
{
  char *v4;
  unint64_t v6;
  unint64_t v7;
  std::string::size_type size;
  std::string::size_type v9;
  std::string *v10;
  unint64_t v11;
  void **v12;
  std::string::size_type v13;
  std::string *v14;
  _BYTE *i;
  char v16;
  std::string::size_type v17;
  void *__p[2];
  unsigned __int8 v20;

  v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2)
      return this;
    size = this->__r_.__value_.__l.__size_;
    v11 = this->__r_.__value_.__r.__words[2];
    v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2)
      return this;
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    v9 = 22;
    v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((_BYTE *)&this->__r_.__value_.__s + 23);
    }
    v14 = this;
    if ((v6 & 0x80) != 0)
      v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    for (i = (char *)v14 + size; v4 != a3; ++i)
    {
      v16 = *v4++;
      *i = v16;
    }
    *i = 0;
    v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      this->__r_.__value_.__l.__size_ = v17;
    else
      *((_BYTE *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
  }
  else
  {
    std::string::__init_with_size[abi:ne180100]<std::__wrap_iter<char const*>,std::__wrap_iter<char const*>>(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    if ((v20 & 0x80u) == 0)
      v13 = v20;
    else
      v13 = (std::string::size_type)__p[1];
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_188843CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double AddrObjGoogle::protobuf::NoLocaleStrtod(AddrObjGoogle::protobuf *this, char *a2, char **a3)
{
  double v5;
  char *v6;
  std::string *p_p;
  char v8;
  int v9;
  int v10;
  char *v12;
  std::string __p;
  char *v14;

  v14 = 0;
  v5 = strtod((const char *)this, &v14);
  v6 = v14;
  if (a2)
    *(_QWORD *)a2 = v14;
  if (*v6 == 46)
  {
    p_p = &__p;
    AddrObjGoogle::protobuf::LocalizeRadix(this, v6, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v12 = 0;
    v5 = strtod((const char *)p_p, &v12);
    v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (a2 && v12 - (char *)p_p > v14 - (char *)this)
    {
      v9 = strlen((const char *)this);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v10 = __p.__r_.__value_.__r.__words[1];
      *(_QWORD *)a2 = (char *)this + v12 - ((char *)p_p + v10 - v9);
    }
    if (v8 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_188843E00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<std::string> **std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](std::vector<std::string> **a1, __int128 *a2)
{
  std::vector<std::string> *v4;
  std::vector<std::string>::pointer end;
  std::vector<std::string> *v6;
  std::allocator<std::string> *p_end_cap;
  std::string *v8;
  std::string *value;
  __int128 v10;
  std::string *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  std::string *v16;
  std::string *v17;
  __int128 v18;
  std::__split_buffer<std::string> __v;

  v4 = *a1;
  end = (*a1)->__end_;
  v6 = *a1;
  value = v6->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::string> *)&v6->__end_cap_;
  v8 = value;
  if (end >= value)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)v4->__begin_) >> 3);
    v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v4->__begin_) >> 3);
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x555555555555555)
      v15 = 0xAAAAAAAAAAAAAAALL;
    else
      v15 = v13;
    __v.__end_cap_.__value_ = p_end_cap;
    if (v15)
      v16 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>((uint64_t)p_end_cap, v15);
    else
      v16 = 0;
    v17 = v16 + v12;
    __v.__first_ = v16;
    __v.__begin_ = v17;
    __v.__end_cap_.__value_ = &v16[v15];
    v18 = *a2;
    v17->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    __v.__end_ = v17 + 1;
    std::vector<std::string>::__swap_out_circular_buffer(v4, &__v);
    v11 = v4->__end_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
  else
  {
    v10 = *a2;
    end->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v10;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v11 = end + 1;
    v4->__end_ = end + 1;
  }
  v4->__end_ = v11;
  return a1;
}

void sub_188843F4C(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a10);
  _Unwind_Resume(a1);
}

void CAASaturn::EclipticLongitude(CAASaturn *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t *v19;
  double v20;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0SaturnCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1SaturnCoefficients);
  v6 = &g_L1SaturnCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2SaturnCoefficients);
  v9 = &g_L2SaturnCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3SaturnCoefficients);
  v12 = 0.0;
  v13 = &g_L3SaturnCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4SaturnCoefficients);
  v15 = 0.0;
  v16 = &g_L4SaturnCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_L5SaturnCoefficients);
  v18 = 0.0;
  v19 = &g_L5SaturnCoefficients;
  do
  {
    v20 = *(double *)v19;
    v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_B0SaturnCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAASaturn::EclipticLatitude(CAASaturn *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t *v19;
  double v20;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0SaturnCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1SaturnCoefficients);
  v6 = &g_B1SaturnCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2SaturnCoefficients);
  v9 = &g_B2SaturnCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3SaturnCoefficients);
  v12 = 0.0;
  v13 = &g_B3SaturnCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4SaturnCoefficients);
  v15 = 0.0;
  v16 = &g_B4SaturnCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B5SaturnCoefficients);
  v18 = 0.0;
  v19 = &g_B5SaturnCoefficients;
  do
  {
    v20 = *(double *)v19;
    v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_R0SaturnCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

double CAASaturn::RadiusVector(CAASaturn *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t *v19;
  double v20;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0SaturnCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1SaturnCoefficients);
  v6 = &g_R1SaturnCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2SaturnCoefficients);
  v9 = &g_R2SaturnCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_R3SaturnCoefficients);
  v12 = 0.0;
  v13 = &g_R3SaturnCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4SaturnCoefficients);
  v15 = 0.0;
  v16 = &g_R4SaturnCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R5SaturnCoefficients);
  v18 = 0.0;
  v19 = &g_R5SaturnCoefficients;
  do
  {
    v20 = *(double *)v19;
    v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &qword_189C63138);
  return (v4
        + v7 * v2
        + v10 * (v2 * v2)
        + v12 * (v2 * (v2 * v2))
        + v15 * (v2 * (v2 * (v2 * v2)))
        + v18 * (v2 * (v2 * (v2 * (v2 * v2)))))
       / 100000000.0;
}

long double CAASun::VariationGeometricEclipticLongitude(CAASun *this, double a2)
{
  double v2;
  long double v3;
  long double v4;
  long double v5;
  long double v6;
  long double v7;
  long double v8;
  long double v9;
  long double v10;
  long double v11;
  long double v12;
  long double v13;
  long double v14;
  long double v15;
  long double v16;
  long double v17;
  long double v18;
  long double v19;
  long double v20;
  long double v21;
  long double v22;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = sin((v2 * 359993.729 + 87.5287) * 0.0174532925) * 118.568 + 3548.193;
  v4 = v3 + sin((v2 * 719987.457 + 85.0561) * 0.0174532925) * 2.476;
  v5 = v4 + sin((v2 * 4452671.12 + 27.8502) * 0.0174532925) * 1.376;
  v6 = v5 + sin((v2 * 450368.856 + 73.1375) * 0.0174532925) * 0.119;
  v7 = v6 + sin((v2 * 329644.672 + 337.2264) * 0.0174532925) * 0.114;
  v8 = v7 + sin((v2 * 659289.344 + 222.54) * 0.0174532925) * 0.086;
  v9 = v8 + sin((v2 * 9224659.79 + 162.8136) * 0.0174532925) * 0.078;
  v10 = v9 + sin((v2 * 1079981.19 + 82.5823) * 0.0174532925) * 0.054;
  v11 = v10 + sin((v2 * 225184.428 + 171.5189) * 0.0174532925) * 0.052;
  v12 = v11 + sin((v2 * 4092677.39 + 30.3214) * 0.0174532925) * 0.034;
  v13 = v12 + sin((v2 * 337181.471 + 119.8105) * 0.0174532925) * 0.033;
  v14 = v13 + sin((v2 * 299295.615 + 247.5418) * 0.0174532925) * 0.023;
  v15 = v14 + sin((v2 * 315559.556 + 325.1526) * 0.0174532925) * 0.023;
  v16 = v15 + sin((v2 * 675553.285 + 155.1241) * 0.0174532925) * 0.021;
  v17 = v16 + v2 * 7.311 * sin((v2 * 359993.729 + 333.4515) * 0.0174532925);
  v18 = v17 + v2 * 0.305 * sin((v2 * 719987.457 + 330.9814) * 0.0174532925);
  v19 = v18 + v2 * 0.01 * sin((v2 * 1079981.19 + 328.517) * 0.0174532925);
  v20 = v19 + v2 * v2 * 0.309 * sin((v2 * 359993.729 + 241.4518) * 0.0174532925);
  v21 = v20 + v2 * v2 * 0.021 * sin((v2 * 719987.457 + 205.0482) * 0.0174532925);
  v22 = v21 + v2 * v2 * 0.004 * sin((v2 * 4452671.12 + 297.861) * 0.0174532925);
  return v22 + v2 * (v2 * v2) * 0.01 * sin((v2 * 359993.729 + 154.7066) * 0.0174532925);
}

double CAASun::EquatorialRectangularCoordinatesMeanEquinox(CAASun *this, double a2)
{
  long double v4;
  double cosval;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v4 = CAASun::GeometricFK5EclipticLongitude(this, a2);
  cosval = __sincos_stret(v4 * 0.0174532925).__cosval;
  v6 = CAASun::GeometricFK5EclipticLatitude(this, a2);
  v7 = __sincos_stret(v6 * 0.0174532925).__cosval;
  v8 = CAAEarth::RadiusVector(this, a2);
  v9 = (a2 + -2451545.0) / 3652500.0;
  v10 = v9 * (v9 * v9);
  v11 = v9 * (v9 * v10);
  v12 = v9 * (v9 * v11);
  __sincos_stret((v9 * -1.30025833+ 23.4392911+ v9 * v9 * -0.000430555556+ v10 * 0.555347222+ v9 * v10 * -0.0142722222+ v11 * -0.0693527778+ v9 * v11 * -0.0108472222+ v12 * 0.00197777778+ v9 * v12 * 0.00774166667+ v9 * (v9 * v12) * 0.00160833333+ v9 * (v9 * (v9 * v12)) * 0.000680555556)* 0.0174532925);
  return cosval * (v8 * v7);
}

void CAAMars::EclipticLongitude(CAAMars *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t *v19;
  double v20;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0MarsCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1MarsCoefficients);
  v6 = &g_L1MarsCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2MarsCoefficients);
  v9 = &g_L2MarsCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3MarsCoefficients);
  v12 = 0.0;
  v13 = &g_L3MarsCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4MarsCoefficients);
  v15 = 0.0;
  v16 = &g_L4MarsCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_L5MarsCoefficients);
  v18 = 0.0;
  v19 = &g_L5MarsCoefficients;
  do
  {
    v20 = *(double *)v19;
    v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_B0MarsCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAMars::EclipticLatitude(CAAMars *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0MarsCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1MarsCoefficients);
  v6 = &g_B1MarsCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2MarsCoefficients);
  v9 = &g_B2MarsCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3MarsCoefficients);
  v12 = 0.0;
  v13 = &g_B3MarsCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4MarsCoefficients);
  v15 = 0.0;
  v16 = &g_B4MarsCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R0MarsCoefficients);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0 * 57.2957795, 360.0);
}

double CAAMars::RadiusVector(CAAMars *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  double v9;
  uint64_t *v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0MarsCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1MarsCoefficients);
  v6 = &g_R1MarsCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2MarsCoefficients);
  v9 = 0.0;
  v10 = &g_R2MarsCoefficients;
  do
  {
    v11 = *(double *)v10;
    v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &g_R3MarsCoefficients);
  v12 = 0.0;
  v13 = &g_R3MarsCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4MarsCoefficients);
  v15 = 0.0;
  v16 = &g_R4MarsCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &qword_189C64FE0);
  return (v4 + v7 * v2 + v9 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0;
}

void CAAJupiter::EclipticLongitude(CAAJupiter *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t *v19;
  double v20;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0JupiterCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1JupiterCoefficients);
  v6 = &g_L1JupiterCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2JupiterCoefficients);
  v9 = &g_L2JupiterCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3JupiterCoefficients);
  v12 = 0.0;
  v13 = &g_L3JupiterCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4JupiterCoefficients);
  v15 = 0.0;
  v16 = &g_L4JupiterCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_L5JupiterCoefficients);
  v18 = 0.0;
  v19 = &g_L5JupiterCoefficients;
  do
  {
    v20 = *(double *)v19;
    v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &g_B0JupiterCoefficients);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ v18 * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAJupiter::EclipticLatitude(CAAJupiter *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  long double v18;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0JupiterCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1JupiterCoefficients);
  v6 = &g_B1JupiterCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2JupiterCoefficients);
  v9 = &g_B2JupiterCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3JupiterCoefficients);
  v12 = 0.0;
  v13 = &g_B3JupiterCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4JupiterCoefficients);
  v15 = 0.0;
  v16 = &g_B4JupiterCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R0JupiterCoefficients);
  v18 = cos(v2 * 522.58 + 0.09);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ (v18 + 0.0) * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

double CAAJupiter::RadiusVector(CAAJupiter *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t *v19;
  double v20;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0JupiterCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1JupiterCoefficients);
  v6 = &g_R1JupiterCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2JupiterCoefficients);
  v9 = &g_R2JupiterCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_R3JupiterCoefficients);
  v12 = 0.0;
  v13 = &g_R3JupiterCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4JupiterCoefficients);
  v15 = 0.0;
  v16 = &g_R4JupiterCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R5JupiterCoefficients);
  v18 = 0.0;
  v19 = &g_R5JupiterCoefficients;
  do
  {
    v20 = *(double *)v19;
    v18 = v18 + v20 * cos(*((double *)v19 + 1) + *((double *)v19 + 2) * v2);
    v19 += 3;
  }
  while (v19 != &qword_189C67EC8);
  return (v4
        + v7 * v2
        + v10 * (v2 * v2)
        + v12 * (v2 * (v2 * v2))
        + v15 * (v2 * (v2 * (v2 * v2)))
        + v18 * (v2 * (v2 * (v2 * (v2 * v2)))))
       / 100000000.0;
}

void CAAVenus::EclipticLongitude(CAAVenus *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  long double v18;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0VenusCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1VenusCoefficients);
  v6 = &g_L1VenusCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2VenusCoefficients);
  v9 = &g_L2VenusCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3VenusCoefficients);
  v12 = 0.0;
  v13 = &g_L3VenusCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4VenusCoefficients);
  v15 = 0.0;
  v16 = &g_L4VenusCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B0VenusCoefficients);
  v18 = cos(v2 * 0.0 + 3.14);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ (v18 + 0.0) * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAVenus::EclipticLatitude(CAAVenus *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  long double v15;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0VenusCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1VenusCoefficients);
  v6 = &g_B1VenusCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2VenusCoefficients);
  v9 = &g_B2VenusCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3VenusCoefficients);
  v12 = 0.0;
  v13 = &g_B3VenusCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R0VenusCoefficients);
  v15 = cos(v2 * 10213.29 + 0.32);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 14.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

long double CAAVenus::RadiusVector(CAAVenus *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  double v9;
  uint64_t *v10;
  double v11;
  long double v12;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0VenusCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1VenusCoefficients);
  v6 = &g_R1VenusCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2VenusCoefficients);
  v9 = 0.0;
  v10 = &g_R2VenusCoefficients;
  do
  {
    v11 = *(double *)v10;
    v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &qword_189C69C18);
  v12 = cos(v2 * 10213.29 + 3.22) * 50.0 + 0.0;
  return (v4
        + v7 * v2
        + v9 * (v2 * v2)
        + v12 * (v2 * (v2 * v2))
        + (cos(v2 * 10213.29 + 0.92) + 0.0) * (v2 * (v2 * (v2 * v2))))
       / 100000000.0;
}

double CAADynamicalTime::CumulativeLeapSeconds(CAADynamicalTime *this, double a2)
{
  double *v3;
  unint64_t v4;
  unint64_t v5;
  double *v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double v11;

  if (a2 < 2437300.5)
    return 0.0;
  if (a2 >= 2457754.5)
  {
    v10 = a2 + -2400000.5 + -41317.0;
    v9 = 37.0;
    v11 = 0.0;
  }
  else
  {
    v3 = (double *)&g_LeapSecondCoefficients;
    v4 = 41;
    do
    {
      v5 = v4 >> 1;
      v6 = &v3[4 * (v4 >> 1)];
      v8 = *v6;
      v7 = v6 + 4;
      v4 += ~(v4 >> 1);
      if (v8 > a2)
        v4 = v5;
      else
        v3 = v7;
    }
    while (v4);
    v9 = *(v3 - 3);
    v10 = a2 + -2400000.5 - *(v3 - 2);
    v11 = *(v3 - 1);
  }
  return v9 + v10 * v11;
}

void std::vector<CAARiseTransitSetDetails2>::push_back[abi:ne180100](void **a1, __int128 *a2)
{
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;

  v4 = (char *)a1[1];
  v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    v9 = 0xCCCCCCCCCCCCCCCDLL * ((v4 - (_BYTE *)*a1) >> 3);
    v10 = v9 + 1;
    if (v9 + 1 > 0x666666666666666)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v11 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x333333333333333)
      v12 = 0x666666666666666;
    else
      v12 = v10;
    if (v12)
      v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(v12);
    else
      v13 = 0;
    v14 = v12 + 40 * v9;
    v15 = v12 + 40 * v13;
    v16 = *a2;
    v17 = a2[1];
    *(_QWORD *)(v14 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v14 = v16;
    *(_OWORD *)(v14 + 16) = v17;
    v8 = (void *)(v14 + 40);
    v19 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        v20 = *(_OWORD *)(v18 - 40);
        v21 = *(_OWORD *)(v18 - 24);
        *(_BYTE *)(v14 - 8) = *(v18 - 8);
        *(_OWORD *)(v14 - 24) = v21;
        *(_OWORD *)(v14 - 40) = v20;
        v14 -= 40;
        v18 -= 40;
      }
      while (v18 != v19);
      v18 = (char *)*a1;
    }
    *a1 = (void *)v14;
    a1[1] = v8;
    a1[2] = (void *)v15;
    if (v18)
      operator delete(v18);
  }
  else
  {
    v6 = *a2;
    v7 = a2[1];
    *((_QWORD *)v4 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v4 = v6;
    *((_OWORD *)v4 + 1) = v7;
    v8 = v4 + 40;
  }
  a1[1] = v8;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<CAARiseTransitSetDetails2>>(unint64_t a1)
{
  if (a1 >= 0x666666666666667)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(40 * a1);
}

void CAAPluto::EclipticLongitude(CAAPluto *this, double a2)
{
  uint64_t v2;
  double v3;
  double v4;
  int *v5;
  double v6;
  int v7;
  double v8;
  __double2 v9;

  v2 = 0;
  v3 = (a2 + -2451545.0) / 36525.0;
  v4 = 0.0;
  v5 = &dword_189CB76B0;
  do
  {
    v6 = (v3 * 1222.1138 + 50.08) * (double)*(v5 - 1) + (double)*(v5 - 2) * (v3 * 3034.9057 + 34.35);
    v7 = *v5;
    v5 += 3;
    v8 = *(double *)((char *)&g_PlutoLongitudeCoefficients + v2);
    v9 = __sincos_stret((v6 + (double)v7 * (v3 * 144.96 + 238.96)) * 0.0174532925);
    v4 = v4 + *(double *)((char *)&g_PlutoLongitudeCoefficients + v2 + 8) * v9.__cosval + v8 * v9.__sinval;
    v2 += 16;
  }
  while (v2 != 688);
  fmod(v3 * 144.96 + 238.958116 + v4 / 1000000.0, 360.0);
}

void CAAPluto::EclipticLatitude(CAAPluto *this, double a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int *v8;
  double v9;
  int v10;
  double v11;
  __double2 v12;

  v2 = 0;
  v3 = (a2 + -2451545.0) / 36525.0;
  v4 = v3 * 3034.9057 + 34.35;
  v5 = v3 * 1222.1138 + 50.08;
  v6 = v3 * 144.96 + 238.96;
  v7 = 0.0;
  v8 = &dword_189CB76B0;
  do
  {
    v9 = v5 * (double)*(v8 - 1) + (double)*(v8 - 2) * v4;
    v10 = *v8;
    v8 += 3;
    v11 = *(double *)((char *)&g_PlutoLatitudeCoefficients + v2);
    v12 = __sincos_stret((v9 + (double)v10 * v6) * 0.0174532925);
    v7 = v7 + *(double *)((char *)&g_PlutoLatitudeCoefficients + v2 + 8) * v12.__cosval + v11 * v12.__sinval;
    v2 += 16;
  }
  while (v2 != 688);
  fmod(v7 / 1000000.0 + -3.908239, 360.0);
}

double CAAPluto::RadiusVector(CAAPluto *this, double a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int *v8;
  double v9;
  int v10;
  double v11;
  __double2 v12;

  v2 = 0;
  v3 = (a2 + -2451545.0) / 36525.0;
  v4 = v3 * 3034.9057 + 34.35;
  v5 = v3 * 1222.1138 + 50.08;
  v6 = v3 * 144.96 + 238.96;
  v7 = 0.0;
  v8 = &dword_189CB76B0;
  do
  {
    v9 = v5 * (double)*(v8 - 1) + (double)*(v8 - 2) * v4;
    v10 = *v8;
    v8 += 3;
    v11 = *(double *)((char *)&g_PlutoRadiusCoefficients + v2);
    v12 = __sincos_stret((v9 + (double)v10 * v6) * 0.0174532925);
    v7 = v7 + *(double *)((char *)&g_PlutoRadiusCoefficients + v2 + 8) * v12.__cosval + v11 * v12.__sinval;
    v2 += 16;
  }
  while (v2 != 688);
  return v7 / 10000000.0 + 40.7241346;
}

void CAAMercury::EclipticLongitude(CAAMercury *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;
  long double v18;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0MercuryCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1MercuryCoefficients);
  v6 = &g_L1MercuryCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2MercuryCoefficients);
  v9 = &g_L2MercuryCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3MercuryCoefficients);
  v12 = 0.0;
  v13 = &g_L3MercuryCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4MercuryCoefficients);
  v15 = 0.0;
  v16 = &g_L4MercuryCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B0MercuryCoefficients);
  v18 = cos(v2 * 0.0 + 3.14);
  fmod((v4+ v7 * v2+ v10 * (v2 * v2)+ v12 * (v2 * (v2 * v2))+ v15 * (v2 * (v2 * (v2 * v2)))+ (v18 + 0.0) * (v2 * (v2 * (v2 * (v2 * v2)))))/ 100000000.0* 57.2957795, 360.0);
}

void CAAMercury::EclipticLatitude(CAAMercury *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0MercuryCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1MercuryCoefficients);
  v6 = &g_B1MercuryCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2MercuryCoefficients);
  v9 = &g_B2MercuryCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3MercuryCoefficients);
  v12 = 0.0;
  v13 = &g_B3MercuryCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B4MercuryCoefficients);
  v15 = 0.0;
  v16 = &g_B4MercuryCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_R0MercuryCoefficients);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0 * 57.2957795, 360.0);
}

double CAAMercury::RadiusVector(CAAMercury *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  double v9;
  uint64_t *v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0MercuryCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1MercuryCoefficients);
  v6 = &g_R1MercuryCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2MercuryCoefficients);
  v9 = 0.0;
  v10 = &g_R2MercuryCoefficients;
  do
  {
    v11 = *(double *)v10;
    v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &g_R3MercuryCoefficients);
  v12 = 0.0;
  v13 = &g_R3MercuryCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &qword_189CB8F40);
  return (v4 + v7 * v2 + v9 * (v2 * v2) + v12 * (v2 * (v2 * v2))) / 100000000.0;
}

void CAANeptune::EclipticLongitude(CAANeptune *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  long double v15;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0NeptuneCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1NeptuneCoefficients);
  v6 = &g_L1NeptuneCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2NeptuneCoefficients);
  v9 = &g_L2NeptuneCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3NeptuneCoefficients);
  v12 = 0.0;
  v13 = &g_L3NeptuneCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_B0NeptuneCoefficients);
  v15 = cos(v2 * 0.0 + 3.142);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 114.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

void CAANeptune::EclipticLatitude(CAANeptune *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  long double v15;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0NeptuneCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1NeptuneCoefficients);
  v6 = &g_B1NeptuneCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2NeptuneCoefficients);
  v9 = &g_B2NeptuneCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3NeptuneCoefficients);
  v12 = 0.0;
  v13 = &g_B3NeptuneCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R0NeptuneCoefficients);
  v15 = cos(v2 * 38.13 + 2.67);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 6.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

long double CAANeptune::RadiusVector(CAANeptune *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  double v9;
  uint64_t *v10;
  double v11;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0NeptuneCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1NeptuneCoefficients);
  v6 = &g_R1NeptuneCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2NeptuneCoefficients);
  v9 = 0.0;
  v10 = &g_R2NeptuneCoefficients;
  do
  {
    v11 = *(double *)v10;
    v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &qword_189CB9E68);
  return (v4 + v7 * v2 + v9 * (v2 * v2) + (cos(v2 * 38.133 + 4.552) * 166.0 + 0.0) * (v2 * (v2 * v2))) / 100000000.0;
}

double CAADate::FractionalYear(CAADate *this)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CAADate *v12;

  v12 = 0;
  v9 = 0;
  CAADate::Get(this, (uint64_t *)&v12, &v11, &v10, &v9, &v8, &v7);
  if (*((_BYTE *)this + 8))
  {
    if (__ROR8__(0x8F5C28F5C28F5C29 * (_QWORD)v12 + 0x51EB851EB851EB8, 2) <= 0x28F5C28F5C28F5CuLL)
    {
      v2 = (uint64_t)v12 % 400;
    }
    else if ((uint64_t)v12 <= 0)
    {
      v2 = -(-(uint64_t)v12 & 3);
    }
    else
    {
      v2 = v12 & 3;
    }
  }
  else
  {
    v2 = v12 & 3;
  }
  v3 = dbl_189CB9EC0[v2 == 0];
  v4 = (double)(uint64_t)v12;
  v5 = *(double *)this;
  return (v5 - CAADate::DateToJD(v12, 1, (uint64_t)v12 > 1582, 1.0)) / v3 + v4;
}

void CAAUranus::EclipticLongitude(CAAUranus *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_L0UranusCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_L1UranusCoefficients);
  v6 = &g_L1UranusCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_L2UranusCoefficients);
  v9 = &g_L2UranusCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_L3UranusCoefficients);
  v12 = 0.0;
  v13 = &g_L3UranusCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_L4UranusCoefficients);
  v15 = 0.0;
  v16 = &g_L4UranusCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != &g_B0UranusCoefficients);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0 * 57.2957795, 360.0);
}

void CAAUranus::EclipticLatitude(CAAUranus *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t *v9;
  double v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  long double v15;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_B0UranusCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_B1UranusCoefficients);
  v6 = &g_B1UranusCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_B2UranusCoefficients);
  v9 = &g_B2UranusCoefficients;
  v10 = 0.0;
  do
  {
    v11 = *(double *)v9;
    v10 = v10 + v11 * cos(*((double *)v9 + 1) + *((double *)v9 + 2) * v2);
    v9 += 3;
  }
  while (v9 != &g_B3UranusCoefficients);
  v12 = 0.0;
  v13 = &g_B3UranusCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R0UranusCoefficients);
  v15 = cos(v2 * 74.78 + 2.85);
  fmod((v4 + v7 * v2 + v10 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + (v15 * 6.0 + 0.0) * (v2 * (v2 * (v2 * v2))))/ 100000000.0* 57.2957795, 360.0);
}

double CAAUranus::RadiusVector(CAAUranus *this, double a2)
{
  double v2;
  uint64_t *v3;
  double v4;
  double v5;
  uint64_t *v6;
  double v7;
  double v8;
  double v9;
  uint64_t *v10;
  double v11;
  double v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t *v16;
  double v17;

  v2 = (a2 + -2451545.0) / 365250.0;
  v3 = &g_R0UranusCoefficients;
  v4 = 0.0;
  do
  {
    v5 = *(double *)v3;
    v4 = v4 + v5 * cos(*((double *)v3 + 1) + *((double *)v3 + 2) * v2);
    v3 += 3;
  }
  while (v3 != &g_R1UranusCoefficients);
  v6 = &g_R1UranusCoefficients;
  v7 = 0.0;
  do
  {
    v8 = *(double *)v6;
    v7 = v7 + v8 * cos(*((double *)v6 + 1) + *((double *)v6 + 2) * v2);
    v6 += 3;
  }
  while (v6 != &g_R2UranusCoefficients);
  v9 = 0.0;
  v10 = &g_R2UranusCoefficients;
  do
  {
    v11 = *(double *)v10;
    v9 = v9 + v11 * cos(*((double *)v10 + 1) + *((double *)v10 + 2) * v2);
    v10 += 3;
  }
  while (v10 != &g_R3UranusCoefficients);
  v12 = 0.0;
  v13 = &g_R3UranusCoefficients;
  do
  {
    v14 = *(double *)v13;
    v12 = v12 + v14 * cos(*((double *)v13 + 1) + *((double *)v13 + 2) * v2);
    v13 += 3;
  }
  while (v13 != &g_R4UranusCoefficients);
  v15 = 0.0;
  v16 = &g_R4UranusCoefficients;
  do
  {
    v17 = *(double *)v16;
    v15 = v15 + v17 * cos(*((double *)v16 + 1) + *((double *)v16 + 2) * v2);
    v16 += 3;
  }
  while (v16 != (uint64_t *)"@(#)PROGRAM:Gloria  PROJECT:GeoServices-\n");
  return (v4 + v7 * v2 + v9 * (v2 * v2) + v12 * (v2 * (v2 * v2)) + v15 * (v2 * (v2 * (v2 * v2)))) / 100000000.0;
}

void gloria::DbReaderDisk::absolutePath(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  gloria::FileUtils::AbsolutePath(a3, (const void **)(a1 + 8), a2);
}

void **std::unique_ptr<gloria::MemoryMappedFile>::reset[abi:ne180100](void ***a1, void **a2)
{
  void **result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    gloria::MemoryMappedFile::~MemoryMappedFile(result);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void std::default_delete<std::string>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0)
      operator delete(*(void **)a2);
    JUMPOUT(0x18D76437CLL);
  }
}

void gloria::BinarySearchStrategy::~BinarySearchStrategy(gloria::BinarySearchStrategy *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t gloria::SHA1Fn::Hash(uint64_t a1, const void **a2)
{
  const void *v2;
  _QWORD v4[4];

  v2 = a2;
  v4[3] = *MEMORY[0x1E0C80C00];
  if (*((char *)a2 + 23) < 0)
  {
    v2 = *a2;
    a2 = (const void **)a2[1];
  }
  else
  {
    LODWORD(a2) = *((unsigned __int8 *)a2 + 23);
  }
  CC_SHA1(v2, (CC_LONG)a2, (unsigned __int8 *)v4);
  return v4[0];
}

void gloria::SHA1Fn::Hash()
{
  std::runtime_error *exception;

  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "Resetting the seed is not supported for SHA1!");
  __cxa_throw(exception, MEMORY[0x1E0DE4E80], MEMORY[0x1E0DE4338]);
}

void sub_1888470F4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void gloria::SHA1Fn::~SHA1Fn(gloria::SHA1Fn *this)
{
  JUMPOUT(0x18D76437CLL);
}

_QWORD *std::allocate_shared[abi:ne180100]<gloria::DbReaderDisk,std::allocator<gloria::DbReaderDisk>,char const(&)[1],void>@<X0>(char *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x38uLL);
  result = std::__shared_ptr_emplace<gloria::DbReaderDisk>::__shared_ptr_emplace[abi:ne180100]<char const(&)[1],std::allocator<gloria::DbReaderDisk>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_188847168(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__shared_ptr_emplace<gloria::DbReaderDisk>::__shared_ptr_emplace[abi:ne180100]<char const(&)[1],std::allocator<gloria::DbReaderDisk>,0>(_QWORD *a1, char *__s)
{
  char v4;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = &off_1E1BFB598;
  std::allocator<gloria::DbReaderDisk>::construct[abi:ne180100]<gloria::DbReaderDisk,char const(&)[1]>((int)&v4, (uint64_t)(a1 + 3), __s);
  return a1;
}

void sub_1888471C4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<gloria::DbReaderDisk>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB598;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<gloria::DbReaderDisk>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB598;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

void std::allocator<gloria::DbReaderDisk>::construct[abi:ne180100]<gloria::DbReaderDisk,char const(&)[1]>(int a1, uint64_t a2, char *__s)
{
  void *__p[2];
  char v5;

  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  gloria::DbReaderDisk::DbReaderDisk(a2, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_188847264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void gloria::Shard::From(gloria::Shard *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v5;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  v5 = *((_QWORD *)this + 20);
  if (*(int *)(v5 + 76) >= 1)
  {
    v9 = 0;
    v10 = a4 + 2;
    v11 = 1;
    do
    {
      v12 = (a2 + v11 * a3) % *(_QWORD *)(v5 + 80);
      if (v12 >= 0)
        v13 = v12;
      else
        v13 = -v12;
      if ((unint64_t)v9 >= *v10)
      {
        v15 = *a4;
        v16 = v9 - *a4;
        v17 = v16 + 1;
        if ((unint64_t)(v16 + 1) >> 61)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v18 = *v10 - (_QWORD)v15;
        if (v18 >> 2 > v17)
          v17 = v18 >> 2;
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8)
          v19 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v19 = v17;
        if (v19)
        {
          v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)(a4 + 2), v19);
          v15 = *a4;
          v9 = a4[1];
        }
        else
        {
          v20 = 0;
        }
        v21 = (uint64_t *)&v20[8 * v16];
        *v21 = v13;
        v14 = v21 + 1;
        while (v9 != v15)
        {
          v22 = *--v9;
          *--v21 = v22;
        }
        *a4 = v21;
        a4[1] = v14;
        a4[2] = (uint64_t *)&v20[8 * v19];
        if (v15)
          operator delete(v15);
      }
      else
      {
        *v9 = v13;
        v14 = v9 + 1;
      }
      a4[1] = v14;
      v5 = *((_QWORD *)this + 20);
      v9 = v14;
    }
    while (v11++ < *(int *)(v5 + 76));
  }
}

void sub_1888473D0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t gloria::Shard::BloomGet(gloria::Shard *this, uint64_t a2, char a3)
{
  uint64_t v4;
  void (***v5)(void **__return_ptr, _QWORD, uint64_t *, uint64_t *, char *);
  uint64_t v7;
  uint64_t v8;
  void *v9[3];
  char v10;
  char v11[4];
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;

  v4 = *(unsigned int *)(*((_QWORD *)this + 20) + 88);
  v11[0] = 1;
  v12 = 0;
  v13 = (unsigned __int8 *)&str_5;
  v14 = 0;
  v5 = (void (***)(void **__return_ptr, _QWORD, uint64_t *, uint64_t *, char *))*((_QWORD *)this + 2);
  v7 = 1;
  v8 = a2;
  (**v5)(v9, v5, &v8, &v7, v11);
  if (v10 < 0)
    operator delete(v9[1]);
  return ((v4 << a3) & (unint64_t)*v13) >> a3;
}

BOOL gloria::Shard::Has(gloria::Shard *this, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  _BOOL8 result;

  v2 = *((_QWORD *)this + 20);
  if (*(int *)(v2 + 76) < 1)
    return 1;
  v5 = 0;
  do
  {
    v6 = gloria::Shard::BloomGet(this, ((double)(unint64_t)(*(_QWORD *)(*a2 + 8 * v5) * *(int *)(v2 + 12)) * 0.125), ((*(_BYTE *)(v2 + 92) - 1) & *(_QWORD *)(*a2 + 8 * v5))* *(_DWORD *)(v2 + 12));
    result = v6 != 0;
    if (!v6)
      break;
    ++v5;
    v2 = *((_QWORD *)this + 20);
  }
  while (v5 < *(int *)(v2 + 76));
  return result;
}

BOOL gloria::Shard::BloomFilterHas(gloria::Shard *this, uint64_t a2, uint64_t a3)
{
  _BOOL8 v4;
  void *__p;
  void *v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;

  gloria::Shard::From(this, a2, a3, (uint64_t **)&v9);
  __p = 0;
  v7 = 0;
  v8 = 0;
  std::vector<unsigned long long>::__init_with_size[abi:ne180100]<unsigned long long *,unsigned long long *>(&__p, v9, (uint64_t)v10, (v10 - (_BYTE *)v9) >> 3);
  v4 = gloria::Shard::Has(this, &__p);
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
  if (v9)
  {
    v10 = v9;
    operator delete(v9);
  }
  return v4;
}

void sub_1888475A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  if (a12)
    operator delete(a12);
  _Unwind_Resume(exception_object);
}

uint64_t std::pair<int const,gloria::ShardInfo>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0)
    operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100](a1 + 16);
  return a1;
}

void gloria::ShardInfo::~ShardInfo(void **this)
{
  if (*((char *)this + 95) < 0)
    operator delete(this[9]);
  if (*((char *)this + 71) < 0)
    operator delete(this[6]);
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)(this + 1));
}

uint64_t gloria::ShardManager::ListIndexRecord(uint64_t a1, uint64_t a2, void (****a3)(uint64_t *__return_ptr, _QWORD, std::vector<std::string>::size_type *, uint64_t *, char *), std::vector<std::string> *this, std::vector<std::string>::size_type __sz)
{
  int v9;
  std::vector<std::string>::size_type v10;
  uint64_t v11;
  unsigned int v12;
  std::vector<std::string>::pointer begin;
  void (***v14)(uint64_t *__return_ptr, _QWORD, std::vector<std::string>::size_type *, uint64_t *, char *);
  uint64_t v17;
  void *__p;
  uint64_t v19;
  char v20;
  char v21[4];
  int v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  std::vector<std::string>::size_type v26;

  std::vector<std::string>::resize(this, __sz);
  v9 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 32) + 16))(*(_QWORD *)(a2 + 32));
  if (__sz)
  {
    v10 = 0;
    v11 = (*(_DWORD *)(a2 + 48) + v9);
    v12 = 1;
    do
    {
      begin = this->__begin_;
      v21[0] = 1;
      v22 = 0;
      v23 = &str_5;
      v24 = 0;
      v14 = *a3;
      v25 = v11;
      v26 = v10 * v11;
      (**v14)(&v17, v14, &v26, &v25, v21);
      if (!(_DWORD)v17)
        MEMORY[0x18D7640B8](&begin[v10], v23, v24);
      if (v20 < 0)
        operator delete(__p);
      v10 = v12++;
    }
    while (v10 < __sz);
  }
  LOBYTE(v17) = 1;
  HIDWORD(v17) = 0;
  __p = &str_5;
  v19 = 0;
  return gloria::Status::Status(a1, 0, (uint64_t)&v17);
}

void sub_1888477A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void gloria::ShardManager::DoListKeys(uint64_t a1@<X0>, void (****a2)(uint64_t *__return_ptr, _QWORD, std::vector<std::string>::size_type *, uint64_t *, char *)@<X1>, std::vector<std::string> *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  std::vector<std::string>::pointer begin;
  std::vector<std::string>::pointer end;
  uint64_t v12;
  void **v13;
  _QWORD *v14;
  std::vector<std::string> *v15;
  void *v16;
  uint64_t v17;
  _BYTE v18[8];
  void *__p;
  char v20;
  std::vector<std::string> v21;
  int v22;
  void *v23;
  char v24;

  gloria::ShardManager::CheckShardInitialization((uint64_t)a2, (uint64_t)&v22);
  if (v22)
  {
    gloria::Status::Status(a5, (uint64_t)&v22);
  }
  else
  {
    memset(&v21, 0, sizeof(v21));
    gloria::ShardManager::ListIndexRecord((uint64_t)v18, a1, a2, &v21, a4);
    if (v20 < 0)
      operator delete(__p);
    std::vector<std::string>::resize(a3, a4);
    begin = v21.__begin_;
    end = v21.__end_;
    if (v21.__begin_ != v21.__end_)
    {
      v12 = 0;
      do
      {
        v13 = (void **)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
        v14 = (_QWORD *)operator new();
        *v14 = off_1E1BF70D0;
        v14[1] = 0;
        v15 = (std::vector<std::string> *)v13;
        v16 = v14;
        gloria::Record::ReadFrom(&v15, (uint64_t)&begin[v12]);
        (*((void (**)(void **, std::string *))*v13 + 1))(v13, &a3->__begin_[v12]);
        (*(void (**)(_QWORD *))(*v14 + 40))(v14);
        (*((void (**)(void **))*v13 + 5))(v13);
        ++v12;
      }
      while (&begin[v12] != end);
    }
    LOBYTE(v15) = 1;
    HIDWORD(v15) = 0;
    v16 = &str_5;
    v17 = 0;
    gloria::Status::Status(a5, 0, (uint64_t)&v15);
    v15 = &v21;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v15);
  }
  if (v24 < 0)
    operator delete(v23);
}

void sub_188847960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  a9 = &a16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a25 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void gloria::Record::ReadFrom(_QWORD *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  std::string v6;
  std::string v7;
  char v8;

  v4 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 16))(*a1);
  std::string::basic_string(&v7, (const std::string *)a2, 0, v4, (std::allocator<char> *)&v6);
  if (*(char *)(a2 + 23) >= 0)
    v5 = *(unsigned __int8 *)(a2 + 23);
  else
    v5 = *(_QWORD *)(a2 + 8);
  std::string::basic_string(&v6, (const std::string *)a2, v4, v5, (std::allocator<char> *)&v8);
  (**(void (***)(_QWORD, std::string *))*a1)(*a1, &v7);
  (**(void (***)(_QWORD, std::string *))a1[1])(a1[1], &v6);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
}

void sub_188847AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void gloria::ShardManager::DoReadValues(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, std::vector<std::string>::size_type a4@<X3>, uint64_t a5@<X8>)
{
  std::vector<std::string>::pointer begin;
  std::vector<std::string>::pointer end;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _BYTE v19[8];
  void *v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  _QWORD v27[2];
  _BYTE v28[8];
  void *__p;
  char v30;
  std::vector<std::string> v31;
  int v32;
  void *v33;
  char v34;

  gloria::ShardManager::CheckShardInitialization(a2, (uint64_t)&v32);
  if (v32)
  {
    gloria::Status::Status(a5, (uint64_t)&v32);
  }
  else
  {
    memset(&v31, 0, sizeof(v31));
    gloria::ShardManager::ListIndexRecord((uint64_t)v28, a1, (void (****)(uint64_t *__return_ptr, _QWORD, std::vector<std::string>::size_type *, uint64_t *, char *))a2, &v31, a4);
    if (v30 < 0)
      operator delete(__p);
    std::vector<gloria::Slice>::resize((uint64_t)a3, a4);
    begin = v31.__begin_;
    end = v31.__end_;
    if (v31.__begin_ != v31.__end_)
    {
      v12 = 0;
      do
      {
        v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
        v14 = (_QWORD *)operator new();
        *v14 = off_1E1BF70D0;
        v14[1] = 0;
        v27[0] = v13;
        v27[1] = v14;
        gloria::Record::ReadFrom(v27, (uint64_t)&begin[v12]);
        v25 = 0;
        v26 = 0;
        v24 = 0;
        (*(void (**)(_QWORD *, void **))(*v14 + 8))(v14, &v24);
        v15 = (uint64_t *)&v24;
        if (v26 < 0)
          v15 = (uint64_t *)v24;
        v16 = *v15;
        LOBYTE(v22) = 1;
        DWORD1(v22) = 0;
        *((_QWORD *)&v22 + 1) = &str_5;
        v23 = 0;
        gloria::RecordReader::ReadPayloadAt(*(void (****)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 8), v16, (uint64_t)&v22, (uint64_t)v19);
        if (v21 < 0)
          operator delete(v20);
        v17 = *a3 + v12 * 24;
        v18 = v22;
        *(_QWORD *)(v17 + 16) = v23;
        *(_OWORD *)v17 = v18;
        if (SHIBYTE(v26) < 0)
          operator delete(v24);
        (*(void (**)(_QWORD *))(*v14 + 40))(v14);
        if (v13)
          (*(void (**)(uint64_t))(*(_QWORD *)v13 + 40))(v13);
        ++v12;
      }
      while (&begin[v12] != end);
    }
    LOBYTE(v24) = 1;
    HIDWORD(v24) = 0;
    v25 = &str_5;
    v26 = 0;
    gloria::Status::Status(a5, 0, (uint64_t)&v24);
    v24 = &v31;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
  }
  if (v34 < 0)
    operator delete(v33);
}

void sub_188847CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  __p = &a30;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (*(char *)(v30 - 89) < 0)
    operator delete(*(void **)(v30 - 112));
  _Unwind_Resume(a1);
}

void std::vector<gloria::Slice>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    std::vector<gloria::Slice>::__append((void **)a1, v4);
  }
  else if (!v3)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 24 * a2;
  }
}

void gloria::ShardManager::DoRandomKey(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  void (***v13)(_QWORD, uint64_t *, uint64_t *, uint64_t);
  int v14;
  void *__p;
  char v16;
  uint64_t v17;
  uint64_t v18;

  gloria::ShardManager::CheckShardInitialization(a2, (uint64_t)&v14);
  if (v14)
  {
    gloria::Status::Status(a4, (uint64_t)&v14);
  }
  else
  {
    v8 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
    v9 = *(_QWORD *)(a1 + 48);
    v10 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
    v11 = v9 + v8;
    v12 = gloria::RandomUtils::Uniform<unsigned long long>(0, (*(_QWORD *)(*(_QWORD *)a2 + 24) - *(_QWORD *)(*(_QWORD *)a2 + 16)) / (int)v11 - 1);
    v13 = *(void (****)(_QWORD, uint64_t *, uint64_t *, uint64_t))a2;
    v17 = v10;
    v18 = v12 * v11;
    (**v13)(v13, &v18, &v17, a3);
  }
  if (v16 < 0)
    operator delete(__p);
}

void sub_188847EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t gloria::RandomUtils::Uniform<unsigned long long>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned int v7;
  uint64_t i;
  _QWORD v9[2];

  v2 = a1;
  if (a1 != a2)
  {
    if ((v4 & 1) == 0
    {
      std::random_device::random_device[abi:ne180100]((std::random_device *)&gloria::RandomUtils::Uniform<unsigned long long>(type)::std);
      __cxa_atexit((void (*)(void *))MEMORY[0x1E0DE4778], &gloria::RandomUtils::Uniform<unsigned long long>(type)::std, &dword_1885A9000);
    }
    if ((v5 & 1) == 0
    {
      v7 = MEMORY[0x18D764250](&gloria::RandomUtils::Uniform<unsigned long long>(type)::std);
      gloria::RandomUtils::Uniform<unsigned long long>(type)::std[0] = v7;
      for (i = 1; i != 624; ++i)
      {
        v7 = i + 1812433253 * (v7 ^ (v7 >> 30));
        gloria::RandomUtils::Uniform<unsigned long long>(type)::std[i] = v7;
      }
      qword_1EDF46F38 = 0;
    }
    v9[0] = v2;
    v9[1] = a2;
    return std::uniform_int_distribution<unsigned long long>::operator()<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>>((uint64_t)v9, (uint64_t)gloria::RandomUtils::Uniform<unsigned long long>(type)::std, v9);
  }
  return v2;
}

void sub_188848004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t gloria::ShardManager::DoCount(uint64_t a1, uint64_t **a2)
{
  int v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v11;
  void *__p;
  char v13;

  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  v5 = *a2;
  v6 = a2[1];
  if (*a2 != v6)
  {
    v7 = 0;
    v8 = *(_DWORD *)(a1 + 48) + v4;
    while (1)
    {
      gloria::ShardManager::CheckShardInitialization(*v5, (uint64_t)&v11);
      v9 = v11;
      if (!v11)
        v7 += (*(_QWORD *)(*(_QWORD *)*v5 + 24) - *(_QWORD *)(*(_QWORD *)*v5 + 16)) / v8;
      if (v13 < 0)
        operator delete(__p);
      if (v9)
        break;
      if (++v5 == v6)
        return v7;
    }
  }
  return 0;
}

uint64_t gloria::Offset64Value::ReadFrom(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  if (*(char *)(a2 + 23) >= 0)
    v2 = (_QWORD *)a2;
  else
    v2 = *(_QWORD **)a2;
  *(_QWORD *)(result + 8) = *v2;
  return result;
}

double gloria::Offset64Value::WriteTo(uint64_t a1, uint64_t a2)
{
  double result;
  std::string v4;
  std::string::value_type __s[8];

  memset(&v4, 0, sizeof(v4));
  *(_QWORD *)__s = *(_QWORD *)(a1 + 8);
  std::string::append(&v4, __s, 8uLL);
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
  result = *(double *)&v4.__r_.__value_.__l.__data_;
  *(std::string *)a2 = v4;
  return result;
}

void sub_188848168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t gloria::Offset64Value::Size(gloria::Offset64Value *this)
{
  return 8;
}

uint64_t gloria::RecordAttribute::clone(gloria::RecordAttribute *this)
{
  return 0;
}

void gloria::Offset64Value::~Offset64Value(gloria::Offset64Value *this)
{
  JUMPOUT(0x18D76437CLL);
}

void std::__shared_ptr_pointer<gloria::BasicShardHeader *,std::shared_ptr<gloria::BasicShardHeader>::__shared_ptr_default_delete<gloria::BasicShardHeader,gloria::BasicShardHeader>,std::allocator<gloria::BasicShardHeader>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_pointer<gloria::BasicShardHeader *,std::shared_ptr<gloria::BasicShardHeader>::__shared_ptr_default_delete<gloria::BasicShardHeader,gloria::BasicShardHeader>,std::allocator<gloria::BasicShardHeader>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__shared_ptr_pointer<gloria::BloomShardHeader *,std::shared_ptr<gloria::BloomShardHeader>::__shared_ptr_default_delete<gloria::BloomShardHeader,gloria::BloomShardHeader>,std::allocator<gloria::BloomShardHeader>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t std::__shared_ptr_pointer<gloria::BloomShardHeader *,std::shared_ptr<gloria::BloomShardHeader>::__shared_ptr_default_delete<gloria::BloomShardHeader,gloria::BloomShardHeader>,std::allocator<gloria::BloomShardHeader>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<gloria::BloomShardHeader *,std::shared_ptr<gloria::BloomShardHeader>::__shared_ptr_default_delete<gloria::BloomShardHeader,gloria::BloomShardHeader>,std::allocator<gloria::BloomShardHeader>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__destroy_at[abi:ne180100]<std::pair<int const,gloria::ShardInfo>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0)
    operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 79) < 0)
    operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
  return std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100](a1 + 16);
}

_QWORD *std::vector<unsigned long long>::__init_with_size[abi:ne180100]<unsigned long long *,unsigned long long *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<unsigned long long>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_18884833C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void std::unique_ptr<std::__tree_node<std::__value_type<int,gloria::ShardInfo>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<int,gloria::ShardInfo>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<int const,gloria::ShardInfo>,0>((uint64_t)v1 + 32);
    operator delete(v1);
  }
}

void std::vector<gloria::Slice>::__append(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD **)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (_BYTE *)v7) >> 3) >= a2)
  {
    if (a2)
    {
      v13 = &v7[3 * a2];
      do
      {
        *v7 = 1;
        v7[1] = &str_5;
        v7[2] = 0;
        v7 += 3;
      }
      while (v7 != v13);
      v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (_BYTE *)*a1) >> 3);
    v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL)
      std::vector<gloria::Slice>::__throw_length_error[abi:ne180100]();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    if (v11)
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(v4, v11);
    else
      v12 = 0;
    v14 = &v12[24 * v8];
    v15 = &v14[24 * a2];
    v16 = v14;
    do
    {
      *(_QWORD *)v16 = 1;
      *((_QWORD *)v16 + 1) = &str_5;
      *((_QWORD *)v16 + 2) = 0;
      v16 += 24;
    }
    while (v16 != v15);
    v17 = &v12[24 * v11];
    v19 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        v20 = *(_OWORD *)(v18 - 24);
        *((_QWORD *)v14 - 1) = *((_QWORD *)v18 - 1);
        *(_OWORD *)(v14 - 24) = v20;
        v14 -= 24;
        v18 -= 24;
      }
      while (v18 != v19);
      v18 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v15;
    a1[2] = v17;
    if (v18)
      operator delete(v18);
  }
}

void std::vector<gloria::Slice>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

std::random_device *std::random_device::random_device[abi:ne180100](std::random_device *a1)
{
  std::string __token;

  std::string::basic_string[abi:ne180100]<0>(&__token, "/dev/urandom");
  std::random_device::random_device(a1, &__token);
  if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__token.__r_.__value_.__l.__data_);
  return a1;
}

void sub_188848574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t std::uniform_int_distribution<unsigned long long>::operator()<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>>(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE v10[64];

  result = a3[1];
  v4 = result - *a3;
  if (result != *a3)
  {
    v5 = v4 + 1;
    if (v4 == -1)
    {
      std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__independent_bits_engine((uint64_t)v10, a2, 0x40uLL);
      return std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__eval((uint64_t)v10);
    }
    else
    {
      v7 = __clz(v5);
      v8 = 63;
      if (((v5 << v7) & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v8 = 64;
      std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__independent_bits_engine((uint64_t)v10, a2, v8 - v7);
      do
        v9 = std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__eval((uint64_t)v10);
      while (v9 >= v5);
      return *a3 + v9;
    }
  }
  return result;
}

uint64_t std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__independent_bits_engine(uint64_t result, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;

  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  if ((a3 & 0x1F) != 0)
    v3 = (a3 >> 5) + 1;
  else
    v3 = a3 >> 5;
  v4 = a3 / v3;
  *(_QWORD *)(result + 16) = a3 / v3;
  *(_QWORD *)(result + 24) = v3;
  v5 = (-1 << (a3 / v3)) & 0x100000000;
  if (a3 / v3 >= 0x40)
    v5 = 0;
  *(_QWORD *)(result + 40) = v5;
  if ((v5 ^ 0x100000000) > v5 / v3)
  {
    ++v3;
    v4 = a3 / v3;
    *(_QWORD *)(result + 16) = a3 / v3;
    *(_QWORD *)(result + 24) = v3;
    if (a3 / v3 > 0x3F)
    {
      v6 = 0;
      *(_QWORD *)(result + 32) = v3 + v4 * v3 - a3;
      *(_QWORD *)(result + 40) = 0;
      goto LABEL_13;
    }
    *(_QWORD *)(result + 40) = (-1 << v4) & 0x100000000;
  }
  *(_QWORD *)(result + 32) = v3 + a3 / v3 * v3 - a3;
  if (v4 > 0x3E)
    v6 = 0;
  else
    v6 = 0x80000000uLL >> v4 << (v4 + 1);
LABEL_13:
  *(_QWORD *)(result + 48) = v6;
  v7 = 0xFFFFFFFF >> -(char)v4;
  if (!v4)
    v7 = 0;
  if (v4 >= 0x1F)
    v8 = -1;
  else
    v8 = 0xFFFFFFFF >> ~(_BYTE)v4;
  *(_DWORD *)(result + 56) = v7;
  *(_DWORD *)(result + 60) = v8;
  return result;
}

uint64_t std::__independent_bits_engine<std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>,unsigned long long>::__eval(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v8;
  unint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = 0;
    v3 = 0;
    do
    {
      do
        v4 = std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()(*(std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> **)a1);
      while (*(_QWORD *)(a1 + 40) <= (unint64_t)v4);
      v5 = *(_QWORD *)(a1 + 16);
      if (v5 >= 0x40)
        v6 = 0;
      else
        v6 = v2 << v5;
      v2 = v6 + (*(_DWORD *)(a1 + 56) & v4);
      ++v3;
      v7 = *(_QWORD *)(a1 + 32);
    }
    while (v3 < v7);
  }
  else
  {
    v2 = 0;
    v7 = 0;
  }
  for (; v7 < *(_QWORD *)(a1 + 24); ++v7)
  {
    do
      v8 = std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()(*(std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> **)a1);
    while (*(_QWORD *)(a1 + 48) <= (unint64_t)v8);
    v9 = *(_QWORD *)(a1 + 16);
    if (v9 >= 0x3F)
      v10 = 0;
    else
      v10 = v2 << (v9 + 1);
    v2 = v10 + (*(_DWORD *)(a1 + 60) & v8);
  }
  return v2;
}

std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()(std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> *this)
{
  size_t i;
  size_t v2;
  std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>::result_type v3;

  i = this->__i_;
  v2 = (i + 1) % 0x270;
  v3 = this->__x_[(i + 397) % 0x270] ^ ((this->__x_[v2] & 0x7FFFFFFE | this->__x_[i] & 0x80000000) >> 1) ^ ((int)(this->__x_[v2] << 31) >> 31) & 0x9908B0DF;
  this->__x_[i] = v3;
  this->__i_ = v2;
  LODWORD(i) = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  return ((_DWORD)i << 15) & 0xEFC60000 ^ i ^ ((((_DWORD)i << 15) & 0xEFC60000 ^ i) >> 18);
}

_QWORD *std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::_DetachedTreeCache::__detach_next(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  _QWORD *v4;

  result = *(_QWORD **)(a1 + 16);
  if (result)
  {
    v3 = (_QWORD *)*result;
    if (*result == a1)
    {
      *result = 0;
      while (1)
      {
        v4 = (_QWORD *)result[1];
        if (!v4)
          break;
        do
        {
          result = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; v3 = (_QWORD *)result[1])
      {
        do
        {
          result = v3;
          v3 = (_QWORD *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::destroy(*(_QWORD *)a1, *(_QWORD **)(a1 + 16));
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = (_QWORD *)v2[2];
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = (_QWORD *)v3[2];
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<int,gloria::ShardInfo>,std::__map_value_compare<int,std::__value_type<int,gloria::ShardInfo>,std::less<int>,true>,std::allocator<std::__value_type<int,gloria::ShardInfo>>>::destroy(*(_QWORD *)a1, v2);
  }
  return a1;
}

void std::unique_ptr<std::__tree_node<std::__value_type<int,gloria::Shard>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<int,gloria::Shard>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  void **v2;

  v2 = *(void ***)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      gloria::Shard::~Shard(v2 + 5);
    operator delete(v2);
  }
}

void gloria::Lz4Decompressor::decompress(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::vector<char>::size_type v8;
  size_t v9;
  const uint8_t *v11;
  int v12;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  _BYTE v17[4];
  int v18;
  const char *v19;
  uint64_t v20;
  std::vector<char> v21;

  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a1 + 4);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(unsigned int *)(v6 + v5);
  *(_DWORD *)(a1 + 4) = v5 + 4;
  v9 = v7 - 4;
  if ((unint64_t)(v7 - 4) >> 31)
  {
    LOBYTE(v21.__begin_) = 1;
    HIDWORD(v21.__begin_) = 0;
    v21.__end_ = "Value size greater than INT_MAX. This should not happen. Unless database is corrupt.";
    v21.__end_cap_.__value_ = (char *)84;
    gloria::Status::Status(a3, 2, (uint64_t)&v21);
  }
  else
  {
    v11 = (const uint8_t *)(v6 + 4);
    std::vector<char>::vector(&v21, v8);
    v12 = compression_decode_buffer((uint8_t *)v21.__begin_, v8, v11, v9, 0, COMPRESSION_LZ4_RAW);
    if (v12 >= 1 && (_DWORD)v8 == v12)
    {
      if (*(char *)(v4 + 23) < 0)
      {
        **(_BYTE **)v4 = 0;
        *(_QWORD *)(v4 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v4 = 0;
        *(_BYTE *)(v4 + 23) = 0;
      }
      std::string::resize((std::string *)v4, v8, 0);
      MEMORY[0x18D7640B8](v4, v21.__begin_, v8);
      *(_BYTE *)(a2 + 56) = 0;
      v14 = *(uint64_t **)(a2 + 48);
      v15 = v14;
      if (*((char *)v14 + 23) < 0)
        v15 = (uint64_t *)*v14;
      *(_QWORD *)(a2 + 8) = v15;
      if (*((char *)v14 + 23) < 0)
        v16 = v14[1];
      else
        v16 = *((unsigned __int8 *)v14 + 23);
      *(_QWORD *)(a2 + 16) = v16;
      v17[0] = 1;
      v18 = 0;
      v19 = "";
      v20 = 0;
      gloria::Status::Status(a3, 0, (uint64_t)v17);
    }
    else
    {
      v17[0] = 1;
      v18 = 0;
      v19 = "Decompression failed.";
      v20 = 21;
      gloria::Status::Status(a3, 11, (uint64_t)v17);
    }
    if (v21.__begin_)
    {
      v21.__end_ = v21.__begin_;
      operator delete(v21.__begin_);
    }
  }
}

void sub_188848AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, int a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void gloria::Lz4Decompressor::~Lz4Decompressor(gloria::Lz4Decompressor *this)
{
  JUMPOUT(0x18D76437CLL);
}

std::vector<char> *__cdecl std::vector<char>::vector(std::vector<char> *this, std::vector<char>::size_type __n)
{
  std::vector<char>::pointer end;
  char *v5;

  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  if (__n)
  {
    std::vector<unsigned char>::__vallocate[abi:ne180100](this, __n);
    end = this->__end_;
    v5 = &end[__n];
    bzero(end, __n);
    this->__end_ = v5;
  }
  return this;
}

void sub_188848BCC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void gloria::BloomShardHeader::ReadFrom(_BYTE *a1@<X0>, const std::string *a2@<X1>, std::ios_base::openmode a3@<W2>, uint64_t a4@<X8>)
{
  void **v6;
  std::string::size_type v7;
  int v8;
  void *__p;
  char v10;
  void *v11[2];
  uint64_t v12;
  std::fstream v13;
  void **v14;
  __int128 v15;
  int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if (a1[72])
  {
    LOBYTE(v13.__sb_.__extbuf_) = 1;
    HIDWORD(v13.__sb_.__extbuf_) = 0;
    v13.__sb_.__extbufnext_ = "";
    v13.__sb_.__extbufend_ = 0;
    gloria::Status::Status(a4, 0, (uint64_t)&v13);
  }
  else
  {
    std::fstream::basic_fstream(&v13, a2, a3);
    if (*(&v13.__sb_.__st_._mbstateL + 9)
      && (v13.__sb_.__extbuf_min_[*((_QWORD *)v13.__sb_.__extbuf_ - 3) + 8] & 5) == 0)
    {
      std::istream::seekg();
      std::istream::tellg();
      if (v20)
      {
        v11[0] = 0;
        v11[1] = 0;
        v12 = 0;
        v14 = 0;
        v7 = 512;
        gloria::FileIO::ReadBuffer((uint64_t)&v8, &v13, (uint64_t *)&v14, &v7, (uint64_t)v11);
        if (v8)
        {
          LOBYTE(v14) = 1;
          HIDWORD(v14) = 0;
          *(_QWORD *)&v15 = "cannot read header buffer from the index file";
          *((_QWORD *)&v15 + 1) = 45;
          gloria::Status::Status(a4, 7, (uint64_t)&v14);
        }
        else
        {
          v16 = -1;
          v18 = 0;
          v19 = 0;
          v17 = 0;
          v6 = v11;
          if (v12 < 0)
            v6 = (void **)v11[0];
          v14 = v6;
          v15 = xmmword_189CBC8F0;
          (*(void (**)(_BYTE *, void ***))(*(_QWORD *)a1 + 16))(a1, &v14);
          if (SHIBYTE(v19) < 0)
            operator delete(v17);
        }
        if (v10 < 0)
          operator delete(__p);
        if (SHIBYTE(v12) < 0)
          operator delete(v11[0]);
      }
      else
      {
        LOBYTE(v14) = 1;
        HIDWORD(v14) = 0;
        *(_QWORD *)&v15 = "cannot read header from empty file";
        *((_QWORD *)&v15 + 1) = 34;
        gloria::Status::Status(a4, 7, (uint64_t)&v14);
      }
    }
    else
    {
      LOBYTE(v14) = 1;
      HIDWORD(v14) = 0;
      *(_QWORD *)&v15 = "cannot read the index file: invalid input stream";
      *((_QWORD *)&v15 + 1) = 48;
      gloria::Status::Status(a4, 7, (uint64_t)&v14);
    }
    gloria::FileIO::~FileIO((gloria::FileIO *)&v13);
  }
}

void sub_188848E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  uint64_t v24;

  if (*(char *)(v24 - 121) < 0)
    operator delete(*(void **)(v24 - 144));
  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  gloria::FileIO::~FileIO((gloria::FileIO *)&a24);
  _Unwind_Resume(a1);
}

void gloria::BloomShardHeader::ReadFrom(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  double v8;
  int v9;
  int v10;
  const char *v11;
  const char *p_p;
  const char *v13;
  const char *v14;
  void *v15;
  unint64_t v16;
  const char *v17;
  void *v18;
  int v19;
  int v20;
  int v21;
  void *__p;
  const char *v23;
  uint64_t v24;
  char v25;
  char v26[4];
  int v27;
  void *v28;
  const char *v29;
  void *v30;
  const char *v31;
  const char *v32;

  v5 = *a2;
  v6 = a1 + 48;
  std::string::resize((std::string *)(a1 + 48), 0x28uLL, 0);
  MEMORY[0x18D7640B8](v6, v5, 40);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "data processed is not a gloria Bloom filter");
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    v11 = (const char *)HIBYTE(v24);
    p_p = (const char *)__p;
    if (v24 < 0)
      v11 = v23;
    else
      p_p = (const char *)&__p;
    v31 = p_p;
    v32 = v11;
    gloria::Status::Status(a3, 7, (uint64_t)&v30);
    goto LABEL_13;
  }
  v7 = *(_DWORD *)(v5 + 40);
  *(_DWORD *)(a1 + 8) = v7;
  if (!v7)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "BIG_ENDIAN endian index not currently supported");
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    v13 = (const char *)HIBYTE(v24);
    v14 = (const char *)__p;
    if (v24 < 0)
      v13 = v23;
    else
      v14 = (const char *)&__p;
    v31 = v14;
    v32 = v13;
    gloria::Status::Status(a3, 6, (uint64_t)&v30);
LABEL_13:
    if ((SHIBYTE(v24) & 0x80000000) == 0)
      return;
    v15 = __p;
LABEL_15:
    operator delete(v15);
    return;
  }
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(v5 + 44);
  v8 = *(double *)(v5 + 48);
  *(double *)(a1 + 16) = v8;
  v9 = *(_DWORD *)(v5 + 56);
  *(_DWORD *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(v5 + 60);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(v5 + 64);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(v5 + 68);
  v10 = *(char *)(v5 + 72);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(v5 + 72);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(v5 + 73);
  if (v10 <= 1)
  {
    LOBYTE(__p) = 1;
    HIDWORD(__p) = 0;
    v23 = "Cannot read Bloom filter version below 2.0";
    v24 = 42;
    gloria::Status::Status(a3, 3, (uint64_t)&__p);
    return;
  }
  if (v8 == 0.0)
    v8 = -1.79769313e308;
  v16 = (unint64_t)(log(v8) * (double)-v9 / 0.480453014);
  if (HIDWORD(v16))
  {
    std::string::basic_string[abi:ne180100]<0>(&v30, "Bloom filter must be under 2GB");
    v26[0] = 1;
    v27 = 0;
    v17 = (const char *)HIBYTE(v32);
    v18 = v30;
    if (SHIBYTE(v32) < 0)
      v17 = v31;
    else
      v18 = &v30;
    v28 = v18;
    v29 = v17;
    gloria::Status::Status((uint64_t)&__p, 6, (uint64_t)v26);
    if (SHIBYTE(v32) < 0)
      operator delete(v30);
  }
  else
  {
    *(_QWORD *)(a1 + 80) = v16;
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    v31 = "";
    v32 = 0;
    gloria::Status::Status((uint64_t)&__p, 0, (uint64_t)&v30);
  }
  if ((_DWORD)__p)
  {
    gloria::Status::Status(a3, (uint64_t)&__p);
  }
  else
  {
    v19 = llround((double)*(unint64_t *)(a1 + 80) / (double)*(int *)(a1 + 24) * 0.693147181);
    if (v19 <= 1)
      v19 = 1;
    *(_DWORD *)(a1 + 76) = v19;
    v20 = *(_DWORD *)(a1 + 12);
    v21 = (2 << (v20 - 1)) - 1;
    if (v20 == 32)
      v21 = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 88) = v21;
    *(_DWORD *)(a1 + 92) = 8 / v20;
    LOBYTE(v30) = 1;
    HIDWORD(v30) = 0;
    v31 = "";
    v32 = 0;
    gloria::Status::Status(a3, 0, (uint64_t)&v30);
  }
  if (v25 < 0)
  {
    v15 = (void *)v23;
    goto LABEL_15;
  }
}

void sub_188849198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, int a11, __int16 a12, char a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void gloria::BasicShardHeader::ToString(gloria::BasicShardHeader *this@<X0>, std::string *a2@<X8>)
{
  std::string *v3;
  std::string *v4;
  std::string::size_type size;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  void **v14;
  std::string *v15;
  void **v16;
  std::string::size_type v17;
  std::string *v18;
  std::string *v19;
  std::string *v20;
  std::string::size_type v21;
  void *v22[2];
  unsigned __int8 v23;
  std::string v24;
  tm v25;
  void *__p[2];
  char v27;
  time_t v28;
  std::string v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v3 = std::string::append(a2, "shard_id: ");
  std::to_string(&v24, *((int *)this + 8));
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v4 = &v24;
  else
    v4 = (std::string *)v24.__r_.__value_.__r.__words[0];
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    size = v24.__r_.__value_.__l.__size_;
  v6 = std::string::append(v3, (const std::string::value_type *)v4, size);
  v7 = std::string::append(v6, " compression: ");
  v8 = std::string::append(v7, gloria::CompressionTypeDescriptor[*((unsigned int *)this + 2)]);
  v9 = std::string::append(v8, " hashing: ");
  v10 = std::string::append(v9, gloria::HashingTypeDescriptor[*((unsigned int *)this + 4)]);
  v11 = std::string::append(v10, " endianness: ");
  v12 = std::string::append(v11, gloria::ByteOrderDescriptor[*((unsigned int *)this + 3)]);
  v13 = std::string::append(v12, " created_at");
  v28 = *((_QWORD *)this + 3);
  std::string::basic_string[abi:ne180100]<0>(__p, "%Y-%m-%d %H:%M:%S %z");
  gmtime_r(&v28, &v25);
  if (v27 >= 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  if (strftime((char *)&v29, 0x80uLL, (const char *)v14, &v25))
    v15 = &v29;
  else
    v15 = (std::string *)"time undefined";
  std::string::basic_string[abi:ne180100]<0>(v22, (char *)v15);
  if (v27 < 0)
    operator delete(__p[0]);
  if ((v23 & 0x80u) == 0)
    v16 = v22;
  else
    v16 = (void **)v22[0];
  if ((v23 & 0x80u) == 0)
    v17 = v23;
  else
    v17 = (std::string::size_type)v22[1];
  v18 = std::string::append(v13, (const std::string::value_type *)v16, v17);
  v19 = std::string::append(v18, "timestamp ");
  std::to_string(&v29, *((_QWORD *)this + 3));
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v20 = &v29;
  else
    v20 = (std::string *)v29.__r_.__value_.__r.__words[0];
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v21 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  else
    v21 = v29.__r_.__value_.__l.__size_;
  std::string::append(v19, (const std::string::value_type *)v20, v21);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v29.__r_.__value_.__l.__data_);
  if ((char)v23 < 0)
    operator delete(v22[0]);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
}

void sub_18884940C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (a40 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  if (a20 < 0)
    operator delete(a15);
  if (*(char *)(v40 + 23) < 0)
    operator delete(*(void **)v40);
  _Unwind_Resume(exception_object);
}

void gloria::BloomShardHeader::ToString(gloria::BloomShardHeader *this@<X0>, std::string *a2@<X8>)
{
  std::string *v3;
  std::string *v4;
  std::string *v5;
  std::string *v6;
  std::string::size_type size;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string::size_type v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string::size_type v15;
  std::string *v16;
  std::string *v17;
  std::string *v18;
  std::string::size_type v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  std::string *v23;
  std::string *v24;
  std::string::size_type v25;
  std::string v26;
  std::string v27;
  std::string v28;
  std::string v29;
  std::string v30;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  v3 = std::string::append(a2, "order: ");
  v4 = std::string::append(v3, gloria::ByteOrderDescriptor[*((unsigned int *)this + 2)]);
  v5 = std::string::append(v4, " bucket_size_in_bits: ");
  std::to_string(&v30, *((int *)this + 3));
  if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = &v30;
  else
    v6 = (std::string *)v30.__r_.__value_.__r.__words[0];
  if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v30.__r_.__value_.__r.__words[2]);
  else
    size = v30.__r_.__value_.__l.__size_;
  v8 = std::string::append(v5, (const std::string::value_type *)v6, size);
  v9 = std::string::append(v8, " fpp: ");
  std::to_string(&v29, (uint64_t)*((double *)this + 2));
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = &v29;
  else
    v10 = (std::string *)v29.__r_.__value_.__r.__words[0];
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v11 = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  else
    v11 = v29.__r_.__value_.__l.__size_;
  v12 = std::string::append(v9, (const std::string::value_type *)v10, v11);
  v13 = std::string::append(v12, " number_of_items: ");
  std::to_string(&v28, *((int *)this + 6));
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = &v28;
  else
    v14 = (std::string *)v28.__r_.__value_.__r.__words[0];
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v15 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  else
    v15 = v28.__r_.__value_.__l.__size_;
  v16 = std::string::append(v13, (const std::string::value_type *)v14, v15);
  v17 = std::string::append(v16, " bloom_filter_type: ");
  std::to_string(&v27, *((int *)this + 7));
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = &v27;
  else
    v18 = (std::string *)v27.__r_.__value_.__r.__words[0];
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v19 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
  else
    v19 = v27.__r_.__value_.__l.__size_;
  v20 = std::string::append(v17, (const std::string::value_type *)v18, v19);
  v21 = std::string::append(v20, " multi_hash_strategy: ");
  v22 = std::string::append(v21, gloria::MultiHashStrategyDescriptor[*((unsigned int *)this + 8)]);
  v23 = std::string::append(v22, " shard_id: ");
  std::to_string(&v26, *((int *)this + 9));
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v24 = &v26;
  else
    v24 = (std::string *)v26.__r_.__value_.__r.__words[0];
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v25 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  else
    v25 = v26.__r_.__value_.__l.__size_;
  std::string::append(v23, (const std::string::value_type *)v24, v25);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v26.__r_.__value_.__l.__data_);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v27.__r_.__value_.__l.__data_);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__r_.__value_.__l.__data_);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v29.__r_.__value_.__l.__data_);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
}

void sub_1888496A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  uint64_t v34;

  if (a15 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a27 < 0)
    operator delete(a22);
  if (a33 < 0)
    operator delete(a28);
  if (*(char *)(v34 - 33) < 0)
    operator delete(*(void **)(v34 - 56));
  if (*(char *)(v33 + 23) < 0)
    operator delete(*(void **)v33);
  _Unwind_Resume(exception_object);
}

BOOL gloria::BloomShardHeader::IsValid(gloria::BloomShardHeader *this)
{
  _BOOL8 v1;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  int v6;
  const void **v7;
  void **v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v15;
  void *__p[2];
  unsigned __int8 v18;

  if (!*((_BYTE *)this + 72))
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "245f8f00bb79a7c8a18e462e922352a8b5f5cb19");
    v3 = *((unsigned __int8 *)this + 71);
    if ((v3 & 0x80u) == 0)
      v4 = (void *)*((unsigned __int8 *)this + 71);
    else
      v4 = (void *)*((_QWORD *)this + 7);
    v5 = v18;
    v6 = (char)v18;
    if ((v18 & 0x80u) != 0)
      v5 = (unint64_t)__p[1];
    if (v4 == (void *)v5)
    {
      v7 = (const void **)((char *)this + 48);
      if ((v18 & 0x80u) == 0)
        v8 = __p;
      else
        v8 = (void **)__p[0];
      if ((v3 & 0x80) != 0)
      {
        v1 = memcmp(*v7, v8, *((_QWORD *)this + 7)) == 0;
      }
      else
      {
        if (!*((_BYTE *)this + 71))
        {
          v1 = 1;
          if (((char)v18 & 0x80000000) == 0)
            return v1;
          goto LABEL_25;
        }
        v9 = v3 - 1;
        do
        {
          v11 = *(unsigned __int8 *)v7;
          v7 = (const void **)((char *)v7 + 1);
          v10 = v11;
          v13 = *(unsigned __int8 *)v8;
          v8 = (void **)((char *)v8 + 1);
          v12 = v13;
          v15 = v9-- != 0;
          v1 = v10 == v12;
        }
        while (v10 == v12 && v15);
      }
      if ((v6 & 0x80000000) == 0)
        return v1;
    }
    else
    {
      v1 = 0;
      if (((char)v18 & 0x80000000) == 0)
        return v1;
    }
LABEL_25:
    operator delete(__p[0]);
    return v1;
  }
  return 1;
}

unint64_t gloria::BloomShardHeader::Size(gloria::BloomShardHeader *this)
{
  return (unint64_t)(*((_BYTE *)this + 72) == 0) << 9;
}

void gloria::BloomShardHeader::~BloomShardHeader(void **this)
{
  *this = &off_1E1BF7180;
  if (*((char *)this + 71) < 0)
    operator delete(this[6]);
}

{
  *this = &off_1E1BF7180;
  if (*((char *)this + 71) < 0)
    operator delete(this[6]);
  JUMPOUT(0x18D76437CLL);
}

void (__cdecl ***std::fstream::~fstream(void (__cdecl ***a1)(std::fstream *__hidden this)))(std::fstream *__hidden this)
{
  _QWORD *v2;

  v2 = a1 + 54;
  MEMORY[0x18D764154](a1 + 3);
  std::iostream::~basic_iostream();
  MEMORY[0x18D764310](v2);
  return a1;
}

void std::fstream::~fstream(void (__cdecl ***a1)(std::fstream *__hidden this))
{
  _QWORD *v1;

  v1 = a1 + 54;
  MEMORY[0x18D764154](a1 + 3);
  std::iostream::~basic_iostream();
  MEMORY[0x18D764310](v1);
  JUMPOUT(0x18D76437CLL);
}

void `non-virtual thunk to'std::fstream::~fstream(void (__cdecl ***a1)(std::fstream *__hidden this))
{
  MEMORY[0x18D764154](a1 + 1);
  std::iostream::~basic_iostream();
  JUMPOUT(0x18D764310);
}

{
  _QWORD *v1;

  v1 = a1 + 52;
  MEMORY[0x18D764154](a1 + 1);
  std::iostream::~basic_iostream();
  MEMORY[0x18D764310](v1);
  JUMPOUT(0x18D76437CLL);
}

void `virtual thunk to'std::fstream::~fstream(_QWORD *a1)
{
  void (__cdecl ***v1)(std::fstream *__hidden);

  v1 = (void (__cdecl ***)(std::fstream *__hidden))((char *)a1 + *(_QWORD *)(*a1 - 24));
  MEMORY[0x18D764154](v1 + 3);
  std::iostream::~basic_iostream();
  JUMPOUT(0x18D764310);
}

{
  void (__cdecl ***v1)(std::fstream *__hidden);

  v1 = (void (__cdecl ***)(std::fstream *__hidden))((char *)a1 + *(_QWORD *)(*a1 - 24));
  MEMORY[0x18D764154](v1 + 3);
  std::iostream::~basic_iostream();
  MEMORY[0x18D764310](v1 + 54);
  JUMPOUT(0x18D76437CLL);
}

uint64_t **std::unique_ptr<gloria::Bucketizer>::reset[abi:ne180100](uint64_t **result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;

  v2 = *result;
  *result = a2;
  if (v2)
  {
    v3 = *v2;
    *v2 = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 24))(v3);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

uint64_t gloria::GloriaDB::Count(gloria::GloriaDB *this)
{
  uint64_t v2;
  void *__p;
  void *v5;
  uint64_t v6;

  __p = 0;
  v5 = 0;
  v6 = 0;
  gloria::ShardPool::AllShards((_QWORD *)this + 17, (char **)&__p);
  v2 = gloria::ShardManager::DoCount((uint64_t)this + 72, (uint64_t **)&__p);
  if (__p)
  {
    v5 = __p;
    operator delete(__p);
  }
  return v2;
}

void sub_188849C40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void gloria::GloriaDB::ListKeys(uint64_t a1@<X0>, std::vector<std::string> *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int *v8;
  const gloria::Shard **v9;
  _BYTE v10[8];
  void *__p;
  char v12;
  void (****v13)(uint64_t *__return_ptr, _QWORD, std::vector<std::string>::size_type *, uint64_t *, char *);

  v8 = (unsigned int *)(a1 + 136);
  v9 = (const gloria::Shard **)gloria::RandomUtils::Uniform<int>((*(_DWORD *)(a1 + 152) - 1));
  v13 = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)v10, v8, v9, &v13);
  if (v12 < 0)
    operator delete(__p);
  gloria::ShardManager::DoListKeys(a1 + 72, v13, a2, a3, a4);
}

uint64_t gloria::RandomUtils::Uniform<int>(uint64_t result)
{
  int v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t i;
  int v13;

  if ((_DWORD)result)
  {
    v1 = result;
    v2 = atomic_load((unsigned __int8 *)&qword_1ECDBAD00);
    if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1ECDBAD00))
    {
      std::random_device::random_device[abi:ne180100]((std::random_device *)&_MergedGlobals_170);
      __cxa_atexit((void (*)(void *))MEMORY[0x1E0DE4778], &_MergedGlobals_170, &dword_1885A9000);
      __cxa_guard_release(&qword_1ECDBAD00);
    }
    v3 = atomic_load((unsigned __int8 *)&qword_1ECDBAD08);
    if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_1ECDBAD08))
    {
      v10 = MEMORY[0x18D764250](&_MergedGlobals_170);
      dword_1ECDBAD10 = v10;
      v11 = 1;
      for (i = 7; i != 630; ++i)
      {
        v13 = 1812433253 * (v10 ^ (v10 >> 30));
        v10 = v13 + v11;
        *((_DWORD *)&_MergedGlobals_170 + i) = i + v13 - 6;
        ++v11;
      }
      qword_1ECDBB6D0 = 0;
      __cxa_guard_release(&qword_1ECDBAD08);
    }
    v4 = v1 + 1;
    if (v1 == -1)
    {
      return std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()((std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> *)&dword_1ECDBAD10);
    }
    else
    {
      v5 = __clz(v4);
      v6 = 31;
      if (((v4 << v5) & 0x7FFFFFFF) != 0)
        v6 = 32;
      v7 = v6 - v5;
      v8 = v7 >> 5;
      if ((v7 & 0x1F) != 0)
        ++v8;
      if (v8 <= v7)
        v9 = 0xFFFFFFFF >> -(v7 / v8);
      else
        v9 = 0;
      do
        result = std::mersenne_twister_engine<unsigned int,32ul,624ul,397ul,31ul,2567483615u,11ul,4294967295u,7ul,2636928640u,15ul,4022730752u,18ul,1812433253u>::operator()((std::mersenne_twister_engine<unsigned int, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253> *)&dword_1ECDBAD10) & v9;
      while (result >= v4);
    }
  }
  return result;
}

void sub_188849E6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_1ECDBAD08);
  _Unwind_Resume(a1);
}

void gloria::GloriaDB::ListValues(uint64_t a1@<X0>, std::vector<std::string> *a2@<X1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  std::vector<std::string>::size_type v7;
  const gloria::Shard **v8;
  char *v9;
  unint64_t v10;
  __int128 v11;
  std::string *v12;
  void *v13[3];
  char v14;
  void *v15;
  const char *v16;
  __int128 v17;
  __int128 v18;
  std::string *v19;
  __int16 v20;
  __int128 v21;
  uint64_t v22;
  char v23[8];
  void *__p;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v27 = 0;
  v28 = 0;
  v29 = 0;
  v7 = a3;
  std::vector<gloria::Slice>::resize((uint64_t)&v27, a3);
  std::vector<std::string>::resize(a2, v7);
  v26 = 0;
  v8 = (const gloria::Shard **)gloria::RandomUtils::Uniform<int>((*(_DWORD *)(a1 + 152) - 1));
  gloria::ShardPool::Get((gloria::ShardPool *)v23, (unsigned int *)(a1 + 136), v8, &v26);
  if (v25 < 0)
    operator delete(__p);
  gloria::ShardManager::DoReadValues(a1 + 72, v26, &v27, v7, (uint64_t)a4);
  v9 = v27;
  if (!*a4 && v27 != v28)
  {
    v10 = 0;
    do
    {
      v11 = *(_OWORD *)&v9[v10];
      v22 = *(_QWORD *)&v9[v10 + 16];
      v21 = v11;
      v12 = &a2->__begin_[v10 / 0x18];
      LOBYTE(v15) = 1;
      HIDWORD(v15) = 0;
      v17 = 0u;
      v18 = 0u;
      v16 = "";
      v19 = v12;
      v20 = 0;
      (***(void (****)(void **__return_ptr, _QWORD, __int128 *, void **))(a1 + 192))(v13, *(_QWORD *)(a1 + 192), &v21, &v15);
      if (v14 < 0)
        operator delete(v13[1]);
      MEMORY[0x18D7640B8](v12, v16, v17);
      gloria::ManagedSlice::~ManagedSlice(&v15);
      v10 += 24;
    }
    while (&v9[v10] != v28);
    v9 = v27;
  }
  if (v9)
  {
    v28 = v9;
    operator delete(v9);
  }
}

void sub_18884A020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v13;
  void *v15;

  v15 = *(void **)(v13 - 104);
  if (v15)
  {
    *(_QWORD *)(v13 - 96) = v15;
    operator delete(v15);
  }
  _Unwind_Resume(exception_object);
}

BOOL gloria::GloriaDB::Contains(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  int v9;
  void *v10;
  char v11;
  uint64_t v12;
  _BYTE v13[8];
  void *__p;
  char v15;
  uint64_t v16;
  void *__dst[2];
  char v18;

  std::string::basic_string[abi:ne180100](__dst, *(void **)(a2 + 8), *(_QWORD *)(a2 + 16));
  v4 = (****(uint64_t (*****)(_QWORD, void **))(a1 + 184))(**(_QWORD **)(a1 + 184), __dst);
  v5 = *(unsigned int *)(a1 + 152);
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = -v4;
  v16 = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)v13, (unsigned int *)(a1 + 136), (const gloria::Shard **)(v6 % v5), &v16);
  if (v15 < 0)
    operator delete(__p);
  v12 = 0;
  gloria::ShardManager::DoContains(a1 + 72, v16, a2, &v12, (uint64_t)&v9);
  v7 = v9;
  if (v11 < 0)
    operator delete(v10);
  if (v18 < 0)
    operator delete(__dst[0]);
  return v7 == 0;
}

void sub_18884A134(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 17) < 0)
    operator delete(*(void **)(v1 - 40));
  _Unwind_Resume(exception_object);
}

void gloria::GloriaDB::Get(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  void *v7[3];
  char v8;
  void *v9;
  const char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int16 v14;
  _BYTE v15[4];
  int v16;
  const char *v17;
  uint64_t v18;

  v15[0] = 1;
  v16 = 0;
  v17 = "";
  v18 = 0;
  gloria::GloriaDB::Get(a4, a1, a2, (uint64_t)v15);
  if (!LODWORD(a4->__r_.__value_.__l.__data_))
  {
    LOBYTE(v9) = 1;
    HIDWORD(v9) = 0;
    v10 = "";
    v11 = 0u;
    v12 = 0u;
    v13 = a3;
    v14 = 0;
    (***(void (****)(void **__return_ptr, _QWORD, _BYTE *, void **))(a1 + 192))(v7, *(_QWORD *)(a1 + 192), v15, &v9);
    gloria::Status::operator=(a4, (uint64_t)v7);
    if (v8 < 0)
      operator delete(v7[1]);
    if (!LODWORD(a4->__r_.__value_.__l.__data_))
      MEMORY[0x18D7640B8](v13, v10, v11);
    gloria::ManagedSlice::~ManagedSlice(&v9);
  }
}

void sub_18884A23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  uint64_t v17;

  gloria::ManagedSlice::~ManagedSlice(&a17);
  if (*(char *)(v17 + 31) < 0)
    operator delete(*(void **)(v17 + 8));
  _Unwind_Resume(a1);
}

void gloria::GloriaDB::MultiGet(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, std::string *a4@<X8>)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  uint64_t v19;
  uint64_t *i;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  int64x2_t v40;
  unint64_t v41;
  std::pair<std::string, std::string> *v42;
  int v43;
  void *__dst[2];
  uint64_t v45;
  std::string v46;
  __int128 __p;
  uint64_t v48;
  void *v49[3];
  char v50;
  _BYTE v51[48];
  _BYTE *v52;
  __int16 v53;
  char v54[4];
  int v55;
  uint64_t *v56;
  uint64_t v57;
  std::__split_buffer<std::pair<std::string, std::string>> v58;

  v51[0] = 1;
  *(_DWORD *)&v51[4] = 0;
  *(_QWORD *)&v51[8] = "";
  *(_QWORD *)&v51[16] = 0;
  gloria::Status::Status((uint64_t)a4, 0, (uint64_t)v51);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *a3;
  if (0xAAAAAAAAAAAAAAABLL * ((a3[2] - *a3) >> 4) < v8)
  {
    if (v8 > 0x555555555555555)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v10 = a3[1];
    *(_QWORD *)&v51[32] = a3 + 2;
    v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(v8);
    v13 = *a3;
    v14 = a3[1];
    if (v14 == *a3)
    {
      v18 = vdupq_n_s64(v14);
      v15 = &v11[v10 - v9];
    }
    else
    {
      v15 = &v11[v10 - v9];
      do
      {
        v16 = *(_OWORD *)(v14 - 48);
        *((_QWORD *)v15 - 4) = *(_QWORD *)(v14 - 32);
        *((_OWORD *)v15 - 3) = v16;
        *(_QWORD *)(v14 - 40) = 0;
        *(_QWORD *)(v14 - 32) = 0;
        *(_QWORD *)(v14 - 48) = 0;
        v17 = *(_OWORD *)(v14 - 24);
        *((_QWORD *)v15 - 1) = *(_QWORD *)(v14 - 8);
        *(_OWORD *)(v15 - 24) = v17;
        v15 -= 48;
        *(_QWORD *)(v14 - 16) = 0;
        *(_QWORD *)(v14 - 8) = 0;
        *(_QWORD *)(v14 - 24) = 0;
        v14 -= 48;
      }
      while (v14 != v13);
      v18 = *(int64x2_t *)a3;
    }
    *a3 = (uint64_t)v15;
    a3[1] = (uint64_t)&v11[v10 - v9];
    *(int64x2_t *)&v51[8] = v18;
    v19 = a3[2];
    a3[2] = (uint64_t)&v11[48 * v12];
    *(_QWORD *)&v51[24] = v19;
    *(_QWORD *)v51 = v18.i64[0];
    std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer((std::__split_buffer<std::pair<std::string, std::string>> *)v51);
  }
  for (i = *(uint64_t **)(a2 + 16); i; i = (uint64_t *)*i)
  {
    if (*((char *)i + 39) < 0)
    {
      v22 = (uint64_t *)i[2];
      v21 = i[3];
    }
    else
    {
      v21 = *((unsigned __int8 *)i + 39);
      v22 = i + 2;
    }
    v54[0] = 1;
    v55 = 0;
    v56 = v22;
    v57 = v21;
    v51[0] = 1;
    *(_DWORD *)&v51[4] = 0;
    memset(&v51[16], 0, 32);
    *(_QWORD *)&v51[8] = "";
    v52 = &v51[24];
    v53 = 0;
    (*(void (**)(void **__return_ptr, uint64_t, char *, _BYTE *))(*(_QWORD *)a1 + 32))(v49, a1, v54, v51);
    if (LODWORD(v49[0]))
    {
      gloria::Status::operator=(a4, (uint64_t)v49);
    }
    else
    {
      std::string::basic_string[abi:ne180100](__dst, *(void **)&v51[8], *(size_t *)&v51[16]);
      if (*((char *)i + 39) < 0)
        std::string::__init_copy_ctor_external(&v46, (const std::string::value_type *)i[2], i[3]);
      else
        v46 = *(std::string *)(i + 2);
      __p = *(_OWORD *)__dst;
      v48 = v45;
      __dst[1] = 0;
      v45 = 0;
      __dst[0] = 0;
      v23 = a3[1];
      v24 = a3[2];
      if (v23 >= v24)
      {
        v27 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v23 - *a3) >> 4);
        v28 = v27 + 1;
        if (v27 + 1 > 0x555555555555555)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - *a3) >> 4);
        if (2 * v29 > v28)
          v28 = 2 * v29;
        if (v29 >= 0x2AAAAAAAAAAAAAALL)
          v30 = 0x555555555555555;
        else
          v30 = v28;
        v58.__end_cap_.__value_ = (std::allocator<std::pair<std::string, std::string>> *)(a3 + 2);
        if (v30)
          v30 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(v30);
        else
          v31 = 0;
        v32 = v30 + 48 * v27;
        v33 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
        *(_QWORD *)(v32 + 16) = *((_QWORD *)&v46.__r_.__value_.__l + 2);
        *(_OWORD *)v32 = v33;
        memset(&v46, 0, sizeof(v46));
        v34 = __p;
        *(_QWORD *)(v32 + 40) = v48;
        *(_OWORD *)(v32 + 24) = v34;
        v48 = 0;
        __p = 0uLL;
        v35 = *a3;
        v36 = a3[1];
        if (v36 == *a3)
        {
          v40 = vdupq_n_s64(v36);
          v37 = v30 + 48 * v27;
        }
        else
        {
          v37 = v30 + 48 * v27;
          do
          {
            v38 = *(_OWORD *)(v36 - 48);
            *(_QWORD *)(v37 - 32) = *(_QWORD *)(v36 - 32);
            *(_OWORD *)(v37 - 48) = v38;
            *(_QWORD *)(v36 - 40) = 0;
            *(_QWORD *)(v36 - 32) = 0;
            *(_QWORD *)(v36 - 48) = 0;
            v39 = *(_OWORD *)(v36 - 24);
            *(_QWORD *)(v37 - 8) = *(_QWORD *)(v36 - 8);
            *(_OWORD *)(v37 - 24) = v39;
            v37 -= 48;
            *(_QWORD *)(v36 - 16) = 0;
            *(_QWORD *)(v36 - 8) = 0;
            *(_QWORD *)(v36 - 24) = 0;
            v36 -= 48;
          }
          while (v36 != v35);
          v40 = *(int64x2_t *)a3;
        }
        v41 = v32 + 48;
        *a3 = v37;
        a3[1] = v32 + 48;
        *(int64x2_t *)&v58.__begin_ = v40;
        v42 = (std::pair<std::string, std::string> *)a3[2];
        a3[2] = v30 + 48 * v31;
        v58.__end_cap_.__value_ = v42;
        v58.__first_ = (std::__split_buffer<std::pair<std::string, std::string>>::pointer)v40.i64[0];
        std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer(&v58);
        v43 = SHIBYTE(v48);
        a3[1] = v41;
        if (v43 < 0)
          operator delete((void *)__p);
      }
      else
      {
        v25 = *(_OWORD *)&v46.__r_.__value_.__l.__data_;
        *(_QWORD *)(v23 + 16) = *((_QWORD *)&v46.__r_.__value_.__l + 2);
        *(_OWORD *)v23 = v25;
        memset(&v46, 0, sizeof(v46));
        v26 = v48;
        *(_OWORD *)(v23 + 24) = __p;
        *(_QWORD *)(v23 + 40) = v26;
        v48 = 0;
        __p = 0uLL;
        a3[1] = v23 + 48;
      }
      if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v46.__r_.__value_.__l.__data_);
      if (SHIBYTE(v45) < 0)
        operator delete(__dst[0]);
    }
    if (v50 < 0)
      operator delete(v49[1]);
    gloria::ManagedSlice::~ManagedSlice((void **)v51);
  }
}

void sub_18884A69C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  uint64_t v30;

  if (*(char *)(v30 + 31) < 0)
    operator delete(*(void **)(v30 + 8));
  _Unwind_Resume(exception_object);
}

void gloria::GloriaDB::Random(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int *v8;
  const gloria::Shard **v9;
  int v10;
  void *v11;
  char v12;
  _BYTE v13[4];
  int v14;
  const char *v15;
  uint64_t v16;
  _BYTE v17[8];
  void *__p;
  char v19;
  uint64_t v20;

  v8 = a1 + 34;
  v9 = (const gloria::Shard **)gloria::RandomUtils::Uniform<int>(a1[38] - 1);
  v20 = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)v17, v8, v9, &v20);
  if (v19 < 0)
    operator delete(__p);
  v13[0] = 1;
  v14 = 0;
  v15 = "";
  v16 = 0;
  gloria::ShardManager::DoRandomKey((uint64_t)(a1 + 18), v20, (uint64_t)v13, (uint64_t)&v10);
  if (v10)
  {
    gloria::Status::Status(a4, (uint64_t)&v10);
  }
  else
  {
    MEMORY[0x18D7640B8](a2, v15, v16);
    (*(void (**)(unsigned int *, _BYTE *, uint64_t))(*(_QWORD *)a1 + 24))(a1, v13, a3);
  }
  if (v12 < 0)
    operator delete(v11);
}

void sub_18884A804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t gloria::GloriaDB::RecordIterator::First(gloria::GloriaDB::RecordIterator *this)
{
  uint64_t result;
  uint64_t v3;
  void *__p;
  char v5;

  *((_QWORD *)this + 5) = 0;
  gloria::ShardPool::Get((gloria::ShardPool *)&v3, (unsigned int *)(*((_QWORD *)this + 2) + 136), (const gloria::Shard **)*((unsigned int *)this + 6), (_QWORD *)this + 4);
  if (v5 < 0)
    operator delete(__p);
  result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*((_QWORD *)this + 2) + 40) + 16))(*(_QWORD *)(*((_QWORD *)this + 2) + 40));
  *((_DWORD *)this + 2) = *(_DWORD *)(*((_QWORD *)this + 2) + 56) + result;
  return result;
}

uint64_t gloria::GloriaDB::RecordIterator::Last(uint64_t this)
{
  *(_QWORD *)(this + 40) = (*(_QWORD *)(**(_QWORD **)(this + 32) + 24) - *(_QWORD *)(**(_QWORD **)(this + 32) + 16))
                         / (unint64_t)*(unsigned int *)(this + 8)
                         - 1;
  return this;
}

void gloria::GloriaDB::RecordIterator::Next(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *__p;
  char v6;

  gloria::GloriaDB::RecordIterator::RetrieveRecord((uint64_t)&v4, a1, a2, a3);
  if (v6 < 0)
    operator delete(__p);
  ++*(_QWORD *)(a1 + 40);
}

void gloria::GloriaDB::RecordIterator::RetrieveRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (***v8)(void **__return_ptr, _QWORD, uint64_t *, uint64_t *, char *);
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  int v12;
  const char *v13;
  uint64_t v14;
  void *v15[3];
  char v16;
  char v17[4];
  int v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17[0] = 1;
  v18 = 0;
  v19 = "";
  v20 = 0;
  v8 = **(void (*****)(void **__return_ptr, _QWORD, uint64_t *, uint64_t *, char *))(a2 + 32);
  v9 = *(unsigned int *)(a2 + 8);
  v22 = *(_QWORD *)(a2 + 40) * v9;
  v21 = v9;
  (**v8)(v15, v8, &v22, &v21, v17);
  if (v16 < 0)
    operator delete(v15[1]);
  v10 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a2 + 16) + 40) + 16))(*(_QWORD *)(*(_QWORD *)(a2 + 16) + 40));
  v11 = v19;
  v12 = v18;
  v13 = &v19[v18];
  *(_BYTE *)a3 = 1;
  *(_DWORD *)(a3 + 4) = 0;
  *(_QWORD *)(a3 + 8) = v13;
  *(_QWORD *)(a3 + 16) = v10;
  v18 = v12 + v10;
  v14 = *(_QWORD *)&v11[v12 + (int)v10];
  v18 = v12 + v10 + 8;
  gloria::RecordReader::ReadPayloadAt(*(void (****)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(a2 + 32) + 8), v14, a4, a1);
}

BOOL gloria::GloriaDB::RecordIterator::HasNext(gloria::GloriaDB::RecordIterator *this)
{
  return *((_QWORD *)this + 5) < (*(_QWORD *)(**((_QWORD **)this + 4) + 24)
                                - *(_QWORD *)(**((_QWORD **)this + 4) + 16))
                               / (unint64_t)*((unsigned int *)this + 2);
}

void gloria::GloriaDB::RecordIterator::Previous(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *__p;
  char v7;

  gloria::GloriaDB::RecordIterator::RetrieveRecord((uint64_t)&v5, a1, a2, a3);
  if (v7 < 0)
    operator delete(__p);
  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
    *(_QWORD *)(a1 + 40) = v4 - 1;
}

void gloria::GloriaDB::Close(gloria::GloriaDB *this@<X0>, std::string *a2@<X8>)
{
  gloria::ShardPool::Close((gloria::GloriaDB *)((char *)this + 136), a2);
}

uint64_t gloria::GloriaDB::NewRecordIterator@<X0>(gloria::GloriaDB *this@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E1BF72A8;
  *(_QWORD *)(result + 16) = this;
  *(_DWORD *)(result + 24) = a2;
  *a3 = result;
  return result;
}

void gloria::GloriaDB::RecordIterator::~RecordIterator(gloria::GloriaDB::RecordIterator *this)
{
  JUMPOUT(0x18D76437CLL);
}

uint64_t *gloria::Bucketizer::Bucketizer(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  *a1 = 0;
  gloria::HashFnFactory::create(a2, &v7);
  v3 = v7;
  v7 = 0;
  v4 = *a1;
  *a1 = v3;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    v5 = v7;
    v7 = 0;
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  }
  return a1;
}

void sub_18884AB6C(_Unwind_Exception *exception_object)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  *v1 = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 24))(v3);
  _Unwind_Resume(exception_object);
}

uint64_t gloria::HashFnFactory::create@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  int v3;
  unsigned int *v4;
  std::logic_error *exception;
  std::string *v6;
  __int128 v7;
  std::string v8;
  std::string v9;

  *a2 = 0;
  v3 = *(_DWORD *)result;
  if ((*(_DWORD *)result - 1) >= 2)
  {
    if (v3 == 3)
    {
      result = operator new();
      *(_QWORD *)result = off_1E1BF7360;
      *(_QWORD *)(result + 8) = -1756908916;
    }
    else
    {
      if (v3)
      {
        v4 = (unsigned int *)result;
        exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        std::to_string(&v8, *v4);
        v6 = std::string::insert(&v8, 0, "hasher type not recognized: ");
        v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
        v9.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v7;
        v6->__r_.__value_.__l.__size_ = 0;
        v6->__r_.__value_.__r.__words[2] = 0;
        v6->__r_.__value_.__r.__words[0] = 0;
        std::logic_error::logic_error(exception, &v9);
        exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5038] + 16);
        __cxa_throw(exception, (struct type_info *)off_1E1BEF980, MEMORY[0x1E0DE4360]);
      }
      result = operator new();
      *(_QWORD *)result = &off_1E1BF7278;
    }
    *a2 = result;
  }
  return result;
}

void sub_18884ACBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  _QWORD *v21;
  void *v22;
  int v23;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v23 & 1) == 0)
    {
LABEL_8:
      *v21 = 0;
      _Unwind_Resume(a1);
    }
  }
  else if (!v23)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<std::string,std::string>>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(48 * a1);
}

void std::__split_buffer<std::pair<std::string,std::string>>::~__split_buffer(std::__split_buffer<std::pair<std::string, std::string>> *this)
{
  std::__split_buffer<std::pair<std::string, std::string>>::pointer begin;
  std::__split_buffer<std::pair<std::string, std::string>>::pointer i;

  begin = this->__begin_;
  for (i = this->__end_; i != begin; i = this->__end_)
  {
    this->__end_ = i - 1;
    if (SHIBYTE(i[-1].second.__r_.__value_.__r.__words[2]) < 0)
      operator delete(i[-1].second.__r_.__value_.__l.__data_);
    if (SHIBYTE(i[-1].first.__r_.__value_.__r.__words[2]) < 0)
      operator delete(i[-1].first.__r_.__value_.__l.__data_);
  }
  if (this->__first_)
    operator delete(this->__first_);
}

uint64_t gloria::MemoryMappedFile::Load(gloria::MemoryMappedFile *this, uint64_t a2)
{
  gloria::MemoryMappedFile *v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _DWORD *v7;
  unint64_t v8;
  int v9;
  int v10;
  char v12[4];
  int v13;
  const char *v14;
  uint64_t v15;

  v2 = this;
  if (*(_QWORD *)a2)
  {
    v4 = sysconf(29);
    v5 = *(_QWORD *)(a2 + 16);
    if (v5 >= 1)
    {
      v6 = 0;
      v7 = *(_DWORD **)a2;
      v8 = *(_QWORD *)a2 + v5;
      v9 = gloria::MemoryMappedFile::dummy_;
      do
      {
        v9 |= v6 | *v7;
        gloria::MemoryMappedFile::dummy_ = v9;
        ++v6;
        v7 = (_DWORD *)((char *)v7 + v4);
      }
      while ((unint64_t)v7 < v8);
    }
    v12[0] = 1;
    v13 = 0;
    v14 = "";
    v15 = 0;
    this = v2;
    v10 = 0;
  }
  else
  {
    v12[0] = 1;
    v13 = 0;
    v14 = "address_ of mmaped file is not initialized";
    v15 = 42;
    v10 = 6;
  }
  return gloria::Status::Status((uint64_t)this, v10, (uint64_t)v12);
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  if (*((_QWORD *)this + 2))
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition((uint64_t)this);
}

uint64_t google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;

  if (*(_DWORD *)(this + 28) + *(_DWORD *)(this + 44) + *(_DWORD *)(this + 8) - *(_DWORD *)this >= 1)
  {
    v1 = this;
    this = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(this + 16) + 24))(*(_QWORD *)(this + 16));
    v2 = *(_DWORD *)(v1 + 24) - *(_DWORD *)(v1 + 44) + *(_QWORD *)v1 - *(_DWORD *)(v1 + 8);
    *(_QWORD *)(v1 + 8) = *(_QWORD *)v1;
    *(_DWORD *)(v1 + 44) = 0;
    *(_QWORD *)(v1 + 24) = v2;
  }
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::SkipFallback(google::protobuf::io::CodedInputStream *this, int a2, int a3)
{
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  if (*((int *)this + 11) < 1)
  {
    v5 = (a2 - a3);
    *(_QWORD *)this = 0;
    *((_QWORD *)this + 1) = 0;
    v6 = *((_DWORD *)this + 12);
    if (v6 >= *((_DWORD *)this + 10))
      v6 = *((_DWORD *)this + 10);
    v7 = v6 - *((_DWORD *)this + 6);
    if (v7 >= (int)v5)
    {
      if (((*(uint64_t (**)(_QWORD, uint64_t))(**((_QWORD **)this + 2) + 32))(*((_QWORD *)this + 2), v5) & 1) != 0)
      {
        *((_DWORD *)this + 6) += v5;
        return 1;
      }
      else
      {
        v8 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 2) + 40))(*((_QWORD *)this + 2));
        result = 0;
        *((_DWORD *)this + 6) = v8;
      }
    }
    else
    {
      if (v7 >= 1)
      {
        *((_DWORD *)this + 6) = v6;
        (*(void (**)(_QWORD))(**((_QWORD **)this + 2) + 32))(*((_QWORD *)this + 2));
      }
      return 0;
    }
  }
  else
  {
    result = 0;
    *(_QWORD *)this += a3;
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;
  _QWORD v20[2];
  int v21;
  std::string __p;
  std::string::value_type __str[8];
  const char *v24;
  int v25;
  std::string v26[4];
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v2 = *((_DWORD *)this + 11);
  if (v2 > 0 || *((int *)this + 7) > 0 || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
  {
    v3 = *((_DWORD *)this + 6) - v2;
    v4 = *((_DWORD *)this + 12);
    if (v3 >= v4 && v4 != *((_DWORD *)this + 10))
    {
      LODWORD(v20[0]) = 2;
      v20[1] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/coded_stream.cc";
      v21 = 193;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "A protocol message was rejected because it was too big (more than ");
      snprintf(__str, 0x80uLL, "%d", *((_DWORD *)this + 12));
      v27 = 0;
      std::string::append(&__p, __str);
      std::string::append(&__p, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in third_party/protobuf/src/google/protobuf/io/coded_stream.h.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  else
  {
    v20[0] = 0;
    v19 = 0;
    v7 = *((_QWORD *)this + 2);
    do
    {
      v5 = (*(uint64_t (**)(uint64_t, _QWORD *, int *))(*(_QWORD *)v7 + 16))(v7, v20, &v19);
      if (!(_DWORD)v5)
      {
        *(_QWORD *)this = 0;
        *((_QWORD *)this + 1) = 0;
        return v5;
      }
      v8 = v19;
    }
    while (!v19);
    v9 = v20[0] + v19;
    *(_QWORD *)this = v20[0];
    *((_QWORD *)this + 1) = v9;
    if (v8 < 0)
    {
      *(_DWORD *)__str = 3;
      v24 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/coded_stream.cc";
      v25 = 638;
      memset(v26, 0, 24);
      std::string::append(v26, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
      if (SHIBYTE(v26[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v26[0].__r_.__value_.__l.__data_);
      v8 = v19;
    }
    v10 = *((_DWORD *)this + 6);
    v11 = v10 - (v8 ^ 0x7FFFFFFF);
    if (v10 <= (v8 ^ 0x7FFFFFFF))
    {
      v13 = v10 + v8;
      v12 = *((_QWORD *)this + 1);
    }
    else
    {
      *((_DWORD *)this + 7) = v11;
      v12 = *((_QWORD *)this + 1) - v11;
      *((_QWORD *)this + 1) = v12;
      v13 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v13;
    v14 = *((_DWORD *)this + 10);
    v15 = v12 + *((int *)this + 11);
    *((_QWORD *)this + 1) = v15;
    v16 = *((_DWORD *)this + 12);
    if (v16 >= v14)
      v16 = v14;
    v17 = __OFSUB__(v13, v16);
    v18 = v13 - v16;
    if ((v18 < 0) ^ v17 | (v18 == 0))
      v18 = 0;
    else
      *((_QWORD *)this + 1) = v15 - v18;
    *((_DWORD *)this + 11) = v18;
  }
  return v5;
}

void sub_18884B270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  int v6;
  const void *v7;
  uint64_t v8;
  BOOL v9;

  while (1)
  {
    v6 = a3;
    v7 = *(const void **)this;
    v8 = *((_QWORD *)this + 1) - *(_QWORD *)this;
    v9 = __OFSUB__(a3, (_DWORD)v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0))
      break;
    memcpy(__dst, v7, (int)v8);
    __dst += (int)v8;
    *(_QWORD *)this += (int)v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v6 <= (int)v8;
  }
  memcpy(__dst, v7, v6);
  *(_QWORD *)this += v6;
  return v6 <= (int)v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __n)
{
  std::string *v3;
  size_t v6;

  if ((__n & 0x80000000) != 0)
    return 0;
  v3 = a2;
  if (*((_DWORD *)this + 2) - *(_DWORD *)this < (int)__n)
    return google::protobuf::io::CodedInputStream::ReadStringFallback(this, a2, __n);
  v6 = __n;
  std::string::resize(a2, __n, 0);
  if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
  memcpy(v3, *(const void **)this, v6);
  *(_QWORD *)this += v6;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3;
  int v6;
  int v7;
  BOOL v8;
  int v10;
  const std::string::value_type *v11;
  uint64_t v12;
  BOOL v13;

  v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((_BYTE *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = 0;
  }
  v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10))
    v6 = *((_DWORD *)this + 10);
  if (v6 != 0x7FFFFFFF)
  {
    v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this;
    v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1)
      std::string::reserve(a2, __requested_capacity);
  }
  while (1)
  {
    v10 = v3;
    v11 = *(const std::string::value_type **)this;
    v12 = *((_QWORD *)this + 1) - *(_QWORD *)this;
    v13 = __OFSUB__(v3, (_DWORD)v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0))
      break;
    if ((_DWORD)v12)
    {
      std::string::append(a2, v11, (int)v12);
      v11 = *(const std::string::value_type **)this;
    }
    *(_QWORD *)this = &v11[(int)v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v10 <= (int)v12;
  }
  std::string::append(a2, v11, v10);
  *(_QWORD *)this += v10;
  return v10 <= (int)v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(unsigned int **this, unsigned int *a2)
{
  unsigned int *v3;
  _BOOL8 result;
  char __dst[4];

  v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFFC) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    v3 = (unsigned int *)__dst;
    result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, __dst, 4);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(unint64_t **this, unint64_t *a2)
{
  unint64_t *v3;
  _BOOL8 result;
  char v5[8];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFF8) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    v3 = (unint64_t *)v5;
    result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, v5, 8);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

unint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this)
{
  unsigned __int8 *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;

  v2 = *(unsigned __int8 **)this;
  v3 = *((_QWORD *)this + 1);
  if ((int)(v3 - *(_QWORD *)this) <= 9 && (v3 <= (unint64_t)v2 || *(char *)(v3 - 1) < 0))
  {
    v7 = 0;
    v5 = 0;
    while (v7 != 10)
    {
      while (1)
      {
        v8 = *(char **)this;
        if (*(_QWORD *)this != *((_QWORD *)this + 1))
          break;
        if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
          return 0;
      }
      v9 = *v8;
      v5 |= (unint64_t)(*v8 & 0x7F) << (7 * v7);
      *(_QWORD *)this = v8 + 1;
      ++v7;
      if ((v9 & 0x80) == 0)
        return v5;
    }
    return 0;
  }
  v4 = v2[1];
  if ((char)v2[1] < 0)
  {
    if (((char)v2[2] & 0x80000000) == 0)
    {
      v5 = (v4 << 7) + ((unint64_t)v2[2] << 14) + *v2 - 16512;
      v6 = 3;
      goto LABEL_42;
    }
    if (((char)v2[3] & 0x80000000) == 0)
    {
      v10 = 0;
      v5 = (unint64_t)v2[3] << 21;
      v6 = 4;
      v11 = *(unsigned __int8 **)this;
      do
      {
        v12 = *v11++;
        v5 += (v12 - 128) << v10;
        v10 += 7;
      }
      while (v10 != 21);
      goto LABEL_42;
    }
    if (((char)v2[4] & 0x80000000) == 0)
    {
      v13 = 0;
      v5 = (unint64_t)v2[4] << 28;
      v6 = 5;
      v14 = *(unsigned __int8 **)this;
      do
      {
        v15 = *v14++;
        v5 += (v15 - 128) << v13;
        v13 += 7;
      }
      while (v13 != 28);
      goto LABEL_42;
    }
    if (((char)v2[5] & 0x80000000) == 0)
    {
      v16 = 0;
      v5 = (unint64_t)v2[5] << 35;
      v6 = 6;
      v17 = *(unsigned __int8 **)this;
      do
      {
        v18 = *v17++;
        v5 += (v18 - 128) << v16;
        v16 += 7;
      }
      while (v16 != 35);
      goto LABEL_42;
    }
    if (((char)v2[6] & 0x80000000) == 0)
    {
      v19 = 0;
      v5 = (unint64_t)v2[6] << 42;
      v6 = 7;
      v20 = *(unsigned __int8 **)this;
      do
      {
        v21 = *v20++;
        v5 += (v21 - 128) << v19;
        v19 += 7;
      }
      while (v19 != 42);
      goto LABEL_42;
    }
    if (((char)v2[7] & 0x80000000) == 0)
    {
      v22 = 0;
      v5 = (unint64_t)v2[7] << 49;
      v6 = 8;
      v23 = *(unsigned __int8 **)this;
      do
      {
        v24 = *v23++;
        v5 += (v24 - 128) << v22;
        v22 += 7;
      }
      while (v22 != 49);
      goto LABEL_42;
    }
    v25 = (char)v2[8];
    if ((v25 & 0x80000000) == 0)
    {
      v26 = 0;
      v5 = (unint64_t)v25 << 56;
      v6 = 9;
      v27 = *(unsigned __int8 **)this;
      do
      {
        v28 = *v27++;
        v5 += (v28 - 128) << v26;
        v26 += 7;
      }
      while (v26 != 56);
      goto LABEL_42;
    }
    v29 = (char)v2[9];
    if ((v29 & 0x80000000) == 0)
    {
      v30 = 0;
      v5 = (unint64_t)v29 << 63;
      v6 = 10;
      v31 = *(unsigned __int8 **)this;
      do
      {
        v32 = *v31++;
        v5 += (v32 - 128) << v30;
        v30 += 7;
      }
      while (v30 != 63);
      goto LABEL_42;
    }
    return 0;
  }
  v5 = *v2 + (v4 << 7) - 128;
  v6 = 2;
LABEL_42:
  *(_QWORD *)this = &v2[v6];
  return v5;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  unint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t Varint64Fallback;
  char v7;
  int v8;
  uint64_t v9;

  v3 = *(_QWORD *)this;
  v2 = *((_QWORD *)this + 1);
  if ((int)(v2 - *(_QWORD *)this) <= 9 && (v2 <= v3 || *(char *)(v2 - 1) < 0))
  {
    Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v7 & 1) == 0)
      return -1;
  }
  else
  {
    v4 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
    if (*(char *)(v3 + 1) < 0)
    {
      v4 = v4 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
      if (*(char *)(v3 + 2) < 0)
      {
        v4 = v4 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
        if (*(char *)(v3 + 3) < 0)
        {
          v8 = *(char *)(v3 + 4);
          v4 = v4 + (v8 << 28) - 0x10000000;
          if (v8 < 0)
          {
            v9 = 0;
            while (*(char *)(v3 + v9 + 5) < 0)
            {
              ++v9;
              Varint64Fallback = -1;
              if ((_DWORD)v9 == 5)
                return Varint64Fallback;
            }
            v5 = v3 + v9 + 6;
          }
          else
          {
            v5 = v3 + 5;
          }
        }
        else
        {
          v5 = v3 + 4;
        }
      }
      else
      {
        v5 = v3 + 3;
      }
    }
    else
    {
      v5 = v3 + 2;
    }
    *(_QWORD *)this = v5;
    return v4;
  }
  return Varint64Fallback;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  char *v2;
  unint64_t v3;
  unint64_t result;
  char v5;
  int v6;
  BOOL v7;

  v2 = *(char **)this;
  v3 = *((_QWORD *)this + 1);
  if (*(_QWORD *)this != v3)
  {
LABEL_4:
    if ((unint64_t)v2 >= v3 || *v2 < 0)
    {
      result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
      if ((v5 & 1) == 0)
        return 0;
    }
    else
    {
      result = *v2;
      *(_QWORD *)this = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    v2 = *(char **)this;
    v3 = *((_QWORD *)this + 1);
    goto LABEL_4;
  }
  v6 = *((_DWORD *)this + 12);
  result = 0;
  v7 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v6 || *((_DWORD *)this + 10) == v6;
  *((_BYTE *)this + 36) = v7;
  return result;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  v3 = *(_QWORD *)this;
  v2 = *((_QWORD *)this + 1);
  v4 = v2 - *(_QWORD *)this;
  if (v4 > 9)
  {
LABEL_4:
    if ((_DWORD)a2)
    {
      v5 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
      if (*(char *)(v3 + 1) < 0)
      {
        v5 = v5 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
        if (*(char *)(v3 + 2) < 0)
        {
          v5 = v5 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
          if (*(char *)(v3 + 3) < 0)
          {
            v10 = *(char *)(v3 + 4);
            v5 = (v5 + (v10 << 28) - 0x10000000);
            if (v10 < 0)
            {
              v11 = 0;
              while (*(char *)(v3 + v11 + 5) < 0)
              {
                a2 = 0;
                if ((_DWORD)++v11 == 5)
                  return a2;
              }
              v6 = v3 + v11 + 6;
            }
            else
            {
              v6 = v3 + 5;
            }
          }
          else
          {
            v6 = v3 + 4;
          }
        }
        else
        {
          v6 = v3 + 3;
        }
      }
      else
      {
        v6 = v3 + 2;
      }
      *(_QWORD *)this = v6;
      return v5;
    }
    else
    {
      *(_QWORD *)this = v3 + 1;
    }
    return a2;
  }
  if (v4 >= 1)
  {
    if ((*(char *)(v2 - 1) & 0x80000000) == 0)
      goto LABEL_4;
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v4)
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  v8 = *((_DWORD *)this + 11);
  v9 = *((_DWORD *)this + 6);
  if (v8 <= 0 && v9 != *((_DWORD *)this + 10))
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  if (v9 - v8 >= *((_DWORD *)this + 12))
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  a2 = 0;
  *((_BYTE *)this + 36) = 1;
  return a2;
}

unint64_t google::protobuf::io::EpsCopyOutputStream::Flush(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  _OWORD *v4;
  char *v5;
  void *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  _OWORD *v15;
  int v16;

  v4 = (_OWORD *)((char *)this + 16);
  v5 = (char *)this + 32;
  v6 = (void *)*((_QWORD *)this + 1);
LABEL_2:
  v7 = *(_QWORD *)this;
  if (v6)
  {
    v8 = (_DWORD)a2 - v7;
    if ((unint64_t)a2 <= v7)
    {
      memcpy(v6, v4, a2 - (unsigned __int8 *)v4);
      v13 = *(_QWORD *)this;
      *((_QWORD *)this + 1) += a2 - (unsigned __int8 *)v4;
      return v13 - (_QWORD)a2;
    }
    else
    {
      if (*((_QWORD *)this + 6))
      {
        memcpy(v6, v4, v7 - (_QWORD)v4);
        v16 = 0;
        while (1)
        {
          v15 = 0;
          if (((*(uint64_t (**)(_QWORD, _OWORD **, int *))(**((_QWORD **)this + 6) + 16))(*((_QWORD *)this + 6), &v15, &v16) & 1) == 0)break;
          v9 = v16;
          if (v16)
          {
            v10 = v15;
            v11 = *(_OWORD **)this;
            if (v16 < 17)
            {
              *v4 = *v11;
              v12 = (uint64_t)v4 + (int)v9;
              v6 = v10;
              v10 = v4;
            }
            else
            {
              v6 = 0;
              *v15 = *v11;
              v12 = (uint64_t)v10 + v9 - 16;
            }
            *(_QWORD *)this = v12;
            *((_QWORD *)this + 1) = v6;
            a2 = (unsigned __int8 *)v10 + v8;
            if (*((_BYTE *)this + 56))
              return 0;
            goto LABEL_2;
          }
        }
      }
      result = 0;
      *((_BYTE *)this + 56) = 1;
      *(_QWORD *)this = v5;
    }
  }
  else
  {
    result = v7 - (_QWORD)a2 + 16;
    *((_QWORD *)this + 1) = a2;
  }
  return result;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::Trim(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  unint64_t v3;

  if (!*((_BYTE *)this + 56))
  {
    v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
    if ((_DWORD)v3)
      (*(void (**)(_QWORD, unint64_t))(**((_QWORD **)this + 6) + 24))(*((_QWORD *)this + 6), v3);
    a2 = (unsigned __int8 *)this + 16;
    *(_QWORD *)this = (char *)this + 16;
    *((_QWORD *)this + 1) = (char *)this + 16;
  }
  return a2;
}

uint64_t google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  int v3;
  uint64_t result;
  char *v5;
  uint64_t v6;

  if (*((_BYTE *)this + 56))
    return (uint64_t)this + 16;
  v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
  if (*((_BYTE *)this + 56))
    return (uint64_t)this + 16;
  v5 = (char *)(*((_QWORD *)this + 1) + v3 - 16);
  if (v3 > 16)
  {
    v6 = 0;
  }
  else
  {
    v5 = (char *)this + v3 + 16;
    v6 = *((_QWORD *)this + 1);
  }
  if (v3 <= 16)
    result = (uint64_t)this + 16;
  else
    result = *((_QWORD *)this + 1);
  *(_QWORD *)this = v5;
  *((_QWORD *)this + 1) = v6;
  return result;
}

_OWORD *google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  unint64_t v2;
  _OWORD *v4;
  char *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  char *v10;
  unint64_t v11;
  _OWORD *v13;
  int v14;

  LODWORD(v2) = (_DWORD)a2;
  v4 = (_OWORD *)((char *)this + 16);
  v5 = (char *)this + 32;
  while (!*((_BYTE *)this + 56))
  {
    v6 = *(char **)this;
    if (*((_QWORD *)this + 6))
    {
      v7 = (void *)*((_QWORD *)this + 1);
      if (!v7)
      {
        *v4 = *(_OWORD *)v6;
        *((_QWORD *)this + 1) = v6;
        goto LABEL_11;
      }
      memcpy(v7, v4, v6 - (char *)v4);
      v14 = 0;
      while (1)
      {
        v13 = 0;
        if (((*(uint64_t (**)(_QWORD, _OWORD **, int *))(**((_QWORD **)this + 6) + 16))(*((_QWORD *)this + 6), &v13, &v14) & 1) == 0)break;
        v8 = v14;
        if (v14)
        {
          v9 = v13;
          v10 = *(char **)this;
          if (v14 >= 17)
          {
            *v13 = *(_OWORD *)v10;
            v11 = (unint64_t)v9 + v8 - 16;
            *(_QWORD *)this = v11;
            *((_QWORD *)this + 1) = 0;
            goto LABEL_13;
          }
          *v4 = *(_OWORD *)v10;
          v11 = (unint64_t)v4 + (int)v8;
          *(_QWORD *)this = v11;
          *((_QWORD *)this + 1) = v9;
          goto LABEL_12;
        }
      }
    }
    *((_BYTE *)this + 56) = 1;
LABEL_11:
    *(_QWORD *)this = v5;
    v11 = (unint64_t)v5;
LABEL_12:
    v9 = v4;
LABEL_13:
    v2 = (unint64_t)v9 + (int)v2 - (int)v6;
    if (v2 < v11)
      return (_OWORD *)v2;
  }
  return v4;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(google::protobuf::io::EpsCopyOutputStream *this, char *__src, int a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  int v5;
  int v7;

  v4 = __dst;
  v5 = a3;
  v7 = *(_DWORD *)this - (_DWORD)__dst + 16;
  if (v7 < a3)
  {
    do
    {
      memcpy(v4, __src, v7);
      v5 -= v7;
      __src += v7;
      v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, &v4[v7]);
      v7 = *(_DWORD *)this - (_DWORD)v4 + 16;
    }
    while (v5 > v7);
  }
  memcpy(v4, __src, v5);
  return &v4[v5];
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(google::protobuf::io::EpsCopyOutputStream *this, void *__src, uint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v8;
  unsigned __int8 *v9;

  v8 = *(_QWORD *)this - (_QWORD)__dst;
  if (v8 + 16 <= (int)a3)
  {
    v9 = google::protobuf::io::EpsCopyOutputStream::Trim(this, __dst);
    if (((*(uint64_t (**)(_QWORD, void *, uint64_t))(**((_QWORD **)this + 6) + 40))(*((_QWORD *)this + 6), __src, a3) & 1) == 0)
    {
      *((_BYTE *)this + 56) = 1;
      v9 = (unsigned __int8 *)this + 16;
      *(_QWORD *)this = (char *)this + 32;
    }
    return v9;
  }
  if (v8 >= (int)a3)
  {
    memcpy(__dst, __src, (int)a3);
    return &__dst[(int)a3];
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)__src, a3, __dst);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, void **a3, unsigned __int8 *a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned __int8 *v14;
  void *v15;
  unsigned int v17;
  unsigned int v18;

  if (*(_QWORD *)this <= (unint64_t)a4)
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  if (*((char *)a3 + 23) >= 0)
    v7 = *((unsigned __int8 *)a3 + 23);
  else
    v7 = *((unsigned int *)a3 + 2);
  v8 = (8 * a2) | 2;
  if (v8 > 0x7F)
  {
    *a4 = (8 * a2) | 0x82;
    v10 = (8 * a2) >> 7;
    if (v8 >> 14)
    {
      v9 = a4 + 2;
      do
      {
        *(v9 - 1) = v10 | 0x80;
        v11 = v10 >> 7;
        ++v9;
        v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - 1) = v11;
    }
    else
    {
      a4[1] = v10;
      v9 = a4 + 2;
    }
  }
  else
  {
    *a4 = v8;
    v9 = a4 + 1;
  }
  if (v7 >= 0x80)
  {
    v17 = v7;
    do
    {
      *v9++ = v17 | 0x80;
      v13 = v17 >> 7;
      v18 = v17 >> 14;
      v17 >>= 7;
    }
    while (v18);
  }
  else
  {
    LOBYTE(v13) = v7;
  }
  *v9 = v13;
  v14 = v9 + 1;
  if (*((char *)a3 + 23) >= 0)
    v15 = a3;
  else
    v15 = *a3;
  return google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(this, v15, v7, v14);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(google::protobuf::io::EpsCopyOutputStream *this, void *a2, uint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v6;

  if (*((_BYTE *)this + 57))
    return google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(this, a2, a3, __dst);
  if (*(_QWORD *)this - (_QWORD)__dst < (int)a3)
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)a2, a3, __dst);
  v6 = (int)a3;
  memcpy(__dst, a2, (int)a3);
  return &__dst[v6];
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, unsigned __int8 *a4)
{
  unsigned __int8 *v4;
  uint64_t v8;
  unsigned int v9;
  _BYTE *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned __int8 *v15;
  char *v16;
  uint64_t v17;
  unsigned int v19;
  unsigned int v20;

  v4 = a4;
  if (*(_QWORD *)this <= (unint64_t)a4)
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  if (*(char *)(a3 + 23) >= 0)
    LODWORD(v8) = *(unsigned __int8 *)(a3 + 23);
  else
    v8 = *(_QWORD *)(a3 + 8);
  v9 = (8 * a2) | 2;
  if (v9 > 0x7F)
  {
    *v4 = (8 * a2) | 0x82;
    v11 = (8 * a2) >> 7;
    if (v9 >> 14)
    {
      v10 = v4 + 2;
      do
      {
        *(v10 - 1) = v11 | 0x80;
        v12 = v11 >> 7;
        ++v10;
        v13 = v11 >> 14;
        v11 >>= 7;
      }
      while (v13);
      *(v10 - 1) = v12;
    }
    else
    {
      v4[1] = v11;
      v10 = v4 + 2;
    }
  }
  else
  {
    *v4 = v9;
    v10 = v4 + 1;
  }
  if (v8 >= 0x80)
  {
    v19 = v8;
    do
    {
      *v10++ = v19 | 0x80;
      v14 = v19 >> 7;
      v20 = v19 >> 14;
      v19 >>= 7;
    }
    while (v20);
  }
  else
  {
    LOBYTE(v14) = v8;
  }
  *v10 = v14;
  v15 = v10 + 1;
  if (*(char *)(a3 + 23) >= 0)
    v16 = (char *)a3;
  else
    v16 = *(char **)a3;
  if (*(_QWORD *)this - (_QWORD)v15 < (int)v8)
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v16, v8, v15);
  v17 = (int)v8;
  memcpy(v15, v16, (int)v8);
  return &v15[v17];
}

uint64_t google::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2, int a3)
{
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  uint64_t v14;

  v6 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  v7 = a1 + 16;
  *(_QWORD *)a1 = a1 + 16;
  *(_QWORD *)(a1 + 8) = a1 + 16;
  *(_QWORD *)(a1 + 48) = a2;
  *(_WORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 58) = v6;
  *(_QWORD *)(a1 + 64) = a1 + 16;
  *(_QWORD *)(a1 + 72) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  if (a3)
  {
    v14 = 0;
    v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t *, int *))(*(_QWORD *)a2 + 16))(a2, &v14, &v13) && v13 != 0)
    {
      v9 = v14;
      if (v13 <= 16)
        v10 = v7 + v13;
      else
        v10 = v14 + v13 - 16;
      if (v13 <= 16)
        v11 = v14;
      else
        v11 = 0;
      if (v13 <= 16)
        v9 = v7;
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v11;
      *(_QWORD *)(a1 + 64) = v9;
    }
  }
  return a1;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  *((_QWORD *)this + 8) = google::protobuf::io::EpsCopyOutputStream::Trim(this, *((unsigned __int8 **)this + 8));
}

uint64_t *google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>(uint64_t *result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v5;

  v1 = *result;
  if ((*result & 1) != 0)
  {
    v2 = v1 & 0xFFFFFFFFFFFFFFFELL;
    v3 = *(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFFELL);
    if (v2 && v3 == 0)
    {
      v5 = *(void **)(v2 + 8);
      if (v5 != *(void **)(v2 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v2 + 8));
        v5 = *(void **)(v2 + 8);
      }
      if (v5)
      {
        *(_QWORD *)(v2 + 16) = v5;
        operator delete(v5);
      }
      JUMPOUT(0x18D76437CLL);
    }
  }
  return result;
}

uint64_t google::protobuf::MessageLite::InternalGetTable(google::protobuf::MessageLite *this)
{
  return 0;
}

uint64_t google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(google::protobuf::internal::EpsCopyInputStream *this, const char **a2, int a3)
{
  int v5;
  char v6;

  if ((unint64_t)*a2 < *(_QWORD *)this)
    return 0;
  v5 = *a2 - *((_DWORD *)this + 2);
  if (*((_DWORD *)this + 7) == v5)
  {
    if (v5 >= 1 && !*((_QWORD *)this + 2))
      *a2 = 0;
    return 1;
  }
  else
  {
    *a2 = (const char *)google::protobuf::internal::EpsCopyInputStream::DoneFallback(this, v5, a3);
    return v6 & 1;
  }
}

void google::protobuf::internal::InternalMetadata::DoMergeFrom<google::protobuf::UnknownFieldSet>(uint64_t *a1, const google::protobuf::UnknownFieldSet *a2)
{
  void **v3;

  if ((*a1 & 1) != 0)
    v3 = (void **)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v3 = (void **)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a1);
  google::protobuf::UnknownFieldSet::InternalMergeFrom(v3, a2);
}

google::protobuf::UnknownFieldSet *google::protobuf::internal::InternalMetadata::DoClear<google::protobuf::UnknownFieldSet>(uint64_t *a1)
{
  google::protobuf::UnknownFieldSet *result;

  if ((*a1 & 1) != 0)
    result = (google::protobuf::UnknownFieldSet *)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    result = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(a1);
  if (*(_QWORD *)result != *((_QWORD *)result + 1))
    return (google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::ClearFallback(result);
  return result;
}

uint64_t google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(uint64_t *a1)
{
  unint64_t v2;
  uint64_t AlignedAndAddCleanup;

  v2 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  if ((*a1 & 1) != 0)
  {
    v2 = *(_QWORD *)v2;
    if (v2)
      goto LABEL_3;
LABEL_7:
    AlignedAndAddCleanup = operator new();
    goto LABEL_8;
  }
  if (!v2)
    goto LABEL_7;
LABEL_3:
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  AlignedAndAddCleanup = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v2, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadata::Container<google::protobuf::UnknownFieldSet>>);
LABEL_8:
  *(_OWORD *)AlignedAndAddCleanup = 0u;
  *(_OWORD *)(AlignedAndAddCleanup + 16) = 0u;
  *a1 = AlignedAndAddCleanup | 1;
  *(_QWORD *)AlignedAndAddCleanup = v2;
  return AlignedAndAddCleanup + 8;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadata::Container<google::protobuf::UnknownFieldSet>>(uint64_t a1)
{
  void *v3;
  void *v4;
  google::protobuf::UnknownFieldSet *v5;

  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = (google::protobuf::UnknownFieldSet *)(a1 + 8);
  if (v3 != v4)
  {
    google::protobuf::UnknownFieldSet::ClearFallback(v5);
    v3 = *(void **)v5;
  }
  if (v3)
  {
    *(_QWORD *)(a1 + 16) = v3;
    operator delete(v3);
  }
}

_QWORD *google::protobuf::StringPiece::ToString@<X0>(google::protobuf::StringPiece *this@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)this)
    return std::string::basic_string[abi:ne180100](a2, *(void **)this, *((_QWORD *)this + 1));
  else
    return std::string::basic_string[abi:ne180100]<0>(a2, (char *)&str_3_0);
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(_QWORD *a1, char *__s)
{
  size_t v4;

  v4 = strlen(__s);
  if ((*((char *)a1 + 23) & 0x80000000) == 0)
  {
    if (v4 != *((unsigned __int8 *)a1 + 23))
      return 1;
    return memcmp(a1, __s, v4) != 0;
  }
  if (v4 == a1[1])
  {
    if (v4 == -1)
      std::string::__throw_out_of_range[abi:ne180100]();
    a1 = (_QWORD *)*a1;
    return memcmp(a1, __s, v4) != 0;
  }
  return 1;
}

google::protobuf::StringPiece *google::protobuf::StringPiece::StringPiece(google::protobuf::StringPiece *this, const char *__s)
{
  size_t v3;
  const char *v4;
  size_t v5;

  *(_QWORD *)this = __s;
  *((_QWORD *)this + 1) = 0;
  if (__s)
  {
    v3 = strlen(__s);
    v5 = v3;
    if ((v3 & 0x8000000000000000) != 0)
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v3, "size_t to int conversion", v4);
    *((_QWORD *)this + 1) = v5;
  }
  return this;
}

_QWORD *google::protobuf::StringPiece::StringPiece<std::allocator<char>>(_QWORD *a1, uint64_t *a2, const char *a3)
{
  uint64_t *v4;
  unint64_t v5;

  if (*((char *)a2 + 23) >= 0)
    v4 = a2;
  else
    v4 = (uint64_t *)*a2;
  *a1 = v4;
  a1[1] = 0;
  if (*((char *)a2 + 23) < 0)
  {
    v5 = a2[1];
    if ((v5 & 0x8000000000000000) != 0)
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v5, "size_t to int conversion", a3);
  }
  else
  {
    v5 = *((unsigned __int8 *)a2 + 23);
  }
  a1[1] = v5;
  return a1;
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *i;
  unint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD v25[3];

  v7 = (_QWORD *)(a1 + 24);
  v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v10)
        v3 = v8 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v8;
    }
    v13 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(unsigned __int8 **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if ((std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(a1, v9, a3, (uint64_t)v25);
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v25[0] = *v22;
    *v22 = v25[0];
  }
  else
  {
    *(_QWORD *)v25[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v25[0])
    {
      v23 = *(_QWORD *)(*(_QWORD *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10)
          v23 %= v10;
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25[0];
    }
  }
  i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_18884C958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p)
    std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]((uint64_t)&a11, __p);
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  std::string *v9;

  v7 = a1 + 16;
  v8 = operator new(0x28uLL);
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  v9 = (std::string *)(v8 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v9->__r_.__value_.__r.__words[2] = *(_QWORD *)(a3 + 16);
  }
  *(_BYTE *)(a4 + 16) = 1;
}

void sub_18884CA00(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ReflectionOps::Clear(google::protobuf::internal::ReflectionOps *this, google::protobuf::Message *a2)
{
  unsigned int *ReflectionOrDie;
  uint64_t v4;
  const char *v5;
  const google::protobuf::FieldDescriptor **v6;
  const google::protobuf::FieldDescriptor **v7;
  uint64_t *v8;
  google::protobuf::UnknownFieldSet *v9;
  void *__p;
  const google::protobuf::FieldDescriptor **v11;
  uint64_t v12;

  ReflectionOrDie = (unsigned int *)google::protobuf::internal::GetReflectionOrDie(this, a2);
  __p = 0;
  v11 = 0;
  v12 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)ReflectionOrDie, this, 0, (uint64_t)&__p);
  v6 = (const google::protobuf::FieldDescriptor **)__p;
  v7 = v11;
  while (v6 != v7)
    google::protobuf::Reflection::ClearField((google::protobuf::Reflection *)ReflectionOrDie, this, *v6++, v4, v5);
  v8 = (uint64_t *)((char *)this + ReflectionOrDie[9]);
  if ((*v8 & 1) != 0)
    v9 = (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v9 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v8);
  if (*(_QWORD *)v9 != *((_QWORD *)v9 + 1))
    google::protobuf::UnknownFieldSet::ClearFallback(v9);
  if (__p)
  {
    v11 = (const google::protobuf::FieldDescriptor **)__p;
    operator delete(__p);
  }
}

void sub_18884CACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ReflectionOps::Merge(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  uint64_t v5;
  const google::protobuf::Message *v6;
  uint64_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  uint64_t ReflectionOrDie;
  const google::protobuf::Message *v17;
  uint64_t v18;
  google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *v19;
  google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int i;
  unint64_t *v35;
  unint64_t v36;
  int RepeatedInt32;
  const char *v38;
  double RepeatedDouble;
  uint64_t v40;
  const char *v41;
  uint64_t RepeatedInt64;
  const char *v43;
  int RepeatedUInt32;
  const char *v45;
  uint64_t RepeatedUInt64;
  const char *v47;
  float RepeatedFloat;
  uint64_t v49;
  const char *v50;
  char RepeatedBool;
  const char *v52;
  uint64_t RepeatedEnum;
  const char *v54;
  uint64_t RepeatedMessage;
  const char *v56;
  uint64_t v57;
  google::protobuf::MessageFactory *v58;
  google::protobuf::_anonymous_namespace_ **v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  int Int32;
  const char *v65;
  uint64_t Int64;
  const char *v67;
  int UInt32;
  const char *v69;
  uint64_t UInt64;
  const char *v71;
  double Double;
  uint64_t v73;
  const char *v74;
  float Float;
  uint64_t v76;
  const char *v77;
  char Bool;
  const char *v79;
  uint64_t Enum;
  const char *v81;
  uint64_t Message;
  const char *v83;
  uint64_t v84;
  google::protobuf::MessageFactory *v85;
  google::protobuf::_anonymous_namespace_ **v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  void **v90;
  uint64_t v91;
  const google::protobuf::UnknownFieldSet *v92;
  int v93;
  const char *v94;
  std::string v95;
  std::string v96;
  void *v97;
  const char *v98;
  uint64_t v99;
  std::string __p;
  uint64_t v101;
  void (*v102)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v103)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v104)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v105;

  if (this == a2)
  {
    LODWORD(v97) = 3;
    v98 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_ops.cc";
    LODWORD(v99) = 71;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (&from) != (to): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v97);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v5 = (*(uint64_t (**)(google::protobuf::internal::ReflectionOps *))(*(_QWORD *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2) != v5)
  {
    LODWORD(v97) = 3;
    v98 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_ops.cc";
    LODWORD(v99) = 74;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (to->GetDescriptor()) == (descriptor): ");
    std::string::append(&__p, "Tried to merge messages of different types ");
    std::string::append(&__p, "(merge ");
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(char *)(v7 + 23);
    v9 = v8 >= 0 ? *(const std::string::value_type **)(v5 + 8) : *(const std::string::value_type **)v7;
    v10 = v8 >= 0 ? *(unsigned __int8 *)(v7 + 23) : *(_QWORD *)(v7 + 8);
    std::string::append(&__p, v9, v10);
    std::string::append(&__p, " to ");
    v11 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(char *)(v12 + 23);
    v14 = v13 >= 0 ? *(const std::string::value_type **)(v11 + 8) : *(const std::string::value_type **)v12;
    v15 = v13 >= 0 ? *(unsigned __int8 *)(v12 + 23) : *(_QWORD *)(v12 + 8);
    std::string::append(&__p, v14, v15);
    std::string::append(&__p, ")");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v97);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  ReflectionOrDie = google::protobuf::internal::GetReflectionOrDie(this, v6);
  v18 = google::protobuf::internal::GetReflectionOrDie(a2, v17);
  v19 = *(google::protobuf::_anonymous_namespace_::GeneratedMessageFactory **)(ReflectionOrDie + 64);
  v21 = *(_QWORD *)(v18 + 64);
  v97 = 0;
  v98 = 0;
  v99 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped(ReflectionOrDie, this, 0, (uint64_t)&v97);
  v25 = (const char *)v97;
  v94 = v98;
  if (v97 != v98)
  {
    v93 = (v19 != v20) ^ (v21 == v22);
    do
    {
      v26 = *(_QWORD *)v25;
      if (*(_DWORD *)(*(_QWORD *)v25 + 60) == 3)
      {
        if (!v93)
          goto LABEL_30;
        v27 = *(unint64_t **)(v26 + 48);
        if (v27)
        {
          v101 = *(_QWORD *)v25;
          v102 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v28 = atomic_load(v27);
          if (v28 != -1)
          {
            v104 = &v102;
            v105 = &v101;
            v103 = &v104;
            std::__call_once(v27, &v103, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v26 + 56) == 11
          && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 104) + 32) + 75)
          && (v29 = google::protobuf::Reflection::MutableMapData((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26), v30 = (unsigned int *)google::protobuf::Reflection::MutableMapData((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26), v31 = atomic_load(v30 + 22), v31 != 1)&& (v32 = atomic_load((unsigned int *)(v29 + 88)), v32 != 1))
        {
          (*(void (**)(unsigned int *, uint64_t))(*(_QWORD *)v30 + 72))(v30, v29);
        }
        else
        {
LABEL_30:
          v33 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
          if (v33 >= 1)
          {
            for (i = 0; i != v33; ++i)
            {
              v35 = *(unint64_t **)(v26 + 48);
              if (v35)
              {
                v101 = v26;
                v102 = google::protobuf::FieldDescriptor::TypeOnceInit;
                v36 = atomic_load(v35);
                if (v36 != -1)
                {
                  v104 = &v102;
                  v105 = &v101;
                  v103 = &v104;
                  std::__call_once(v35, &v103, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(v26 + 56))
              {
                case 1:
                  RepeatedDouble = google::protobuf::Reflection::GetRepeatedDouble((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddDouble((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedDouble, v40, v41);
                  break;
                case 2:
                  RepeatedFloat = google::protobuf::Reflection::GetRepeatedFloat((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddFloat((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedFloat, v49, v50);
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedInt64, v43);
                  break;
                case 4:
                case 6:
                  RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddUInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedUInt64, v47);
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedInt32, v38);
                  break;
                case 7:
                case 0xD:
                  RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddUInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedUInt32, v45);
                  break;
                case 8:
                  RepeatedBool = google::protobuf::Reflection::GetRepeatedBool((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddBool((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, RepeatedBool, v52);
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetRepeatedString((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24, &v96);
                  google::protobuf::Reflection::AddString(v18, (uint64_t)a2, (google::protobuf::FieldDescriptor *)v26, (uint64_t)&v96, v54);
                  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v96.__r_.__value_.__l.__data_);
                  break;
                case 0xA:
                case 0xB:
                  RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  v57 = RepeatedMessage;
                  if (ReflectionOrDie == v18)
                  {
                    (*(void (**)(uint64_t))(*(_QWORD *)RepeatedMessage + 152))(RepeatedMessage);
                    v58 = *(google::protobuf::MessageFactory **)(v60 + 64);
                    v59 = (google::protobuf::_anonymous_namespace_ **)ReflectionOrDie;
                  }
                  else
                  {
                    v58 = 0;
                    v59 = (google::protobuf::_anonymous_namespace_ **)v18;
                  }
                  v61 = google::protobuf::Reflection::AddMessage(v59, a2, (unint64_t **)v26, v58, v56);
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v61 + 120))(v61, v57);
                  break;
                case 0xE:
                  RepeatedEnum = google::protobuf::Reflection::GetRepeatedEnum((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, i, v24);
                  google::protobuf::Reflection::AddEnum((uint64_t *)v18, a2, (google::protobuf::FieldDescriptor *)v26, RepeatedEnum);
                  break;
                default:
                  continue;
              }
            }
          }
        }
      }
      else
      {
        v62 = *(unint64_t **)(v26 + 48);
        if (v62)
        {
          v101 = *(_QWORD *)v25;
          v102 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v63 = atomic_load(v62);
          if (v63 != -1)
          {
            v104 = &v102;
            v105 = &v101;
            v103 = &v104;
            std::__call_once(v62, &v103, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        switch(*(_DWORD *)(v26 + 56))
        {
          case 1:
            Double = google::protobuf::Reflection::GetDouble((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetDouble((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Double, v73, v74);
            break;
          case 2:
            Float = google::protobuf::Reflection::GetFloat((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetFloat((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Float, v76, v77);
            break;
          case 3:
          case 0x10:
          case 0x12:
            Int64 = google::protobuf::Reflection::GetInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Int64, v67);
            break;
          case 4:
          case 6:
            UInt64 = google::protobuf::Reflection::GetUInt64((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetUInt64((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, UInt64, v71);
            break;
          case 5:
          case 0xF:
          case 0x11:
            Int32 = google::protobuf::Reflection::GetInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Int32, v65);
            break;
          case 7:
          case 0xD:
            UInt32 = google::protobuf::Reflection::GetUInt32((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetUInt32((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, UInt32, v69);
            break;
          case 8:
            Bool = google::protobuf::Reflection::GetBool((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetBool((google::protobuf::_anonymous_namespace_ **)v18, a2, (const google::protobuf::FieldDescriptor *)v26, Bool, v79);
            break;
          case 9:
          case 0xC:
            google::protobuf::Reflection::GetString((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v24, &v95);
            google::protobuf::Reflection::SetString(v18, a2, (google::protobuf::FieldDescriptor *)v26, (uint64_t)&v95, v81);
            if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v95.__r_.__value_.__l.__data_);
            break;
          case 0xA:
          case 0xB:
            Message = google::protobuf::Reflection::GetMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, 0, v24);
            v84 = Message;
            if (ReflectionOrDie == v18)
            {
              (*(void (**)(uint64_t))(*(_QWORD *)Message + 152))(Message);
              v85 = *(google::protobuf::MessageFactory **)(v87 + 64);
              v86 = (google::protobuf::_anonymous_namespace_ **)ReflectionOrDie;
            }
            else
            {
              v85 = 0;
              v86 = (google::protobuf::_anonymous_namespace_ **)v18;
            }
            v88 = google::protobuf::Reflection::MutableMessage(v86, a2, (const google::protobuf::FieldDescriptor *)v26, v85, v83);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v88 + 120))(v88, v84);
            break;
          case 0xE:
            Enum = google::protobuf::Reflection::GetEnum((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v26, v23, v24);
            google::protobuf::Reflection::SetEnum((uint64_t *)v18, a2, (google::protobuf::FieldDescriptor *)v26, Enum);
            break;
          default:
            break;
        }
      }
      v25 += 8;
    }
    while (v25 != v94);
  }
  v89 = (uint64_t *)((char *)a2 + *(unsigned int *)(v18 + 36));
  if ((*v89 & 1) != 0)
  {
    v90 = (void **)((*v89 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else
  {
    v89 = (uint64_t *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v89);
    v90 = (void **)v89;
  }
  v91 = *(_QWORD *)((char *)this + *(unsigned int *)(ReflectionOrDie + 36));
  if ((v91 & 1) != 0)
    v92 = (const google::protobuf::UnknownFieldSet *)((v91 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v92 = (const google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance((google::protobuf::UnknownFieldSet *)v89);
  google::protobuf::UnknownFieldSet::InternalMergeFrom(v90, v92);
  if (v97)
  {
    v98 = (const char *)v97;
    operator delete(v97);
  }
}

void sub_18884D348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::GetReflectionOrDie(google::protobuf::internal *this, const google::protobuf::Message *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  std::string *v8;
  std::string::size_type size;
  int v11;
  const char *v12;
  int v13;
  std::string __p;
  std::string v15;

  (*(void (**)(google::protobuf::internal *, const google::protobuf::Message *))(*(_QWORD *)this + 152))(this, a2);
  v4 = v3;
  if (!v3)
  {
    v5 = (*(uint64_t (**)(google::protobuf::internal *))(*(_QWORD *)this + 152))(this);
    if (v5)
    {
      v6 = *(__int128 **)v5;
      if (*(char *)(*(_QWORD *)v5 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v15, *(const std::string::value_type **)v6, *((_QWORD *)v6 + 1));
      }
      else
      {
        v7 = *v6;
        v15.__r_.__value_.__r.__words[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v7;
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v15, "unknown");
    }
    v11 = 3;
    v12 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/reflection_ops.cc";
    v13 = 59;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Message does not support reflection (type ");
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v15;
    else
      v8 = (std::string *)v15.__r_.__value_.__r.__words[0];
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    else
      size = v15.__r_.__value_.__l.__size_;
    std::string::append(&__p, (const std::string::value_type *)v8, size);
    std::string::append(&__p, ").");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_18884D4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetMessageValue(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 10)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 729;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetMessageValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "message");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)this;
}

void sub_18884D628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ReflectionOps::IsInitialized(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2)
{
  uint64_t v3;
  const google::protobuf::Message *v4;
  uint64_t v5;
  const char *v6;
  google::protobuf::_anonymous_namespace_ **ReflectionOrDie;
  int v8;
  uint64_t v9;
  uint64_t v10;
  const google::protobuf::FieldDescriptor *v11;
  uint64_t v12;
  const char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  int v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t RepeatedMessage;
  uint64_t Message;
  uint64_t MessageValue;
  uint64_t v32;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD v39[8];
  void (**v40)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v41;
  _QWORD v42[4];

  v42[2] = *MEMORY[0x1E0C80C00];
  v3 = (*(uint64_t (**)(google::protobuf::internal::ReflectionOps *, const google::protobuf::Message *))(*(_QWORD *)this + 152))(this, a2);
  ReflectionOrDie = (google::protobuf::_anonymous_namespace_ **)google::protobuf::internal::GetReflectionOrDie(this, v4);
  v8 = *(_DWORD *)(v3 + 104);
  if (v8 >= 1)
  {
    v9 = 0;
    v10 = 152 * v8;
    do
    {
      v11 = (const google::protobuf::FieldDescriptor *)(*(_QWORD *)(v3 + 40) + v9);
      if (*((_DWORD *)v11 + 15) == 2
        && !google::protobuf::Reflection::HasField(ReflectionOrDie, this, v11, v5, v6))
      {
        return 0;
      }
      v9 += 152;
    }
    while (v10 != v9);
  }
  v34 = 0;
  v35 = 0;
  v36 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)ReflectionOrDie, this, 0, (uint64_t)&v34);
  v14 = v34;
  v15 = v35;
  if (v34 == v35)
  {
    v32 = 1;
    if (v34)
      goto LABEL_42;
    return v32;
  }
  while (1)
  {
    v16 = *(_QWORD *)v14;
    v17 = *(unint64_t **)(*(_QWORD *)v14 + 48);
    if (v17)
    {
      v37 = *(_QWORD *)v14;
      v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v18 = atomic_load(v17);
      if (v18 != -1)
      {
        v40 = &v38;
        v41 = &v37;
        v39[0] = &v40;
        std::__call_once(v17, v39, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v19 = *(_DWORD *)(v16 + 56);
    if ((v19 & 0xFFFFFFFE) != 0xA)
      goto LABEL_29;
    v20 = *(unint64_t **)(v16 + 48);
    if (v20)
    {
      v37 = v16;
      v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v21 = atomic_load(v20);
      if (v21 != -1)
      {
        v40 = &v38;
        v41 = &v37;
        v39[0] = &v40;
        std::__call_once(v20, v39, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v19 = *(_DWORD *)(v16 + 56);
    }
    if (v19 == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 104) + 32) + 75))
    {
      v22 = *(_QWORD *)(google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v16) + 40);
      v23 = *(unint64_t **)(v22 + 200);
      if (v23)
      {
        v37 = v22 + 152;
        v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v24 = atomic_load(v23);
        if (v24 != -1)
        {
          v40 = &v38;
          v41 = &v37;
          v39[0] = &v40;
          std::__call_once(v23, v39, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*(_DWORD *)(v22 + 208) & 0xFFFFFFFE) != 0xA)
        goto LABEL_29;
      v25 = (unsigned int *)google::protobuf::Reflection::MutableMapData(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16);
      v26 = atomic_load(v25 + 22);
      if (v26 != 1)
        break;
    }
    if (*(_DWORD *)(v16 + 60) == 3)
    {
      v27 = google::protobuf::Reflection::FieldSize(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16, v12, v13);
      if (v27 >= 1)
      {
        v28 = 0;
        do
        {
          RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16, v28, v13);
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)RepeatedMessage + 48))(RepeatedMessage) & 1) == 0)
            goto LABEL_40;
        }
        while (v27 != ++v28);
      }
    }
    else
    {
      Message = google::protobuf::Reflection::GetMessage(ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v16, 0, v13);
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)Message + 48))(Message) & 1) == 0)
        goto LABEL_40;
    }
LABEL_29:
    v14 += 8;
    if (v14 == v15)
    {
      v32 = 1;
      goto LABEL_41;
    }
  }
  google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)&v40, this, (const google::protobuf::FieldDescriptor *)v16);
  google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)v39, this, (const google::protobuf::FieldDescriptor *)v16);
  (*(void (**)(unsigned int *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*(_QWORD *)v25 + 56))(v25, &v40);
  (*(void (**)(unsigned int *, _QWORD *))(*(_QWORD *)v25 + 64))(v25, v39);
  while (1)
  {
    if (((*(uint64_t (**)(uint64_t *, _QWORD, _QWORD *))(*v41 + 48))(v41, &v40, v39) & 1) != 0)
    {
      google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v39);
      google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v40);
      goto LABEL_29;
    }
    MessageValue = google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapValueConstRef *)v42);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)MessageValue + 48))(MessageValue) & 1) == 0)
      break;
    (*(void (**)(uint64_t *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*v41 + 152))(v41, &v40);
  }
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v39);
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v40);
LABEL_40:
  v32 = 0;
LABEL_41:
  v14 = v34;
  if (v34)
  {
LABEL_42:
    v35 = v14;
    operator delete(v14);
  }
  return v32;
}

void sub_18884DA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&a23);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ReflectionOps::DiscardUnknownFields(google::protobuf::internal::ReflectionOps *this, google::protobuf::Message *a2)
{
  uint64_t ReflectionOrDie;
  uint64_t *v4;
  google::protobuf::UnknownFieldSet *v5;
  uint64_t v6;
  const char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  int i;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD v31[8];
  void (**v32)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v33;
  _QWORD v34[4];

  v34[2] = *MEMORY[0x1E0C80C00];
  ReflectionOrDie = google::protobuf::internal::GetReflectionOrDie(this, a2);
  v4 = (uint64_t *)((char *)this + *(unsigned int *)(ReflectionOrDie + 36));
  if ((*v4 & 1) != 0)
    v5 = (google::protobuf::UnknownFieldSet *)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v5 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
  if (*(_QWORD *)v5 != *((_QWORD *)v5 + 1))
    google::protobuf::UnknownFieldSet::ClearFallback(v5);
  v26 = 0;
  v27 = 0;
  v28 = 0;
  google::protobuf::Reflection::ListFieldsMayFailOnStripped(ReflectionOrDie, this, 0, (uint64_t)&v26);
  v8 = v26;
  v9 = v27;
  if (v26 != v27)
  {
    do
    {
      v10 = *(_QWORD *)v8;
      v11 = *(unint64_t **)(*(_QWORD *)v8 + 48);
      if (v11)
      {
        v29 = *(_QWORD *)v8;
        v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v12 = atomic_load(v11);
        if (v12 != -1)
        {
          v32 = &v30;
          v33 = &v29;
          v31[0] = &v32;
          std::__call_once(v11, v31, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      v13 = *(_DWORD *)(v10 + 56);
      if ((v13 & 0xFFFFFFFE) == 0xA)
      {
        v14 = *(unint64_t **)(v10 + 48);
        if (v14)
        {
          v29 = v10;
          v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v15 = atomic_load(v14);
          if (v15 != -1)
          {
            v32 = &v30;
            v33 = &v29;
            v31[0] = &v32;
            std::__call_once(v14, v31, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v13 = *(_DWORD *)(v10 + 56);
        }
        if (v13 != 11 || !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 104) + 32) + 75))
          goto LABEL_24;
        v16 = *(_QWORD *)(google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v10) + 40);
        v17 = *(unint64_t **)(v16 + 200);
        if (v17)
        {
          v29 = v16 + 152;
          v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v18 = atomic_load(v17);
          if (v18 != -1)
          {
            v32 = &v30;
            v33 = &v29;
            v31[0] = &v32;
            std::__call_once(v17, v31, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if ((*(_DWORD *)(v16 + 208) & 0xFFFFFFFE) == 0xA)
        {
          v19 = (unsigned int *)google::protobuf::Reflection::MutableMapData((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10);
          v20 = atomic_load(v19 + 22);
          if (v20 != 1)
          {
            google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)&v32, this, (const google::protobuf::FieldDescriptor *)v10);
            google::protobuf::MapIterator::MapIterator((google::protobuf::MapIterator *)v31, this, (const google::protobuf::FieldDescriptor *)v10);
            (*(void (**)(unsigned int *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*(_QWORD *)v19 + 56))(v19, &v32);
            (*(void (**)(unsigned int *, _QWORD *))(*(_QWORD *)v19 + 64))(v19, v31);
            while (((*(uint64_t (**)(uint64_t *, _QWORD, _QWORD *))(*v33 + 48))(v33, &v32, v31) & 1) == 0)
            {
              *((_DWORD *)v33 + 22) = 0;
              v21 = google::protobuf::MapValueRef::MutableMessageValue((google::protobuf::MapValueRef *)v34);
              (*(void (**)(uint64_t))(*(_QWORD *)v21 + 128))(v21);
              (*(void (**)(uint64_t *, void (***)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *)))(*v33 + 152))(v33, &v32);
            }
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)v31);
            google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&v32);
          }
        }
        else
        {
LABEL_24:
          if (*(_DWORD *)(v10 + 60) == 3)
          {
            v22 = google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10, v6, v7);
            if (v22 >= 1)
            {
              for (i = 0; i != v22; ++i)
              {
                v24 = google::protobuf::Reflection::MutableRepeatedMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10, i, v7);
                (*(void (**)(uint64_t))(*(_QWORD *)v24 + 128))(v24);
              }
            }
          }
          else
          {
            v25 = google::protobuf::Reflection::MutableMessage((google::protobuf::_anonymous_namespace_ **)ReflectionOrDie, this, (const google::protobuf::FieldDescriptor *)v10, 0, v7);
            (*(void (**)(uint64_t))(*(_QWORD *)v25 + 128))(v25);
          }
        }
      }
      v8 += 8;
    }
    while (v8 != v9);
    v8 = v26;
  }
  if (v8)
  {
    v27 = v8;
    operator delete(v8);
  }
}

void sub_18884DDAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  google::protobuf::MapIterator::~MapIterator((google::protobuf::MapIterator *)&a23);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::MapValueRef::MutableMessageValue(google::protobuf::MapValueRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 10)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 814;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueRef::MutableMessageValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "message");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)this;
}

void sub_18884DF04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ReflectionOps::FindInitializationErrors(google::protobuf::internal *a1, const void **a2, uint64_t a3)
{
  uint64_t v6;
  const google::protobuf::Message *v7;
  uint64_t v8;
  const char *v9;
  google::protobuf::_anonymous_namespace_ **ReflectionOrDie;
  int v11;
  uint64_t v12;
  uint64_t v13;
  const google::protobuf::FieldDescriptor *v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  std::string *v22;
  std::string *v23;
  __int128 v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  const char *v28;
  std::string *first;
  std::__split_buffer<std::string>::pointer begin;
  const google::protobuf::FieldDescriptor *v31;
  unint64_t *v32;
  unint64_t v33;
  int v34;
  google::protobuf *v35;
  uint64_t RepeatedMessage;
  uint64_t Message;
  std::string __p;
  std::__split_buffer<std::string> __v;
  std::string::size_type v40;
  uint64_t (*v41)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string *p_p;

  v6 = (*(uint64_t (**)(google::protobuf::internal *))(*(_QWORD *)a1 + 152))(a1);
  ReflectionOrDie = (google::protobuf::_anonymous_namespace_ **)google::protobuf::internal::GetReflectionOrDie(a1, v7);
  v11 = *(_DWORD *)(v6 + 104);
  if (v11 >= 1)
  {
    v12 = 0;
    v13 = 152 * v11;
    do
    {
      v14 = (const google::protobuf::FieldDescriptor *)(*(_QWORD *)(v6 + 40) + v12);
      if (*((_DWORD *)v14 + 15) == 2
        && (google::protobuf::Reflection::HasField(ReflectionOrDie, a1, v14, v8, v9) & 1) == 0)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a2, *(const void ***)(*(_QWORD *)(v6 + 40) + v12), (uint64_t)&__p);
        v16 = *(_QWORD *)(a3 + 8);
        v15 = *(_QWORD *)(a3 + 16);
        if (v16 >= v15)
        {
          v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - *(_QWORD *)a3) >> 3);
          v19 = v18 + 1;
          if (v18 + 1 > 0xAAAAAAAAAAAAAAALL)
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v15 - *(_QWORD *)a3) >> 3);
          if (2 * v20 > v19)
            v19 = 2 * v20;
          if (v20 >= 0x555555555555555)
            v21 = 0xAAAAAAAAAAAAAAALL;
          else
            v21 = v19;
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
          if (v21)
            v22 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::TrafficDynamicTile::Flow>>(a3 + 16, v21);
          else
            v22 = 0;
          v23 = v22 + v18;
          __v.__first_ = v22;
          __v.__begin_ = v23;
          __v.__end_cap_.__value_ = &v22[v21];
          v24 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          v23->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v23->__r_.__value_.__l.__data_ = v24;
          memset(&__p, 0, sizeof(__p));
          __v.__end_ = v23 + 1;
          std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__v);
          v25 = *(_QWORD *)(a3 + 8);
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          v26 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          *(_QWORD *)(a3 + 8) = v25;
          if (v26 < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        else
        {
          v17 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(_QWORD *)(v16 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)v16 = v17;
          *(_QWORD *)(a3 + 8) = v16 + 24;
        }
      }
      v12 += 152;
    }
    while (v13 != v12);
  }
  memset(&__v, 0, 24);
  google::protobuf::Reflection::ListFieldsMayFailOnStripped((uint64_t)ReflectionOrDie, a1, 0, (uint64_t)&__v);
  first = __v.__first_;
  begin = __v.__begin_;
  if (__v.__first_ != __v.__begin_)
  {
    do
    {
      v31 = (const google::protobuf::FieldDescriptor *)first->__r_.__value_.__r.__words[0];
      v32 = *(unint64_t **)(first->__r_.__value_.__r.__words[0] + 48);
      if (v32)
      {
        v40 = first->__r_.__value_.__r.__words[0];
        v41 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v33 = atomic_load(v32);
        if (v33 != -1)
        {
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v40;
          p_p = &__p;
          std::__call_once(v32, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*((_DWORD *)v31 + 14) & 0xFFFFFFFE) == 0xA)
      {
        if (*((_DWORD *)v31 + 15) == 3)
        {
          v34 = google::protobuf::Reflection::FieldSize(ReflectionOrDie, a1, v31, v27, v28);
          if (v34 >= 1)
          {
            v35 = 0;
            do
            {
              RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(ReflectionOrDie, a1, v31, (int)v35, v28);
              google::protobuf::internal::SubMessagePrefix(&__p, (uint64_t)a2, (const std::string::value_type **)v31, v35);
              google::protobuf::internal::ReflectionOps::FindInitializationErrors(RepeatedMessage, &__p, a3);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              v35 = (google::protobuf *)((_DWORD)v35 + 1);
            }
            while (v34 != (_DWORD)v35);
          }
        }
        else
        {
          Message = google::protobuf::Reflection::GetMessage(ReflectionOrDie, a1, v31, 0, v28);
          google::protobuf::internal::SubMessagePrefix(&__p, (uint64_t)a2, (const std::string::value_type **)v31, (google::protobuf *)0xFFFFFFFFLL);
          google::protobuf::internal::ReflectionOps::FindInitializationErrors(Message, &__p, a3);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      first = (std::string *)((char *)first + 8);
    }
    while (first != begin);
    first = __v.__first_;
  }
  if (first)
  {
    __v.__begin_ = first;
    operator delete(first);
  }
}

void sub_18884E260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::SubMessagePrefix(std::string *this, uint64_t a2, const std::string::value_type **a3, google::protobuf *a4)
{
  const std::string::value_type *v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  int v11;
  const std::string::value_type *v12;
  std::string::size_type v13;
  char *v14;
  char *v15;
  void **v16;
  std::string::size_type v17;
  void *__p[2];
  unsigned __int8 v20;
  void *__src;
  size_t v22;
  char v23;
  _BYTE v24[39];

  *(_QWORD *)&v24[31] = *MEMORY[0x1E0C80C00];
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    *this = *(std::string *)a2;
  if (*((_BYTE *)a3 + 67))
  {
    std::string::append(this, "(");
    v7 = a3[1];
    v8 = v7[23];
    if (v8 >= 0)
      v9 = a3[1];
    else
      v9 = *(const std::string::value_type **)v7;
    if (v8 >= 0)
      v10 = *((unsigned __int8 *)v7 + 23);
    else
      v10 = *((_QWORD *)v7 + 1);
    std::string::append(this, v9, v10);
    std::string::append(this, ")");
  }
  else
  {
    v11 = (*a3)[23];
    if (v11 >= 0)
      v12 = *a3;
    else
      v12 = *(const std::string::value_type **)*a3;
    if (v11 >= 0)
      v13 = *((unsigned __int8 *)*a3 + 23);
    else
      v13 = *((_QWORD *)*a3 + 1);
    std::string::append(this, v12, v13);
  }
  if ((_DWORD)a4 != -1)
  {
    std::string::append(this, "[");
    __src = &v23;
    if ((a4 & 0x80000000) != 0)
    {
      v15 = v24;
      v23 = 45;
      a4 = (google::protobuf *)-(int)a4;
    }
    else
    {
      v15 = &v23;
    }
    v22 = google::protobuf::FastUInt32ToBufferLeft(a4, v15, v14) - &v23;
    std::string::basic_string[abi:ne180100](__p, __src, v22);
    if ((v20 & 0x80u) == 0)
      v16 = __p;
    else
      v16 = (void **)__p[0];
    if ((v20 & 0x80u) == 0)
      v17 = v20;
    else
      v17 = (std::string::size_type)__p[1];
    std::string::append(this, (const std::string::value_type *)v16, v17);
    if ((char)v20 < 0)
      operator delete(__p[0]);
    std::string::append(this, "]");
  }
  return std::string::append(this, ".");
}

void sub_18884E488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (a14 < 0)
    operator delete(__p);
  if (*(char *)(v14 + 23) < 0)
    operator delete(*(void **)v14);
  _Unwind_Resume(exception_object);
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

google::protobuf::MapIterator *google::protobuf::MapIterator::MapIterator(google::protobuf::MapIterator *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  char *v6;
  google::protobuf::_anonymous_namespace_ **v7;
  uint64_t v8;
  const char *v9;
  uint64_t FieldByName;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  void *__p[2];
  char v20;
  uint64_t v21;
  void (*v22)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v23)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v24)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v25;

  v6 = (char *)this + 16;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
  *((_QWORD *)this + 1) = google::protobuf::Reflection::MutableMapData(v7, a2, a3);
  v8 = google::protobuf::FieldDescriptor::message_type(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "key");
  FieldByName = google::protobuf::Descriptor::FindFieldByName(v8, (uint64_t *)__p, v9);
  v11 = *(unint64_t **)(FieldByName + 48);
  if (v11)
  {
    v21 = FieldByName;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v11, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  google::protobuf::MapKey::SetType((uint64_t)v6, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)]);
  if (v20 < 0)
    operator delete(__p[0]);
  v13 = google::protobuf::FieldDescriptor::message_type(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  v15 = google::protobuf::Descriptor::FindFieldByName(v13, (uint64_t *)__p, v14);
  v16 = *(unint64_t **)(v15 + 48);
  if (v16)
  {
    v21 = v15;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v17 = atomic_load(v16);
    if (v17 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v16, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  *((_DWORD *)this + 14) = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v15 + 56)];
  if (v20 < 0)
    operator delete(__p[0]);
  (*(void (**)(_QWORD, google::protobuf::MapIterator *))(**((_QWORD **)this + 1) + 128))(*((_QWORD *)this + 1), this);
  return this;
}

void sub_18884E678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void **v14;
  uint64_t v15;

  if (*(_DWORD *)(v15 + 40) == 9 && *(char *)(v15 + 39) < 0)
    operator delete(*v14);
  _Unwind_Resume(exception_object);
}

void google::protobuf::MapKey::SetType(uint64_t a1, int a2)
{
  int v2;

  v2 = *(_DWORD *)(a1 + 24);
  if (v2 != a2)
  {
    if (v2 == 9 && *(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    *(_DWORD *)(a1 + 24) = a2;
    if (a2 == 9)
    {
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
    }
  }
}

uint64_t google::protobuf::MapValueConstRef::type(google::protobuf::MapValueConstRef *this)
{
  uint64_t result;
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  result = *((unsigned int *)this + 2);
  if (!(_DWORD)result || !*(_QWORD *)this)
  {
    v3 = 3;
    v4 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v5 = 742;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::type MapValueConstRef is not initialized.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    return *((unsigned int *)this + 2);
  }
  return result;
}

void sub_18884E7B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::MapIterator::~MapIterator(google::protobuf::MapIterator *this)
{
  (*(void (**)(_QWORD, google::protobuf::MapIterator *))(**((_QWORD **)this + 1) + 136))(*((_QWORD *)this + 1), this);
  if (*((_DWORD *)this + 10) == 9 && *((char *)this + 39) < 0)
    operator delete(*((void **)this + 2));
}

void std::vector<google::protobuf::FieldDescriptor const*>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 3)
  {
    if (a2 >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    v9 = &v6[8 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *((_QWORD *)v10 - 1);
        v10 -= 8;
        *((_QWORD *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

uint64_t google::protobuf::MapValueConstRef::GetInt32Value(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 1)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 695;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(unsigned int **)this;
}

void sub_18884E9C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetInt64Value(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 2)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 685;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(_QWORD **)this;
}

void sub_18884EAF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetUInt32Value(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 3)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 700;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetUInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(unsigned int **)this;
}

void sub_18884EC18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetUInt64Value(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 4)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 690;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetUInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(_QWORD **)this;
}

void sub_18884ED40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double google::protobuf::MapValueConstRef::GetDoubleValue(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 5)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 723;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetDoubleValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "double");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(double **)this;
}

void sub_18884EE68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

float google::protobuf::MapValueConstRef::GetFloatValue(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 6)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 718;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetFloatValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "float");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(float **)this;
}

void sub_18884EF90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetBoolValue(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 7)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 704;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetBoolValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "BOOL");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(unsigned __int8 **)this;
}

void sub_18884F0B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetStringValue(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 9)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 713;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetStringValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "string");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)this;
}

void sub_18884F1DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapValueConstRef::GetEnumValue(google::protobuf::MapValueConstRef *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapValueConstRef::type(this) != 8)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 708;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapValueConstRef::GetEnumValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "enum");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapValueConstRef::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return **(unsigned int **)this;
}

void sub_18884F304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x18D76437CLL);
}

_OWORD *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>(uint64_t **a1, const void **a2, uint64_t a3)
{
  void **v5;
  _OWORD *v6;
  uint64_t **v7;
  uint64_t v9;

  v5 = (void **)std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>((uint64_t)a1, &v9, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = operator new(0x38uLL);
    v6[2] = *(_OWORD *)a3;
    *((_QWORD *)v6 + 6) = *(_QWORD *)(a3 + 16);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t google::protobuf::io::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 96) = a2;
  *(_QWORD *)(a1 + 104) = a3;
  *(_QWORD *)(a1 + 140) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 160) = -1;
  *(_BYTE *)(a1 + 164) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_WORD *)(a1 + 172) = 1;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)a1 = 0;
  AddrObjGoogle::protobuf::io::Tokenizer::Refresh(a1);
  return a1;
}

void sub_18884F490(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 79) < 0)
    operator delete(*v3);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::Tokenizer::~Tokenizer(google::protobuf::io::Tokenizer *this)
{
  int v2;
  int v3;

  v2 = *((_DWORD *)this + 32);
  v3 = *((_DWORD *)this + 33);
  if (v2 > v3)
    (*(void (**)(_QWORD, _QWORD))(**((_QWORD **)this + 12) + 24))(*((_QWORD *)this + 12), (v2 - v3));
  if (*((char *)this + 79) < 0)
    operator delete(*((void **)this + 7));
  if (*((char *)this + 31) < 0)
    operator delete(*((void **)this + 1));
}

void google::protobuf::io::Tokenizer::ConsumeString(google::protobuf::io::Tokenizer *this, unsigned __int8 a2)
{
  int v4;
  int v5;
  int v6;
  BOOL v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  void *__p[2];
  char v19;

  while (1)
  {
    v4 = *((char *)this + 112);
    if (v4 == 10)
      break;
    if (v4 == 92)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v6 = *((unsigned __int8 *)this + 112);
      v7 = (v6 - 97) > 0x15 || ((1 << (v6 - 97)) & 0x2A2023) == 0;
      if (!v7
        || (v6 - 34) <= 0x3A && ((1 << (v6 - 34)) & 0x400000020000021) != 0
        || (v6 & 0xF8) == 0x30)
      {
        goto LABEL_22;
      }
      switch(v6)
      {
        case 'U':
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if (*((_BYTE *)this + 112) != 48)
            goto LABEL_41;
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if (*((_BYTE *)this + 112) != 48)
            goto LABEL_41;
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((_BYTE *)this + 112) & 0xFE) != 0x30)
            goto LABEL_41;
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((_BYTE *)this + 112) - 48) >= 0xAu)
          {
            v9 = *((unsigned __int8 *)this + 112) - 65;
            if (v9 > 0x25 || ((1 << v9) & 0x3F0000003FLL) == 0)
              goto LABEL_41;
          }
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((_BYTE *)this + 112) - 48) >= 0xAu)
          {
            v10 = *((unsigned __int8 *)this + 112) - 65;
            if (v10 > 0x25 || ((1 << v10) & 0x3F0000003FLL) == 0)
              goto LABEL_41;
          }
          if ((AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v11 = *((unsigned __int8 *)this + 112) - 65, v11 > 0x25) || ((1 << v11) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v12 = *((unsigned __int8 *)this + 112) - 65, v12 > 0x25) || ((1 << v12) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v13 = *((unsigned __int8 *)this + 112) - 65, v13 > 0x25) || ((1 << v13) & 0x3F0000003FLL) == 0))
          {
LABEL_41:
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected eight hex digits up to 10ffff for \\U escape sequence");
            (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_56;
          }
LABEL_22:
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          break;
        case 'u':
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((_BYTE *)this + 112) - 48) >= 0xAu
            && ((v14 = *((unsigned __int8 *)this + 112) - 65, v14 > 0x25) || ((1 << v14) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v15 = *((unsigned __int8 *)this + 112) - 65, v15 > 0x25) || ((1 << v15) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v16 = *((unsigned __int8 *)this + 112) - 65, v16 > 0x25) || ((1 << v16) & 0x3F0000003FLL) == 0)
            || (AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((_BYTE *)this + 112) - 48) >= 0xAu)
            && ((v17 = *((unsigned __int8 *)this + 112) - 65, v17 > 0x25) || ((1 << v17) & 0x3F0000003FLL) == 0))
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected four hex digits for \\u escape sequence.");
            (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_56;
          }
          goto LABEL_22;
        case 'x':
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((_BYTE *)this + 112) - 48) < 0xAu)
            goto LABEL_22;
          v8 = *((unsigned __int8 *)this + 112) - 65;
          if (v8 <= 0x25 && ((1 << v8) & 0x3F0000003FLL) != 0)
            goto LABEL_22;
          std::string::basic_string[abi:ne180100]<0>(__p, "Expected hex digits for escape sequence.");
          (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_56:
          if (v19 < 0)
            operator delete(__p[0]);
          break;
        default:
          std::string::basic_string[abi:ne180100]<0>(__p, "Invalid escape sequence in string literal.");
          (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          goto LABEL_56;
      }
    }
    else
    {
      if (!*((_BYTE *)this + 112))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "Unexpected end of string.");
        (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        goto LABEL_60;
      }
      v5 = *((unsigned __int8 *)this + 112);
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (v5 == a2)
        return;
    }
  }
  if (*((_BYTE *)this + 173))
    goto LABEL_22;
  std::string::basic_string[abi:ne180100]<0>(__p, "String literals cannot cross line boundaries.");
  (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_60:
  if (v19 < 0)
    operator delete(__p[0]);
}

void sub_18884F9C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ConsumeNumber(google::protobuf::io::Tokenizer *this, char a2, int a3)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  unsigned int v8;
  uint64_t v9;
  int v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  void *__p[2];
  char v20;

  v4 = *((unsigned __int8 *)this + 112);
  if ((a2 & 1) != 0)
  {
    if ((v4 | 0x20) == 0x78)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if ((*((_BYTE *)this + 112) - 48) > 9u
        && ((v5 = *((unsigned __int8 *)this + 112) - 65, v17 = v5 > 0x25, v6 = (1 << v5) & 0x3F0000003FLL, !v17)
          ? (v7 = v6 == 0)
          : (v7 = 1),
            v7))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "\"0x\" must be followed by hex digits.");
        (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v20 < 0)
          operator delete(__p[0]);
      }
      else
      {
        do
        {
          do
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          while ((*((_BYTE *)this + 112) - 48) < 0xAu);
          v8 = *((unsigned __int8 *)this + 112) - 65;
          v17 = v8 > 0x25;
          v9 = (1 << v8) & 0x3F0000003FLL;
        }
        while (!v17 && v9 != 0);
      }
LABEL_14:
      v11 = 0;
      goto LABEL_50;
    }
    v12 = v4 - 48;
    if ((v4 - 48) <= 9)
    {
      if ((v4 & 0xF8) != 0x30)
        goto LABEL_32;
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 & 0xF8) == 0x30);
      if ((v13 - 48) <= 9)
      {
LABEL_32:
        std::string::basic_string[abi:ne180100]<0>(__p, "Numbers starting with leading zero must be in octal.");
        (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v20 < 0)
          operator delete(__p[0]);
        if (*((unsigned __int8 *)this + 112) - 48 <= 9)
        {
          do
          {
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            v11 = 0;
          }
          while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
          goto LABEL_50;
        }
      }
      goto LABEL_14;
    }
  }
  else
  {
    v12 = v4 - 48;
  }
  if (a3)
  {
    if (v12 <= 9u)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v4 = *((unsigned __int8 *)this + 112);
      }
      while ((v4 - 48) < 0xA);
    }
  }
  else
  {
    if (v12 <= 9u)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v4 = *((unsigned __int8 *)this + 112);
      }
      while ((v4 - 48) < 0xA);
    }
    if (v4 != 46)
    {
      v11 = 0;
      goto LABEL_36;
    }
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    v4 = *((unsigned __int8 *)this + 112);
    if ((v4 - 48) <= 9)
    {
      do
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v4 = *((unsigned __int8 *)this + 112);
      }
      while ((v4 - 48) < 0xA);
    }
  }
  v11 = 1;
LABEL_36:
  if ((v4 | 0x20) == 0x65)
  {
    AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    v14 = *((unsigned __int8 *)this + 112);
    if (v14 == 45 || v14 == 43)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v14 = *((unsigned __int8 *)this + 112);
    }
    if ((v14 - 48) > 9)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "\"e\" must be followed by exponent.");
      (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v20 < 0)
        operator delete(__p[0]);
    }
    else
    {
      do
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
    }
    v11 = 1;
  }
  if (*((_BYTE *)this + 164))
  {
    v15 = *((unsigned __int8 *)this + 112);
    if (v15 == 70 || v15 == 102)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v11 = 1;
    }
  }
LABEL_50:
  v16 = *((unsigned __int8 *)this + 112);
  v17 = v16 != 95 && (v16 & 0xFFFFFFDF) - 65 > 0x19;
  if (v17 || !*((_BYTE *)this + 172))
  {
    if (v16 != 46)
      goto LABEL_63;
    if (v11)
      std::string::basic_string[abi:ne180100]<0>(__p, "Already saw decimal point or exponent; can't have another one.");
    else
      std::string::basic_string[abi:ne180100]<0>(__p, "Hex and octal numbers must be integers.");
    (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Need space between number and identifier.");
    (*(void (**)(_QWORD, _QWORD, _QWORD, void **))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  if (v20 < 0)
    operator delete(__p[0]);
LABEL_63:
  if (v11)
    return 4;
  else
    return 3;
}

void sub_18884FDA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::Next(google::protobuf::io::Tokenizer *this)
{
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::io::Tokenizer *v12;
  char v13;
  int v14;
  int v15;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  google::protobuf::io::Tokenizer *v24;
  unsigned __int8 v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  std::string __p;

  *((_DWORD *)this + 12) = *(_DWORD *)this;
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)this + 8));
  *((_QWORD *)this + 10) = *((_QWORD *)this + 4);
  *((_DWORD *)this + 22) = *((_DWORD *)this + 10);
  if (!*((_BYTE *)this + 136))
  {
    while (1)
    {
LABEL_4:
      while (1)
      {
        v2 = *((unsigned __int8 *)this + 112);
        if ((v2 - 9) >= 5 && (_DWORD)v2 != 32)
          break;
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      }
      v3 = *((_DWORD *)this + 42);
      if (v3 != 1)
        break;
      if ((_DWORD)v2 != 35)
        goto LABEL_17;
      do
      {
LABEL_14:
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (!*((_BYTE *)this + 112))
          goto LABEL_47;
      }
      while (*((_BYTE *)this + 112) != 10);
LABEL_16:
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
LABEL_47:
      if (*((_BYTE *)this + 136))
        goto LABEL_2;
    }
    if (!v3 && (_DWORD)v2 == 47)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v4 = *((unsigned __int8 *)this + 112);
      if (v4 != 42)
      {
        if (v4 == 47)
          goto LABEL_14;
        *(_DWORD *)this = 6;
        MEMORY[0x18D7640AC]((char *)this + 8, "/");
        v23 = *((_DWORD *)this + 36);
        *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
        *((_DWORD *)this + 9) = v23 - 1;
        goto LABEL_96;
      }
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v29 = *((_DWORD *)this + 36) - 2;
      v30 = *((_DWORD *)this + 35);
      while (1)
      {
LABEL_26:
        while (1)
        {
          v5 = *((unsigned __int8 *)this + 112);
          if (v5 <= 0x29)
            break;
          if (v5 == 42)
          {
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            v6 = *((unsigned __int8 *)this + 112);
            if (v6 == 47)
              goto LABEL_16;
            goto LABEL_39;
          }
          if (v5 == 47)
          {
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            v6 = *((unsigned __int8 *)this + 112);
            if (v6 == 42)
            {
              std::string::basic_string[abi:ne180100]<0>(&__p, "\"/*\" inside block comment.  Block comments cannot be nested.");
              (*(void (**)(_QWORD, _QWORD, _QWORD, std::string *))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
            }
            else
            {
LABEL_39:
              if (!v6)
                goto LABEL_43;
            }
          }
          else
          {
LABEL_42:
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          }
        }
        if (v5 != 10)
        {
          if (!*((_BYTE *)this + 112))
          {
LABEL_43:
            std::string::basic_string[abi:ne180100]<0>(&__p, "End-of-file inside block comment.");
            (*(void (**)(_QWORD, _QWORD, _QWORD, std::string *))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v8 = *((_QWORD *)this + 13);
            std::string::basic_string[abi:ne180100]<0>(&__p, "  Comment started here.");
            (*(void (**)(uint64_t, _QWORD, _QWORD, std::string *))(*(_QWORD *)v8 + 16))(v8, v30, v29, &__p);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            goto LABEL_47;
          }
          goto LABEL_42;
        }
        while (1)
        {
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          v7 = *((unsigned __int8 *)this + 112);
          if (v7 > 0x2A)
            break;
          if (((1 << v7) & 0x100003A00) == 0)
          {
            if (v7 != 42)
              goto LABEL_26;
            AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            if (*((_BYTE *)this + 112) != 47)
              goto LABEL_26;
            goto LABEL_16;
          }
        }
      }
    }
LABEL_17:
    if (*((_BYTE *)this + 136))
      goto LABEL_2;
    if (v2 <= 0x1F)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, "Invalid control characters encountered in text.");
      (*(void (**)(_QWORD, _QWORD, _QWORD, std::string *))(**((_QWORD **)this + 13) + 16))(*((_QWORD *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      while (1)
      {
        do
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        while (*((unsigned __int8 *)this + 112) - 1 < 0x1F);
        if (*((_BYTE *)this + 136))
          goto LABEL_2;
        if (*((_BYTE *)this + 112))
          goto LABEL_4;
      }
    }
    *(_DWORD *)this = 0;
    if (*((char *)this + 31) < 0)
    {
      **((_BYTE **)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      v2 = *((unsigned __int8 *)this + 112);
    }
    else
    {
      *((_BYTE *)this + 8) = 0;
      *((_BYTE *)this + 31) = 0;
    }
    v10 = *((unsigned int *)this + 35);
    v11 = *((unsigned int *)this + 36);
    *((_DWORD *)this + 8) = v10;
    *((_DWORD *)this + 9) = v11;
    *((_QWORD *)this + 19) = (char *)this + 8;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
    if ((_DWORD)v2 == 95 || (v2 & 0xFFFFFFDF) - 65 <= 0x19)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      v14 = *((unsigned __int8 *)this + 112);
      if (v14 == 95 || (v14 - 48) < 0xA || (v14 & 0xFFFFFFDF) - 65 <= 0x19)
      {
        do
        {
          AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          v15 = *((unsigned __int8 *)this + 112);
        }
        while (v15 == 95 || (v15 - 48) < 0xA || (v15 & 0xFFFFFFDF) - 65 < 0x1A);
      }
      v18 = 2;
      goto LABEL_93;
    }
    if ((_DWORD)v2 == 46)
    {
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (*((unsigned __int8 *)this + 112) - 48 <= 9)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_DWORD *)this + 12) == 2
          && *((_DWORD *)this + 8) == *((_DWORD *)this + 20)
          && *((_DWORD *)this + 9) == *((_DWORD *)this + 22))
        {
          v19 = *((_QWORD *)this + 13);
          v20 = *((unsigned int *)this + 35);
          v21 = (*((_DWORD *)this + 36) - 2);
          std::string::basic_string[abi:ne180100]<0>(&__p, "Need space between identifier and decimal point.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(_QWORD *)v19 + 16))(v19, v20, v21, &__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        v12 = this;
        v13 = 0;
        v22 = 1;
        goto LABEL_82;
      }
    }
    else
    {
      if ((_DWORD)v2 == 48)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v12 = this;
        v13 = 1;
LABEL_81:
        v22 = 0;
LABEL_82:
        v18 = google::protobuf::io::Tokenizer::ConsumeNumber(v12, v13, v22);
LABEL_93:
        *(_DWORD *)this = v18;
        v27 = *((_DWORD *)this + 33);
        v28 = *((int *)this + 40);
        if (v27 != (_DWORD)v28)
          std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((_QWORD *)this + 15) + v28), v27 - (int)v28);
        *((_QWORD *)this + 19) = 0;
        *((_DWORD *)this + 40) = -1;
        v23 = *((_DWORD *)this + 36);
LABEL_96:
        result = 1;
        goto LABEL_51;
      }
      if ((v2 - 48) <= 9)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v12 = this;
        v13 = 0;
        goto LABEL_81;
      }
      if ((_DWORD)v2 == 39)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v24 = this;
        v25 = 39;
        goto LABEL_87;
      }
      if ((_DWORD)v2 == 34)
      {
        AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        v24 = this;
        v25 = 34;
LABEL_87:
        google::protobuf::io::Tokenizer::ConsumeString(v24, v25);
        v18 = 5;
        goto LABEL_93;
      }
      if ((v2 & 0x80) != 0)
      {
        v26 = *((_QWORD *)this + 13);
        google::protobuf::StringPrintf((google::protobuf *)"Interpreting non ascii codepoint %d.", &__p, v2);
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(_QWORD *)v26 + 16))(v26, v10, v11, &__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      AddrObjGoogle::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    v18 = 6;
    goto LABEL_93;
  }
LABEL_2:
  *(_DWORD *)this = 1;
  if (*((char *)this + 31) < 0)
  {
    **((_BYTE **)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    *((_BYTE *)this + 8) = 0;
    *((_BYTE *)this + 31) = 0;
  }
  result = 0;
  v23 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 9) = v23;
LABEL_51:
  *((_DWORD *)this + 10) = v23;
  return result;
}

void sub_1888503C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ParseInteger(unsigned __int8 *a1, unint64_t a2, unint64_t *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unsigned __int8 *v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  if ((a1[23] & 0x80u) == 0)
    v3 = a1;
  else
    v3 = *(unsigned __int8 **)a1;
  LODWORD(v4) = *v3;
  if ((_DWORD)v4 == 48)
  {
    if ((v3[1] | 0x20) == 0x78)
    {
      v5 = v3[2];
      v3 += 2;
      LOBYTE(v4) = v5;
      v6 = 16;
      if (!v5)
      {
LABEL_9:
        v7 = 0;
LABEL_25:
        *a3 = v7;
        return 1;
      }
    }
    else
    {
      LOBYTE(v4) = 48;
      v6 = 8;
    }
  }
  else
  {
    v6 = 10;
    if (!*v3)
      goto LABEL_9;
  }
  v7 = 0;
  v8 = v3 + 1;
  while (1)
  {
    v9 = (char)v4;
    v10 = (v4 - 48);
    v11 = (v9 - 65) >= 0x1A ? -1 : v9 - 55;
    v12 = (v9 - 97) <= 0x19 ? v9 - 87 : v11;
    v13 = v9 - 48;
    v4 = v10 <= 9 ? v13 : v12;
    if (v4 >= v6 || a2 < v4 || v7 > (a2 - v4) / v6)
      return 0;
    v7 = v4 + v7 * v6;
    v14 = *v8++;
    LOBYTE(v4) = v14;
    if (!v14)
      goto LABEL_25;
  }
}

double google::protobuf::io::Tokenizer::ParseFloat(uint64_t a1, uint64_t a2, char **a3)
{
  google::protobuf::internal *v4;
  double v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  std::string *p_p;
  std::string::size_type size;
  std::string __p;
  int v16;
  const char *v17;
  int v18;
  std::string v19;
  char v20[8];

  if (*(char *)(a1 + 23) >= 0)
    v4 = (google::protobuf::internal *)a1;
  else
    v4 = *(google::protobuf::internal **)a1;
  *(_QWORD *)v20 = 0;
  v5 = google::protobuf::internal::NoLocaleStrtod(v4, v20, a3);
  v6 = *(unsigned __int8 **)v20;
  v7 = **(_BYTE **)v20;
  if ((v7 | 0x20) == 0x65)
  {
    v8 = (unsigned __int8 *)++*(_QWORD *)v20;
    v7 = v6[1];
    if (v7 == 45 || v7 == 43)
    {
      v8 = v6 + 2;
      *(_QWORD *)v20 = v6 + 2;
      v7 = v6[2];
    }
    v6 = v8;
  }
  if ((v7 | 0x20) == 0x66)
    *(_QWORD *)v20 = ++v6;
  v9 = v6 - (unsigned __int8 *)v4;
  v10 = *(unsigned __int8 *)(a1 + 23);
  if ((v10 & 0x80u) != 0)
    v10 = *(_QWORD *)(a1 + 8);
  if (v9 != v10 || *(_BYTE *)v4 == 45)
  {
    v16 = 2;
    v17 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/tokenizer.cc";
    v18 = 921;
    memset(&v19, 0, sizeof(v19));
    std::string::append(&v19, " Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: ");
    google::protobuf::CEscape((uint64_t *)a1, v11, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(&v19, (const std::string::value_type *)p_p, size);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_188850638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::Tokenizer::ParseStringAppend(unsigned __int8 *a1, std::string *this, uint64_t a3, unsigned int *a4)
{
  uint64_t v5;
  signed __int8 v6;
  std::string::size_type size;
  std::string::size_type v9;
  const char *v10;
  std::string *p_p;
  std::string::size_type v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  std::string::value_type v18;
  uint64_t v19;
  char v20;
  std::string::value_type v21;
  BOOL v22;
  uint64_t v23;
  char v24;
  int v25;
  std::string::value_type v26;
  std::string::value_type v27;
  unsigned __int8 *v28;
  int v29;
  uint64_t v30;
  int v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  unsigned int data;
  std::string::size_type v45;
  unsigned int v46;
  char v47;
  unsigned __int8 v48;
  int v49;
  char v50;
  char v51;
  unsigned int v52;
  char v53;
  std::string __p;
  unsigned int v55;
  _BYTE v56[12];
  int v57;
  std::string v58;

  v5 = a1[23];
  v6 = v5;
  if ((v5 & 0x80u) != 0)
    v5 = *((_QWORD *)a1 + 1);
  if (v5)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      size = this->__r_.__value_.__l.__size_;
      v9 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    else
    {
      size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      v9 = 22;
    }
    if (size + v5 > v9)
    {
      std::string::reserve(this, size + v5);
      v6 = a1[23];
    }
    if (v6 >= 0)
      v13 = (uint64_t)a1;
    else
      v13 = *(_QWORD *)a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v14 = v13;
          v16 = v13 + 1;
          v15 = *(unsigned __int8 *)(v13 + 1);
          if (v15 == 92)
            break;
          if (!*(_BYTE *)(v13 + 1))
            return;
LABEL_39:
          if ((a1[23] & 0x80u) == 0)
            v28 = a1;
          else
            v28 = *(unsigned __int8 **)a1;
          if (v15 == *v28)
          {
            v13 = v16;
            if (!*(_BYTE *)(v14 + 2))
              continue;
          }
          std::string::push_back(this, v15);
          v13 = v16;
        }
        v13 += 2;
        v17 = *(_BYTE *)(v14 + 2);
        if (!v17)
          goto LABEL_39;
        if ((v17 & 0xF8) == 0x30)
        {
          v18 = v17 - 48;
          v20 = *(_BYTE *)(v14 + 3);
          v19 = v14 + 3;
          v21 = v20 + 8 * (v17 - 48) - 48;
          v22 = (v20 & 0xF8) == 48;
          if ((v20 & 0xF8) == 0x30)
            v23 = v19;
          else
            v23 = v13;
          if (v22)
            v18 = v21;
          v24 = *(_BYTE *)(v23 + 1);
          v25 = v24 & 0xF8;
          v26 = v24 + 8 * v18 - 48;
          if (v25 == 48)
            v13 = v23 + 1;
          else
            v13 = v23;
          if (v25 == 48)
            v18 = v26;
          v27 = v18;
          goto LABEL_72;
        }
        if (v17 == 85 || v17 == 117)
          break;
        if (v17 == 120)
        {
          v31 = *(unsigned __int8 *)(v14 + 3);
          v30 = v14 + 3;
          v29 = v31;
          v32 = v31 - 48;
          v33 = v31 - 97;
          if ((v31 - 48) < 0xA || v33 < 6u)
          {
            if (v32 <= 9u)
              goto LABEL_80;
          }
          else if ((v29 - 65) > 5)
          {
            v32 = 0;
            v30 = v13;
            goto LABEL_80;
          }
          v46 = v33;
          if ((v29 - 65) >= 0x1A)
            v47 = -1;
          else
            v47 = v29 - 55;
          v48 = v29 - 87;
          if (v46 <= 0x19)
            v32 = v48;
          else
            v32 = v47;
LABEL_80:
          v49 = *(unsigned __int8 *)(v30 + 1);
          v50 = v49 - 48;
          if ((v49 - 48) >= 0xA && (v49 - 97) >= 6u)
          {
            if ((v49 - 65) > 5)
              goto LABEL_93;
            v51 = 16 * v32;
LABEL_87:
            v52 = (v49 - 97);
            if ((v49 - 65) >= 0x1A)
              v50 = -1;
            else
              v50 = v49 - 55;
            v53 = v49 - 87;
            if (v52 <= 0x19)
              v50 = v53;
            goto LABEL_92;
          }
          v51 = 16 * v32;
          if ((v49 - 48) > 9u)
            goto LABEL_87;
LABEL_92:
          v32 = v50 + v51;
          ++v30;
LABEL_93:
          std::string::push_back(this, v32);
          v13 = v30;
        }
        else
        {
          if (v17 > 97)
          {
            switch(v17)
            {
              case 'n':
                v27 = 10;
                break;
              case 'o':
              case 'p':
              case 'q':
              case 's':
              case 'u':
                goto LABEL_108;
              case 'r':
                v27 = 13;
                break;
              case 't':
                v27 = 9;
                break;
              case 'v':
                v27 = 11;
                break;
              default:
                if (v17 == 102)
                {
                  v27 = 12;
                }
                else
                {
                  if (v17 != 98)
                    goto LABEL_108;
                  v27 = 8;
                }
                break;
            }
          }
          else if (v17 <= 62)
          {
            if (v17 != 34)
            {
              if (v17 == 39)
              {
                v27 = 39;
                goto LABEL_72;
              }
              goto LABEL_108;
            }
            v27 = 34;
          }
          else
          {
            if (v17 == 63)
              goto LABEL_108;
            if (v17 != 92)
            {
              if (v17 == 97)
              {
                v27 = 7;
                goto LABEL_72;
              }
LABEL_108:
              v27 = 63;
              goto LABEL_72;
            }
            v27 = 92;
          }
LABEL_72:
          std::string::push_back(this, v27);
        }
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      v34 = *(unsigned __int8 *)(v14 + 2);
      if (v34 == 117)
        v35 = 4;
      else
        v35 = 8 * (v34 == 85);
      if (!google::protobuf::io::ReadHexDigits((google::protobuf::io *)(v14 + 3), (const char *)v35, (unsigned int *)&__p, a4))
      {
        v27 = *(_BYTE *)v13;
        goto LABEL_72;
      }
      v42 = v35 | 3;
      v43 = (_BYTE *)(v14 + v42);
      data = __p.__r_.__value_.__l.__data_;
      if (LODWORD(__p.__r_.__value_.__l.__data_) >> 10 == 54)
      {
        if (*v43 == 92 && v43[1] == 117)
        {
          v55 = 0;
          if (google::protobuf::io::ReadHexDigits((google::protobuf::io *)(v43 + 2), (const char *)4, &v55, v37)
            && v55 >> 10 == 55)
          {
            data = ((v55 - 56320) | ((data << 10) - 56623104)) + 0x10000;
            LODWORD(__p.__r_.__value_.__l.__data_) = data;
            v42 += 6;
          }
        }
        v43 = (_BYTE *)(v14 + v42);
      }
      else
      {
        if (LODWORD(__p.__r_.__value_.__l.__data_) < 0x80)
        {
          v45 = 1;
          goto LABEL_100;
        }
        if (LODWORD(__p.__r_.__value_.__l.__data_) <= 0x7FF)
        {
          data = (4 * LODWORD(__p.__r_.__value_.__l.__data_)) & 0x1F00 | __p.__r_.__value_.__s.__data_[0] & 0x3F | 0xC080;
          v45 = 2;
          goto LABEL_100;
        }
      }
      if (!HIWORD(data))
      {
        data = (4 * data) & 0x3F00 | data & 0x3F | ((unsigned __int16)data >> 12 << 16) | 0xE08080;
        v45 = 3;
LABEL_100:
        v55 = bswap32(data);
        std::string::append(this, &v56[-v45], v45);
        goto LABEL_101;
      }
      if (HIWORD(data) <= 0x10u)
      {
        data = (16 * data) & 0x3F0000 | data & 0x3F | (((data >> 18) & 7) << 24) | (((data >> 6) & 0x3F) << 8) | 0xF0808080;
        v45 = 4;
        goto LABEL_100;
      }
      AddrObjGoogle::protobuf::StringAppendF(this, "\\U%08x", v36, (uint64_t)v37, v38, v39, v40, v41, data);
LABEL_101:
      v13 = (uint64_t)(v43 - 1);
    }
  }
  v55 = 2;
  *(_QWORD *)&v56[4] = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/io/tokenizer.cc";
  v57 = 1042;
  memset(&v58, 0, sizeof(v58));
  std::string::append(&v58, " Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: ");
  google::protobuf::CEscape((uint64_t *)a1, v10, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v12 = __p.__r_.__value_.__l.__size_;
  std::string::append(&v58, (const std::string::value_type *)p_p, v12);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v55);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v58.__r_.__value_.__l.__data_);
}

void sub_188850BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a15 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::Tokenizer::IsIdentifier(uint64_t a1)
{
  uint64_t v1;
  int v3;
  _BOOL8 v5;
  std::string::size_type size;
  std::string *p_p;
  int v8;
  uint64_t v11;
  std::string::size_type v12;
  int v13;
  BOOL v14;
  std::string __p;
  char v18;

  v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0)
    v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v3 = *(unsigned __int8 *)std::string::at((const std::string *)a1, 0);
  if (v3 != 95 && (v3 & 0xFFFFFFDF) - 65 > 0x19)
    return 0;
  v5 = 1;
  std::string::basic_string(&__p, (const std::string *)a1, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v18);
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (!size)
    goto LABEL_31;
  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  v8 = p_p->__r_.__value_.__s.__data_[0];
  if (v8 == 95 || (v8 - 48) < 0xA || (v8 & 0xFFFFFFDF) - 65 <= 0x19)
  {
    v11 = 1;
    do
    {
      v12 = v11;
      if (size == v11)
        break;
      v13 = p_p->__r_.__value_.__s.__data_[v11++];
      v14 = v13 != 95 && (v13 - 48) >= 0xA;
    }
    while (!v14 || (v13 & 0xFFFFFFDF) - 65 < 0x1A);
    v5 = size <= v12;
LABEL_31:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_36;
    return v5;
  }
  v5 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
LABEL_36:
    operator delete(__p.__r_.__value_.__l.__data_);
  return v5;
}

BOOL google::protobuf::io::ReadHexDigits(google::protobuf::io *this, const char *a2, unsigned int *a3, unsigned int *a4)
{
  unsigned int v4;
  google::protobuf::io *v5;
  int v6;
  _BOOL8 v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;

  *a3 = 0;
  if (!(_DWORD)a2)
    return 0;
  v4 = 0;
  v5 = (google::protobuf::io *)((char *)this + a2);
  do
  {
    v6 = *(char *)this;
    v7 = *(_BYTE *)this != 0;
    if (!*(_BYTE *)this)
      break;
    v8 = 16 * v4;
    v9 = v6 - 48;
    v10 = v6 - 97;
    if ((v6 - 65) >= 0x1A)
      v11 = -1;
    else
      v11 = v6 - 55;
    v12 = v6 - 87;
    if (v10 > 0x19)
      v12 = v11;
    if (v9 <= 9)
      v12 = v9;
    v4 = v12 + v8;
    *a3 = v4;
    this = (google::protobuf::io *)((char *)this + 1);
  }
  while (this < v5);
  return v7;
}

uint64_t google::protobuf::internal::ParseAnyTypeUrl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2 < 1)
    return 0;
  v18 = v4;
  v19 = v5;
  v10 = 0;
  while (*(_BYTE *)(a1 + a2 - 1 + v10) != 47)
  {
    --v10;
    if ((unint64_t)(a2 + v10 + 1) < 2)
      return 0;
  }
  if (!v10)
    return 0;
  v12 = a2 + v10;
  if (a2 >= v12)
    v13 = v12;
  else
    v13 = a2;
  if (a3)
  {
    v14 = a1;
    v15 = v13;
    google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v14, &v16);
    if (*(char *)(a3 + 23) < 0)
      operator delete(*(void **)a3);
    *(_OWORD *)a3 = v16;
    *(_QWORD *)(a3 + 16) = v17;
  }
  v14 = a1 + v13;
  v15 = a2 - v13;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v14, &v16);
  if (*(char *)(a4 + 23) < 0)
    operator delete(*(void **)a4);
  *(_OWORD *)a4 = v16;
  *(_QWORD *)(a4 + 16) = v17;
  return 1;
}

uint64_t google::protobuf::StringPrintf@<X0>(google::protobuf *this@<X0>, std::string *a2@<X8>, ...)
{
  va_list va;

  va_start(va, a2);
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return AddrObjGoogle::protobuf::StringAppendV(a2, (char *)this, va);
}

void sub_188850EEC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::MapFieldBase::~MapFieldBase(google::protobuf::internal::MapFieldBase *this)
{
  uint64_t v2;

  *(_QWORD *)this = off_1E1BF8990;
  v2 = *((_QWORD *)this + 2);
  if (v2 && !*((_QWORD *)this + 1))
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*((_QWORD **)this + 2));
    MEMORY[0x18D76437C](v2, 0x1020C4014030ADELL);
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 24));
}

void google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(google::protobuf::internal::MapFieldBase *this)
{
  unsigned int v2;
  std::mutex *v3;
  uint64_t v4;
  _QWORD *AlignedAndAddCleanup;

  v2 = atomic_load((unsigned int *)this + 22);
  if (v2 == 2)
  {
    v3 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (*((_DWORD *)this + 22) == 2)
    {
      if (!*((_QWORD *)this + 2))
      {
        v4 = *((_QWORD *)this + 1);
        if (v4)
        {
          if ((*(_BYTE *)(v4 + 24) & 1) != 0)
          AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v4, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>);
          AlignedAndAddCleanup[2] = 0;
          *AlignedAndAddCleanup = v4;
        }
        else
        {
          AlignedAndAddCleanup = (_QWORD *)operator new();
          AlignedAndAddCleanup[2] = 0;
          *AlignedAndAddCleanup = 0;
        }
        AlignedAndAddCleanup[1] = 0;
        *((_QWORD *)this + 2) = AlignedAndAddCleanup;
      }
      goto LABEL_14;
    }
LABEL_15:
    std::mutex::unlock(v3);
    return;
  }
  if (!v2)
  {
    v3 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (!*((_DWORD *)this + 22))
    {
      (*(void (**)(google::protobuf::internal::MapFieldBase *))(*(_QWORD *)this + 112))(this);
LABEL_14:
      atomic_store(2u, (unsigned int *)this + 22);
      goto LABEL_15;
    }
    goto LABEL_15;
  }
}

uint64_t google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfNoLock(google::protobuf::internal::MapFieldBase *this)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;

  v1 = *((_QWORD *)this + 2);
  if (!v1)
    return 0;
  v2 = 8 * *(int *)(v1 + 12);
  v3 = *(int **)(v1 + 16);
  if (v3)
  {
    if (*v3 >= 1)
    {
      v4 = 0;
      do
      {
        v2 += (*(uint64_t (**)(_QWORD))(**(_QWORD **)&v3[2 * v4 + 2] + 136))(*(_QWORD *)&v3[2 * v4 + 2]);
        ++v4;
        v3 = *(int **)(v1 + 16);
      }
      while (v4 < *v3);
    }
    v2 += 8;
  }
  return v2;
}

_QWORD *google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMapNoLock(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;

  if (!this[2])
  {
    v1 = this;
    v2 = this[1];
    if (v2)
    {
      if ((*(_BYTE *)(v2 + 24) & 1) != 0)
      this = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v2, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>);
      this[2] = 0;
      *this = v2;
    }
    else
    {
      this = (_QWORD *)operator new();
      this[2] = 0;
      *this = 0;
    }
    this[1] = 0;
    v1[2] = this;
  }
  return this;
}

void google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(google::protobuf::internal::MapFieldBase *this)
{
  unsigned int v1;
  std::mutex *v3;

  v1 = atomic_load((unsigned int *)this + 22);
  if (v1 == 1)
  {
    v3 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (*((_DWORD *)this + 22) == 1)
    {
      (*(void (**)(google::protobuf::internal::MapFieldBase *))(*(_QWORD *)this + 120))(this);
      atomic_store(2u, (unsigned int *)this + 22);
    }
    std::mutex::unlock(v3);
  }
}

void google::protobuf::internal::DynamicMapField::~DynamicMapField(google::protobuf::internal::DynamicMapField *this)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  char *v8;
  unint64_t v9;

  *(_QWORD *)this = &off_1E1BF8A40;
  v2 = (char *)this + 96;
  v3 = *((_QWORD *)this + 15);
  v4 = *((_QWORD *)this + 13);
  if (v4 > v3)
  {
    v5 = *((_QWORD *)this + 16);
    while (1)
    {
      v6 = *(_DWORD **)(v5 + 8 * v3);
      if (v6)
        break;
      if (v4 == ++v3)
        goto LABEL_10;
    }
    if (v6 == *(_DWORD **)(v5 + 8 * (v3 ^ 1)))
    {
      v6 = *(_DWORD **)(*(_QWORD *)v6 + 40);
      v7 = v6;
      v8 = (char *)this + 96;
      v9 = v3;
      if (!v6)
        goto LABEL_10;
    }
    else
    {
      v7 = *(_DWORD **)(v5 + 8 * v3);
      v8 = (char *)this + 96;
      v9 = v3;
    }
    do
    {
      google::protobuf::MapValueRef::DeleteData(v6 + 8);
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v7);
      v6 = v7;
    }
    while (v7);
  }
LABEL_10:
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)v2);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap((uint64_t)v2);
  google::protobuf::internal::MapFieldBase::~MapFieldBase(this);
}

{
  google::protobuf::internal::DynamicMapField::~DynamicMapField(this);
  JUMPOUT(0x18D76437CLL);
}

_DWORD *google::protobuf::MapValueRef::DeleteData(_DWORD *this)
{
  uint64_t v1;

  switch(this[2])
  {
    case 1:
    case 3:
    case 6:
    case 8:
      this = *(_DWORD **)this;
      if (this)
        goto LABEL_15;
      return this;
    case 2:
    case 4:
    case 5:
      this = *(_DWORD **)this;
      if (this)
        goto LABEL_15;
      return this;
    case 7:
      this = *(_DWORD **)this;
      if (this)
        goto LABEL_15;
      return this;
    case 9:
      v1 = *(_QWORD *)this;
      if (!*(_QWORD *)this)
        return this;
      if (*(char *)(v1 + 23) < 0)
        operator delete(*(void **)v1);
LABEL_15:
      JUMPOUT(0x18D76437CLL);
    case 0xA:
      this = *(_DWORD **)this;
      if (this)
        return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)this + 8))(this);
      return this;
    default:
      return this;
  }
}

uint64_t google::protobuf::internal::DynamicMapField::size(google::protobuf::internal::DynamicMapField *this)
{
  return *(unsigned int *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(_QWORD *)this + 160))(this);
}

uint64_t google::protobuf::internal::DynamicMapField::Clear(google::protobuf::internal::DynamicMapField *this)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _DWORD *v12;
  char *v13;
  unint64_t v14;

  v2 = (char *)this + 96;
  if (!*((_QWORD *)this + 1))
  {
    v3 = *((_QWORD *)this + 15);
    v4 = *((_QWORD *)this + 13);
    if (v4 > v3)
    {
      v5 = *((_QWORD *)this + 16);
      while (1)
      {
        v6 = *(_DWORD **)(v5 + 8 * v3);
        if (v6)
          break;
        if (v4 == ++v3)
          goto LABEL_11;
      }
      if (v6 == *(_DWORD **)(v5 + 8 * (v3 ^ 1)))
      {
        v6 = *(_DWORD **)(*(_QWORD *)v6 + 40);
        v12 = v6;
        v13 = (char *)this + 96;
        v14 = v3;
        if (!v6)
          goto LABEL_11;
      }
      else
      {
        v12 = *(_DWORD **)(v5 + 8 * v3);
        v13 = (char *)this + 96;
        v14 = v3;
      }
      do
      {
        google::protobuf::MapValueRef::DeleteData(v6 + 8);
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v12);
        v6 = v12;
      }
      while (v12);
    }
  }
LABEL_11:
  result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)v2);
  v8 = *((_QWORD *)this + 2);
  if (v8)
  {
    v9 = *(unsigned int *)(v8 + 8);
    if ((int)v9 >= 1)
    {
      v10 = (uint64_t *)(*(_QWORD *)(v8 + 16) + 8);
      do
      {
        v11 = *v10++;
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 40))(v11);
        --v9;
      }
      while (v9);
      *(_DWORD *)(v8 + 8) = 0;
    }
  }
  *((_DWORD *)this + 22) = 0;
  return result;
}

BOOL google::protobuf::internal::DynamicMapField::ContainsMapKey(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2)
{
  unsigned __int8 *v3;
  unsigned __int8 *v5;

  v3 = (unsigned __int8 *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(_QWORD *)this + 160))(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v5, v3, a2, 0);
  return v5 != 0;
}

void google::protobuf::internal::DynamicMapField::AllocateMapValue(google::protobuf::internal::DynamicMapField *this, google::protobuf::MapValueRef *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  void (*v14)(void);
  _QWORD *Aligned;
  uint64_t v16;
  uint64_t v17;
  google::protobuf::_anonymous_namespace_ **v18;
  const char *v19;
  uint64_t Message;
  uint64_t v21;
  void (*v22)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v23)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v24)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v25;

  v4 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  if (*(_BYTE *)(*(_QWORD *)(v4 + 32) + 75))
    v5 = *(_QWORD *)(v4 + 40) + 152;
  else
    v5 = 0;
  v6 = *(unint64_t **)(v5 + 48);
  if (v6)
  {
    v21 = v5;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v7 = atomic_load(v6);
    if (v7 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v6, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v8 = *(unint64_t **)(v5 + 48);
    v9 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    *((_DWORD *)a2 + 2) = v9;
    if (v8)
    {
      v21 = v5;
      v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v10 = atomic_load(v8);
      if (v10 != -1)
      {
        v24 = &v22;
        v25 = &v21;
        v23 = &v24;
        std::__call_once(v8, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v9 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    }
  }
  else
  {
    v9 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    *((_DWORD *)a2 + 2) = v9;
  }
  switch(v9)
  {
    case 1:
    case 8:
      v11 = *((_QWORD *)this + 1);
      if (!v11)
        goto LABEL_33;
      if ((*(_BYTE *)(v11 + 24) & 1) == 0)
        goto LABEL_32;
      v12 = *(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v11 + 32) + 32) + 40);
      goto LABEL_52;
    case 2:
      v13 = *((_QWORD *)this + 1);
      if (!v13)
        goto LABEL_28;
      if ((*(_BYTE *)(v13 + 24) & 1) == 0)
        goto LABEL_27;
      v14 = *(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v13 + 32) + 32) + 40);
      goto LABEL_50;
    case 3:
      v11 = *((_QWORD *)this + 1);
      if (!v11)
        goto LABEL_33;
      if ((*(_BYTE *)(v11 + 24) & 1) == 0)
        goto LABEL_32;
      v12 = *(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v11 + 32) + 32) + 40);
      goto LABEL_52;
    case 4:
      v13 = *((_QWORD *)this + 1);
      if (!v13)
        goto LABEL_28;
      if ((*(_BYTE *)(v13 + 24) & 1) == 0)
        goto LABEL_27;
      v14 = *(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v13 + 32) + 32) + 40);
      goto LABEL_50;
    case 5:
      v13 = *((_QWORD *)this + 1);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 24) & 1) != 0)
        {
          v14 = *(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v13 + 32) + 32) + 40);
LABEL_50:
          v14();
        }
LABEL_27:
        Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v13, 8uLL);
      }
      else
      {
LABEL_28:
        Aligned = (_QWORD *)operator new();
      }
      *Aligned = 0;
      break;
    case 6:
      v11 = *((_QWORD *)this + 1);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 24) & 1) != 0)
        {
          v12 = *(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v11 + 32) + 32) + 40);
LABEL_52:
          v12();
        }
LABEL_32:
        Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v11, 8uLL);
      }
      else
      {
LABEL_33:
        Aligned = (_QWORD *)operator new();
      }
      *(_DWORD *)Aligned = 0;
      break;
    case 7:
      v16 = *((_QWORD *)this + 1);
      if (v16)
      {
        if ((*(_BYTE *)(v16 + 24) & 1) != 0)
          (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v16 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v16 + 32) + 32), MEMORY[0x1E0DE4EC0], 8);
        Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v16, 8uLL);
      }
      else
      {
        Aligned = (_QWORD *)operator new();
      }
      *(_BYTE *)Aligned = 0;
      break;
    case 9:
      v17 = *((_QWORD *)this + 1);
      if (v17)
      {
        if ((*(_BYTE *)(v17 + 24) & 1) != 0)
        Aligned = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      else
      {
        Aligned = (_QWORD *)operator new();
      }
      *Aligned = 0;
      Aligned[1] = 0;
      Aligned[2] = 0;
      break;
    case 10:
      (*(void (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
      Message = google::protobuf::Reflection::GetMessage(v18, *((const google::protobuf::Message **)this + 18), (const google::protobuf::FieldDescriptor *)v5, 0, v19);
      Aligned = (_QWORD *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)Message + 32))(Message, *((_QWORD *)this + 1));
      break;
    default:
      return;
  }
  *(_QWORD *)a2 = Aligned;
}

BOOL google::protobuf::internal::DynamicMapField::InsertOrLookupMapValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2, google::protobuf::MapValueRef *a3)
{
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  _BOOL8 result;
  unsigned __int8 *v10[4];

  v6 = (unsigned __int8 *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(_QWORD *)this + 168))(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(v10, v6, a2, 0);
  v7 = v10[0];
  if (v10[0])
  {
    v8 = v10[0];
  }
  else
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)v10, (unint64_t)this + 96, a2);
    v8 = v10[0];
    google::protobuf::internal::DynamicMapField::AllocateMapValue(this, (google::protobuf::MapValueRef *)(v10[0] + 32));
  }
  result = v7 == 0;
  *((_DWORD *)a3 + 2) = *((_DWORD *)v8 + 10);
  *(_QWORD *)a3 = *((_QWORD *)v8 + 4);
  return result;
}

BOOL google::protobuf::internal::DynamicMapField::LookupMapValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2, google::protobuf::MapValueConstRef *a3)
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v8;

  v5 = (unsigned __int8 *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(_QWORD *)this + 160))(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v8, v5, a2, 0);
  v6 = v8;
  if (v8)
  {
    *((_DWORD *)a3 + 2) = *((_DWORD *)v8 + 10);
    *(_QWORD *)a3 = *((_QWORD *)v6 + 4);
  }
  return v6 != 0;
}

BOOL google::protobuf::internal::DynamicMapField::DeleteMapValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  uint64_t *v21;

  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(this);
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v19, (unsigned __int8 *)this + 96, a2, 0);
  v4 = v19;
  v5 = v19;
  if (!(_QWORD)v19)
    return v5 != 0;
  v6 = v20;
  *((_DWORD *)this + 22) = 0;
  if (!*((_QWORD *)this + 1))
  {
    v16 = v4;
    google::protobuf::MapValueRef::DeleteData((_DWORD *)(v5 + 32));
    v4 = v16;
  }
  v17 = v4;
  v18 = v6;
  v19 = v4;
  v20 = v6;
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v17);
  v21 = 0;
  v7 = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::revalidate_if_necessary((uint64_t)&v19, &v21);
  v8 = v20;
  v9 = v19;
  v10 = *((_QWORD *)this + 16);
  v11 = *(_QWORD *)(v10 + 8 * v20);
  if (v7)
  {
    v12 = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList(v19, *(_QWORD *)(v10 + 8 * v20));
LABEL_8:
    *(_QWORD *)(*((_QWORD *)this + 16) + 8 * v8) = v12;
    goto LABEL_9;
  }
  std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::erase(*(_QWORD *)(v10 + 8 * v20), v21);
  if (!*(_QWORD *)(v11 + 24))
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(*((_QWORD *)this + 17), v11);
    v12 = 0;
    *(_QWORD *)(*((_QWORD *)this + 16) + ((8 * v8) | 8)) = 0;
    v8 &= ~1uLL;
    goto LABEL_8;
  }
LABEL_9:
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(*((_QWORD *)this + 17), v9);
  --*((_QWORD *)this + 12);
  if (v8 == *((_QWORD *)this + 15))
  {
    v14 = *((_QWORD *)this + 13);
    if (v8 < v14)
    {
      v15 = *((_QWORD *)this + 16);
      do
      {
        if (*(_QWORD *)(v15 + 8 * v8))
          break;
        *((_QWORD *)this + 15) = ++v8;
      }
      while (v14 != v8);
    }
  }
  return v5 != 0;
}

uint64_t google::protobuf::internal::DynamicMapField::GetMap(google::protobuf::internal::DynamicMapField *this)
{
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(this);
  return (uint64_t)this + 96;
}

uint64_t google::protobuf::internal::DynamicMapField::MutableMap(google::protobuf::internal::DynamicMapField *this)
{
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(this);
  *((_DWORD *)this + 22) = 0;
  return (uint64_t)this + 96;
}

void google::protobuf::internal::DynamicMapField::SetMapIteratorValue(google::protobuf::internal::DynamicMapField *this, const google::protobuf::MapKey ***a2)
{
  const google::protobuf::MapKey *v2;

  v2 = **a2;
  if (v2)
  {
    google::protobuf::MapKey::CopyFrom((std::string *)(a2 + 2), **a2);
    *((_DWORD *)a2 + 14) = *((_DWORD *)v2 + 10);
    a2[6] = (const google::protobuf::MapKey **)*((_QWORD *)v2 + 4);
  }
}

void google::protobuf::MapKey::CopyFrom(std::string *this, const google::protobuf::MapKey *a2)
{
  int v4;
  int v5;
  const char *v6;
  int v7;
  std::string __p;

  v4 = google::protobuf::MapKey::type(a2);
  google::protobuf::MapKey::SetType((uint64_t)this, v4);
  switch(LODWORD(this[1].__r_.__value_.__l.__data_))
  {
    case 1:
    case 3:
      LODWORD(this->__r_.__value_.__l.__data_) = *(_DWORD *)a2;
      break;
    case 2:
    case 4:
      this->__r_.__value_.__r.__words[0] = *(_QWORD *)a2;
      break;
    case 5:
    case 6:
    case 8:
    case 0xA:
      v5 = 3;
      v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      v7 = 213;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      break;
    case 7:
      this->__r_.__value_.__s.__data_[0] = *(_BYTE *)a2;
      break;
    case 9:
      std::string::operator=(this, (const std::string *)a2);
      break;
    default:
      return;
  }
}

void sub_188851CFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

google::protobuf::MapKey **google::protobuf::internal::DynamicMapField::MergeFrom(google::protobuf::internal::DynamicMapField *this, const google::protobuf::internal::MapFieldBase *a2)
{
  google::protobuf::MapKey **result;
  unint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  google::protobuf::MapKey *v9;
  google::protobuf::MapValueConstRef *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  int Int32Value;
  int v15;
  uint64_t Int64Value;
  int v17;
  int v18;
  int v19;
  double DoubleValue;
  int v21;
  float FloatValue;
  int v23;
  char BoolValue;
  int v25;
  int v26;
  const std::string *StringValue;
  int v28;
  uint64_t v29;
  uint64_t MessageValue;
  google::protobuf::MapKey *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v36)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v37)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  const char *v38;
  int v39;
  std::string __p;

  result = (google::protobuf::MapKey **)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(_QWORD *)this + 168))(this);
  v5 = *((_QWORD *)a2 + 15);
  v6 = *((_QWORD *)a2 + 13);
  if (v6 > v5)
  {
    v7 = (unsigned __int8 *)result;
    v8 = *((_QWORD *)a2 + 16);
    while (1)
    {
      v9 = *(google::protobuf::MapKey **)(v8 + 8 * v5);
      if (v9)
        break;
      if (v6 == ++v5)
        return result;
    }
    if (v9 == *(google::protobuf::MapKey **)(v8 + 8 * (v5 ^ 1)))
    {
      v9 = *(google::protobuf::MapKey **)(*(_QWORD *)v9 + 40);
      v31 = v9;
      v32 = (char *)a2 + 96;
      v33 = v5;
      if (!v9)
        return result;
    }
    else
    {
      v31 = *(google::protobuf::MapKey **)(v8 + 8 * v5);
      v32 = (char *)a2 + 96;
      v33 = v5;
    }
    do
    {
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v37, v7, v9, 0);
      if (v37)
      {
        v10 = (google::protobuf::MapValueConstRef *)(v37 + 4);
      }
      else
      {
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)&v37, (unint64_t)this + 96, v31);
        v10 = (google::protobuf::MapValueConstRef *)(v37 + 4);
        google::protobuf::internal::DynamicMapField::AllocateMapValue(this, (google::protobuf::MapValueRef *)(v37 + 4));
      }
      v11 = *(_QWORD *)((*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18))
                      + 40);
      v12 = *(unint64_t **)(v11 + 200);
      if (v12)
      {
        v34 = v11 + 152;
        v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v13 = atomic_load(v12);
        if (v13 != -1)
        {
          v36 = &v37;
          v37 = &v35;
          v38 = (const char *)&v34;
          std::__call_once(v12, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v11 + 208))
      {
        case 1:
          DoubleValue = google::protobuf::MapValueConstRef::GetDoubleValue((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 5)
          {
            LODWORD(v37) = 3;
            v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            v39 = 808;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetDoubleValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "double");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            v21 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v21]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
          **(double **)v10 = DoubleValue;
          goto LABEL_49;
        case 2:
          FloatValue = google::protobuf::MapValueConstRef::GetFloatValue((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 6)
          {
            LODWORD(v37) = 3;
            v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            v39 = 804;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetFloatValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "float");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            v23 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v23]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
          **(float **)v10 = FloatValue;
          goto LABEL_49;
        case 3:
        case 0x10:
        case 0x12:
          Int64Value = google::protobuf::MapValueConstRef::GetInt64Value((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 2)
            goto LABEL_26;
          LODWORD(v37) = 3;
          v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          v39 = 775;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetInt64Value");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "int64");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          v17 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v17]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
          goto LABEL_24;
        case 4:
        case 6:
          Int64Value = google::protobuf::MapValueConstRef::GetUInt64Value((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 4)
          {
            LODWORD(v37) = 3;
            v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            v39 = 779;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetUInt64Value");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "uint64");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            v19 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v19]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
LABEL_24:
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
LABEL_26:
          **(_QWORD **)v10 = Int64Value;
          goto LABEL_49;
        case 5:
        case 0xF:
        case 0x11:
          Int32Value = google::protobuf::MapValueConstRef::GetInt32Value((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 1)
            goto LABEL_43;
          LODWORD(v37) = 3;
          v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          v39 = 783;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetInt32Value");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "int32");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          v15 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v15]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
          break;
        case 7:
        case 0xD:
          Int32Value = google::protobuf::MapValueConstRef::GetUInt32Value((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 3)
            goto LABEL_43;
          LODWORD(v37) = 3;
          v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          v39 = 787;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetUInt32Value");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "uint32");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          v18 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v18]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
          break;
        case 8:
          BoolValue = google::protobuf::MapValueConstRef::GetBoolValue((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 7)
          {
            LODWORD(v37) = 3;
            v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            v39 = 791;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetBoolValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "BOOL");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            v25 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v25]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
          **(_BYTE **)v10 = BoolValue;
          goto LABEL_49;
        case 9:
        case 0xC:
          StringValue = (const std::string *)google::protobuf::MapValueConstRef::GetStringValue((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) != 9)
          {
            LODWORD(v37) = 3;
            v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
            v39 = 800;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Protocol Buffer map usage error:\n");
            std::string::append(&__p, "MapValueRef::SetStringValue");
            std::string::append(&__p, " type does not match\n");
            std::string::append(&__p, "  Expected : ");
            std::string::append(&__p, "string");
            std::string::append(&__p, "\n");
            std::string::append(&__p, "  Actual   : ");
            v28 = google::protobuf::MapValueConstRef::type(v10);
            std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v28]);
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
          std::string::operator=(*(std::string **)v10, StringValue);
          goto LABEL_49;
        case 0xA:
        case 0xB:
          v29 = google::protobuf::MapValueRef::MutableMessageValue(v10);
          MessageValue = google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapKey *)((char *)v31 + 32));
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v29 + 112))(v29, MessageValue);
          goto LABEL_49;
        case 0xE:
          Int32Value = google::protobuf::MapValueConstRef::GetEnumValue((google::protobuf::MapKey *)((char *)v31 + 32));
          if (google::protobuf::MapValueConstRef::type(v10) == 8)
            goto LABEL_43;
          LODWORD(v37) = 3;
          v38 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          v39 = 796;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Protocol Buffer map usage error:\n");
          std::string::append(&__p, "MapValueRef::SetEnumValue");
          std::string::append(&__p, " type does not match\n");
          std::string::append(&__p, "  Expected : ");
          std::string::append(&__p, "enum");
          std::string::append(&__p, "\n");
          std::string::append(&__p, "  Actual   : ");
          v26 = google::protobuf::MapValueConstRef::type(v10);
          std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v26]);
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v37);
          break;
        default:
          goto LABEL_49;
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
LABEL_43:
      **(_DWORD **)v10 = Int32Value;
LABEL_49:
      result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(&v31);
      v9 = v31;
    }
    while (v31);
  }
  return result;
}

void sub_188852744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

google::protobuf::MapKey **google::protobuf::internal::DynamicMapField::Swap(google::protobuf::MapKey **this, google::protobuf::internal::MapFieldBase *a2)
{
  google::protobuf::MapKey **v3;
  google::protobuf::MapKey *v4;
  google::protobuf::MapKey *v5;
  google::protobuf::MapKey *v6;
  google::protobuf::MapKey *v7;
  uint64_t v8;
  google::protobuf::MapKey *v9;
  google::protobuf::MapKey *v10;
  google::protobuf::MapKey *v11;
  google::protobuf::MapKey *v12;
  google::protobuf::MapKey *v13;
  google::protobuf::MapKey *v14;
  int v15;
  _OWORD v16[2];
  void *v17;
  uint64_t v18;
  _QWORD v19[3];
  __int128 v20;
  google::protobuf::MapKey *v21;

  v3 = this;
  v4 = this[2];
  this[2] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = v4;
  if (this[17] == *((google::protobuf::MapKey **)a2 + 17))
  {
    v9 = this[12];
    this[12] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v9;
    v10 = this[13];
    this[13] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v10;
    v11 = this[14];
    this[14] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v11;
    v12 = this[15];
    this[15] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v12;
    v13 = this[16];
    this[16] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v13;
    v14 = this[17];
    this[17] = (google::protobuf::MapKey *)*((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v14;
  }
  else
  {
    v16[0] = xmmword_189CBCB90;
    v16[1] = xmmword_189CBCB90;
    v17 = &google::protobuf::internal::kGlobalEmptyTable;
    v18 = 0;
    v5 = this[15];
    v6 = this[13];
    if (v6 <= v5)
    {
      v8 = 0;
    }
    else
    {
      v7 = this[16];
      while (1)
      {
        v8 = *((_QWORD *)v7 + (_QWORD)v5);
        if (v8)
          break;
        v5 = (google::protobuf::MapKey *)((char *)v5 + 1);
        if (v6 == v5)
        {
          v8 = 0;
          v5 = this[13];
          goto LABEL_11;
        }
      }
      if (v8 == *((_QWORD *)v7 + ((unint64_t)v5 ^ 1)))
        v8 = *(_QWORD *)(*(_QWORD *)v8 + 40);
    }
LABEL_11:
    *(_QWORD *)&v20 = v8;
    *((_QWORD *)&v20 + 1) = this + 12;
    v21 = v5;
    memset(v19, 0, sizeof(v19));
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>((google::protobuf::MapKey **)v16, &v20, v19);
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::operator=(v3 + 12, (google::protobuf::MapKey **)a2 + 12);
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::operator=((google::protobuf::MapKey **)a2 + 12, (google::protobuf::MapKey **)v16);
    this = (google::protobuf::MapKey **)google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap((uint64_t)v16);
  }
  v15 = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = *((_DWORD *)v3 + 22);
  *((_DWORD *)v3 + 22) = v15;
  return this;
}

void sub_18885291C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::DynamicMapField::SyncRepeatedFieldWithMapNoLock(google::protobuf::internal::DynamicMapField *this)
{
  google::protobuf::_anonymous_namespace_ **v2;
  google::protobuf::_anonymous_namespace_ **v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  google::protobuf::Message *v17;
  google::protobuf::MapKey *v18;
  unint64_t *v19;
  unint64_t v20;
  void *v21;
  int Int32Value;
  const char *v23;
  uint64_t Int64Value;
  const char *v25;
  int UInt32Value;
  const char *v27;
  uint64_t UInt64Value;
  const char *v29;
  char BoolValue;
  const char *v31;
  google::protobuf::MapKey *StringValue;
  const char *v33;
  __int128 v34;
  google::protobuf::MapKey *v35;
  unint64_t *v36;
  unint64_t v37;
  google::protobuf::MapValueConstRef *v38;
  int v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  int v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  double DoubleValue;
  uint64_t v48;
  const char *v49;
  float FloatValue;
  uint64_t v51;
  const char *v52;
  char v53;
  const char *v54;
  int EnumValue;
  const char *v56;
  uint64_t v57;
  const char *v58;
  __int128 v59;
  uint64_t MessageValue;
  const char *v61;
  uint64_t v62;
  std::string __p;
  void (**v64)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  const char *v65;
  int v66;
  std::string v67;
  std::string v68;
  google::protobuf::MapKey *v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD v74[2];

  (*(void (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  v3 = v2;
  v4 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  if (*(_BYTE *)(*(_QWORD *)(v4 + 32) + 75))
    v5 = *(_QWORD *)(v4 + 40);
  else
    v5 = 0;
  result = (_QWORD *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  if (*(_BYTE *)(result[4] + 75))
    v7 = result[5] + 152;
  else
    v7 = 0;
  v8 = (_QWORD *)*((_QWORD *)this + 2);
  if (!v8)
  {
    v9 = *((_QWORD *)this + 1);
    if (v9)
    {
      if ((*(_BYTE *)(v9 + 24) & 1) != 0)
      result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v9, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>);
      v8 = result;
      result[2] = 0;
      *result = v9;
    }
    else
    {
      result = (_QWORD *)operator new();
      v8 = result;
      result[2] = 0;
      *result = 0;
    }
    result[1] = 0;
    *((_QWORD *)this + 2) = v8;
  }
  v10 = *((unsigned int *)v8 + 2);
  if ((int)v10 >= 1)
  {
    v11 = (uint64_t *)(v8[2] + 8);
    do
    {
      v12 = *v11++;
      result = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 40))(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)v8 + 2) = 0;
  }
  v13 = *((_QWORD *)this + 15);
  v14 = *((_QWORD *)this + 13);
  if (v14 > v13)
  {
    v15 = *((_QWORD *)this + 16);
    while (1)
    {
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
        break;
      if (v14 == ++v13)
        return result;
    }
    if (v16 == *(_QWORD *)(v15 + 8 * (v13 ^ 1)))
    {
      v69 = *(google::protobuf::MapKey **)(*(_QWORD *)v16 + 40);
      v70 = (char *)this + 96;
      v71 = v13;
      if (!v69)
        return result;
    }
    else
    {
      v69 = *(google::protobuf::MapKey **)(v15 + 8 * v13);
      v70 = (char *)this + 96;
      v71 = v13;
    }
    do
    {
      v17 = (google::protobuf::Message *)(*(uint64_t (**)(_QWORD, _QWORD))(**((_QWORD **)this + 18) + 32))(*((_QWORD *)this + 18), *((_QWORD *)this + 1));
      google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*((unsigned int **)this + 2), v17);
      v18 = v69;
      v19 = *(unint64_t **)(v5 + 48);
      if (v19)
      {
        v72 = v5;
        v73 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v20 = atomic_load(v19);
        if (v20 != -1)
        {
          v64 = &v73;
          v65 = (const char *)&v72;
          v74[0] = &v64;
          std::__call_once(v19, v74, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v5 + 56))
      {
        case 1:
        case 2:
        case 0xA:
        case 0xB:
        case 0xE:
          LODWORD(v64) = 3;
          v65 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.cc";
          v66 = 430;
          memset(&v67, 0, sizeof(v67));
          std::string::append(&v67, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v64);
          if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
          {
            v21 = (void *)v67.__r_.__value_.__r.__words[0];
            goto LABEL_42;
          }
          break;
        case 3:
        case 0x10:
        case 0x12:
          Int64Value = google::protobuf::MapKey::GetInt64Value(v18);
          google::protobuf::Reflection::SetInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v5, Int64Value, v25);
          break;
        case 4:
        case 6:
          UInt64Value = google::protobuf::MapKey::GetUInt64Value(v18);
          google::protobuf::Reflection::SetUInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v5, UInt64Value, v29);
          break;
        case 5:
        case 0xF:
        case 0x11:
          Int32Value = google::protobuf::MapKey::GetInt32Value(v18);
          google::protobuf::Reflection::SetInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v5, Int32Value, v23);
          break;
        case 7:
        case 0xD:
          UInt32Value = google::protobuf::MapKey::GetUInt32Value(v18);
          google::protobuf::Reflection::SetUInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v5, UInt32Value, v27);
          break;
        case 8:
          BoolValue = google::protobuf::MapKey::GetBoolValue(v18);
          google::protobuf::Reflection::SetBool(v3, v17, (const google::protobuf::FieldDescriptor *)v5, BoolValue, v31);
          break;
        case 9:
        case 0xC:
          StringValue = google::protobuf::MapKey::GetStringValue(v18);
          if (*((char *)StringValue + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v68, *(const std::string::value_type **)StringValue, *((_QWORD *)StringValue + 1));
          }
          else
          {
            v34 = *(_OWORD *)StringValue;
            v68.__r_.__value_.__r.__words[2] = *((_QWORD *)StringValue + 2);
            *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v34;
          }
          google::protobuf::Reflection::SetString((uint64_t)v3, v17, (google::protobuf::FieldDescriptor *)v5, (uint64_t)&v68, v33);
          if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
          {
            v21 = (void *)v68.__r_.__value_.__r.__words[0];
LABEL_42:
            operator delete(v21);
          }
          break;
        default:
          break;
      }
      v35 = v69;
      v36 = *(unint64_t **)(v7 + 48);
      if (v36)
      {
        v72 = v7;
        v73 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v37 = atomic_load(v36);
        if (v37 != -1)
        {
          v64 = &v73;
          v65 = (const char *)&v72;
          v74[0] = &v64;
          std::__call_once(v36, v74, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      v38 = (google::protobuf::MapKey *)((char *)v35 + 32);
      switch(*(_DWORD *)(v7 + 56))
      {
        case 1:
          DoubleValue = google::protobuf::MapValueConstRef::GetDoubleValue(v38);
          google::protobuf::Reflection::SetDouble(v3, v17, (const google::protobuf::FieldDescriptor *)v7, DoubleValue, v48, v49);
          break;
        case 2:
          FloatValue = google::protobuf::MapValueConstRef::GetFloatValue(v38);
          google::protobuf::Reflection::SetFloat(v3, v17, (const google::protobuf::FieldDescriptor *)v7, FloatValue, v51, v52);
          break;
        case 3:
        case 0x10:
        case 0x12:
          v41 = google::protobuf::MapValueConstRef::GetInt64Value(v38);
          google::protobuf::Reflection::SetInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v41, v42);
          break;
        case 4:
        case 6:
          v45 = google::protobuf::MapValueConstRef::GetUInt64Value(v38);
          google::protobuf::Reflection::SetUInt64(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v45, v46);
          break;
        case 5:
        case 0xF:
        case 0x11:
          v39 = google::protobuf::MapValueConstRef::GetInt32Value(v38);
          google::protobuf::Reflection::SetInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v39, v40);
          break;
        case 7:
        case 0xD:
          v43 = google::protobuf::MapValueConstRef::GetUInt32Value(v38);
          google::protobuf::Reflection::SetUInt32(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v43, v44);
          break;
        case 8:
          v53 = google::protobuf::MapValueConstRef::GetBoolValue(v38);
          google::protobuf::Reflection::SetBool(v3, v17, (const google::protobuf::FieldDescriptor *)v7, v53, v54);
          break;
        case 9:
        case 0xC:
          v57 = google::protobuf::MapValueConstRef::GetStringValue(v38);
          if (*(char *)(v57 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v57, *(_QWORD *)(v57 + 8));
          }
          else
          {
            v59 = *(_OWORD *)v57;
            __p.__r_.__value_.__r.__words[2] = *(_QWORD *)(v57 + 16);
            *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v59;
          }
          google::protobuf::Reflection::SetString((uint64_t)v3, v17, (google::protobuf::FieldDescriptor *)v7, (uint64_t)&__p, v58);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          break;
        case 0xA:
        case 0xB:
          MessageValue = google::protobuf::MapValueConstRef::GetMessageValue(v38);
          v62 = google::protobuf::Reflection::MutableMessage(v3, v17, (const google::protobuf::FieldDescriptor *)v7, 0, v61);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v62 + 112))(v62, MessageValue);
          break;
        case 0xE:
          EnumValue = google::protobuf::MapValueConstRef::GetEnumValue(v38);
          google::protobuf::Reflection::SetEnumValue(v3, v17, (const google::protobuf::FieldDescriptor *)v7, EnumValue, v56);
          break;
        default:
          break;
      }
      result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(&v69);
    }
    while (v69);
  }
  return result;
}

void sub_188852EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

google::protobuf::MapKey *google::protobuf::MapKey::GetStringValue(google::protobuf::MapKey *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapKey::type(this) != 9)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 144;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetStringValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "string");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return this;
}

void sub_188853010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetInt64Value(google::protobuf::MapKey *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapKey::type(this) != 2)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 124;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)this;
}

void sub_188853134(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetInt32Value(google::protobuf::MapKey *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapKey::type(this) != 1)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 132;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "int32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)this;
}

void sub_188853258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetUInt64Value(google::protobuf::MapKey *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapKey::type(this) != 4)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 128;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetUInt64Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint64");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)this;
}

void sub_18885337C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetUInt32Value(google::protobuf::MapKey *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapKey::type(this) != 3)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 136;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetUInt32Value");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "uint32");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)this;
}

void sub_1888534A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MapKey::GetBoolValue(google::protobuf::MapKey *this)
{
  int v2;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  if (google::protobuf::MapKey::type(this) != 7)
  {
    v4 = 3;
    v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v6 = 140;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::GetBoolValue");
    std::string::append(&__p, " type does not match\n");
    std::string::append(&__p, "  Expected : ");
    std::string::append(&__p, "BOOL");
    std::string::append(&__p, "\n");
    std::string::append(&__p, "  Actual   : ");
    v2 = google::protobuf::MapKey::type(this);
    std::string::append(&__p, google::protobuf::FieldDescriptor::kCppTypeToName[v2]);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned __int8 *)this;
}

void sub_1888535C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::DynamicMapField::SyncMapWithRepeatedFieldNoLock(google::protobuf::internal::DynamicMapField *this)
{
  google::protobuf::_anonymous_namespace_ **v2;
  google::protobuf::_anonymous_namespace_ **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::string::size_type v8;
  std::string::size_type v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const google::protobuf::Message **v16;
  unint64_t *v17;
  unint64_t v18;
  void *v19;
  int Int32;
  void *Int64;
  BOOL Bool;
  std::string::size_type v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  _DWORD *Aligned;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  _DWORD *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  double *v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  float *v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  _DWORD *v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  _QWORD *AlignedAndAddCleanup;
  const char *v63;
  uint64_t Message;
  uint64_t v65;
  int UInt32;
  uint64_t UInt64;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  std::string v72;
  std::string __p;
  std::string v74;
  uint64_t v75;
  void (*v76)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  std::string *v77;
  void *v78[2];
  char v79;
  int v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  (*(void (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  v3 = v2;
  v4 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  if (*(_BYTE *)(*(_QWORD *)(v4 + 32) + 75))
    v5 = *(_QWORD *)(v4 + 40);
  else
    v5 = 0;
  v6 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 18) + 152))(*((_QWORD *)this + 18));
  if (*(_BYTE *)(*(_QWORD *)(v6 + 32) + 75))
    v7 = *(_QWORD *)(v6 + 40) + 152;
  else
    v7 = 0;
  if (!*((_QWORD *)this + 1))
  {
    v8 = *((_QWORD *)this + 15);
    v9 = *((_QWORD *)this + 13);
    if (v9 > v8)
    {
      v10 = *((_QWORD *)this + 16);
      while (1)
      {
        v11 = *(_DWORD **)(v10 + 8 * v8);
        if (v11)
          break;
        if (v9 == ++v8)
          goto LABEL_17;
      }
      if (v11 == *(_DWORD **)(v10 + 8 * (v8 ^ 1)))
      {
        v11 = *(_DWORD **)(*(_QWORD *)v11 + 40);
        v72.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
        v72.__r_.__value_.__l.__size_ = (std::string::size_type)this + 96;
        v72.__r_.__value_.__r.__words[2] = v8;
        if (!v11)
          goto LABEL_17;
      }
      else
      {
        v72.__r_.__value_.__r.__words[0] = *(_QWORD *)(v10 + 8 * v8);
        v72.__r_.__value_.__l.__size_ = (std::string::size_type)this + 96;
        v72.__r_.__value_.__r.__words[2] = v8;
      }
      do
      {
        google::protobuf::MapValueRef::DeleteData(v11 + 8);
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(&v72);
        v11 = (_DWORD *)v72.__r_.__value_.__r.__words[0];
      }
      while (v72.__r_.__value_.__r.__words[0]);
    }
  }
LABEL_17:
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)this + 96);
  v14 = *((_QWORD *)this + 2);
  if (*(_DWORD *)(v14 + 8))
  {
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
      v16 = (const google::protobuf::Message **)(v15 + 8);
    else
      v16 = 0;
    do
    {
      v80 = 0;
      v17 = *(unint64_t **)(v5 + 48);
      if (v17)
      {
        v75 = v5;
        v76 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v18 = atomic_load(v17);
        if (v18 != -1)
        {
          v72.__r_.__value_.__r.__words[0] = (std::string::size_type)&v76;
          v72.__r_.__value_.__l.__size_ = (std::string::size_type)&v75;
          v77 = &v72;
          std::__call_once(v17, &v77, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v5 + 56))
      {
        case 1:
        case 2:
        case 0xA:
        case 0xB:
        case 0xE:
          LODWORD(v72.__r_.__value_.__l.__data_) = 3;
          v72.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libp"
                                                                  "rotobuf/src/google/protobuf/map_field.cc";
          LODWORD(v72.__r_.__value_.__r.__words[2]) = 513;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v72);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            v19 = (void *)__p.__r_.__value_.__r.__words[0];
            goto LABEL_27;
          }
          break;
        case 3:
        case 0x10:
        case 0x12:
          Int64 = (void *)google::protobuf::Reflection::GetInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v80 != 2)
          {
            if (v80 == 9 && v79 < 0)
              operator delete(v78[0]);
            v80 = 2;
          }
          goto LABEL_49;
        case 4:
        case 6:
          Int64 = (void *)google::protobuf::Reflection::GetUInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v80 != 4)
          {
            if (v80 == 9 && v79 < 0)
              operator delete(v78[0]);
            v80 = 4;
          }
LABEL_49:
          v78[0] = Int64;
          break;
        case 5:
        case 0xF:
        case 0x11:
          Int32 = google::protobuf::Reflection::GetInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v80 != 1)
          {
            if (v80 == 9 && v79 < 0)
              operator delete(v78[0]);
            v80 = 1;
          }
          goto LABEL_43;
        case 7:
        case 0xD:
          Int32 = google::protobuf::Reflection::GetUInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v80 != 3)
          {
            if (v80 == 9 && v79 < 0)
              operator delete(v78[0]);
            v80 = 3;
          }
LABEL_43:
          LODWORD(v78[0]) = Int32;
          break;
        case 8:
          Bool = google::protobuf::Reflection::GetBool(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v12, v13);
          if (v80 != 7)
          {
            if (v80 == 9 && v79 < 0)
              operator delete(v78[0]);
            v80 = 7;
          }
          LOBYTE(v78[0]) = Bool;
          break;
        case 9:
        case 0xC:
          google::protobuf::Reflection::GetString(v3, *v16, (const google::protobuf::FieldDescriptor *)v5, v13, &v74);
          google::protobuf::MapKey::SetStringValue((uint64_t)v78, (__n128 *)&v74);
          if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
          {
            v19 = (void *)v74.__r_.__value_.__r.__words[0];
LABEL_27:
            operator delete(v19);
          }
          break;
        default:
          break;
      }
      if (!*((_QWORD *)this + 1))
      {
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v72, (unsigned __int8 *)this + 96, (google::protobuf::MapKey *)v78, 0);
        if (v72.__r_.__value_.__r.__words[0])
          google::protobuf::MapValueRef::DeleteData((_DWORD *)(v72.__r_.__value_.__r.__words[0] + 32));
      }
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)&v72, (unint64_t)this + 96, (google::protobuf::MapKey *)v78);
      v23 = v72.__r_.__value_.__r.__words[0];
      v24 = *(unint64_t **)(v7 + 48);
      if (v24)
      {
        v75 = v7;
        v76 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v25 = atomic_load(v24);
        if (v25 != -1)
        {
          v72.__r_.__value_.__r.__words[0] = (std::string::size_type)&v76;
          v72.__r_.__value_.__l.__size_ = (std::string::size_type)&v75;
          v77 = &v72;
          std::__call_once(v24, &v77, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v26 = *(unint64_t **)(v7 + 48);
        v27 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 56)];
        *(_DWORD *)(v23 + 40) = v27;
        if (v26)
        {
          v75 = v7;
          v76 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v28 = atomic_load(v26);
          if (v28 != -1)
          {
            v72.__r_.__value_.__r.__words[0] = (std::string::size_type)&v76;
            v72.__r_.__value_.__l.__size_ = (std::string::size_type)&v75;
            v77 = &v72;
            std::__call_once(v26, &v77, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v27 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 56)];
        }
      }
      else
      {
        v27 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 56)];
        *(_DWORD *)(v72.__r_.__value_.__r.__words[0] + 40) = v27;
      }
      switch(v27)
      {
        case 1:
          v29 = *((_QWORD *)this + 1);
          if (v29)
          {
            if ((*(_BYTE *)(v29 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v29 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v29 + 32) + 32), MEMORY[0x1E0DE4EF0], 8);
            Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v29, 8uLL);
          }
          else
          {
            Aligned = (_DWORD *)operator new();
          }
          v65 = (uint64_t)Aligned;
          *Aligned = 0;
          UInt32 = google::protobuf::Reflection::GetInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v31, v32);
          goto LABEL_124;
        case 2:
          v33 = *((_QWORD *)this + 1);
          if (v33)
          {
            if ((*(_BYTE *)(v33 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v33 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v33 + 32) + 32), MEMORY[0x1E0DE4F28], 8);
            v34 = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v33, 8uLL);
          }
          else
          {
            v34 = (_QWORD *)operator new();
          }
          v65 = (uint64_t)v34;
          *v34 = 0;
          UInt64 = google::protobuf::Reflection::GetInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v35, v36);
          goto LABEL_115;
        case 3:
          v37 = *((_QWORD *)this + 1);
          if (v37)
          {
            if ((*(_BYTE *)(v37 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v37 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v37 + 32) + 32), MEMORY[0x1E0DE4EF8], 8);
            v38 = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v37, 8uLL);
          }
          else
          {
            v38 = (_DWORD *)operator new();
          }
          v65 = (uint64_t)v38;
          *v38 = 0;
          UInt32 = google::protobuf::Reflection::GetUInt32(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v39, v40);
          goto LABEL_124;
        case 4:
          v41 = *((_QWORD *)this + 1);
          if (v41)
          {
            if ((*(_BYTE *)(v41 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v41 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v41 + 32) + 32), MEMORY[0x1E0DE4F30], 8);
            v42 = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v41, 8uLL);
          }
          else
          {
            v42 = (_QWORD *)operator new();
          }
          v65 = (uint64_t)v42;
          *v42 = 0;
          UInt64 = google::protobuf::Reflection::GetUInt64(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v43, v44);
LABEL_115:
          *(_QWORD *)v65 = UInt64;
          goto LABEL_129;
        case 5:
          v45 = *((_QWORD *)this + 1);
          if (v45)
          {
            if ((*(_BYTE *)(v45 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v45 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v45 + 32) + 32), MEMORY[0x1E0DE4ED0], 8);
            v46 = (double *)google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v45, 8uLL);
          }
          else
          {
            v46 = (double *)operator new();
          }
          v65 = (uint64_t)v46;
          *v46 = 0.0;
          *v46 = google::protobuf::Reflection::GetDouble(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v47, v48);
          goto LABEL_129;
        case 6:
          v49 = *((_QWORD *)this + 1);
          if (v49)
          {
            if ((*(_BYTE *)(v49 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v49 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v49 + 32) + 32), MEMORY[0x1E0DE4EE0], 8);
            v50 = (float *)google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v49, 8uLL);
          }
          else
          {
            v50 = (float *)operator new();
          }
          v65 = (uint64_t)v50;
          *v50 = 0.0;
          *v50 = google::protobuf::Reflection::GetFloat(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v51, v52);
          goto LABEL_129;
        case 7:
          v53 = *((_QWORD *)this + 1);
          if (v53)
          {
            if ((*(_BYTE *)(v53 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v53 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v53 + 32) + 32), MEMORY[0x1E0DE4EC0], 8);
            v54 = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v53, 8uLL);
          }
          else
          {
            v54 = (_BYTE *)operator new();
          }
          v65 = (uint64_t)v54;
          *v54 = 0;
          *v54 = google::protobuf::Reflection::GetBool(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v55, v56);
          goto LABEL_129;
        case 8:
          v57 = *((_QWORD *)this + 1);
          if (v57)
          {
            if ((*(_BYTE *)(v57 + 24) & 1) != 0)
              (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v57 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v57 + 32) + 32), MEMORY[0x1E0DE4EF0], 8);
            v58 = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v57, 8uLL);
          }
          else
          {
            v58 = (_DWORD *)operator new();
          }
          v65 = (uint64_t)v58;
          *v58 = 0;
          UInt32 = google::protobuf::Reflection::GetEnumValue(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v59, v60);
LABEL_124:
          *(_DWORD *)v65 = UInt32;
          goto LABEL_129;
        case 9:
          v61 = *((_QWORD *)this + 1);
          if (v61)
          {
            if ((*(_BYTE *)(v61 + 24) & 1) != 0)
            AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v61, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
          }
          else
          {
            AlignedAndAddCleanup = (_QWORD *)operator new();
          }
          v65 = (uint64_t)AlignedAndAddCleanup;
          *AlignedAndAddCleanup = 0;
          AlignedAndAddCleanup[1] = 0;
          AlignedAndAddCleanup[2] = 0;
          google::protobuf::Reflection::GetString(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, v63, &v72);
          if (*(char *)(v65 + 23) < 0)
            operator delete(*(void **)v65);
          v68 = *(_OWORD *)&v72.__r_.__value_.__l.__data_;
          *(_QWORD *)(v65 + 16) = *((_QWORD *)&v72.__r_.__value_.__l + 2);
          *(_OWORD *)v65 = v68;
          goto LABEL_129;
        case 10:
          Message = google::protobuf::Reflection::GetMessage(v3, *v16, (const google::protobuf::FieldDescriptor *)v7, 0, v13);
          v65 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)Message + 32))(Message, *((_QWORD *)this + 1));
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v65 + 112))(v65, Message);
LABEL_129:
          *(_QWORD *)(v23 + 32) = v65;
          break;
        default:
          break;
      }
      if (v80 == 9 && v79 < 0)
        operator delete(v78[0]);
      ++v16;
      v69 = *((_QWORD *)this + 2);
      v70 = *(_QWORD *)(v69 + 16);
      if (v70)
        v71 = v70 + 8;
      else
        v71 = 0;
    }
    while (v16 != (const google::protobuf::Message **)(v71 + 8 * *(int *)(v69 + 8)));
  }
}

void sub_188853FEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,int a34)
{
  if (a24 < 0)
    operator delete(__p);
  if (a34 == 9 && a33 < 0)
    operator delete(a28);
  _Unwind_Resume(exception_object);
}

__n128 google::protobuf::MapKey::SetStringValue(uint64_t a1, __n128 *a2)
{
  __n128 result;

  google::protobuf::MapKey::SetType(a1, 9);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  result = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  *(__n128 *)a1 = result;
  a2[1].n128_u8[7] = 0;
  a2->n128_u8[0] = 0;
  return result;
}

uint64_t google::protobuf::internal::DynamicMapField::SpaceUsedExcludingSelfNoLock(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  google::protobuf::MapKey *v7;
  uint64_t v8;
  unint64_t v9;
  google::protobuf::MapKey *v10;
  uint64_t v11;
  google::protobuf::MapKey *v12;
  uint64_t v13;
  const google::protobuf::Message *MessageValue;
  google::protobuf::Reflection *v15;
  google::protobuf::MapKey *v17[3];

  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    v3 = 8 * *(int *)(v2 + 12);
    v4 = *(int **)(v2 + 16);
    if (v4)
    {
      if (*v4 >= 1)
      {
        v5 = 0;
        do
        {
          v3 += (*(uint64_t (**)(_QWORD))(**(_QWORD **)&v4[2 * v5 + 2] + 136))(*(_QWORD *)&v4[2 * v5 + 2]);
          ++v5;
          v4 = *(int **)(v2 + 16);
        }
        while (v5 < *v4);
      }
      v3 += 8;
    }
    v6 = v3 + 48;
  }
  else
  {
    v6 = 48;
  }
  v7 = (google::protobuf::internal::DynamicMapField *)((char *)this + 96);
  v8 = *((_QWORD *)this + 12);
  if (v8)
  {
    v9 = *((_QWORD *)this + 15);
    v10 = (google::protobuf::MapKey *)*((_QWORD *)this + 13);
    if ((unint64_t)v10 <= v9)
    {
      v12 = 0;
    }
    else
    {
      v11 = *((_QWORD *)this + 16);
      while (1)
      {
        v12 = *(google::protobuf::MapKey **)(v11 + 8 * v9);
        if (v12)
          break;
        if (v10 == (google::protobuf::MapKey *)++v9)
        {
          v12 = 0;
          v9 = (unint64_t)v10;
          goto LABEL_18;
        }
      }
      if (v12 == *(google::protobuf::MapKey **)(v11 + 8 * (v9 ^ 1)))
        v12 = *(google::protobuf::MapKey **)(*(_QWORD *)v12 + 40);
    }
LABEL_18:
    v17[0] = v12;
    v17[1] = v7;
    v17[2] = (google::protobuf::MapKey *)v9;
    if (google::protobuf::MapKey::type(v12) == 9)
      v13 = 24 * v8;
    else
      v13 = 0;
    v6 += 48 * v8 + v13;
    switch(google::protobuf::MapValueConstRef::type((google::protobuf::MapKey *)((char *)v12 + 32)))
    {
      case 1u:
      case 3u:
      case 6u:
      case 8u:
        v6 += 4 * v8;
        break;
      case 2u:
      case 4u:
      case 5u:
        v6 += 8 * v8;
        break;
      case 7u:
        v6 += v8;
        break;
      case 9u:
        v6 += 24 * v8;
        break;
      case 0xAu:
        while (v12)
        {
          MessageValue = (const google::protobuf::Message *)google::protobuf::MapValueConstRef::GetMessageValue((google::protobuf::MapKey *)((char *)v12 + 32));
          (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)MessageValue + 152))(MessageValue);
          v6 += google::protobuf::Reflection::SpaceUsedLong(v15, MessageValue);
          google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(v17);
          v12 = v17[0];
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

uint64_t google::protobuf::MapKey::type(google::protobuf::MapKey *this)
{
  uint64_t result;
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  result = *((unsigned int *)this + 6);
  if (!(_DWORD)result)
  {
    v3 = 3;
    v4 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v5 = 91;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Protocol Buffer map usage error:\n");
    std::string::append(&__p, "MapKey::type MapKey is not initialized. ");
    std::string::append(&__p, "Call set methods to initialize MapKey.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    return *((unsigned int *)this + 6);
  }
  return result;
}

void sub_18885431C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::EqualIterator(uint64_t a1, _QWORD **a2, _QWORD **a3)
{
  return **a2 == **a3;
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapBegin(uint64_t a1, _QWORD **a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1);
  v5 = v4[3];
  v6 = v4[1];
  if (v6 <= v5)
  {
    v8 = 0;
  }
  else
  {
    v7 = v4[4];
    while (1)
    {
      v8 = *(_QWORD *)(v7 + 8 * v5);
      if (v8)
        break;
      if (v6 == ++v5)
      {
        v8 = 0;
        v5 = v4[1];
        goto LABEL_9;
      }
    }
    if (v8 == *(_QWORD *)(v7 + 8 * (v5 ^ 1)))
      v8 = *(_QWORD *)(*(_QWORD *)v8 + 40);
  }
LABEL_9:
  v9 = *a2;
  *v9 = v8;
  v9[1] = v4;
  v9[2] = v5;
  return (*(uint64_t (**)(uint64_t, _QWORD **))(*(_QWORD *)a1 + 176))(a1, a2);
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::MapEnd(uint64_t a1, _QWORD **a2)
{
  uint64_t result;
  _QWORD *v4;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 160))(a1);
  v4 = *a2;
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  return result;
}

_QWORD *google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::InitializeIterator(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = 0;
  *a2 = result;
  return result;
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::DeleteIterator(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (*a2)
    JUMPOUT(0x18D76437CLL);
  return result;
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::CopyIterator(uint64_t a1, uint64_t *a2, _DWORD *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  int v9;

  v6 = *a2;
  v7 = *(_OWORD *)*(_QWORD *)a3;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(*(_QWORD *)a3 + 16);
  *(_OWORD *)v6 = v7;
  v8 = (uint64_t)(a2 + 2);
  v9 = google::protobuf::MapKey::type((google::protobuf::MapKey *)(a3 + 4));
  google::protobuf::MapKey::SetType(v8, v9);
  *((_DWORD *)a2 + 14) = a3[14];
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 176))(a1, a2);
}

uint64_t google::protobuf::internal::TypeDefinedMapFieldBase<google::protobuf::MapKey,google::protobuf::MapValueRef>::IncreaseIterator(uint64_t a1, google::protobuf::MapKey ***a2)
{
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(*a2);
  return (*(uint64_t (**)(uint64_t, google::protobuf::MapKey ***))(*(_QWORD *)a1 + 176))(a1, a2);
}

void google::protobuf::internal::arena_destruct_object<std::string>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(_QWORD *a1)
{
  unsigned int *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
          (*(void (**)(_QWORD))(*(_QWORD *)*v3 + 8))(*v3);
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::Message>>(_QWORD *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(a1);
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::~InnerMap(uint64_t a1)
{
  if (!*(_QWORD *)(a1 + 40) && *(_QWORD *)(a1 + 8) != 1)
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear(a1);
    if (!*(_QWORD *)(a1 + 40))
      operator delete(*(void **)(a1 + 32));
  }
  return a1;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t **v5;
  uint64_t **v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  BOOL v13;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 8);
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = v1[4];
      v5 = *(uint64_t ***)(v4 + 8 * v3);
      if (v5)
      {
        if (v5 == *(uint64_t ***)(v4 + 8 * (v3 ^ 1)))
        {
          v7 = v3 + 1;
          *(_QWORD *)(v4 + 8 * (v3 + 1)) = 0;
          *(_QWORD *)(v1[4] + 8 * v3) = 0;
          v8 = *v5;
          do
          {
            v9 = v8[5];
            v10 = (uint64_t *)v8[1];
            v11 = v8;
            if (v10)
            {
              do
              {
                v12 = v10;
                v10 = (uint64_t *)*v10;
              }
              while (v10);
            }
            else
            {
              do
              {
                v12 = (uint64_t *)v11[2];
                v13 = *v12 == (_QWORD)v11;
                v11 = v12;
              }
              while (!v13);
            }
            std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::erase((uint64_t)v5, v8);
            google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(v1[5], v9);
            v8 = v12;
          }
          while (v12 != (uint64_t *)(v5 + 1));
          result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(v1[5], (uint64_t)v5);
          goto LABEL_16;
        }
        *(_QWORD *)(v4 + 8 * v3) = 0;
        do
        {
          v6 = (uint64_t **)v5[6];
          result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(v1[5], (uint64_t)v5);
          v5 = v6;
        }
        while (v6);
      }
      v7 = v3;
LABEL_16:
      v3 = v7 + 1;
      v2 = v1[1];
    }
    while (v7 + 1 < v2);
  }
  *v1 = 0;
  v1[3] = v2;
  return result;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyNode(uint64_t result, uint64_t a2)
{
  if (!result && a2)
  {
    if (*(_DWORD *)(a2 + 24) == 9 && *(char *)(a2 + 23) < 0)
      operator delete(*(void **)a2);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(uint64_t result, uint64_t a2)
{
  if (!result && a2)
  {
    std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a2, *(_QWORD **)(a2 + 8));
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

void std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::erase(uint64_t a1, uint64_t *a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  BOOL v7;

  v4 = (uint64_t *)a2[1];
  if (v4)
  {
    do
    {
      v5 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    v6 = a2;
    do
    {
      v5 = (uint64_t *)v6[2];
      v7 = *v5 == (_QWORD)v6;
      v6 = v5;
    }
    while (!v7);
  }
  if (*(uint64_t **)a1 == a2)
    *(_QWORD *)a1 = v5;
  --*(_QWORD *)(a1 + 24);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), a2);
  if (!*(_QWORD *)(a1 + 16))
    operator delete(a2);
}

void std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a1, a2[1]);
    if (!*(_QWORD *)(a1 + 16))
      operator delete(a2);
  }
}

google::protobuf::internal::MapFieldBase *google::protobuf::internal::MapFieldBase::MapFieldBase(google::protobuf::internal::MapFieldBase *this, Arena *a2)
{
  *(_QWORD *)this = off_1E1BF8990;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = 850045863;
  *((_QWORD *)this + 2) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *(_OWORD *)((char *)this + 76) = 0u;
  if (a2)
    google::protobuf::Arena::OwnDestructor<google::protobuf::internal::WrappedMutex>((char *)a2, (char *)this + 24);
  return this;
}

void sub_188854918(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::~mutex(v1);
  _Unwind_Resume(a1);
}

char *google::protobuf::Arena::OwnDestructor<google::protobuf::internal::WrappedMutex>(char *result, void *a2)
{
  if (a2)
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::internal::WrappedMutex>);
  return result;
}

_QWORD *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::SearchFrom(_QWORD *result, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *result = 0;
  v2 = result[1];
  v3 = *(_QWORD *)(v2 + 8);
  if (v3 <= a2)
  {
LABEL_6:
    result[2] = a2;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 32);
    while (1)
    {
      v5 = *(_QWORD *)(v4 + 8 * a2);
      if (v5)
        break;
      if (v3 == ++a2)
      {
        a2 = v3;
        goto LABEL_6;
      }
    }
    v6 = *(_QWORD *)(v4 + 8 * (a2 ^ 1));
    result[2] = a2;
    if (v5 == v6)
      *result = *(_QWORD *)(*(_QWORD *)v5 + 40);
    else
      *result = v5;
  }
  return result;
}

_QWORD *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::operator++(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  _QWORD *v11;

  v2 = *(_QWORD *)(*a1 + 48);
  if (v2)
    goto LABEL_2;
  v11 = 0;
  if (google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::revalidate_if_necessary((uint64_t)a1, &v11))
  {
    v3 = a1[2] + 1;
LABEL_13:
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::SearchFrom(a1, v3);
    return a1;
  }
  v4 = a1[2];
  v5 = *(_QWORD *)(*(_QWORD *)(a1[1] + 32) + 8 * v4);
  v6 = v11;
  v7 = (_QWORD *)v11[1];
  if (v7)
  {
    do
    {
      v8 = v7;
      v7 = (_QWORD *)*v7;
    }
    while (v7);
  }
  else
  {
    do
    {
      v8 = (_QWORD *)v6[2];
      v9 = *v8 == (_QWORD)v6;
      v6 = v8;
    }
    while (!v9);
  }
  v11 = v8;
  if (v8 == (_QWORD *)(v5 + 8))
  {
    v3 = v4 + 2;
    goto LABEL_13;
  }
  v2 = v8[5];
LABEL_2:
  *a1 = v2;
  return a1;
}

BOOL google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::revalidate_if_necessary(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  google::protobuf::MapKey *v4;
  uint64_t v5;
  uint64_t v6;
  google::protobuf::MapKey *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v13;
  uint64_t v14;

  v4 = *(google::protobuf::MapKey **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16) & (*(_QWORD *)(v3 + 8) - 1);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(google::protobuf::MapKey **)(v6 + 8 * v5);
  if (v7 == v4)
    return 1;
  if (v7 && v7 != *(google::protobuf::MapKey **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      v7 = (google::protobuf::MapKey *)*((_QWORD *)v7 + 6);
      if (!v7)
        break;
      if (v7 == v4)
        return 1;
    }
  }
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v13, (unsigned __int8 *)v3, v4, a2);
  v9 = v14;
  *(_QWORD *)(a1 + 16) = v14;
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 32);
  v11 = *(_QWORD *)(v10 + 8 * v9);
  return !v11 || v11 != *(_QWORD *)(v10 + 8 * (v9 ^ 1));
}

void google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(unsigned __int8 **a1, unsigned __int8 *a2, google::protobuf::MapKey *a3, _QWORD *a4)
{
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  google::protobuf::MapKey *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t *v25;
  int v26;
  const char *v27;
  int v28;
  std::string __p;

  v8 = (*((_QWORD *)a2 + 1) - 1) & ((0x9E3779B97F4A7C15
                                     * (*((_QWORD *)a2 + 2) ^ std::hash<google::protobuf::MapKey>::operator()(a3))) >> 32);
  v9 = *((_QWORD *)a2 + 4);
  v10 = *(unsigned __int8 **)(v9 + 8 * v8);
  if (!v10)
    goto LABEL_43;
  if (v10 != *(unsigned __int8 **)(v9 + 8 * (v8 ^ 1)))
  {
    while (1)
    {
      if (*((_DWORD *)v10 + 6) != *((_DWORD *)a3 + 6))
      {
        v26 = 3;
        v27 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
        v28 = 180;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Unsupported: type mismatch");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      switch(google::protobuf::MapKey::type((google::protobuf::MapKey *)v10))
      {
        case 1u:
        case 3u:
          v11 = *(_DWORD *)v10;
          v12 = *(_DWORD *)a3;
          goto LABEL_15;
        case 2u:
        case 4u:
          if (*(_QWORD *)v10 == *(_QWORD *)a3)
            goto LABEL_34;
          goto LABEL_16;
        case 5u:
        case 6u:
        case 8u:
        case 0xAu:
          v26 = 3;
          v27 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          v28 = 187;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Unsupported");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          goto LABEL_9;
        case 7u:
          v11 = *v10;
          v12 = *(unsigned __int8 *)a3;
LABEL_15:
          if (v11 != v12)
            goto LABEL_16;
          goto LABEL_34;
        case 9u:
          v13 = v10[23];
          if ((v13 & 0x80u) == 0)
            v14 = v10[23];
          else
            v14 = *((_QWORD *)v10 + 1);
          v15 = *((unsigned __int8 *)a3 + 23);
          v16 = (char)v15;
          if ((v15 & 0x80u) != 0)
            v15 = *((_QWORD *)a3 + 1);
          if (v14 != v15)
            goto LABEL_16;
          if (v16 >= 0)
            v17 = a3;
          else
            v17 = *(google::protobuf::MapKey **)a3;
          if ((v13 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)v10, v17, *((_QWORD *)v10 + 1)))
            {
LABEL_34:
              *a1 = v10;
              goto LABEL_35;
            }
          }
          else
          {
            if (!v10[23])
              goto LABEL_34;
            v18 = v10;
            while (*v18 == *(unsigned __int8 *)v17)
            {
              ++v18;
              v17 = (google::protobuf::MapKey *)((char *)v17 + 1);
              if (!--v13)
                goto LABEL_34;
            }
          }
LABEL_16:
          v10 = (unsigned __int8 *)*((_QWORD *)v10 + 6);
          if (!v10)
            goto LABEL_43;
          break;
        default:
LABEL_9:
          v26 = 3;
          v27 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
          v28 = 202;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          goto LABEL_16;
      }
    }
  }
  v8 = v8 & 0xFFFFFFFE;
  v19 = *(_QWORD *)(v9 + 8 * v8);
  v22 = *(_QWORD *)(v19 + 8);
  v20 = v19 + 8;
  v21 = v22;
  if (!v22)
    goto LABEL_43;
  v23 = v20;
  do
  {
    v24 = google::protobuf::MapKey::operator<(*(google::protobuf::MapKey **)(v21 + 32), (unsigned __int8 *)a3);
    v25 = (uint64_t *)(v21 + 8);
    if (!v24)
    {
      v25 = (uint64_t *)v21;
      v23 = v21;
    }
    v21 = *v25;
  }
  while (*v25);
  if (v23 != v20 && !google::protobuf::MapKey::operator<(a3, *(unsigned __int8 **)(v23 + 32)))
  {
    if (a4)
      *a4 = v23;
    *a1 = *(unsigned __int8 **)(v23 + 40);
LABEL_35:
    a1[1] = a2;
    a1[2] = (unsigned __int8 *)v8;
  }
  else
  {
LABEL_43:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  a1[3] = (unsigned __int8 *)v8;
}

void sub_188854DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t std::hash<google::protobuf::MapKey>::operator()(google::protobuf::MapKey *a1)
{
  unint64_t result;
  google::protobuf::MapKey *StringValue;
  int v4;
  const char *v5;
  int v6;
  std::string __p;

  switch(google::protobuf::MapKey::type(a1))
  {
    case 1u:
      google::protobuf::MapKey::GetInt32Value(a1);
      return (int)google::protobuf::MapKey::GetInt32Value(a1);
    case 2u:
      return google::protobuf::MapKey::GetInt64Value(a1);
    case 3u:
      google::protobuf::MapKey::GetUInt32Value(a1);
      LODWORD(result) = google::protobuf::MapKey::GetUInt32Value(a1);
      return result;
    case 4u:
      google::protobuf::MapKey::GetUInt64Value(a1);
      return google::protobuf::MapKey::GetUInt64Value(a1);
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      v4 = 3;
      v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      v6 = 278;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_4;
    case 7u:
      LODWORD(result) = google::protobuf::MapKey::GetBoolValue(a1);
      return result;
    case 9u:
      StringValue = google::protobuf::MapKey::GetStringValue(a1);
      return std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)&v4, (uint64_t)StringValue);
    default:
LABEL_4:
      v4 = 3;
      v5 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      v6 = 302;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return 0;
  }
}

void sub_188854F98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::MapKey::operator<(google::protobuf::MapKey *this, unsigned __int8 *a2)
{
  _BOOL8 result;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  int v9;
  int v10;
  size_t v11;
  google::protobuf::MapKey *v12;
  size_t v13;
  const void *v14;
  size_t v15;
  int v16;
  int v17;
  const char *v18;
  int v19;
  std::string __p;

  if (*((_DWORD *)this + 6) != *((_DWORD *)a2 + 6))
  {
    v17 = 3;
    v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
    v19 = 152;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Unsupported: type mismatch");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  switch(google::protobuf::MapKey::type(this))
  {
    case 1u:
      return *(_DWORD *)this < *(_DWORD *)a2;
    case 2u:
      return *(_QWORD *)this < *(_QWORD *)a2;
    case 3u:
      v6 = *(_DWORD *)this;
      v7 = *(_DWORD *)a2;
      goto LABEL_34;
    case 4u:
      v8 = *(_QWORD *)this >= *(_QWORD *)a2;
      goto LABEL_35;
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      v17 = 3;
      v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/map_field.h";
      v19 = 159;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Unsupported");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_7;
    case 7u:
      v6 = *(unsigned __int8 *)this;
      v7 = *a2;
LABEL_34:
      v8 = v6 >= v7;
LABEL_35:
      result = !v8;
      break;
    case 9u:
      v9 = (char)a2[23];
      v10 = *((char *)this + 23);
      if (v10 >= 0)
        v11 = *((unsigned __int8 *)this + 23);
      else
        v11 = *((_QWORD *)this + 1);
      if (v10 >= 0)
        v12 = this;
      else
        v12 = *(google::protobuf::MapKey **)this;
      if (v9 >= 0)
        v13 = a2[23];
      else
        v13 = *((_QWORD *)a2 + 1);
      if (v9 >= 0)
        v14 = a2;
      else
        v14 = *(const void **)a2;
      if (v13 >= v11)
        v15 = v11;
      else
        v15 = v13;
      v16 = memcmp(v12, v14, v15);
      if (v16)
        result = v16 < 0;
      else
        result = v11 < v13;
      break;
    default:
LABEL_7:
      result = 0;
      break;
  }
  return result;
}

void sub_188855178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

double google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>(uint64_t a1, unint64_t a2, google::protobuf::MapKey *a3)
{
  double result;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t Aligned;
  char *v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23[4];

  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(v23, (unsigned __int8 *)a2, a3, 0);
  if (v23[0])
  {
    v7 = v23[1];
    v8 = v23[2];
    *(unsigned __int8 **)a1 = v23[0];
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = 0;
    return result;
  }
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)a2 + 1;
  v11 = ((3 * v9) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v11 <= v10)
  {
    if (v9 <= 0x800000000000000)
    {
      v17 = 2 * v9;
LABEL_23:
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::Resize(a2, v17);
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>((unsigned __int8 **)&v20, (unsigned __int8 *)a2, a3, 0);
      v13 = v22;
      goto LABEL_9;
    }
  }
  else if (v9 >= 9 && (12 * v9) >> 6 >= v10)
  {
    v18 = 0;
    v19 = ((5 * v10) >> 2) + 1;
    do
      ++v18;
    while (v19 << v18 < v11);
    v17 = v9 >> v18 <= 8 ? 8 : v9 >> v18;
    if (v17 != v9)
      goto LABEL_23;
  }
  v13 = v23[3];
LABEL_9:
  v14 = *(_QWORD *)(a2 + 40);
  if (v14)
  {
    if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v14 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v14 + 32) + 32), MEMORY[0x1E0DE4EE8], 56);
    Aligned = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v14, 0x38uLL);
    v16 = *(char **)(a2 + 40);
    *(_DWORD *)(Aligned + 24) = 0;
    google::protobuf::MapKey::CopyFrom((std::string *)Aligned, a3);
    google::protobuf::Arena::OwnDestructor<google::protobuf::MapKey>(v16, (void *)Aligned);
    *(_QWORD *)(Aligned + 32) = 0;
    *(_DWORD *)(Aligned + 40) = 0;
  }
  else
  {
    Aligned = operator new();
    *(_DWORD *)(Aligned + 24) = 0;
    google::protobuf::MapKey::CopyFrom((std::string *)Aligned, a3);
    *(_QWORD *)(Aligned + 32) = 0;
    *(_DWORD *)(Aligned + 40) = 0;
    *(_QWORD *)(Aligned + 48) = 0;
  }
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique((uint64_t *)&v20, a2, (uint64_t)v13, Aligned);
  ++*(_QWORD *)a2;
  result = *(double *)&v20;
  *(_OWORD *)a1 = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_BYTE *)(a1 + 24) = 1;
  return result;
}

void sub_18885537C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x10A2C40A72D8349);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t **v13;
  uint64_t **v14;
  __int128 v15;

  v4 = a4;
  v5 = a3;
  v7 = result;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(v8 + 8 * a3);
  if (!v9)
  {
    *(_QWORD *)(a4 + 48) = 0;
    *(_QWORD *)(v8 + 8 * a3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(_QWORD *)(v8 + 8 * (a3 ^ 1)))
  {
    v10 = 0;
    v11 = *(_QWORD *)(v8 + 8 * a3);
    do
    {
      ++v10;
      v11 = *(_QWORD *)(v11 + 48);
    }
    while (v11);
    if (v10 < 8)
    {
      *(_QWORD *)(a4 + 48) = v9;
      *(_QWORD *)(v8 + 8 * a3) = a4;
LABEL_11:
      *v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::TreeConvert(a2, a3);
    *(_QWORD *)(v4 + 48) = 0;
    v14 = *(uint64_t ***)(*(_QWORD *)(a2 + 32) + 8 * v5);
    *(_QWORD *)&v15 = v4;
    *((_QWORD *)&v15 + 1) = v4;
    result = std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(v14, (google::protobuf::MapKey **)&v15, &v15);
    v5 &= ~1uLL;
    v4 = result[5];
LABEL_8:
    v12 = *(_QWORD *)(a2 + 24);
    if (v5 < v12)
      v12 = v5;
    *(_QWORD *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  *(_QWORD *)(a4 + 48) = 0;
  v13 = *(uint64_t ***)(v8 + 8 * a3);
  *(_QWORD *)&v15 = a4;
  *((_QWORD *)&v15 + 1) = a4;
  result = std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(v13, (google::protobuf::MapKey **)&v15, &v15);
  *v7 = result[5];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::Resize(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char *v4;
  _QWORD *v6;
  char *v7;
  unint64_t v8;
  google::protobuf::MapKey *v9;
  google::protobuf::MapKey *v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17[3];

  v3 = *(_QWORD *)(a1 + 8);
  if (v3 == 1)
  {
    *(_QWORD *)(a1 + 24) = 8;
    *(_QWORD *)(a1 + 8) = 8;
    v17[0] = *(_QWORD *)(a1 + 40);
    v4 = google::protobuf::internal::MapAllocator<void *>::allocate(v17, 8);
    *((_OWORD *)v4 + 2) = 0u;
    *((_OWORD *)v4 + 3) = 0u;
    *(_OWORD *)v4 = 0u;
    *((_OWORD *)v4 + 1) = 0u;
    *(_QWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 16) = a1 >> 12;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2;
    v6 = *(_QWORD **)(a1 + 32);
    v17[0] = *(_QWORD *)(a1 + 40);
    v7 = google::protobuf::internal::MapAllocator<void *>::allocate(v17, a2);
    bzero(v7, 8 * a2);
    v8 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a1 + 8);
    for (*(_QWORD *)(a1 + 32) = v7; v8 < v3; ++v8)
    {
      v9 = (google::protobuf::MapKey *)v6[v8];
      if (v9)
      {
        if (v9 == (google::protobuf::MapKey *)v6[v8 ^ 1])
        {
          v12 = *(_QWORD **)v9;
          do
          {
            v13 = std::hash<google::protobuf::MapKey>::operator()((google::protobuf::MapKey *)v12[4]);
            google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique(v17, a1, (*(_QWORD *)(a1 + 8) - 1) & ((0x9E3779B97F4A7C15 * (*(_QWORD *)(a1 + 16) ^ v13)) >> 32), v12[5]);
            v14 = (_QWORD *)v12[1];
            if (v14)
            {
              do
              {
                v15 = v14;
                v14 = (_QWORD *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                v15 = (_QWORD *)v12[2];
                v16 = *v15 == (_QWORD)v12;
                v12 = v15;
              }
              while (!v16);
            }
            v12 = v15;
          }
          while (v15 != (_QWORD *)((char *)v9 + 8));
          ++v8;
          google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::DestroyTree(*(_QWORD *)(a1 + 40), (uint64_t)v9);
        }
        else
        {
          do
          {
            v10 = (google::protobuf::MapKey *)*((_QWORD *)v9 + 6);
            v11 = std::hash<google::protobuf::MapKey>::operator()(v9);
            google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::InsertUnique(v17, a1, (*(_QWORD *)(a1 + 8) - 1) & ((0x9E3779B97F4A7C15 * (*(_QWORD *)(a1 + 16) ^ v11)) >> 32), (uint64_t)v9);
            v9 = v10;
          }
          while (v10);
        }
      }
    }
    if (!*(_QWORD *)(a1 + 40))
      operator delete(v6);
  }
}

char *google::protobuf::internal::MapAllocator<void *>::allocate(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = 8 * a2;
  if (!*a1)
    return (char *)operator new(8 * a2);
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
    (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(v2 + 32) + 32) + 40))(*(_QWORD *)(*(_QWORD *)(v2 + 32) + 32), MEMORY[0x1E0DE4EE8], v3);
  return google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v2, v3);
}

char *google::protobuf::Arena::OwnDestructor<google::protobuf::MapKey>(char *result, void *a2)
{
  if (a2)
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::MapKey>);
  return result;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::MapKey>(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 24) == 9 && *(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

uint64_t *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t **AlignedAndAddCleanup;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t *result;

  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
  {
    if ((*(_BYTE *)(v4 + 24) & 1) != 0)
    AlignedAndAddCleanup = (uint64_t **)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v4, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::map<std::reference_wrapper<google::protobuf::MapKey const>,void *,std::less<google::protobuf::MapKey>,google::protobuf::internal::MapAllocator<std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>>>);
    v6 = AlignedAndAddCleanup;
    AlignedAndAddCleanup[1] = 0;
    v7 = (uint64_t *)(AlignedAndAddCleanup + 1);
    AlignedAndAddCleanup[2] = (uint64_t *)v4;
    AlignedAndAddCleanup[3] = 0;
  }
  else
  {
    AlignedAndAddCleanup = (uint64_t **)operator new();
    v6 = AlignedAndAddCleanup;
    AlignedAndAddCleanup[2] = 0;
    AlignedAndAddCleanup[3] = 0;
    AlignedAndAddCleanup[1] = 0;
    v7 = (uint64_t *)(AlignedAndAddCleanup + 1);
  }
  *AlignedAndAddCleanup = v7;
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

uint64_t *google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::CopyListToTree(uint64_t *result, uint64_t a2, uint64_t **a3)
{
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v3 = result[a2];
  if (v3)
  {
    do
    {
      *(_QWORD *)&v6 = v3;
      *((_QWORD *)&v6 + 1) = v3;
      result = std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(a3, (google::protobuf::MapKey **)&v6, &v6);
      v5 = *(_QWORD *)(v3 + 48);
      *(_QWORD *)(v3 + 48) = 0;
      v3 = v5;
    }
    while (v5);
  }
  return result;
}

void google::protobuf::internal::arena_destruct_object<std::map<std::reference_wrapper<google::protobuf::MapKey const>,void *,std::less<google::protobuf::MapKey>,google::protobuf::internal::MapAllocator<std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>>>(uint64_t a1)
{
  std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::destroy(a1, *(_QWORD **)(a1 + 8));
}

uint64_t *std::__tree<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::__map_value_compare<std::reference_wrapper<google::protobuf::MapKey const>,std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>,std::less<google::protobuf::MapKey>,true>,google::protobuf::internal::MapAllocator<std::__value_type<std::reference_wrapper<google::protobuf::MapKey const>,void *>>>::__emplace_unique_key_args<std::reference_wrapper<google::protobuf::MapKey const>,std::pair<std::reference_wrapper<google::protobuf::MapKey const> const,void *>>(uint64_t **a1, google::protobuf::MapKey **a2, _OWORD *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *Aligned;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;

  v6 = a1 + 1;
  v5 = a1[1];
  if (!v5)
  {
    v8 = (uint64_t *)(a1 + 1);
LABEL_9:
    v9 = a1[2];
    if (v9)
    {
      if ((v9[3] & 1) != 0)
        (*(void (**)(_QWORD, _QWORD, uint64_t))(**(_QWORD **)(v9[4] + 32) + 40))(*(_QWORD *)(v9[4] + 32), MEMORY[0x1E0DE4EE8], 48);
      Aligned = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v9, 0x30uLL);
    }
    else
    {
      Aligned = (uint64_t *)operator new(0x30uLL);
    }
    v11 = Aligned;
    *((_OWORD *)Aligned + 2) = *a3;
    *Aligned = 0;
    Aligned[1] = 0;
    Aligned[2] = (uint64_t)v8;
    *v6 = Aligned;
    v12 = (uint64_t *)**a1;
    v13 = Aligned;
    if (v12)
    {
      *a1 = v12;
      v13 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[3] = (uint64_t *)((char *)a1[3] + 1);
    return v11;
  }
  while (1)
  {
    while (1)
    {
      v8 = v5;
      if (!google::protobuf::MapKey::operator<(*a2, (unsigned __int8 *)v5[4]))
        break;
      v5 = (uint64_t *)*v8;
      v6 = (uint64_t **)v8;
      if (!*v8)
        goto LABEL_9;
    }
    if (!google::protobuf::MapKey::operator<((google::protobuf::MapKey *)v8[4], (unsigned __int8 *)*a2))
      break;
    v6 = (uint64_t **)(v8 + 1);
    v5 = (uint64_t *)v8[1];
    if (!v5)
      goto LABEL_9;
  }
  v11 = *v6;
  if (!*v6)
    goto LABEL_9;
  return v11;
}

uint64_t google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2;
  v3 = *(_QWORD *)(a2 + 48);
  if (v2 == a1)
    return v3;
  *(_QWORD *)(v2 + 48) = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::EraseFromLinkedList();
  return v2;
}

google::protobuf::MapKey **google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++(google::protobuf::MapKey **a1)
{
  google::protobuf::MapKey *v2;
  google::protobuf::MapKey *v3;
  google::protobuf::MapKey *v4;
  uint64_t v5;
  uint64_t v6;
  google::protobuf::MapKey *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  unsigned __int8 *v17;
  uint64_t v18;

  v2 = *a1;
  v3 = (google::protobuf::MapKey *)*((_QWORD *)*a1 + 6);
  if (v3)
    goto LABEL_2;
  v16 = 0;
  v4 = a1[1];
  v5 = (unint64_t)a1[2] & (*((_QWORD *)v4 + 1) - 1);
  a1[2] = (google::protobuf::MapKey *)v5;
  v6 = *((_QWORD *)v4 + 4);
  v7 = *(google::protobuf::MapKey **)(v6 + 8 * v5);
  if (v7 == v2)
    goto LABEL_11;
  if (v7 && v7 != *(google::protobuf::MapKey **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      v7 = (google::protobuf::MapKey *)*((_QWORD *)v7 + 6);
      if (!v7)
        break;
      if (v7 == v2)
        goto LABEL_11;
    }
  }
  google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(&v17, (unsigned __int8 *)v4, v2, &v16);
  v5 = v18;
  a1[2] = (google::protobuf::MapKey *)v18;
  v8 = *((_QWORD *)a1[1] + 4);
  v9 = *(_QWORD *)(v8 + 8 * v5);
  if (!v9 || v9 != *(_QWORD *)(v8 + 8 * (v5 ^ 1)))
  {
LABEL_11:
    v10 = v5 + 1;
LABEL_12:
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef>>::SearchFrom(a1, v10);
    return a1;
  }
  v12 = v16;
  v13 = (_QWORD *)v16[1];
  if (v13)
  {
    do
    {
      v14 = v13;
      v13 = (_QWORD *)*v13;
    }
    while (v13);
  }
  else
  {
    do
    {
      v14 = (_QWORD *)v12[2];
      v15 = *v14 == (_QWORD)v12;
      v12 = v14;
    }
    while (!v15);
  }
  v16 = v14;
  if (v14 == (_QWORD *)(v9 + 8))
  {
    v10 = v5 + 2;
    goto LABEL_12;
  }
  v3 = (google::protobuf::MapKey *)v14[5];
LABEL_2:
  *a1 = v3;
  return a1;
}

google::protobuf::MapKey **google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::operator=(google::protobuf::MapKey **a1, google::protobuf::MapKey **a2)
{
  google::protobuf::MapKey *v4;
  google::protobuf::MapKey *v5;
  google::protobuf::MapKey *v6;
  uint64_t v7;
  _QWORD v9[3];
  __int128 v10;
  google::protobuf::MapKey *v11;

  if (a1 != a2)
  {
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::clear((uint64_t)a1);
    v4 = a2[3];
    v5 = a2[1];
    if (v5 <= v4)
    {
      v7 = 0;
    }
    else
    {
      v6 = a2[4];
      while (1)
      {
        v7 = *((_QWORD *)v6 + (_QWORD)v4);
        if (v7)
          break;
        v4 = (google::protobuf::MapKey *)((char *)v4 + 1);
        if (v5 == v4)
        {
          v7 = 0;
          v4 = a2[1];
          goto LABEL_10;
        }
      }
      if (v7 == *((_QWORD *)v6 + ((unint64_t)v4 ^ 1)))
        v7 = *(_QWORD *)(*(_QWORD *)v7 + 40);
    }
LABEL_10:
    *(_QWORD *)&v10 = v7;
    *((_QWORD *)&v10 + 1) = a2;
    v11 = v4;
    memset(v9, 0, sizeof(v9));
    google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>(a1, &v10, v9);
  }
  return a1;
}

google::protobuf::MapKey **google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::insert<google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::const_iterator>(google::protobuf::MapKey **result, __int128 *a2, _QWORD *a3)
{
  google::protobuf::MapKey *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 *v11[4];

  v9 = *a2;
  v10 = *((_QWORD *)a2 + 2);
  v4 = (google::protobuf::MapKey *)v9;
  if ((_QWORD)v9 != *a3)
  {
    v5 = (unsigned __int8 *)result;
    do
    {
      google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::FindHelper<google::protobuf::MapKey>(v11, v5, v4, 0);
      if (!v11[0])
      {
        v6 = v9;
        google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::insert<google::protobuf::MapKey const&>((uint64_t)v11, (unint64_t)v5, (google::protobuf::MapKey *)v9);
        v7 = v11[0];
        v8 = *(_QWORD *)(v6 + 32);
        *((_DWORD *)v11[0] + 10) = *(_DWORD *)(v6 + 40);
        *((_QWORD *)v7 + 4) = v8;
      }
      result = google::protobuf::Map<google::protobuf::MapKey,google::protobuf::MapValueRef>::InnerMap::iterator_base<google::protobuf::MapPair<google::protobuf::MapKey,google::protobuf::MapValueRef> const>::operator++((google::protobuf::MapKey **)&v9);
      v4 = (google::protobuf::MapKey *)v9;
    }
    while ((_QWORD)v9 != *a3);
  }
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(unsigned int *result, _QWORD *a2)
{
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;

  v2 = a2[1];
  if (*(_QWORD *)result == v2 && (v4 = (int *)*((_QWORD *)result + 2)) != 0 && (v5 = *v4, (int)v5 < (int)result[3]))
  {
    v6 = v4 + 2;
    v7 = (int)result[2];
    if ((int)v7 < (int)v5)
      *(_QWORD *)&v6[2 * v5] = *(_QWORD *)&v6[2 * v7];
    *(_QWORD *)&v6[2 * v7] = a2;
    result[2] = v7 + 1;
    ++**((_DWORD **)result + 2);
  }
  else
  {
    v3 = (char *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 1) != 0)
      v3 = *(char **)v3;
    return google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(result, a2, v3, *(char **)result);
  }
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(unsigned int *a1, void *a2, char *a3, char *a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = (uint64_t)a2;
  if (a3 || !a4)
  {
    if (a4 != a3)
    {
      v7 = (*(uint64_t (**)(void *, char *))(*(_QWORD *)a2 + 32))(a2, a4);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(v5, v7);
      if (!a3)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
      v5 = v7;
    }
  }
  else
  {
    google::protobuf::Arena::Own<google::protobuf::Message>(a4, a2);
  }
  return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(a1, v5);
}

char *google::protobuf::Arena::Own<google::protobuf::Message>(char *result, void *a2)
{
  if (a2)
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))google::protobuf::internal::arena_delete_object<google::protobuf::Message>);
  return result;
}

uint64_t google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a1);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(unsigned int *this, uint64_t a2)
{
  unsigned int *v3;
  int *v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t v11;

  v3 = this;
  v4 = (int *)*((_QWORD *)this + 2);
  if (!v4)
  {
    v7 = this[2];
    v5 = this[3];
    goto LABEL_11;
  }
  v5 = this[2];
  v6 = this[3];
  v7 = v5;
  if (v5 == v6)
  {
LABEL_11:
    this = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5 - v7 + 1);
    goto LABEL_12;
  }
  v8 = *v4;
  if ((_DWORD)v8 != v6)
  {
    if (v5 >= (int)v8)
    {
      v10 = v8 + 1;
      goto LABEL_13;
    }
    *(_QWORD *)&v4[2 * v8 + 2] = *(_QWORD *)&v4[2 * v5 + 2];
LABEL_12:
    v4 = (int *)*((_QWORD *)v3 + 2);
    v10 = *v4 + 1;
LABEL_13:
    *v4 = v10;
    goto LABEL_14;
  }
  this = *(unsigned int **)&v4[2 * v5 + 2];
  if (this)
    v9 = *(_QWORD *)v3 == 0;
  else
    v9 = 0;
  if (v9)
  {
    this = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)this + 8))(this);
    v4 = (int *)*((_QWORD *)v3 + 2);
  }
LABEL_14:
  v11 = (int)v3[2];
  v3[2] = v11 + 1;
  *(_QWORD *)&v4[2 * v11 + 2] = a2;
  return this;
}

uint64_t google::protobuf::internal::arena_delete_object<google::protobuf::Message>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void google::protobuf::StringPiece::LogFatalSizeTooBig(google::protobuf::StringPiece *this, const std::string::value_type *a2, const char *a3)
{
  int v5;
  const char *v6;
  int v7;
  std::string __p;
  char __str[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 3;
  v6 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/stubs/stringpiece.cc";
  v7 = 49;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "size too big: ");
  snprintf(__str, 0x80uLL, "%lu", this);
  __str[127] = 0;
  std::string::append(&__p, __str);
  std::string::append(&__p, " details: ");
  std::string::append(&__p, a2);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_188855F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::StringPiece::find(google::protobuf::StringPiece *this, int a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;

  v3 = *((_QWORD *)this + 1);
  if (v3 < 1 || v3 <= a3)
    return -1;
  v6 = *(_QWORD *)this;
  v7 = memchr((void *)(*(_QWORD *)this + a3), a2, v3 - a3);
  if (v7)
    return (uint64_t)v7 - v6;
  else
    return -1;
}

uint64_t google::protobuf::StringPiece::find_first_of(google::protobuf::StringPiece *a1, unsigned __int8 *a2, uint64_t a3, int64_t a4)
{
  uint64_t v4;
  unsigned int v7;
  _OWORD v8[16];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 1);
  if (v4 < 1 || a3 < 1)
    return -1;
  if (a3 == 1)
    return google::protobuf::StringPiece::find(a1, (char)*a2, a4);
  memset(v8, 0, sizeof(v8));
  do
  {
    v7 = *a2++;
    *((_BYTE *)v8 + v7) = 1;
    --a3;
  }
  while (a3);
  if (v4 <= a4)
    return -1;
  while (!*((_BYTE *)v8 + *(unsigned __int8 *)(*(_QWORD *)a1 + a4)))
  {
    if (v4 == ++a4)
      return -1;
  }
  return a4;
}

uint64_t google::protobuf::StringPiece::find_first_not_of(_QWORD *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int v5;
  _OWORD v7[16];
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = a1[1];
  if (v4 < 1)
    return -1;
  if (a3 < 1)
    return 0;
  if (a3 != 1)
  {
    memset(v7, 0, sizeof(v7));
    do
    {
      v5 = *a2++;
      *((_BYTE *)v7 + v5) = 1;
      --a3;
    }
    while (a3);
    if (v4 > a4)
    {
      while (*((_BYTE *)v7 + *(unsigned __int8 *)(*a1 + a4)))
      {
        if (v4 == ++a4)
          return -1;
      }
      return a4;
    }
    return -1;
  }
  if (v4 <= (unint64_t)a4)
    return -1;
  while (*(unsigned __int8 *)(*a1 + a4) == *a2)
  {
    if (v4 == ++a4)
      return -1;
  }
  return a4;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(google::protobuf::io::EpsCopyOutputStream *a1, int a2, uint64_t a3, unsigned __int8 *a4)
{
  int64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  char *v15;
  const void *v16;

  if (*(char *)(a3 + 23) < 0)
  {
    v4 = *(_QWORD *)(a3 + 8);
    if (v4 > 127)
      return google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a1, a2, (void **)a3, a4);
  }
  else
  {
    v4 = *(unsigned __int8 *)(a3 + 23);
  }
  v5 = 8 * a2;
  v6 = 1;
  v7 = 2;
  v8 = 3;
  v9 = 4;
  if ((8 * a2) >> 28)
    v9 = 5;
  if (v5 >= 0x200000)
    v8 = v9;
  if (v5 >= 0x4000)
    v7 = v8;
  if (v5 >= 0x80)
    v6 = v7;
  if ((uint64_t)(*(_QWORD *)a1 + ~(unint64_t)&a4[v6] + 16) < v4)
    return google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a1, a2, (void **)a3, a4);
  v10 = v5 | 2;
  if ((v5 | 2) > 0x7F)
  {
    *a4 = v5 | 0x82;
    v12 = v5 >> 7;
    if (v10 >> 14)
    {
      v11 = a4 + 2;
      do
      {
        *(v11 - 1) = v12 | 0x80;
        v13 = v12 >> 7;
        ++v11;
        v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(v11 - 1) = v13;
    }
    else
    {
      a4[1] = v12;
      v11 = a4 + 2;
    }
  }
  else
  {
    *a4 = v10;
    v11 = a4 + 1;
  }
  *v11 = v4;
  v15 = (char *)(v11 + 1);
  if (*(char *)(a3 + 23) >= 0)
    v16 = (const void *)a3;
  else
    v16 = *(const void **)a3;
  memcpy(v15, v16, v4);
  return (unsigned __int8 *)&v15[v4];
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::ReadString(uint64_t a1, std::string::value_type *__s, int a3, std::string *a4)
{
  uint64_t v6;

  if (*(_QWORD *)(a1 + 8) - (_QWORD)__s + 16 < a3)
    return google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(a1, __s, a3, a4);
  v6 = a3;
  MEMORY[0x18D7640B8](a4, __s, a3);
  return (google::protobuf::internal::EpsCopyInputStream *)&__s[v6];
}

void google::protobuf::UnknownFieldSet::~UnknownFieldSet(google::protobuf::UnknownFieldSet *this)
{
  void *v2;

  v2 = *(void **)this;
  if (v2 != *((void **)this + 1))
  {
    google::protobuf::UnknownFieldSet::ClearFallback(this);
    v2 = *(void **)this;
  }
  if (v2)
  {
    *((_QWORD *)this + 1) = v2;
    operator delete(v2);
  }
}

uint64_t google::protobuf::Reflection::SpaceUsedLong(google::protobuf::Reflection *this, const google::protobuf::Message *a2)
{
  uint64_t v4;
  uint64_t v5;
  google::protobuf::UnknownFieldSet *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const google::protobuf::FieldDescriptor *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  unsigned int *v32;
  uint64_t v33;
  unsigned int *v34;
  _QWORD *v35;
  BOOL v36;
  uint64_t v37;
  _BOOL4 IsMapFieldInApi;
  char *v39;
  std::mutex *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  void (*v48)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v49)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v50)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v51;

  v4 = *((unsigned int *)this + 12);
  v5 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
  if ((v5 & 1) != 0)
    v6 = (google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  else
    v6 = (google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance(this);
  v7 = google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(v6) + v4;
  v8 = *((unsigned int *)this + 10);
  if ((_DWORD)v8 != -1)
    v7 += google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong((const google::protobuf::Message *)((char *)a2 + v8));
  if ((*((_DWORD *)this + 18) & 0x80000000) == 0)
  {
    v9 = 0;
    v46 = (char *)a2 + 4;
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)this + 40);
      v11 = (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9);
      if (*((_DWORD *)v11 + 15) == 3)
      {
        v12 = *(unint64_t **)(v10 + 152 * v9 + 48);
        if (v12)
        {
          v47 = v10 + 152 * v9;
          v48 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v13 = atomic_load(v12);
          if (v13 != -1)
          {
            v50 = &v48;
            v51 = &v47;
            v49 = &v50;
            std::__call_once(v12, &v49, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        switch(*(_DWORD *)(v10 + 152 * v9 + 56))
        {
          case 1:
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            v14 = *(unsigned int *)&v46[google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))];
            v15 = 8 * v14;
            goto LABEL_34;
          case 2:
          case 5:
          case 7:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x11:
            v14 = *(unsigned int *)&v46[google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))];
            v15 = 4 * v14;
LABEL_34:
            v27 = v15 + 8;
            goto LABEL_35;
          case 8:
            v14 = *(unsigned int *)&v46[google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))];
            v27 = v14 + 8;
LABEL_35:
            if ((int)v14 <= 0)
              v28 = 0;
            else
              v28 = v27;
            goto LABEL_38;
          case 9:
          case 0xC:
            v31 = (char *)a2
                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9));
            v28 = 8 * *((int *)v31 + 3);
            v32 = (unsigned int *)*((_QWORD *)v31 + 2);
            if (v32)
            {
              v33 = *v32;
              if ((int)v33 >= 1)
              {
                v34 = v32 + 2;
                do
                {
                  v35 = *(_QWORD **)v34;
                  if (*(char *)(*(_QWORD *)v34 + 23) < 0
                    && (*v35 >= (unint64_t)v35 ? (v36 = *v35 >= (unint64_t)(v35 + 3)) : (v36 = 1), v36))
                  {
                    v37 = (v35[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
                  }
                  else
                  {
                    v37 = 0;
                  }
                  v28 += v37 + 24;
                  v34 += 2;
                  --v33;
                }
                while (v33);
              }
              v28 += 8;
            }
LABEL_38:
            v7 += v28;
            break;
          case 0xA:
          case 0xB:
            v39 = (char *)a2
                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), v11);
            if (IsMapFieldInApi)
            {
              v40 = (std::mutex *)(v39 + 24);
              std::mutex::lock((std::mutex *)(v39 + 24));
              v41 = (*(uint64_t (**)(char *))(*(_QWORD *)v39 + 104))(v39);
              std::mutex::unlock(v40);
              v7 += v41;
            }
            else
            {
              v42 = 8 * *((int *)v39 + 3);
              v43 = (int *)*((_QWORD *)v39 + 2);
              if (v43)
              {
                if (*v43 >= 1)
                {
                  v44 = 0;
                  do
                  {
                    v42 += (*(uint64_t (**)(_QWORD))(**(_QWORD **)&v43[2 * v44 + 2] + 136))(*(_QWORD *)&v43[2 * v44 + 2]);
                    ++v44;
                    v43 = (int *)*((_QWORD *)v39 + 2);
                  }
                  while (v44 < *v43);
                }
                v42 += 8;
              }
              v7 += v42;
            }
            break;
          default:
            break;
        }
      }
      else
      {
        v16 = v10 + 152 * v9;
        v19 = *(_QWORD *)(v16 + 88);
        v18 = (uint64_t *)(v16 + 88);
        v17 = v19;
        if (!v19
          || *(_DWORD *)(v17 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v17 + 32) + 65)
          || *(_DWORD *)((char *)a2
                       + *((_DWORD *)this + 11)
                       - 1431655764
                       * ((unint64_t)(v17 - *(_QWORD *)(*(_QWORD *)(v17 + 16) + 48)) >> 4)) == *(_DWORD *)(v10 + 152 * v9 + 68))
        {
          v20 = *(unint64_t **)(v10 + 152 * v9 + 48);
          if (v20)
          {
            v47 = v10 + 152 * v9;
            v48 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v21 = atomic_load(v20);
            if (v21 != -1)
            {
              v50 = &v48;
              v51 = &v47;
              v49 = &v50;
              std::__call_once(v20, &v49, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          v22 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + 152 * v9 + 56)];
          if (v22 == 10)
          {
            if (*((const google::protobuf::Message **)this + 1) != a2)
            {
              v29 = *(_QWORD *)((char *)a2
                              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9)));
              if (v29)
                v7 += (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 136))(v29);
            }
          }
          else if (v22 == 9)
          {
            if ((v23 = *(_QWORD *)((_BYTE *)a2
                                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)(v10 + 152 * v9))) & 0xFFFFFFFFFFFFFFFELL, (v24 = *v18) != 0)&& (*(_DWORD *)(v24 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v24 + 32) + 65))|| v23 != (*(_QWORD *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((_QWORD *)this + 1), *((_QWORD *)this + 2), (uint64_t)v11) & 0xFFFFFFFFFFFFFFFELL))
            {
              if (*(char *)(v23 + 23) < 0
                && (*(_QWORD *)v23 >= v23 ? (v25 = *(_QWORD *)v23 >= v23 + 24) : (v25 = 1), v25))
              {
                v26 = (*(_QWORD *)(v23 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
              }
              else
              {
                v26 = 0;
              }
              v7 += v26 + 24;
            }
          }
        }
      }
    }
    while (v9++ < *((int *)this + 18));
  }
  return v7;
}

BOOL google::protobuf::`anonymous namespace'::IsMapFieldInApi(uint64_t a1)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  void (*v6)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v7;
  _QWORD v8[2];

  v2 = *(unint64_t **)(a1 + 48);
  if (v2)
  {
    v5 = a1;
    v6 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v8[0] = &v6;
      v8[1] = &v5;
      v7 = v8;
      std::__call_once(v2, &v7, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *(_DWORD *)(a1 + 56) == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32) + 75) != 0;
}

unsigned int *google::protobuf::Reflection::Swap(unsigned int *this, google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  unsigned int *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  uint64_t v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  uint64_t v21;
  int v22;
  const std::string::value_type *v23;
  std::string::size_type v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  google::protobuf::Message *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int *v36;
  int *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  signed int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int FieldOffset;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  _QWORD *v70;
  char *v71;
  int IsMapFieldInApi;
  unsigned int v73;
  unsigned int v74;
  unint64_t *v75;
  unint64_t v76;
  void *v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t *v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t *v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  int *v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  char *v92;
  char v93;
  unsigned int v94;
  unsigned int v95;
  int *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  google::protobuf::internal::ArenaImpl *v100;
  uint64_t v101;
  google::protobuf::internal::ArenaImpl *v102;
  unsigned int v103;
  unsigned int v104;
  _QWORD *FieldDefault;
  std::string **v106;
  uint64_t *v107;
  uint64_t v108;
  std::string *v109;
  uint64_t v110;
  unint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  _BOOL4 v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  google::protobuf::Reflection *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  const char *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  const char *v135;
  uint64_t v136;
  google::protobuf::Message *v137;
  std::string *v138;
  google::protobuf::Descriptor *v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  int v143;
  int v144;
  google::protobuf::MessageFactory *v145;
  const char *v146;
  uint64_t FieldByNumber;
  unint64_t *v148;
  unint64_t v149;
  std::string::value_type *v150;
  std::string::size_type size;
  char v152;
  google::protobuf::Message *v153;
  google::protobuf::MessageFactory *v154;
  const char *v155;
  uint64_t v156;
  unint64_t *v157;
  unint64_t v158;
  unsigned int v159;
  const char *v160;
  unint64_t *v161;
  unint64_t v162;
  int *v163;
  unint64_t *v164;
  unint64_t v165;
  unint64_t *v166;
  unint64_t v167;
  void *v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  const char *v173;
  google::protobuf::Message *v174;
  const char *v175;
  unint64_t *v176;
  unint64_t v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  google::protobuf::internal::ReflectionSchema *v188;
  std::string *v189;
  google::protobuf::Message *v190;
  std::string v192;
  std::string v193;
  std::string *p_str;
  const char *v195;
  int v196;
  _BYTE __p[32];
  int v198;
  char v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  uint64_t (*v207)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (*v208)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string __str;
  std::string v210[4];
  char v211;
  uint64_t v212;

  v212 = *MEMORY[0x1E0C80C00];
  if (a2 != a3)
  {
    v4 = this;
    (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
    if (v5 != v4)
    {
      LODWORD(__str.__r_.__value_.__l.__data_) = 3;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/generated_message_reflection.cc";
      LODWORD(__str.__r_.__value_.__r.__words[2]) = 596;
      memset(v210, 0, 24);
      std::string::append(v210, "CHECK failed: (message1->GetReflection()) == (this): ");
      std::string::append(v210, "First argument to Swap() (of type \"");
      v6 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 152))(a2);
      v7 = *(_QWORD *)(v6 + 8);
      v8 = *(char *)(v7 + 23);
      v9 = v8 >= 0 ? *(const std::string::value_type **)(v6 + 8) : *(const std::string::value_type **)v7;
      v10 = v8 >= 0 ? *(unsigned __int8 *)(v7 + 23) : *(_QWORD *)(v7 + 8);
      std::string::append(v210, v9, v10);
      std::string::append(v210, "\") is not compatible with this reflection object (which is for type \"");
      v11 = *(_QWORD *)(*(_QWORD *)v4 + 8);
      v12 = *(char *)(v11 + 23);
      v13 = v12 >= 0 ? *(const std::string::value_type **)(*(_QWORD *)v4 + 8) : *(const std::string::value_type **)v11;
      v14 = v12 >= 0 ? *(unsigned __int8 *)(v11 + 23) : *(_QWORD *)(v11 + 8);
      std::string::append(v210, v13, v14);
      std::string::append(v210, "\").  Note that the exact same class is required; not just the same descriptor.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
      if (SHIBYTE(v210[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v210[0].__r_.__value_.__l.__data_);
    }
    v190 = a2;
    (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 152))(a3);
    if (v15 != v4)
    {
      LODWORD(__str.__r_.__value_.__l.__data_) = 3;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libpro"
                                                                "tobuf/src/google/protobuf/generated_message_reflection.cc";
      LODWORD(__str.__r_.__value_.__r.__words[2]) = 604;
      memset(v210, 0, 24);
      std::string::append(v210, "CHECK failed: (message2->GetReflection()) == (this): ");
      std::string::append(v210, "Second argument to Swap() (of type \"");
      v16 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 152))(a3);
      v17 = *(_QWORD *)(v16 + 8);
      v18 = *(char *)(v17 + 23);
      v19 = v18 >= 0 ? *(const std::string::value_type **)(v16 + 8) : *(const std::string::value_type **)v17;
      v20 = v18 >= 0 ? *(unsigned __int8 *)(v17 + 23) : *(_QWORD *)(v17 + 8);
      std::string::append(v210, v19, v20);
      std::string::append(v210, "\") is not compatible with this reflection object (which is for type \"");
      v21 = *(_QWORD *)(*(_QWORD *)v4 + 8);
      v22 = *(char *)(v21 + 23);
      v23 = v22 >= 0 ? *(const std::string::value_type **)(*(_QWORD *)v4 + 8) : *(const std::string::value_type **)v21;
      v24 = v22 >= 0 ? *(unsigned __int8 *)(v21 + 23) : *(_QWORD *)(v21 + 8);
      std::string::append(v210, v23, v24);
      std::string::append(v210, "\").  Note that the exact same class is required; not just the same descriptor.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__str);
      if (SHIBYTE(v210[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v210[0].__r_.__value_.__l.__data_);
    }
    v25 = v4[9];
    v26 = *(_QWORD *)((char *)a2 + v25);
    v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
    if ((v26 & 1) != 0)
      v27 = *(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFFELL);
    v28 = *(_QWORD *)((char *)a3 + v25);
    v29 = (_QWORD *)(v28 & 0xFFFFFFFFFFFFFFFELL);
    if ((v28 & 1) != 0)
      v29 = (_QWORD *)*v29;
    if ((_QWORD *)v27 == v29)
    {
      v33 = v4[8];
      if ((_DWORD)v33 != -1)
      {
        v34 = *(unsigned int *)(*(_QWORD *)v4 + 104);
        if ((int)v34 >= 1)
        {
          v35 = 0;
          v36 = (int *)((char *)a2 + v33);
          v37 = (int *)((char *)a3 + v33);
          v38 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 40) + 88);
          do
          {
            if (*((_DWORD *)v38 - 7) != 3)
            {
              v39 = *v38;
              if (!*v38 || *(_DWORD *)(v39 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v39 + 32) + 65))
                ++v35;
            }
            v38 += 19;
            --v34;
          }
          while (v34);
          if (v35 >= 1)
          {
            v40 = (v35 + 31) >> 5;
            do
            {
              v41 = *v36;
              *v36++ = *v37;
              *v37++ = v41;
              --v40;
            }
            while (v40);
          }
        }
      }
      v42 = v4[18];
      if ((v42 & 0x80000000) == 0)
      {
        v43 = 0;
        v44 = -1;
        do
        {
          v45 = *(_QWORD *)(*(_QWORD *)v4 + 40);
          v46 = v45 + v43;
          v47 = *(_QWORD *)(v45 + v43 + 88);
          if (!v47 || *(_DWORD *)(v47 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v47 + 32) + 65))
          {
            v48 = *(unint64_t **)(v46 + 48);
            if (*(_DWORD *)(v46 + 60) == 3)
            {
              if (v48)
              {
                v193.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v192.__r_.__value_.__r.__words[0] = v45 + v43;
                v49 = atomic_load(v48);
                if (v49 != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v193;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v192;
                  p_str = &__str;
                  std::__call_once(v48, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              v50 = v45 + v43;
              switch(*(_DWORD *)(v50 + 56))
              {
                case 1:
                  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v63 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<double>::Swap((int *)((char *)v190 + FieldOffset), (int *)((char *)a3 + v63));
                  break;
                case 2:
                  v64 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v65 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<float>::Swap((int *)((char *)v190 + v64), (int *)((char *)a3 + v65));
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  v56 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v57 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<long long>::Swap((int *)((char *)v190 + v56), (int *)((char *)a3 + v57));
                  break;
                case 4:
                case 6:
                  v60 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v61 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<unsigned long long>::Swap((int *)((char *)v190 + v60), (int *)((char *)a3 + v61));
                  break;
                case 5:
                case 0xE:
                case 0xF:
                case 0x11:
                  v51 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v52 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<int>::Swap((int *)((char *)v190 + v51), (int *)((char *)a3 + v52));
                  break;
                case 7:
                case 0xD:
                  v58 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v59 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<unsigned int>::Swap((int *)((char *)v190 + v58), (int *)((char *)a3 + v59));
                  break;
                case 8:
                  v66 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v67 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  google::protobuf::RepeatedField<BOOL>::Swap((int *)((char *)v190 + v66), (int *)((char *)a3 + v67));
                  break;
                case 9:
                case 0xC:
                  v68 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v69 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v70 = (_QWORD *)((char *)v190 + v68);
                  v71 = (char *)a3 + v69;
                  if (*(_QWORD *)v71 == *v70)
                    goto LABEL_114;
                  google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<std::string>>((google::protobuf::internal::RepeatedPtrFieldBase *)v70, (uint64_t *)v71);
                  break;
                case 0xA:
                case 0xB:
                  v73 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v74 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v70 = (_QWORD *)((char *)v190 + v73);
                  v71 = (char *)a3 + v74;
                  if (IsMapFieldInApi)
                  {
                    (*(void (**)(_QWORD *, char *))(*v70 + 80))(v70, v71);
                  }
                  else if (*(_QWORD *)v71 == *v70)
                  {
LABEL_114:
                    v124 = v70[1];
                    v125 = v70[2];
                    *(_OWORD *)(v70 + 1) = *(_OWORD *)(v71 + 8);
                    *((_QWORD *)v71 + 1) = v124;
                    *((_QWORD *)v71 + 2) = v125;
                  }
                  else
                  {
                    google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((google::protobuf::internal::RepeatedPtrFieldBase *)v70, (uint64_t *)v71);
                  }
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v195 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  v196 = 394;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v54 = *(unint64_t **)(v46 + 48);
                  if (v54)
                  {
                    v192.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                    v208 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v46;
                    v55 = atomic_load(v54);
                    if (v55 != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v192;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v208;
                      v193.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v54, &v193, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  goto LABEL_84;
              }
            }
            else
            {
              if (v48)
              {
                v193.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v192.__r_.__value_.__r.__words[0] = v45 + v43;
                v53 = atomic_load(v48);
                if (v53 != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v193;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v192;
                  p_str = &__str;
                  std::__call_once(v48, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              v50 = v45 + v43;
              switch(*(_DWORD *)(v50 + 56))
              {
                case 1:
                  v82 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v83 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v84 = (uint64_t *)((char *)v190 + v82);
                  v85 = *v84;
                  *v84 = *(_QWORD *)((char *)a3 + v83);
                  *(_QWORD *)((char *)a3 + v83) = v85;
                  break;
                case 2:
                  v86 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v87 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v88 = (int *)((char *)v190 + v86);
                  v89 = *v88;
                  *v88 = *(_DWORD *)((char *)a3 + v87);
                  *(_DWORD *)((char *)a3 + v87) = v89;
                  break;
                case 3:
                case 4:
                case 6:
                case 0x10:
                case 0x12:
                  v78 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v79 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v80 = (uint64_t *)((char *)v190 + v78);
                  v81 = *v80;
                  *v80 = *(_QWORD *)((char *)a3 + v79);
                  *(_QWORD *)((char *)a3 + v79) = v81;
                  break;
                case 5:
                case 7:
                case 0xD:
                case 0xE:
                case 0xF:
                case 0x11:
                  v94 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v95 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v96 = (int *)((char *)v190 + v94);
                  v97 = *v96;
                  *v96 = *(_DWORD *)((char *)a3 + v95);
                  *(_DWORD *)((char *)a3 + v95) = v97;
                  break;
                case 8:
                  v90 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v91 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v92 = (char *)v190 + v90;
                  v93 = *v92;
                  *v92 = *((_BYTE *)a3 + v91);
                  *((_BYTE *)a3 + v91) = v93;
                  break;
                case 9:
                case 0xC:
                  v98 = v4[9];
                  v99 = *(_QWORD *)((char *)v190 + v98);
                  v100 = (google::protobuf::internal::ArenaImpl *)(v99 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v99 & 1) != 0)
                    v100 = *(google::protobuf::internal::ArenaImpl **)v100;
                  v101 = *(_QWORD *)((char *)a3 + v98);
                  v102 = (google::protobuf::internal::ArenaImpl *)(v101 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v101 & 1) != 0)
                    v102 = *(google::protobuf::internal::ArenaImpl **)v102;
                  v103 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v104 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  FieldDefault = (_QWORD *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((_QWORD *)v4 + 1), *((_QWORD *)v4 + 2), v46);
                  v106 = (std::string **)((char *)v190 + v103);
                  v107 = (uint64_t *)((char *)a3 + v104);
                  v108 = (uint64_t)*v106;
                  if (v100 == v102)
                  {
                    *v106 = (std::string *)*v107;
                    *v107 = v108;
                  }
                  else
                  {
                    v109 = (std::string *)(*FieldDefault & 0xFFFFFFFFFFFFFFFELL);
                    v110 = *v107;
                    if ((std::string *)v108 == v109)
                    {
                      if ((std::string *)v110 != v109)
                      {
                        google::protobuf::internal::ArenaStringPtr::Set(v106, v109, (__int128 *)(v110 & 0xFFFFFFFFFFFFFFFELL), v100);
                        *v107 = (uint64_t)v109;
                      }
                    }
                    else if ((std::string *)v110 == v109)
                    {
                      google::protobuf::internal::ArenaStringPtr::Set((std::string **)((char *)a3 + v104), v109, (__int128 *)(v108 & 0xFFFFFFFFFFFFFFFELL), v102);
                      *v106 = v109;
                    }
                    else
                    {
                      v111 = v108 & 0xFFFFFFFFFFFFFFFELL;
                      if (*(char *)(v111 + 23) < 0)
                      {
                        std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)v111, *(_QWORD *)(v111 + 8));
                        v110 = *v107;
                      }
                      else
                      {
                        v112 = *(_OWORD *)v111;
                        __str.__r_.__value_.__r.__words[2] = *(_QWORD *)(v111 + 16);
                        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v112;
                      }
                      google::protobuf::internal::ArenaStringPtr::Set(v106, v109, (__int128 *)(v110 & 0xFFFFFFFFFFFFFFFELL), v100);
                      google::protobuf::internal::ArenaStringPtr::Set(v107, (uint64_t)v109, (__int128 *)&__str, v102);
                      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
                      {
                        v77 = (void *)__str.__r_.__value_.__r.__words[0];
                        goto LABEL_86;
                      }
                    }
                  }
                  break;
                case 0xA:
                case 0xB:
                  v113 = v4[9];
                  v114 = *(_QWORD *)((char *)v190 + v113);
                  v115 = (_QWORD *)(v114 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v114 & 1) != 0)
                    v115 = (_QWORD *)*v115;
                  v116 = *(_QWORD *)((char *)a3 + v113);
                  v117 = (_QWORD *)(v116 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v116 & 1) != 0)
                    v117 = (_QWORD *)*v117;
                  v118 = v115 == v117;
                  v119 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v120 = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(v4 + 2), (const google::protobuf::FieldDescriptor *)v46);
                  v121 = *(_QWORD *)((char *)v190 + v119);
                  if (v118)
                  {
                    *(_QWORD *)((char *)v190 + v119) = *(_QWORD *)((char *)a3 + v120);
                    *(_QWORD *)((char *)a3 + v120) = v121;
                  }
                  else
                  {
                    v122 = *(_QWORD *)((char *)a3 + v120);
                    if (v121)
                    {
                      if (v122)
                      {
                        (*(void (**)(uint64_t))(*(_QWORD *)v121 + 152))(v121);
                        google::protobuf::Reflection::Swap(v123, *(google::protobuf::Message **)((char *)v190 + v119), *(google::protobuf::Message **)((char *)a3 + v120));
                      }
                      else
                      {
                        v131 = *((_QWORD *)a3 + 1);
                        v132 = (_QWORD *)(v131 & 0xFFFFFFFFFFFFFFFELL);
                        if ((v131 & 1) != 0)
                          v132 = (_QWORD *)*v132;
                        v133 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v121 + 32))(v121, v132);
                        *(_QWORD *)((char *)a3 + v120) = v133;
                        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v133 + 112))(v133, *(_QWORD *)((char *)v190 + v119));
                        google::protobuf::Reflection::ClearField((google::protobuf::Reflection *)v4, v190, (const google::protobuf::FieldDescriptor *)v46, v134, v135);
                      }
                    }
                    else if (v122)
                    {
                      v126 = *((_QWORD *)v190 + 1);
                      v127 = (_QWORD *)(v126 & 0xFFFFFFFFFFFFFFFELL);
                      if ((v126 & 1) != 0)
                        v127 = (_QWORD *)*v127;
                      v128 = (*(uint64_t (**)(_QWORD, _QWORD *))(*(_QWORD *)v122 + 32))(*(_QWORD *)((char *)a3 + v120), v127);
                      *(_QWORD *)((char *)v190 + v119) = v128;
                      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v128 + 112))(v128, *(_QWORD *)((char *)a3 + v120));
                      google::protobuf::Reflection::ClearField((google::protobuf::Reflection *)v4, a3, (const google::protobuf::FieldDescriptor *)v46, v129, v130);
                    }
                  }
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v195 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  v196 = 471;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v75 = *(unint64_t **)(v46 + 48);
                  if (v75)
                  {
                    v192.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                    v208 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v46;
                    v76 = atomic_load(v75);
                    if (v76 != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v192;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v208;
                      v193.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v75, &v193, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
LABEL_84:
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v50 + 56)]);
                  v211 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) != 0)
                  {
                    v77 = *(void **)__p;
LABEL_86:
                    operator delete(v77);
                  }
                  break;
              }
            }
            v42 = v4[18];
          }
          v43 += 152;
          ++v44;
        }
        while (v44 < v42);
      }
      v136 = *(unsigned int *)(*(_QWORD *)v4 + 108);
      v137 = v190;
      if ((int)v136 >= 1)
      {
        v138 = 0;
        v188 = (google::protobuf::internal::ReflectionSchema *)(v4 + 2);
        v189 = (std::string *)(48 * v136);
        do
        {
          v139 = *(google::protobuf::Descriptor **)v4;
          v140 = *(_QWORD *)(*(_QWORD *)v4 + 48);
          v141 = (uint64_t)v138 + v140;
          if (*(_DWORD *)((char *)&v138[1].__r_.__value_.__l.__data_ + v140) != 1
            || !*(_BYTE *)(**(_QWORD **)(v141 + 32) + 65))
          {
            v142 = v4[11]
                 - 1431655764 * (((unint64_t)v138 + v140 - *(_QWORD *)(*(_QWORD *)(v141 + 16) + 48)) >> 4);
            v143 = *(_DWORD *)((char *)v137 + v142);
            v144 = *(_DWORD *)((char *)a3 + v142);
            v205 = 0;
            v204 = 0;
            v203 = 0;
            v202 = 0;
            v201 = 0;
            v200 = 0;
            v199 = 0;
            v198 = 0;
            memset(&__p[24], 0, 7);
            if (v143)
            {
              FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber(v139, v143);
              v148 = *(unint64_t **)(FieldByNumber + 48);
              if (v148)
              {
                v193.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v208 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
                v149 = atomic_load(v148);
                if (v149 != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v193;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v208;
                  p_str = &__str;
                  std::__call_once(v148, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(FieldByNumber + 56))
              {
                case 1:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v200 = *(_QWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 2:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v201 = *(_DWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v204 = *(_QWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 4:
                case 6:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v202 = *(_QWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v205 = *(_DWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 7:
                case 0xD:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v203 = *(_DWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 8:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v199 = *((_BYTE *)v190
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetString((google::protobuf::_anonymous_namespace_ **)v4, v190, (const google::protobuf::FieldDescriptor *)FieldByNumber, v146, &__str);
                  v153 = 0;
                  size = __str.__r_.__value_.__l.__size_;
                  v150 = (std::string::value_type *)__str.__r_.__value_.__r.__words[0];
                  *(_DWORD *)&__p[24] = __str.__r_.__value_.__r.__words[2];
                  *(_DWORD *)&__p[27] = *(_DWORD *)((char *)&__str.__r_.__value_.__r.__words[2] + 3);
                  v152 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                  break;
                case 0xA:
                case 0xB:
                  v152 = 0;
                  v153 = (google::protobuf::Message *)google::protobuf::Reflection::ReleaseMessage((google::protobuf::Reflection *)v4, v190, (unint64_t **)FieldByNumber, v145, v146);
                  v150 = 0;
                  size = 0;
                  break;
                case 0xE:
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  v198 = *(_DWORD *)((char *)v190
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)FieldByNumber));
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v195 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  v196 = 522;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v164 = *(unint64_t **)(FieldByNumber + 48);
                  if (v164)
                  {
                    v208 = google::protobuf::FieldDescriptor::TypeOnceInit;
                    v207 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
                    v165 = atomic_load(v164);
                    if (v165 != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v208;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v207;
                      v193.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v164, &v193, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByNumber + 56)]);
                  v211 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                  v150 = 0;
                  size = 0;
                  v152 = 0;
                  v153 = 0;
                  break;
              }
            }
            else
            {
              v150 = 0;
              size = 0;
              v152 = 0;
              v153 = 0;
              FieldByNumber = 0;
            }
            if (v144)
            {
              v156 = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)v4, v144);
              v157 = *(unint64_t **)(v156 + 48);
              if (v157)
              {
                v193.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
                v208 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v156;
                v158 = atomic_load(v157);
                if (v158 != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v193;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v208;
                  p_str = &__str;
                  std::__call_once(v157, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              switch(*(_DWORD *)(v156 + 56))
              {
                case 1:
                  v170 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)v156);
                  google::protobuf::Reflection::SetField<double>(v4, v190, (google::protobuf::FieldDescriptor *)v156, (uint64_t *)((char *)a3 + v170));
                  break;
                case 2:
                  v171 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)v156);
                  google::protobuf::Reflection::SetField<float>(v4, v190, (google::protobuf::FieldDescriptor *)v156, (int *)((char *)a3 + v171));
                  break;
                case 3:
                case 4:
                case 6:
                case 0x10:
                case 0x12:
                  v169 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)v156);
                  google::protobuf::Reflection::SetField<long long>(v4, v190, (google::protobuf::FieldDescriptor *)v156, (uint64_t *)((char *)a3 + v169));
                  break;
                case 5:
                case 7:
                case 0xD:
                case 0xE:
                case 0xF:
                case 0x11:
                  v159 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)v156);
                  google::protobuf::Reflection::SetField<int>(v4, v190, (google::protobuf::FieldDescriptor *)v156, (int *)((char *)a3 + v159));
                  break;
                case 8:
                  v172 = google::protobuf::internal::ReflectionSchema::GetFieldOffset(v188, (const google::protobuf::FieldDescriptor *)v156);
                  google::protobuf::Reflection::SetField<BOOL>(v4, v190, (google::protobuf::FieldDescriptor *)v156, (char *)a3 + v172);
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetString((google::protobuf::_anonymous_namespace_ **)v4, a3, (const google::protobuf::FieldDescriptor *)v156, v155, &v193);
                  google::protobuf::Reflection::SetString((uint64_t)v4, v190, (google::protobuf::FieldDescriptor *)v156, (uint64_t)&v193, v173);
                  if (SHIBYTE(v193.__r_.__value_.__r.__words[2]) < 0)
                  {
                    v168 = (void *)v193.__r_.__value_.__r.__words[0];
                    goto LABEL_181;
                  }
                  break;
                case 0xA:
                case 0xB:
                  v174 = (google::protobuf::Message *)google::protobuf::Reflection::ReleaseMessage((google::protobuf::Reflection *)v4, a3, (unint64_t **)v156, v154, v155);
                  google::protobuf::Reflection::SetAllocatedMessage((google::protobuf::_anonymous_namespace_ **)v4, v190, v174, (const google::protobuf::FieldDescriptor *)v156, v175);
                  break;
                default:
                  LODWORD(p_str) = 3;
                  v195 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  v196 = 553;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v166 = *(unint64_t **)(v156 + 48);
                  if (v166)
                  {
                    v208 = google::protobuf::FieldDescriptor::TypeOnceInit;
                    v207 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v156;
                    v167 = atomic_load(v166);
                    if (v167 != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v208;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v207;
                      v193.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
                      std::__call_once(v166, &v193, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v156 + 56)]);
                  v211 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) != 0)
                  {
                    v168 = *(void **)__p;
LABEL_181:
                    operator delete(v168);
                  }
                  break;
              }
            }
            else
            {
              google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)v4, v190, v141);
            }
            if (v143)
            {
              v161 = *(unint64_t **)(FieldByNumber + 48);
              if (v161)
              {
                v208 = google::protobuf::FieldDescriptor::TypeOnceInit;
                v207 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
                v162 = atomic_load(v161);
                if (v162 != -1)
                {
                  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v208;
                  __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v207;
                  p_str = &__str;
                  std::__call_once(v161, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                }
              }
              v163 = &v205;
              switch(*(_DWORD *)(FieldByNumber + 56))
              {
                case 1:
                  google::protobuf::Reflection::SetField<double>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v200);
                  goto LABEL_200;
                case 2:
                  google::protobuf::Reflection::SetField<float>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v201);
                  goto LABEL_200;
                case 3:
                case 0x10:
                case 0x12:
                  google::protobuf::Reflection::SetField<long long>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v204);
                  goto LABEL_200;
                case 4:
                case 6:
                  google::protobuf::Reflection::SetField<long long>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v202);
                  goto LABEL_200;
                case 5:
                case 0xF:
                case 0x11:
                  goto LABEL_187;
                case 7:
                case 0xD:
                  google::protobuf::Reflection::SetField<int>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v203);
                  goto LABEL_200;
                case 8:
                  google::protobuf::Reflection::SetField<BOOL>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, &v199);
                  goto LABEL_200;
                case 9:
                case 0xC:
                  if (v152 < 0)
                  {
                    std::string::__init_copy_ctor_external(&v192, v150, size);
                  }
                  else
                  {
                    v192.__r_.__value_.__r.__words[0] = (std::string::size_type)v150;
                    v192.__r_.__value_.__l.__size_ = size;
                    LODWORD(v192.__r_.__value_.__r.__words[2]) = *(_DWORD *)&__p[24];
                    *(_DWORD *)((char *)&v192.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)&__p[27];
                    *((_BYTE *)&v192.__r_.__value_.__s + 23) = v152;
                  }
                  google::protobuf::Reflection::SetString((uint64_t)v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, (uint64_t)&v192, v160);
                  if ((SHIBYTE(v192.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    goto LABEL_200;
                  v178 = (void *)v192.__r_.__value_.__r.__words[0];
                  goto LABEL_206;
                case 0xA:
                case 0xB:
                  google::protobuf::Reflection::SetAllocatedMessage((google::protobuf::_anonymous_namespace_ **)v4, a3, v153, (const google::protobuf::FieldDescriptor *)FieldByNumber, v160);
                  goto LABEL_200;
                case 0xE:
                  v163 = &v198;
LABEL_187:
                  google::protobuf::Reflection::SetField<int>(v4, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, v163);
                  goto LABEL_200;
                default:
                  LODWORD(p_str) = 3;
                  v195 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_mes"
                         "sage_reflection.cc";
                  v196 = 585;
                  memset(__p, 0, 24);
                  std::string::append((std::string *)__p, "Unimplemented type: ");
                  v176 = *(unint64_t **)(FieldByNumber + 48);
                  if (v176)
                  {
                    v206 = FieldByNumber;
                    v207 = google::protobuf::FieldDescriptor::TypeOnceInit;
                    v177 = atomic_load(v176);
                    if (v177 != -1)
                    {
                      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v207;
                      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v206;
                      v208 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&__str;
                      std::__call_once(v176, &v208, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                    }
                  }
                  snprintf((char *)&__str, 0x80uLL, "%d", google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByNumber + 56)]);
                  v211 = 0;
                  std::string::append((std::string *)__p, (const std::string::value_type *)&__str);
                  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&p_str);
                  if ((__p[23] & 0x80000000) == 0)
                    goto LABEL_200;
                  v178 = *(void **)__p;
LABEL_206:
                  operator delete(v178);
                  if (v152 < 0)
                    goto LABEL_201;
                  goto LABEL_202;
              }
            }
            google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)v4, a3, v141);
LABEL_200:
            if (v152 < 0)
LABEL_201:
              operator delete(v150);
LABEL_202:
            v137 = v190;
          }
          v138 += 2;
        }
        while (v189 != v138);
      }
      v179 = v4[10];
      if ((_DWORD)v179 != -1)
      {
        google::protobuf::internal::ExtensionSet::Swap((google::protobuf::Message *)((char *)v137 + v179), (google::protobuf::Message *)((char *)a3 + v179));
        v137 = v190;
      }
      v180 = v4[9];
      v181 = *(_QWORD *)((char *)v137 + v180);
      if ((v181 & 1) != 0)
      {
        v182 = (uint64_t *)((v181 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        v182 = (uint64_t *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((uint64_t *)((char *)v137 + v180));
        v180 = v4[9];
      }
      v183 = (uint64_t *)((char *)a3 + v180);
      v184 = *(_QWORD *)((char *)a3 + v180);
      if ((v184 & 1) != 0)
        this = (unsigned int *)((v184 & 0xFFFFFFFFFFFFFFFELL) + 8);
      else
        this = (unsigned int *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v183);
      v185 = *v182;
      *v182 = *(_QWORD *)this;
      *(_QWORD *)this = v185;
      v186 = v182[1];
      v182[1] = *((_QWORD *)this + 1);
      *((_QWORD *)this + 1) = v186;
      v187 = v182[2];
      v182[2] = *((_QWORD *)this + 2);
      *((_QWORD *)this + 2) = v187;
    }
    else
    {
      v30 = (google::protobuf::Message *)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 32))(a2);
      (*(void (**)(google::protobuf::Message *, google::protobuf::Message *))(*(_QWORD *)v30 + 120))(v30, a3);
      (*(void (**)(google::protobuf::Message *, google::protobuf::Message *))(*(_QWORD *)a3 + 112))(a3, a2);
      this = (unsigned int *)google::protobuf::Reflection::Swap((google::protobuf::Reflection *)v4, a2, v30);
      v31 = *(_QWORD *)((char *)a2 + v4[9]);
      v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFFELL);
      if ((v31 & 1) != 0)
      {
        if (!*v32)
          return (unsigned int *)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v30 + 8))(v30);
      }
      else if (!v32)
      {
        return (unsigned int *)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v30 + 8))(v30);
      }
    }
  }
  return this;
}

void sub_188858028(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  uint64_t v38;

  if (*(char *)(v38 - 201) < 0)
    operator delete(*(void **)(v38 - 224));
  _Unwind_Resume(exception_object);
}

void google::protobuf::Reflection::ClearField(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  uint64_t **v9;
  google::protobuf::internal::ReflectionSchema *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int HasBitIndex;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  unsigned int FieldOffset;
  int IsMapFieldInApi;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  const google::protobuf::FieldDescriptor *v36;
  uint64_t (*v37)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v38)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v39)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v40;

  v8 = *(google::protobuf::_anonymous_namespace_ **)this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_BYTE *)a3 + 67))
  {
    v9 = (uint64_t **)google::protobuf::internal::ExtensionSet::FindOrNull((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (v9)
      google::protobuf::internal::ExtensionSet::Extension::Clear(v9);
  }
  else
  {
    v10 = (google::protobuf::Reflection *)((char *)this + 8);
    if (*((_DWORD *)a3 + 15) == 3)
    {
      v11 = (unint64_t *)*((_QWORD *)a3 + 6);
      if (v11)
      {
        v36 = a3;
        v37 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v12 = atomic_load(v11);
        if (v12 != -1)
        {
          v39 = &v37;
          v40 = &v36;
          v38 = &v39;
          std::__call_once(v11, &v38, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*((_DWORD *)a3 + 14))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
          *(_DWORD *)((char *)a2
                    + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = 0;
          break;
        case 9:
        case 0xC:
          FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3);
          google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + FieldOffset);
          break;
        case 0xA:
        case 0xB:
          v20 = (char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3);
          if (IsMapFieldInApi)
          {
            (*(void (**)(char *))(*(_QWORD *)v20 + 96))(v20);
          }
          else
          {
            v22 = *((unsigned int *)v20 + 2);
            if ((int)v22 >= 1)
            {
              v23 = (uint64_t *)(*((_QWORD *)v20 + 2) + 8);
              do
              {
                v24 = *v23++;
                (*(void (**)(uint64_t))(*(_QWORD *)v24 + 40))(v24);
                --v22;
              }
              while (v22);
              *((_DWORD *)v20 + 2) = 0;
            }
          }
          break;
        default:
          return;
      }
    }
    else
    {
      v13 = *((_QWORD *)a3 + 11);
      if (!v13 || *(_DWORD *)(v13 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v13 + 32) + 65))
      {
        if (google::protobuf::Reflection::HasBit(this, a2, a3))
        {
          HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3);
          if (HasBitIndex != -1)
            *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) &= ~(1 << HasBitIndex);
          v15 = (unint64_t *)*((_QWORD *)a3 + 6);
          if (v15)
          {
            v36 = a3;
            v37 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v16 = atomic_load(v15);
            if (v16 != -1)
            {
              v39 = &v37;
              v40 = &v36;
              v38 = &v39;
              std::__call_once(v15, &v38, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          switch(*((_DWORD *)a3 + 14))
          {
            case 1:
              v25 = *((_QWORD *)a3 + 18);
              *(_QWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = v25;
              return;
            case 2:
              v26 = *((_DWORD *)a3 + 36);
              *(_DWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = v26;
              return;
            case 3:
            case 4:
            case 6:
            case 0x10:
            case 0x12:
              v21 = *((_QWORD *)a3 + 18);
              *(_QWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3)) = v21;
              return;
            case 5:
            case 7:
            case 0xD:
            case 0xF:
            case 0x11:
              v17 = *((_DWORD *)a3 + 36);
              goto LABEL_37;
            case 8:
              v27 = *((_BYTE *)a3 + 144);
              *((_BYTE *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3)) = v27;
              return;
            case 9:
            case 0xC:
              v28 = *(_QWORD *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((_QWORD *)this + 1), *((_QWORD *)this + 2), (uint64_t)a3) & 0xFFFFFFFFFFFFFFFELL;
              v29 = (char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3);
              v30 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
              v31 = (char *)(v30 & 0xFFFFFFFFFFFFFFFELL);
              if ((v30 & 1) != 0)
                v31 = *(char **)v31;
              google::protobuf::internal::ArenaStringPtr::SetAllocated(v29, v28, 0, v31);
              return;
            case 0xA:
            case 0xB:
              if (google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3) != -1)
              {
                v32 = *(_QWORD *)((char *)a2
                                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3));
                (*(void (**)(uint64_t))(*(_QWORD *)v32 + 40))(v32);
                return;
              }
              v33 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
              v34 = (_QWORD *)(v33 & 0xFFFFFFFFFFFFFFFELL);
              if ((v33 & 1) != 0)
              {
                if (*v34)
                  goto LABEL_48;
              }
              else if (v34)
              {
                goto LABEL_48;
              }
              v35 = *(_QWORD *)((char *)a2
                              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3));
              if (v35)
                (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
LABEL_48:
              *(_QWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3)) = 0;
              break;
            case 0xE:
              v17 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
LABEL_37:
              *(_DWORD *)((char *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v10, a3)) = v17;
              return;
            default:
              return;
          }
        }
      }
      else if (*(_DWORD *)((char *)a2
                          + *((_DWORD *)this + 11)
                          - 1431655764
                          * ((unint64_t)(v13 - *(_QWORD *)(*(_QWORD *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
      {
        google::protobuf::Reflection::ClearOneof(this, a2, v13);
      }
    }
  }
}

uint64_t google::protobuf::Reflection::ReleaseMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, unint64_t **a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unsigned int HasBitIndex;
  uint64_t v14;
  unsigned int FieldOffset;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  const google::protobuf::FieldDescriptor *v21;
  uint64_t (*v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v23;
  _QWORD v24[2];

  v8 = *(google::protobuf::_anonymous_namespace_ **)this;
  if (a3[10] != (unint64_t *)v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = a3[6];
  if (v9)
  {
    v21 = (const google::protobuf::FieldDescriptor *)a3;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v24[0] = &v22;
      v24[1] = &v21;
      v23 = v24;
      std::__call_once(v9, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((_DWORD)a3[7] & 0xFFFFFFFE) != 0xA)
  if (*((_BYTE *)a3 + 67))
  {
    v11 = google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), (int *)a3, *((_QWORD *)this + 8));
    goto LABEL_25;
  }
  v12 = a3[11];
  if (*((_DWORD *)a3 + 15) != 3)
  {
    if (v12)
    {
      if (*((_DWORD *)v12 + 6) != 1)
        goto LABEL_21;
      if (!*(_BYTE *)(*(_QWORD *)v12[4] + 65))
        goto LABEL_20;
    }
    HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3);
    if (HasBitIndex != -1)
      *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) &= ~(1 << HasBitIndex);
  }
  if (!v12)
  {
LABEL_23:
    FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)a3);
    v11 = *(_QWORD *)((char *)a2 + FieldOffset);
    *(_QWORD *)((char *)a2 + FieldOffset) = 0;
    goto LABEL_25;
  }
  if (*((_DWORD *)v12 + 6) != 1)
    goto LABEL_21;
LABEL_20:
  if (*(_BYTE *)(*(_QWORD *)v12[4] + 65))
    goto LABEL_23;
LABEL_21:
  v14 = *((_DWORD *)this + 11) - 1431655764 * (((unint64_t)v12 - *(_QWORD *)(v12[2] + 48)) >> 4);
  if (*(_DWORD *)((char *)a2 + v14) == *((_DWORD *)a3 + 17))
  {
    *(_DWORD *)((char *)a2 + v14) = 0;
    goto LABEL_23;
  }
  v11 = 0;
LABEL_25:
  v16 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
  v17 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFFFFELL);
  if ((v16 & 1) != 0)
    v17 = (_QWORD *)*v17;
  if (v17)
    v18 = v11 == 0;
  else
    v18 = 1;
  if (!v18)
  {
    v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 112))(v19, v11);
    return v19;
  }
  return v11;
}

void google::protobuf::Reflection::GetString(google::protobuf::_anonymous_namespace_ **this@<X0>, const google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, const char *a4@<X4>, std::string *a5@<X8>)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  int v14;
  __int128 *v15;
  _DWORD *v16;
  __int128 v17;
  std::string::size_type v18;
  uint64_t v19;
  unint64_t v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  const google::protobuf::FieldDescriptor *v23;
  uint64_t (*v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v25;
  _QWORD v26[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a4);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v23 = a3;
    v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v26[0] = &v24;
      v26[1] = &v23;
      v25 = v26;
      std::__call_once(v10, &v25, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = *((_DWORD *)a3 + 14);
  if (v12 != 9 && v12 != 12)
  if (*((_BYTE *)a3 + 67))
  {
    v14 = *((_DWORD *)a3 + 17);
    v15 = (__int128 *)*((_QWORD *)a3 + 18);
    v16 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v14);
    if (v16)
    {
      if ((*((_BYTE *)v16 + 10) & 1) == 0)
        v15 = *(__int128 **)v16;
    }
    if ((*((char *)v15 + 23) & 0x80000000) == 0)
    {
      v17 = *v15;
      v18 = *((_QWORD *)v15 + 2);
LABEL_27:
      a5->__r_.__value_.__r.__words[2] = v18;
      *(_OWORD *)&a5->__r_.__value_.__l.__data_ = v17;
      return;
    }
    v21 = *(const std::string::value_type **)v15;
    v22 = *((_QWORD *)v15 + 1);
  }
  else
  {
    v19 = *((_QWORD *)a3 + 11);
    if (v19
      && (*(_DWORD *)(v19 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v19 + 32) + 65))
      && *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v19 - *(_QWORD *)(*(_QWORD *)(v19 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17)
      || (v20 = *(_QWORD *)((_BYTE *)a2
                          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)) & 0xFFFFFFFFFFFFFFFELL) == 0)
    {
      v20 = *((_QWORD *)a3 + 18);
    }
    if ((*(char *)(v20 + 23) & 0x80000000) == 0)
    {
      v17 = *(_OWORD *)v20;
      v18 = *(_QWORD *)(v20 + 16);
      goto LABEL_27;
    }
    v21 = *(const std::string::value_type **)v20;
    v22 = *(_QWORD *)(v20 + 8);
  }
  std::string::__init_copy_ctor_external(a5, v21, v22);
}

uint64_t google::protobuf::Reflection::SetField<int>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, int *a4)
{
  uint64_t v8;
  int v9;
  uint64_t result;
  int v11;

  v8 = *((_QWORD *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v8 + 32) + 65))
  {
    v9 = *a4;
    *(_DWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if ((_DWORD)result != -1)
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(_QWORD *)(*(_QWORD *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    v11 = *a4;
    result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(_DWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((_QWORD *)a3 + 11) - *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<long long>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v8 = *((_QWORD *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v8 + 32) + 65))
  {
    v9 = *a4;
    *(_QWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if ((_DWORD)result != -1)
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(_QWORD *)(*(_QWORD *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    v11 = *a4;
    result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(_QWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((_QWORD *)a3 + 11) - *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<float>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, int *a4)
{
  uint64_t v8;
  int v9;
  uint64_t result;
  int v11;

  v8 = *((_QWORD *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v8 + 32) + 65))
  {
    v9 = *a4;
    *(_DWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if ((_DWORD)result != -1)
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(_QWORD *)(*(_QWORD *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    v11 = *a4;
    result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(_DWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((_QWORD *)a3 + 11) - *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<double>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v8 = *((_QWORD *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v8 + 32) + 65))
  {
    v9 = *a4;
    *(_QWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if ((_DWORD)result != -1)
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(_QWORD *)(*(_QWORD *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    v11 = *a4;
    result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *(_QWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((_QWORD *)a3 + 11) - *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

uint64_t google::protobuf::Reflection::SetField<BOOL>(unsigned int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, char *a4)
{
  uint64_t v8;
  char v9;
  uint64_t result;
  char v11;

  v8 = *((_QWORD *)a3 + 11);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v8 + 32) + 65))
  {
    v9 = *a4;
    *((_BYTE *)a2
    + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3)) = v9;
    result = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(a1 + 2), (uint64_t)a3);
    if ((_DWORD)result != -1)
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(_QWORD *)(*(_QWORD *)(v8 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v8);
    v11 = *a4;
    result = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 2), a3);
    *((_BYTE *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*((_QWORD *)a3 + 11) - *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a3 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  return result;
}

void google::protobuf::Reflection::SetAllocatedMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4, const char *a5)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;

  if (a3)
  {
    v9 = *((_QWORD *)a3 + 1);
    v10 = (unint64_t *)(v9 & 0xFFFFFFFFFFFFFFFELL);
    v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((v9 & 1) != 0)
      v11 = *v10;
    v12 = *((_QWORD *)a2 + 1);
    v13 = (char *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if ((v12 & 1) != 0)
      v14 = *(_QWORD *)v13;
    if (v11 != v14)
    {
      if ((v9 & 1) != 0)
      {
        if (*v10)
          goto LABEL_9;
      }
      else if (v10)
      {
LABEL_9:
        v15 = google::protobuf::Reflection::MutableMessage(this, a2, a4, 0, a5);
        (*(void (**)(uint64_t, google::protobuf::Message *))(*(_QWORD *)v15 + 112))(v15, a3);
        return;
      }
      if ((v12 & 1) != 0)
      {
        v13 = *(char **)v13;
        if (!v13)
          goto LABEL_9;
      }
      else if (!v13)
      {
        goto LABEL_9;
      }
      google::protobuf::Arena::Own<google::protobuf::Message>(v13, a3);
    }
  }
  google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage(this, a2, a3, a4, a5);
}

void google::protobuf::Reflection::SetString(uint64_t a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  uint64_t v14;
  int v15;
  unint64_t *v16;
  unint64_t v17;
  google::protobuf::internal::ExtensionSet *v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int HasBitIndex;
  unsigned int v30;
  uint64_t *v31;
  uint64_t v32;
  google::protobuf::internal::ArenaImpl *v33;
  google::protobuf::FieldDescriptor *v34;
  uint64_t (*v35)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v36)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v37)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  google::protobuf::FieldDescriptor **v38;
  _QWORD v39[3];

  v39[2] = *MEMORY[0x1E0C80C00];
  v9 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v34 = a3;
    v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v37 = &v35;
      v38 = &v34;
      v36 = &v37;
      std::__call_once(v10, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = *((_DWORD *)a3 + 14);
  if (v12 != 9 && v12 != 12)
  if (*((_BYTE *)a3 + 67))
  {
    v14 = *(unsigned int *)(a1 + 40);
    v15 = *((_DWORD *)a3 + 17);
    v16 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v16)
    {
      v34 = a3;
      v35 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v17 = atomic_load(v16);
      if (v17 != -1)
      {
        v37 = &v35;
        v38 = &v34;
        v36 = &v37;
        std::__call_once(v16, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v18 = (google::protobuf::Message *)((char *)a2 + v14);
    v19 = *((_BYTE *)a3 + 56);
    v20 = *(_QWORD *)a4;
    v39[0] = *(_QWORD *)(a4 + 8);
    *(_QWORD *)((char *)v39 + 7) = *(_QWORD *)(a4 + 15);
    v21 = *(_BYTE *)(a4 + 23);
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = 0;
    v22 = google::protobuf::internal::ExtensionSet::MutableString(v18, v15, v19, a3);
    v23 = v22;
    if (*((char *)v22 + 23) < 0)
      operator delete((void *)*v22);
    v24 = v39[0];
    *v23 = v20;
    v23[1] = v24;
    *(uint64_t *)((char *)v23 + 15) = *(_QWORD *)((char *)v39 + 7);
    *((_BYTE *)v23 + 23) = v21;
    return;
  }
  v25 = *((_QWORD *)a3 + 11);
  if (!v25)
    goto LABEL_23;
  v26 = *(_DWORD *)(v25 + 24);
  if (v26 != 1)
  {
    v27 = 0;
    goto LABEL_30;
  }
  if (!*(_BYTE *)(**(_QWORD **)(v25 + 32) + 65))
  {
    v27 = 0;
  }
  else
  {
LABEL_23:
    v27 = *(_QWORD *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), (uint64_t)a3) & 0xFFFFFFFFFFFFFFFELL;
    v25 = *((_QWORD *)a3 + 11);
    if (!v25)
      goto LABEL_41;
    v26 = *(_DWORD *)(v25 + 24);
    if (v26 != 1)
    {
LABEL_30:
      if (*(_DWORD *)((char *)a2
                     + *(_DWORD *)(a1 + 44)
                     - 1431655764
                     * ((unint64_t)(v25 - *(_QWORD *)(*(_QWORD *)(v25 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
      {
        google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, v25);
        v28 = *((_QWORD *)a3 + 11);
        if (!v28 || *(_DWORD *)(v28 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v28 + 32) + 65))
        {
          HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex(a1 + 8, (uint64_t)a3);
          if (HasBitIndex != -1)
            *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *(unsigned int *)(a1 + 32)) |= 1 << HasBitIndex;
        }
        else
        {
          *(_DWORD *)((char *)a2
                    + *(_DWORD *)(a1 + 44)
                    - 1431655764
                    * ((unint64_t)(v28 - *(_QWORD *)(*(_QWORD *)(v28 + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
        }
        *(_QWORD *)((char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3)) = v27;
        v25 = *((_QWORD *)a3 + 11);
        if (!v25)
          goto LABEL_41;
        v26 = *(_DWORD *)(v25 + 24);
      }
      if (v26 != 1)
        goto LABEL_43;
      goto LABEL_40;
    }
  }
  if (!*(_BYTE *)(**(_QWORD **)(v25 + 32) + 65))
  {
    v26 = 1;
    goto LABEL_30;
  }
LABEL_40:
  if (*(_BYTE *)(**(_QWORD **)(v25 + 32) + 65))
  {
LABEL_41:
    v30 = google::protobuf::internal::ReflectionSchema::HasBitIndex(a1 + 8, (uint64_t)a3);
    if (v30 != -1)
      *(_DWORD *)((char *)a2 + 4 * (v30 >> 5) + *(unsigned int *)(a1 + 32)) |= 1 << v30;
    goto LABEL_44;
  }
LABEL_43:
  *(_DWORD *)((char *)a2
            + *(_DWORD *)(a1 + 44)
            - 1431655764 * ((unint64_t)(v25 - *(_QWORD *)(*(_QWORD *)(v25 + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
LABEL_44:
  v31 = (uint64_t *)((char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3));
  v32 = *(_QWORD *)((char *)a2 + *(unsigned int *)(a1 + 36));
  v33 = (google::protobuf::internal::ArenaImpl *)(v32 & 0xFFFFFFFFFFFFFFFELL);
  if ((v32 & 1) != 0)
    v33 = *(google::protobuf::internal::ArenaImpl **)v33;
  google::protobuf::internal::ArenaStringPtr::Set(v31, v27, (__int128 *)a4, v33);
}

void sub_18885939C(_Unwind_Exception *exception_object)
{
  void *v1;
  int v2;

  if (v2 < 0)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::Reflection::ClearOneof(google::protobuf::Reflection *this, google::protobuf::Message *a2, uint64_t a3)
{
  const google::protobuf::FieldDescriptor *v6;
  int v7;
  uint64_t FieldByNumber;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int HasBitIndex;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v23;
  _QWORD v24[2];

  if (*(_DWORD *)(a3 + 24) == 1)
  {
    v6 = **(const google::protobuf::FieldDescriptor ***)(a3 + 32);
    if (*((_BYTE *)v6 + 65))
    {
      google::protobuf::Reflection::ClearField(this, a2, v6);
      return;
    }
  }
  v7 = *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 16) + 48)) >> 4));
  if (v7)
  {
    FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)this, v7);
    v9 = FieldByNumber;
    v10 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
    v11 = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    if ((v10 & 1) != 0)
    {
      if (*v11)
        goto LABEL_7;
    }
    else if (v11)
    {
LABEL_7:
      *(_DWORD *)((char *)a2
                + *((_DWORD *)this + 11)
                - 1431655764 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 16) + 48)) >> 4)) = 0;
      return;
    }
    v12 = *(unint64_t **)(FieldByNumber + 48);
    if (v12)
    {
      v21 = v9;
      v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v13 = atomic_load(v12);
      if (v13 != -1)
      {
        v24[0] = &v22;
        v24[1] = &v21;
        v23 = v24;
        std::__call_once(v12, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v14 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v9 + 56)];
    if (v14 == 10)
    {
      v17 = *(_QWORD *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)v9));
      if (v17)
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    }
    else if (v14 == 9)
    {
      v15 = *(_QWORD *)(v9 + 88);
      if (!v15 || *(_DWORD *)(v15 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v15 + 32) + 65))
      {
        HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, v9);
        if (HasBitIndex != -1)
          *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) |= 1 << HasBitIndex;
      }
      else
      {
        *(_DWORD *)((char *)a2
                  + *((_DWORD *)this + 11)
                  - 1431655764
                  * ((unint64_t)(v15 - *(_QWORD *)(*(_QWORD *)(v15 + 16) + 48)) >> 4)) = *(_DWORD *)(v9 + 68);
      }
      v18 = (uint64_t *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), (const google::protobuf::FieldDescriptor *)v9));
      v19 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
      v20 = (_QWORD *)(v19 & 0xFFFFFFFFFFFFFFFELL);
      if ((v19 & 1) != 0)
        v20 = (_QWORD *)*v20;
      google::protobuf::internal::ArenaStringPtr::Destroy(v18, 0, (uint64_t)v20);
    }
    goto LABEL_7;
  }
}

_DWORD *google::protobuf::Reflection::HasField(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  _DWORD *result;
  uint64_t v11;

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  if (*((_BYTE *)a3 + 67))
  {
    result = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (!result)
      return result;
    return (_DWORD *)((*((_BYTE *)result + 10) & 1) == 0);
  }
  else
  {
    v11 = *((_QWORD *)a3 + 11);
    if (!v11 || *(_DWORD *)(v11 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v11 + 32) + 65))
      return (_DWORD *)google::protobuf::Reflection::HasBit((google::protobuf::Reflection *)this, a2, a3);
    return (_DWORD *)(*(_DWORD *)((char *)a2
                                + *((_DWORD *)this + 11)
                                - 1431655764
                                * ((unint64_t)(v11 - *(_QWORD *)(*(_QWORD *)(v11 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17));
  }
}

void google::protobuf::`anonymous namespace'::ReportReflectionUsageError(google::protobuf::_anonymous_namespace_ *this, const google::protobuf::Descriptor *a2, const std::string::value_type *a3, const char *a4, const char *a5)
{
  uint64_t v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  uint64_t v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  int v17;
  const char *v18;
  int v19;
  std::string __p;

  v17 = 3;
  v18 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  v19 = 111;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  std::string::append(&__p, a3);
  std::string::append(&__p, "\n  Message type: ");
  v9 = *((_QWORD *)this + 1);
  v10 = *(char *)(v9 + 23);
  if (v10 >= 0)
    v11 = (const std::string::value_type *)*((_QWORD *)this + 1);
  else
    v11 = *(const std::string::value_type **)v9;
  if (v10 >= 0)
    v12 = *(unsigned __int8 *)(v9 + 23);
  else
    v12 = *(_QWORD *)(v9 + 8);
  std::string::append(&__p, v11, v12);
  std::string::append(&__p, "\n  Field       : ");
  v13 = *((_QWORD *)a2 + 1);
  v14 = *(char *)(v13 + 23);
  if (v14 >= 0)
    v15 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  else
    v15 = *(const std::string::value_type **)v13;
  if (v14 >= 0)
    v16 = *(unsigned __int8 *)(v13 + 23);
  else
    v16 = *(_QWORD *)(v13 + 8);
  std::string::append(&__p, v15, v16);
  std::string::append(&__p, "\n  Problem     : ");
  std::string::append(&__p, a4);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_188859814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::Reflection::HasBit(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  google::protobuf::internal::ReflectionSchema *v6;
  unsigned int HasBitIndex;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t (**v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v19;
  int v20;
  std::string __p;
  const google::protobuf::FieldDescriptor *v22;
  uint64_t (*v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  v6 = (google::protobuf::Reflection *)((char *)this + 8);
  HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)this + 8, (uint64_t)a3);
  if (HasBitIndex != -1)
    return (*(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) >> HasBitIndex) & 1;
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v22 = a3;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v18 = &v23;
      v19 = &v22;
      v24 = &v18;
      std::__call_once(v9, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v11 = *((_DWORD *)a3 + 14);
  if ((v11 & 0xFFFFFFFE) == 0xA)
  {
    if (*(const google::protobuf::Message **)v6 == a2)
      return 0;
LABEL_15:
    v15 = *(_QWORD *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3));
LABEL_16:
    v16 = v15 == 0;
  }
  else
  {
    v12 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v12)
    {
      v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v22 = a3;
      v13 = atomic_load(v12);
      if (v13 != -1)
      {
        v18 = &v23;
        v19 = &v22;
        v24 = &v18;
        std::__call_once(v12, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v11 = *((_DWORD *)a3 + 14);
    }
    switch(v11)
    {
      case 1:
        v16 = *(double *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3)) == 0.0;
        return !v16;
      case 2:
        v16 = *(float *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3)) == 0.0;
        return !v16;
      case 3:
      case 4:
      case 6:
        goto LABEL_15;
      case 5:
      case 7:
        v14 = *(_DWORD *)((char *)a2 + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3));
        break;
      case 8:
        v14 = *((unsigned __int8 *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3));
        break;
      case 9:
        v17 = *(_QWORD *)((_BYTE *)a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset(v6, a3)) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v17 + 23) < 0)
          v15 = *(_QWORD *)(v17 + 8);
        else
          v15 = *(unsigned __int8 *)(v17 + 23);
        goto LABEL_16;
      default:
        LODWORD(v18) = 3;
        v19 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/generated_message_reflection.cc";
        v20 = 2059;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Reached impossible case in HasBit().");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        return 0;
    }
    v16 = v14 == 0;
  }
  return !v16;
}

void sub_188859A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::FieldSize(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  uint64_t result;
  unint64_t *v10;
  unint64_t v11;
  int IsMapFieldInApi;
  unsigned int *v13;
  uint64_t (**v15)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v16;
  int v17;
  std::string __p;
  const google::protobuf::FieldDescriptor *v19;
  uint64_t (*v20)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  if (*((_BYTE *)a3 + 67))
  {
    result = (uint64_t)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (result)
      return google::protobuf::internal::ExtensionSet::Extension::GetSize((google::protobuf::internal::ExtensionSet::Extension *)result);
  }
  else
  {
    v10 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v10)
    {
      v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v19 = a3;
      v11 = atomic_load(v10);
      if (v11 != -1)
      {
        v15 = &v20;
        v16 = &v19;
        v21 = &v15;
        std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    switch(*((_DWORD *)a3 + 14))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        result = *(unsigned int *)((char *)a2
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
        break;
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        v13 = (unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
        if (IsMapFieldInApi)
        {
          if (atomic_load(v13 + 22))
          {
            google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((google::protobuf::internal::MapFieldBase *)v13);
            result = *(unsigned int *)(*((_QWORD *)v13 + 2) + 8);
          }
          else
          {
            result = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v13 + 88))(v13);
          }
        }
        else
        {
          result = v13[2];
        }
        break;
      default:
        LODWORD(v15) = 3;
        v16 = (const google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/"
                                                          "src/google/protobuf/generated_message_reflection.cc";
        v17 = 783;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Can't get here.");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        result = 0;
        break;
    }
  }
  return result;
}

void sub_188859C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ReflectionSchema::HasBitIndex(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  if (*(_DWORD *)(a1 + 24) == -1)
    return 0xFFFFFFFFLL;
  if (*(_BYTE *)(a2 + 67))
  {
    v2 = *(_QWORD *)(a2 + 96);
    if (v2)
      v3 = (_QWORD *)(v2 + 80);
    else
      v3 = (_QWORD *)(*(_QWORD *)(a2 + 40) + 128);
  }
  else
  {
    v3 = (_QWORD *)(*(_QWORD *)(a2 + 80) + 40);
  }
  return *(unsigned int *)(*(_QWORD *)(a1 + 16) + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
}

void google::protobuf::`anonymous namespace'::ReportReflectionUsageTypeError(uint64_t a1, uint64_t a2, const std::string::value_type *a3, int a4)
{
  uint64_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  uint64_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  unint64_t *v16;
  unint64_t v17;
  int v18;
  const char *v19;
  int v20;
  std::string __p;
  uint64_t v22;
  uint64_t (*v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v24;
  _QWORD v25[2];

  v18 = 3;
  v19 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  v20 = 133;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  std::string::append(&__p, a3);
  std::string::append(&__p, "\n  Message type: ");
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(char *)(v8 + 23);
  if (v9 >= 0)
    v10 = *(const std::string::value_type **)(a1 + 8);
  else
    v10 = *(const std::string::value_type **)v8;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(v8 + 23);
  else
    v11 = *(_QWORD *)(v8 + 8);
  std::string::append(&__p, v10, v11);
  std::string::append(&__p, "\n  Field       : ");
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(char *)(v12 + 23);
  if (v13 >= 0)
    v14 = *(const std::string::value_type **)(a2 + 8);
  else
    v14 = *(const std::string::value_type **)v12;
  if (v13 >= 0)
    v15 = *(unsigned __int8 *)(v12 + 23);
  else
    v15 = *(_QWORD *)(v12 + 8);
  std::string::append(&__p, v14, v15);
  std::string::append(&__p, "\n  Problem     : Field is not the right type for this message:\n    Expected  : ");
  std::string::append(&__p, "\n    Field type: ");
  v16 = *(unint64_t **)(a2 + 48);
  if (v16)
  {
    v22 = a2;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v17 = atomic_load(v16);
    if (v17 != -1)
    {
      v25[0] = &v23;
      v25[1] = &v22;
      v24 = v25;
      std::__call_once(v16, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_188859EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::ListFieldsMayFailOnStripped(uint64_t result, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const google::protobuf::FieldDescriptor *v13;
  unint64_t v14;
  const google::protobuf::FieldDescriptor **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;

  *(_QWORD *)(a4 + 8) = *(_QWORD *)a4;
  if (*(const google::protobuf::Message **)(result + 8) != a2)
  {
    v6 = result;
    v7 = *(unsigned int *)(result + 32);
    v8 = *(_QWORD *)(result + 24);
    std::vector<google::protobuf::FieldDescriptor const*>::reserve((void **)a4, *(int *)(*(_QWORD *)result + 104));
    if ((*(_DWORD *)(v6 + 72) & 0x80000000) == 0)
    {
      v11 = 0;
      do
      {
        v12 = *(_QWORD *)(*(_QWORD *)v6 + 40);
        v13 = (const google::protobuf::FieldDescriptor *)(v12 + 152 * v11);
        if (*((_DWORD *)v13 + 15) == 3)
        {
          if ((int)google::protobuf::Reflection::FieldSize((google::protobuf::_anonymous_namespace_ **)v6, a2, (const google::protobuf::FieldDescriptor *)(v12 + 152 * v11), v9, v10) >= 1)
          {
            v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
            v14 = *(_QWORD *)(a4 + 16);
            if ((unint64_t)v15 < v14)
              goto LABEL_42;
            v16 = ((uint64_t)v15 - *(_QWORD *)a4) >> 3;
            if ((unint64_t)(v16 + 1) >> 61)
              goto LABEL_78;
            v17 = v14 - *(_QWORD *)a4;
            v18 = v17 >> 2;
            if (v17 >> 2 <= (unint64_t)(v16 + 1))
              v18 = v16 + 1;
            if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
              v19 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v19 = v18;
            if (v19)
              v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
            else
              v20 = 0;
            v33 = &v20[8 * v16];
            *(_QWORD *)v33 = v13;
            v32 = v33 + 8;
            v35 = *(char **)a4;
            v34 = *(char **)(a4 + 8);
            if (v34 != *(char **)a4)
            {
              do
              {
                v36 = *((_QWORD *)v34 - 1);
                v34 -= 8;
                *((_QWORD *)v33 - 1) = v36;
                v33 -= 8;
              }
              while (v34 != v35);
              goto LABEL_66;
            }
            goto LABEL_67;
          }
        }
        else
        {
          v21 = *(_QWORD *)(v12 + 152 * v11 + 88);
          if (!v21 || *(_DWORD *)(v21 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v21 + 32) + 65))
          {
            if ((_DWORD)v7 == -1 || (v22 = *(unsigned int *)(v8 + 4 * v11), (_DWORD)v22 == -1))
            {
              if (google::protobuf::Reflection::HasBit((google::protobuf::Reflection *)v6, a2, v13))
              {
                v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
                v31 = *(_QWORD *)(a4 + 16);
                if ((unint64_t)v15 < v31)
                {
LABEL_42:
                  *v15 = v13;
                  v32 = v15 + 1;
LABEL_69:
                  *(_QWORD *)(a4 + 8) = v32;
                  continue;
                }
                v37 = ((uint64_t)v15 - *(_QWORD *)a4) >> 3;
                if ((unint64_t)(v37 + 1) >> 61)
LABEL_78:
                  std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
                v38 = v31 - *(_QWORD *)a4;
                v39 = v38 >> 2;
                if (v38 >> 2 <= (unint64_t)(v37 + 1))
                  v39 = v37 + 1;
                if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8)
                  v19 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v19 = v39;
                if (v19)
                  v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
                else
                  v20 = 0;
                v33 = &v20[8 * v37];
                *(_QWORD *)v33 = v13;
                v32 = v33 + 8;
                v42 = *(char **)a4;
                v34 = *(char **)(a4 + 8);
                if (v34 != *(char **)a4)
                {
                  do
                  {
                    v43 = *((_QWORD *)v34 - 1);
                    v34 -= 8;
                    *((_QWORD *)v33 - 1) = v43;
                    v33 -= 8;
                  }
                  while (v34 != v42);
                  goto LABEL_66;
                }
                goto LABEL_67;
              }
            }
            else if (((*(_DWORD *)((char *)a2 + v7 + ((v22 >> 3) & 0x1FFFFFFC)) >> v22) & 1) != 0)
            {
              v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
              v23 = *(_QWORD *)(a4 + 16);
              if ((unint64_t)v15 < v23)
                goto LABEL_42;
              v24 = ((uint64_t)v15 - *(_QWORD *)a4) >> 3;
              if ((unint64_t)(v24 + 1) >> 61)
                goto LABEL_78;
              v25 = v23 - *(_QWORD *)a4;
              v26 = v25 >> 2;
              if (v25 >> 2 <= (unint64_t)(v24 + 1))
                v26 = v24 + 1;
              if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8)
                v19 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v19 = v26;
              if (v19)
                v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
              else
                v20 = 0;
              v33 = &v20[8 * v24];
              *(_QWORD *)v33 = v13;
              v32 = v33 + 8;
              v44 = *(char **)a4;
              v34 = *(char **)(a4 + 8);
              if (v34 != *(char **)a4)
              {
                do
                {
                  v45 = *((_QWORD *)v34 - 1);
                  v34 -= 8;
                  *((_QWORD *)v33 - 1) = v45;
                  v33 -= 8;
                }
                while (v34 != v44);
                goto LABEL_66;
              }
              goto LABEL_67;
            }
          }
          else if (*(_DWORD *)((char *)a2
                              + 4
                              * (int)(-1431655765
                                    * ((unint64_t)(v21 - *(_QWORD *)(*(_QWORD *)(v21 + 16) + 48)) >> 4))
                              + *(unsigned int *)(v6 + 44)) == *(_DWORD *)(v12 + 152 * v11 + 68))
          {
            v15 = *(const google::protobuf::FieldDescriptor ***)(a4 + 8);
            v27 = *(_QWORD *)(a4 + 16);
            if ((unint64_t)v15 < v27)
              goto LABEL_42;
            v28 = ((uint64_t)v15 - *(_QWORD *)a4) >> 3;
            if ((unint64_t)(v28 + 1) >> 61)
              goto LABEL_78;
            v29 = v27 - *(_QWORD *)a4;
            v30 = v29 >> 2;
            if (v29 >> 2 <= (unint64_t)(v28 + 1))
              v30 = v28 + 1;
            if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8)
              v19 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v19 = v30;
            if (v19)
              v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a4 + 16, v19);
            else
              v20 = 0;
            v33 = &v20[8 * v28];
            *(_QWORD *)v33 = v13;
            v32 = v33 + 8;
            v40 = *(char **)a4;
            v34 = *(char **)(a4 + 8);
            if (v34 != *(char **)a4)
            {
              do
              {
                v41 = *((_QWORD *)v34 - 1);
                v34 -= 8;
                *((_QWORD *)v33 - 1) = v41;
                v33 -= 8;
              }
              while (v34 != v40);
LABEL_66:
              v34 = *(char **)a4;
            }
LABEL_67:
            *(_QWORD *)a4 = v33;
            *(_QWORD *)(a4 + 8) = v32;
            *(_QWORD *)(a4 + 16) = &v20[8 * v19];
            if (v34)
              operator delete(v34);
            goto LABEL_69;
          }
        }
      }
      while (v11++ < *(int *)(v6 + 72));
    }
    v47 = *(unsigned int *)(v6 + 40);
    if ((_DWORD)v47 != -1)
      google::protobuf::internal::ExtensionSet::AppendToList((uint64_t)a2 + v47, *(_QWORD *)v6, *(_QWORD *)(v6 + 56), a4);
    v48 = *(uint64_t **)(a4 + 8);
    v49 = 126 - 2 * __clz(((uint64_t)v48 - *(_QWORD *)a4) >> 3);
    if (v48 == *(uint64_t **)a4)
      v50 = 0;
    else
      v50 = v49;
  }
  return result;
}

uint64_t google::protobuf::Reflection::GetInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v18;
  _QWORD v19[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      v18 = v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (*((_BYTE *)a3 + 67))
  {
    v11 = *((_DWORD *)a3 + 17);
    v12 = *((unsigned int *)a3 + 36);
    v13 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v11);
    if (v13 && (*((_BYTE *)v13 + 10) & 1) == 0)
      return *v13;
  }
  else
  {
    v14 = *((_QWORD *)a3 + 11);
    if (!v14
      || *(_DWORD *)(v14 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v14 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v14 - *(_QWORD *)(*(_QWORD *)(v14 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *((unsigned int *)a3 + 36);
    }
  }
  return v12;
}

uint64_t **google::protobuf::Reflection::SetInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  google::protobuf::internal::ExtensionSet *v11;
  int v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  int v16;
  uint64_t **result;
  char v18;
  int v19;
  const google::protobuf::FieldDescriptor *v20;
  uint64_t (*v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v24;

  v19 = a4;
  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<int>((unsigned int *)this, a2, a3, &v19);
  v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v12 = *((_DWORD *)a3 + 17);
  v13 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v13)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v14 = atomic_load(v13);
    if (v14 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v13, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v15 = *((_DWORD *)a3 + 14);
  v16 = v19;
  result = google::protobuf::internal::ExtensionSet::Insert(v11, v12);
  result[2] = (uint64_t *)a3;
  if (v18)
  {
    *((_BYTE *)result + 8) = v15;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *(_DWORD *)result = v16;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(unsigned int *)(*(_QWORD *)((char *)a2
                                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int v18;
  const google::protobuf::FieldDescriptor *v19;
  uint64_t (*v20)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v23;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v19 = a3;
    v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v22 = &v20;
      v23 = &v19;
      v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x28020uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (*((_BYTE *)a3 + 67))
  {
    v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v13 = *((_DWORD *)a3 + 17);
    v14 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v14)
    {
      v19 = a3;
      v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v15 = atomic_load(v14);
      if (v15 != -1)
      {
        v22 = &v20;
        v23 = &v19;
        v21 = &v22;
        std::__call_once(v14, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt32(v12, v13, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v16 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v17 = *v16;
    if ((_DWORD)v17 == v16[1])
    {
      v18 = v17 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v16, v17 + 1);
      *(_DWORD *)(*((_QWORD *)v16 + 1) + 4 * v17) = a4;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v16 + 1) + 4 * v17) = a4;
      v18 = v17 + 1;
    }
    *v16 = v18;
  }
}

uint64_t google::protobuf::Reflection::GetInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v18;
  _QWORD v19[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      v18 = v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (!*((_BYTE *)a3 + 67))
  {
    v14 = *((_QWORD *)a3 + 11);
    if (!v14
      || *(_DWORD *)(v14 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v14 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v14 - *(_QWORD *)(*(_QWORD *)(v14 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      v13 = (char *)a2
          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
    }
    else
    {
      v13 = (char *)a3 + 144;
    }
    return *(_QWORD *)v13;
  }
  v11 = *((_DWORD *)a3 + 17);
  v12 = *((_QWORD *)a3 + 18);
  v13 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v11);
  if (v13 && (v13[10] & 1) == 0)
    return *(_QWORD *)v13;
  return v12;
}

uint64_t **google::protobuf::Reflection::SetInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  google::protobuf::internal::ExtensionSet *v11;
  int v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t **result;
  char v18;
  uint64_t v19;
  const google::protobuf::FieldDescriptor *v20;
  uint64_t (*v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v24;

  v19 = a4;
  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<long long>((unsigned int *)this, a2, a3, &v19);
  v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v12 = *((_DWORD *)a3 + 17);
  v13 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v13)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v14 = atomic_load(v13);
    if (v14 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v13, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v15 = *((_DWORD *)a3 + 14);
  v16 = v19;
  result = google::protobuf::internal::ExtensionSet::Insert(v11, v12);
  result[2] = (uint64_t *)a3;
  if (v18)
  {
    *((_BYTE *)result + 8) = v15;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *result = (uint64_t *)v16;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(_QWORD *)(*(_QWORD *)((char *)a2
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 8 * a4);
}

void google::protobuf::Reflection::AddInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int v18;
  const google::protobuf::FieldDescriptor *v19;
  uint64_t (*v20)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v23;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v19 = a3;
    v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v22 = &v20;
      v23 = &v19;
      v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((0x50008uLL >> *((_DWORD *)a3 + 14)) & 1) == 0)
  if (*((_BYTE *)a3 + 67))
  {
    v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v13 = *((_DWORD *)a3 + 17);
    v14 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v14)
    {
      v19 = a3;
      v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v15 = atomic_load(v14);
      if (v15 != -1)
      {
        v22 = &v20;
        v23 = &v19;
        v21 = &v22;
        std::__call_once(v14, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt64(v12, v13, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v16 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v17 = *v16;
    if ((_DWORD)v17 == v16[1])
    {
      v18 = v17 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v16, v17 + 1);
      *(_QWORD *)(*((_QWORD *)v16 + 1) + 8 * v17) = a4;
    }
    else
    {
      *(_QWORD *)(*((_QWORD *)v16 + 1) + 8 * v17) = a4;
      v18 = v17 + 1;
    }
    *v16 = v18;
  }
}

uint64_t google::protobuf::Reflection::GetUInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  int v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  const google::protobuf::FieldDescriptor *v18;
  uint64_t (*v19)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v20;
  _QWORD v21[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v18 = a3;
    v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v21[0] = &v19;
      v21[1] = &v18;
      v20 = v21;
      std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v11 = *((_DWORD *)a3 + 14);
  if (v11 != 7 && v11 != 13)
  if (*((_BYTE *)a3 + 67))
  {
    v13 = *((_DWORD *)a3 + 17);
    v14 = *((unsigned int *)a3 + 36);
    v15 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v13);
    if (v15 && (*((_BYTE *)v15 + 10) & 1) == 0)
      return *v15;
  }
  else
  {
    v16 = *((_QWORD *)a3 + 11);
    if (!v16
      || *(_DWORD *)(v16 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v16 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v16 - *(_QWORD *)(*(_QWORD *)(v16 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *((unsigned int *)a3 + 36);
    }
  }
  return v14;
}

uint64_t **google::protobuf::Reflection::SetUInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  google::protobuf::internal::ExtensionSet *v13;
  int v14;
  unint64_t *v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t **result;
  char v20;
  int v21;
  const google::protobuf::FieldDescriptor *v22;
  uint64_t (*v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v25)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v26;

  v21 = a4;
  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v22 = a3;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v25 = &v23;
      v26 = &v22;
      v24 = &v25;
      std::__call_once(v9, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v11 = *((_DWORD *)a3 + 14);
  if (v11 != 7 && v11 != 13)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<int>((unsigned int *)this, a2, a3, &v21);
  v13 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v14 = *((_DWORD *)a3 + 17);
  v15 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v15)
  {
    v22 = a3;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v16 = atomic_load(v15);
    if (v16 != -1)
    {
      v25 = &v23;
      v26 = &v22;
      v24 = &v25;
      std::__call_once(v15, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v17 = *((_DWORD *)a3 + 14);
  v18 = v21;
  result = google::protobuf::internal::ExtensionSet::Insert(v13, v14);
  result[2] = (uint64_t *)a3;
  if (v20)
  {
    *((_BYTE *)result + 8) = v17;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *(_DWORD *)result = v18;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedUInt32(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  const google::protobuf::FieldDescriptor *v15;
  uint64_t (*v16)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v17;
  _QWORD v18[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v15 = a3;
    v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      v17 = v18;
      std::__call_once(v10, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = *((_DWORD *)a3 + 14);
  if (v12 != 7 && v12 != 13)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedUInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(unsigned int *)(*(_QWORD *)((char *)a2
                                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddUInt32(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  google::protobuf::internal::ExtensionSet *v14;
  int v15;
  unint64_t *v16;
  unint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int v20;
  const google::protobuf::FieldDescriptor *v21;
  uint64_t (*v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v25;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v21 = a3;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v10, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = *((_DWORD *)a3 + 14);
  if (v12 != 7 && v12 != 13)
  if (*((_BYTE *)a3 + 67))
  {
    v14 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v15 = *((_DWORD *)a3 + 17);
    v16 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v16)
    {
      v21 = a3;
      v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v17 = atomic_load(v16);
      if (v17 != -1)
      {
        v24 = &v22;
        v25 = &v21;
        v23 = &v24;
        std::__call_once(v16, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddUInt32(v14, v15, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v18 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v19 = *v18;
    if ((_DWORD)v19 == v18[1])
    {
      v20 = v19 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v18, v19 + 1);
      *(_DWORD *)(*((_QWORD *)v18 + 1) + 4 * v19) = a4;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v18 + 1) + 4 * v19) = a4;
      v20 = v19 + 1;
    }
    *v18 = v20;
  }
}

uint64_t google::protobuf::Reflection::GetUInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v18;
  _QWORD v19[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      v18 = v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4)
  if (!*((_BYTE *)a3 + 67))
  {
    v14 = *((_QWORD *)a3 + 11);
    if (!v14
      || *(_DWORD *)(v14 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v14 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v14 - *(_QWORD *)(*(_QWORD *)(v14 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      v13 = (char *)a2
          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
    }
    else
    {
      v13 = (char *)a3 + 144;
    }
    return *(_QWORD *)v13;
  }
  v11 = *((_DWORD *)a3 + 17);
  v12 = *((_QWORD *)a3 + 18);
  v13 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v11);
  if (v13 && (v13[10] & 1) == 0)
    return *(_QWORD *)v13;
  return v12;
}

uint64_t **google::protobuf::Reflection::SetUInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  google::protobuf::internal::ExtensionSet *v11;
  int v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t **result;
  char v18;
  uint64_t v19;
  const google::protobuf::FieldDescriptor *v20;
  uint64_t (*v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v24;

  v19 = a4;
  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<long long>((unsigned int *)this, a2, a3, &v19);
  v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v12 = *((_DWORD *)a3 + 17);
  v13 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v13)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v14 = atomic_load(v13);
    if (v14 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v13, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v15 = *((_DWORD *)a3 + 14);
  v16 = v19;
  result = google::protobuf::internal::ExtensionSet::Insert(v11, v12);
  result[2] = (uint64_t *)a3;
  if (v18)
  {
    *((_BYTE *)result + 8) = v15;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *result = (uint64_t *)v16;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedUInt64(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedUInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(_QWORD *)(*(_QWORD *)((char *)a2
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 8 * a4);
}

void google::protobuf::Reflection::AddUInt64(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int v18;
  const google::protobuf::FieldDescriptor *v19;
  uint64_t (*v20)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v23;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v19 = a3;
    v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v22 = &v20;
      v23 = &v19;
      v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFD) != 4)
  if (*((_BYTE *)a3 + 67))
  {
    v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v13 = *((_DWORD *)a3 + 17);
    v14 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v14)
    {
      v19 = a3;
      v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v15 = atomic_load(v14);
      if (v15 != -1)
      {
        v22 = &v20;
        v23 = &v19;
        v21 = &v22;
        std::__call_once(v14, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddUInt64(v12, v13, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v16 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v17 = *v16;
    if ((_DWORD)v17 == v16[1])
    {
      v18 = v17 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v16, v17 + 1);
      *(_QWORD *)(*((_QWORD *)v16 + 1) + 8 * v17) = a4;
    }
    else
    {
      *(_QWORD *)(*((_QWORD *)v16 + 1) + 8 * v17) = a4;
      v18 = v17 + 1;
    }
    *v16 = v18;
  }
}

float google::protobuf::Reflection::GetFloat(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  float v11;
  _DWORD *v12;
  uint64_t v13;
  const google::protobuf::FieldDescriptor *v15;
  uint64_t (*v16)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v17;
  _QWORD v18[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v15 = a3;
    v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2)
  if (*((_BYTE *)a3 + 67))
  {
    v11 = *((float *)a3 + 36);
    v12 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
    if (v12 && (*((_BYTE *)v12 + 10) & 1) == 0)
      return *(float *)v12;
  }
  else
  {
    v13 = *((_QWORD *)a3 + 11);
    if (!v13
      || *(_DWORD *)(v13 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v13 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(_QWORD *)(*(_QWORD *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(float *)((char *)a2
                      + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *((float *)a3 + 36);
    }
  }
  return v11;
}

uint64_t **google::protobuf::Reflection::SetFloat(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, float a4, uint64_t a5, const char *a6)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  int v16;
  float v17;
  uint64_t **result;
  char v19;
  float v20;
  const google::protobuf::FieldDescriptor *v21;
  uint64_t (*v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v25;

  v20 = a4;
  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a6);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v21 = a3;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v10, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<float>((unsigned int *)this, a2, a3, (int *)&v20);
  v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v13 = *((_DWORD *)a3 + 17);
  v14 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v14)
  {
    v21 = a3;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v14, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v16 = *((_DWORD *)a3 + 14);
  v17 = v20;
  result = google::protobuf::internal::ExtensionSet::Insert(v12, v13);
  result[2] = (uint64_t *)a3;
  if (v19)
  {
    *((_BYTE *)result + 8) = v16;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *(float *)result = v17;
  return result;
}

float google::protobuf::Reflection::GetRepeatedFloat(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedFloat((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(float *)(*(_QWORD *)((char *)a2
                                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddFloat(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, float a4, uint64_t a5, const char *a6)
{
  google::protobuf::_anonymous_namespace_ *v10;
  unint64_t *v11;
  unint64_t v12;
  google::protobuf::internal::ExtensionSet *v13;
  int v14;
  unint64_t *v15;
  unint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  unsigned int v19;
  const google::protobuf::FieldDescriptor *v20;
  uint64_t (*v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v24;

  v10 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v10)
  if (*((_DWORD *)a3 + 15) != 3)
      a6);
  v11 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v11)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v11, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 2)
  if (*((_BYTE *)a3 + 67))
  {
    v13 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v14 = *((_DWORD *)a3 + 17);
    v15 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v15)
    {
      v20 = a3;
      v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v16 = atomic_load(v15);
      if (v16 != -1)
      {
        v23 = &v21;
        v24 = &v20;
        v22 = &v23;
        std::__call_once(v15, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddFloat(v13, v14, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v17 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v18 = *v17;
    if ((_DWORD)v18 == v17[1])
    {
      v19 = v18 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v17, v18 + 1);
      *(float *)(*((_QWORD *)v17 + 1) + 4 * v18) = a4;
    }
    else
    {
      *(float *)(*((_QWORD *)v17 + 1) + 4 * v18) = a4;
      v19 = v18 + 1;
    }
    *v17 = v19;
  }
}

double google::protobuf::Reflection::GetDouble(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  double v11;
  char *v12;
  uint64_t v13;
  const google::protobuf::FieldDescriptor *v15;
  uint64_t (*v16)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v17;
  _QWORD v18[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v15 = a3;
    v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1)
  if (!*((_BYTE *)a3 + 67))
  {
    v13 = *((_QWORD *)a3 + 11);
    if (!v13
      || *(_DWORD *)(v13 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v13 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(_QWORD *)(*(_QWORD *)(v13 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      v12 = (char *)a2
          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
    }
    else
    {
      v12 = (char *)a3 + 144;
    }
    return *(double *)v12;
  }
  v11 = *((double *)a3 + 18);
  v12 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17));
  if (v12 && (v12[10] & 1) == 0)
    return *(double *)v12;
  return v11;
}

uint64_t **google::protobuf::Reflection::SetDouble(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, double a4, uint64_t a5, const char *a6)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  int v16;
  double v17;
  uint64_t **result;
  char v19;
  double v20;
  const google::protobuf::FieldDescriptor *v21;
  uint64_t (*v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v25;

  v20 = a4;
  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a6);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v21 = a3;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v10, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<double>((unsigned int *)this, a2, a3, (uint64_t *)&v20);
  v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v13 = *((_DWORD *)a3 + 17);
  v14 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v14)
  {
    v21 = a3;
    v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      v24 = &v22;
      v25 = &v21;
      v23 = &v24;
      std::__call_once(v14, &v23, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v16 = *((_DWORD *)a3 + 14);
  v17 = v20;
  result = google::protobuf::internal::ExtensionSet::Insert(v12, v13);
  result[2] = (uint64_t *)a3;
  if (v19)
  {
    *((_BYTE *)result + 8) = v16;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *(double *)result = v17;
  return result;
}

double google::protobuf::Reflection::GetRepeatedDouble(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedDouble((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(double *)(*(_QWORD *)((char *)a2
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 8 * a4);
}

void google::protobuf::Reflection::AddDouble(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, double a4, uint64_t a5, const char *a6)
{
  google::protobuf::_anonymous_namespace_ *v10;
  unint64_t *v11;
  unint64_t v12;
  google::protobuf::internal::ExtensionSet *v13;
  int v14;
  unint64_t *v15;
  unint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  unsigned int v19;
  const google::protobuf::FieldDescriptor *v20;
  uint64_t (*v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v24;

  v10 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v10)
  if (*((_DWORD *)a3 + 15) != 3)
      a6);
  v11 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v11)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v11, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 1)
  if (*((_BYTE *)a3 + 67))
  {
    v13 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v14 = *((_DWORD *)a3 + 17);
    v15 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v15)
    {
      v20 = a3;
      v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v16 = atomic_load(v15);
      if (v16 != -1)
      {
        v23 = &v21;
        v24 = &v20;
        v22 = &v23;
        std::__call_once(v15, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddDouble(v13, v14, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v17 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v18 = *v17;
    if ((_DWORD)v18 == v17[1])
    {
      v19 = v18 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v17, v18 + 1);
      *(double *)(*((_QWORD *)v17 + 1) + 8 * v18) = a4;
    }
    else
    {
      *(double *)(*((_QWORD *)v17 + 1) + 8 * v18) = a4;
      v19 = v18 + 1;
    }
    *v17 = v19;
  }
}

BOOL google::protobuf::Reflection::GetBool(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  int v12;
  _DWORD *v13;
  uint64_t v14;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v18;
  _QWORD v19[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      v18 = v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8)
  if (*((_BYTE *)a3 + 67))
  {
    v11 = *((_DWORD *)a3 + 17);
    v12 = *((unsigned __int8 *)a3 + 144);
    v13 = google::protobuf::internal::ExtensionSet::FindOrNull((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), v11);
    if (v13 && (*((_BYTE *)v13 + 10) & 1) == 0)
      v12 = *(unsigned __int8 *)v13;
  }
  else
  {
    v14 = *((_QWORD *)a3 + 11);
    if (!v14
      || *(_DWORD *)(v14 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v14 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v14 - *(_QWORD *)(*(_QWORD *)(v14 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      v12 = *((unsigned __int8 *)a2
            + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      v12 = *((unsigned __int8 *)a3 + 144);
    }
  }
  return v12 != 0;
}

uint64_t **google::protobuf::Reflection::SetBool(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, char a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  google::protobuf::internal::ExtensionSet *v11;
  int v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  char v16;
  uint64_t **result;
  char v18;
  char v19;
  const google::protobuf::FieldDescriptor *v20;
  uint64_t (*v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v24;

  v19 = a4;
  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v9, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8)
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<BOOL>((unsigned int *)this, a2, a3, &v19);
  v11 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v12 = *((_DWORD *)a3 + 17);
  v13 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v13)
  {
    v20 = a3;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v14 = atomic_load(v13);
    if (v14 != -1)
    {
      v23 = &v21;
      v24 = &v20;
      v22 = &v23;
      std::__call_once(v13, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v15 = *((_DWORD *)a3 + 14);
  v16 = v19;
  result = google::protobuf::internal::ExtensionSet::Insert(v11, v12);
  result[2] = (uint64_t *)a3;
  if (v18)
  {
    *((_BYTE *)result + 8) = v15;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *(_BYTE *)result = v16;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedBool(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedBool((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(_BYTE *)(*(_QWORD *)((char *)a2
                                + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ a4) != 0;
}

void google::protobuf::Reflection::AddBool(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, char a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int v18;
  const google::protobuf::FieldDescriptor *v19;
  uint64_t (*v20)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v21)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v22)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v23;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v19 = a3;
    v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v22 = &v20;
      v23 = &v19;
      v21 = &v22;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 8)
  if (*((_BYTE *)a3 + 67))
  {
    v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v13 = *((_DWORD *)a3 + 17);
    v14 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v14)
    {
      v19 = a3;
      v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v15 = atomic_load(v14);
      if (v15 != -1)
      {
        v22 = &v20;
        v23 = &v19;
        v21 = &v22;
        std::__call_once(v14, &v21, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddBool(v12, v13, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v16 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    v17 = *v16;
    if ((_DWORD)v17 == v16[1])
    {
      v18 = v17 + 1;
      google::protobuf::RepeatedField<BOOL>::Reserve(v16, v17 + 1);
      *(_BYTE *)(*((_QWORD *)v16 + 1) + v17) = a4;
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)v16 + 1) + v17) = a4;
      v18 = v17 + 1;
    }
    *v16 = v18;
  }
}

unint64_t google::protobuf::Reflection::GetStringReference(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  google::protobuf::internal::ExtensionSet *v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  google::protobuf::Descriptor *v18;
  uint64_t (*v19)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v20;
  _QWORD v21[2];

  v8 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v18 = a3;
    v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v21[0] = &v19;
      v21[1] = &v18;
      v20 = v21;
      std::__call_once(v9, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v11 = *((_DWORD *)a3 + 14);
  if (v11 != 9 && v11 != 12)
  if (*((_BYTE *)a3 + 67))
  {
    v13 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    v14 = *((_QWORD *)a3 + 18);
    v15 = (char *)google::protobuf::internal::ExtensionSet::FindOrNull(v13, *((_DWORD *)a3 + 17));
    if (!v15 || (v15[10] & 1) != 0)
      return v14;
    return *(_QWORD *)v15;
  }
  v16 = *((_QWORD *)a3 + 11);
  if (v16
    && (*(_DWORD *)(v16 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v16 + 32) + 65))
    && *(_DWORD *)(a2
                 + *(_DWORD *)(a1 + 44)
                 - 1431655764 * ((unint64_t)(v16 - *(_QWORD *)(*(_QWORD *)(v16 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17)
    || (v14 = *(_QWORD *)(a2
                        + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3)) & 0xFFFFFFFFFFFFFFFELL) == 0)
  {
    v15 = (char *)a3 + 144;
    return *(_QWORD *)v15;
  }
  return v14;
}

void google::protobuf::Reflection::GetRepeatedString(google::protobuf::_anonymous_namespace_ **this@<X0>, const google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, int a4@<W3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  google::protobuf::_anonymous_namespace_ *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  uint64_t RepeatedString;
  __int128 v17;
  std::string::size_type v18;
  __int128 *v19;
  const std::string::value_type *v20;
  std::string::size_type v21;
  const google::protobuf::FieldDescriptor *v22;
  void (*v23)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v24;
  _QWORD v25[2];

  v11 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v11)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v12 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v12)
  {
    v22 = a3;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v13 = atomic_load(v12);
    if (v13 != -1)
    {
      v25[0] = &v23;
      v25[1] = &v22;
      v24 = v25;
      std::__call_once(v12, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v14 = *((_DWORD *)a3 + 14);
  if (v14 != 9 && v14 != 12)
  if (*((_BYTE *)a3 + 67))
  {
    RepeatedString = google::protobuf::internal::ExtensionSet::GetRepeatedString((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
    if ((*(char *)(RepeatedString + 23) & 0x80000000) == 0)
    {
      v17 = *(_OWORD *)RepeatedString;
      v18 = *(_QWORD *)(RepeatedString + 16);
LABEL_18:
      a6->__r_.__value_.__r.__words[2] = v18;
      *(_OWORD *)&a6->__r_.__value_.__l.__data_ = v17;
      return;
    }
    v20 = *(const std::string::value_type **)RepeatedString;
    v21 = *(_QWORD *)(RepeatedString + 8);
  }
  else
  {
    v19 = *(__int128 **)(*(_QWORD *)((char *)a2
                                   + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 16)+ 8 * a4+ 8);
    if ((*((char *)v19 + 23) & 0x80000000) == 0)
    {
      v17 = *v19;
      v18 = *((_QWORD *)v19 + 2);
      goto LABEL_18;
    }
    v20 = *(const std::string::value_type **)v19;
    v21 = *((_QWORD *)v19 + 1);
  }
  std::string::__init_copy_ctor_external(a6, v20, v21);
}

uint64_t google::protobuf::Reflection::GetRepeatedStringReference(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  google::protobuf::Descriptor *v15;
  uint64_t (*v16)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v17;
  _QWORD v18[2];

  v9 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v15 = a3;
    v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      v17 = v18;
      std::__call_once(v10, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = *((_DWORD *)a3 + 14);
  if (v12 != 9 && v12 != 12)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedString((google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40)), *((_DWORD *)a3 + 17), a4);
  else
    return *(_QWORD *)(*(_QWORD *)(a2
                                 + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3)+ 16)+ 8 * a4+ 8);
}

__n128 google::protobuf::Reflection::AddString(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int v12;
  uint64_t v14;
  int v15;
  unint64_t *v16;
  unint64_t v17;
  google::protobuf::internal::ExtensionSet *v18;
  char v19;
  void *v20;
  char v21;
  void **v22;
  __n128 result;
  void **v24;
  void *v25;
  unsigned int FieldOffset;
  uint64_t *v27;
  int *v28;
  int v29;
  int v30;
  void **v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  void **AlignedAndAddCleanup;
  uint64_t v36;
  uint64_t v37;
  google::protobuf::FieldDescriptor *v38;
  uint64_t (*v39)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v40)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v41)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  google::protobuf::FieldDescriptor **v42;
  _QWORD v43[3];

  v43[2] = *MEMORY[0x1E0C80C00];
  v9 = *(google::protobuf::_anonymous_namespace_ **)a1;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v38 = a3;
    v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v41 = &v39;
      v42 = &v38;
      v40 = &v41;
      std::__call_once(v10, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = *((_DWORD *)a3 + 14);
  if (v12 != 9 && v12 != 12)
  if (*((_BYTE *)a3 + 67))
  {
    v14 = *(unsigned int *)(a1 + 40);
    v15 = *((_DWORD *)a3 + 17);
    v16 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v16)
    {
      v38 = a3;
      v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v17 = atomic_load(v16);
      if (v17 != -1)
      {
        v41 = &v39;
        v42 = &v38;
        v40 = &v41;
        std::__call_once(v16, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v18 = (google::protobuf::internal::ExtensionSet *)(a2 + v14);
    v19 = *((_BYTE *)a3 + 56);
    v20 = *(void **)a4;
    v43[0] = *(_QWORD *)(a4 + 8);
    *(_QWORD *)((char *)v43 + 7) = *(_QWORD *)(a4 + 15);
    v21 = *(_BYTE *)(a4 + 23);
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_QWORD *)a4 = 0;
    v22 = (void **)google::protobuf::internal::ExtensionSet::AddString(v18, v15, v19, a3);
    v24 = v22;
    if (*((char *)v22 + 23) < 0)
      operator delete(*v22);
    v25 = (void *)v43[0];
    *v24 = v20;
    v24[1] = v25;
    *(void **)((char *)v24 + 15) = *(void **)((char *)v43 + 7);
    *((_BYTE *)v24 + 23) = v21;
    return result;
  }
  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(a1 + 8), a3);
  v27 = (uint64_t *)(a2 + FieldOffset);
  v28 = (int *)v27[2];
  if (!v28)
  {
    v29 = *((_DWORD *)v27 + 2);
    v30 = *((_DWORD *)v27 + 3);
    goto LABEL_25;
  }
  v29 = *((_DWORD *)v27 + 2);
  v30 = *v28;
  if (v29 >= *v28)
  {
    if (v30 != *((_DWORD *)v27 + 3))
    {
LABEL_28:
      *v28 = v30 + 1;
      v34 = *v27;
      if (*v27)
      {
        if ((*(_BYTE *)(v34 + 24) & 1) != 0)
        AlignedAndAddCleanup = (void **)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v34, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      else
      {
        AlignedAndAddCleanup = (void **)operator new();
      }
      v31 = AlignedAndAddCleanup;
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
      AlignedAndAddCleanup[2] = 0;
      v36 = v27[2];
      v37 = *((int *)v27 + 2);
      *((_DWORD *)v27 + 2) = v37 + 1;
      *(_QWORD *)(v36 + 8 * v37 + 8) = AlignedAndAddCleanup;
      goto LABEL_34;
    }
LABEL_25:
    v32 = __OFSUB__(v30, v29);
    v33 = v30 - v29;
    if (v33 < 0 == v32)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + FieldOffset), v33 + 1);
      v28 = (int *)v27[2];
    }
    v30 = *v28;
    goto LABEL_28;
  }
  *((_DWORD *)v27 + 2) = v29 + 1;
  v31 = *(void ***)&v28[2 * v29 + 2];
LABEL_34:
  if (*((char *)v31 + 23) < 0)
    operator delete(*v31);
  result = *(__n128 *)a4;
  v31[2] = *(void **)(a4 + 16);
  *(__n128 *)v31 = result;
  *(_BYTE *)(a4 + 23) = 0;
  *(_BYTE *)a4 = 0;
  return result;
}

void sub_18885D4A0(_Unwind_Exception *exception_object)
{
  void *v1;
  int v2;

  if (v2 < 0)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::GetEnum(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t EnumValue;
  _QWORD *v7;

  EnumValue = google::protobuf::Reflection::GetEnumValue(this, a2, a3, a4, a5);
  v7 = (_QWORD *)google::protobuf::FieldDescriptor::enum_type(a3);
  return google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(*(_QWORD *)(v7[2] + 144), v7, EnumValue);
}

uint64_t google::protobuf::Reflection::GetEnumValue(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v8;
  unint64_t *v9;
  unint64_t v10;
  google::protobuf::internal::ExtensionSet *v11;
  int v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  const google::protobuf::FieldDescriptor *v17;
  uint64_t (*v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v19;
  _QWORD v20[2];

  v8 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v8)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v9 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v9)
  {
    v17 = a3;
    v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v20[0] = &v18;
      v20[1] = &v17;
      v19 = v20;
      std::__call_once(v9, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14)
  if (*((_BYTE *)a3 + 67))
  {
    v11 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v12 = *((_DWORD *)a3 + 17);
    v13 = *(unsigned int *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
    v14 = google::protobuf::internal::ExtensionSet::FindOrNull(v11, v12);
    if (v14 && (*((_BYTE *)v14 + 10) & 1) == 0)
      return *v14;
  }
  else
  {
    v15 = *((_QWORD *)a3 + 11);
    if (!v15
      || *(_DWORD *)(v15 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v15 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v15 - *(_QWORD *)(*(_QWORD *)(v15 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2
                             + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    }
    else
    {
      return *(unsigned int *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
    }
  }
  return v13;
}

uint64_t **google::protobuf::Reflection::SetEnum(uint64_t *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *this, uint64_t a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a4 + 24);
  if (v8 != google::protobuf::FieldDescriptor::enum_type(this))
  return google::protobuf::Reflection::SetEnumValueInternal((google::protobuf::Reflection *)a1, a2, this, *(_DWORD *)(a4 + 16));
}

void google::protobuf::`anonymous namespace'::ReportReflectionUsageEnumTypeError(uint64_t a1, google::protobuf::FieldDescriptor *a2, const std::string::value_type *a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  const std::string::value_type *v10;
  std::string::size_type v11;
  uint64_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  uint64_t v21;
  int v22;
  const std::string::value_type *v23;
  std::string::size_type v24;
  int v25;
  const char *v26;
  int v27;
  std::string __p;

  v25 = 3;
  v26 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  v27 = 155;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  std::string::append(&__p, a3);
  std::string::append(&__p, "\n  Message type: ");
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(char *)(v8 + 23);
  if (v9 >= 0)
    v10 = *(const std::string::value_type **)(a1 + 8);
  else
    v10 = *(const std::string::value_type **)v8;
  if (v9 >= 0)
    v11 = *(unsigned __int8 *)(v8 + 23);
  else
    v11 = *(_QWORD *)(v8 + 8);
  std::string::append(&__p, v10, v11);
  std::string::append(&__p, "\n  Field       : ");
  v12 = *((_QWORD *)a2 + 1);
  v13 = *(char *)(v12 + 23);
  if (v13 >= 0)
    v14 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
  else
    v14 = *(const std::string::value_type **)v12;
  if (v13 >= 0)
    v15 = *(unsigned __int8 *)(v12 + 23);
  else
    v15 = *(_QWORD *)(v12 + 8);
  std::string::append(&__p, v14, v15);
  std::string::append(&__p, "\n  Problem     : Enum value did not match field type:\n    Expected  : ");
  v16 = google::protobuf::FieldDescriptor::enum_type(a2);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(char *)(v17 + 23);
  if (v18 >= 0)
    v19 = *(const std::string::value_type **)(v16 + 8);
  else
    v19 = *(const std::string::value_type **)v17;
  if (v18 >= 0)
    v20 = *(unsigned __int8 *)(v17 + 23);
  else
    v20 = *(_QWORD *)(v17 + 8);
  std::string::append(&__p, v19, v20);
  std::string::append(&__p, "\n    Actual    : ");
  v21 = *(_QWORD *)(a4 + 8);
  v22 = *(char *)(v21 + 23);
  if (v22 >= 0)
    v23 = *(const std::string::value_type **)(a4 + 8);
  else
    v23 = *(const std::string::value_type **)v21;
  if (v22 >= 0)
    v24 = *(unsigned __int8 *)(v21 + 23);
  else
    v24 = *(_QWORD *)(v21 + 8);
  std::string::append(&__p, v23, v24);
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v25);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_18885D88C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t **google::protobuf::Reflection::SetEnumValueInternal(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  int v5;
  google::protobuf::internal::ExtensionSet *v6;
  int v7;
  unint64_t *v8;
  unint64_t v9;
  int v10;
  uint64_t **result;
  char v12;
  int v13;
  const google::protobuf::FieldDescriptor *v14;
  uint64_t (*v15)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v16;
  _QWORD v17[2];

  v13 = a4;
  if (!*((_BYTE *)a3 + 67))
    return (uint64_t **)google::protobuf::Reflection::SetField<int>((unsigned int *)this, a2, a3, &v13);
  v5 = a4;
  v6 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  v7 = *((_DWORD *)a3 + 17);
  v8 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v8)
  {
    v14 = a3;
    v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v9 = atomic_load(v8);
    if (v9 != -1)
    {
      v17[0] = &v15;
      v17[1] = &v14;
      v16 = v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v5 = v13;
  }
  v10 = *((_DWORD *)a3 + 14);
  result = google::protobuf::internal::ExtensionSet::Insert(v6, v7);
  result[2] = (uint64_t *)a3;
  if (v12)
  {
    *((_BYTE *)result + 8) = v10;
    *((_BYTE *)result + 9) = 0;
  }
  *((_BYTE *)result + 10) &= 0xF0u;
  *(_DWORD *)result = v5;
  return result;
}

void google::protobuf::Reflection::SetEnumValue(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  google::protobuf::UnknownFieldSet *v15;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v19)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v20;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v19 = &v17;
      v20 = &v16;
      v18 = &v19;
      std::__call_once(v10, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14)
  if (*(_DWORD *)(*((_QWORD *)a3 + 5) + 60) == 3
    || (v12 = google::protobuf::FieldDescriptor::enum_type(a3),
        v13 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 16) + 144) + 192),
        v19 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v12,
        v20 = (const google::protobuf::FieldDescriptor **)a4,
  {
    google::protobuf::Reflection::SetEnumValueInternal((google::protobuf::Reflection *)this, a2, a3, a4);
  }
  else
  {
    v14 = (uint64_t *)((char *)a2 + *((unsigned int *)this + 9));
    if ((*v14 & 1) != 0)
      v15 = (google::protobuf::UnknownFieldSet *)((*v14 & 0xFFFFFFFFFFFFFFFELL) + 8);
    else
      v15 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v14);
    google::protobuf::UnknownFieldSet::AddVarint(v15, *((_DWORD *)a3 + 17), a4);
  }
}

uint64_t google::protobuf::Reflection::GetRepeatedEnum(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  uint64_t RepeatedEnumValue;
  _QWORD *v7;

  RepeatedEnumValue = google::protobuf::Reflection::GetRepeatedEnumValue(this, a2, a3, a4, a5);
  v7 = (_QWORD *)google::protobuf::FieldDescriptor::enum_type(a3);
  return google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(*(_QWORD *)(v7[2] + 144), v7, RepeatedEnumValue);
}

uint64_t google::protobuf::Reflection::GetRepeatedEnumValue(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v13 = a3;
    v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      v15 = v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedEnum((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  else
    return *(unsigned int *)(*(_QWORD *)((char *)a2
                                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3)+ 8)+ 4 * a4);
}

void google::protobuf::Reflection::AddEnum(uint64_t *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *this, uint64_t a4)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a4 + 24);
  if (v8 != google::protobuf::FieldDescriptor::enum_type(this))
  google::protobuf::Reflection::AddEnumValueInternal((google::protobuf::Reflection *)a1, a2, this, *(_DWORD *)(a4 + 16));
}

void google::protobuf::Reflection::AddEnumValueInternal(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  google::protobuf::internal::ExtensionSet *v6;
  int v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  unsigned int v12;
  const google::protobuf::FieldDescriptor *v13;
  uint64_t (*v14)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v15;
  _QWORD v16[2];

  if (*((_BYTE *)a3 + 67))
  {
    v6 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v7 = *((_DWORD *)a3 + 17);
    v8 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v8)
    {
      v13 = a3;
      v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v9 = atomic_load(v8);
      if (v9 != -1)
      {
        v16[0] = &v14;
        v16[1] = &v13;
        v15 = v16;
        std::__call_once(v8, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt32(v6, v7, *((_BYTE *)a3 + 56), *(_BYTE *)(*((_QWORD *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    v10 = (unsigned int *)((char *)a2
                         + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::Reflection *)((char *)this + 8), a3));
    v11 = *v10;
    if ((_DWORD)v11 == v10[1])
    {
      v12 = v11 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v10, v11 + 1);
      *(_DWORD *)(*((_QWORD *)v10 + 1) + 4 * v11) = a4;
    }
    else
    {
      *(_DWORD *)(*((_QWORD *)v10 + 1) + 4 * v11) = a4;
      v12 = v11 + 1;
    }
    *v10 = v12;
  }
}

void google::protobuf::Reflection::AddEnumValue(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  google::protobuf::UnknownFieldSet *v15;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v19)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v20;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v19 = &v17;
      v20 = &v16;
      v18 = &v19;
      std::__call_once(v10, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a3 + 14) != 14)
  if (*(_DWORD *)(*((_QWORD *)a3 + 5) + 60) == 3
    || (v12 = google::protobuf::FieldDescriptor::enum_type(a3),
        v13 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 16) + 144) + 192),
        v19 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v12,
        v20 = (const google::protobuf::FieldDescriptor **)a4,
  {
    google::protobuf::Reflection::AddEnumValueInternal((google::protobuf::Reflection *)this, a2, a3, a4);
  }
  else
  {
    v14 = (uint64_t *)((char *)a2 + *((unsigned int *)this + 9));
    if ((*v14 & 1) != 0)
      v15 = (google::protobuf::UnknownFieldSet *)((*v14 & 0xFFFFFFFFFFFFFFFELL) + 8);
    else
      v15 = (google::protobuf::UnknownFieldSet *)google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v14);
    google::protobuf::UnknownFieldSet::AddVarint(v15, *((_DWORD *)a3 + 17), a4);
  }
}

unint64_t google::protobuf::Reflection::GetDefaultMessageInstance(google::protobuf::Reflection *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *((_QWORD *)this + 8);
  {
    result = atomic_load((unint64_t *)a2 + 18);
    if (!result)
    {
      v9 = *((_QWORD *)this + 8);
      v10 = google::protobuf::FieldDescriptor::message_type(a2);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 16))(v9, v10);
      atomic_store(result, (unint64_t *)a2 + 18);
    }
  }
  else if (*((_BYTE *)a2 + 67)
         || (v5 = *((_QWORD *)a2 + 15), *(_BYTE *)(v5 + 79))
         || *(_BYTE *)(v5 + 77)
         || (v11 = *((_QWORD *)a2 + 11)) != 0
         && (*(_DWORD *)(v11 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v11 + 32) + 65))
         || (result = *(_QWORD *)google::protobuf::internal::ReflectionSchema::GetFieldDefault(*((_QWORD *)this + 1), *((_QWORD *)this + 2), (uint64_t)a2)) == 0)
  {
    v6 = *((_QWORD *)this + 8);
    v7 = google::protobuf::FieldDescriptor::message_type(a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v6, v7);
  }
  return result;
}

uint64_t google::protobuf::Reflection::GetMessage(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  const google::protobuf::FieldDescriptor *v17;
  uint64_t (*v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v19;
  _QWORD v20[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v17 = a3;
    v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v20[0] = &v18;
      v20[1] = &v17;
      v19 = v20;
      std::__call_once(v10, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA)
  if (!a4)
    a4 = this[8];
  if (*((_BYTE *)a3 + 67))
  {
    v12 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v13 = *((_DWORD *)a3 + 17);
    v14 = google::protobuf::FieldDescriptor::message_type(a3);
    return google::protobuf::internal::ExtensionSet::GetMessage(v12, v13, v14, (uint64_t)a4);
  }
  else
  {
    v16 = *((_QWORD *)a3 + 11);
    if (v16
      && (*(_DWORD *)(v16 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v16 + 32) + 65))
      && *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v16 - *(_QWORD *)(*(_QWORD *)(v16 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
    {
      return google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, a3);
    }
    result = *(_QWORD *)((char *)a2
                       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
    if (!result)
      return google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, a3);
  }
  return result;
}

uint64_t google::protobuf::Reflection::MutableMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t result;
  unsigned int FieldOffset;
  uint64_t v14;
  unsigned int HasBitIndex;
  uint64_t *v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t DefaultMessageInstance;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  const google::protobuf::FieldDescriptor *v25;
  uint64_t (*v26)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v27;
  _QWORD v28[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) == 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v25 = a3;
    v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v28[0] = &v26;
      v28[1] = &v25;
      v27 = v28;
      std::__call_once(v10, &v27, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA)
  if (!a4)
    a4 = this[8];
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::MutableMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), a3, a4);
  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  v14 = *((_QWORD *)a3 + 11);
  if (!v14 || *(_DWORD *)(v14 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v14 + 32) + 65))
  {
    HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(this + 1), (uint64_t)a3);
    if (HasBitIndex != -1)
      *(_DWORD *)((char *)a2 + 4 * (HasBitIndex >> 5) + *((unsigned int *)this + 8)) |= 1 << HasBitIndex;
LABEL_20:
    v16 = (uint64_t *)((char *)a2 + FieldOffset);
    result = *v16;
    if (*v16)
      return result;
    goto LABEL_31;
  }
  if (*(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v14 - *(_QWORD *)(*(_QWORD *)(v14 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    goto LABEL_20;
  google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)this, a2, v14);
  v17 = *((_QWORD *)a3 + 11);
  if (!v17 || *(_DWORD *)(v17 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v17 + 32) + 65))
  {
    v18 = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(this + 1), (uint64_t)a3);
    if (v18 != -1)
      *(_DWORD *)((char *)a2 + 4 * (v18 >> 5) + *((unsigned int *)this + 8)) |= 1 << v18;
  }
  else
  {
    *(_DWORD *)((char *)a2
              + *((_DWORD *)this + 11)
              - 1431655764 * ((unint64_t)(v17 - *(_QWORD *)(*(_QWORD *)(v17 + 16) + 48)) >> 4)) = *((_DWORD *)a3 + 17);
  }
  v16 = (uint64_t *)((char *)a2
                  + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
  DefaultMessageInstance = google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, a3);
  v20 = *((_QWORD *)a2 + 1);
  v21 = (_QWORD *)(v20 & 0xFFFFFFFFFFFFFFFELL);
  if ((v20 & 1) != 0)
    v21 = (_QWORD *)*v21;
  result = (*(uint64_t (**)(unint64_t, _QWORD *))(*(_QWORD *)DefaultMessageInstance + 32))(DefaultMessageInstance, v21);
  *v16 = result;
  if (!result)
  {
LABEL_31:
    v22 = google::protobuf::Reflection::GetDefaultMessageInstance((google::protobuf::Reflection *)this, a3);
    v23 = *((_QWORD *)a2 + 1);
    v24 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFFFFELL);
    if ((v23 & 1) != 0)
      v24 = (_QWORD *)*v24;
    result = (*(uint64_t (**)(unint64_t, _QWORD *))(*(_QWORD *)v22 + 32))(v22, v24);
    *v16 = result;
  }
  return result;
}

void google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  google::protobuf::internal::ExtensionSet *v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int HasBitIndex;
  char *v18;
  unsigned int v19;
  int v20;
  unsigned int FieldOffset;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  const google::protobuf::FieldDescriptor *v26;
  uint64_t (*v27)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v28)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v29)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const google::protobuf::FieldDescriptor **v30;

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a4 + 10) != v9)
  if (*((_DWORD *)a4 + 15) == 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a4 + 6);
  if (v10)
  {
    v26 = a4;
    v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v29 = &v27;
      v30 = &v26;
      v28 = &v29;
      std::__call_once(v10, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a4 + 14) & 0xFFFFFFFE) != 0xA)
  if (*((_BYTE *)a4 + 67))
  {
    v12 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    v13 = *((_DWORD *)a4 + 17);
    v14 = (unint64_t *)*((_QWORD *)a4 + 6);
    if (v14)
    {
      v26 = a4;
      v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v15 = atomic_load(v14);
      if (v15 != -1)
      {
        v29 = &v27;
        v30 = &v26;
        v28 = &v29;
        std::__call_once(v14, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(v12, v13, *((_BYTE *)a4 + 56), a4, a3);
    return;
  }
  v16 = *((_QWORD *)a4 + 11);
  if (!v16 || *(_DWORD *)(v16 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v16 + 32) + 65))
  {
    HasBitIndex = google::protobuf::internal::ReflectionSchema::HasBitIndex((uint64_t)(this + 1), (uint64_t)a4);
    if (a3)
    {
      if (HasBitIndex == -1)
        goto LABEL_26;
      v18 = (char *)a2 + *((unsigned int *)this + 8);
      v19 = HasBitIndex >> 5;
      v20 = *(_DWORD *)&v18[4 * (HasBitIndex >> 5)] | (1 << HasBitIndex);
    }
    else
    {
      if (HasBitIndex == -1)
        goto LABEL_26;
      v18 = (char *)a2 + *((unsigned int *)this + 8);
      v19 = HasBitIndex >> 5;
      v20 = *(_DWORD *)&v18[4 * (HasBitIndex >> 5)] & ~(1 << HasBitIndex);
    }
    *(_DWORD *)&v18[4 * v19] = v20;
LABEL_26:
    FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a4);
    v22 = FieldOffset;
    v23 = *(_QWORD *)((char *)a2 + *((unsigned int *)this + 9));
    v24 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFFFFELL);
    if ((v23 & 1) != 0)
    {
      if (!*v24)
      {
LABEL_28:
        v25 = *(_QWORD *)((char *)a2 + FieldOffset);
        if (v25)
          (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
      }
    }
    else if (!v24)
    {
      goto LABEL_28;
    }
    *(_QWORD *)((char *)a2 + v22) = a3;
    return;
  }
  google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)this, a2, v16);
  if (a3)
  {
    *(_QWORD *)((char *)a2
              + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a4)) = a3;
    *(_DWORD *)((char *)a2
              + *((_DWORD *)this + 11)
              - 1431655764
              * ((*((_QWORD *)a4 + 11) - *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a4 + 11) + 16) + 48)) >> 4)) = *((_DWORD *)a4 + 17);
  }
}

uint64_t google::protobuf::Reflection::GetRepeatedMessage(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  int IsMapFieldInApi;
  google::protobuf::internal::MapFieldBase *v14;
  uint64_t v15;
  const google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v18;
  _QWORD v19[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      v18 = v19;
      std::__call_once(v10, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::GetRepeatedMessage((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  v14 = (const google::protobuf::Message *)((char *)a2
                                          + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
  if (IsMapFieldInApi)
  {
    google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(v14);
    v15 = *(_QWORD *)(*((_QWORD *)v14 + 2) + 16);
  }
  else
  {
    v15 = *((_QWORD *)v14 + 2);
  }
  return *(_QWORD *)(v15 + 8 * a4 + 8);
}

uint64_t google::protobuf::Reflection::MutableRepeatedMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  _BOOL4 IsMapFieldInApi;
  google::protobuf::internal::MapFieldBase *v14;
  uint64_t v15;
  const google::protobuf::FieldDescriptor *v16;
  void (*v17)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v18;
  _QWORD v19[2];

  v9 = *this;
  if (*((google::protobuf::_anonymous_namespace_ **)a3 + 10) != v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v10)
  {
    v16 = a3;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      v18 = v19;
      std::__call_once(v10, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)a3 + 14) & 0xFFFFFFFE) != 0xA)
  if (*((_BYTE *)a3 + 67))
    return google::protobuf::internal::ExtensionSet::MutableRepeatedMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  v14 = (google::protobuf::Message *)((char *)a2
                                    + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3));
  if (IsMapFieldInApi)
  {
    google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(v14);
    *((_DWORD *)v14 + 22) = 1;
    v15 = *(_QWORD *)(*((_QWORD *)v14 + 2) + 16);
  }
  else
  {
    v15 = *((_QWORD *)v14 + 2);
  }
  return *(_QWORD *)(v15 + 8 * a4 + 8);
}

uint64_t google::protobuf::Reflection::AddMessage(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, unint64_t **a3, google::protobuf::MessageFactory *a4, const char *a5)
{
  google::protobuf::_anonymous_namespace_ *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int IsMapFieldInApi;
  unsigned int FieldOffset;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int *v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  const google::protobuf::FieldDescriptor *v33;
  uint64_t (*v34)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v35;
  _QWORD v36[2];

  v9 = *this;
  if (a3[10] != (unint64_t *)v9)
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v10 = a3[6];
  if (v10)
  {
    v33 = (const google::protobuf::FieldDescriptor *)a3;
    v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v36[0] = &v34;
      v36[1] = &v33;
      v35 = v36;
      std::__call_once(v10, &v35, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (((_DWORD)a3[7] & 0xFFFFFFFE) != 0xA)
  if (!a4)
    a4 = this[8];
  if (*((_BYTE *)a3 + 67))
  {
    google::protobuf::internal::ExtensionSet::AddMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), (const google::protobuf::FieldDescriptor *)a3, a4);
    return v12;
  }
  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), (const google::protobuf::FieldDescriptor *)a3);
  v16 = (char *)a2 + FieldOffset;
  if (IsMapFieldInApi)
  {
    google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((google::protobuf::Message *)((char *)a2 + FieldOffset));
    *((_DWORD *)v16 + 22) = 1;
    v16 = (char *)*((_QWORD *)v16 + 2);
  }
  v17 = *((_QWORD *)v16 + 2);
  v18 = *((_DWORD *)v16 + 2);
  if (!v17
    || v18 >= *(_DWORD *)v17
    || (v19 = v18, ++v18, *((_DWORD *)v16 + 2) = v18, (v13 = *(_QWORD *)(v17 + 8 * v19 + 8)) == 0))
  {
    if (v18)
    {
      v20 = *(_QWORD *)(v17 + 8);
    }
    else
    {
      v21 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a3);
      v20 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(_QWORD *)a4 + 16))(a4, v21);
    }
    v22 = *((_QWORD *)a2 + 1);
    v23 = (_QWORD *)(v22 & 0xFFFFFFFFFFFFFFFELL);
    if ((v22 & 1) != 0)
      v23 = (_QWORD *)*v23;
    v13 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v20 + 32))(v20, v23);
    v24 = (int *)*((_QWORD *)v16 + 2);
    if (v24)
    {
      v25 = *((_DWORD *)v16 + 2);
      v26 = *((_DWORD *)v16 + 3);
      v27 = v25;
      if (v25 != v26)
      {
        v28 = *v24;
        if ((_DWORD)v28 == v26)
        {
          v29 = *(_QWORD *)&v24[2 * v25 + 2];
          if (v29 && !*(_QWORD *)v16)
          {
            (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
            v24 = (int *)*((_QWORD *)v16 + 2);
          }
          goto LABEL_34;
        }
        if (v25 >= (int)v28)
        {
          v30 = v28 + 1;
          goto LABEL_33;
        }
        *(_QWORD *)&v24[2 * v28 + 2] = *(_QWORD *)&v24[2 * v25 + 2];
LABEL_32:
        v24 = (int *)*((_QWORD *)v16 + 2);
        v30 = *v24 + 1;
LABEL_33:
        *v24 = v30;
LABEL_34:
        v31 = *((int *)v16 + 2);
        *((_DWORD *)v16 + 2) = v31 + 1;
        *(_QWORD *)&v24[2 * v31 + 2] = v13;
        return v13;
      }
    }
    else
    {
      v27 = *((_DWORD *)v16 + 2);
      v25 = *((_DWORD *)v16 + 3);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v16, v25 - v27 + 1);
    goto LABEL_32;
  }
  return v13;
}

uint64_t *google::protobuf::Reflection::MutableRawRepeatedField(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, int a4, const char *a5, uint64_t a6)
{
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  google::protobuf::internal::ExtensionSet *v16;
  int v17;
  unint64_t *v18;
  unint64_t v19;
  int v20;
  char is_packed;
  uint64_t v22;
  _BOOL4 IsMapFieldInApi;
  unsigned int FieldOffsetNonOneof;
  void (**v26)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  google::protobuf::Descriptor **v27;
  int v28;
  std::string __p;
  google::protobuf::Descriptor *v30;
  void (*v31)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v32)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v11 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v11)
  {
    v30 = a3;
    v31 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v26 = &v31;
      v27 = &v30;
      v32 = &v26;
      std::__call_once(v11, &v32, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v13 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)];
  if (v13 == a4)
    goto LABEL_13;
  v14 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v14)
  {
    v30 = a3;
    v31 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      v26 = &v31;
      v27 = &v30;
      v32 = &v26;
      std::__call_once(v14, &v32, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v13 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)];
  }
  if (a4 == 1 && v13 == 8)
  {
LABEL_13:
    if (!a6)
      goto LABEL_19;
  }
  else
  {
    if (!a6)
      goto LABEL_19;
  }
  if (google::protobuf::FieldDescriptor::message_type(a3) != a6)
  {
    LODWORD(v26) = 3;
    v27 = (google::protobuf::Descriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/generated_message_reflection.cc";
    v28 = 1789;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (field->message_type()) == (desc): ");
    std::string::append(&__p, "wrong submessage type");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v26);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_19:
  if (*((_BYTE *)a3 + 67))
  {
    v16 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    v17 = *((_DWORD *)a3 + 17);
    v18 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v18)
    {
      v30 = a3;
      v31 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v19 = atomic_load(v18);
      if (v19 != -1)
      {
        v26 = &v31;
        v27 = &v30;
        v32 = &v26;
        std::__call_once(v18, &v32, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v20 = *((unsigned __int8 *)a3 + 56);
    is_packed = google::protobuf::FieldDescriptor::is_packed(a3);
    return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v16, v17, v20, is_packed, a3);
  }
  else
  {
    FieldOffsetNonOneof = google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(a1 + 8, (uint64_t)a3);
    v22 = a2 + FieldOffsetNonOneof;
    if (IsMapFieldInApi)
    {
      google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((google::protobuf::internal::MapFieldBase *)(a2 + FieldOffsetNonOneof));
      *(_DWORD *)(v22 + 88) = 1;
      return *(uint64_t **)(v22 + 16);
    }
  }
  return (uint64_t *)v22;
}

void sub_18885EED8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *google::protobuf::Reflection::GetRawRepeatedField(uint64_t a1, uint64_t a2, google::protobuf::Descriptor *a3, int a4, const char *a5, uint64_t a6)
{
  int v7;
  unint64_t *v12;
  unint64_t v13;
  google::protobuf::internal::ExtensionSet *v14;
  int v15;
  unint64_t *v16;
  unint64_t v17;
  int v18;
  char is_packed;
  uint64_t v20;
  int IsMapFieldInApi;
  unsigned int FieldOffsetNonOneof;
  uint64_t (**v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  google::protobuf::Descriptor **v25;
  int v26;
  std::string __p;
  google::protobuf::Descriptor *v28;
  uint64_t (*v29)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v30)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  v7 = (int)a5;
  if (*((_DWORD *)a3 + 15) != 3)
      a5);
  v12 = (unint64_t *)*((_QWORD *)a3 + 6);
  if (v12)
  {
    v28 = a3;
    v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v13 = atomic_load(v12);
    if (v13 != -1)
    {
      v24 = &v29;
      v25 = &v28;
      v30 = &v24;
      std::__call_once(v12, &v30, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != a4)
  if (v7 < 0
    || *(_DWORD *)(*((_QWORD *)a3 + 15) + 72) == v7
    || (LODWORD(v24) = 3,
        v25 = (google::protobuf::Descriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/"
                                               "protobuf/generated_message_reflection.cc",
        v26 = 1813,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: (field->options().ctype()) == (ctype): "),
        std::string::append(&__p, "subtype mismatch"),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v24),
        (SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0))
  {
    if (!a6)
      goto LABEL_16;
  }
  else
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!a6)
      goto LABEL_16;
  }
  if (google::protobuf::FieldDescriptor::message_type(a3) != a6)
  {
    LODWORD(v24) = 3;
    v25 = (google::protobuf::Descriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/prot"
                                           "obuf/generated_message_reflection.cc";
    v26 = 1815;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (field->message_type()) == (desc): ");
    std::string::append(&__p, "wrong submessage type");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v24);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_16:
  if (*((_BYTE *)a3 + 67))
  {
    v14 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    v15 = *((_DWORD *)a3 + 17);
    v16 = (unint64_t *)*((_QWORD *)a3 + 6);
    if (v16)
    {
      v28 = a3;
      v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v17 = atomic_load(v16);
      if (v17 != -1)
      {
        v24 = &v29;
        v25 = &v28;
        v30 = &v24;
        std::__call_once(v16, &v30, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v18 = *((unsigned __int8 *)a3 + 56);
    is_packed = google::protobuf::FieldDescriptor::is_packed(a3);
    return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v14, v15, v18, is_packed, a3);
  }
  else
  {
    FieldOffsetNonOneof = google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(a1 + 8, (uint64_t)a3);
    v20 = a2 + FieldOffsetNonOneof;
    if (IsMapFieldInApi)
    {
      google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap((google::protobuf::internal::MapFieldBase *)(a2 + FieldOffsetNonOneof));
      return *(uint64_t **)(v20 + 16);
    }
  }
  return (uint64_t *)v20;
}

void sub_18885F188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::GetOneofFieldDescriptor(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v5;
  int v7;

  if (*(_DWORD *)(a3 + 24) == 1 && (v5 = **(_QWORD **)(a3 + 32), *(_BYTE *)(v5 + 65)))
  {
    if (google::protobuf::Reflection::HasField((google::protobuf::_anonymous_namespace_ **)a1, a2, **(const google::protobuf::FieldDescriptor ***)(a3 + 32), a4, a5))return v5;
    else
      return 0;
  }
  else
  {
    v7 = *(_DWORD *)((char *)a2
                   + *(_DWORD *)(a1 + 44)
                   - 1431655764 * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 16) + 48)) >> 4));
    if (v7)
      return google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)a1, v7);
    else
      return 0;
  }
}

uint64_t google::protobuf::Reflection::LookupMapValue(google::protobuf::_anonymous_namespace_ **this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, const google::protobuf::MapKey *a4, google::protobuf::MapValueConstRef *a5)
{
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t FieldByName;
  unint64_t *v14;
  unint64_t v15;
  unsigned int FieldOffset;
  void *__p[2];
  char v19;
  uint64_t v20;
  void (*v21)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  _QWORD *v22;
  _QWORD v23[2];

  v11 = google::protobuf::FieldDescriptor::message_type(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "value");
  FieldByName = google::protobuf::Descriptor::FindFieldByName(v11, (uint64_t *)__p, v12);
  v14 = *(unint64_t **)(FieldByName + 48);
  if (v14)
  {
    v20 = FieldByName;
    v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      v23[0] = &v21;
      v23[1] = &v20;
      v22 = v23;
      std::__call_once(v14, &v22, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  *((_DWORD *)a5 + 2) = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)];
  if (v19 < 0)
    operator delete(__p[0]);
  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  return (*(uint64_t (**)(char *, const google::protobuf::MapKey *, google::protobuf::MapValueConstRef *))(*(_QWORD *)((char *)a2 + FieldOffset) + 32))((char *)a2 + FieldOffset, a4, a5);
}

void sub_18885F358(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::MapBegin@<X0>(google::protobuf::_anonymous_namespace_ **this@<X0>, google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, google::protobuf::MapIterator *a4@<X8>)
{
  const char *v8;
  unsigned int FieldOffset;

  google::protobuf::MapIterator::MapIterator(a4, a2, a3);
  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  return (*(uint64_t (**)(char *, google::protobuf::MapIterator *))(*(_QWORD *)((char *)a2 + FieldOffset)
                                                                            + 56))((char *)a2 + FieldOffset, a4);
}

void sub_18885F3FC(_Unwind_Exception *a1)
{
  google::protobuf::MapIterator *v1;

  google::protobuf::MapIterator::~MapIterator(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::MapEnd@<X0>(google::protobuf::_anonymous_namespace_ **this@<X0>, google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, google::protobuf::MapIterator *a4@<X8>)
{
  const char *v8;
  unsigned int FieldOffset;

  google::protobuf::MapIterator::MapIterator(a4, a2, a3);
  FieldOffset = google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
  return (*(uint64_t (**)(char *, google::protobuf::MapIterator *))(*(_QWORD *)((char *)a2 + FieldOffset)
                                                                            + 64))((char *)a2 + FieldOffset, a4);
}

void sub_18885F498(_Unwind_Exception *a1)
{
  google::protobuf::MapIterator *v1;

  google::protobuf::MapIterator::~MapIterator(v1);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::Reflection::HasOneof(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  if (*(_DWORD *)(a3 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(a3 + 32) + 65))
    return google::protobuf::Reflection::HasField((google::protobuf::_anonymous_namespace_ **)a1, a2, **(const google::protobuf::FieldDescriptor ***)(a3 + 32), a4, a5);
  else
    return (_DWORD *)(*(_DWORD *)((char *)a2
                                + *(_DWORD *)(a1 + 44)
                                - 1431655764
                                * ((unint64_t)(a3 - *(_QWORD *)(*(_QWORD *)(a3 + 16) + 48)) >> 4)) != 0);
}

uint64_t *google::protobuf::Reflection::RepeatedFieldData(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *this, int a4, uint64_t a5)
{
  unint64_t *v10;
  unint64_t v11;
  int v12;
  unint64_t *v13;
  unint64_t v14;
  google::protobuf::internal::ExtensionSet *v15;
  int v16;
  unint64_t *v17;
  unint64_t v18;
  int v19;
  char is_packed;
  void (**v22)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  google::protobuf::FieldDescriptor **v23;
  int v24;
  std::string __p;
  google::protobuf::FieldDescriptor *v26;
  void (*v27)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v28)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);

  if (*((_DWORD *)this + 15) != 3)
  {
    LODWORD(v22) = 3;
    v23 = (google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google"
                                                "/protobuf/generated_message_reflection.cc";
    v24 = 2281;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: field->is_repeated(): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v10 = (unint64_t *)*((_QWORD *)this + 6);
  if (v10)
  {
    v26 = this;
    v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v22 = &v27;
      v23 = &v26;
      v28 = &v22;
      std::__call_once(v10, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  if (v12 == a4)
    goto LABEL_15;
  v13 = (unint64_t *)*((_QWORD *)this + 6);
  if (v13)
  {
    v26 = this;
    v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v14 = atomic_load(v13);
    if (v14 != -1)
    {
      v22 = &v27;
      v23 = &v26;
      v28 = &v22;
      std::__call_once(v13, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  }
  if (a4 == 1 && v12 == 8)
    goto LABEL_15;
  LODWORD(v22) = 3;
  v23 = (google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/p"
                                              "rotobuf/generated_message_reflection.cc";
  v24 = 2284;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: field->cpp_type() == cpp_type || (field->cpp_type() == FieldDescriptor::CPPTYPE_ENUM && cpp_type == FieldDescriptor::CPPTYPE_INT32): ");
  std::string::append(&__p, "The type parameter T in RepeatedFieldRef<T> API doesn't match ");
  std::string::append(&__p, "the actual field type (for enums T should be the generated enum ");
  std::string::append(&__p, "type or int32).");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v22);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_15:
    if (!a5)
      goto LABEL_19;
  }
  else
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!a5)
      goto LABEL_19;
  }
  if (google::protobuf::FieldDescriptor::message_type(this) != a5)
  {
    LODWORD(v22) = 3;
    v23 = (google::protobuf::FieldDescriptor **)"/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google"
                                                "/protobuf/generated_message_reflection.cc";
    v24 = 2289;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (message_type) == (field->message_type()): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_19:
  if (!*((_BYTE *)this + 67))
    return (uint64_t *)(a2
                     + google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(a1 + 8, (uint64_t)this));
  v15 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
  v16 = *((_DWORD *)this + 17);
  v17 = (unint64_t *)*((_QWORD *)this + 6);
  if (v17)
  {
    v26 = this;
    v27 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v18 = atomic_load(v17);
    if (v18 != -1)
    {
      v22 = &v27;
      v23 = &v26;
      v28 = &v22;
      std::__call_once(v17, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v19 = *((unsigned __int8 *)this + 56);
  is_packed = google::protobuf::FieldDescriptor::is_packed(this);
  return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v15, v16, v19, is_packed, this);
}

void sub_18885F7D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::MutableMapData(google::protobuf::_anonymous_namespace_ **this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  const char *v6;

  return (uint64_t)a2
       + google::protobuf::internal::ReflectionSchema::GetFieldOffset((google::protobuf::internal::ReflectionSchema *)(this + 1), a3);
}

void google::protobuf::internal::AssignDescriptors(uint64_t a1, char a2)
{
  unint64_t *v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v7[3];

  v5 = a1;
  v4 = a2;
  if ((a2 & 1) == 0)
    v4 = *(_BYTE *)(a1 + 1);
  v2 = *(unint64_t **)(a1 + 32);
  v3 = atomic_load(v2);
  if (v3 != -1)
  {
    v7[1] = &v5;
    v7[2] = &v4;
    v6 = v7;
    std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::DescriptorTable const*,BOOL),google::protobuf::internal::DescriptorTable const*&,BOOL &>>);
  }
}

void google::protobuf::`anonymous namespace'::AssignDescriptorsImpl(uint64_t a1, int a2)
{
  unsigned __int8 v4;
  google::protobuf::DescriptorPool *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *FileByName;
  google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *v12;
  void *v13;
  _QWORD *v14;
  const char *v15;
  std::string::size_type v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  unint64_t v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  const void *v42;
  void *__p;
  const char *v44;
  _QWORD *v45;
  std::string v46;

  v4 = atomic_load((unsigned __int8 *)&_MergedGlobals_171);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&_MergedGlobals_171))
  {
    __cxa_guard_release(&_MergedGlobals_171);
  }
  google::protobuf::internal::AddDescriptors(a1);
  if (a2)
  {
    v6 = *(unsigned int *)(a1 + 60);
    if ((int)v6 >= 1)
    {
      v7 = 0;
      v8 = 8 * v6;
      do
      {
        v5 = *(google::protobuf::DescriptorPool **)(*(_QWORD *)(a1 + 48) + v7);
        if (v5)
          v5 = (google::protobuf::DescriptorPool *)google::protobuf::internal::AssignDescriptors(v5, 1);
        v7 += 8;
      }
      while (v8 != v7);
    }
  }
  v9 = google::protobuf::DescriptorPool::internal_generated_pool(v5);
  std::string::basic_string[abi:ne180100]<0>(&__p, *(char **)(a1 + 16));
  FileByName = (google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *)google::protobuf::DescriptorPool::FindFileByName(v9, (uint64_t *)&__p, v10);
  v12 = FileByName;
  if (SHIBYTE(v45) < 0)
  {
    operator delete(__p);
    if (v12)
      goto LABEL_14;
  }
  else if (FileByName)
  {
    goto LABEL_14;
  }
  LODWORD(__p) = 3;
  v44 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_reflection.cc";
  LODWORD(v45) = 2452;
  memset(&v46, 0, sizeof(v46));
  std::string::append(&v46, "CHECK failed: file != nullptr: ");
  FileByName = (google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *)google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&__p);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v46.__r_.__value_.__l.__data_);
LABEL_14:
  v14 = *(_QWORD **)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 80);
  v15 = *(const char **)(a1 + 88);
  __p = v13;
  v44 = v15;
  v45 = v14;
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = *(_OWORD *)(a1 + 64);
  v46.__r_.__value_.__r.__words[2] = v16;
  if (*((int *)v12 + 11) >= 1)
  {
    v17 = 0;
    v18 = 0;
    do
    {
      google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor((google::protobuf::AssignDescriptorsHelper *)&__p, (const google::protobuf::Descriptor *)(*((_QWORD *)v12 + 13) + v17));
      ++v18;
      v17 += 144;
    }
    while (v18 < *((int *)v12 + 11));
  }
  v19 = *((unsigned int *)v12 + 12);
  if ((int)v19 >= 1)
  {
    v20 = 0;
    v21 = v45;
    v22 = 80 * v19;
    do
    {
      *v21++ = *((_QWORD *)v12 + 14) + v20;
      v20 += 80;
    }
    while (v22 != v20);
    v45 = v21;
  }
  if (*(_BYTE *)(*((_QWORD *)v12 + 17) + 155))
  {
    v23 = *((unsigned int *)v12 + 13);
    if ((int)v23 >= 1)
    {
      v24 = 0;
      v25 = 0;
      v26 = 48 * v23;
      do
      {
        *(_QWORD *)(*(_QWORD *)(a1 + 112) + v24) = *((_QWORD *)v12 + 15) + v25;
        v25 += 48;
        v24 += 8;
      }
      while (v26 != v25);
    }
  }
  v27 = atomic_load((unsigned __int8 *)&qword_1ECDBB6E8);
  if ((v27 & 1) == 0 && __cxa_guard_acquire(&qword_1ECDBB6E8))
  {
    v41 = operator new();
    *(_QWORD *)v41 = 850045863;
    *(_OWORD *)(v41 + 8) = 0u;
    *(_OWORD *)(v41 + 24) = 0u;
    *(_OWORD *)(v41 + 40) = 0u;
    *(_OWORD *)(v41 + 56) = 0u;
    *(_OWORD *)(v41 + 72) = 0u;
    qword_1ECDBB6E0 = v41;
    __cxa_guard_release(&qword_1ECDBB6E8);
  }
  v28 = qword_1ECDBB6E0;
  v29 = *(_QWORD *)(a1 + 88);
  v30 = v44;
  std::mutex::lock((std::mutex *)qword_1ECDBB6E0);
  v32 = *(char **)(v28 + 72);
  v31 = *(_QWORD *)(v28 + 80);
  if ((unint64_t)v32 >= v31)
  {
    v34 = *(char **)(v28 + 64);
    v35 = (v32 - v34) >> 4;
    v36 = v35 + 1;
    if ((unint64_t)(v35 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v37 = v31 - (_QWORD)v34;
    if (v37 >> 3 > v36)
      v36 = v37 >> 3;
    if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF0)
      v38 = 0xFFFFFFFFFFFFFFFLL;
    else
      v38 = v36;
    if (v38)
    {
      if (v38 >> 60)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v39 = (char *)operator new(16 * v38);
    }
    else
    {
      v39 = 0;
    }
    v40 = &v39[16 * v35];
    *(_QWORD *)v40 = v29;
    *((_QWORD *)v40 + 1) = v30;
    v33 = v40 + 16;
    if (v32 != v34)
    {
      do
      {
        *((_OWORD *)v40 - 1) = *((_OWORD *)v32 - 1);
        v40 -= 16;
        v32 -= 16;
      }
      while (v32 != v34);
      v32 = *(char **)(v28 + 64);
    }
    *(_QWORD *)(v28 + 64) = v40;
    *(_QWORD *)(v28 + 72) = v33;
    *(_QWORD *)(v28 + 80) = &v39[16 * v38];
    if (v32)
      operator delete(v32);
  }
  else
  {
    *(_QWORD *)v32 = v29;
    *((_QWORD *)v32 + 1) = v30;
    v33 = v32 + 16;
  }
  *(_QWORD *)(v28 + 72) = v33;
  std::mutex::unlock((std::mutex *)v28);
}

void sub_18885FC84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  __cxa_guard_abort(&qword_1ECDBB6E8);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::AddDescriptors(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!*(_BYTE *)a1)
  {
    *(_BYTE *)a1 = 1;
    if (*(int *)(a1 + 56) >= 1)
    {
      v2 = 0;
      do
      {
        v3 = *(unsigned int **)(*(_QWORD *)(a1 + 40) + 8 * v2);
        if (atomic_load(v3))
          google::protobuf::internal::InitSCCImpl(v3);
        ++v2;
      }
      while (v2 < *(int *)(a1 + 56));
    }
    v5 = *(unsigned int *)(a1 + 60);
    if ((int)v5 >= 1)
    {
      v6 = 0;
      v7 = 8 * v5;
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(a1 + 48) + v6))
          google::protobuf::internal::AddDescriptors();
        v6 += 8;
      }
      while (v7 != v6);
    }
    google::protobuf::DescriptorPool::InternalAddGeneratedFile(*(google::protobuf::DescriptorPool **)(a1 + 8), (const void *)*(unsigned int *)(a1 + 24));
    google::protobuf::MessageFactory::InternalRegisterGeneratedFile((const char **)a1);
  }
}

void google::protobuf::internal::RegisterFileLevelMetadata(uint64_t a1)
{
  const google::protobuf::Message *v2;
  uint64_t v3;
  uint64_t v4;

  google::protobuf::internal::AssignDescriptors(a1, 0);
  v3 = *(unsigned int *)(a1 + 96);
  if ((int)v3 >= 1)
  {
    v4 = *(_QWORD *)(a1 + 88) + 8;
    do
    {
      google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(*(const std::string::value_type ***)(v4 - 8), *(const google::protobuf::Descriptor **)(*(_QWORD *)v4 + 8), v2);
      v4 += 16;
      --v3;
    }
    while (v3);
  }
}

uint64_t google::protobuf::internal::ReflectionSchema::GetFieldOffset(google::protobuf::internal::ReflectionSchema *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v2;
  int v4;
  unint64_t *v5;
  unint64_t v6;
  const google::protobuf::FieldDescriptor *v7;
  uint64_t (*v8)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v9;
  _QWORD v10[2];

  v2 = *((_QWORD *)a2 + 11);
  if (!v2 || *(_DWORD *)(v2 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v2 + 32) + 65))
    return google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof((uint64_t)this, (uint64_t)a2);
  v4 = *(_DWORD *)(*((_QWORD *)this + 1)
                 + 4
                 * (int)(*(_DWORD *)(*((_QWORD *)a2 + 10) + 104)
                       - 1431655765 * ((unint64_t)(v2 - *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48)) >> 4)));
  v5 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v5)
  {
    v7 = a2;
    v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v6 = atomic_load(v5);
    if (v6 != -1)
    {
      v10[0] = &v8;
      v10[1] = &v7;
      v9 = v10;
      std::__call_once(v5, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return v4 & 0x7FFFFFFF;
}

uint64_t google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  int v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v10;
  _QWORD v11[2];

  if (*(_BYTE *)(a2 + 67))
  {
    v2 = *(_QWORD *)(a2 + 96);
    if (v2)
      v3 = (_QWORD *)(v2 + 80);
    else
      v3 = (_QWORD *)(*(_QWORD *)(a2 + 40) + 128);
  }
  else
  {
    v3 = (_QWORD *)(*(_QWORD *)(a2 + 80) + 40);
  }
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
  v5 = *(unint64_t **)(a2 + 48);
  if (v5)
  {
    v8 = a2;
    v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v6 = atomic_load(v5);
    if (v6 != -1)
    {
      v11[0] = &v9;
      v11[1] = &v8;
      v10 = v11;
      std::__call_once(v5, &v10, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return v4 & 0x7FFFFFFF;
}

uint64_t google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor(google::protobuf::AssignDescriptorsHelper *this, const google::protobuf::Descriptor *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int *v11;
  int v12;
  int v13;
  int v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  const google::protobuf::Descriptor *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;

  if (*((int *)a2 + 29) >= 1)
  {
    v4 = 0;
    v5 = 0;
    do
    {
      google::protobuf::AssignDescriptorsHelper::AssignMessageDescriptor(this, (const google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v4));
      ++v5;
      v4 += 144;
    }
    while (v5 < *((int *)a2 + 29));
  }
  **((_QWORD **)this + 1) = a2;
  v6 = operator new();
  v7 = *((_QWORD *)this + 5);
  v8 = *((_QWORD *)this + 3);
  v9 = *(_QWORD *)v8;
  v27 = *(_DWORD *)(v8 + 8);
  v26 = **((_QWORD **)this + 4);
  v25 = *(_DWORD *)(v7 + (((*(_QWORD *)v8 << 32) + 0x100000000) >> 30));
  v10 = *(_DWORD *)(v7 + (((*(_QWORD *)v8 << 32) + 0x200000000) >> 30));
  v11 = (int *)(v7 + 4 * (int)*(_QWORD *)v8);
  v12 = *(_DWORD *)(v7 + (((*(_QWORD *)v8 << 32) + 0x300000000) >> 30));
  v13 = *v11;
  v14 = *(_DWORD *)(v7 + (((*(_QWORD *)v8 << 32) + 0x400000000) >> 30));
  result = google::protobuf::DescriptorPool::internal_generated_pool((google::protobuf::DescriptorPool *)v6);
  v16 = v9 >> 32;
  *(_QWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = v26;
  v17 = *(_QWORD *)this;
  *(_QWORD *)(v6 + 16) = v11 + 5;
  *(_QWORD *)(v6 + 24) = v7 + 4 * v16;
  *(_DWORD *)(v6 + 32) = v13;
  *(_DWORD *)(v6 + 36) = v25;
  *(_DWORD *)(v6 + 40) = v10;
  *(_DWORD *)(v6 + 44) = v12;
  v18 = a2;
  *(_DWORD *)(v6 + 48) = v27;
  *(_DWORD *)(v6 + 52) = v14;
  if (!result)
  {
    result = google::protobuf::DescriptorPool::internal_generated_pool(0);
    v18 = *(const google::protobuf::Descriptor **)v6;
  }
  *(_QWORD *)(v6 + 56) = result;
  *(_QWORD *)(v6 + 64) = v17;
  *(_DWORD *)(v6 + 72) = *((_DWORD *)v18 + 26) - 1;
  v19 = *((_QWORD *)this + 1);
  *(_QWORD *)(v19 + 8) = v6;
  v20 = *((unsigned int *)a2 + 30);
  if ((int)v20 >= 1)
  {
    v21 = 0;
    v22 = (_QWORD *)*((_QWORD *)this + 2);
    v23 = 80 * v20;
    do
    {
      *v22 = *((_QWORD *)a2 + 8) + v21;
      v22 = (_QWORD *)(*((_QWORD *)this + 2) + 8);
      *((_QWORD *)this + 2) = v22;
      v21 += 80;
    }
    while (v23 != v21);
    v19 = *((_QWORD *)this + 1);
  }
  v24 = *((_QWORD *)this + 4) + 8;
  *((_QWORD *)this + 3) += 12;
  *((_QWORD *)this + 4) = v24;
  *((_QWORD *)this + 1) = v19 + 16;
  return result;
}

void sub_188860128(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D76437C](v1, 0x1070C4026DFEB36);
  _Unwind_Resume(a1);
}

std::mutex *google::protobuf::internal::OnShutdownDelete<google::protobuf::`anonymous namespace'::MetadataOwner>(google::protobuf::`anonymous namespace'::MetadataOwner *)::{lambda(void const*)#1}::__invoke(std::mutex *this)
{
  std::mutex *v1;
  unint64_t *sig;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (this)
  {
    v1 = this;
    sig = (unint64_t *)this[1].__m_.__sig;
    v3 = *(unint64_t **)this[1].__m_.__opaque;
    if (sig != v3)
    {
      do
      {
        v4 = *sig;
        v5 = sig[1];
        while (v4 < v5)
        {
          v6 = *(_QWORD *)(v4 + 8);
          if (v6)
            MEMORY[0x18D76437C](v6, 0x1070C4026DFEB36);
          v4 += 16;
        }
        sig += 2;
      }
      while (sig != v3);
      sig = (unint64_t *)v1[1].__m_.__sig;
    }
    if (sig)
    {
      *(_QWORD *)v1[1].__m_.__opaque = sig;
      operator delete(sig);
    }
    std::mutex::~mutex(v1);
    JUMPOUT(0x18D76437CLL);
  }
  return this;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    v2 = *(_QWORD *)(result + 16) + 8;
    do
    {
      v3 = *(_QWORD *)v2;
      if (*(char *)(*(_QWORD *)v2 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

uint64_t google::protobuf::internal::ReflectionSchema::GetFieldDefault(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t (*v11)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v12;
  _QWORD v13[2];

  if (*(_BYTE *)(a3 + 67))
  {
    v4 = *(_QWORD *)(a3 + 96);
    if (v4)
      v5 = (_QWORD *)(v4 + 80);
    else
      v5 = (_QWORD *)(*(_QWORD *)(a3 + 40) + 128);
  }
  else
  {
    v5 = (_QWORD *)(*(_QWORD *)(a3 + 80) + 40);
  }
  v6 = *(_DWORD *)(a2 + 4 * (int)(678152731 * ((unint64_t)(a3 - *v5) >> 3)));
  v7 = *(unint64_t **)(a3 + 48);
  if (v7)
  {
    v10 = a3;
    v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v8 = atomic_load(v7);
    if (v8 != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return a1 + (v6 & 0x7FFFFFFF);
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<std::string>>(google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t *a2)
{
  unint64_t v4;
  int v5;
  std::string **v6;
  unsigned int *v7;
  _DWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  std::string **v15;
  unsigned int *v16;
  int v17;
  int *v18;
  unsigned int *v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  std::string v24;

  v4 = *a2;
  v24.__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v4;
  v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    v6 = (std::string **)(*((_QWORD *)this + 2) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v24, v5);
    v8 = (_DWORD *)v24.__r_.__value_.__r.__words[2];
    v9 = v24.__r_.__value_.__r.__words[1];
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::string>>(&v24, (std::string **)v7, v6, v5, *(_DWORD *)v24.__r_.__value_.__r.__words[2] - LODWORD(v24.__r_.__value_.__r.__words[1]));
    LODWORD(v24.__r_.__value_.__r.__words[1]) = v9 + v5;
    if (*v8 < v9 + v5)
      *v8 = v9 + v5;
    v10 = *((unsigned int *)this + 2);
    if ((int)v10 >= 1)
    {
      v11 = *((_QWORD *)this + 2) + 8;
      do
      {
        v12 = *(_QWORD *)v11;
        if (*(char *)(*(_QWORD *)v11 + 23) < 0)
        {
          **(_BYTE **)v12 = 0;
          *(_QWORD *)(v12 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v12 = 0;
          *(_BYTE *)(v12 + 23) = 0;
        }
        v11 += 8;
        --v10;
      }
      while (v10);
      *((_DWORD *)this + 2) = 0;
    }
  }
  v14 = a2 + 1;
  v13 = *((_DWORD *)a2 + 2);
  if (v13)
  {
    v15 = (std::string **)(a2[2] + 8);
    v16 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v13);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::string>>((std::string *)this, (std::string **)v16, v15, v13, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    v17 = *((_DWORD *)this + 2) + v13;
    *((_DWORD *)this + 2) = v17;
    v18 = (int *)*((_QWORD *)this + 2);
    if (*v18 < v17)
      *v18 = v17;
  }
  v19 = (unsigned int *)v14[1];
  *(_OWORD *)v14 = *(_OWORD *)&v24.__r_.__value_.__r.__words[1];
  if (v19)
    v20 = v24.__r_.__value_.__r.__words[0] == 0;
  else
    v20 = 0;
  if (v20)
  {
    v21 = (uint64_t *)(v19 + 2);
    v22 = *v19;
    if ((int)v22 >= 1)
    {
      do
      {
        v23 = *v21;
        if (*v21)
        {
          if (*(char *)(v23 + 23) < 0)
            operator delete(*(void **)v23);
          MEMORY[0x18D76437C](v23, 0x1012C40EC159624);
        }
        ++v21;
        --v22;
      }
      while (v22);
    }
    operator delete(v19);
  }
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<std::string>>(std::string *result, std::string **a2, std::string **a3, signed int a4, signed int a5)
{
  std::string::__raw *v9;
  uint64_t v10;
  std::string **v11;
  std::string **v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  int v16;
  std::string::size_type v17;
  std::string **v18;
  std::string **v19;
  std::string *v20;
  std::string *AlignedAndAddCleanup;
  std::string *v22;

  v9 = (std::string::__raw *)result;
  if (a5 >= a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      result = google::protobuf::internal::GenericTypeHandler<std::string>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = a4 - a5;
  if (a4 > a5)
  {
    v17 = v9->__words[0];
    v18 = &a2[a5];
    v19 = &a3[a5];
    do
    {
      v20 = *v19;
      if (v17)
      {
        if ((*(_BYTE *)(v17 + 24) & 1) != 0)
        AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      else
      {
        AlignedAndAddCleanup = (std::string *)operator new();
      }
      v22 = AlignedAndAddCleanup;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      result = google::protobuf::internal::GenericTypeHandler<std::string>::Merge(v20, AlignedAndAddCleanup);
      *v18++ = v22;
      ++v19;
      --v16;
    }
    while (v16);
  }
  return result;
}

void google::protobuf::internal::RepeatedPtrFieldBase::SwapFallback<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>(google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t *a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t *v6;
  uint64_t *v7;
  _DWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  signed int v17;
  signed int *v18;
  unsigned int *v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v4 = *a2;
  v24 = 0uLL;
  v23 = v4;
  v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    v6 = (uint64_t *)(*((_QWORD *)this + 2) + 8);
    v7 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v23, v5);
    v8 = (_DWORD *)*((_QWORD *)&v24 + 1);
    v9 = v24;
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)&v23, v7, v6, v5, **((_DWORD **)&v24 + 1) - v24);
    LODWORD(v24) = v9 + v5;
    if (*v8 < (signed int)(v9 + v5))
      *v8 = v9 + v5;
    v10 = *((unsigned int *)this + 2);
    if ((int)v10 >= 1)
    {
      v11 = (uint64_t *)(*((_QWORD *)this + 2) + 8);
      do
      {
        v12 = *v11++;
        (*(void (**)(uint64_t))(*(_QWORD *)v12 + 40))(v12);
        --v10;
      }
      while (v10);
      *((_DWORD *)this + 2) = 0;
    }
  }
  v14 = a2 + 1;
  v13 = *((_DWORD *)a2 + 2);
  if (v13)
  {
    v15 = (uint64_t *)(a2[2] + 8);
    v16 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v13);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>((uint64_t)this, v16, v15, v13, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    v17 = *((_DWORD *)this + 2) + v13;
    *((_DWORD *)this + 2) = v17;
    v18 = (signed int *)*((_QWORD *)this + 2);
    if (*v18 < v17)
      *v18 = v17;
  }
  v19 = (unsigned int *)v14[1];
  *(_OWORD *)v14 = v24;
  if (v19)
    v20 = v23 == 0;
  else
    v20 = 0;
  if (v20)
  {
    v21 = v19 + 2;
    v22 = *v19;
    if ((int)v22 >= 1)
    {
      do
      {
        if (*v21)
          (*(void (**)(_QWORD))(*(_QWORD *)*v21 + 8))(*v21);
        ++v21;
        --v22;
      }
      while (v22);
    }
    operator delete(v19);
  }
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>>(uint64_t result, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v9 = (uint64_t *)result;
  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      result = google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *v9;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20++;
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v21 + 32))(v21, v18);
      result = google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::Merge(v21, v22);
      *v19++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**,false>(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  BOOL v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  int64_t v61;
  int64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  int v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t *v88;
  uint64_t v90;
  uint64_t v91;
  int v92;

  v7 = (uint64_t *)result;
LABEL_2:
  v8 = v7;
  while (2)
  {
    v7 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = a2 - v8;
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v38 = *(a2 - 1);
        v39 = *v8;
        if (*(_DWORD *)(v38 + 68) < *(_DWORD *)(*v8 + 68))
        {
          *v8 = v38;
          *(a2 - 1) = v39;
        }
        return result;
      case 3uLL:
      case 4uLL:
      case 5uLL:
        v40 = v8 + 1;
        v41 = v8 + 2;
        v42 = v8 + 3;
        v43 = *(a2 - 1);
        v44 = v8[3];
        if (*(_DWORD *)(v43 + 68) < *(_DWORD *)(v44 + 68))
        {
          *v42 = v43;
          *(a2 - 1) = v44;
          v45 = *v42;
          v46 = *v41;
          v47 = *(_DWORD *)(*v42 + 68);
          if (v47 < *(_DWORD *)(*v41 + 68))
          {
            *v41 = v45;
            *v42 = v46;
            v48 = *v40;
            if (v47 < *(_DWORD *)(*v40 + 68))
            {
              v8[1] = v45;
              v8[2] = v48;
              v49 = *v8;
              if (v47 < *(_DWORD *)(*v8 + 68))
              {
                *v8 = v45;
                v8[1] = v49;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 191)
        {
          v50 = v8 + 1;
          v52 = v8 == a2 || v50 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v52)
            {
              v53 = 8;
              v54 = v8;
              do
              {
                v56 = *v54;
                v55 = v54[1];
                v54 = v50;
                v57 = *(_DWORD *)(v55 + 68);
                if (v57 < *(_DWORD *)(v56 + 68))
                {
                  v58 = v53;
                  while (1)
                  {
                    *(uint64_t *)((char *)v8 + v58) = v56;
                    v59 = v58 - 8;
                    if (v58 == 8)
                      break;
                    v56 = *(uint64_t *)((char *)v8 + v58 - 16);
                    v58 -= 8;
                    if (v57 >= *(_DWORD *)(v56 + 68))
                    {
                      v60 = (uint64_t *)((char *)v8 + v59);
                      goto LABEL_80;
                    }
                  }
                  v60 = v8;
LABEL_80:
                  *v60 = v55;
                }
                v50 = v54 + 1;
                v53 += 8;
              }
              while (v54 + 1 != a2);
            }
          }
          else if (!v52)
          {
            do
            {
              v91 = *v7;
              v90 = v7[1];
              v7 = v50;
              v92 = *(_DWORD *)(v90 + 68);
              if (v92 < *(_DWORD *)(v91 + 68))
              {
                do
                {
                  *v50 = v91;
                  v91 = *(v50 - 2);
                  --v50;
                }
                while (v92 < *(_DWORD *)(v91 + 68));
                *v50 = v90;
              }
              v50 = v7 + 1;
            }
            while (v7 + 1 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v8 != a2)
          {
            v61 = (v10 - 2) >> 1;
            v62 = v61;
            do
            {
              v63 = v62;
              if (v61 >= v62)
              {
                v64 = (2 * v62) | 1;
                v65 = &v8[v64];
                v66 = *v65;
                if (2 * v63 + 2 < (uint64_t)v10)
                {
                  result = *(unsigned int *)(v66 + 68);
                  if ((int)result < *(_DWORD *)(v65[1] + 68))
                  {
                    v66 = v65[1];
                    ++v65;
                    v64 = 2 * v63 + 2;
                  }
                }
                v67 = &v8[v63];
                v68 = *v67;
                v69 = *(_DWORD *)(*v67 + 68);
                if (*(_DWORD *)(v66 + 68) >= v69)
                {
                  do
                  {
                    v70 = v65;
                    *v67 = v66;
                    if (v61 < v64)
                      break;
                    result = (2 * v64) | 1;
                    v65 = &v8[result];
                    v71 = 2 * v64 + 2;
                    v66 = *v65;
                    if (v71 < (uint64_t)v10 && *(_DWORD *)(v66 + 68) < *(_DWORD *)(v65[1] + 68))
                    {
                      v66 = v65[1];
                      ++v65;
                      result = v71;
                    }
                    v67 = v70;
                    v64 = result;
                  }
                  while (*(_DWORD *)(v66 + 68) >= v69);
                  *v70 = v68;
                }
              }
              v62 = v63 - 1;
            }
            while (v63);
            v72 = (unint64_t)v9 >> 3;
            do
            {
              v73 = 0;
              v74 = *v8;
              v75 = v8;
              do
              {
                v76 = &v75[v73];
                v79 = v76[1];
                v77 = v76 + 1;
                v78 = v79;
                v80 = (2 * v73) | 1;
                v81 = 2 * v73 + 2;
                if (v81 < v72)
                {
                  result = *(unsigned int *)(v78 + 68);
                  if ((int)result < *(_DWORD *)(v77[1] + 68))
                  {
                    v78 = v77[1];
                    ++v77;
                    v80 = v81;
                  }
                }
                *v75 = v78;
                v75 = v77;
                v73 = v80;
              }
              while (v80 <= (uint64_t)((unint64_t)(v72 - 2) >> 1));
              if (v77 == --a2)
              {
                *v77 = v74;
              }
              else
              {
                *v77 = *a2;
                *a2 = v74;
                v82 = (char *)v77 - (char *)v8 + 8;
                if (v82 >= 9)
                {
                  v83 = (((unint64_t)v82 >> 3) - 2) >> 1;
                  v84 = &v8[v83];
                  v85 = *v84;
                  v86 = *v77;
                  v87 = *(_DWORD *)(*v77 + 68);
                  if (*(_DWORD *)(*v84 + 68) < v87)
                  {
                    do
                    {
                      v88 = v84;
                      *v77 = v85;
                      if (!v83)
                        break;
                      v83 = (v83 - 1) >> 1;
                      v84 = &v8[v83];
                      v85 = *v84;
                      v77 = v88;
                    }
                    while (*(_DWORD *)(*v84 + 68) < v87);
                    *v88 = v86;
                  }
                }
              }
            }
            while (v72-- > 2);
          }
          return result;
        }
        v11 = v10 >> 1;
        v12 = &v8[v10 >> 1];
        if ((unint64_t)v9 < 0x401)
        {
        }
        else
        {
          v13 = *v7;
          *v7 = *v12;
          *v12 = v13;
        }
        --a3;
        v14 = *v7;
        if ((a4 & 1) == 0)
        {
          v15 = *(_DWORD *)(v14 + 68);
          if (*(_DWORD *)(*(v7 - 1) + 68) < v15)
            goto LABEL_12;
          if (v15 >= *(_DWORD *)(*(a2 - 1) + 68))
          {
            v30 = v7 + 1;
            do
            {
              v8 = v30;
              if (v30 >= a2)
                break;
              ++v30;
            }
            while (v15 >= *(_DWORD *)(*v8 + 68));
          }
          else
          {
            v8 = v7;
            do
            {
              v29 = v8[1];
              ++v8;
            }
            while (v15 >= *(_DWORD *)(v29 + 68));
          }
          v31 = a2;
          if (v8 < a2)
          {
            v31 = a2;
            do
              v32 = *--v31;
            while (v15 < *(_DWORD *)(v32 + 68));
          }
          if (v8 < v31)
          {
            v33 = *v8;
            v34 = *v31;
            do
            {
              *v8 = v34;
              *v31 = v33;
              do
              {
                v35 = v8[1];
                ++v8;
                v33 = v35;
              }
              while (v15 >= *(_DWORD *)(v35 + 68));
              do
              {
                v36 = *--v31;
                v34 = v36;
              }
              while (v15 < *(_DWORD *)(v36 + 68));
            }
            while (v8 < v31);
          }
          v37 = v8 - 1;
          if (v8 - 1 != v7)
            *v7 = *v37;
          a4 = 0;
          *v37 = v14;
          continue;
        }
        v15 = *(_DWORD *)(v14 + 68);
LABEL_12:
        v16 = 0;
        do
          v17 = v7[++v16];
        while (*(_DWORD *)(v17 + 68) < v15);
        v18 = &v7[v16];
        v19 = a2;
        if (v16 == 1)
        {
          v19 = a2;
          do
          {
            if (v18 >= v19)
              break;
            v21 = *--v19;
          }
          while (*(_DWORD *)(v21 + 68) >= v15);
        }
        else
        {
          do
            v20 = *--v19;
          while (*(_DWORD *)(v20 + 68) >= v15);
        }
        if (v18 >= v19)
        {
          v27 = v18 - 1;
        }
        else
        {
          v22 = *v19;
          v23 = &v7[v16];
          v24 = v19;
          do
          {
            *v23 = v22;
            *v24 = v17;
            do
            {
              v25 = v23[1];
              ++v23;
              v17 = v25;
            }
            while (*(_DWORD *)(v25 + 68) < v15);
            do
            {
              v26 = *--v24;
              v22 = v26;
            }
            while (*(_DWORD *)(v26 + 68) >= v15);
          }
          while (v23 < v24);
          v27 = v23 - 1;
        }
        if (v27 != v7)
          *v7 = *v27;
        *v27 = v14;
        if (v18 < v19)
        {
LABEL_33:
          a4 = 0;
          v8 = v27 + 1;
          continue;
        }
        v8 = v27 + 1;
        if (!(_DWORD)result)
        {
          if (v28)
            continue;
          goto LABEL_33;
        }
        a2 = v27;
        if (!v28)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v3 = *a2;
  v4 = *result;
  v5 = *(_DWORD *)(*a2 + 68);
  v6 = *(_DWORD *)(*result + 68);
  v7 = *a3;
  v8 = *(_DWORD *)(*a3 + 68);
  if (v5 >= v6)
  {
    if (v8 < v5)
    {
      *a2 = v7;
      *a3 = v3;
      v9 = *result;
      if (*(_DWORD *)(*a2 + 68) < *(_DWORD *)(*result + 68))
      {
        *result = *a2;
        *a2 = v9;
      }
    }
  }
  else
  {
    if (v8 >= v5)
    {
      *result = v3;
      *a2 = v4;
      if (*(_DWORD *)(*a3 + 68) >= v6)
        return result;
      *a2 = *a3;
    }
    else
    {
      *result = v7;
    }
    *a3 = v4;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = *a1;
      if (*(_DWORD *)(v6 + 68) < *(_DWORD *)(*a1 + 68))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return result;
    case 3:
      return 1;
    case 4:
      return 1;
    case 5:
      v18 = a1 + 1;
      v19 = a1 + 2;
      v20 = a1 + 3;
      v21 = *(a2 - 1);
      v22 = a1[3];
      if (*(_DWORD *)(v21 + 68) < *(_DWORD *)(v22 + 68))
      {
        *v20 = v21;
        *(a2 - 1) = v22;
        v23 = *v20;
        v24 = *v19;
        v25 = *(_DWORD *)(*v20 + 68);
        if (v25 < *(_DWORD *)(*v19 + 68))
        {
          *v19 = v23;
          *v20 = v24;
          v26 = *v18;
          if (v25 < *(_DWORD *)(*v18 + 68))
          {
            a1[1] = v23;
            a1[2] = v26;
            v27 = *a1;
            if (v25 < *(_DWORD *)(*a1 + 68))
            {
              *a1 = v23;
              a1[1] = v27;
            }
          }
        }
      }
      return 1;
    default:
      v8 = a1 + 2;
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 24;
      break;
  }
  while (1)
  {
    v12 = *v9;
    v13 = *v8;
    v14 = *(_DWORD *)(*v9 + 68);
    if (v14 < *(_DWORD *)(*v8 + 68))
    {
      v15 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v15) = v13;
        v16 = v15 - 8;
        if (v15 == 8)
          break;
        v13 = *(uint64_t *)((char *)a1 + v15 - 16);
        v15 -= 8;
        if (v14 >= *(_DWORD *)(v13 + 68))
        {
          v17 = (uint64_t *)((char *)a1 + v16);
          goto LABEL_13;
        }
      }
      v17 = a1;
LABEL_13:
      *v17 = v12;
      if (++v10 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v11 += 8;
    if (++v9 == a2)
      return 1;
  }
}

uint64_t *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::`anonymous namespace'::FieldNumberSorter &,google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *a3;
  if (*(_DWORD *)(*a4 + 68) < *(_DWORD *)(*a3 + 68))
  {
    *a3 = *a4;
    *a4 = v9;
    v10 = *a2;
    if (*(_DWORD *)(*a3 + 68) < *(_DWORD *)(*a2 + 68))
    {
      *a2 = *a3;
      *a3 = v10;
      v11 = *a1;
      if (*(_DWORD *)(*a2 + 68) < *(_DWORD *)(*a1 + 68))
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::DescriptorTable const*,BOOL),google::protobuf::internal::DescriptorTable const*&,BOOL &>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD, _QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8), **(unsigned __int8 **)(*(_QWORD *)a1 + 16));
}

void google::protobuf::DynamicMessage::SharedCtor(google::protobuf::DynamicMessage *this, int a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  google::protobuf::FieldDescriptor *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int IsMapFieldInApi;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t PrototypeNoLock;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  google::protobuf::DynamicMessageFactory *v39;
  const google::protobuf::Descriptor *v40;
  uint64_t v41;
  uint64_t v42;
  Arena *v43;
  int v44;
  uint64_t v45;
  uint64_t (*v46)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v47;
  _QWORD v48[2];

  v4 = *((_QWORD *)this + 2);
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_DWORD *)(v5 + 108);
  if (v6 >= 1)
  {
    v7 = 0;
    v8 = 0;
    v9 = *(_QWORD *)(v5 + 48) + 32;
    do
    {
      if (*(_DWORD *)(v9 - 8) != 1 || !*(_BYTE *)(**(_QWORD **)v9 + 65))
      {
        v10 = *(_DWORD *)(v4 + 8) + 4 * v8++;
        *(_DWORD *)((char *)this + v10) = 0;
        v6 = *(_DWORD *)(v5 + 108);
      }
      ++v7;
      v9 += 48;
    }
    while (v7 < v6);
  }
  v11 = *(int *)(v4 + 12);
  if ((_DWORD)v11 != -1)
  {
    v12 = (char *)this + v11;
    v13 = *((_QWORD *)this + 1);
    v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    if ((v13 & 1) != 0)
      v14 = (_QWORD *)*v14;
    *(_QWORD *)v12 = v14;
    *((_DWORD *)v12 + 2) = 0;
    *((_QWORD *)v12 + 2) = 0;
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v17 = *(_QWORD *)(v5 + 40);
      v18 = (google::protobuf::FieldDescriptor *)(v17 + v15);
      v19 = *(int *)(*(_QWORD *)(*((_QWORD *)this + 2) + 40) + 4 * v16);
      v20 = *(_QWORD *)(v17 + v15 + 88);
      if (!v20 || *(_DWORD *)(v20 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v20 + 32) + 65))
      {
        v21 = (unint64_t *)*((_QWORD *)v18 + 6);
        if (v21)
        {
          v45 = v17 + v15;
          v46 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v22 = atomic_load(v21);
          if (v22 != -1)
          {
            v48[0] = &v46;
            v48[1] = &v45;
            v47 = v48;
            std::__call_once(v21, &v47, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        v23 = (char *)this + v19;
        switch(*(_DWORD *)(v17 + v15 + 56))
        {
          case 1:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
              goto LABEL_31;
            *(_QWORD *)v23 = *(_QWORD *)(v17 + v15 + 144);
            break;
          case 2:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
              goto LABEL_31;
            *(_DWORD *)v23 = *(_DWORD *)(v17 + v15 + 144);
            break;
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
              goto LABEL_31;
            v25 = *(uint64_t **)(v17 + v15 + 144);
            goto LABEL_56;
          case 5:
          case 7:
          case 0xD:
          case 0xF:
          case 0x11:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
              goto LABEL_31;
            v24 = *(_DWORD *)(v17 + v15 + 144);
            goto LABEL_45;
          case 8:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
              goto LABEL_31;
            *v23 = *(_BYTE *)(v17 + v15 + 144);
            break;
          case 9:
          case 0xC:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
              v28 = *((_QWORD *)this + 1);
              v29 = (_QWORD *)(v28 & 0xFFFFFFFFFFFFFFFELL);
              if ((v28 & 1) != 0)
                v29 = (_QWORD *)*v29;
              *((_QWORD *)v23 + 2) = 0;
              *(_QWORD *)v23 = v29;
              goto LABEL_52;
            }
            v36 = *(_QWORD *)(v17 + v15 + 144);
            if (*(char *)(v36 + 23) < 0)
              v37 = *(_QWORD *)(v36 + 8);
            else
              v37 = *(unsigned __int8 *)(v36 + 23);
            v38 = v37 == 0;
            v25 = &google::protobuf::internal::fixed_address_empty_string;
            if (!v38)
              v25 = 0;
LABEL_56:
            *(_QWORD *)v23 = v25;
            break;
          case 0xA:
          case 0xB:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
              v31 = *((_QWORD *)this + 1);
              v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFFELL);
              if (IsMapFieldInApi)
              {
                v44 = a2;
                if (a2)
                {
                  if ((v31 & 1) != 0)
                    v32 = (_QWORD *)*v32;
                  v33 = *(_QWORD *)(*((_QWORD *)this + 2) + 16);
                  v34 = google::protobuf::FieldDescriptor::message_type(v18);
                  PrototypeNoLock = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v33 + 16))(v33, v34);
                }
                else
                {
                  if ((v31 & 1) != 0)
                    v32 = (_QWORD *)*v32;
                  v39 = *(google::protobuf::DynamicMessageFactory **)(*((_QWORD *)this + 2) + 16);
                  v40 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type(v18);
                  PrototypeNoLock = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(v39, v40);
                }
                v41 = PrototypeNoLock;
                if (v32)
                {
                  v42 = *((_QWORD *)this + 1);
                  v43 = (Arena *)(v42 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v42 & 1) != 0)
                    v43 = *(Arena **)v43;
                  google::protobuf::internal::MapFieldBase::MapFieldBase((google::protobuf::internal::MapFieldBase *)v23, v43);
                  *(_QWORD *)v23 = &off_1E1BF8A40;
                  *((_OWORD *)v23 + 6) = xmmword_189CBCB90;
                  *((_OWORD *)v23 + 7) = xmmword_189CBCB90;
                  *((_QWORD *)v23 + 16) = &google::protobuf::internal::kGlobalEmptyTable;
                  *((_QWORD *)v23 + 17) = v43;
                }
                else
                {
                  *((_QWORD *)v23 + 2) = 0;
                  *((_QWORD *)v23 + 3) = 850045863;
                  *((_OWORD *)v23 + 2) = 0u;
                  *((_OWORD *)v23 + 3) = 0u;
                  *((_OWORD *)v23 + 4) = 0u;
                  *(_OWORD *)(v23 + 76) = 0u;
                  *(_QWORD *)v23 = &off_1E1BF8A40;
                  *((_QWORD *)v23 + 1) = 0;
                  *((_OWORD *)v23 + 6) = xmmword_189CBCB90;
                  *((_OWORD *)v23 + 7) = xmmword_189CBCB90;
                  *((_QWORD *)v23 + 16) = &google::protobuf::internal::kGlobalEmptyTable;
                  *((_QWORD *)v23 + 17) = 0;
                }
                *((_QWORD *)v23 + 18) = v41;
                a2 = v44;
              }
              else
              {
                if ((v31 & 1) != 0)
                  v32 = (_QWORD *)*v32;
                *((_QWORD *)v23 + 2) = 0;
                *(_QWORD *)v23 = v32;
LABEL_52:
                *((_QWORD *)v23 + 1) = 0;
              }
            }
            else
            {
              *(_QWORD *)v23 = 0;
            }
            break;
          case 0xE:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
LABEL_31:
              v26 = *((_QWORD *)this + 1);
              v27 = (_QWORD *)(v26 & 0xFFFFFFFFFFFFFFFELL);
              if ((v26 & 1) != 0)
                v27 = (_QWORD *)*v27;
              *(_QWORD *)v23 = 0;
              *((_QWORD *)v23 + 1) = v27;
            }
            else
            {
              v24 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum((google::protobuf::FieldDescriptor *)(v17 + v15))
                              + 16);
LABEL_45:
              *(_DWORD *)v23 = v24;
            }
            break;
          default:
            break;
        }
      }
      ++v16;
      v15 += 152;
    }
    while (v16 < *(int *)(v5 + 104));
  }
}

_QWORD *google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(float **this, unint64_t a2)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *v7;
  float *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  void **v14;
  _QWORD *v15;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  int8x8_t prime;
  uint64_t v23;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint8x8_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  float *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  BOOL v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  int v81;
  int v82;
  unint64_t v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t *v98;
  unint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  _QWORD *v103;
  int v104;
  int v105;
  size_t v106;
  int32x2_t *v107;
  int32x2_t v108;
  int32x2_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  unint64_t *v118;
  unint64_t v119;
  int v120;
  int32x2_t v121;
  int32x2_t v122;
  __int32 v123;
  __int32 v124;
  __int32 v125;
  int32x2_t v126;
  int32x2_t *v127;
  uint64_t v128;
  int32x2_t v129;
  google::protobuf::DynamicMessageFactory *v130;
  int32x2_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  google::protobuf::DynamicMessageFactory *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t *v141;
  unint64_t v142;
  const google::protobuf::Descriptor *v143;
  _QWORD *v144;
  uint64_t *v145;
  int v146;
  google::protobuf::DynamicMessageFactory *v147;
  int32x2_t *v148;
  uint64_t (**v149)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const char *v150;
  int v151;
  std::string __p;
  uint64_t v153;
  uint64_t (*v154)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v155)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  if (*((_BYTE *)this + 16))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
    v6 = google::protobuf::DescriptorPool::internal_generated_pool((google::protobuf::DescriptorPool *)this);
    google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
    if (v5 == v6)
    {
      return (_QWORD *)(*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v23 + 16))(v23, a2);
    }
  }
  v8 = this[3];
  v9 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  v10 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v9 >> 47) ^ v9);
  v11 = 0x9DDFEA08EB382D69 * (v10 ^ (v10 >> 47));
  v12 = *((_QWORD *)v8 + 1);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v2 = 0x9DDFEA08EB382D69 * (v10 ^ (v10 >> 47));
      if (v11 >= v12)
        v2 = v11 % v12;
    }
    else
    {
      v2 = (v12 - 1) & v11;
    }
    v14 = *(void ***)(*(_QWORD *)v8 + 8 * v2);
    if (v14)
    {
      v15 = *v14;
      if (*v14)
      {
        do
        {
          v16 = v15[1];
          if (v16 == v11)
          {
            if (v15[2] == a2)
              goto LABEL_77;
          }
          else
          {
            if (v13.u32[0] > 1uLL)
            {
              if (v16 >= v12)
                v16 %= v12;
            }
            else
            {
              v16 &= v12 - 1;
            }
            if (v16 != v2)
              break;
          }
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
    }
  }
  v15 = operator new(0x20uLL);
  *v15 = 0;
  v15[1] = v11;
  v15[2] = a2;
  v15[3] = 0;
  v17 = (float)(unint64_t)(*((_QWORD *)v8 + 3) + 1);
  v18 = v8[8];
  if (!v12 || (float)(v18 * (float)v12) < v17)
  {
    v19 = 1;
    if (v12 >= 3)
      v19 = (v12 & (v12 - 1)) != 0;
    v20 = v19 | (2 * v12);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      prime = (int8x8_t)v21;
    else
      prime = (int8x8_t)v20;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v12 = *((_QWORD *)v8 + 1);
    }
    if (*(_QWORD *)&prime > v12)
      goto LABEL_33;
    if (*(_QWORD *)&prime < v12)
    {
      v31 = vcvtps_u32_f32((float)*((unint64_t *)v8 + 3) / v8[8]);
      if (v12 < 3 || (v32 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        v31 = std::__next_prime(v31);
      }
      else
      {
        v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2)
          v31 = v33;
      }
      if (*(_QWORD *)&prime <= v31)
        prime = (int8x8_t)v31;
      if (*(_QWORD *)&prime >= v12)
      {
        v12 = *((_QWORD *)v8 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_33:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:ne180100]();
          v25 = operator new(8 * *(_QWORD *)&prime);
          v26 = *(_QWORD **)v8;
          *(_QWORD *)v8 = v25;
          if (v26)
            operator delete(v26);
          v27 = 0;
          *((int8x8_t *)v8 + 1) = prime;
          do
            *(_QWORD *)(*(_QWORD *)v8 + 8 * v27++) = 0;
          while (*(_QWORD *)&prime != v27);
          v28 = (_QWORD *)*((_QWORD *)v8 + 2);
          if (v28)
          {
            v29 = v28[1];
            v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(_QWORD *)&prime)
                v29 %= *(_QWORD *)&prime;
            }
            else
            {
              v29 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)v8 + 8 * v29) = v8 + 4;
            v34 = (_QWORD *)*v28;
            if (*v28)
            {
              do
              {
                v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(_QWORD *)&prime)
                    v35 %= *(_QWORD *)&prime;
                }
                else
                {
                  v35 &= *(_QWORD *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(_QWORD *)(*(_QWORD *)v8 + 8 * v35))
                  {
                    *(_QWORD *)(*(_QWORD *)v8 + 8 * v35) = v28;
                    goto LABEL_58;
                  }
                  *v28 = *v34;
                  *v34 = **(_QWORD **)(*(_QWORD *)v8 + 8 * v35);
                  **(_QWORD **)(*(_QWORD *)v8 + 8 * v35) = v34;
                  v34 = v28;
                }
                v35 = v29;
LABEL_58:
                v28 = v34;
                v34 = (_QWORD *)*v34;
                v29 = v35;
              }
              while (v34);
            }
          }
          v12 = (unint64_t)prime;
          goto LABEL_62;
        }
        v144 = *(_QWORD **)v8;
        *(_QWORD *)v8 = 0;
        if (v144)
          operator delete(v144);
        v12 = 0;
        *((_QWORD *)v8 + 1) = 0;
      }
    }
LABEL_62:
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v2 = v11 % v12;
      else
        v2 = v11;
    }
    else
    {
      v2 = (v12 - 1) & v11;
    }
  }
  v36 = *(_QWORD **)v8;
  v37 = *(_QWORD **)(*(_QWORD *)v8 + 8 * v2);
  if (v37)
  {
    *v15 = *v37;
LABEL_75:
    *v37 = v15;
    goto LABEL_76;
  }
  *v15 = *((_QWORD *)v8 + 2);
  *((_QWORD *)v8 + 2) = v15;
  v36[v2] = v8 + 4;
  if (*v15)
  {
    v38 = *(_QWORD *)(*v15 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v38 >= v12)
        v38 %= v12;
    }
    else
    {
      v38 &= v12 - 1;
    }
    v37 = (_QWORD *)(*(_QWORD *)v8 + 8 * v38);
    goto LABEL_75;
  }
LABEL_76:
  ++*((_QWORD *)v8 + 3);
LABEL_77:
  v39 = v15[3];
  if (!v39)
  {
    v41 = operator new();
    v42 = v41;
    *(_OWORD *)(v41 + 40) = 0u;
    v43 = (uint64_t *)(v41 + 40);
    *(_OWORD *)(v41 + 56) = 0u;
    v15[3] = v41;
    *(_QWORD *)(v41 + 32) = a2;
    v44 = this[1];
    if (!v44)
      v44 = *(float **)(*(_QWORD *)(a2 + 16) + 16);
    *(_QWORD *)(v41 + 16) = this;
    *(_QWORD *)(v41 + 24) = v44;
    v45 = *(unsigned int *)(a2 + 108);
    if ((int)v45 < 1)
    {
      v46 = 0;
    }
    else
    {
      v46 = 0;
      v47 = *(_QWORD *)(a2 + 48) + 32;
      do
      {
        v48 = *(_DWORD *)(v47 - 8) != 1 || *(_BYTE *)(**(_QWORD **)v47 + 65) == 0;
        v46 += v48;
        v47 += 48;
        --v45;
      }
      while (v45);
    }
    v49 = operator new[]();
    v50 = *v43;
    v145 = v43;
    *v43 = v49;
    if (v50)
      MEMORY[0x18D764364](v50, 0x1000C8052888210);
    *(_DWORD *)(v42 + 4) = -1;
    v51 = *(_DWORD *)(a2 + 104);
    v52 = 32;
    if (v51 >= 1)
    {
      v53 = 0;
      v54 = 0;
      v55 = 0;
      while (1)
      {
        v56 = *(_QWORD *)(a2 + 40);
        v57 = v56 + v53;
        if (*(_BYTE *)(v56 + v53 + 65))
          break;
        v62 = *(_DWORD *)(v57 + 60);
        if (*(_DWORD *)(*(_QWORD *)(v57 + 40) + 60) == 2 && v62 == 1)
        {
          if (!*(_QWORD *)(v56 + v53 + 88))
            break;
        }
        else if (v62 == 2)
        {
          break;
        }
LABEL_108:
        ++v54;
        v53 += 152;
        if (v54 >= v51)
        {
          if (v55 <= 0)
          {
            v52 = 32;
          }
          else
          {
            v64 = v55 + 31;
            if (v55 + 31 < 0)
              v64 = v55 + 62;
            v65 = 4 * (v64 >> 5) + 39;
            v66 = v65 & 7;
            if (v65 <= 0)
              v66 = -(-v65 & 7);
            v52 = v65 - v66;
          }
          goto LABEL_116;
        }
      }
      if (!*(_BYTE *)(*(_QWORD *)(v57 + 120) + 79))
      {
        if (*(_DWORD *)(v42 + 4) == -1)
        {
          *(_DWORD *)(v42 + 4) = 32;
          v58 = (void *)operator new[]();
          v59 = v58;
          v60 = *(unsigned int *)(a2 + 104);
          if ((int)v60 >= 1)
            memset(v58, 255, 4 * v60);
          v61 = *(_QWORD *)(v42 + 48);
          *(_QWORD *)(v42 + 48) = v59;
          if (v61)
            MEMORY[0x18D764364](v61, 0x1000C8052888210);
        }
        *(_DWORD *)(*(_QWORD *)(v42 + 48) + 4 * v54) = v55++;
        v51 = *(_DWORD *)(a2 + 104);
      }
      goto LABEL_108;
    }
LABEL_116:
    v146 = v46;
    if (v46 >= 1)
    {
      *(_DWORD *)(v42 + 8) = v52;
      v67 = v52 + 4 * v46 + 7;
      v68 = v67 & 7;
      if (v67 <= 0)
        v68 = -(-v67 & 7);
      v52 = v67 - v68;
    }
    v147 = (google::protobuf::DynamicMessageFactory *)this;
    v148 = (int32x2_t *)v42;
    v69 = *(_DWORD *)(a2 + 124);
    if (v52 + 31 <= 0)
      v70 = -(-(v52 + 31) & 7);
    else
      v70 = (v52 + 31) & 7;
    v71 = v69 < 1;
    if (v69 >= 1)
      v72 = v52;
    else
      v72 = -1;
    if (v71)
      v73 = v52;
    else
      v73 = v52 + 31 - v70;
    *(_DWORD *)(v42 + 12) = v72;
    if (v51 >= 1)
    {
      v74 = 0;
      v75 = 0;
      while (1)
      {
        v76 = *(_QWORD *)(a2 + 40);
        v77 = v76 + v74;
        v78 = *(_QWORD *)(v76 + v74 + 88);
        if (v78 && (*(_DWORD *)(v78 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v78 + 32) + 65)))
          goto LABEL_150;
        v79 = *(unint64_t **)(v77 + 48);
        if (*(_DWORD *)(v77 + 60) == 3)
          break;
        if (v79)
        {
          v153 = v76 + v74;
          v154 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v83 = atomic_load(v79);
          if (v83 != -1)
          {
            v149 = &v154;
            v150 = (const char *)&v153;
            v155 = &v149;
            std::__call_once(v79, &v155, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        v84 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v76 + v74 + 56)];
        if (v84 > 0xA)
        {
LABEL_159:
          LODWORD(v149) = 2;
          v150 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/dynamic_message.cc";
          v151 = 196;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Can't get here.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v149);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          v82 = 0;
          v85 = 0;
          goto LABEL_149;
        }
        if (((1 << v84) & 0x634) != 0)
        {
          v82 = 8;
LABEL_148:
          v85 = 8;
          goto LABEL_149;
        }
        if (((1 << v84) & 0x14A) != 0)
        {
          v82 = 4;
          v85 = 4;
        }
        else
        {
          if (v84 != 7)
            goto LABEL_159;
          v82 = 1;
          v85 = 1;
        }
LABEL_149:
        v86 = (v73 + v85 - 1) / v85 * v85;
        *(_DWORD *)(v49 + 4 * v75) = v86;
        v73 = v86 + v82;
        v51 = *(_DWORD *)(a2 + 104);
LABEL_150:
        ++v75;
        v74 += 152;
        if (v75 >= v51)
          goto LABEL_163;
      }
      if (v79)
      {
        v153 = v76 + v74;
        v154 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v80 = atomic_load(v79);
        if (v80 != -1)
        {
          v149 = &v154;
          v150 = (const char *)&v153;
          v155 = &v149;
          std::__call_once(v79, &v155, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      v81 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v76 + v74 + 56)];
      if ((v81 - 1) >= 8)
      {
        if (v81 == 9)
        {
          v82 = 24;
        }
        else
        {
          if (v81 != 10)
            goto LABEL_159;
            v82 = 152;
          else
            v82 = 24;
        }
      }
      else
      {
        v82 = 16;
      }
      goto LABEL_148;
    }
LABEL_163:
    v87 = *(_DWORD *)(a2 + 108);
    if (v87 <= 0)
    {
      v148[9].i32[0] = -1;
      v148->i32[0] = v73;
LABEL_196:
      if (v73 + 7 <= 0)
        v105 = -(-(v73 + 7) & 7);
      else
        v105 = (v73 + 7) & 7;
      v106 = v73 + 7 - v105;
      v40 = operator new(v106);
      bzero(v40, v106);
      *v40 = off_1E1BF7860;
      v40[1] = 0;
      v107 = v148;
      v40[2] = v148;
      *((_DWORD *)v40 + 6) = 0;
      v148[8] = (int32x2_t)v40;
      google::protobuf::DynamicMessage::SharedCtor((google::protobuf::DynamicMessage *)v40, 0);
      v108 = v148[5];
      if (v146 > 0)
      {
        v109 = v148[4];
        v110 = *(_DWORD *)(*(_QWORD *)&v109 + 108);
        if (v110 >= 1)
        {
          v111 = 0;
          v112 = *(_QWORD *)(*(_QWORD *)&v109 + 48);
          do
          {
            if ((*(_DWORD *)(v112 + 48 * v111 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v112 + 48 * v111 + 32) + 65))
              && *(int *)(v112 + 48 * v111 + 24) >= 1)
            {
              v113 = 0;
              do
              {
                v114 = *(_QWORD *)(*(_QWORD *)(v112 + 48 * v111 + 32) + 8 * v113);
                if (*(_BYTE *)(v114 + 67))
                {
                  v115 = *(_QWORD *)(v114 + 96);
                  if (v115)
                    v116 = (_QWORD *)(v115 + 80);
                  else
                    v116 = (_QWORD *)(*(_QWORD *)(v114 + 40) + 128);
                }
                else
                {
                  v116 = (_QWORD *)(*(_QWORD *)(v114 + 80) + 40);
                }
                v117 = *(unsigned int *)(*(_QWORD *)&v108
                                       + 4 * (int)(678152731 * ((unint64_t)(v114 - *v116) >> 3)));
                v118 = *(unint64_t **)(v114 + 48);
                if (v118)
                {
                  v153 = v114;
                  v154 = google::protobuf::FieldDescriptor::TypeOnceInit;
                  v119 = atomic_load(v118);
                  if (v119 != -1)
                  {
                    v149 = &v154;
                    v150 = (const char *)&v153;
                    v155 = &v149;
                    std::__call_once(v118, &v155, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
                  }
                }
                switch(*(_DWORD *)(v114 + 56))
                {
                  case 1:
                    *(_QWORD *)((char *)v40 + v117) = *(_QWORD *)(v114 + 144);
                    break;
                  case 2:
                    *(_DWORD *)((char *)v40 + v117) = *(_DWORD *)(v114 + 144);
                    break;
                  case 3:
                  case 4:
                  case 6:
                  case 0x10:
                  case 0x12:
                    goto LABEL_223;
                  case 5:
                  case 7:
                  case 0xD:
                  case 0xF:
                  case 0x11:
                    v120 = *(_DWORD *)(v114 + 144);
                    goto LABEL_219;
                  case 8:
                    *((_BYTE *)v40 + v117) = *(_BYTE *)(v114 + 144);
                    break;
                  case 9:
                  case 0xC:
                    *(_QWORD *)((char *)v40 + v117) = 0;
LABEL_223:
                    *(_QWORD *)((char *)v40 + v117) = *(_QWORD *)(v114 + 144);
                    break;
                  case 0xA:
                  case 0xB:
                    *(_QWORD *)((char *)v40 + v117) = 0;
                    break;
                  case 0xE:
                    v120 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum((google::protobuf::FieldDescriptor *)v114)
                                     + 16);
LABEL_219:
                    *(_DWORD *)((char *)v40 + v117) = v120;
                    break;
                  default:
                    break;
                }
                ++v113;
                v112 = *(_QWORD *)(*(_QWORD *)&v109 + 48);
              }
              while (v113 < *(int *)(v112 + 48 * v111 + 24));
              v110 = *(_DWORD *)(*(_QWORD *)&v109 + 108);
            }
            ++v111;
          }
          while (v111 < v110);
          v108 = (int32x2_t)*v145;
          v107 = v148;
        }
      }
      v121 = v107[8];
      v122 = v107[6];
      v124 = v107->i32[0];
      v123 = v107->i32[1];
      v125 = v107[9].i32[0];
      v126 = v107[1];
      v127 = (int32x2_t *)operator new();
      v128 = (uint64_t)v107[3];
      v129 = v107[4];
      *v127 = v129;
      v127[1] = v121;
      v127[2] = v108;
      v127[3] = v122;
      v127[4].i32[0] = v123;
      v127[4].i32[1] = 8;
      v127[5] = vrev64_s32(v126);
      v127[6].i32[0] = v124;
      v127[6].i32[1] = v125;
      if (v128)
      {
        v130 = v147;
      }
      else
      {
        v128 = google::protobuf::DescriptorPool::internal_generated_pool(0);
        v130 = v147;
        v129 = *v127;
      }
      v127[7] = (int32x2_t)v128;
      v127[8] = (int32x2_t)v130;
      v127[9].i32[0] = *(_DWORD *)(*(_QWORD *)&v129 + 104) - 1;
      v131 = v107[7];
      v107[7] = (int32x2_t)v127;
      if (v131)
        MEMORY[0x18D76437C](*(_QWORD *)&v131, 0x1070C4026DFEB36);
      v132 = (_QWORD *)v40[2];
      v133 = (_QWORD *)v132[8];
      if (v133 != v40 && v133 != 0)
      {
        LODWORD(v149) = 3;
        v150 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/dynamic_message.cc";
        v151 = 603;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "CHECK failed: is_prototype(): ");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v149);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v132 = (_QWORD *)v40[2];
      }
      v135 = v132[4];
      if (*(int *)(v135 + 104) >= 1)
      {
        v136 = 0;
        v137 = 0;
        v138 = (google::protobuf::DynamicMessageFactory *)v132[2];
        do
        {
          v139 = *(_QWORD *)(v135 + 40);
          v140 = *(int *)(*(_QWORD *)(v40[2] + 40) + 4 * v137);
          v141 = *(unint64_t **)(v139 + v136 + 48);
          if (v141)
          {
            v153 = v139 + v136;
            v154 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v142 = atomic_load(v141);
            if (v142 != -1)
            {
              v149 = &v154;
              v150 = (const char *)&v153;
              v155 = &v149;
              std::__call_once(v141, &v155, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          if ((*(_DWORD *)(v139 + v136 + 56) & 0xFFFFFFFE) == 0xA && *(_DWORD *)(v139 + v136 + 60) != 3)
          {
            v143 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v139 + v136));
            *(_QWORD *)((char *)v40 + v140) = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(v138, v143);
          }
          ++v137;
          v136 += 152;
        }
        while (v137 < *(int *)(v135 + 104));
      }
      return v40;
    }
    v88 = 0;
    v89 = *(_QWORD *)(a2 + 48);
    v90 = v89 + 32;
    do
    {
      if (*(_DWORD *)(v90 - 8) != 1 || !*(_BYTE *)(**(_QWORD **)v90 + 65))
      {
        if (v73 + 7 <= 0)
          v91 = -(-(v73 + 7) & 7);
        else
          v91 = (v73 + 7) & 7;
        v92 = v73 + 7 - v91;
        *(_DWORD *)(v49 + 4 * (v51 + (int)v88)) = v92;
        v73 = v92 + 8;
      }
      ++v88;
      v90 += 48;
    }
    while (v88 < v87);
    v93 = 0;
    v148[9].i32[0] = -1;
    v148->i32[0] = v73;
    while (1)
    {
      v94 = *(_DWORD *)(v89 + 48 * v93 + 24);
      if (v94 == 1)
      {
        if (!*(_BYTE *)(**(_QWORD **)(v89 + 48 * v93 + 32) + 65))
          goto LABEL_177;
      }
      else if (v94 >= 1)
      {
LABEL_177:
        v95 = 0;
        do
        {
          v96 = *(_QWORD *)(v89 + 48 * v93 + 32);
          v97 = *(_QWORD *)(v96 + 8 * v95);
          v98 = *(unint64_t **)(v97 + 48);
          if (v98)
          {
            v153 = *(_QWORD *)(v96 + 8 * v95);
            v154 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v99 = atomic_load(v98);
            if (v99 != -1)
            {
              v149 = &v154;
              v150 = (const char *)&v153;
              v155 = &v149;
              std::__call_once(v98, &v155, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          v100 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v97 + 56)] - 1;
          if (v100 >= 0xA)
          {
            LODWORD(v149) = 2;
            v150 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/dynamic_message.cc";
            v151 = 234;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Can't get here.");
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v149);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            v101 = 0;
          }
          else
          {
            v101 = *((_DWORD *)&dword_189CBCF2C + v100);
          }
          if (*(_BYTE *)(v97 + 67))
          {
            v102 = *(_QWORD *)(v97 + 96);
            if (v102)
              v103 = (_QWORD *)(v102 + 80);
            else
              v103 = (_QWORD *)(*(_QWORD *)(v97 + 40) + 128);
          }
          else
          {
            v103 = (_QWORD *)(*(_QWORD *)(v97 + 80) + 40);
          }
          v104 = (v73 + v101 - 1) / v101 * v101;
          *(_DWORD *)(v49 + 4 * (int)(678152731 * ((unint64_t)(v97 - *v103) >> 3))) = v104;
          v73 = v104 + v101;
          ++v95;
          v89 = *(_QWORD *)(a2 + 48);
        }
        while (v95 < *(int *)(v89 + 48 * v93 + 24));
        v87 = *(_DWORD *)(a2 + 108);
      }
      if (++v93 >= v87)
        goto LABEL_196;
    }
  }
  return *(_QWORD **)(v39 + 64);
}

void sub_1888625F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;

  MEMORY[0x18D76437C](v22, 0x1070C4026DFEB36);
  _Unwind_Resume(a1);
}

void google::protobuf::DynamicMessage::~DynamicMessage(google::protobuf::DynamicMessage *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  google::protobuf::DynamicMessage *v34;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (***v40)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  void (**v41)(google::protobuf::FieldDescriptor *, const google::protobuf::FieldDescriptor *, const char *);
  uint64_t *v42;

  *(_QWORD *)this = off_1E1BF7860;
  v2 = *(_QWORD *)(*((_QWORD *)this + 2) + 32);
  google::protobuf::internal::InternalMetadata::Delete<google::protobuf::UnknownFieldSet>((uint64_t *)this + 1);
  v3 = *(int *)(*((_QWORD *)this + 2) + 12);
  if ((_DWORD)v3 != -1)
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::DynamicMessage *)((char *)this + v3));
  LODWORD(v4) = *(_DWORD *)(v2 + 104);
  if ((int)v4 >= 1)
  {
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(v2 + 40);
      v8 = v7 + v5;
      v9 = *(_QWORD *)(v7 + v5 + 88);
      if (!v9 || *(_DWORD *)(v9 + 24) == 1 && *(_BYTE *)(**(_QWORD **)(v9 + 32) + 65))
        break;
      v16 = *((_QWORD *)this + 2);
      v17 = -1431655765 * ((unint64_t)(v9 - *(_QWORD *)(*(_QWORD *)(v9 + 16) + 48)) >> 4);
      v18 = v7 + v5;
      if (*(_DWORD *)((char *)this + 4 * v17 + *(_DWORD *)(v16 + 8)) == *(_DWORD *)(v7 + v5 + 68))
      {
        v19 = *(int *)(*(_QWORD *)(v16 + 40) + 4 * ((int)v4 + v17));
        v20 = *(unint64_t **)(v18 + 48);
        if (v20)
        {
          v38 = v7 + v5;
          v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v21 = atomic_load(v20);
          if (v21 != -1)
          {
            v41 = &v39;
            v42 = &v38;
            v40 = &v41;
            std::__call_once(v20, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        v10 = (uint64_t *)((char *)this + v19);
        v22 = v7 + v5;
        v23 = *(_DWORD *)(v22 + 56);
        if (v23 != 12 && v23 != 9)
        {
          v36 = *(unint64_t **)(v18 + 48);
          if (v36)
          {
            v38 = v8;
            v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v37 = atomic_load(v36);
            if (v37 != -1)
            {
              v41 = &v39;
              v42 = &v38;
              v40 = &v41;
              std::__call_once(v36, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
            v23 = *(_DWORD *)(v22 + 56);
          }
          if ((v23 & 0xFFFFFFFE) != 0xA)
            goto LABEL_36;
LABEL_53:
          if (*v10)
            (*(void (**)(uint64_t))(*(_QWORD *)*v10 + 8))(*v10);
          goto LABEL_36;
        }
        v25 = *((_QWORD *)this + 2);
        v26 = *(_QWORD *)(v25 + 64);
        v27 = *(unsigned int *)(*(_QWORD *)(v25 + 40) + 4 * v6);
LABEL_35:
        google::protobuf::internal::ArenaStringPtr::Destroy(v10, *(_QWORD *)(v26 + v27) & 0xFFFFFFFFFFFFFFFELL, 0);
      }
LABEL_36:
      ++v6;
      v4 = *(int *)(v2 + 104);
      v5 += 152;
      if (v6 >= v4)
        return;
    }
    v10 = (uint64_t *)((char *)this + *(int *)(*(_QWORD *)(*((_QWORD *)this + 2) + 40) + 4 * v6));
    v11 = *(unint64_t **)(v8 + 48);
    if (*(_DWORD *)(v8 + 60) == 3)
    {
      if (v11)
      {
        v38 = v7 + v5;
        v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v12 = atomic_load(v11);
        if (v12 != -1)
        {
          v41 = &v39;
          v42 = &v38;
          v40 = &v41;
          std::__call_once(v11, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(*(_DWORD *)(v7 + v5 + 56))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
          if (*((int *)v10 + 1) >= 1)
          {
            v13 = v10[1];
            v15 = *(_QWORD *)(v13 - 8);
            v14 = (void *)(v13 - 8);
            if (!v15)
              operator delete(v14);
          }
          break;
        case 9:
        case 0xC:
          google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v10);
          break;
        case 0xA:
        case 0xB:
            (*(void (**)(uint64_t *))*v10)(v10);
          else
            google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(v10);
          break;
        default:
          goto LABEL_36;
      }
      goto LABEL_36;
    }
    if (v11)
    {
      v38 = v7 + v5;
      v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v28 = atomic_load(v11);
      if (v28 != -1)
      {
        v41 = &v39;
        v42 = &v38;
        v40 = &v41;
        std::__call_once(v11, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v29 = *(_DWORD *)(v7 + v5 + 56);
    if (v29 != 12 && v29 != 9)
    {
      v32 = *(unint64_t **)(v8 + 48);
      if (v32)
      {
        v38 = v7 + v5;
        v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v33 = atomic_load(v32);
        if (v33 != -1)
        {
          v41 = &v39;
          v42 = &v38;
          v40 = &v41;
          std::__call_once(v32, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v29 = *(_DWORD *)(v7 + v5 + 56);
      }
      if ((v29 & 0xFFFFFFFE) != 0xA)
        goto LABEL_36;
      v34 = *(google::protobuf::DynamicMessage **)(*((_QWORD *)this + 2) + 64);
      if (v34 == this || v34 == 0)
        goto LABEL_36;
      goto LABEL_53;
    }
    v31 = *((_QWORD *)this + 2);
    v26 = *(_QWORD *)(v31 + 64);
    v27 = *(int *)(*(_QWORD *)(v31 + 40) + 4 * v6);
    goto LABEL_35;
  }
}

{
  void *v1;

  google::protobuf::DynamicMessage::~DynamicMessage(this);
  operator delete(v1);
}

uint64_t google::protobuf::DynamicMessage::New(google::protobuf::DynamicMessage *this)
{
  return (*(uint64_t (**)(google::protobuf::DynamicMessage *, _QWORD))(*(_QWORD *)this + 32))(this, 0);
}

_QWORD *google::protobuf::DynamicMessage::New(google::protobuf::DynamicMessage *this, Arena *a2)
{
  size_t v4;
  unint64_t v5;
  _QWORD *Aligned;
  int *v7;

  v4 = **((int **)this + 2);
  if (a2)
  {
    v5 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
      (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(*((_QWORD *)a2 + 4) + 32) + 40))(*(_QWORD *)(*((_QWORD *)a2 + 4) + 32), MEMORY[0x1E0DE4EC8], v5);
    Aligned = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)a2, v5);
    bzero(Aligned, **((int **)this + 2));
    v7 = (int *)*((_QWORD *)this + 2);
  }
  else
  {
    Aligned = operator new(v4);
    v7 = (int *)*((_QWORD *)this + 2);
    bzero(Aligned, *v7);
  }
  *Aligned = off_1E1BF7860;
  Aligned[1] = a2;
  Aligned[2] = v7;
  *((_DWORD *)Aligned + 6) = 0;
  google::protobuf::DynamicMessage::SharedCtor((google::protobuf::DynamicMessage *)Aligned, 1);
  return Aligned;
}

uint64_t google::protobuf::DynamicMessage::GetCachedSize(google::protobuf::DynamicMessage *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t google::protobuf::DynamicMessage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t google::protobuf::DynamicMessage::GetMetadata(google::protobuf::DynamicMessage *this)
{
  return *(_QWORD *)(*((_QWORD *)this + 2) + 32);
}

void google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(google::protobuf::DynamicMessageFactory *this)
{
  uint64_t *v2;
  _QWORD *i;
  google::protobuf::DynamicMessage::TypeInfo *v4;

  *(_QWORD *)this = &off_1E1BF81B8;
  v2 = (uint64_t *)((char *)this + 24);
  for (i = *(_QWORD **)(*((_QWORD *)this + 3) + 16); i; i = (_QWORD *)*i)
  {
    google::protobuf::DynamicMessageFactory::DeleteDefaultOneofInstance(*(_QWORD *)(i[3] + 32));
    v4 = (google::protobuf::DynamicMessage::TypeInfo *)i[3];
    if (v4)
    {
      google::protobuf::DynamicMessage::TypeInfo::~TypeInfo(v4);
      MEMORY[0x18D76437C]();
    }
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 32));
  std::unique_ptr<google::protobuf::DynamicMessageFactory::PrototypeMap>::reset[abi:ne180100](v2, 0);
}

{
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(this);
  JUMPOUT(0x18D76437CLL);
}

void google::protobuf::DynamicMessageFactory::DeleteDefaultOneofInstance(uint64_t a1)
{
  int v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v10;
  _QWORD v11[2];

  v1 = *(_DWORD *)(a1 + 108);
  if (v1 >= 1)
  {
    v3 = 0;
    v4 = *(_QWORD *)(a1 + 48);
    do
    {
      if ((*(_DWORD *)(v4 + 48 * v3 + 24) != 1 || !*(_BYTE *)(**(_QWORD **)(v4 + 48 * v3 + 32) + 65))
        && *(int *)(v4 + 48 * v3 + 24) >= 1)
      {
        v5 = 0;
        do
        {
          v6 = *(unint64_t **)(*(_QWORD *)(*(_QWORD *)(v4 + 48 * v3 + 32) + 8 * v5) + 48);
          if (v6)
          {
            v8 = *(_QWORD *)(*(_QWORD *)(v4 + 48 * v3 + 32) + 8 * v5);
            v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v7 = atomic_load(v6);
            if (v7 != -1)
            {
              v11[0] = &v9;
              v11[1] = &v8;
              v10 = v11;
              std::__call_once(v6, &v10, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
            v4 = *(_QWORD *)(a1 + 48);
          }
          ++v5;
        }
        while (v5 < *(int *)(v4 + 48 * v3 + 24));
        v1 = *(_DWORD *)(a1 + 108);
      }
      ++v3;
    }
    while (v3 < v1);
  }
}

_QWORD *google::protobuf::DynamicMessageFactory::GetPrototype(float **this, const google::protobuf::Descriptor *a2)
{
  std::mutex *v4;
  _QWORD *PrototypeNoLock;

  v4 = (std::mutex *)(this + 4);
  std::mutex::lock((std::mutex *)(this + 4));
  PrototypeNoLock = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(this, (unint64_t)a2);
  std::mutex::unlock(v4);
  return PrototypeNoLock;
}

void sub_188862D44(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DynamicMessage::TypeInfo::~TypeInfo(google::protobuf::DynamicMessage::TypeInfo *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *((_QWORD *)this + 8);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *((_QWORD *)this + 7);
  *((_QWORD *)this + 7) = 0;
  if (v3)
    MEMORY[0x18D76437C](v3, 0x1070C4026DFEB36);
  v4 = *((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = 0;
  if (v4)
    MEMORY[0x18D764364](v4, 0x1000C8052888210);
  v5 = *((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v5)
    MEMORY[0x18D764364](v5, 0x1000C8052888210);
}

uint64_t std::unique_ptr<google::protobuf::DynamicMessageFactory::PrototypeMap>::reset[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  uint64_t result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(result);
    JUMPOUT(0x18D76437CLL);
  }
  return result;
}

BOOL google::protobuf::internal::GetAnyFieldDescriptors(google::protobuf::internal *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor **a3, const google::protobuf::FieldDescriptor **a4)
{
  google::protobuf::Descriptor *v6;
  google::protobuf::Descriptor *v7;
  uint64_t *v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v24)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v25)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t *v26;

  v6 = (google::protobuf::Descriptor *)(*(uint64_t (**)(google::protobuf::internal *, const google::protobuf::Message *, const google::protobuf::FieldDescriptor **, const google::protobuf::FieldDescriptor **))(*(_QWORD *)this + 152))(this, a2, a3, a4);
  v7 = v6;
  v8 = (uint64_t *)*((_QWORD *)v6 + 1);
  v9 = *((char *)v8 + 23);
  if (v9 < 0)
  {
    if (v8[1] != 19)
      return 0;
    v8 = (uint64_t *)*v8;
  }
  else if (v9 != 19)
  {
    return 0;
  }
  v10 = (uint64_t *)*v8;
  v11 = v8[1];
  v12 = *(uint64_t *)((char *)v8 + 11);
  if (v10 != *(uint64_t **)"google.protobuf.Any" || v11 != *(_QWORD *)"rotobuf.Any" || v12 != *(_QWORD *)"obuf.Any")
    return 0;
  *(_QWORD *)a2 = google::protobuf::Descriptor::FindFieldByNumber(v6, 1);
  *a3 = (const google::protobuf::FieldDescriptor *)google::protobuf::Descriptor::FindFieldByNumber(v7, 2);
  v16 = *(_QWORD *)a2;
  if (!v16)
    return 0;
  v17 = *(unint64_t **)(v16 + 48);
  if (v17)
  {
    v22 = v16;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v18 = atomic_load(v17);
    if (v18 != -1)
    {
      v25 = &v23;
      v26 = &v22;
      v24 = &v25;
      std::__call_once(v17, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(v16 + 56) != 9)
    return 0;
  v19 = (uint64_t)*a3;
  if (!v19)
    return 0;
  v20 = *(unint64_t **)(v19 + 48);
  if (v20)
  {
    v22 = v19;
    v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v21 = atomic_load(v20);
    if (v21 != -1)
    {
      v25 = &v23;
      v26 = &v22;
      v24 = &v25;
      std::__call_once(v20, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *(_DWORD *)(v19 + 56) == 12;
}

uint64_t google::protobuf::internal::DestroyMessage(google::protobuf::internal *this, const void *a2)
{
  return (**(uint64_t (***)(google::protobuf::internal *))this)(this);
}

void google::protobuf::internal::DestroyString(void **this, const void *a2)
{
  if (*((char *)this + 23) < 0)
    operator delete(*this);
}

void google::protobuf::internal::InitProtobufDefaultsSlow(google::protobuf::internal *this)
{
  unsigned __int8 v1;
  const void *v2;

  if ((v1 & 1) == 0)
  {
    {
      google::protobuf::internal::fixed_address_empty_string = 0;
      qword_1EDF511D0 = 0;
      qword_1EDF511D8 = 0;
      google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyString, (void (*)(const void *))&google::protobuf::internal::fixed_address_empty_string, v2);
      atomic_store(1u, google::protobuf::internal::init_protobuf_defaults_state);
    }
  }
}

void sub_188863028(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

Arena *google::protobuf::internal::GetOwnedMessageInternal(google::protobuf::internal *this, Arena *a2, google::protobuf::MessageLite *a3, Arena *a4)
{
  Arena *v4;
  uint64_t v5;

  v4 = a2;
  if (!this || a3)
  {
    v5 = (*(uint64_t (**)(Arena *, google::protobuf::internal *, google::protobuf::MessageLite *, Arena *))(*(_QWORD *)a2 + 32))(a2, this, a3, a4);
    (*(void (**)(uint64_t, Arena *))(*(_QWORD *)v5 + 64))(v5, v4);
    return (Arena *)v5;
  }
  else
  {
    google::protobuf::Arena::Own<google::protobuf::MessageLite>((char *)this, a2);
  }
  return v4;
}

char *google::protobuf::Arena::Own<google::protobuf::MessageLite>(char *result, void *a2)
{
  if (a2)
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))google::protobuf::internal::arena_delete_object<google::protobuf::MessageLite>);
  return result;
}

void google::protobuf::internal::InitSCCImpl(_DWORD *a1)
{
  unsigned __int8 v2;
  google::protobuf::internal *v3;
  uint64_t v4;
  unsigned __int8 v5;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  if ((v2 & 1) == 0
  {
    __cxa_atexit((void (*)(void *))google::protobuf::internal::WrappedMutex::~WrappedMutex, &google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu, &dword_1885A9000);
  }
  v3 = (google::protobuf::internal *)pthread_self();
  v4 = (uint64_t)v3;
  if (google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner)
  {
    if (v3
      && v3 == (google::protobuf::internal *)google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner)
    {
LABEL_5:
      if (*a1 != 1)
      {
        v6 = 3;
        v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/generated_message_util.cc";
        v8 = 785;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "CHECK failed: (scc->visit_status.load(std::memory_order_relaxed)) == (SCCInfoBase::kRunning): ");
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      return;
    }
  }
  else if (!v3)
  {
    goto LABEL_5;
  }
  v5 = atomic_load(google::protobuf::internal::init_protobuf_defaults_state);
  if ((v5 & 1) == 0)
    google::protobuf::internal::InitProtobufDefaultsSlow(v3);
  std::mutex::lock(&google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu);
  google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner = v4;
  google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::runner = 0;
  std::mutex::unlock(&google::protobuf::internal::InitSCCImpl(google::protobuf::internal::SCCInfoBase *)::mu);
}

void sub_188863200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *google::protobuf::internal::`anonymous namespace'::InitSCC_DFS(_DWORD *result)
{
  uint64_t (**v1)(void);
  _DWORD *v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _DWORD *v8;

  if (*result == -1)
  {
    v1 = (uint64_t (**)(void))result;
    *result = 1;
    v2 = result + 6;
    v3 = result[1];
    if (v3 >= 1)
    {
      for (i = 0; i < v3; ++i)
      {
        if (*(_QWORD *)&v2[2 * i])
        {
          v3 = *((_DWORD *)v1 + 1);
        }
      }
    }
    v5 = v3;
    v6 = *((_DWORD *)v1 + 2);
    if (v6 >= 1)
    {
      v7 = 0;
      v8 = &v2[2 * v5];
      do
      {
        if (**(_QWORD **)&v8[2 * v7])
        {
          v6 = *((_DWORD *)v1 + 2);
        }
        ++v7;
      }
      while (v7 < v6);
    }
    result = (_DWORD *)v1[2]();
    atomic_store(0, (unsigned int *)v1);
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<google::protobuf::MessageLite>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t google::protobuf::internal::GeneratedExtensionFinder::Find()
{
  return 0;
}

void google::protobuf::internal::ExtensionSet::~ExtensionSet(google::protobuf::internal::ExtensionSet *this)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD **v4;
  uint64_t v5;
  uint64_t v6;

  if (!*(_QWORD *)this)
  {
    v2 = *((_QWORD *)this + 2);
    if (*((unsigned __int16 *)this + 4) >= 0x101u)
    {
      google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::~()::$_0>(*(_QWORD ***)v2, (_QWORD *)(v2 + 8));
    }
    else if (*((_WORD *)this + 5))
    {
      v3 = 32 * *((unsigned __int16 *)this + 5);
      v4 = (_QWORD **)(v2 + 8);
      do
      {
        google::protobuf::internal::ExtensionSet::Extension::Free(v4);
        v4 += 4;
        v3 -= 32;
      }
      while (v3);
    }
    v5 = *((_QWORD *)this + 2);
    if (*((unsigned __int16 *)this + 4) >= 0x101u)
    {
      if (v5)
      {
        v6 = *((_QWORD *)this + 2);
        std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy(v5, *(_QWORD **)(v5 + 8));
        MEMORY[0x18D76437C](v6, 0x1020C4062D53EE8);
      }
    }
    else if (v5)
    {
      MEMORY[0x18D764364](v5, 0x1062C802AB6010CLL);
    }
  }
}

_DWORD *google::protobuf::internal::ExtensionSet::FindOrNull(google::protobuf::internal::ExtensionSet *this, int a2)
{
  _DWORD *v2;
  unint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  int *v6;
  _DWORD *v7;
  int v8;
  _DWORD *v9;
  int v10;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  int v16;
  BOOL v17;
  _QWORD *v18;
  int v19;
  _DWORD *v20;

  v2 = (_DWORD *)*((_QWORD *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    v3 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      v4 = &v2[8 * v3];
      do
      {
        v5 = v3 >> 1;
        v6 = &v2[8 * (v3 >> 1)];
        v8 = *v6;
        v7 = v6 + 8;
        v3 += ~(v3 >> 1);
        if (v8 < a2)
          v2 = v7;
        else
          v3 = v5;
      }
      while (v3);
      if (v2 != v4)
      {
        v10 = *v2;
        v9 = v2 + 2;
        if (v10 == a2)
          return v9;
        else
          return 0;
      }
    }
    return 0;
  }
  v14 = (_DWORD *)*((_QWORD *)v2 + 1);
  v12 = v2 + 2;
  v13 = v14;
  if (!v14)
    return 0;
  v15 = v12;
  do
  {
    v16 = v13[8];
    v17 = v16 < a2;
    if (v16 >= a2)
      v18 = v13;
    else
      v18 = v13 + 2;
    if (!v17)
      v15 = v13;
    v13 = (_DWORD *)*v18;
  }
  while (*v18);
  if (v15 == v12)
    return 0;
  v19 = v15[8];
  v20 = v15 + 10;
  if (v19 <= a2)
    return v20;
  else
    return 0;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::GetSize(google::protobuf::internal::ExtensionSet::Extension *this)
{
  uint64_t result;
  int v2;
  const char *v3;
  int v4;
  std::string __p;

  switch(*((_BYTE *)this + 8))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      result = **(unsigned int **)this;
      break;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
      result = *(unsigned int *)(*(_QWORD *)this + 8);
      break;
    default:
      v2 = 3;
      v3 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
      v4 = 1719;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v2);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      result = 0;
      break;
  }
  return result;
}

void sub_188863520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t **google::protobuf::internal::ExtensionSet::Extension::Clear(uint64_t **this)
{
  uint64_t **v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v1 = this;
  if (*((_BYTE *)this + 9))
  {
    switch(*((_BYTE *)this + 8))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        *(_DWORD *)*this = 0;
        break;
      case 9:
      case 0xC:
        this = (uint64_t **)google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)*this);
        break;
      case 0xA:
      case 0xB:
        v6 = (uint64_t)*this;
        v7 = *((unsigned int *)*this + 2);
        if ((int)v7 >= 1)
        {
          v8 = (uint64_t *)(*(_QWORD *)(v6 + 16) + 8);
          do
          {
            v9 = *v8++;
            this = (uint64_t **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 40))(v9);
            --v7;
          }
          while (v7);
          *(_DWORD *)(v6 + 8) = 0;
        }
        break;
      default:
        return this;
    }
  }
  else if ((*((_BYTE *)this + 10) & 1) == 0)
  {
    v2 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
    if (v2 == 10)
    {
      v4 = **this;
      if ((*((_BYTE *)this + 10) & 0x10) != 0)
        v5 = *(uint64_t (**)(void))(v4 + 112);
      else
        v5 = *(uint64_t (**)(void))(v4 + 40);
      this = (uint64_t **)v5();
    }
    else if (v2 == 9)
    {
      v3 = (uint64_t)*this;
      if (*((char *)*this + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
      }
    }
    *((_BYTE *)v1 + 10) = *((_BYTE *)v1 + 10) & 0xF0 | 1;
  }
  return this;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 348;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 4 * a3);
}

void sub_18886371C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<int>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(_DWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 349;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 8 * a3);
}

void sub_1888638FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(_QWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
  }
  else
  {
    *(_QWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 350;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 4 * a3);
}

void sub_188863ADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddUInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<int>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(_DWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
  }
  else
  {
    *(_DWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 351;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 8 * a3);
}

void sub_188863CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddUInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(_QWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
  }
  else
  {
    *(_QWORD *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

float google::protobuf::internal::ExtensionSet::GetRepeatedFloat(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 352;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(float *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 4 * a3);
}

void sub_188863E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddFloat(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, float a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<int>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(float *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
  }
  else
  {
    *(float *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 4 * v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

double google::protobuf::internal::ExtensionSet::GetRepeatedDouble(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 353;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(double *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 8 * a3);
}

void sub_188864084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddDouble(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, double a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(double *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
  }
  else
  {
    *(double *)(*((_QWORD *)AlignedAndAddCleanup + 1) + 8 * v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedBool(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 354;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + a3);
}

void sub_18886426C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ExtensionSet::AddBool(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, char a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  uint64_t v14;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v16;
  unsigned int v17;

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    *((_BYTE *)v11 + 9) = 1;
    *((_BYTE *)v11 + 11) = a4;
    v14 = *(_QWORD *)this;
    if (v14)
    {
      if ((*(_BYTE *)(v14 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v14, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>);
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = v14;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *(_QWORD *)AlignedAndAddCleanup = 0;
      *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    }
    *v12 = (uint64_t *)AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v11;
  }
  v16 = *AlignedAndAddCleanup;
  if ((_DWORD)v16 == AlignedAndAddCleanup[1])
  {
    v17 = v16 + 1;
    google::protobuf::RepeatedField<BOOL>::Reserve(AlignedAndAddCleanup, v16 + 1);
    *(_BYTE *)(*((_QWORD *)AlignedAndAddCleanup + 1) + v16) = a5;
  }
  else
  {
    *(_BYTE *)(*((_QWORD *)AlignedAndAddCleanup + 1) + v16) = a5;
    v17 = v16 + 1;
  }
  *AlignedAndAddCleanup = v17;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(google::protobuf::internal::ExtensionSet *this, int a2, int a3, char a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v9;
  uint64_t **v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t *AlignedAndAddCleanup;
  uint64_t v15;
  void (*v16)(void *);

  v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v10 = v9;
  v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((_BYTE *)v9 + 9) = 1;
    *((_BYTE *)v9 + 8) = a3;
    *((_BYTE *)v9 + 11) = a4;
    switch(a3)
    {
      case 1:
        v12 = *(_QWORD *)this;
        if (!v12)
          goto LABEL_32;
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>;
        goto LABEL_31;
      case 2:
        v12 = *(_QWORD *)this;
        if (!v12)
          goto LABEL_32;
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>;
        goto LABEL_31;
      case 3:
      case 16:
      case 18:
        v12 = *(_QWORD *)this;
        if (!v12)
          goto LABEL_32;
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>;
        goto LABEL_31;
      case 4:
      case 6:
        v12 = *(_QWORD *)this;
        if (!v12)
          goto LABEL_32;
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>;
        goto LABEL_31;
      case 5:
      case 14:
      case 15:
      case 17:
        v12 = *(_QWORD *)this;
        if (!v12)
          goto LABEL_32;
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>;
        goto LABEL_31;
      case 7:
      case 13:
        v12 = *(_QWORD *)this;
        if (!v12)
          goto LABEL_32;
        if ((*(_BYTE *)(v12 + 24) & 1) != 0)
        v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>;
        goto LABEL_31;
      case 8:
        v12 = *(_QWORD *)this;
        if (v12)
        {
          if ((*(_BYTE *)(v12 + 24) & 1) != 0)
          v13 = google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>;
LABEL_31:
          AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v12, 0x10uLL, (void (*)(void *))v13);
          *AlignedAndAddCleanup = 0;
          AlignedAndAddCleanup[1] = v12;
        }
        else
        {
LABEL_32:
          AlignedAndAddCleanup = (uint64_t *)operator new();
          *AlignedAndAddCleanup = 0;
          AlignedAndAddCleanup[1] = 0;
        }
        goto LABEL_44;
      case 9:
      case 12:
        v15 = *(_QWORD *)this;
        if (!v15)
          goto LABEL_42;
        if ((*(_BYTE *)(v15 + 24) & 1) != 0)
        v16 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>;
        goto LABEL_41;
      case 10:
      case 11:
        v15 = *(_QWORD *)this;
        if (v15)
        {
          if ((*(_BYTE *)(v15 + 24) & 1) != 0)
          v16 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>;
LABEL_41:
          AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v15, 0x18uLL, v16);
          AlignedAndAddCleanup[2] = 0;
          *AlignedAndAddCleanup = v15;
        }
        else
        {
LABEL_42:
          AlignedAndAddCleanup = (uint64_t *)operator new();
          AlignedAndAddCleanup[2] = 0;
          *AlignedAndAddCleanup = 0;
        }
        AlignedAndAddCleanup[1] = 0;
LABEL_44:
        *v10 = AlignedAndAddCleanup;
        break;
      default:
        return *v10;
    }
  }
  return *v10;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedEnum(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 471;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)(*(_QWORD *)(*(_QWORD *)v4 + 8) + 4 * a3);
}

void sub_188864788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableString(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t **v7;
  uint64_t **v8;
  char v9;
  uint64_t v10;
  uint64_t *result;

  v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v8 = v7;
  v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((_BYTE *)v7 + 8) = a3;
    *((_BYTE *)v7 + 9) = 0;
    v10 = *(_QWORD *)this;
    if (v10)
    {
      if ((*(_BYTE *)(v10 + 24) & 1) != 0)
      result = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
    }
    else
    {
      result = (uint64_t *)operator new();
    }
    *result = 0;
    result[1] = 0;
    result[2] = 0;
    *v8 = result;
  }
  else
  {
    result = *v7;
  }
  *((_BYTE *)v8 + 10) &= 0xF0u;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedString(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 533;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 16) + 8 * a3 + 8);
}

void sub_188864920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::internal::ExtensionSet::AddString(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t **v7;
  uint64_t **v8;
  char v9;
  uint64_t v10;
  uint64_t *AlignedAndAddCleanup;
  uint64_t *v12;
  int *v13;
  int v14;
  int v15;
  _QWORD *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v8 = v7;
  v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((_BYTE *)v7 + 8) = a3;
    *((_BYTE *)v7 + 9) = 1;
    *((_BYTE *)v7 + 11) = 0;
    v10 = *(_QWORD *)this;
    if (*(_QWORD *)this)
    {
      if ((*(_BYTE *)(v10 + 24) & 1) != 0)
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>);
      v12 = AlignedAndAddCleanup;
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = v10;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      v12 = AlignedAndAddCleanup;
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = 0;
    }
    AlignedAndAddCleanup[1] = 0;
    *v8 = v12;
  }
  else
  {
    v12 = *v7;
  }
  v13 = (int *)v12[2];
  if (!v13)
  {
    v14 = *((_DWORD *)v12 + 2);
    v15 = *((_DWORD *)v12 + 3);
LABEL_14:
    if (v14 <= v15)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v12, v15 - v14 + 1);
      v13 = (int *)v12[2];
    }
    v15 = *v13;
    goto LABEL_17;
  }
  v14 = *((_DWORD *)v12 + 2);
  v15 = *v13;
  if (v14 < *v13)
  {
    *((_DWORD *)v12 + 2) = v14 + 1;
    return *(_QWORD **)&v13[2 * v14 + 2];
  }
  if (v15 == *((_DWORD *)v12 + 3))
    goto LABEL_14;
LABEL_17:
  *v13 = v15 + 1;
  v17 = *v12;
  if (*v12)
  {
    if ((*(_BYTE *)(v17 + 24) & 1) != 0)
    result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    result = (_QWORD *)operator new();
  }
  *result = 0;
  result[1] = 0;
  result[2] = 0;
  v18 = v12[2];
  v19 = *((int *)v12 + 2);
  *((_DWORD *)v12 + 2) = v19 + 1;
  *(_QWORD *)(v18 + 8 * v19 + 8) = result;
  return result;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v9;
  uint64_t **v10;
  char v11;
  uint64_t *result;
  char v13;

  v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v10 = v9;
  v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((_BYTE *)v9 + 8) = a3;
    *((_BYTE *)v9 + 9) = 0;
    *((_BYTE *)v9 + 10) &= 0xFu;
    result = (uint64_t *)(*(uint64_t (**)(const google::protobuf::MessageLite *, _QWORD))(*(_QWORD *)a4 + 32))(a4, *(_QWORD *)this);
    *v10 = result;
    *((_BYTE *)v10 + 10) &= 0xF0u;
  }
  else
  {
    v13 = *((_BYTE *)v9 + 10);
    *((_BYTE *)v9 + 10) = v13 & 0xF0;
    result = *v9;
    if ((v13 & 0x10) != 0)
      return (uint64_t *)(*(uint64_t (**)(uint64_t *, const google::protobuf::MessageLite *))(*result + 32))(result, a4);
  }
  return result;
}

uint64_t **google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4, google::protobuf::MessageLite *a5)
{
  uint64_t **result;
  uint64_t **v10;
  char v11;

  if (a5)
  {
    result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
    v10 = result;
    result[2] = (uint64_t *)a4;
    if (v11)
    {
      *((_BYTE *)result + 8) = a3;
      *((_BYTE *)result + 9) = 0;
      *((_BYTE *)result + 10) &= 0xFu;
    }
    else
    {
      if ((*((_BYTE *)result + 10) & 0x10) != 0)
      {
        result = (uint64_t **)(*(uint64_t (**)(void))(**result + 48))();
        goto LABEL_5;
      }
      if (!*(_QWORD *)this)
      {
        result = (uint64_t **)*result;
        if (*v10)
          result = (uint64_t **)((uint64_t (*)(uint64_t **))(*result)[1])(result);
      }
    }
    *v10 = (uint64_t *)a5;
LABEL_5:
    *((_BYTE *)v10 + 10) &= 0xF0u;
    return result;
  }
  result = (uint64_t **)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
    return google::protobuf::internal::ExtensionSet::Extension::Clear(result);
  return result;
}

char *google::protobuf::internal::ExtensionSet::Erase(google::protobuf::internal::ExtensionSet *this, int a2)
{
  unsigned int v3;
  char *result;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  int *v9;
  char *v10;
  int v11;
  int v12;

  v12 = a2;
  v3 = *((unsigned __int16 *)this + 4);
  result = (char *)*((_QWORD *)this + 2);
  if (v3 >= 0x101)
    return (char *)std::__tree<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,AddrObjGoogle::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>((uint64_t)result, &v12);
  v5 = *((unsigned __int16 *)this + 5);
  if (*((_WORD *)this + 5))
  {
    v6 = &result[32 * v5];
    v7 = *((unsigned __int16 *)this + 5);
    do
    {
      v8 = v7 >> 1;
      v9 = (int *)&result[32 * (v7 >> 1)];
      v11 = *v9;
      v10 = (char *)(v9 + 8);
      v7 += ~(v7 >> 1);
      if (v11 < a2)
        result = v10;
      else
        v7 = v8;
    }
    while (v7);
    if (result != v6 && *(_DWORD *)result == a2)
    {
      if (v6 != result + 32)
      {
        result = (char *)memmove(result, result + 32, v6 - (result + 32));
        LOWORD(v5) = *((_WORD *)this + 5);
      }
      *((_WORD *)this + 5) = v5 - 1;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 744;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 16) + 8 * a3 + 8);
}

void sub_188864DF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableRepeatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  _DWORD *v4;
  int v6;
  const char *v7;
  int v8;
  std::string __p;

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    v6 = 3;
    v7 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
    v8 = 751;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ");
    std::string::append(&__p, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 16) + 8 * a3 + 8);
}

void sub_188864EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v9;
  unsigned int **v10;
  char v11;
  uint64_t v12;
  unsigned int *AlignedAndAddCleanup;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v10 = (unsigned int **)v9;
  v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((_BYTE *)v9 + 8) = a3;
    *((_BYTE *)v9 + 9) = 1;
    v12 = *(_QWORD *)this;
    if (*(_QWORD *)this)
    {
      if ((*(_BYTE *)(v12 + 24) & 1) != 0)
      AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v12, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
      *((_QWORD *)AlignedAndAddCleanup + 2) = 0;
      *(_QWORD *)AlignedAndAddCleanup = v12;
    }
    else
    {
      AlignedAndAddCleanup = (unsigned int *)operator new();
      *((_QWORD *)AlignedAndAddCleanup + 2) = 0;
      *(_QWORD *)AlignedAndAddCleanup = 0;
    }
    *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
    *v10 = AlignedAndAddCleanup;
  }
  else
  {
    AlignedAndAddCleanup = (unsigned int *)*v9;
  }
  v14 = (_DWORD *)*((_QWORD *)AlignedAndAddCleanup + 2);
  if (!v14
    || (v15 = (int)AlignedAndAddCleanup[2], (int)v15 >= *v14)
    || (AlignedAndAddCleanup[2] = v15 + 1, (v16 = *(_QWORD *)&v14[2 * v15 + 2]) == 0))
  {
    v16 = (*(uint64_t (**)(const google::protobuf::MessageLite *, _QWORD))(*(_QWORD *)a4 + 32))(a4, *(_QWORD *)this);
    google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v10, v16);
  }
  return v16;
}

uint64_t **google::protobuf::internal::ExtensionSet::Clear(uint64_t **this)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t **v3;
  uint64_t **v4;
  uint64_t **v5;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  BOOL v9;

  v1 = this[2];
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    v6 = (uint64_t **)*v1;
    v4 = (uint64_t **)(v1 + 1);
    v5 = v6;
    if (v6 != v4)
    {
      do
      {
        this = google::protobuf::internal::ExtensionSet::Extension::Clear(v5 + 5);
        v7 = v5[1];
        if (v7)
        {
          do
          {
            v8 = (uint64_t **)v7;
            v7 = (uint64_t *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            v8 = (uint64_t **)v5[2];
            v9 = *v8 == (uint64_t *)v5;
            v5 = v8;
          }
          while (!v9);
        }
        v5 = v8;
      }
      while (v8 != v4);
    }
  }
  else if (*((_WORD *)this + 5))
  {
    v2 = 32 * *((unsigned __int16 *)this + 5);
    v3 = (uint64_t **)(v1 + 1);
    do
    {
      this = google::protobuf::internal::ExtensionSet::Extension::Clear(v3);
      v3 += 4;
      v2 -= 32;
    }
    while (v2);
  }
  return this;
}

void google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet *this, const google::protobuf::internal::ExtensionSet *a2)
{
  unsigned int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char *v13;
  unint64_t v14;
  int *v15;
  int *v16;
  int **v17;
  int v18;

  if (*((unsigned __int16 *)this + 4) <= 0x100u)
  {
    v4 = *((unsigned __int16 *)a2 + 4);
    v5 = (char *)*((_QWORD *)this + 2);
    v6 = *((unsigned __int16 *)this + 5);
    v7 = &v5[32 * v6];
    v8 = *((_QWORD *)a2 + 2);
    if (v4 > 0x100)
    {
    }
    else
    {
      v9 = *((unsigned __int16 *)a2 + 5);
      v10 = v8 + 32 * v9;
      v12 = (_DWORD)v6 == 0;
      v11 = 0;
      v12 = v12 || (_DWORD)v9 == 0;
      if (!v12)
      {
        do
        {
          if (*(_DWORD *)v5 == *(_DWORD *)v8)
            v13 = v5 + 32;
          else
            v13 = v5;
          if (*(_DWORD *)v5 < *(_DWORD *)v8)
          {
            v5 += 32;
          }
          else
          {
            v8 += 32;
            v5 = v13;
          }
          ++v11;
        }
        while (v5 != v7 && v8 != v10);
      }
      v14 = v11 + ((v10 - v8) >> 5) + ((v7 - v5) >> 5);
    }
    google::protobuf::internal::ExtensionSet::GrowCapacity(this, v14);
  }
  v15 = (int *)*((_QWORD *)a2 + 2);
  if (*((unsigned __int16 *)a2 + 4) >= 0x101u)
  {
    google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet const&)::$_0>(*(_QWORD **)v15, (_QWORD *)v15 + 1, this);
  }
  else if (*((_WORD *)a2 + 5))
  {
    v16 = &v15[8 * *((unsigned __int16 *)a2 + 5)];
    do
    {
      v17 = (int **)(v15 + 2);
      v18 = *v15;
      v15 += 8;
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, v18, v17);
    }
    while (v15 != v16);
  }
}

_QWORD *google::protobuf::internal::ExtensionSet::GrowCapacity(_QWORD *this, unint64_t a2)
{
  unint64_t v2;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t **v9;
  uint64_t *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  _BYTE v33[28];

  v2 = *((unsigned __int16 *)this + 4);
  if (v2 <= 0x100 && v2 < a2)
  {
    v4 = this;
    do
    {
      if ((_WORD)v2)
        LOWORD(v2) = 4 * v2;
      else
        LOWORD(v2) = 1;
    }
    while ((unsigned __int16)v2 < a2);
    v5 = (char *)this[2];
    v6 = *((unsigned __int16 *)this + 5);
    v7 = (uint64_t *)*this;
    if ((unsigned __int16)v2 < 0x101u)
    {
      v8 = 32 * (unsigned __int16)v2;
      if (v7)
      {
        if ((v7[3] & 1) != 0)
        this = google::protobuf::internal::ArenaImpl::AllocateAligned((google::protobuf::internal::ArenaImpl *)v7, v8);
      }
      else
      {
        this = operator new[](32 * (unsigned __int16)v2);
      }
      v9 = (uint64_t **)this;
      if ((_DWORD)v6)
        this = memmove(this, v5, 32 * v6);
    }
    else
    {
      if (v7)
      {
        if ((v7[3] & 1) != 0)
        this = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v7, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::map<int,google::protobuf::internal::ExtensionSet::Extension>>);
      }
      else
      {
        this = (_QWORD *)operator new();
      }
      v9 = (uint64_t **)this;
      this[1] = 0;
      v10 = this + 1;
      this[2] = 0;
      *this = this + 1;
      if ((_DWORD)v6)
      {
        v31 = v5;
        v32 = v4;
        v11 = &v5[32 * v6];
        v12 = this + 1;
        v13 = v5;
        while (1)
        {
          v14 = *(_DWORD *)v13;
          *(_OWORD *)&v33[4] = *(_OWORD *)(v13 + 8);
          *(_QWORD *)&v33[20] = *((_QWORD *)v13 + 3);
          if (v12 == v10)
            break;
          v15 = *((_DWORD *)v10 + 8);
          if (v15 > v14)
            break;
          if (v15 < v14)
          {
            v22 = (uint64_t **)(v10 + 1);
            v23 = (uint64_t *)v10[1];
            if (v23)
            {
              do
              {
                v22 = (uint64_t **)v23;
                v23 = (uint64_t *)*v23;
                v10 = (uint64_t *)v22;
                v24 = (uint64_t *)v22;
              }
              while (v23);
            }
            else
            {
              v24 = v10;
              do
              {
                v27 = v24;
                v24 = (uint64_t *)v24[2];
              }
              while ((uint64_t *)*v24 != v27);
            }
            if (v24 != v12 && *((_DWORD *)v24 + 8) <= v14)
            {
              v28 = *v12;
              v22 = v9 + 1;
              v10 = (uint64_t *)(v9 + 1);
              if (*v12)
              {
                while (1)
                {
                  while (1)
                  {
                    v10 = (uint64_t *)v28;
                    v29 = *(_DWORD *)(v28 + 32);
                    if (v29 <= v14)
                      break;
                    v28 = *v10;
                    v22 = (uint64_t **)v10;
                    if (!*v10)
                      goto LABEL_60;
                  }
                  if (v29 >= v14)
                    goto LABEL_61;
                  v28 = v10[1];
                  if (!v28)
                  {
LABEL_48:
                    v22 = (uint64_t **)(v10 + 1);
                    break;
                  }
                }
              }
            }
LABEL_60:
            v30 = (char *)operator new(0x40uLL);
            *((_DWORD *)v30 + 8) = v14;
            *(_OWORD *)(v30 + 36) = *(_OWORD *)v33;
            *((_OWORD *)v30 + 3) = *(_OWORD *)&v33[12];
            this = std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(v9, (uint64_t)v10, v22, (uint64_t *)v30);
            v10 = (uint64_t *)v30;
          }
LABEL_61:
          v13 += 32;
          if (v13 == v11)
          {
            v5 = v31;
            v4 = v32;
            goto LABEL_66;
          }
        }
        v16 = *v10;
        v17 = v10;
        if (*v9 == v10)
          goto LABEL_30;
        v18 = *v10;
        v19 = v10;
        if (v16)
        {
          do
          {
            v17 = (uint64_t *)v18;
            v18 = *(_QWORD *)(v18 + 8);
          }
          while (v18);
        }
        else
        {
          do
          {
            v17 = (uint64_t *)v19[2];
            v20 = *v17 == (_QWORD)v19;
            v19 = v17;
          }
          while (v20);
        }
        if (*((_DWORD *)v17 + 8) < v14)
        {
LABEL_30:
          v20 = v16 == 0;
          if (v16)
            v21 = v17;
          else
            v21 = v10;
          if (v20)
            v22 = (uint64_t **)v10;
          else
            v22 = (uint64_t **)(v17 + 1);
          v10 = *v22;
          if (*v22)
            goto LABEL_61;
          v10 = v21;
        }
        else
        {
          v25 = *v12;
          v22 = v9 + 1;
          v10 = (uint64_t *)(v9 + 1);
          if (*v12)
          {
            while (1)
            {
              while (1)
              {
                v10 = (uint64_t *)v25;
                v26 = *(_DWORD *)(v25 + 32);
                if (v26 <= v14)
                  break;
                v25 = *v10;
                v22 = (uint64_t **)v10;
                if (!*v10)
                  goto LABEL_60;
              }
              if (v26 >= v14)
                goto LABEL_61;
              v25 = v10[1];
              if (!v25)
                goto LABEL_48;
            }
          }
        }
        goto LABEL_60;
      }
    }
LABEL_66:
    if (!*v4 && v5)
      this = (_QWORD *)MEMORY[0x18D764364](v5, 0x1062C802AB6010CLL);
    *((_WORD *)v4 + 4) = v2;
    v4[2] = v9;
    if ((unsigned __int16)v2 >= 0x101u)
      *((_WORD *)v4 + 5) = 0;
  }
  return this;
}

uint64_t google::protobuf::internal::`anonymous namespace'::SizeOfUnion<google::protobuf::internal::ExtensionSet::KeyValue *,std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>>(char *a1, char *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  BOOL v13;

  v4 = 0;
  if (a1 != a2 && a3 != a4)
  {
    v4 = 0;
    do
    {
      v5 = *((_DWORD *)a3 + 8);
      if (*(_DWORD *)a1 >= v5)
      {
        if (*(_DWORD *)a1 == v5)
        {
          a1 += 32;
          v6 = (_QWORD *)a3[1];
          if (v6)
          {
            do
            {
              a3 = v6;
              v6 = (_QWORD *)*v6;
            }
            while (v6);
          }
          else
          {
            do
            {
              v7 = a3;
              a3 = (_QWORD *)a3[2];
            }
            while ((_QWORD *)*a3 != v7);
          }
        }
        else
        {
          v8 = (_QWORD *)a3[1];
          if (v8)
          {
            do
            {
              a3 = v8;
              v8 = (_QWORD *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              v9 = a3;
              a3 = (_QWORD *)a3[2];
            }
            while ((_QWORD *)*a3 != v9);
          }
        }
      }
      else
      {
        a1 += 32;
      }
      ++v4;
    }
    while (a1 != a2 && a3 != a4);
  }
  if (a3 == a4)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    do
    {
      v11 = (_QWORD *)a3[1];
      if (v11)
      {
        do
        {
          v12 = v11;
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          v12 = (_QWORD *)a3[2];
          v13 = *v12 == (_QWORD)a3;
          a3 = v12;
        }
        while (!v13);
      }
      ++v10;
      a3 = v12;
    }
    while (v12 != a4);
  }
  return v4 + ((a2 - a1) >> 5) + v10;
}

void google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(google::protobuf::internal::ExtensionSet *this, int a2, int **a3)
{
  uint64_t *v6;
  uint64_t **v7;
  char v8;
  unsigned int **v9;
  uint64_t v10;
  unsigned int *v11;
  char v12;
  int v13;
  uint64_t *v14;
  uint64_t **v15;
  char v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  unsigned int *AlignedAndAddCleanup;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  unsigned int *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t **v35;
  char v36;
  int *v37;
  int v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t **v41;
  char v42;
  int v43;
  uint64_t *v44;
  uint64_t **v45;
  char v46;
  char v47;
  uint64_t *v48;
  uint64_t **v49;
  char v50;
  uint64_t *v51;
  uint64_t **v52;
  uint64_t **v53;
  char v54;
  char v55;
  uint64_t v56;
  __int128 *v57;
  __int128 v58;
  int *v59;
  int v60;
  unsigned int *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  size_t v66;
  unsigned int *v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  int v71;
  unsigned int *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  _DWORD *v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  int v83;
  unsigned int *v84;
  const std::string **v85;
  unsigned int *v86;
  int v87;
  int *v88;
  uint64_t *v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  std::string __p;

  if (!*((_BYTE *)a3 + 9))
  {
    if ((*((_BYTE *)a3 + 10) & 1) != 0)
      return;
    v12 = *((_BYTE *)a3 + 8);
    switch(v12)
    {
      case 1:
        v39 = (uint64_t *)*a3;
        v40 = (uint64_t *)a3[2];
        v41 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v41[2] = v40;
        if (v42)
        {
          *((_BYTE *)v41 + 8) = v12;
          *((_BYTE *)v41 + 9) = 0;
        }
        *((_BYTE *)v41 + 10) &= 0xF0u;
        *v41 = v39;
        return;
      case 2:
        v43 = *(_DWORD *)a3;
        v44 = (uint64_t *)a3[2];
        v45 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v45[2] = v44;
        if (v46)
        {
          *((_BYTE *)v45 + 8) = v12;
          *((_BYTE *)v45 + 9) = 0;
        }
        *((_BYTE *)v45 + 10) &= 0xF0u;
        *(_DWORD *)v45 = v43;
        return;
      case 3:
      case 4:
      case 6:
      case 16:
      case 18:
        v33 = (uint64_t *)*a3;
        v34 = (uint64_t *)a3[2];
        v35 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v35[2] = v34;
        if (v36)
        {
          *((_BYTE *)v35 + 8) = v12;
          *((_BYTE *)v35 + 9) = 0;
        }
        *((_BYTE *)v35 + 10) &= 0xF0u;
        *v35 = v33;
        return;
      case 5:
      case 7:
      case 13:
      case 14:
      case 15:
      case 17:
        v13 = *(_DWORD *)a3;
        v14 = (uint64_t *)a3[2];
        v15 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v15[2] = v14;
        if (v16)
        {
          *((_BYTE *)v15 + 8) = v12;
          *((_BYTE *)v15 + 9) = 0;
        }
        *((_BYTE *)v15 + 10) &= 0xF0u;
        *(_DWORD *)v15 = v13;
        return;
      case 8:
        v47 = *(_BYTE *)a3;
        v48 = (uint64_t *)a3[2];
        v49 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v49[2] = v48;
        if (v50)
        {
          *((_BYTE *)v49 + 8) = v12;
          *((_BYTE *)v49 + 9) = 0;
        }
        *((_BYTE *)v49 + 10) &= 0xF0u;
        *(_BYTE *)v49 = v47;
        return;
      case 9:
      case 12:
        v57 = (__int128 *)*a3;
        if (*((char *)*a3 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v57, *((_QWORD *)v57 + 1));
        }
        else
        {
          v58 = *v57;
          __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v57 + 2);
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v58;
        }
        google::protobuf::internal::ExtensionSet::SetString(this, a2, v12, (__n128 *)&__p, (google::protobuf::FieldDescriptor *)a3[2]);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        return;
      case 10:
      case 11:
        v51 = (uint64_t *)a3[2];
        v52 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v53 = v52;
        v52[2] = v51;
        if (v54)
        {
          *((_BYTE *)v52 + 8) = *((_BYTE *)a3 + 8);
          *((_BYTE *)v52 + 11) = *((_BYTE *)a3 + 11);
          *((_BYTE *)v52 + 9) = 0;
          v55 = *((_BYTE *)v52 + 10) & 0xF;
          if ((*((_BYTE *)a3 + 10) & 0x10) == 0)
          {
            *((_BYTE *)v52 + 10) = v55;
            v56 = (*(uint64_t (**)(int *, _QWORD))(*(_QWORD *)*a3 + 32))(*a3, *(_QWORD *)this);
            *v53 = (uint64_t *)v56;
LABEL_126:
            (*(void (**)(uint64_t, int *))(*(_QWORD *)v56 + 64))(v56, *a3);
            goto LABEL_128;
          }
          *((_BYTE *)v52 + 10) = v55 | 0x10;
          v92 = (*(uint64_t (**)(int *, _QWORD))(*(_QWORD *)*a3 + 16))(*a3, *(_QWORD *)this);
          *v53 = (uint64_t *)v92;
          (*(void (**)(uint64_t, int *))(*(_QWORD *)v92 + 104))(v92, *a3);
        }
        else
        {
          v89 = *v52;
          v90 = *a3;
          if ((*((_BYTE *)a3 + 10) & 0x10) != 0)
          {
            if ((*((_BYTE *)v52 + 10) & 0x10) != 0)
            {
              (*(void (**)(uint64_t *, int *))(*v89 + 104))(v89, v90);
            }
            else
            {
              v93 = (*(uint64_t (**)(int *, uint64_t *))(*(_QWORD *)v90 + 24))(*a3, *v52);
              (*(void (**)(uint64_t *, uint64_t))(*v89 + 64))(v89, v93);
            }
            goto LABEL_128;
          }
          v91 = *v89;
          if ((*((_BYTE *)v52 + 10) & 0x10) != 0)
          {
            v56 = (*(uint64_t (**)(uint64_t *, int *))(v91 + 32))(*v52, v90);
            goto LABEL_126;
          }
          (*(void (**)(uint64_t *, int *))(v91 + 64))(v89, v90);
        }
LABEL_128:
        *((_BYTE *)v53 + 10) &= 0xF0u;
        return;
      default:
        return;
    }
  }
  v6 = (uint64_t *)a3[2];
  v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = (unsigned int **)v7;
  v7[2] = v6;
  if (v8)
  {
    *((_BYTE *)v7 + 8) = *((_BYTE *)a3 + 8);
    *((_BYTE *)v7 + 11) = *((_BYTE *)a3 + 11);
    *((_BYTE *)v7 + 9) = 1;
  }
  switch(*((_BYTE *)a3 + 8))
  {
    case 1:
      if (v8)
      {
        v23 = *(_QWORD *)this;
        if (v23)
        {
          if ((*(_BYTE *)(v23 + 24) & 1) != 0)
          AlignedAndAddCleanup = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v23, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>);
          *(_QWORD *)AlignedAndAddCleanup = 0;
          *((_QWORD *)AlignedAndAddCleanup + 1) = v23;
        }
        else
        {
          AlignedAndAddCleanup = (unsigned int *)operator new();
          *(_QWORD *)AlignedAndAddCleanup = 0;
          *((_QWORD *)AlignedAndAddCleanup + 1) = 0;
        }
        *v9 = AlignedAndAddCleanup;
      }
      v59 = *a3;
      v60 = **a3;
      if (v60)
        goto LABEL_91;
      break;
    case 2:
      if (v8)
      {
        v25 = *(_QWORD *)this;
        if (v25)
        {
          if ((*(_BYTE *)(v25 + 24) & 1) != 0)
          v26 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v25, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>);
          *(_QWORD *)v26 = 0;
          *((_QWORD *)v26 + 1) = v25;
        }
        else
        {
          v26 = (unsigned int *)operator new();
          *(_QWORD *)v26 = 0;
          *((_QWORD *)v26 + 1) = 0;
        }
        *v9 = v26;
      }
      v37 = *a3;
      v38 = **a3;
      if (v38)
        goto LABEL_95;
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (v8)
      {
        v17 = *(_QWORD *)this;
        if (v17)
        {
          if ((*(_BYTE *)(v17 + 24) & 1) != 0)
          v18 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v17, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>);
          *(_QWORD *)v18 = 0;
          *((_QWORD *)v18 + 1) = v17;
        }
        else
        {
          v18 = (unsigned int *)operator new();
          *(_QWORD *)v18 = 0;
          *((_QWORD *)v18 + 1) = 0;
        }
        *v9 = v18;
      }
      v59 = *a3;
      v60 = **a3;
      if (v60)
        goto LABEL_91;
      break;
    case 4:
    case 6:
      if (v8)
      {
        v21 = *(_QWORD *)this;
        if (v21)
        {
          if ((*(_BYTE *)(v21 + 24) & 1) != 0)
          v22 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v21, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>);
          *(_QWORD *)v22 = 0;
          *((_QWORD *)v22 + 1) = v21;
        }
        else
        {
          v22 = (unsigned int *)operator new();
          *(_QWORD *)v22 = 0;
          *((_QWORD *)v22 + 1) = 0;
        }
        *v9 = v22;
      }
      v59 = *a3;
      v60 = **a3;
      if (v60)
      {
LABEL_91:
        v61 = *v9;
        v62 = (int)**v9;
        google::protobuf::RepeatedField<long long>::Reserve(v61, v62 + v60);
        v63 = *((_QWORD *)v61 + 1);
        *v61 += *v59;
        v64 = (void *)(v63 + 8 * v62);
        v65 = (const void *)*((_QWORD *)v59 + 1);
        v66 = 8 * *v59;
        goto LABEL_100;
      }
      break;
    case 5:
    case 0xE:
    case 0xF:
    case 0x11:
      if (v8)
      {
        v10 = *(_QWORD *)this;
        if (v10)
        {
          if ((*(_BYTE *)(v10 + 24) & 1) != 0)
          v11 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v10, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
          *(_QWORD *)v11 = 0;
          *((_QWORD *)v11 + 1) = v10;
        }
        else
        {
          v11 = (unsigned int *)operator new();
          *(_QWORD *)v11 = 0;
          *((_QWORD *)v11 + 1) = 0;
        }
        *v9 = v11;
      }
      v37 = *a3;
      v38 = **a3;
      if (v38)
        goto LABEL_95;
      break;
    case 7:
    case 0xD:
      if (v8)
      {
        v19 = *(_QWORD *)this;
        if (v19)
        {
          if ((*(_BYTE *)(v19 + 24) & 1) != 0)
          v20 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v19, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>);
          *(_QWORD *)v20 = 0;
          *((_QWORD *)v20 + 1) = v19;
        }
        else
        {
          v20 = (unsigned int *)operator new();
          *(_QWORD *)v20 = 0;
          *((_QWORD *)v20 + 1) = 0;
        }
        *v9 = v20;
      }
      v37 = *a3;
      v38 = **a3;
      if (v38)
      {
LABEL_95:
        v67 = *v9;
        v68 = (int)**v9;
        google::protobuf::RepeatedField<int>::Reserve(v67, v68 + v38);
        v69 = *((_QWORD *)v67 + 1);
        *v67 += *v37;
        v64 = (void *)(v69 + 4 * v68);
        v65 = (const void *)*((_QWORD *)v37 + 1);
        v66 = 4 * *v37;
        goto LABEL_100;
      }
      break;
    case 8:
      if (v8)
      {
        v27 = *(_QWORD *)this;
        if (v27)
        {
          if ((*(_BYTE *)(v27 + 24) & 1) != 0)
          v28 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v27, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>);
          *(_QWORD *)v28 = 0;
          *((_QWORD *)v28 + 1) = v27;
        }
        else
        {
          v28 = (unsigned int *)operator new();
          *(_QWORD *)v28 = 0;
          *((_QWORD *)v28 + 1) = 0;
        }
        *v9 = v28;
      }
      v70 = *a3;
      v71 = **a3;
      if (v71)
      {
        v72 = *v9;
        v73 = (int)**v9;
        google::protobuf::RepeatedField<BOOL>::Reserve(v72, v73 + v71);
        v74 = *((_QWORD *)v72 + 1);
        *v72 += *v70;
        v64 = (void *)(v74 + v73);
        v65 = (const void *)*((_QWORD *)v70 + 1);
        v66 = *v70;
LABEL_100:
        memcpy(v64, v65, v66);
      }
      break;
    case 9:
    case 0xC:
      if (v8)
      {
        v29 = *(_QWORD *)this;
        if (v29)
        {
          if ((*(_BYTE *)(v29 + 24) & 1) != 0)
          v30 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v29, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>);
          *((_QWORD *)v30 + 2) = 0;
          *(_QWORD *)v30 = v29;
        }
        else
        {
          v30 = (unsigned int *)operator new();
          *((_QWORD *)v30 + 2) = 0;
          *(_QWORD *)v30 = 0;
        }
        *((_QWORD *)v30 + 1) = 0;
        *v9 = v30;
      }
      v82 = *a3;
      v83 = (*a3)[2];
      if (v83)
      {
        v84 = *v9;
        v85 = (const std::string **)(*((_QWORD *)v82 + 2) + 8);
        v86 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v84, v83);
        google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)v84, (std::string **)v86, v85, v83, **((_DWORD **)v84 + 2) - v84[2]);
        v87 = v84[2] + v83;
        v84[2] = v87;
        v88 = (int *)*((_QWORD *)v84 + 2);
        if (*v88 < v87)
          *v88 = v87;
      }
      break;
    case 0xA:
    case 0xB:
      if (v8)
      {
        v31 = *(_QWORD *)this;
        if (*(_QWORD *)this)
        {
          if ((*(_BYTE *)(v31 + 24) & 1) != 0)
          v32 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v31, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
          *((_QWORD *)v32 + 2) = 0;
          *(_QWORD *)v32 = v31;
        }
        else
        {
          v32 = (unsigned int *)operator new();
          *((_QWORD *)v32 + 2) = 0;
          *(_QWORD *)v32 = 0;
        }
        *((_QWORD *)v32 + 1) = 0;
        *v9 = v32;
      }
      v75 = *a3;
      if ((*a3)[2] >= 1)
      {
        v76 = 0;
        do
        {
          v77 = *(_QWORD *)(*((_QWORD *)v75 + 2) + 8 * v76 + 8);
          v78 = *v9;
          v79 = (_DWORD *)*((_QWORD *)*v9 + 2);
          if (!v79
            || (v80 = (int)v78[2], (int)v80 >= *v79)
            || (v78[2] = v80 + 1, (v81 = *(_QWORD *)&v79[2 * v80 + 2]) == 0))
          {
            v81 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v77 + 32))(v77, *(_QWORD *)this);
            google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v9, v81);
          }
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v81 + 64))(v81, v77);
          ++v76;
        }
        while (v76 < v75[2]);
      }
      break;
    default:
      return;
  }
}

void sub_1888660B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 google::protobuf::internal::ExtensionSet::SetString(google::protobuf::internal::ExtensionSet *a1, int a2, char a3, __n128 *a4, google::protobuf::FieldDescriptor *a5)
{
  uint64_t *v6;
  __n128 *v7;
  __n128 result;

  v6 = google::protobuf::internal::ExtensionSet::MutableString(a1, a2, a3, a5);
  v7 = (__n128 *)v6;
  if (*((char *)v6 + 23) < 0)
    operator delete((void *)*v6);
  result = *a4;
  v7[1].n128_u64[0] = a4[1].n128_u64[0];
  *v7 = result;
  a4[1].n128_u8[7] = 0;
  a4->n128_u8[0] = 0;
  return result;
}

void google::protobuf::internal::ExtensionSet::Swap(google::protobuf::internal::ExtensionSet *this, google::protobuf::internal::ExtensionSet *a2)
{
  __int16 v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  if (*(_QWORD *)this == *(_QWORD *)a2)
  {
    v4 = *((_WORD *)this + 4);
    *((_WORD *)this + 4) = *((_WORD *)a2 + 4);
    *((_WORD *)a2 + 4) = v4;
    v5 = *((_WORD *)this + 5);
    *((_WORD *)this + 5) = *((_WORD *)a2 + 5);
    *((_WORD *)a2 + 5) = v5;
    v6 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&v7, a2);
    google::protobuf::internal::ExtensionSet::Clear((uint64_t **)a2);
    google::protobuf::internal::ExtensionSet::MergeFrom(a2, this);
    google::protobuf::internal::ExtensionSet::Clear((uint64_t **)this);
    google::protobuf::internal::ExtensionSet::MergeFrom(this, (const google::protobuf::internal::ExtensionSet *)&v7);
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)&v7);
  }
}

void sub_1888661D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)va);
  _Unwind_Resume(a1);
}

uint64_t **google::protobuf::internal::ExtensionSet::Insert(google::protobuf::internal::ExtensionSet *this, int a2)
{
  unsigned int v3;
  uint64_t **v4;
  uint64_t v6;
  uint64_t **v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t **v10;
  uint64_t **v11;
  int v12;
  uint64_t **result;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *((unsigned __int16 *)this + 4);
  v4 = (uint64_t **)*((_QWORD *)this + 2);
  if (v3 >= 0x101)
  {
    *((_QWORD *)&v14 + 1) = 0;
    v15 = 0;
    v16 = 0;
    LODWORD(v14) = a2;
    return std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int const,google::protobuf::internal::ExtensionSet::Extension>>(v4, a2, &v14)+ 5;
  }
  v6 = *((unsigned __int16 *)this + 5);
  v7 = &v4[4 * v6];
  if (!*((_WORD *)this + 5))
  {
    if (!*((_WORD *)this + 4))
      goto LABEL_18;
    LOWORD(v6) = 0;
LABEL_17:
    *((_WORD *)this + 5) = v6 + 1;
    *(_DWORD *)v7 = a2;
    v7[1] = 0;
    result = v7 + 1;
    v7[2] = 0;
    v7[3] = 0;
    return result;
  }
  v8 = *((unsigned __int16 *)this + 5);
  do
  {
    v9 = v8 >> 1;
    v10 = &v4[4 * (v8 >> 1)];
    v12 = *(_DWORD *)v10;
    v11 = v10 + 4;
    v8 += ~(v8 >> 1);
    if (v12 < a2)
      v4 = v11;
    else
      v8 = v9;
  }
  while (v8);
  if (v4 != v7)
  {
    if (*(_DWORD *)v4 == a2)
      return v4 + 1;
    if (v6 < v3)
    {
      memmove(v4 + 4, v4, (char *)v7 - (char *)v4);
      LOWORD(v6) = *((_WORD *)this + 5);
      v7 = v4;
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (v6 < v3)
    goto LABEL_17;
LABEL_18:
  google::protobuf::internal::ExtensionSet::GrowCapacity(this, v6 + 1);
  return (uint64_t **)google::protobuf::internal::ExtensionSet::Insert(this, a2);
}

uint64_t google::protobuf::internal::ExtensionSet::IsInitialized(google::protobuf::internal::ExtensionSet *this)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t **v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t **v9;
  BOOL v10;

  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      v2 = *((_QWORD *)this + 2);
      do
      {
        result = google::protobuf::internal::ExtensionSet::Extension::IsInitialized((uint64_t **)(v2 + 8));
        if ((result & 1) == 0)
          break;
        v2 += 32;
      }
      while (v2 != *((_QWORD *)this + 2) + 32 * *((unsigned __int16 *)this + 5));
      return result;
    }
    return 1;
  }
  v4 = (_QWORD *)*((_QWORD *)this + 2);
  v7 = (uint64_t **)*v4;
  v5 = (uint64_t **)(v4 + 1);
  v6 = v7;
  if (v7 == v5)
    return 1;
  do
  {
    result = google::protobuf::internal::ExtensionSet::Extension::IsInitialized(v6 + 5);
    if (!(_DWORD)result)
      break;
    v8 = v6[1];
    if (v8)
    {
      do
      {
        v9 = (uint64_t **)v8;
        v8 = (uint64_t *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        v9 = (uint64_t **)v6[2];
        v10 = *v9 == (uint64_t *)v6;
        v6 = v9;
      }
      while (!v10);
    }
    v6 = v9;
  }
  while (v9 != v5);
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::IsInitialized(uint64_t **this)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)] != 10)
    return 1;
  if (*((_BYTE *)this + 9))
  {
    v2 = *this;
    if (*((int *)*this + 2) >= 1)
    {
      v3 = 0;
      while (1)
      {
        v4 = *(_QWORD *)(v2[2] + 8 * v3 + 8);
        if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 48))(v4) & 1) == 0)
          break;
        ++v3;
        v2 = *this;
        if (v3 >= *((int *)*this + 2))
          return 1;
      }
      return 0;
    }
    return 1;
  }
  if ((*((_BYTE *)this + 10) & 1) != 0)
    return 1;
  v5 = **this;
  if ((*((_BYTE *)this + 10) & 0x10) != 0)
    return ((*(uint64_t (**)(void))(v5 + 72))() & 1) != 0;
  result = (*(uint64_t (**)(void))(v5 + 48))();
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, _BYTE *a6)
{
  uint64_t result;
  unsigned int v10;
  int v11;
  const char *v12;
  int v13;
  std::string __p;

  result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(_QWORD *)a4 + 16))(a4, a3, a5);
  if ((_DWORD)result)
  {
    v10 = google::protobuf::internal::WireFormatLite::kWireTypeForFieldType[*a5];
    *a6 = 0;
    if (a2 != 2 || !a5[1])
      return v10 == a2;
    if (v10 > 5)
    {
      v11 = 3;
      v12 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
      v13 = 82;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "can't reach here.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v11);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return v10 == a2;
    }
    result = 1;
    if (((1 << v10) & 0x1C) != 0)
      return v10 == a2;
    *a6 = 1;
  }
  return result;
}

void sub_188866594(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::_InternalSerialize(google::protobuf::internal::ExtensionSet *this, int a2, signed int a3, unsigned __int8 *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  signed int *v7;
  unint64_t v8;
  signed int *v9;
  unint64_t v10;
  signed int *v11;
  signed int *v12;
  int v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  int v19;
  BOOL v20;
  uint64_t *v21;
  signed int v22;
  _QWORD *v23;
  _QWORD *v24;
  BOOL v25;

  v7 = (signed int *)*((_QWORD *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    v17 = *((_QWORD *)v7 + 1);
    v16 = v7 + 2;
    v15 = v17;
    if (v17)
    {
      v18 = v16;
      do
      {
        v19 = *(_DWORD *)(v15 + 32);
        v20 = v19 < a2;
        if (v19 >= a2)
          v21 = (uint64_t *)v15;
        else
          v21 = (uint64_t *)(v15 + 8);
        if (!v20)
          v18 = (_QWORD *)v15;
        v15 = *v21;
      }
      while (*v21);
      if (v18 != v16)
      {
        do
        {
          v22 = *((_DWORD *)v18 + 8);
          if (v22 >= a3)
            break;
          a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v18 + 5, v22, a4, a5);
          v23 = (_QWORD *)v18[1];
          if (v23)
          {
            do
            {
              v24 = v23;
              v23 = (_QWORD *)*v23;
            }
            while (v23);
          }
          else
          {
            do
            {
              v24 = (_QWORD *)v18[2];
              v25 = *v24 == (_QWORD)v18;
              v18 = v24;
            }
            while (!v25);
          }
          v18 = v24;
        }
        while (v24 != v16);
      }
    }
  }
  else
  {
    v8 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      v9 = &v7[8 * v8];
      do
      {
        v10 = v8 >> 1;
        v11 = &v7[8 * (v8 >> 1)];
        v13 = *v11;
        v12 = v11 + 8;
        v8 += ~(v8 >> 1);
        if (v13 < a2)
          v7 = v12;
        else
          v8 = v10;
      }
      while (v8);
      while (v7 != v9 && *v7 < a3)
      {
        a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v7 + 1, *v7, a4, a5);
        v7 += 8;
      }
    }
  }
  return a4;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray(int **this, unsigned int a2, unsigned __int8 *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unsigned __int8 *v5;
  unsigned int v8;
  _BYTE *v9;
  int *v10;
  unsigned int v11;
  unsigned int v12;
  int **v13;
  unsigned int v14;
  unsigned int v15;
  int *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned __int8 v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  _QWORD *v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int *v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int *v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  int *v92;
  uint64_t v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned __int8 v97;
  int v98;
  _DWORD *v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int *v103;
  uint64_t v104;
  unsigned int v105;
  unsigned __int8 v106;
  int v107;
  unint64_t v108;
  _BYTE *v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  int *v116;
  uint64_t v117;
  unsigned int v118;
  unsigned __int8 v119;
  int v120;
  unint64_t v121;
  _BYTE *v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  int *v129;
  uint64_t v130;
  unsigned int v131;
  unsigned __int8 v132;
  int v133;
  unint64_t v134;
  _BYTE *v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  int *v142;
  uint64_t v143;
  unsigned int v144;
  unsigned __int8 v145;
  int v146;
  unsigned int v147;
  uint64_t v148;
  _QWORD *v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int *v153;
  uint64_t v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned __int8 v158;
  int v159;
  _DWORD *v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int *v164;
  uint64_t v165;
  unsigned int v166;
  unsigned __int8 v167;
  int v168;
  unsigned int v169;
  char v170;
  _BYTE *v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int *v175;
  uint64_t v176;
  unsigned int v177;
  uint64_t v178;
  unsigned int v179;
  unsigned __int8 v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  int64_t v184;
  _BYTE *v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  char *v189;
  int *v190;
  uint64_t v191;
  unsigned int v192;
  unsigned __int8 v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned __int8 v197;
  uint64_t v198;
  unsigned __int8 *v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned __int8 *v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int *v207;
  uint64_t v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned __int8 v212;
  uint64_t v213;
  _BYTE *v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  _BYTE *v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int *v223;
  uint64_t v224;
  unsigned int v225;
  uint64_t v226;
  unsigned int v227;
  unsigned __int8 v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  int64_t v232;
  _BYTE *v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  char *v237;
  int *v238;
  uint64_t v239;
  unsigned int v240;
  unsigned __int8 v241;
  int v242;
  unsigned int v243;
  _BYTE *v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  int *v251;
  uint64_t v252;
  unsigned int v253;
  unsigned __int8 v254;
  int v255;
  unint64_t v256;
  _BYTE *v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  int *v264;
  uint64_t v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned __int8 v269;
  int v270;
  _DWORD *v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int *v275;
  uint64_t v276;
  unsigned int v277;
  unsigned __int8 v278;
  int v279;
  unsigned int v280;
  uint64_t v281;
  _QWORD *v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  int *v286;
  uint64_t v287;
  unsigned int v288;
  unsigned __int8 v289;
  int v290;
  int v291;
  _BYTE *v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int *v300;
  uint64_t v301;
  unsigned int v302;
  unsigned __int8 v303;
  int v304;
  uint64_t v305;
  _BYTE *v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unint64_t v310;
  unint64_t v311;
  unint64_t v312;
  unint64_t v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int *v317;
  unsigned int v318;
  unsigned int v319;
  unint64_t v320;
  unsigned int v321;
  unsigned __int8 *v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int *v329;
  int64_t v330;
  int *v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned __int8 *v335;
  int *v336;
  unsigned int v337;
  _BYTE *v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  uint64_t v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  unsigned int v359;
  unsigned int v360;
  _BYTE *v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unint64_t v372;
  unint64_t v373;
  unint64_t v374;
  unsigned int v375;
  unsigned int v376;
  unint64_t v377;
  unsigned int v378;
  unsigned int v379;
  unint64_t v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unint64_t v399;
  unint64_t v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unint64_t v404;
  unsigned int v405;
  unsigned int v406;
  unint64_t v407;
  unint64_t v408;
  unsigned int v409;
  char *v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  _BYTE *v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  int v420;
  int v421;
  int v422;
  const char *v423;
  int v424;
  std::string __p;

  v5 = a3;
  if (*((_BYTE *)this + 9))
  {
    if (*((_BYTE *)this + 11))
    {
      if (*((_DWORD *)this + 3))
      {
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v8 = (8 * a2) | 2;
        if (v8 > 0x7F)
        {
          *v5 = (8 * a2) | 0x82;
          v27 = (8 * a2) >> 7;
          if (v8 >> 14)
          {
            v9 = v5 + 2;
            do
            {
              *(v9 - 1) = v27 | 0x80;
              v28 = v27 >> 7;
              ++v9;
              v29 = v27 >> 14;
              v27 >>= 7;
            }
            while (v29);
            *(v9 - 1) = v28;
          }
          else
          {
            v5[1] = v27;
            v9 = v5 + 2;
          }
        }
        else
        {
          *v5 = v8;
          v9 = v5 + 1;
        }
        v30 = *((int *)this + 3);
        if (v30 > 0x7F)
        {
          *v9 = v30 | 0x80;
          v31 = v30 >> 7;
          if (v30 >> 14)
          {
            v5 = v9 + 2;
            do
            {
              *(v5 - 1) = v31 | 0x80;
              v32 = v31 >> 7;
              ++v5;
              v33 = v31 >> 14;
              v31 >>= 7;
            }
            while (v33);
            *(v5 - 1) = v32;
          }
          else
          {
            v9[1] = v31;
            v5 = v9 + 2;
          }
        }
        else
        {
          *v9 = v30;
          v5 = v9 + 1;
        }
        switch(*((_BYTE *)this + 8))
        {
          case 1:
            v55 = *this;
            if (**this >= 1)
            {
              v56 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v55 = *this;
                }
                *(_QWORD *)v5 = *(_QWORD *)(*((_QWORD *)v55 + 1) + 8 * v56);
                v5 += 8;
                ++v56;
                v55 = *this;
              }
              while (v56 < **this);
            }
            break;
          case 2:
            v57 = *this;
            if (**this >= 1)
            {
              v58 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v57 = *this;
                }
                *(_DWORD *)v5 = *(_DWORD *)(*((_QWORD *)v57 + 1) + 4 * v58);
                v5 += 4;
                ++v58;
                v57 = *this;
              }
              while (v58 < **this);
            }
            break;
          case 3:
            v59 = *this;
            if (**this >= 1)
            {
              v60 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v59 = *this;
                }
                v61 = *(_QWORD *)(*((_QWORD *)v59 + 1) + 8 * v60);
                if (v61 > 0x7F)
                {
                  *v5 = v61 | 0x80;
                  v62 = v61 >> 7;
                  if (v61 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v62 | 0x80;
                      v63 = v62 >> 7;
                      ++v5;
                      v64 = v62 >> 14;
                      v62 >>= 7;
                    }
                    while (v64);
                    *(v5 - 1) = v63;
                  }
                  else
                  {
                    v5[1] = v62;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v61;
                }
                ++v60;
                v59 = *this;
              }
              while (v60 < **this);
            }
            break;
          case 4:
            v65 = *this;
            if (**this >= 1)
            {
              v66 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v65 = *this;
                }
                v67 = *(_QWORD *)(*((_QWORD *)v65 + 1) + 8 * v66);
                if (v67 > 0x7F)
                {
                  *v5 = v67 | 0x80;
                  v68 = v67 >> 7;
                  if (v67 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v68 | 0x80;
                      v69 = v68 >> 7;
                      ++v5;
                      v70 = v68 >> 14;
                      v68 >>= 7;
                    }
                    while (v70);
                    *(v5 - 1) = v69;
                  }
                  else
                  {
                    v5[1] = v68;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v67;
                }
                ++v66;
                v65 = *this;
              }
              while (v66 < **this);
            }
            break;
          case 5:
            v34 = *this;
            if (**this >= 1)
            {
              v35 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v34 = *this;
                }
                v36 = *(int *)(*((_QWORD *)v34 + 1) + 4 * v35);
                if (v36 > 0x7F)
                {
                  *v5 = v36 | 0x80;
                  v37 = v36 >> 7;
                  if (v36 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v37 | 0x80;
                      v38 = v37 >> 7;
                      ++v5;
                      v39 = v37 >> 14;
                      v37 >>= 7;
                    }
                    while (v39);
                    *(v5 - 1) = v38;
                  }
                  else
                  {
                    v5[1] = v37;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v36;
                }
                ++v35;
                v34 = *this;
              }
              while (v35 < **this);
            }
            break;
          case 6:
            v71 = *this;
            if (**this >= 1)
            {
              v72 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v71 = *this;
                }
                *(_QWORD *)v5 = *(_QWORD *)(*((_QWORD *)v71 + 1) + 8 * v72);
                v5 += 8;
                ++v72;
                v71 = *this;
              }
              while (v72 < **this);
            }
            break;
          case 7:
            v73 = *this;
            if (**this >= 1)
            {
              v74 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v73 = *this;
                }
                *(_DWORD *)v5 = *(_DWORD *)(*((_QWORD *)v73 + 1) + 4 * v74);
                v5 += 4;
                ++v74;
                v73 = *this;
              }
              while (v74 < **this);
            }
            break;
          case 8:
            v75 = *this;
            if (**this >= 1)
            {
              v76 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v75 = *this;
                }
                *v5++ = *(_BYTE *)(*((_QWORD *)v75 + 1) + v76++);
                v75 = *this;
              }
              while (v76 < **this);
            }
            break;
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
            v422 = 3;
            v423 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
            v424 = 1966;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Non-primitive types can't be packed.");
            google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v422);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
            break;
          case 0xD:
            v40 = *this;
            if (**this >= 1)
            {
              v41 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v40 = *this;
                }
                v42 = *(_DWORD *)(*((_QWORD *)v40 + 1) + 4 * v41);
                if (v42 > 0x7F)
                {
                  *v5 = v42 | 0x80;
                  v43 = v42 >> 7;
                  if (v42 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v43 | 0x80;
                      v44 = v43 >> 7;
                      ++v5;
                      v45 = v43 >> 14;
                      v43 >>= 7;
                    }
                    while (v45);
                    *(v5 - 1) = v44;
                  }
                  else
                  {
                    v5[1] = v43;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v42;
                }
                ++v41;
                v40 = *this;
              }
              while (v41 < **this);
            }
            break;
          case 0xE:
            v77 = *this;
            if (**this >= 1)
            {
              v78 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v77 = *this;
                }
                v79 = *(int *)(*((_QWORD *)v77 + 1) + 4 * v78);
                if (v79 > 0x7F)
                {
                  *v5 = v79 | 0x80;
                  v80 = v79 >> 7;
                  if (v79 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v80 | 0x80;
                      v81 = v80 >> 7;
                      ++v5;
                      v82 = v80 >> 14;
                      v80 >>= 7;
                    }
                    while (v82);
                    *(v5 - 1) = v81;
                  }
                  else
                  {
                    v5[1] = v80;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v79;
                }
                ++v78;
                v77 = *this;
              }
              while (v78 < **this);
            }
            break;
          case 0xF:
            v46 = *this;
            if (**this >= 1)
            {
              v47 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v46 = *this;
                }
                *(_DWORD *)v5 = *(_DWORD *)(*((_QWORD *)v46 + 1) + 4 * v47);
                v5 += 4;
                ++v47;
                v46 = *this;
              }
              while (v47 < **this);
            }
            break;
          case 0x10:
            v83 = *this;
            if (**this >= 1)
            {
              v84 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v83 = *this;
                }
                *(_QWORD *)v5 = *(_QWORD *)(*((_QWORD *)v83 + 1) + 8 * v84);
                v5 += 8;
                ++v84;
                v83 = *this;
              }
              while (v84 < **this);
            }
            break;
          case 0x11:
            v48 = *this;
            if (**this >= 1)
            {
              v49 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v48 = *this;
                }
                v50 = *(_DWORD *)(*((_QWORD *)v48 + 1) + 4 * v49);
                v51 = (2 * v50) ^ (v50 >> 31);
                if (v51 > 0x7F)
                {
                  *v5 = v51 | 0x80;
                  v52 = v51 >> 7;
                  if (v51 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v52 | 0x80;
                      v53 = v52 >> 7;
                      ++v5;
                      v54 = v52 >> 14;
                      v52 >>= 7;
                    }
                    while (v54);
                    *(v5 - 1) = v53;
                  }
                  else
                  {
                    v5[1] = v52;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v51;
                }
                ++v49;
                v48 = *this;
              }
              while (v49 < **this);
            }
            break;
          case 0x12:
            v85 = *this;
            if (**this >= 1)
            {
              v86 = 0;
              do
              {
                if (*(_QWORD *)a4 <= (unint64_t)v5)
                {
                  v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v85 = *this;
                }
                v87 = *(_QWORD *)(*((_QWORD *)v85 + 1) + 8 * v86);
                v88 = (2 * v87) ^ (v87 >> 63);
                if (v88 > 0x7F)
                {
                  *v5 = v88 | 0x80;
                  v89 = v88 >> 7;
                  if (v88 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v89 | 0x80;
                      v90 = v89 >> 7;
                      ++v5;
                      v91 = v89 >> 14;
                      v89 >>= 7;
                    }
                    while (v91);
                    *(v5 - 1) = v90;
                  }
                  else
                  {
                    v5[1] = v89;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v88;
                }
                ++v86;
                v85 = *this;
              }
              while (v86 < **this);
            }
            break;
          default:
            return v5;
        }
      }
      return v5;
    }
    switch(*((_BYTE *)this + 8))
    {
      case 1:
        v16 = *this;
        if (**this >= 1)
        {
          v17 = 0;
          v18 = (8 * a2) | 1;
          v19 = (8 * a2) | 0x81;
          v20 = (a2 >> 4) & 0x1FFFFFF;
          v21 = (8 * a2) >> 7;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v16 = *this;
            }
            v22 = *(_QWORD *)(*((_QWORD *)v16 + 1) + 8 * v17);
            if (v18 > 0x7F)
            {
              *v5 = v19;
              if (v18 >= 0x4000)
              {
                v23 = v5 + 2;
                v24 = v20;
                do
                {
                  *((_BYTE *)v23 - 1) = v24 | 0x80;
                  v25 = v24 >> 7;
                  v23 = (_QWORD *)((char *)v23 + 1);
                  v26 = v24 >> 14;
                  v24 >>= 7;
                }
                while (v26);
                *((_BYTE *)v23 - 1) = v25;
              }
              else
              {
                v5[1] = v21;
                v23 = v5 + 2;
              }
            }
            else
            {
              *v5 = v18;
              v23 = v5 + 1;
            }
            *v23 = v22;
            v5 = (unsigned __int8 *)(v23 + 1);
            ++v17;
            v16 = *this;
          }
          while (v17 < **this);
        }
        return v5;
      case 2:
        v92 = *this;
        if (**this >= 1)
        {
          v93 = 0;
          v94 = (8 * a2) | 5;
          v95 = (a2 >> 4) & 0x1FFFFFF;
          v96 = (8 * a2) >> 7;
          v97 = (8 * a2) | 0x85;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v92 = *this;
            }
            v98 = *(_DWORD *)(*((_QWORD *)v92 + 1) + 4 * v93);
            if (v94 > 0x7F)
            {
              *v5 = v97;
              if (v94 >= 0x4000)
              {
                v99 = v5 + 2;
                v100 = v95;
                do
                {
                  *((_BYTE *)v99 - 1) = v100 | 0x80;
                  v101 = v100 >> 7;
                  v99 = (_DWORD *)((char *)v99 + 1);
                  v102 = v100 >> 14;
                  v100 >>= 7;
                }
                while (v102);
                *((_BYTE *)v99 - 1) = v101;
              }
              else
              {
                v5[1] = v96;
                v99 = v5 + 2;
              }
            }
            else
            {
              *v5 = v94;
              v99 = v5 + 1;
            }
            *v99 = v98;
            v5 = (unsigned __int8 *)(v99 + 1);
            ++v93;
            v92 = *this;
          }
          while (v93 < **this);
        }
        return v5;
      case 3:
        v103 = *this;
        if (**this >= 1)
        {
          v104 = 0;
          v105 = 8 * a2;
          v106 = (8 * a2) | 0x80;
          v107 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v103 = *this;
            }
            v108 = *(_QWORD *)(*((_QWORD *)v103 + 1) + 8 * v104);
            if (v105 > 0x7F)
            {
              *v5 = v106;
              if (v105 >= 0x4000)
              {
                v109 = v5 + 2;
                v110 = v107;
                do
                {
                  *(v109 - 1) = v110 | 0x80;
                  v111 = v110 >> 7;
                  ++v109;
                  v112 = v110 >> 14;
                  v110 >>= 7;
                }
                while (v112);
                *(v109 - 1) = v111;
              }
              else
              {
                v5[1] = v105 >> 7;
                v109 = v5 + 2;
              }
            }
            else
            {
              v109 = v5 + 1;
              *v5 = v105;
            }
            if (v108 > 0x7F)
            {
              *v109 = v108 | 0x80;
              v113 = v108 >> 7;
              if (v108 >> 14)
              {
                v5 = v109 + 2;
                do
                {
                  *(v5 - 1) = v113 | 0x80;
                  v114 = v113 >> 7;
                  ++v5;
                  v115 = v113 >> 14;
                  v113 >>= 7;
                }
                while (v115);
                *(v5 - 1) = v114;
              }
              else
              {
                v109[1] = v113;
                v5 = v109 + 2;
              }
            }
            else
            {
              *v109 = v108;
              v5 = v109 + 1;
            }
            ++v104;
            v103 = *this;
          }
          while (v104 < **this);
        }
        return v5;
      case 4:
        v116 = *this;
        if (**this >= 1)
        {
          v117 = 0;
          v118 = 8 * a2;
          v119 = (8 * a2) | 0x80;
          v120 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v116 = *this;
            }
            v121 = *(_QWORD *)(*((_QWORD *)v116 + 1) + 8 * v117);
            if (v118 > 0x7F)
            {
              *v5 = v119;
              if (v118 >= 0x4000)
              {
                v122 = v5 + 2;
                v123 = v120;
                do
                {
                  *(v122 - 1) = v123 | 0x80;
                  v124 = v123 >> 7;
                  ++v122;
                  v125 = v123 >> 14;
                  v123 >>= 7;
                }
                while (v125);
                *(v122 - 1) = v124;
              }
              else
              {
                v5[1] = v118 >> 7;
                v122 = v5 + 2;
              }
            }
            else
            {
              v122 = v5 + 1;
              *v5 = v118;
            }
            if (v121 > 0x7F)
            {
              *v122 = v121 | 0x80;
              v126 = v121 >> 7;
              if (v121 >> 14)
              {
                v5 = v122 + 2;
                do
                {
                  *(v5 - 1) = v126 | 0x80;
                  v127 = v126 >> 7;
                  ++v5;
                  v128 = v126 >> 14;
                  v126 >>= 7;
                }
                while (v128);
                *(v5 - 1) = v127;
              }
              else
              {
                v122[1] = v126;
                v5 = v122 + 2;
              }
            }
            else
            {
              *v122 = v121;
              v5 = v122 + 1;
            }
            ++v117;
            v116 = *this;
          }
          while (v117 < **this);
        }
        return v5;
      case 5:
        v129 = *this;
        if (**this >= 1)
        {
          v130 = 0;
          v131 = 8 * a2;
          v132 = (8 * a2) | 0x80;
          v133 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v129 = *this;
            }
            v134 = *(int *)(*((_QWORD *)v129 + 1) + 4 * v130);
            if (v131 > 0x7F)
            {
              *v5 = v132;
              if (v131 >= 0x4000)
              {
                v135 = v5 + 2;
                v136 = v133;
                do
                {
                  *(v135 - 1) = v136 | 0x80;
                  v137 = v136 >> 7;
                  ++v135;
                  v138 = v136 >> 14;
                  v136 >>= 7;
                }
                while (v138);
                *(v135 - 1) = v137;
              }
              else
              {
                v5[1] = v131 >> 7;
                v135 = v5 + 2;
              }
            }
            else
            {
              v135 = v5 + 1;
              *v5 = v131;
            }
            if (v134 > 0x7F)
            {
              *v135 = v134 | 0x80;
              v139 = v134 >> 7;
              if (v134 >> 14)
              {
                v5 = v135 + 2;
                do
                {
                  *(v5 - 1) = v139 | 0x80;
                  v140 = v139 >> 7;
                  ++v5;
                  v141 = v139 >> 14;
                  v139 >>= 7;
                }
                while (v141);
                *(v5 - 1) = v140;
              }
              else
              {
                v135[1] = v139;
                v5 = v135 + 2;
              }
            }
            else
            {
              *v135 = v134;
              v5 = v135 + 1;
            }
            ++v130;
            v129 = *this;
          }
          while (v130 < **this);
        }
        return v5;
      case 6:
        v142 = *this;
        if (**this >= 1)
        {
          v143 = 0;
          v144 = (8 * a2) | 1;
          v145 = (8 * a2) | 0x81;
          v146 = (a2 >> 4) & 0x1FFFFFF;
          v147 = (8 * a2) >> 7;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v142 = *this;
            }
            v148 = *(_QWORD *)(*((_QWORD *)v142 + 1) + 8 * v143);
            if (v144 > 0x7F)
            {
              *v5 = v145;
              if (v144 >= 0x4000)
              {
                v149 = v5 + 2;
                v150 = v146;
                do
                {
                  *((_BYTE *)v149 - 1) = v150 | 0x80;
                  v151 = v150 >> 7;
                  v149 = (_QWORD *)((char *)v149 + 1);
                  v152 = v150 >> 14;
                  v150 >>= 7;
                }
                while (v152);
                *((_BYTE *)v149 - 1) = v151;
              }
              else
              {
                v5[1] = v147;
                v149 = v5 + 2;
              }
            }
            else
            {
              *v5 = v144;
              v149 = v5 + 1;
            }
            *v149 = v148;
            v5 = (unsigned __int8 *)(v149 + 1);
            ++v143;
            v142 = *this;
          }
          while (v143 < **this);
        }
        return v5;
      case 7:
        v153 = *this;
        if (**this >= 1)
        {
          v154 = 0;
          v155 = (8 * a2) | 5;
          v156 = (a2 >> 4) & 0x1FFFFFF;
          v157 = (8 * a2) >> 7;
          v158 = (8 * a2) | 0x85;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v153 = *this;
            }
            v159 = *(_DWORD *)(*((_QWORD *)v153 + 1) + 4 * v154);
            if (v155 > 0x7F)
            {
              *v5 = v158;
              if (v155 >= 0x4000)
              {
                v160 = v5 + 2;
                v161 = v156;
                do
                {
                  *((_BYTE *)v160 - 1) = v161 | 0x80;
                  v162 = v161 >> 7;
                  v160 = (_DWORD *)((char *)v160 + 1);
                  v163 = v161 >> 14;
                  v161 >>= 7;
                }
                while (v163);
                *((_BYTE *)v160 - 1) = v162;
              }
              else
              {
                v5[1] = v157;
                v160 = v5 + 2;
              }
            }
            else
            {
              *v5 = v155;
              v160 = v5 + 1;
            }
            *v160 = v159;
            v5 = (unsigned __int8 *)(v160 + 1);
            ++v154;
            v153 = *this;
          }
          while (v154 < **this);
        }
        return v5;
      case 8:
        v164 = *this;
        if (**this >= 1)
        {
          v165 = 0;
          v166 = 8 * a2;
          v167 = (8 * a2) | 0x80;
          v168 = (a2 >> 4) & 0x1FFFFFF;
          v169 = (8 * a2) >> 7;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v164 = *this;
            }
            v170 = *(_BYTE *)(*((_QWORD *)v164 + 1) + v165);
            if (v166 > 0x7F)
            {
              *v5 = v167;
              if (v166 >= 0x4000)
              {
                v171 = v5 + 2;
                v172 = v168;
                do
                {
                  *(v171 - 1) = v172 | 0x80;
                  v173 = v172 >> 7;
                  ++v171;
                  v174 = v172 >> 14;
                  v172 >>= 7;
                }
                while (v174);
                *(v171 - 1) = v173;
              }
              else
              {
                v5[1] = v169;
                v171 = v5 + 2;
              }
            }
            else
            {
              *v5 = v166;
              v171 = v5 + 1;
            }
            *v171 = v170;
            v5 = v171 + 1;
            ++v165;
            v164 = *this;
          }
          while (v165 < **this);
        }
        return v5;
      case 9:
        v175 = *this;
        if ((*this)[2] < 1)
          return v5;
        v176 = 0;
        v177 = 8 * a2;
        v178 = 4;
        if (((a2 >> 25) & 0xF) != 0)
          v178 = 5;
        v179 = (8 * a2) | 2;
        v180 = (8 * a2) | 0x82;
        v181 = 1;
        if (v177 >= 0x80)
          v181 = 2;
        if (v177 < 0x200000)
          v178 = 3;
        if (v177 >= 0x4000)
          v182 = v178;
        else
          v182 = v181;
        v418 = v177 >> 7;
        v420 = (a2 >> 4) & 0x1FFFFFF;
        while (1)
        {
          if (*(_QWORD *)a4 <= (unint64_t)v5)
          {
            v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
            v175 = *this;
          }
          v183 = *(_QWORD **)(*((_QWORD *)v175 + 2) + 8 * v176 + 8);
          if (*((char *)v183 + 23) < 0)
          {
            v184 = v183[1];
            if (v184 > 127)
              goto LABEL_320;
          }
          else
          {
            v184 = *((unsigned __int8 *)v183 + 23);
          }
          if (*(_QWORD *)a4 - (_QWORD)&v5[v182] + 15 >= v184)
          {
            if (v179 > 0x7F)
            {
              *v5 = v180;
              if (v179 >= 0x4000)
              {
                v185 = v5 + 2;
                v186 = v420;
                do
                {
                  *(v185 - 1) = v186 | 0x80;
                  v187 = v186 >> 7;
                  ++v185;
                  v188 = v186 >> 14;
                  v186 >>= 7;
                }
                while (v188);
                *(v185 - 1) = v187;
              }
              else
              {
                v5[1] = v418;
                v185 = v5 + 2;
              }
            }
            else
            {
              v185 = v5 + 1;
              *v5 = v179;
            }
            *v185 = v184;
            v189 = v185 + 1;
            if (*((char *)v183 + 23) < 0)
              v183 = (_QWORD *)*v183;
            memcpy(v189, v183, v184);
            v5 = (unsigned __int8 *)&v189[v184];
            goto LABEL_318;
          }
LABEL_320:
          v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v183, v5);
LABEL_318:
          ++v176;
          v175 = *this;
          if (v176 >= (*this)[2])
            return v5;
        }
      case 0xA:
        v190 = *this;
        if ((*this)[2] >= 1)
        {
          v191 = 0;
          v192 = (8 * a2) | 3;
          v193 = (8 * a2) | 0x83;
          v194 = (a2 >> 4) & 0x1FFFFFF;
          v195 = (8 * a2) | 4;
          v196 = (8 * a2) >> 7;
          v197 = (8 * a2) | 0x84;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v190 = *this;
            }
            v198 = *(_QWORD *)(*((_QWORD *)v190 + 2) + 8 * v191 + 8);
            if (v192 > 0x7F)
            {
              *v5 = v193;
              if (v192 >= 0x4000)
              {
                v199 = v5 + 2;
                v200 = v194;
                do
                {
                  *(v199 - 1) = v200 | 0x80;
                  v201 = v200 >> 7;
                  ++v199;
                  v202 = v200 >> 14;
                  v200 >>= 7;
                }
                while (v202);
                *(v199 - 1) = v201;
              }
              else
              {
                v5[1] = v196;
                v199 = v5 + 2;
              }
            }
            else
            {
              v199 = v5 + 1;
              *v5 = v192;
            }
            v203 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v198 + 96))(v198, v199, a4);
            if (*(_QWORD *)a4 <= (unint64_t)v203)
              v203 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v203);
            if (v195 > 0x7F)
            {
              *v203 = v197;
              if (v195 >= 0x4000)
              {
                v5 = v203 + 2;
                v204 = v194;
                do
                {
                  *(v5 - 1) = v204 | 0x80;
                  v205 = v204 >> 7;
                  ++v5;
                  v206 = v204 >> 14;
                  v204 >>= 7;
                }
                while (v206);
                *(v5 - 1) = v205;
              }
              else
              {
                v203[1] = v196;
                v5 = v203 + 2;
              }
            }
            else
            {
              v5 = v203 + 1;
              *v203 = v195;
            }
            ++v191;
            v190 = *this;
          }
          while (v191 < (*this)[2]);
        }
        return v5;
      case 0xB:
        v207 = *this;
        if ((*this)[2] >= 1)
        {
          v208 = 0;
          v209 = (8 * a2) | 2;
          v210 = (a2 >> 4) & 0x1FFFFFF;
          v211 = (8 * a2) >> 7;
          v212 = (8 * a2) | 0x82;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v207 = *this;
            }
            v213 = *(_QWORD *)(*((_QWORD *)v207 + 2) + 8 * v208 + 8);
            if (v209 > 0x7F)
            {
              *v5 = v212;
              if (v209 >= 0x4000)
              {
                v214 = v5 + 2;
                v215 = v210;
                do
                {
                  *(v214 - 1) = v215 | 0x80;
                  v216 = v215 >> 7;
                  ++v214;
                  v217 = v215 >> 14;
                  v215 >>= 7;
                }
                while (v217);
                *(v214 - 1) = v216;
              }
              else
              {
                v5[1] = v211;
                v214 = v5 + 2;
              }
            }
            else
            {
              v214 = v5 + 1;
              *v5 = v209;
            }
            v218 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v213 + 80))(v213);
            if (v218 > 0x7F)
            {
              *v214 = v218 | 0x80;
              v220 = v218 >> 7;
              if (v218 >> 14)
              {
                v219 = v214 + 2;
                do
                {
                  *(v219 - 1) = v220 | 0x80;
                  v221 = v220 >> 7;
                  ++v219;
                  v222 = v220 >> 14;
                  v220 >>= 7;
                }
                while (v222);
                *(v219 - 1) = v221;
              }
              else
              {
                v214[1] = v220;
                v219 = v214 + 2;
              }
            }
            else
            {
              *v214 = v218;
              v219 = v214 + 1;
            }
            v5 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, _BYTE *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v213 + 96))(v213, v219, a4);
            ++v208;
            v207 = *this;
          }
          while (v208 < (*this)[2]);
        }
        return v5;
      case 0xC:
        v223 = *this;
        if ((*this)[2] < 1)
          return v5;
        v224 = 0;
        v225 = 8 * a2;
        v226 = 4;
        if (((a2 >> 25) & 0xF) != 0)
          v226 = 5;
        v227 = (8 * a2) | 2;
        v228 = (8 * a2) | 0x82;
        v229 = 1;
        if (v225 >= 0x80)
          v229 = 2;
        if (v225 < 0x200000)
          v226 = 3;
        if (v225 >= 0x4000)
          v230 = v226;
        else
          v230 = v229;
        v419 = v225 >> 7;
        v421 = (a2 >> 4) & 0x1FFFFFF;
        break;
      case 0xD:
        v238 = *this;
        if (**this >= 1)
        {
          v239 = 0;
          v240 = 8 * a2;
          v241 = (8 * a2) | 0x80;
          v242 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v238 = *this;
            }
            v243 = *(_DWORD *)(*((_QWORD *)v238 + 1) + 4 * v239);
            if (v240 > 0x7F)
            {
              *v5 = v241;
              if (v240 >= 0x4000)
              {
                v244 = v5 + 2;
                v245 = v242;
                do
                {
                  *(v244 - 1) = v245 | 0x80;
                  v246 = v245 >> 7;
                  ++v244;
                  v247 = v245 >> 14;
                  v245 >>= 7;
                }
                while (v247);
                *(v244 - 1) = v246;
              }
              else
              {
                v5[1] = v240 >> 7;
                v244 = v5 + 2;
              }
            }
            else
            {
              v244 = v5 + 1;
              *v5 = v240;
            }
            if (v243 > 0x7F)
            {
              *v244 = v243 | 0x80;
              v248 = v243 >> 7;
              if (v243 >> 14)
              {
                v5 = v244 + 2;
                do
                {
                  *(v5 - 1) = v248 | 0x80;
                  v249 = v248 >> 7;
                  ++v5;
                  v250 = v248 >> 14;
                  v248 >>= 7;
                }
                while (v250);
                *(v5 - 1) = v249;
              }
              else
              {
                v244[1] = v248;
                v5 = v244 + 2;
              }
            }
            else
            {
              *v244 = v243;
              v5 = v244 + 1;
            }
            ++v239;
            v238 = *this;
          }
          while (v239 < **this);
        }
        return v5;
      case 0xE:
        v251 = *this;
        if (**this >= 1)
        {
          v252 = 0;
          v253 = 8 * a2;
          v254 = (8 * a2) | 0x80;
          v255 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v251 = *this;
            }
            v256 = *(int *)(*((_QWORD *)v251 + 1) + 4 * v252);
            if (v253 > 0x7F)
            {
              *v5 = v254;
              if (v253 >= 0x4000)
              {
                v257 = v5 + 2;
                v258 = v255;
                do
                {
                  *(v257 - 1) = v258 | 0x80;
                  v259 = v258 >> 7;
                  ++v257;
                  v260 = v258 >> 14;
                  v258 >>= 7;
                }
                while (v260);
                *(v257 - 1) = v259;
              }
              else
              {
                v5[1] = v253 >> 7;
                v257 = v5 + 2;
              }
            }
            else
            {
              v257 = v5 + 1;
              *v5 = v253;
            }
            if (v256 > 0x7F)
            {
              *v257 = v256 | 0x80;
              v261 = v256 >> 7;
              if (v256 >> 14)
              {
                v5 = v257 + 2;
                do
                {
                  *(v5 - 1) = v261 | 0x80;
                  v262 = v261 >> 7;
                  ++v5;
                  v263 = v261 >> 14;
                  v261 >>= 7;
                }
                while (v263);
                *(v5 - 1) = v262;
              }
              else
              {
                v257[1] = v261;
                v5 = v257 + 2;
              }
            }
            else
            {
              *v257 = v256;
              v5 = v257 + 1;
            }
            ++v252;
            v251 = *this;
          }
          while (v252 < **this);
        }
        return v5;
      case 0xF:
        v264 = *this;
        if (**this >= 1)
        {
          v265 = 0;
          v266 = (8 * a2) | 5;
          v267 = (a2 >> 4) & 0x1FFFFFF;
          v268 = (8 * a2) >> 7;
          v269 = (8 * a2) | 0x85;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v264 = *this;
            }
            v270 = *(_DWORD *)(*((_QWORD *)v264 + 1) + 4 * v265);
            if (v266 > 0x7F)
            {
              *v5 = v269;
              if (v266 >= 0x4000)
              {
                v271 = v5 + 2;
                v272 = v267;
                do
                {
                  *((_BYTE *)v271 - 1) = v272 | 0x80;
                  v273 = v272 >> 7;
                  v271 = (_DWORD *)((char *)v271 + 1);
                  v274 = v272 >> 14;
                  v272 >>= 7;
                }
                while (v274);
                *((_BYTE *)v271 - 1) = v273;
              }
              else
              {
                v5[1] = v268;
                v271 = v5 + 2;
              }
            }
            else
            {
              *v5 = v266;
              v271 = v5 + 1;
            }
            *v271 = v270;
            v5 = (unsigned __int8 *)(v271 + 1);
            ++v265;
            v264 = *this;
          }
          while (v265 < **this);
        }
        return v5;
      case 0x10:
        v275 = *this;
        if (**this >= 1)
        {
          v276 = 0;
          v277 = (8 * a2) | 1;
          v278 = (8 * a2) | 0x81;
          v279 = (a2 >> 4) & 0x1FFFFFF;
          v280 = (8 * a2) >> 7;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v275 = *this;
            }
            v281 = *(_QWORD *)(*((_QWORD *)v275 + 1) + 8 * v276);
            if (v277 > 0x7F)
            {
              *v5 = v278;
              if (v277 >= 0x4000)
              {
                v282 = v5 + 2;
                v283 = v279;
                do
                {
                  *((_BYTE *)v282 - 1) = v283 | 0x80;
                  v284 = v283 >> 7;
                  v282 = (_QWORD *)((char *)v282 + 1);
                  v285 = v283 >> 14;
                  v283 >>= 7;
                }
                while (v285);
                *((_BYTE *)v282 - 1) = v284;
              }
              else
              {
                v5[1] = v280;
                v282 = v5 + 2;
              }
            }
            else
            {
              *v5 = v277;
              v282 = v5 + 1;
            }
            *v282 = v281;
            v5 = (unsigned __int8 *)(v282 + 1);
            ++v276;
            v275 = *this;
          }
          while (v276 < **this);
        }
        return v5;
      case 0x11:
        v286 = *this;
        if (**this >= 1)
        {
          v287 = 0;
          v288 = 8 * a2;
          v289 = (8 * a2) | 0x80;
          v290 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v286 = *this;
            }
            v291 = *(_DWORD *)(*((_QWORD *)v286 + 1) + 4 * v287);
            if (v288 > 0x7F)
            {
              *v5 = v289;
              if (v288 >= 0x4000)
              {
                v292 = v5 + 2;
                v293 = v290;
                do
                {
                  *(v292 - 1) = v293 | 0x80;
                  v294 = v293 >> 7;
                  ++v292;
                  v295 = v293 >> 14;
                  v293 >>= 7;
                }
                while (v295);
                *(v292 - 1) = v294;
              }
              else
              {
                v5[1] = v288 >> 7;
                v292 = v5 + 2;
              }
            }
            else
            {
              v292 = v5 + 1;
              *v5 = v288;
            }
            v296 = (2 * v291) ^ (v291 >> 31);
            if (v296 > 0x7F)
            {
              *v292 = v296 | 0x80;
              v297 = v296 >> 7;
              if (v296 >> 14)
              {
                v5 = v292 + 2;
                do
                {
                  *(v5 - 1) = v297 | 0x80;
                  v298 = v297 >> 7;
                  ++v5;
                  v299 = v297 >> 14;
                  v297 >>= 7;
                }
                while (v299);
                *(v5 - 1) = v298;
              }
              else
              {
                v292[1] = v297;
                v5 = v292 + 2;
              }
            }
            else
            {
              *v292 = v296;
              v5 = v292 + 1;
            }
            ++v287;
            v286 = *this;
          }
          while (v287 < **this);
        }
        return v5;
      case 0x12:
        v300 = *this;
        if (**this >= 1)
        {
          v301 = 0;
          v302 = 8 * a2;
          v303 = (8 * a2) | 0x80;
          v304 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(_QWORD *)a4 <= (unint64_t)v5)
            {
              v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v300 = *this;
            }
            v305 = *(_QWORD *)(*((_QWORD *)v300 + 1) + 8 * v301);
            if (v302 > 0x7F)
            {
              *v5 = v303;
              if (v302 >= 0x4000)
              {
                v306 = v5 + 2;
                v307 = v304;
                do
                {
                  *(v306 - 1) = v307 | 0x80;
                  v308 = v307 >> 7;
                  ++v306;
                  v309 = v307 >> 14;
                  v307 >>= 7;
                }
                while (v309);
                *(v306 - 1) = v308;
              }
              else
              {
                v5[1] = v302 >> 7;
                v306 = v5 + 2;
              }
            }
            else
            {
              v306 = v5 + 1;
              *v5 = v302;
            }
            v310 = (2 * v305) ^ (v305 >> 63);
            if (v310 > 0x7F)
            {
              *v306 = v310 | 0x80;
              v311 = v310 >> 7;
              if (v310 >> 14)
              {
                v5 = v306 + 2;
                do
                {
                  *(v5 - 1) = v311 | 0x80;
                  v312 = v311 >> 7;
                  ++v5;
                  v313 = v311 >> 14;
                  v311 >>= 7;
                }
                while (v313);
                *(v5 - 1) = v312;
              }
              else
              {
                v306[1] = v311;
                v5 = v306 + 2;
              }
            }
            else
            {
              *v306 = v310;
              v5 = v306 + 1;
            }
            ++v301;
            v300 = *this;
          }
          while (v301 < **this);
        }
        return v5;
      default:
        return v5;
    }
    while (1)
    {
      if (*(_QWORD *)a4 <= (unint64_t)v5)
      {
        v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
        v223 = *this;
      }
      v231 = *(_QWORD **)(*((_QWORD *)v223 + 2) + 8 * v224 + 8);
      if (*((char *)v231 + 23) < 0)
      {
        v232 = v231[1];
        if (v232 > 127)
          goto LABEL_392;
      }
      else
      {
        v232 = *((unsigned __int8 *)v231 + 23);
      }
      if (*(_QWORD *)a4 - (_QWORD)&v5[v230] + 15 >= v232)
      {
        if (v227 > 0x7F)
        {
          *v5 = v228;
          if (v227 >= 0x4000)
          {
            v233 = v5 + 2;
            v234 = v421;
            do
            {
              *(v233 - 1) = v234 | 0x80;
              v235 = v234 >> 7;
              ++v233;
              v236 = v234 >> 14;
              v234 >>= 7;
            }
            while (v236);
            *(v233 - 1) = v235;
          }
          else
          {
            v5[1] = v419;
            v233 = v5 + 2;
          }
        }
        else
        {
          v233 = v5 + 1;
          *v5 = v227;
        }
        *v233 = v232;
        v237 = v233 + 1;
        if (*((char *)v231 + 23) < 0)
          v231 = (_QWORD *)*v231;
        memcpy(v237, v231, v232);
        v5 = (unsigned __int8 *)&v237[v232];
        goto LABEL_390;
      }
LABEL_392:
      v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v231, v5);
LABEL_390:
      ++v224;
      v223 = *this;
      if (v224 >= (*this)[2])
        return v5;
    }
  }
  if ((*((_BYTE *)this + 10) & 1) == 0)
  {
    switch(*((_BYTE *)this + 8))
    {
      case 1:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v10 = *this;
        v11 = (8 * a2) | 1;
        if (v11 <= 0x7F)
          goto LABEL_568;
        *v5 = (8 * a2) | 0x81;
        v12 = (8 * a2) >> 7;
        if (!(v11 >> 14))
          goto LABEL_595;
        v13 = (int **)(v5 + 2);
        do
        {
          *((_BYTE *)v13 - 1) = v12 | 0x80;
          v14 = v12 >> 7;
          v13 = (int **)((char *)v13 + 1);
          v15 = v12 >> 14;
          v12 >>= 7;
        }
        while (v15);
        goto LABEL_686;
      case 2:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v314 = *(_DWORD *)this;
        v315 = (8 * a2) | 5;
        if (v315 <= 0x7F)
          goto LABEL_564;
        *v5 = (8 * a2) | 0x85;
        v316 = (8 * a2) >> 7;
        if (!(v315 >> 14))
          goto LABEL_593;
        v317 = (unsigned int *)(v5 + 2);
        do
        {
          *((_BYTE *)v317 - 1) = v316 | 0x80;
          v318 = v316 >> 7;
          v317 = (unsigned int *)((char *)v317 + 1);
          v319 = v316 >> 14;
          v316 >>= 7;
        }
        while (v319);
        goto LABEL_682;
      case 3:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v320 = (unint64_t)*this;
        v321 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v321 | 0x80;
          v345 = v321 >> 7;
          if (v321 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v345 | 0x80;
              v370 = v345 >> 7;
              ++v322;
              v371 = v345 >> 14;
              v345 >>= 7;
            }
            while (v371);
            *(v322 - 1) = v370;
          }
          else
          {
            v5[1] = v345;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v321;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F)
          goto LABEL_677;
        *v322 = v320 | 0x80;
        v372 = v320 >> 7;
        if (!(v320 >> 14))
          goto LABEL_679;
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v372 | 0x80;
          v373 = v372 >> 7;
          ++v5;
          v374 = v372 >> 14;
          v372 >>= 7;
        }
        while (v374);
        goto LABEL_711;
      case 4:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v320 = (unint64_t)*this;
        v323 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v323 | 0x80;
          v346 = v323 >> 7;
          if (v323 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v346 | 0x80;
              v375 = v346 >> 7;
              ++v322;
              v376 = v346 >> 14;
              v346 >>= 7;
            }
            while (v376);
            *(v322 - 1) = v375;
          }
          else
          {
            v5[1] = v346;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v323;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F)
          goto LABEL_677;
        *v322 = v320 | 0x80;
        v372 = v320 >> 7;
        if (!(v320 >> 14))
          goto LABEL_679;
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v372 | 0x80;
          v373 = v372 >> 7;
          ++v5;
          v377 = v372 >> 14;
          v372 >>= 7;
        }
        while (v377);
        goto LABEL_711;
      case 5:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v320 = *(int *)this;
        v324 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v324 | 0x80;
          v347 = v324 >> 7;
          if (v324 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v347 | 0x80;
              v378 = v347 >> 7;
              ++v322;
              v379 = v347 >> 14;
              v347 >>= 7;
            }
            while (v379);
            *(v322 - 1) = v378;
          }
          else
          {
            v5[1] = v347;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v324;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F)
          goto LABEL_677;
        *v322 = v320 | 0x80;
        v372 = v320 >> 7;
        if (!(v320 >> 14))
          goto LABEL_679;
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v372 | 0x80;
          v373 = v372 >> 7;
          ++v5;
          v380 = v372 >> 14;
          v372 >>= 7;
        }
        while (v380);
        goto LABEL_711;
      case 6:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v10 = *this;
        v11 = (8 * a2) | 1;
        if (v11 <= 0x7F)
          goto LABEL_568;
        *v5 = (8 * a2) | 0x81;
        v12 = (8 * a2) >> 7;
        if (!(v11 >> 14))
          goto LABEL_595;
        v13 = (int **)(v5 + 2);
        do
        {
          *((_BYTE *)v13 - 1) = v12 | 0x80;
          v14 = v12 >> 7;
          v13 = (int **)((char *)v13 + 1);
          v325 = v12 >> 14;
          v12 >>= 7;
        }
        while (v325);
        goto LABEL_686;
      case 7:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v314 = *(_DWORD *)this;
        v315 = (8 * a2) | 5;
        if (v315 <= 0x7F)
          goto LABEL_564;
        *v5 = (8 * a2) | 0x85;
        v316 = (8 * a2) >> 7;
        if (!(v315 >> 14))
          goto LABEL_593;
        v317 = (unsigned int *)(v5 + 2);
        do
        {
          *((_BYTE *)v317 - 1) = v316 | 0x80;
          v318 = v316 >> 7;
          v317 = (unsigned int *)((char *)v317 + 1);
          v326 = v316 >> 14;
          v316 >>= 7;
        }
        while (v326);
        goto LABEL_682;
      case 8:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        LOBYTE(v327) = *(_BYTE *)this;
        v328 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v328 | 0x80;
          v348 = v328 >> 7;
          if (v328 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v348 | 0x80;
              v381 = v348 >> 7;
              ++v322;
              v382 = v348 >> 14;
              v348 >>= 7;
            }
            while (v382);
            *(v322 - 1) = v381;
          }
          else
          {
            v5[1] = v348;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v328;
          v322 = v5 + 1;
        }
        goto LABEL_670;
      case 9:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v329 = *this;
        if (*((char *)*this + 23) < 0)
        {
          v330 = *((_QWORD *)v329 + 1);
          if (v330 > 127)
            return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v329, v5);
        }
        else
        {
          v330 = *((unsigned __int8 *)*this + 23);
        }
        v354 = 8 * a2;
        v355 = 1;
        v356 = 2;
        v357 = 3;
        v358 = 4;
        if ((8 * a2) >> 28)
          v358 = 5;
        if (v354 >= 0x200000)
          v357 = v358;
        if (v354 >= 0x4000)
          v356 = v357;
        if (v354 >= 0x80)
          v355 = v356;
        if ((uint64_t)(*(_QWORD *)a4 + ~(unint64_t)&v5[v355] + 16) < v330)
          return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v329, v5);
        v359 = v354 | 2;
        if ((v354 | 2) <= 0x7F)
          goto LABEL_626;
        *v5 = v354 | 0x82;
        v360 = v354 >> 7;
        if (!(v359 >> 14))
          goto LABEL_628;
        v361 = v5 + 2;
        do
        {
          *(v361 - 1) = v360 | 0x80;
          v362 = v360 >> 7;
          ++v361;
          v363 = v360 >> 14;
          v360 >>= 7;
        }
        while (v363);
        goto LABEL_720;
      case 0xA:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v331 = *this;
        v332 = 8 * a2;
        v333 = (8 * a2) | 3;
        v334 = (8 * a2) >> 7;
        if (v333 > 0x7F)
        {
          *v5 = (8 * a2) | 0x83;
          if (v333 >> 14)
          {
            v335 = v5 + 2;
            v383 = v332 >> 7;
            do
            {
              *(v335 - 1) = v383 | 0x80;
              v384 = v383 >> 7;
              ++v335;
              v385 = v383 >> 14;
              v383 >>= 7;
            }
            while (v385);
            *(v335 - 1) = v384;
          }
          else
          {
            v5[1] = v334;
            v335 = v5 + 2;
          }
        }
        else
        {
          *v5 = v333;
          v335 = v5 + 1;
        }
        v322 = (unsigned __int8 *)(*(uint64_t (**)(int *, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v331 + 96))(v331, v335, a4);
        if (*(_QWORD *)a4 <= (unint64_t)v322)
          v322 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v322);
        v327 = v332 | 4;
        if ((v332 | 4) <= 0x7F)
          goto LABEL_670;
        *v322 = v332 | 0x84;
        if (!(v327 >> 14))
        {
          v322[1] = v334;
          return v322 + 2;
        }
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v334 | 0x80;
          v401 = v334 >> 7;
          ++v5;
          v402 = v334 >> 14;
          v334 >>= 7;
        }
        while (v402);
        goto LABEL_708;
      case 0xB:
        if ((*((_BYTE *)this + 10) & 0x10) != 0)
          return (unsigned __int8 *)(*(uint64_t (**)(void))(*(_QWORD *)*this + 136))();
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v336 = *this;
        v337 = (8 * a2) | 2;
        if (v337 > 0x7F)
        {
          *v5 = (8 * a2) | 0x82;
          v369 = (8 * a2) >> 7;
          if (v337 >> 14)
          {
            v338 = v5 + 2;
            do
            {
              *(v338 - 1) = v369 | 0x80;
              v411 = v369 >> 7;
              ++v338;
              v412 = v369 >> 14;
              v369 >>= 7;
            }
            while (v412);
            *(v338 - 1) = v411;
          }
          else
          {
            v5[1] = v369;
            v338 = v5 + 2;
          }
        }
        else
        {
          *v5 = v337;
          v338 = v5 + 1;
        }
        v413 = (*(uint64_t (**)(int *))(*(_QWORD *)v336 + 80))(v336);
        if (v413 > 0x7F)
        {
          *v338 = v413 | 0x80;
          v415 = v413 >> 7;
          if (v413 >> 14)
          {
            v414 = v338 + 2;
            do
            {
              *(v414 - 1) = v415 | 0x80;
              v416 = v415 >> 7;
              ++v414;
              v417 = v415 >> 14;
              v415 >>= 7;
            }
            while (v417);
            *(v414 - 1) = v416;
          }
          else
          {
            v338[1] = v415;
            v414 = v338 + 2;
          }
        }
        else
        {
          *v338 = v413;
          v414 = v338 + 1;
        }
        return (unsigned __int8 *)(*(uint64_t (**)(int *, _BYTE *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v336 + 96))(v336, v414, a4);
      case 0xC:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v329 = *this;
        if (*((char *)*this + 23) < 0)
        {
          v330 = *((_QWORD *)v329 + 1);
          if (v330 > 127)
            return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v329, v5);
        }
        else
        {
          v330 = *((unsigned __int8 *)*this + 23);
        }
        v364 = 8 * a2;
        v365 = 1;
        v366 = 2;
        v367 = 3;
        v368 = 4;
        if ((8 * a2) >> 28)
          v368 = 5;
        if (v364 >= 0x200000)
          v367 = v368;
        if (v364 >= 0x4000)
          v366 = v367;
        if (v364 >= 0x80)
          v365 = v366;
        if ((uint64_t)(*(_QWORD *)a4 + ~(unint64_t)&v5[v365] + 16) >= v330)
        {
          v359 = v364 | 2;
          if ((v364 | 2) > 0x7F)
          {
            *v5 = v364 | 0x82;
            v360 = v364 >> 7;
            if (v359 >> 14)
            {
              v361 = v5 + 2;
              do
              {
                *(v361 - 1) = v360 | 0x80;
                v362 = v360 >> 7;
                ++v361;
                v409 = v360 >> 14;
                v360 >>= 7;
              }
              while (v409);
LABEL_720:
              *(v361 - 1) = v362;
            }
            else
            {
LABEL_628:
              v5[1] = v360;
              v361 = v5 + 2;
            }
          }
          else
          {
LABEL_626:
            *v5 = v359;
            v361 = v5 + 1;
          }
          *v361 = v330;
          v410 = v361 + 1;
          if (*((char *)v329 + 23) < 0)
            v329 = *(int **)v329;
          memcpy(v410, v329, v330);
          return (unsigned __int8 *)&v410[v330];
        }
        return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v329, v5);
      case 0xD:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v327 = *(_DWORD *)this;
        v339 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v339 | 0x80;
          v350 = v339 >> 7;
          if (v339 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v350 | 0x80;
              v386 = v350 >> 7;
              ++v322;
              v387 = v350 >> 14;
              v350 >>= 7;
            }
            while (v387);
            *(v322 - 1) = v386;
          }
          else
          {
            v5[1] = v350;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v339;
          v322 = v5 + 1;
        }
        if (v327 <= 0x7F)
        {
LABEL_670:
          *v322 = v327;
          return v322 + 1;
        }
        *v322 = v327 | 0x80;
        v388 = v327 >> 7;
        if (!(v327 >> 14))
        {
          v322[1] = v388;
          return v322 + 2;
        }
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v388 | 0x80;
          v401 = v388 >> 7;
          ++v5;
          v403 = v388 >> 14;
          v388 >>= 7;
        }
        while (v403);
LABEL_708:
        *(v5 - 1) = v401;
        return v5;
      case 0xE:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v320 = *(int *)this;
        v340 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v340 | 0x80;
          v351 = v340 >> 7;
          if (v340 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v351 | 0x80;
              v389 = v351 >> 7;
              ++v322;
              v390 = v351 >> 14;
              v351 >>= 7;
            }
            while (v390);
            *(v322 - 1) = v389;
          }
          else
          {
            v5[1] = v351;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v340;
          v322 = v5 + 1;
        }
        if (v320 <= 0x7F)
        {
LABEL_677:
          *v322 = v320;
          return v322 + 1;
        }
        *v322 = v320 | 0x80;
        v372 = v320 >> 7;
        if (!(v320 >> 14))
        {
LABEL_679:
          v322[1] = v372;
          return v322 + 2;
        }
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v372 | 0x80;
          v373 = v372 >> 7;
          ++v5;
          v404 = v372 >> 14;
          v372 >>= 7;
        }
        while (v404);
LABEL_711:
        *(v5 - 1) = v373;
        return v5;
      case 0xF:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v314 = *(_DWORD *)this;
        v315 = (8 * a2) | 5;
        if (v315 > 0x7F)
        {
          *v5 = (8 * a2) | 0x85;
          v316 = (8 * a2) >> 7;
          if (v315 >> 14)
          {
            v317 = (unsigned int *)(v5 + 2);
            do
            {
              *((_BYTE *)v317 - 1) = v316 | 0x80;
              v318 = v316 >> 7;
              v317 = (unsigned int *)((char *)v317 + 1);
              v391 = v316 >> 14;
              v316 >>= 7;
            }
            while (v391);
LABEL_682:
            *((_BYTE *)v317 - 1) = v318;
          }
          else
          {
LABEL_593:
            v5[1] = v316;
            v317 = (unsigned int *)(v5 + 2);
          }
        }
        else
        {
LABEL_564:
          *v5 = v315;
          v317 = (unsigned int *)(v5 + 1);
        }
        *v317 = v314;
        return (unsigned __int8 *)(v317 + 1);
      case 0x10:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v10 = *this;
        v11 = (8 * a2) | 1;
        if (v11 > 0x7F)
        {
          *v5 = (8 * a2) | 0x81;
          v12 = (8 * a2) >> 7;
          if (v11 >> 14)
          {
            v13 = (int **)(v5 + 2);
            do
            {
              *((_BYTE *)v13 - 1) = v12 | 0x80;
              v14 = v12 >> 7;
              v13 = (int **)((char *)v13 + 1);
              v392 = v12 >> 14;
              v12 >>= 7;
            }
            while (v392);
LABEL_686:
            *((_BYTE *)v13 - 1) = v14;
          }
          else
          {
LABEL_595:
            v5[1] = v12;
            v13 = (int **)(v5 + 2);
          }
        }
        else
        {
LABEL_568:
          *v5 = v11;
          v13 = (int **)(v5 + 1);
        }
        *v13 = v10;
        return (unsigned __int8 *)(v13 + 1);
      case 0x11:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v341 = *(_DWORD *)this;
        v342 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v342 | 0x80;
          v352 = v342 >> 7;
          if (v342 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v352 | 0x80;
              v393 = v352 >> 7;
              ++v322;
              v394 = v352 >> 14;
              v352 >>= 7;
            }
            while (v394);
            *(v322 - 1) = v393;
          }
          else
          {
            v5[1] = v352;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v342;
          v322 = v5 + 1;
        }
        v395 = (2 * v341) ^ (v341 >> 31);
        if (v395 <= 0x7F)
        {
          *v322 = v395;
          return v322 + 1;
        }
        *v322 = v395 | 0x80;
        v396 = v395 >> 7;
        if (!(v395 >> 14))
        {
          v322[1] = v396;
          return v322 + 2;
        }
        v5 = v322 + 2;
        do
        {
          *(v5 - 1) = v396 | 0x80;
          v405 = v396 >> 7;
          ++v5;
          v406 = v396 >> 14;
          v396 >>= 7;
        }
        while (v406);
        *(v5 - 1) = v405;
        return v5;
      case 0x12:
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v343 = (uint64_t)*this;
        v344 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *v5 = v344 | 0x80;
          v353 = v344 >> 7;
          if (v344 >> 14)
          {
            v322 = v5 + 2;
            do
            {
              *(v322 - 1) = v353 | 0x80;
              v397 = v353 >> 7;
              ++v322;
              v398 = v353 >> 14;
              v353 >>= 7;
            }
            while (v398);
            *(v322 - 1) = v397;
          }
          else
          {
            v5[1] = v353;
            v322 = v5 + 2;
          }
        }
        else
        {
          *v5 = v344;
          v322 = v5 + 1;
        }
        v399 = (2 * v343) ^ (v343 >> 63);
        if (v399 > 0x7F)
        {
          *v322 = v399 | 0x80;
          v400 = v399 >> 7;
          if (v399 >> 14)
          {
            v5 = v322 + 2;
            do
            {
              *(v5 - 1) = v400 | 0x80;
              v407 = v400 >> 7;
              ++v5;
              v408 = v400 >> 14;
              v400 >>= 7;
            }
            while (v408);
            *(v5 - 1) = v407;
          }
          else
          {
            v322[1] = v400;
            return v322 + 2;
          }
        }
        else
        {
          *v322 = v399;
          return v322 + 1;
        }
        return v5;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_188869024(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::ExtensionSet::ByteSize(google::protobuf::internal::ExtensionSet *this)
{
  int *v1;
  uint64_t v2;
  int *v3;
  uint64_t **v4;
  int v5;
  int *v6;
  int *v7;
  int *v8;
  unint64_t v9;
  int *v10;
  int *v11;
  BOOL v12;

  v1 = (int *)*((_QWORD *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      v2 = 0;
      v3 = &v1[8 * *((unsigned __int16 *)this + 5)];
      do
      {
        v4 = (uint64_t **)(v1 + 2);
        v5 = *v1;
        v1 += 8;
        v2 += google::protobuf::internal::ExtensionSet::Extension::ByteSize(v4, v5);
      }
      while (v1 != v3);
      return v2;
    }
    return 0;
  }
  v8 = *(int **)v1;
  v6 = v1 + 2;
  v7 = v8;
  if (v8 == v6)
    return 0;
  v2 = 0;
  do
  {
    v9 = google::protobuf::internal::ExtensionSet::Extension::ByteSize((uint64_t **)v7 + 5, v7[8]);
    v10 = (int *)*((_QWORD *)v7 + 1);
    if (v10)
    {
      do
      {
        v11 = v10;
        v10 = *(int **)v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        v11 = (int *)*((_QWORD *)v7 + 2);
        v12 = *(_QWORD *)v11 == (_QWORD)v7;
        v7 = v11;
      }
      while (!v12);
    }
    v2 += v9;
    v7 = v11;
  }
  while (v11 != v6);
  return v2;
}

unint64_t google::protobuf::internal::ExtensionSet::Extension::ByteSize(uint64_t **this, int a2)
{
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  int v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  int v70;
  uint64_t v71;
  int *v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  int v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void);
  int v84;
  uint64_t v85;
  int v86;
  const char *v87;
  int v88;
  std::string __p;

  if (*((_BYTE *)this + 9))
  {
    if (*((_BYTE *)this + 11))
    {
      switch(*((_BYTE *)this + 8))
      {
        case 1:
        case 6:
        case 0x10:
          v6 = 8 * *(unsigned int *)*this;
          goto LABEL_51;
        case 2:
        case 7:
        case 0xF:
          v6 = 4 * *(unsigned int *)*this;
          goto LABEL_51;
        case 3:
          v13 = *(unsigned int *)*this;
          if ((int)v13 < 1)
            goto LABEL_54;
          v6 = 0;
          v14 = (uint64_t *)(*this)[1];
          do
          {
            v15 = *v14++;
            v6 += (9 * (__clz(v15 | 1) ^ 0x3F) + 73) >> 6;
            --v13;
          }
          while (v13);
          goto LABEL_51;
        case 4:
          v16 = *(unsigned int *)*this;
          if ((int)v16 < 1)
            goto LABEL_54;
          v6 = 0;
          v17 = (uint64_t *)(*this)[1];
          do
          {
            v18 = *v17++;
            v6 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
            --v16;
          }
          while (v16);
          goto LABEL_51;
        case 5:
          v19 = *(unsigned int *)*this;
          if ((int)v19 < 1)
            goto LABEL_54;
          v6 = 0;
          v20 = (int *)(*this)[1];
          do
          {
            v22 = *v20++;
            v21 = v22;
            if (v22 < 0)
              v23 = 10;
            else
              v23 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
            v6 += v23;
            --v19;
          }
          while (v19);
          goto LABEL_51;
        case 8:
          v6 = *(unsigned int *)*this;
          goto LABEL_51;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          v86 = 3;
          v87 = "/Library/Caches/com.apple.xbs/Sources/GeoServices/libprotobuf/src/google/protobuf/extension_set.cc";
          v88 = 1599;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Non-primitive types can't be packed.");
          google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v86);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          goto LABEL_54;
        case 0xD:
          v7 = *(unsigned int *)*this;
          if ((int)v7 < 1)
            goto LABEL_54;
          v6 = 0;
          v8 = (int *)(*this)[1];
          do
          {
            v9 = *v8++;
            v6 += (9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6;
            --v7;
          }
          while (v7);
          goto LABEL_51;
        case 0xE:
          v24 = *(unsigned int *)*this;
          if ((int)v24 < 1)
            goto LABEL_54;
          v6 = 0;
          v25 = (int *)(*this)[1];
          do
          {
            v27 = *v25++;
            v26 = v27;
            if (v27 < 0)
              v28 = 10;
            else
              v28 = (9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6;
            v6 += v28;
            --v24;
          }
          while (v24);
          goto LABEL_51;
        case 0x11:
          v10 = *(unsigned int *)*this;
          if ((int)v10 < 1)
            goto LABEL_54;
          v6 = 0;
          v11 = (int *)(*this)[1];
          do
          {
            v12 = *v11++;
            v6 += (9 * (__clz((2 * v12) ^ (v12 >> 31) | 1) ^ 0x1F) + 73) >> 6;
            --v10;
          }
          while (v10);
          goto LABEL_51;
        case 0x12:
          v29 = *(unsigned int *)*this;
          if ((int)v29 < 1)
            goto LABEL_54;
          v6 = 0;
          v30 = (uint64_t *)(*this)[1];
          do
          {
            v31 = *v30++;
            v6 += (9 * (__clz((2 * v31) ^ (v31 >> 63) | 1) ^ 0x3F) + 73) >> 6;
            --v29;
          }
          while (v29);
LABEL_51:
          *((_DWORD *)this + 3) = v6;
          v32 = v6 + ((9 * (__clz((8 * a2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
          if (v6)
            v3 = v32;
          else
            v3 = 0;
          break;
        default:
LABEL_54:
          v3 = 0;
          *((_DWORD *)this + 3) = 0;
          break;
      }
    }
    else
    {
      v4 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (*((_BYTE *)this + 8) == 10);
      switch(*((_BYTE *)this + 8))
      {
        case 1:
        case 6:
        case 0x10:
          v5 = v4 + 8;
          goto LABEL_15;
        case 2:
        case 7:
        case 0xF:
          v5 = v4 + 4;
LABEL_15:
          v3 = v5 * (unint64_t)*(unsigned int *)*this;
          break;
        case 3:
          v38 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v38;
          if ((int)v38 >= 1)
          {
            v39 = (uint64_t *)(*this)[1];
            do
            {
              v40 = *v39++;
              v3 += (9 * (__clz(v40 | 1) ^ 0x3F) + 73) >> 6;
              --v38;
            }
            while (v38);
          }
          break;
        case 4:
          v41 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v41;
          if ((int)v41 >= 1)
          {
            v42 = (uint64_t *)(*this)[1];
            do
            {
              v43 = *v42++;
              v3 += (9 * (__clz(v43 | 1) ^ 0x3F) + 73) >> 6;
              --v41;
            }
            while (v41);
          }
          break;
        case 5:
          v44 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v44;
          if ((int)v44 >= 1)
          {
            v45 = (int *)(*this)[1];
            do
            {
              v47 = *v45++;
              v46 = v47;
              if (v47 < 0)
                v48 = 10;
              else
                v48 = (9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6;
              v3 += v48;
              --v44;
            }
            while (v44);
          }
          break;
        case 8:
          v3 = *(unsigned int *)*this + *(unsigned int *)*this * (unint64_t)v4;
          break;
        case 9:
          v49 = *((unsigned int *)*this + 2);
          v3 = v4 * (unint64_t)v49;
          if ((int)v49 >= 1)
          {
            v50 = (uint64_t *)((*this)[2] + 8);
            do
            {
              v51 = *v50++;
              v52 = *(unsigned __int8 *)(v51 + 23);
              v53 = *(_QWORD *)(v51 + 8);
              if ((v52 & 0x80u) == 0)
                v53 = v52;
              v3 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
              --v49;
            }
            while (v49);
          }
          break;
        case 0xA:
          v54 = (unsigned int *)*this;
          v55 = *((_DWORD *)*this + 2);
          v3 = v4 * (unint64_t)v55;
          if (v55 >= 1)
          {
            v56 = 0;
            do
            {
              v57 = *(_QWORD *)(*((_QWORD *)v54 + 2) + 8 * v56 + 8);
              v3 += (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 72))(v57);
              ++v56;
              v54 = (unsigned int *)*this;
            }
            while (v56 < *((int *)*this + 2));
          }
          break;
        case 0xB:
          v58 = (unsigned int *)*this;
          v59 = *((_DWORD *)*this + 2);
          v3 = v4 * (unint64_t)v59;
          if (v59 >= 1)
          {
            v60 = 0;
            do
            {
              v61 = *(_QWORD *)(*((_QWORD *)v58 + 2) + 8 * v60 + 8);
              v62 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v61 + 72))(v61);
              v3 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6);
              ++v60;
              v58 = (unsigned int *)*this;
            }
            while (v60 < *((int *)*this + 2));
          }
          break;
        case 0xC:
          v63 = *((unsigned int *)*this + 2);
          v3 = v4 * (unint64_t)v63;
          if ((int)v63 >= 1)
          {
            v64 = (uint64_t *)((*this)[2] + 8);
            do
            {
              v65 = *v64++;
              v66 = *(unsigned __int8 *)(v65 + 23);
              v67 = *(_QWORD *)(v65 + 8);
              if ((v66 & 0x80u) == 0)
                v67 = v66;
              v3 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
              --v63;
            }
            while (v63);
          }
          break;
        case 0xD:
          v68 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v68;
          if ((int)v68 >= 1)
          {
            v69 = (int *)(*this)[1];
            do
            {
              v70 = *v69++;
              v3 += (9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6;
              --v68;
            }
            while (v68);
          }
          break;
        case 0xE:
          v71 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v71;
          if ((int)v71 >= 1)
          {
            v72 = (int *)(*this)[1];
            do
            {
              v74 = *v72++;
              v73 = v74;
              if (v74 < 0)
                v75 = 10;
              else
                v75 = (9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6;
              v3 += v75;
              --v71;
            }
            while (v71);
          }
          break;
        case 0x11:
          v76 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v76;
          if ((int)v76 >= 1)
          {
            v77 = (int *)(*this)[1];
            do
            {
              v78 = *v77++;
              v3 += (9 * (__clz((2 * v78) ^ (v78 >> 31) | 1) ^ 0x1F) + 73) >> 6;
              --v76;
            }
            while (v76);
          }
          break;
        case 0x12:
          v79 = *(unsigned int *)*this;
          v3 = v4 * (unint64_t)v79;
          if ((int)v79 >= 1)
          {
            v80 = (uint64_t *)(*this)[1];
            do
            {
              v81 = *v80++;
              v3 += (9 * (__clz((2 * v81) ^ (v81 >> 63) | 1) ^ 0x3F) + 73) >> 6;
              --v79;
            }
            while (v79);
          }
          break;
        default:
          return 0;
      }
    }
  }
  else if ((*((_BYTE *)this + 10) & 1) != 0)
  {
    return 0;
  }
  else
  {
    v3 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (*((_BYTE *)this + 8) == 10);
    switch(*((_BYTE *)this + 8))
    {
      case 1:
      case 6:
      case 0x10:
        v3 += 8;
        return v3;
      case 2:
      case 7:
      case 0xF:
        v3 += 4;
        return v3;
      case 3:
      case 4:
        v34 = (uint64_t)*this;
        goto LABEL_127;
      case 5:
      case 0xE:
        v35 = (9 * (__clz(*(_DWORD *)this | 1) ^ 0x1F) + 73) >> 6;
        if (*(int *)this >= 0)
          v36 = v35;
        else
          v36 = 10;
        v3 += v36;
        return v3;
      case 8:
        return ++v3;
      case 9:
      case 0xC:
        v37 = (*this)[1];
        if (*((char *)*this + 23) >= 0)
          v37 = *((unsigned __int8 *)*this + 23);
        v3 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
        return v3;
      case 0xA:
        v3 += (*(uint64_t (**)(void))(**this + 72))();
        return v3;
      case 0xB:
        v82 = **this;
        if ((*((_BYTE *)this + 10) & 0x10) != 0)
          v83 = *(uint64_t (**)(void))(v82 + 88);
        else
          v83 = *(uint64_t (**)(void))(v82 + 72);
        v85 = v83();
        v3 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6);
        return v3;
      case 0xD:
        v84 = *(_DWORD *)this;
        goto LABEL_125;
      case 0x11:
        v84 = (2 * *(_DWORD *)this) ^ (*(int *)this >> 31);
LABEL_125:
        v3 += (9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6;
        break;
      case 0x12:
        v34 = (2 * (_QWORD)*this) ^ ((uint64_t)*this >> 63);
LABEL_127:
        v3 += (9 * (__clz(v34 | 1) ^ 0x3F) + 73) >> 6;
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1888699B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD **google::protobuf::internal::ExtensionSet::Extension::Free(_QWORD **this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((_BYTE *)this + 9))
  {
    switch(*((_BYTE *)this + 8))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        v2 = (uint64_t)*this;
        if (!*this)
          return this;
        if (*(int *)(v2 + 4) >= 1)
        {
          v3 = *(_QWORD *)(v2 + 8);
          v5 = *(_QWORD *)(v3 - 8);
          v4 = (void *)(v3 - 8);
          if (!v5)
            operator delete(v4);
        }
        break;
      case 9:
      case 0xC:
        if (!*this)
          return this;
        google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(*this);
        break;
      case 0xA:
      case 0xB:
        if (!*this)
          return this;
        google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*this);
        break;
      default:
        return this;
    }
    goto LABEL_21;
  }
  if (v1 == 10)
  {
    this = (_QWORD **)*this;
    if (this)
      return (_QWORD **)((uint64_t (*)(_QWORD **))(*this)[1])(this);
  }
  else if (v1 == 9)
  {
    v6 = (uint64_t)*this;
    if (*this)
    {
      if (*(char *)(v6 + 23) < 0)
        operator delete(*(void **)v6);
LABEL_21:
      JUMPOUT(0x18D76437CLL);
    }
  }
  return this;
}

void google::protobuf::internal::GeneratedExtensionFinder::~GeneratedExtensionFinder(google::protobuf::internal::GeneratedExtensionFinder *this)
{
  JUMPOUT(0x18D76437CLL);
}

_QWORD **google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::~()::$_0>(_QWORD **result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;

  if (result != a2)
  {
    v3 = result;
    do
    {
      result = google::protobuf::internal::ExtensionSet::Extension::Free((_QWORD **)v3 + 5);
      v4 = (_QWORD *)v3[1];
      if (v4)
      {
        do
        {
          v5 = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          v5 = (_QWORD *)v3[2];
          v6 = *v5 == (_QWORD)v3;
          v3 = v5;
        }
        while (!v6);
      }
      v3 = v5;
    }
    while (v5 != a2);
  }
  return result;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(int *)(a1 + 4) >= 1)
  {
    v1 = *(_QWORD *)(a1 + 8);
    v3 = *(_QWORD *)(v1 - 8);
    v2 = (void *)(v1 - 8);
    if (!v3)
      operator delete(v2);
  }
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>(_QWORD *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(a1);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(unsigned int *this, uint64_t a2)
{
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;

  v2 = (int *)*((_QWORD *)this + 2);
  if (!v2)
    return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(this, a2);
  v3 = *v2;
  if ((int)v3 >= (int)this[3])
    return google::protobuf::internal::RepeatedPtrFieldBase::UnsafeArenaAddAllocated<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(this, a2);
  v4 = v2 + 2;
  v5 = (int)this[2];
  if ((int)v5 < (int)v3)
    *(_QWORD *)&v4[2 * v3] = *(_QWORD *)&v4[2 * v5];
  *(_QWORD *)&v4[2 * v5] = a2;
  this[2] = v5 + 1;
  ++**((_DWORD **)this + 2);
  return this;
}

google::protobuf::internal::ExtensionSet *google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet const&)::$_0>(_QWORD *a1, _QWORD *a2, google::protobuf::internal::ExtensionSet *this)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, *((_DWORD *)v5 + 8), (int **)v5 + 5);
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      v5 = v7;
    }
    while (v7 != a2);
  }
  return this;
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(std::string *result, std::string **a2, const std::string **a3, signed int a4, signed int a5)
{
  std::string::__raw *v9;
  uint64_t v10;
  const std::string **v11;
  std::string **v12;
  const std::string *v13;
  const std::string *v14;
  std::string *v15;
  int v16;
  std::string::size_type v17;
  std::string **v18;
  const std::string **v19;
  const std::string *v20;
  std::string *AlignedAndAddCleanup;
  std::string *v22;

  v9 = (std::string::__raw *)result;
  if (a5 >= a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  v16 = a4 - a5;
  if (a4 > a5)
  {
    v17 = v9->__words[0];
    v18 = &a2[a5];
    v19 = &a3[a5];
    do
    {
      v20 = *v19;
      if (v17)
      {
        if ((*(_BYTE *)(v17 + 24) & 1) != 0)
        AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((google::protobuf::internal::ArenaImpl *)v17, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      else
      {
        AlignedAndAddCleanup = (std::string *)operator new();
      }
      v22 = AlignedAndAddCleanup;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      result = std::string::operator=(AlignedAndAddCleanup, v20);
      *v18++ = v22;
      ++v19;
      --v16;
    }
    while (v16);
  }
  return result;
}

uint64_t google::protobuf::internal::ParseContext::ParseContext<std::string &>(uint64_t a1, int a2, const char *a3, _QWORD *a4, uint64_t *a5)
{
  _BYTE *v8[2];

  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = a3;
  *(_QWORD *)(a1 + 80) = 0x7FFFFFFF00000000;
  *(_DWORD *)(a1 + 88) = a2;
  *(_DWORD *)(a1 + 92) = 0x80000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v8, a5, a3);
  *a4 = google::protobuf::internal::EpsCopyInputStream::InitFrom(a1, v8[0], (int64_t)v8[1]);
  return a1;
}

_BYTE *google::protobuf::internal::EpsCopyInputStream::InitFrom(uint64_t a1, _BYTE *a2, int64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  *(_DWORD *)(a1 + 84) = 0;
  if (a3 >= 17)
  {
    *(_DWORD *)(a1 + 28) = 16;
    v6 = (uint64_t)&a2[a3 - 16];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = a1 + 40;
    if (*(_QWORD *)(a1 + 72) != 1)
      return a2;
    v7 = 2;
    v8 = a2;
    goto LABEL_6;
  }
  v8 = (_BYTE *)(a1 + 40);
  memcpy((void *)(a1 + 40), a2, a3);
  *(_DWORD *)(a1 + 28) = 0;
  *(_QWORD *)a1 = &v8[a3];
  *(_QWORD *)(a1 + 8) = &v8[a3];
  *(_QWORD *)(a1 + 16) = 0;
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    v7 = a2 - v8;
LABEL_6:
    *(_QWORD *)(a1 + 72) = v7;
  }
  return v8;
}

uint64_t **std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int const,google::protobuf::internal::ExtensionSet::Extension>>(uint64_t **a1, int a2, _OWORD *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  int v8;
  uint64_t *v9;
  __int128 v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v7 = (uint64_t **)v5;
        v8 = *((_DWORD *)v5 + 8);
        if (v8 <= a2)
          break;
        v5 = *v7;
        v6 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (v8 >= a2)
        break;
      v5 = v7[1];
      if (!v5)
      {
        v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v7 = a1 + 1;
LABEL_9:
    v9 = (uint64_t *)operator new(0x40uLL);
    v10 = a3[1];
    *((_OWORD *)v9 + 2) = *a3;
    *((_OWORD *)v9 + 3) = v10;
    std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::__insert_node_at(a1, (uint64_t)v7, v6, v9);
    return (uint64_t **)v9;
  }
  return v7;
}

void google::protobuf::internal::arena_destruct_object<std::map<int,google::protobuf::internal::ExtensionSet::Extension>>(uint64_t a1)
{
  std::__tree<std::__value_type<unsigned int,unsigned long>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,unsigned long>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,unsigned long>>>::destroy(a1, *(_QWORD **)(a1 + 8));
}

google::protobuf::DescriptorPool::Tables *google::protobuf::DescriptorPool::Tables::Tables(google::protobuf::DescriptorPool::Tables *this)
{
  google::protobuf::DescriptorPool::Tables *v1;
  void **v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  const std::string::value_type **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  unsigned __int8 **v12;
  unsigned __int8 *i;
  unint64_t v14;
  char *v15;
  std::string *v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  int8x8_t prime;
  google::protobuf::DescriptorPool::Tables *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint8x8_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v41;
  float *v43;
  _QWORD v44[3];
  int v45;
  uint64_t v46[3];
  int v47;
  uint64_t v48[3];
  int v49;
  uint64_t v50[3];
  int v51;
  uint64_t v52[3];
  int v53;
  uint64_t v54[3];
  int v55;
  uint64_t v56[3];
  int v57;
  uint64_t v58[3];
  int v59;
  uint64_t v60[3];
  int v61;
  uint64_t v62[3];
  int v63;
  uint64_t v64[3];
  int v65;
  uint64_t v66[3];
  int v67;
  uint64_t v68[3];
  int v69;
  uint64_t v70[3];
  int v71;
  uint64_t v72[3];
  int v73;
  uint64_t v74[3];
  int v75;
  uint64_t v76;

  v1 = this;
  v76 = *MEMORY[0x1E0C80C00];
  *((_QWORD *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>((uint64_t)this + 24, 3uLL);
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_DWORD *)v1 + 24) = 1065353216;
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>((uint64_t)v1 + 64, 3uLL);
  *(_OWORD *)((char *)v1 + 104) = 0u;
  *(_OWORD *)((char *)v1 + 120) = 0u;
  *((_DWORD *)v1 + 34) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v1 + 104, 3uLL);
  *((_OWORD *)v1 + 9) = 0u;
  v2 = (void **)((char *)v1 + 144);
  *((_DWORD *)v1 + 44) = 1065353216;
  v43 = (float *)((char *)v1 + 176);
  *((_OWORD *)v1 + 10) = 0u;
  *(_OWORD *)((char *)v1 + 184) = 0u;
  *(_OWORD *)((char *)v1 + 232) = 0u;
  *(_OWORD *)((char *)v1 + 280) = 0u;
  v3 = (unint64_t)v1 + 280;
  *(_OWORD *)((char *)v1 + 200) = 0u;
  *(_OWORD *)((char *)v1 + 216) = 0u;
  *(_OWORD *)((char *)v1 + 248) = 0u;
  *(_OWORD *)((char *)v1 + 264) = 0u;
  *(_OWORD *)((char *)v1 + 296) = 0u;
  *(_OWORD *)((char *)v1 + 312) = 0u;
  *((_QWORD *)v1 + 41) = 0;
  *((_DWORD *)v1 + 84) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v1 + 304, 3uLL);
  *(_OWORD *)((char *)v1 + 344) = 0u;
  *(_OWORD *)((char *)v1 + 360) = 0u;
  *((_DWORD *)v1 + 94) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v1 + 344, 3uLL);
  *((_QWORD *)v1 + 49) = 0;
  *((_QWORD *)v1 + 50) = 0;
  *((_QWORD *)v1 + 48) = (char *)v1 + 392;
  *(_OWORD *)((char *)v1 + 408) = 0u;
  *(_OWORD *)((char *)v1 + 424) = 0u;
  *(_OWORD *)((char *)v1 + 440) = 0u;
  *(_OWORD *)((char *)v1 + 456) = 0u;
  *(_OWORD *)((char *)v1 + 472) = 0u;
  *(_OWORD *)((char *)v1 + 488) = 0u;
  std::string::basic_string[abi:ne180100]<0>(v44, "google.protobuf.DoubleValue");
  v45 = 1;
  std::string::basic_string[abi:ne180100]<0>(v46, "google.protobuf.FloatValue");
  v47 = 2;
  std::string::basic_string[abi:ne180100]<0>(v48, "google.protobuf.Int64Value");
  v49 = 3;
  std::string::basic_string[abi:ne180100]<0>(v50, "google.protobuf.UInt64Value");
  v51 = 4;
  std::string::basic_string[abi:ne180100]<0>(v52, "google.protobuf.Int32Value");
  v53 = 5;
  std::string::basic_string[abi:ne180100]<0>(v54, "google.protobuf.UInt32Value");
  v55 = 6;
  std::string::basic_string[abi:ne180100]<0>(v56, "google.protobuf.StringValue");
  v57 = 7;
  std::string::basic_string[abi:ne180100]<0>(v58, "google.protobuf.BytesValue");
  v59 = 8;
  std::string::basic_string[abi:ne180100]<0>(v60, "google.protobuf.BoolValue");
  v61 = 9;
  std::string::basic_string[abi:ne180100]<0>(v62, "google.protobuf.Any");
  v63 = 10;
  std::string::basic_string[abi:ne180100]<0>(v64, "google.protobuf.FieldMask");
  v65 = 11;
  std::string::basic_string[abi:ne180100]<0>(v66, "google.protobuf.Duration");
  v67 = 12;
  std::string::basic_string[abi:ne180100]<0>(v68, "google.protobuf.Timestamp");
  v69 = 13;
  std::string::basic_string[abi:ne180100]<0>(v70, "google.protobuf.Value");
  v71 = 14;
  std::string::basic_string[abi:ne180100]<0>(v72, "google.protobuf.ListValue");
  v73 = 15;
  std::string::basic_string[abi:ne180100]<0>(v74, "google.protobuf.Struct");
  v4 = 0;
  v75 = 16;
  v5 = (unint64_t *)((char *)v1 + 168);
  v41 = (_QWORD *)((char *)v1 + 160);
  do
  {
    v6 = (const std::string::value_type **)&v44[4 * v4];
    v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)v5, (uint64_t)v6);
    v8 = v7;
    v9 = *((_QWORD *)v1 + 19);
    if (v9)
    {
      v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
      v10.i16[0] = vaddlv_u8(v10);
      v11 = v10.u32[0];
      if (v10.u32[0] > 1uLL)
      {
        v3 = v7;
        if (v7 >= v9)
          v3 = v7 % v9;
      }
      else
      {
        v3 = (v9 - 1) & v7;
      }
      v12 = (unsigned __int8 **)*((_QWORD *)*v2 + v3);
      if (v12)
      {
        for (i = *v12; i; i = *(unsigned __int8 **)i)
        {
          v14 = *((_QWORD *)i + 1);
          if (v14 == v8)
          {
            if ((std::equal_to<std::string>::operator()[abi:ne180100]((uint64_t)v43, i + 16, (unsigned __int8 *)&v44[4 * v4]) & 1) != 0)goto LABEL_77;
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9)
                v14 %= v9;
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v3)
              break;
          }
        }
      }
    }
    v15 = (char *)operator new(0x30uLL);
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = v8;
    v16 = (std::string *)(v15 + 16);
    if (*((char *)v6 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v16, *v6, (std::string::size_type)v6[1]);
    }
    else
    {
      *(_OWORD *)&v16->__r_.__value_.__l.__data_ = *(_OWORD *)v6;
      *((_QWORD *)v15 + 4) = v6[2];
    }
    *((_DWORD *)v15 + 10) = v44[4 * v4 + 3];
    v17 = (float)(*v5 + 1);
    v18 = *v43;
    if (!v9 || (float)(v18 * (float)v9) < v17)
    {
      v19 = (v9 & (v9 - 1)) != 0;
      if (v9 < 3)
        v19 = 1;
      v20 = v19 | (2 * v9);
      v21 = vcvtps_u32_f32(v17 / v18);
      if (v20 <= v21)
        prime = (int8x8_t)v21;
      else
        prime = (int8x8_t)v20;
      if (*(_QWORD *)&prime == 1)
      {
        prime = (int8x8_t)2;
        v23 = this;
      }
      else
      {
        v23 = this;
        if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
          prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      }
      v9 = *((_QWORD *)v23 + 19);
      if (*(_QWORD *)&prime > v9)
        goto LABEL_33;
      if (*(_QWORD *)&prime < v9)
      {
        v30 = vcvtps_u32_f32((float)*v5 / *v43);
        if (v9 < 3 || (v31 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
        {
          v30 = std::__next_prime(v30);
        }
        else
        {
          v32 = 1 << -(char)__clz(v30 - 1);
          if (v30 >= 2)
            v30 = v32;
        }
        if (*(_QWORD *)&prime <= v30)
          prime = (int8x8_t)v30;
        if (*(_QWORD *)&prime >= v9)
        {
          v9 = *((_QWORD *)v23 + 19);
        }
        else
        {
          if (prime)
          {
LABEL_33:
            if (*(_QWORD *)&prime >> 61)
              std::__throw_bad_array_new_length[abi:ne180100]();
            v24 = operator new(8 * *(_QWORD *)&prime);
            v25 = *v2;
            *v2 = v24;
            if (v25)
              operator delete(v25);
            v26 = 0;
            *((int8x8_t *)v23 + 19) = prime;
            do
              *((_QWORD *)*v2 + v26++) = 0;
            while (*(_QWORD *)&prime != v26);
            v27 = (_QWORD *)*v41;
            if (*v41)
            {
              v28 = v27[1];
              v29 = (uint8x8_t)vcnt_s8(prime);
              v29.i16[0] = vaddlv_u8(v29);
              if (v29.u32[0] > 1uLL)
              {
                if (v28 >= *(_QWORD *)&prime)
                  v28 %= *(_QWORD *)&prime;
              }
              else
              {
                v28 &= *(_QWORD *)&prime - 1;
              }
              *((_QWORD *)*v2 + v28) = v41;
              v33 = (_QWORD *)*v27;
              if (*v27)
              {
                do
                {
                  v34 = v33[1];
                  if (v29.u32[0] > 1uLL)
                  {
                    if (v34 >= *(_QWORD *)&prime)
                      v34 %= *(_QWORD *)&prime;
                  }
                  else
                  {
                    v34 &= *(_QWORD *)&prime - 1;
                  }
                  if (v34 != v28)
                  {
                    if (!*((_QWORD *)*v2 + v34))
                    {
                      *((_QWORD *)*v2 + v34) = v27;
                      goto LABEL_58;
                    }
                    *v27 = *v33;
                    *v33 = **((_QWORD **)*v2 + v34);
                    **((_QWORD **)*v2 + v34) = v33;
                    v33 = v27;
                  }
                  v34 = v28;
LABEL_58:
                  v27 = v33;
                  v33 = (_QWORD *)*v33;
                  v28 = v34;
                }
                while (v33);
              }
            }
            v9 = (unint64_t)prime;
            goto LABEL_62;
          }
          v38 = *v2;
          *v2 = 0;
          if (v38)
            operator delete(v38);
          v9 = 0;
          *((_QWORD *)v23 + 19) = 0;
        }
      }
LABEL_62:
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v8 >= v9)
          v3 = v8 % v9;
        else
          v3 = v8;
      }
      else
      {
        v3 = (v9 - 1) & v8;
      }
    }
    v35 = *v2;
    v36 = (_QWORD *)*((_QWORD *)*v2 + v3);
    if (v36)
    {
      *(_QWORD *)v15 = *v36;
LABEL_75:
      *v36 = v15;
      goto LABEL_76;
    }
    *(_QWORD *)v15 = *v41;
    *v41 = v15;
    v35[v3] = v41;
    if (*(_QWORD *)v15)
    {
      v37 = *(_QWORD *)(*(_QWORD *)v15 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v37 >= v9)
          v37 %= v9;
      }
      else
      {
        v37 &= v9 - 1;
      }
      v36 = (char *)*v2 + 8 * v37;
      goto LABEL_75;
    }
LABEL_76:
    ++*v5;
LABEL_77:
    ++v4;
    v1 = this;
  }
  while (v4 != 16);
  v39 = 64;
  do
  {
    if (*((char *)&v44[v39 - 1] - 1) < 0)
      operator delete((void *)v44[v39 - 4]);
    v39 -= 4;
  }
  while (v39 * 8);
  return this;
}

void sub_18886A800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, _QWORD **a11, uint64_t a12, uint64_t a13, void **a14, void **a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  void ***v23;
  uint64_t v24;
  void *v26;
  void *v27;
  void *v28;
  void *v29;

  while (1)
  {
    if (*((char *)v23 - 9) < 0)
      operator delete(*(v23 - 4));
    v23 -= 4;
    if (v23 == &a23)
    {
      v26 = *(void **)(a21 + 480);
      if (v26)
      {
        *(_QWORD *)(a21 + 488) = v26;
        operator delete(v26);
      }
      v27 = *(void **)(a21 + 456);
      if (v27)
      {
        *(_QWORD *)(a21 + 464) = v27;
        operator delete(v27);
      }
      v28 = *(void **)(a21 + 432);
      if (v28)
      {
        *(_QWORD *)(a21 + 440) = v28;
        operator delete(v28);
      }
      v29 = *a10;
      if (*a10)
      {
        *(_QWORD *)(a21 + 416) = v29;
        operator delete(v29);
      }
      std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(*a11);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a12);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a13);
      a23 = a14;
      std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = (void **)(v24 + 112);
      std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = a15;
      std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = (void **)(v24 + 64);
      std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](&a23);
      a23 = a16;
      std::vector<std::vector<char>>::__destroy_vector::operator()[abi:ne180100](&a23);
      std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(v24);
      std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(a17);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a18);
      std::__hash_table<std::string,AddrObjGoogle::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a19);
      a23 = (void **)a21;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a23);
      _Unwind_Resume(a1);
    }
  }
}

google::protobuf::FileDescriptorTables *google::protobuf::FileDescriptorTables::FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this, 3uLL);
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 40, 3uLL);
  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_DWORD *)(v2 + 32) = 1065353216;
  *((_QWORD *)this + 10) = v2;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_QWORD *)this + 15) = 0;
  *((_DWORD *)this + 32) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 96, 3uLL);
  v3 = operator new();
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_DWORD *)(v3 + 32) = 1065353216;
  *((_QWORD *)this + 17) = v3;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_QWORD *)this + 22) = 0;
  *((_DWORD *)this + 46) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 152, 3uLL);
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_DWORD *)this + 56) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 192, 3uLL);
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 66) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 232, 3uLL);
  *((_QWORD *)this + 38) = 0;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_DWORD *)this + 78) = 1065353216;
  std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)this + 280, 3uLL);
  *((_QWORD *)this + 40) = 850045863;
  *((_QWORD *)this + 47) = 0;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  return this;
}

void sub_18886AB64(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = v5;
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table(v8);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v7);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v6);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v4);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v3);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v2);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void sub_18886ABF4()
{
  JUMPOUT(0x18886ABE4);
}

void google::protobuf::FileDescriptorTables::~FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  std::mutex::~mutex((std::mutex *)this + 5);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::~__hash_table((uint64_t)this + 280);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 232);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 192);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 152);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 96);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this + 40);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table((uint64_t)this);
}

unint64_t google::protobuf::DescriptorPool::Tables::FindByNameHelper(_QWORD *a1, uint64_t a2, char *a3, uint64_t a4)
{
  std::mutex *v8;
  char v9;
  _QWORD *v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;

  v8 = *(std::mutex **)a2;
  if (!*(_QWORD *)a2)
    goto LABEL_6;
  std::mutex::lock(*(std::mutex **)a2);
  if (!a1[11] && !a1[6])
  {
    v21 = a3;
    v22 = a4;
    v19 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(a1 + 38, &v21);
    if (v19)
    {
      v20 = v19 + 4;
    }
    else
    {
      v20 = &qword_1ECDBB718;
    }
    v13 = *v20;
    if (*v20)
    {
      v12 = HIDWORD(v13);
LABEL_14:
      std::mutex::unlock(v8);
      return v13 | (v12 << 32);
    }
  }
  std::mutex::unlock(v8);
  v8 = *(std::mutex **)a2;
  if (*(_QWORD *)a2)
  {
    std::mutex::lock(*(std::mutex **)a2);
    v9 = 0;
  }
  else
  {
LABEL_6:
    v9 = 1;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)(a1 + 8));
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)(a1 + 3));
  }
  v21 = a3;
  v22 = a4;
  v10 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(a1 + 38, &v21);
  if (v10)
  {
    v11 = v10 + 4;
  }
  else
  {
    v11 = &qword_1ECDBB718;
  }
  LODWORD(v13) = *(_DWORD *)v11;
  v12 = *((unsigned int *)v11 + 1);
  if (!*(_DWORD *)v11)
  {
    v15 = *(_QWORD *)(a2 + 24);
    if (!v15
      || (v16 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD *)(v15 + 32), v15, a3, a4),
          v12 = HIDWORD(v16),
          (LODWORD(v13) = v16) == 0))
    {
      if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, (uint64_t)a3, a4))
      {
        v21 = a3;
        v22 = a4;
        v17 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>(a1 + 38, &v21);
        if (v17)
        {
          v18 = v17 + 4;
        }
        else
        {
          v18 = &qword_1ECDBB718;
        }
        LODWORD(v13) = *(_DWORD *)v18;
        v12 = *((unsigned int *)v18 + 1);
      }
      else
      {
        LODWORD(v13) = 0;
      }
    }
  }
  if ((v9 & 1) == 0)
    goto LABEL_14;
  return v13 | (v12 << 32);
}

void sub_18886AE2C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;
  _BYTE v10[176];
  uint64_t v11;
  void *v12[2];
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v14 = a2;
  v15 = a3;
  if (!*((_QWORD *)a1 + 1))
    return 0;
  google::protobuf::StringPiece::ToString((google::protobuf::StringPiece *)&v14, v12);
  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*((_QWORD *)a1 + 4) + 64), (unsigned __int8 *)v12))
  {
    v4 = 0;
  }
  else
  {
    google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v10, 0);
    if ((google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, v14, v15) & 1) != 0
      || !(*(unsigned int (**)(_QWORD, void **, _BYTE *))(**((_QWORD **)a1 + 1) + 24))(*((_QWORD *)a1 + 1), v12, v10)|| (v6 = *((_QWORD *)a1 + 4), google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v9, (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFELL), v5), v16 = v9, (v7 = std::__hash_table<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::__unordered_map_hasher<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,google::protobuf::hash<google::protobuf::StringPiece>,std::equal_to<google::protobuf::StringPiece>,true>,std::__unordered_map_equal<google::protobuf::StringPiece,std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>,std::equal_to<google::protobuf::StringPiece>,google::protobuf::hash<google::protobuf::StringPiece>,true>,std::allocator<std::__hash_value_type<google::protobuf::StringPiece,google::protobuf::Symbol>>>::find<google::protobuf::StringPiece>((_QWORD *)(v6 + 344), (char **)&v16)) != 0)&& v7[4]|| !google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v10))
    {
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(*((_QWORD *)a1 + 4) + 64, (unsigned __int8 *)v12, (uint64_t)v12);
      v4 = 0;
    }
    else
    {
      v4 = 1;
    }
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v10);
  }
  if (v13 < 0)
    operator delete(v12[0]);
  return v4;
}

void sub_18886AF74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  if (*(char *)(v11 - 65) < 0)
    operator delete(*(void **)(v11 - 88));
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic(uint64_t this, const google::protobuf::FileDescriptorTables *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  const char *v7;
  __int128 v8;

  v2 = *(_QWORD **)(this + 168);
  if (v2)
  {
    v3 = this + 40;
    while (1)
    {
      v4 = v2[4];
      if (!*(_BYTE *)(v4 + 67))
        break;
      v5 = *(_QWORD *)(v4 + 96);
      if (!v5)
      {
        v6 = (uint64_t *)(v4 + 40);
LABEL_7:
        v5 = *v6;
      }
      v7 = *(const char **)(v4 + 16);
      if (v7[23] < 0)
        v7 = *(const char **)v7;
      *(_QWORD *)&v8 = v5;
      google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)((char *)&v8 + 8), v7);
      v2 = (_QWORD *)*v2;
      if (!v2)
        return this;
    }
    v6 = (uint64_t *)(v4 + 80);
    goto LABEL_7;
  }
  return this;
}

uint64_t google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<void const*,google::protobuf::StringPiece>,google::protobuf::FieldDescriptor const*,google::protobuf::`anonymous namespace'::PointerStringPairHash,std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>,std::allocator<std::pair<std::pair<void const*,google::protobuf::StringPiece> const,google::protobuf::FieldDescriptor const*>>>>(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  __int128 v29;
  __int128 v30;

  v29 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  *(_QWORD *)&v30 = v5;
  *((_QWORD *)&v30 + 1) = a3;
  if (v5 < 1)
  {
    v6 = 0;
  }
  else
  {
    v6 = 0;
    v7 = (char *)*((_QWORD *)&v29 + 1);
    v8 = *((_QWORD *)&v29 + 1) + v5;
    do
    {
      v9 = *v7++;
      v6 = 5 * v6 + v9;
    }
    while ((unint64_t)v7 < v8);
  }
  v10 = v6 ^ (16777619 * v29);
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v3 = v6 ^ (16777619 * v29);
      if (v10 >= v11)
        v3 = v10 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v10;
    }
    v14 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v14)
    {
      v15 = (_QWORD *)*v14;
      if (*v14)
      {
        do
        {
          v16 = v15[1];
          if (v16 == v10)
          {
            if (std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v15 + 2, &v29))
            {
              return 0;
            }
          }
          else
          {
            if (v13 > 1)
            {
              if (v16 >= v11)
                v16 %= v11;
            }
            else
            {
              v16 &= v11 - 1;
            }
            if (v16 != v3)
              break;
          }
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
    }
  }
  v17 = operator new(0x30uLL);
  *v17 = 0;
  v17[1] = v10;
  v18 = v30;
  *((_OWORD *)v17 + 1) = v29;
  *((_OWORD *)v17 + 2) = v18;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    v21 = 1;
    if (v11 >= 3)
      v21 = (v11 & (v11 - 1)) != 0;
    v22 = v21 | (2 * v11);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      v24 = v23;
    else
      v24 = v22;
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(a1, v24);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v3 = v10 % v11;
      else
        v3 = v10;
    }
    else
    {
      v3 = (v11 - 1) & v10;
    }
  }
  v25 = *(_QWORD *)a1;
  v26 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v26)
  {
    *v17 = *v26;
LABEL_43:
    *v26 = v17;
    goto LABEL_44;
  }
  *v17 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v17;
  *(_QWORD *)(v25 + 8 * v3) = a1 + 16;
  if (*v17)
  {
    v27 = *(_QWORD *)(*v17 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11)
        v27 %= v11;
    }
    else
    {
      v27 &= v11 - 1;
    }
    v26 = (_QWORD *)(*(_QWORD *)a1 + 8 * v27);
    goto LABEL_43;
  }
LABEL_44:
  ++*(_QWORD *)(a1 + 24);
  return 1;
}

void sub_18886B294(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddSymbol(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t *v6;
  const void *v8;
  int64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint8x8_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  const void *v20;
  _QWORD *v21;
  float v22;
  float v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  char *v49;
  uint64_t v50;

  v6 = (uint64_t *)a2;
  if (a2[23] < 0)
    a2 = *(const char **)a2;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)&v49, a2);
  v8 = v49;
  v9 = v50;
  if (v50 < 1)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    v11 = v49;
    do
    {
      v12 = *v11++;
      v10 = 5 * v10 + v12;
    }
    while (v11 < &v49[v50]);
  }
  v13 = (uint64_t *)(a1 + 304);
  v14 = *(_QWORD *)(a1 + 312);
  if (v14)
  {
    v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      v4 = v10;
      if (v10 >= v14)
        v4 = v10 % v14;
    }
    else
    {
      v4 = (v14 - 1) & v10;
    }
    v17 = *(_QWORD **)(*v13 + 8 * v4);
    if (v17)
    {
      v47 = a4;
      v18 = (_QWORD *)*v17;
      if (*v17)
      {
        while (1)
        {
          v19 = v18[1];
          if (v19 == v10)
          {
            if (v18[3] == v9)
            {
              if (v9 < 1)
                return 0;
              v20 = (const void *)v18[2];
              if (v8 == v20 || !memcmp(v20, v8, v9))
                return 0;
            }
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14)
                v19 %= v14;
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v4)
            {
LABEL_28:
              v13 = (uint64_t *)(a1 + 304);
              break;
            }
          }
          v18 = (_QWORD *)*v18;
          if (!v18)
            goto LABEL_28;
        }
      }
      a4 = v47;
    }
  }
  v21 = operator new(0x30uLL);
  *v21 = 0;
  v21[1] = v10;
  v21[2] = v8;
  v21[3] = v9;
  v21[4] = a3;
  v21[5] = a4;
  v22 = (float)(unint64_t)(*(_QWORD *)(a1 + 328) + 1);
  v23 = *(float *)(a1 + 336);
  if (!v14 || (float)(v23 * (float)v14) < v22)
  {
    v24 = 1;
    if (v14 >= 3)
      v24 = (v14 & (v14 - 1)) != 0;
    v25 = v24 | (2 * v14);
    v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26)
      v27 = v26;
    else
      v27 = v25;
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v13, v27);
    v14 = *(_QWORD *)(a1 + 312);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v10 >= v14)
        v4 = v10 % v14;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v14 - 1) & v10;
    }
  }
  v28 = *v13;
  v29 = *(_QWORD **)(*v13 + 8 * v4);
  if (v29)
  {
    *v21 = *v29;
LABEL_50:
    *v29 = v21;
    goto LABEL_51;
  }
  *v21 = *(_QWORD *)(a1 + 320);
  *(_QWORD *)(a1 + 320) = v21;
  *(_QWORD *)(v28 + 8 * v4) = a1 + 320;
  if (*v21)
  {
    v30 = *(_QWORD *)(*v21 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v30 >= v14)
        v30 %= v14;
    }
    else
    {
      v30 &= v14 - 1;
    }
    v29 = (_QWORD *)(*v13 + 8 * v30);
    goto LABEL_50;
  }
LABEL_51:
  ++*(_QWORD *)(a1 + 328);
  if (*((char *)v6 + 23) >= 0)
    v31 = v6;
  else
    v31 = (uint64_t *)*v6;
  v33 = *(_QWORD **)(a1 + 440);
  v32 = *(_QWORD *)(a1 + 448);
  if ((unint64_t)v33 >= v32)
  {
    v35 = *(_QWORD *)(a1 + 432);
    v36 = ((uint64_t)v33 - v35) >> 3;
    if ((unint64_t)(v36 + 1) >> 61)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v37 = v32 - v35;
    v38 = v37 >> 2;
    if (v37 >> 2 <= (unint64_t)(v36 + 1))
      v38 = v36 + 1;
    if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8)
      v39 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v39 = v38;
    if (v39)
      v40 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a1 + 448, v39);
    else
      v40 = 0;
    v41 = &v40[8 * v36];
    v42 = &v40[8 * v39];
    *(_QWORD *)v41 = v31;
    v34 = v41 + 8;
    v44 = *(char **)(a1 + 432);
    v43 = *(char **)(a1 + 440);
    if (v43 != v44)
    {
      do
      {
        v45 = *((_QWORD *)v43 - 1);
        v43 -= 8;
        *((_QWORD *)v41 - 1) = v45;
        v41 -= 8;
      }
      while (v43 != v44);
      v43 = *(char **)(a1 + 432);
    }
    *(_QWORD *)(a1 + 432) = v41;
    *(_QWORD *)(a1 + 440) = v34;
    *(_QWORD *)(a1 + 448) = v42;
    if (v43)
      operator delete(v43);
  }
  else
  {
    *v33 = v31;
    v34 = v33 + 1;
  }
  *(_QWORD *)(a1 + 440) = v34;
  return 1;
}

void sub_18886B60C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptorTables::AddAliasUnderParent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  const char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8x8_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;
  float v22;
  float v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  if (*(char *)(a3 + 23) >= 0)
    v9 = (const char *)a3;
  else
    v9 = *(const char **)a3;
  *(_QWORD *)&v32 = a2;
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)((char *)&v32 + 8), v9);
  v34 = v32;
  *(_QWORD *)&v35 = v33;
  *((_QWORD *)&v35 + 1) = a4;
  v36 = a5;
  if (v33 < 1)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    v11 = (char *)*((_QWORD *)&v34 + 1);
    do
    {
      v12 = *v11++;
      v10 = 5 * v10 + v12;
    }
    while ((unint64_t)v11 < *((_QWORD *)&v34 + 1) + v33);
  }
  v13 = v10 ^ (16777619 * v32);
  v14 = *(_QWORD *)(a1 + 8);
  if (v14)
  {
    v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      v5 = v10 ^ (16777619 * v32);
      if (v13 >= v14)
        v5 = v13 % v14;
    }
    else
    {
      v5 = (v14 - 1) & v13;
    }
    v17 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v17)
    {
      v18 = (_QWORD *)*v17;
      if (*v17)
      {
        do
        {
          v19 = v18[1];
          if (v19 == v13)
          {
            if (std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v18 + 2, &v34))
            {
              return 0;
            }
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14)
                v19 %= v14;
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v5)
              break;
          }
          v18 = (_QWORD *)*v18;
        }
        while (v18);
      }
    }
  }
  v20 = operator new(0x38uLL);
  *v20 = 0;
  v20[1] = v13;
  v21 = v35;
  *((_OWORD *)v20 + 1) = v34;
  *((_OWORD *)v20 + 2) = v21;
  v20[6] = v36;
  v22 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v23 = *(float *)(a1 + 32);
  if (!v14 || (float)(v23 * (float)v14) < v22)
  {
    v24 = 1;
    if (v14 >= 3)
      v24 = (v14 & (v14 - 1)) != 0;
    v25 = v24 | (2 * v14);
    v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26)
      v27 = v26;
    else
      v27 = v25;
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(a1, v27);
    v14 = *(_QWORD *)(a1 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14)
        v5 = v13 % v14;
      else
        v5 = v13;
    }
    else
    {
      v5 = (v14 - 1) & v13;
    }
  }
  v28 = *(_QWORD *)a1;
  v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v29)
  {
    *v20 = *v29;
LABEL_46:
    *v29 = v20;
    goto LABEL_47;
  }
  *v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(v28 + 8 * v5) = a1 + 16;
  if (*v20)
  {
    v30 = *(_QWORD *)(*v20 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v30 >= v14)
        v30 %= v14;
    }
    else
    {
      v30 &= v14 - 1;
    }
    v29 = (_QWORD *)(*(_QWORD *)a1 + 8 * v30);
    goto LABEL_46;
  }
LABEL_47:
  ++*(_QWORD *)(a1 + 24);
  return 1;
}

void sub_18886B8B4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<void const*,google::protobuf::StringPiece>,google::protobuf::FieldDescriptor const*,google::protobuf::`anonymous namespace'::PointerStringPairHash,std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>,std::allocator<std::pair<std::pair<void const*,google::protobuf::StringPiece> const,google::protobuf::FieldDescriptor const*>>>>(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int8x8_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;

  v3 = a2[2];
  if (v3 < 1)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = (char *)a2[1];
    v6 = &v5[v3];
    do
    {
      v7 = *v5++;
      v4 = 5 * v4 + v7;
    }
    while (v5 < v6);
  }
  v8 = (int8x8_t)a1[1];
  if (v8)
  {
    v9 = v4 ^ (16777619 * *a2);
    v10 = (uint8x8_t)vcnt_s8(v8);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v12 = v4 ^ (16777619 * *a2);
      if (v9 >= *(_QWORD *)&v8)
        v12 = v9 % *(_QWORD *)&v8;
    }
    else
    {
      v12 = (*(_QWORD *)&v8 - 1) & v9;
    }
    v13 = *(_QWORD **)(*a1 + 8 * v12);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (*v13)
      {
        do
        {
          v15 = v14[1];
          if (v15 == v9)
          {
            if (std::equal_to<std::pair<void const*,google::protobuf::StringPiece>>::operator()[abi:ne180100](v14 + 2, a2))
            {
              return v14[5];
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v15 >= *(_QWORD *)&v8)
                v15 %= *(_QWORD *)&v8;
            }
            else
            {
              v15 &= *(_QWORD *)&v8 - 1;
            }
            if (v15 != v12)
              return 0;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByNumber(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  uint64_t **v11;
  uint64_t *i;
  unint64_t v13;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v5 = *((_QWORD *)a2 + 10);
  v6 = *((_DWORD *)a2 + 17);
  v7 = (uint64_t *)((char *)this + 152);
  v8 = (16777619 * v6) ^ (16777499 * v5);
  v9 = *((_QWORD *)this + 20);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v2 = (16777619 * v6) ^ (16777499 * v5);
      if (v8 >= v9)
        v2 = v8 % v9;
    }
    else
    {
      v2 = v8 & (v9 - 1);
    }
    v11 = *(uint64_t ***)(*v7 + 8 * v2);
    if (v11)
    {
      for (i = *v11; i; i = (uint64_t *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6)
            return 0;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v2)
            break;
        }
      }
    }
  }
  v15 = operator new(0x28uLL);
  *v15 = 0;
  v15[1] = v8;
  v15[2] = v5;
  *((_DWORD *)v15 + 6) = v6;
  v15[4] = a2;
  v16 = (float)(unint64_t)(*((_QWORD *)this + 22) + 1);
  v17 = *((float *)this + 46);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>((uint64_t)v7, v21);
    v9 = *((_QWORD *)this + 20);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v2 = v8 % v9;
      else
        v2 = (16777619 * v6) ^ (16777499 * v5);
    }
    else
    {
      v2 = (v9 - 1) & v8;
    }
  }
  v22 = *v7;
  v23 = *(_QWORD **)(*v7 + 8 * v2);
  if (v23)
  {
    *v15 = *v23;
LABEL_42:
    *v23 = v15;
    goto LABEL_43;
  }
  *v15 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = v15;
  *(_QWORD *)(v22 + 8 * v2) = (char *)this + 168;
  if (*v15)
  {
    v24 = *(_QWORD *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*v7 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*((_QWORD *)this + 22);
  return 1;
}

void sub_18886BC34(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  uint64_t **v11;
  uint64_t *i;
  unint64_t v13;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;

  v6 = *a2;
  v7 = a2[1];
  v8 = (16777619 * (int)v7) ^ (16777499 * *a2);
  v9 = *(_QWORD *)(a1 + 8);
  v25 = v7;
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = (16777619 * (int)v7) ^ (16777499 * *a2);
      if (v8 >= v9)
        v3 = v8 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
    v11 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (uint64_t *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v6 && *((_DWORD *)i + 6) == (_DWORD)v7)
            return;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  v15 = operator new(0x28uLL);
  *v15 = 0;
  v15[1] = v8;
  v15[2] = v6;
  v15[3] = v25;
  v15[4] = a3;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    std::__hash_table<google::protobuf::Descriptor const*,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,std::allocator<google::protobuf::Descriptor const*>>::__rehash<true>(a1, v21);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v23)
  {
    *v15 = *v23;
LABEL_42:
    *v23 = v15;
    goto LABEL_43;
  }
  *v15 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(v22 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    v24 = *(_QWORD *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
}

void sub_18886BE80(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddExtension(google::protobuf::DescriptorPool::Tables *this, const google::protobuf::FieldDescriptor *a2)
{
  unint64_t v4;
  int v5;
  char *v6;
  uint64_t **v7;
  unint64_t v8;
  int v9;
  uint64_t **v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;

  v4 = *((_QWORD *)a2 + 10);
  v5 = *((_DWORD *)a2 + 17);
  v6 = (char *)*((_QWORD *)this + 49);
  if (!v6)
  {
    v10 = (uint64_t **)((char *)this + 392);
    v7 = (uint64_t **)((char *)this + 392);
    goto LABEL_12;
  }
  do
  {
    while (1)
    {
      v7 = (uint64_t **)v6;
      v8 = *((_QWORD *)v6 + 4);
      if (v8 <= v4)
        break;
LABEL_5:
      v6 = (char *)*v7;
      v10 = v7;
      if (!*v7)
        goto LABEL_12;
    }
    if (v8 >= v4)
    {
      v9 = *((_DWORD *)v7 + 10);
      if (v9 > v5)
        goto LABEL_5;
      if (v9 >= v5)
        return 0;
    }
    v6 = (char *)v7[1];
  }
  while (v6);
  v10 = v7 + 1;
LABEL_12:
  v11 = operator new(0x38uLL);
  v11[4] = v4;
  *((_DWORD *)v11 + 10) = v5;
  v11[6] = a2;
  *v11 = 0;
  v11[1] = 0;
  v11[2] = v7;
  *v10 = v11;
  v12 = **((_QWORD **)this + 48);
  if (v12)
  {
    *((_QWORD *)this + 48) = v12;
    v13 = *v10;
  }
  else
  {
    v13 = v11;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)this + 49), v13);
  ++*((_QWORD *)this + 50);
  v15 = *((_QWORD *)this + 61);
  v14 = *((_QWORD *)this + 62);
  if (v15 >= v14)
  {
    v17 = *((_QWORD *)this + 60);
    v18 = (uint64_t)(v15 - v17) >> 4;
    v19 = v18 + 1;
    if ((unint64_t)(v18 + 1) >> 60)
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    v20 = v14 - v17;
    if (v20 >> 3 > v19)
      v19 = v20 >> 3;
    if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0)
      v21 = 0xFFFFFFFFFFFFFFFLL;
    else
      v21 = v19;
    if (v21)
      v21 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<google::protobuf::Descriptor const*,int>>>(v21);
    else
      v22 = 0;
    v23 = v21 + 16 * v18;
    v24 = v21 + 16 * v22;
    *(_QWORD *)v23 = v4;
    *(_DWORD *)(v23 + 8) = v5;
    v16 = v23 + 16;
    v26 = (char *)*((_QWORD *)this + 60);
    v25 = (char *)*((_QWORD *)this + 61);
    if (v25 != v26)
    {
      do
      {
        *(_OWORD *)(v23 - 16) = *((_OWORD *)v25 - 1);
        v23 -= 16;
        v25 -= 16;
      }
      while (v25 != v26);
      v25 = (char *)*((_QWORD *)this + 60);
    }
    *((_QWORD *)this + 60) = v23;
    *((_QWORD *)this + 61) = v16;
    *((_QWORD *)this + 62) = v24;
    if (v25)
      operator delete(v25);
  }
  else
  {
    *(_QWORD *)v15 = v4;
    *(_DWORD *)(v15 + 8) = v5;
    v16 = v15 + 16;
  }
  *((_QWORD *)this + 61) = v16;
  return 1;
}

