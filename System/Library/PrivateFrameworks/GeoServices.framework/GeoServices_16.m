void sub_18967E2D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPAmenityCorrectionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPAmenityCorrectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18967E330(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAmenityCorrectionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  _BOOL8 v36;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_59;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_59;
      if ((v8 >> 3) == 4)
        break;
      if ((v8 >> 3) == 3)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_61;
LABEL_38:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v26 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v27 = *v2;
              v28 = *(_QWORD *)&a1[v27];
              if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
                break;
              v29 = v28 + 1;
              v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
              *(_QWORD *)&a1[v27] = v29;
              if (v30 < 0)
              {
                v12 = v26++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0)
          goto LABEL_61;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0)
          {
            v20 = v14++;
            if (v20 <= 8)
              continue;
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_61;
LABEL_58:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_59;
    }
    if (v14 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
      {
        v31 = a1[*v4];
        if (a1[*v4])
          break;
        while (1)
        {
          v32 = *v2;
          v33 = *(_QWORD *)&a1[v32];
          if (v33 == -1 || v33 >= *(_QWORD *)&a1[*v3])
            break;
          v34 = v33 + 1;
          v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
          *(_QWORD *)&a1[v32] = v34;
          if (v35 < 0)
          {
            v12 = v31++ >= 9;
            if (!v12)
              continue;
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0)
      goto LABEL_61;
    while (1)
    {
      v21 = *v2;
      v22 = *(_QWORD *)&a1[v21];
      if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v23 = v22 + 1;
      v24 = *(char *)(*(_QWORD *)&a1[*v5] + v22);
      *(_QWORD *)&a1[v21] = v23;
      if (v24 < 0)
      {
        v25 = v14++;
        if (v25 <= 8)
          continue;
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_18967E87C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPAmenityCorrectionsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 76) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18967EB68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDebugSettingsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  _BOOL8 v24;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          if (v23)
            objc_msgSend((id)a1, "addKeywords:", v23);

        }
        else if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_34;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_36:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_18967F59C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDebugSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDebugSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18967F5FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDebugSettingsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v22 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v22;
}

void sub_18967FF64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackAddressFieldsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v24;
  unint64_t v26;
  BOOL v27;
  int *v28;
  int v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  char v36;
  char v37;
  char v38;
  int v39;
  char v40;
  void *v41;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_66;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      if (v21 == -1 || v21 >= *(_QWORD *)(v3 + *v6))
        break;
      v22 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_66:
      if ((v12 & 1) != 0)
      {
        v38 = 1;
        goto LABEL_76;
      }
      if (v13)
      {
        while (1)
        {
          v39 = *v13++;
          v40 = 1;
          switch(v39)
          {
            case 0:
              goto LABEL_77;
            case 1:
              goto LABEL_73;
            case 2:
              v40 = 8;
              goto LABEL_73;
            case 3:
              v40 = 4;
              goto LABEL_73;
            case 4:
              v40 = 2;
LABEL_73:
              *(_BYTE *)(a1 + 60) |= v40;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_77;
    }
    v26 = v19 >> 3;
    v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v28 = v13;
      do
      {
        v30 = *v28++;
        v29 = v30;
        v27 = v30 != 0;
        if (v30)
          v31 = v29 == (_DWORD)v26;
        else
          v31 = 1;
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 1) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 16;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v8 -= *(_BYTE *)(a1 + 60) & 1;
        goto LABEL_64;
      case 2:
        if (!v27)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v37 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      case 3:
        if (!v27)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 32;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v37 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_63;
      case 4:
        if (!v27)
        {
LABEL_53:
          v36 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v36 & 1) == 0)
          {
LABEL_74:
            v38 = 0;
            goto LABEL_76;
          }
          goto LABEL_65;
        }
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 24;
LABEL_52:
          v35 = *(void **)(a1 + v33);
          *(_QWORD *)(a1 + v33) = v32;

          v15 = (int *)MEMORY[0x1E0D82BC8];
          --v8;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v37 = *(_BYTE *)(a1 + 60) << 6;
LABEL_63:
          v8 += v37 >> 7;
LABEL_64:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_66;
          continue;
        }
LABEL_75:
        v38 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        *(_BYTE *)(a1 + 60) |= 1u;
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 2u;
        if ((v38 & 1) != 0)
        {
LABEL_77:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_78;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_78:
            v41 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v34 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v34)
          goto LABEL_74;
        goto LABEL_65;
    }
  }
}

void sub_18968057C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896806B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896807F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189680D00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackAddressFieldsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackAddressFieldsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackAddressFieldsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackAddressFieldsReadAllFrom_initialTag;
  Specified = GEORPFeedbackAddressFieldsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189680E88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackAddressFieldsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackAddressFieldsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189680EE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackAddressFieldsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_32;
          goto LABEL_28;
        case 2u:
          if (v14 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 3u:
          if (v14 == 2)
            goto LABEL_28;
          goto LABEL_32;
        case 4u:
          if (v14 != 2)
            goto LABEL_32;
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            v16 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_30;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_32;
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  v16 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v16;
}

void sub_18968129C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackAddressFieldsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1896815A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189681990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackBusinessHoursReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  int *v17;
  int *v18;
  BOOL v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  _BOOL4 v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDHours *v37;
  void *v38;
  int v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  void *v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  int v64;
  int v65;
  char v66;
  void *v67;
  _BOOL4 v69;
  BOOL v70;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v19 = 1;
        else
          v19 = v16 == 0;
        v70 = v19;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
        v69 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_99;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v17;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_26;
      v22 += 7;
      v28 = v23++ >= 9;
      if (v28)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_26:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v24 = 0;
LABEL_28:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_99:
      if (v15)
      {
        v63 = 1;
        goto LABEL_113;
      }
      if (!v16)
        goto LABEL_114;
      while (1)
      {
        v65 = *v16++;
        v64 = v65;
        if (v65 == 1)
          break;
        if (v64 == 4)
        {
          v66 = 8;
LABEL_108:
          *(_BYTE *)(a1 + v21[438]) |= v66;
        }
        else if (!v64)
        {
          goto LABEL_114;
        }
      }
      v66 = 16;
      goto LABEL_108;
    }
    v31 = v24 >> 3;
    v32 = v15;
    if (!v70)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + v21[438]) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_110;
          v37 = objc_alloc_init(GEOPDHours);
          if (GEOPDHoursReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
          {
            PBReaderRecallMark();
            v38 = *(void **)(a1 + 40);
            *(_QWORD *)(a1 + 40) = v37;

            --v9;
            v21 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
            goto LABEL_94;
          }

          v63 = 0;
          v21 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_110;
        v61 = 8 * *(_BYTE *)(a1 + v21[438]);
        goto LABEL_93;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + v21[438]) |= 2u;
        while (2)
        {
          v43 = *v17;
          v44 = *(_QWORD *)(v3 + v43);
          if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v44);
            *(_QWORD *)(v3 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              v28 = v41++ >= 9;
              if (v28)
              {
                v42 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v42 = 0;
LABEL_79:
        v60 = 32;
        goto LABEL_84;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_74;
        v46 = 0;
        v47 = 0;
        v42 = 0;
        *(_BYTE *)(a1 + v21[438]) |= 1u;
        while (2)
        {
          v48 = *v17;
          v49 = *(_QWORD *)(v3 + v48);
          if (v49 == -1 || v49 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v49 + 1;
            v42 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              v28 = v47++ >= 9;
              if (v28)
              {
                v42 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v42 = 0;
LABEL_83:
        v60 = 24;
LABEL_84:
        *(_QWORD *)(a1 + v60) = v42;
        goto LABEL_95;
      case 4:
        if (!v32)
          goto LABEL_74;
        if ((*(_BYTE *)(a1 + v21[438]) & 8) == 0)
        {
          PBReaderReadString();
          v51 = objc_claimAutoreleasedReturnValue();
          v52 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v51;

          --v9;
LABEL_94:
          v15 = v69;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
          if (v9)
            v62 = 1;
          else
            v62 = v15;
          if ((v62 & 1) == 0)
            goto LABEL_99;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v61 = 16 * *(_BYTE *)(a1 + v21[438]);
LABEL_93:
          v9 += v61 >> 7;
          goto LABEL_94;
        }
LABEL_110:
        v63 = 0;
LABEL_112:
        v15 = v69;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_113:
        *(_BYTE *)(a1 + v21[438]) |= 0x10u;
        *(_BYTE *)(a1 + v21[438]) |= 8u;
        if ((v63 & 1) != 0)
        {
LABEL_114:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if (v15)
            goto LABEL_115;
        }
        else
        {
          v3 = 0;
          if (v15)
          {
LABEL_115:
            v67 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 5:
        if ((v8 & 1) != 0)
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          *(_BYTE *)(a1 + v21[438]) |= 4u;
          while (1)
          {
            v56 = *v17;
            v57 = *(_QWORD *)(v3 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
              break;
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v57);
            *(_QWORD *)(v3 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if ((v58 & 0x80) == 0)
              goto LABEL_86;
            v53 += 7;
            v28 = v54++ >= 9;
            if (v28)
            {
              LODWORD(v55) = 0;
              goto LABEL_88;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_86:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v55) = 0;
LABEL_88:
          *(_DWORD *)(a1 + 60) = v55;
        }
        else
        {
LABEL_74:
          v59 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v69;
          if ((v59 & 1) == 0)
          {
LABEL_109:
            v63 = 0;
            goto LABEL_113;
          }
        }
        goto LABEL_95;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v69;
        if (!v39)
          goto LABEL_109;
        goto LABEL_95;
    }
  }
}

void sub_189682260(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189682AF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackBusinessHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackBusinessHoursReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackBusinessHoursReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackBusinessHoursReadAllFrom_initialTag;
  Specified = GEORPFeedbackBusinessHoursReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189682C90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackBusinessHoursReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackBusinessHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189682CF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackBusinessHoursIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDHoursIsValid(a1))
            goto LABEL_54;
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_50;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_51;
          }
        case 4u:
          if (v14 == 2)
            goto LABEL_40;
          goto LABEL_54;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_54;
          v27 = 0;
          break;
        default:
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
          break;
        v30 = v29 + 1;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v21 = v27++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_1896831CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackBusinessHoursIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x20) != 0)
    return 1;
  if ((v2 & 0x10) != 0)
  {
    if (GEOPDHoursIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 64);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEORPFeedbackBusinessHoursIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackBusinessHoursIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896835B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189683A84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  __int16 v52;
  char v53;
  int v54;
  __int16 v55;
  void *v56;
  GEOLocation *v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFF9FFFBFFFEFFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 3) & 1)+ ((*(_WORD *)(a1 + 88) >> 4) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 3;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v60 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_102;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_102:
      if ((v15 & 1) != 0)
      {
        v53 = 1;
        goto LABEL_115;
      }
      if (v16)
      {
        while (1)
        {
          v54 = *v16++;
          v55 = 4;
          switch(v54)
          {
            case 0:
              goto LABEL_116;
            case 1:
              goto LABEL_111;
            case 2:
              v55 = 64;
              goto LABEL_111;
            case 3:
              v55 = 32;
              goto LABEL_111;
            case 5:
              v55 = 128;
              goto LABEL_111;
            case 7:
              v55 = 8;
              goto LABEL_111;
            case 8:
              v55 = 16;
LABEL_111:
              *(_WORD *)(a1 + 88) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_116;
    }
    v29 = v22 >> 3;
    v30 = v15;
    if ((v60 & 1) == 0)
    {
      v31 = v16;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_77;
        if ((*(_WORD *)(a1 + 88) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 16;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v52 = *(_WORD *)(a1 + 88) << 13;
        goto LABEL_99;
      case 2:
        if (!v30)
          goto LABEL_77;
        if ((*(_WORD *)(a1 + 88) & 0x40) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v52 = *(_WORD *)(a1 + 88) << 9;
        goto LABEL_99;
      case 3:
        if (!v30)
          goto LABEL_77;
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_114;
          v52 = *(_WORD *)(a1 + 88) << 10;
LABEL_99:
          v7 += v52 >> 15;
LABEL_100:
          v15 = v59;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_102;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_114;
        v58 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v38 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v58;
LABEL_76:

          --v7;
          goto LABEL_100;
        }

LABEL_114:
        v53 = 0;
        v15 = v59;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_115:
        *(_WORD *)(a1 + 88) |= 4u;
        *(_WORD *)(a1 + 88) |= 0x40u;
        *(_WORD *)(a1 + 88) |= 0x20u;
        *(_WORD *)(a1 + 88) |= 0x80u;
        *(_WORD *)(a1 + 88) |= 8u;
        *(_WORD *)(a1 + 88) |= 0x10u;
        if ((v53 & 1) != 0)
        {
LABEL_116:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_117;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_117:
            v56 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          v42 = *v17;
          v43 = *(_QWORD *)(v3 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              v26 = v40++ >= 9;
              if (v26)
              {
                v41 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v41 = 0;
LABEL_82:
        *(_QWORD *)(a1 + 64) = v41;
        goto LABEL_101;
      case 5:
        if (!v30)
          goto LABEL_77;
        if ((*(_WORD *)(a1 + 88) & 0x80) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v52 = *(_WORD *)(a1 + 88) << 8;
        goto LABEL_99;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_77;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (2)
        {
          v48 = *v17;
          v49 = *(_QWORD *)(v3 + v48);
          if (v49 == -1 || v49 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v49);
            *(_QWORD *)(v3 + v48) = v49 + 1;
            v47 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v47) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v47) = 0;
LABEL_86:
        *(_DWORD *)(a1 + 84) = v47;
        goto LABEL_101;
      case 7:
        if (!v30)
          goto LABEL_77;
        if ((*(_WORD *)(a1 + 88) & 8) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v52 = *(_WORD *)(a1 + 88) << 12;
        goto LABEL_99;
      case 8:
        if (!v30)
        {
LABEL_77:
          v51 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v59;
          if ((v51 & 1) == 0)
          {
LABEL_112:
            v53 = 0;
            goto LABEL_115;
          }
          goto LABEL_101;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = 32;
LABEL_75:
          v38 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_114;
        v52 = *(_WORD *)(a1 + 88) << 11;
        goto LABEL_99;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v59;
        if (!v37)
          goto LABEL_112;
        goto LABEL_101;
    }
  }
}

void sub_189684388(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896844C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189684670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189684948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189684A88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896852D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPhotoMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPhotoMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPhotoMetadataReadAllFrom_initialTag;
  Specified = GEORPPhotoMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189685478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPhotoMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPhotoMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896854D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPhotoMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_53;
          goto LABEL_49;
        case 2u:
          if (v14 == 2)
            goto LABEL_49;
          goto LABEL_53;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 5u:
          if (v14 == 2)
            goto LABEL_49;
          goto LABEL_53;
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v22 = 0;
          break;
        case 7u:
          if (v14 == 2)
            goto LABEL_49;
          goto LABEL_53;
        case 8u:
          if (v14 == 2)
            goto LABEL_49;
          goto LABEL_53;
        default:
LABEL_49:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189685A00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPPhotoMetadataIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v2 = *(unsigned __int16 *)(a1 + 88);
  if ((v2 & 0x144) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 88);
  }
  if ((v2 & 0x88) != 0)
    return 1;
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEORPPhotoMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPPhotoMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEORPPhotoMetadataClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasGeotag")
    && (objc_msgSend(a1, "geotag"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "geotag");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setGeotag:", v8);
  }
  else
  {
    objc_msgSend(a1, "geotag");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEORPPhotoMetadataHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "geotag");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_189685FD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTimestampReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v23 = 0;
          v24 = 0;
          v25 = 0;
          while (1)
          {
            v26 = *v4;
            v27 = *(_QWORD *)&v3[v26];
            if (v27 == -1 || v27 >= *(_QWORD *)&v3[*v5])
              break;
            v28 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v27);
            *(_QWORD *)&v3[v26] = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if ((v28 & 0x80) == 0)
              goto LABEL_42;
            v23 += 7;
            v14 = v24++ >= 9;
            if (v14)
            {
              v25 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            v25 = 0;
LABEL_44:
          *(_QWORD *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 2)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_38;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_40:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1896869B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTimestampReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPTimestampReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189686A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPTimestampIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  uint64_t v16;
  char v17;
  char v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  BOOL v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  _BOOL4 v35;
  _BOOL8 v36;
  _QWORD v38[2];

  v38[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v38[0] = 0;
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_50;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
      {
LABEL_50:
        v35 = HIDWORD(v38[0]) != 0;
        goto LABEL_52;
      }
      if ((v8 >> 3) == 1)
      {
        v20 = 0;
        v21 = 1;
        while (1)
        {
          v22 = v21;
          v23 = *((_DWORD *)v38 + v20);
          if (!v23)
            break;
          if (v23 != 1)
          {
            v21 = 0;
            v20 = 1;
            if ((v22 & 1) != 0)
              continue;
          }
          goto LABEL_56;
        }
        *((_DWORD *)v38 + v20) = 1;
        if (v14)
        {
LABEL_56:
          PBReaderRecallMark();
          return 0;
        }
        v30 = 0;
        while (1)
        {
          v31 = *v2;
          v32 = *(_QWORD *)&a1[v31];
          if (v32 == -1 || v32 >= *(_QWORD *)&a1[*v3])
            break;
          v33 = v32 + 1;
          v34 = *(char *)(*(_QWORD *)&a1[*v5] + v32);
          *(_QWORD *)&a1[v31] = v33;
          if (v34 < 0)
          {
            v29 = v30++ > 8;
            if (!v29)
              continue;
          }
          goto LABEL_49;
        }
      }
      else
      {
        if ((v8 >> 3) != 2)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_56;
          goto LABEL_49;
        }
        v16 = 0;
        v17 = 1;
        while (1)
        {
          v18 = v17;
          v19 = *((_DWORD *)v38 + v16);
          if (!v19)
            break;
          if (v19 != 2)
          {
            v17 = 0;
            v16 = 1;
            if ((v18 & 1) != 0)
              continue;
          }
          goto LABEL_56;
        }
        *((_DWORD *)v38 + v16) = 2;
        if (v14)
          goto LABEL_56;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          if (v26 == -1 || v26 >= *(_QWORD *)&a1[*v3])
            break;
          v27 = v26 + 1;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v29 = v24++ > 8;
            if (!v29)
              continue;
          }
          goto LABEL_49;
        }
      }
      a1[*v4] = 1;
LABEL_49:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_50;
    }
  }
  v35 = 0;
LABEL_52:
  if (a1[*v4])
    v36 = 0;
  else
    v36 = v35;
  PBReaderRecallMark();
  return v36;
}

id GEOGetGEORouteBuilder_GeometryRouteLog()
{
  if (qword_1EDF4FB70 != -1)
    dispatch_once(&qword_1EDF4FB70, &__block_literal_global_172);
  return (id)_MergedGlobals_1_1;
}

void sub_189688CCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClientACSuggestionEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  uint64_t v142;
  void *v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  char v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  char v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  char v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  char v196;
  unsigned int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  char v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char v216;
  char v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  char v223;
  char v224;
  unsigned int v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  char v230;
  uint64_t v231;
  unint64_t v232;
  int v233;
  uint64_t v234;
  unint64_t v235;
  char v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  char v241;
  char v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  char v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  char v253;
  char v254;
  unsigned int v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  char v259;
  char v260;
  unsigned int v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  char v266;
  char v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  char v272;
  char v273;
  unsigned int v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  char v278;
  char v279;
  unsigned int v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  char v284;
  char v285;
  unsigned int v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  char v291;
  char v292;
  unsigned int v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  char v297;
  char v298;
  uint64_t v299;
  BOOL v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  char v304;
  char v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  int v309;
  uint64_t v310;
  void *v311;
  GEOSubactionMetaData *v313;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
  v12 = (HIWORD(*(_QWORD *)(a1 + 216)) & 1) + ((*(_QWORD *)(a1 + 216) >> 47) & 1) + ((*(_QWORD *)(a1 + 216) >> 46) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v15 = v10 | (v12 > 1);
        if (v10 & 1 | (v12 > 1) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (v16 == 0) | v15;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_6:
        v13 = v9;
        v14 = v10;
LABEL_8:
        ++v7;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_560;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_560:
      if ((v15 & 1) != 0)
      {
        *(_QWORD *)(a1 + v11[450]) |= 0x1C00000000000uLL;
        goto LABEL_572;
      }
      if (!v16)
      {
LABEL_572:
        v3 = *(_BYTE *)(v3 + *v18) == 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_573:
        v311 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        while (1)
        {
          v309 = *v16++;
          v308 = v309;
          if (v309 <= 21)
            break;
          if (v308 == 31)
          {
            v310 = 0x400000000000;
LABEL_570:
            *(_QWORD *)(a1 + v11[450]) |= v310;
          }
          else if (v308 == 22)
          {
            v310 = 0x800000000000;
            goto LABEL_570;
          }
        }
        if (v308 == 20)
        {
          v310 = 0x1000000000000;
          goto LABEL_570;
        }
        if (!v308)
          goto LABEL_572;
      }
    }
    v31 = v23 >> 3;
    v32 = v15;
    if ((v19 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x4000000uLL;
        while (1)
        {
          v40 = *v17;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_385;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_387;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_385:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_387:
        v299 = 188;
        goto LABEL_529;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x200000000000uLL;
        while (2)
        {
          v48 = *v17;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v28 = v46++ >= 9;
              if (v28)
              {
                v47 = 0;
                goto LABEL_391;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v47 = 0;
LABEL_391:
        v300 = v47 != 0;
        v301 = 213;
        goto LABEL_524;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 4uLL;
        v52 = *v17;
        v53 = *(_QWORD *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v53);
          *(_QWORD *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 32;
        goto LABEL_553;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v55 = 0;
        v56 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x400uLL;
        while (2)
        {
          v57 = *v17;
          v58 = *(_QWORD *)(v3 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v58);
            *(_QWORD *)(v3 + v57) = v59;
            v39 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v28 = v56++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_395;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_395:
        v299 = 124;
        goto LABEL_529;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 1uLL;
        v61 = *v17;
        v62 = *(_QWORD *)(v3 + v61);
        if (v62 <= 0xFFFFFFFFFFFFFFF7 && v62 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v62);
          *(_QWORD *)(v3 + v61) = v62 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 16;
        goto LABEL_553;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x20000000000uLL;
        while (2)
        {
          v66 = *v17;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v28 = v64++ >= 9;
              if (v28)
              {
                v65 = 0;
                goto LABEL_399;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v65 = 0;
LABEL_399:
        v300 = v65 != 0;
        v301 = 209;
        goto LABEL_524;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v70 = 0;
        v71 = 0;
        v72 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x40000000000uLL;
        while (2)
        {
          v73 = *v17;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v28 = v71++ >= 9;
              if (v28)
              {
                v72 = 0;
                goto LABEL_403;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v72 = 0;
LABEL_403:
        v300 = v72 != 0;
        v301 = 210;
        goto LABEL_524;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v77 = 0;
        v78 = 0;
        v79 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x4000000000uLL;
        while (2)
        {
          v80 = *v17;
          v81 = *(_QWORD *)(v3 + v80);
          v82 = v81 + 1;
          if (v81 == -1 || v82 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v81);
            *(_QWORD *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              v28 = v78++ >= 9;
              if (v28)
              {
                v79 = 0;
                goto LABEL_407;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v79 = 0;
LABEL_407:
        v300 = v79 != 0;
        v301 = 206;
        goto LABEL_524;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v84 = 0;
        v85 = 0;
        v86 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x10000000000uLL;
        while (2)
        {
          v87 = *v17;
          v88 = *(_QWORD *)(v3 + v87);
          v89 = v88 + 1;
          if (v88 == -1 || v89 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v90 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v88);
            *(_QWORD *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              v28 = v85++ >= 9;
              if (v28)
              {
                v86 = 0;
                goto LABEL_411;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v86 = 0;
LABEL_411:
        v300 = v86 != 0;
        v301 = 208;
        goto LABEL_524;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v91 = 0;
        v92 = 0;
        v93 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x8000000000uLL;
        while (2)
        {
          v94 = *v17;
          v95 = *(_QWORD *)(v3 + v94);
          v96 = v95 + 1;
          if (v95 == -1 || v96 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v95);
            *(_QWORD *)(v3 + v94) = v96;
            v93 |= (unint64_t)(v97 & 0x7F) << v91;
            if (v97 < 0)
            {
              v91 += 7;
              v28 = v92++ >= 9;
              if (v28)
              {
                v93 = 0;
                goto LABEL_415;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v93 = 0;
LABEL_415:
        v300 = v93 != 0;
        v301 = 207;
        goto LABEL_524;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v98 = 0;
        v99 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x800uLL;
        while (2)
        {
          v100 = *v17;
          v101 = *(_QWORD *)(v3 + v100);
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v39 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              v28 = v99++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_419;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_419:
        v299 = 128;
        goto LABEL_529;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v104 = 0;
        v105 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x100uLL;
        while (2)
        {
          v106 = *v17;
          v107 = *(_QWORD *)(v3 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v107);
            *(_QWORD *)(v3 + v106) = v108;
            v39 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              v28 = v105++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_423;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_423:
        v299 = 116;
        goto LABEL_529;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v110 = 0;
        v111 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x800000uLL;
        while (2)
        {
          v112 = *v17;
          v113 = *(_QWORD *)(v3 + v112);
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v39 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              v28 = v111++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_427;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_427:
        v299 = 176;
        goto LABEL_529;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v116 = 0;
        v117 = 0;
        v118 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x1000000000uLL;
        while (2)
        {
          v119 = *v17;
          v120 = *(_QWORD *)(v3 + v119);
          v121 = v120 + 1;
          if (v120 == -1 || v121 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v122 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v120);
            *(_QWORD *)(v3 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              v28 = v117++ >= 9;
              if (v28)
              {
                v118 = 0;
                goto LABEL_431;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v118 = 0;
LABEL_431:
        v300 = v118 != 0;
        v301 = 204;
        goto LABEL_524;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v123 = 0;
        v124 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x1000uLL;
        while (2)
        {
          v125 = *v17;
          v126 = *(_QWORD *)(v3 + v125);
          v127 = v126 + 1;
          if (v126 == -1 || v127 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v126);
            *(_QWORD *)(v3 + v125) = v127;
            v39 |= (unint64_t)(v128 & 0x7F) << v123;
            if (v128 < 0)
            {
              v123 += 7;
              v28 = v124++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_435;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_435:
        v299 = 132;
        goto LABEL_529;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 8uLL;
        v129 = *v17;
        v130 = *(_QWORD *)(v3 + v129);
        if (v130 <= 0xFFFFFFFFFFFFFFF7 && v130 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v130);
          *(_QWORD *)(v3 + v129) = v130 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 48;
        goto LABEL_553;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 0x20uLL;
        v131 = *v17;
        v132 = *(_QWORD *)(v3 + v131);
        if (v132 <= 0xFFFFFFFFFFFFFFF7 && v132 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v132);
          *(_QWORD *)(v3 + v131) = v132 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 64;
        goto LABEL_553;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 0x10uLL;
        v133 = *v17;
        v134 = *(_QWORD *)(v3 + v133);
        if (v134 <= 0xFFFFFFFFFFFFFFF7 && v134 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v134);
          *(_QWORD *)(v3 + v133) = v134 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 56;
        goto LABEL_553;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v135 = 0;
        v136 = 0;
        v137 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x10000000uLL;
        while (2)
        {
          v138 = *v17;
          v139 = *(_QWORD *)(v3 + v138);
          v140 = v139 + 1;
          if (v139 == -1 || v140 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v141 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v139);
            *(_QWORD *)(v3 + v138) = v140;
            v137 |= (unint64_t)(v141 & 0x7F) << v135;
            if (v141 < 0)
            {
              v135 += 7;
              v28 = v136++ >= 9;
              if (v28)
              {
                v137 = 0;
                goto LABEL_439;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v137 = 0;
LABEL_439:
        v300 = v137 != 0;
        v301 = 196;
        goto LABEL_524;
      case 20:
        if (!v32)
          goto LABEL_382;
        if ((*(_BYTE *)(a1 + v11[450] + 6) & 1) == 0)
        {
          PBReaderReadString();
          v142 = objc_claimAutoreleasedReturnValue();
          v143 = *(void **)(a1 + 80);
          *(_QWORD *)(a1 + 80) = v142;
          goto LABEL_245;
        }
        v302 = PBReaderSkipValueWithTag();
        v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (v16 == 0) | v15;
        if ((v302 & 1) == 0)
          goto LABEL_577;
        v303 = *(_QWORD *)(a1 + 216) << 15;
        goto LABEL_536;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v144 = 0;
        v145 = 0;
        v146 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x2000000000uLL;
        while (2)
        {
          v147 = *v17;
          v148 = *(_QWORD *)(v3 + v147);
          v149 = v148 + 1;
          if (v148 == -1 || v149 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v150 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v148);
            *(_QWORD *)(v3 + v147) = v149;
            v146 |= (unint64_t)(v150 & 0x7F) << v144;
            if (v150 < 0)
            {
              v144 += 7;
              v28 = v145++ >= 9;
              if (v28)
              {
                v146 = 0;
                goto LABEL_443;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v146 = 0;
LABEL_443:
        v300 = v146 != 0;
        v301 = 205;
        goto LABEL_524;
      case 22:
        if (!v32)
          goto LABEL_382;
        if ((*(_BYTE *)(a1 + v11[450] + 5) & 0x80) != 0)
        {
          v304 = PBReaderSkipValueWithTag();
          v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v19 = (v16 == 0) | v15;
          if ((v304 & 1) == 0)
            goto LABEL_577;
          v303 = *(_QWORD *)(a1 + 216) << 16;
          goto LABEL_536;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_576;
        v313 = objc_alloc_init(GEOSubactionMetaData);
        if (!GEOSubactionMetaDataReadAllFrom((uint64_t)v313, (void *)v3, v9 & 1))
          goto LABEL_575;
        PBReaderRecallMark();
        v151 = 72;
        goto LABEL_244;
      case 23:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v152 = 0;
        v153 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x200uLL;
        while (2)
        {
          v154 = *v17;
          v155 = *(_QWORD *)(v3 + v154);
          v156 = v155 + 1;
          if (v155 == -1 || v156 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v157 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v155);
            *(_QWORD *)(v3 + v154) = v156;
            v39 |= (unint64_t)(v157 & 0x7F) << v152;
            if (v157 < 0)
            {
              v152 += 7;
              v28 = v153++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_447;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_447:
        v299 = 120;
        goto LABEL_529;
      case 24:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v158 = 0;
        v159 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x2000000uLL;
        while (2)
        {
          v160 = *v17;
          v161 = *(_QWORD *)(v3 + v160);
          v162 = v161 + 1;
          if (v161 == -1 || v162 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v163 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v161);
            *(_QWORD *)(v3 + v160) = v162;
            v39 |= (unint64_t)(v163 & 0x7F) << v158;
            if (v163 < 0)
            {
              v158 += 7;
              v28 = v159++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_451;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_451:
        v299 = 184;
        goto LABEL_529;
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v164 = 0;
        v165 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x1000000uLL;
        while (2)
        {
          v166 = *v17;
          v167 = *(_QWORD *)(v3 + v166);
          v168 = v167 + 1;
          if (v167 == -1 || v168 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v169 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v167);
            *(_QWORD *)(v3 + v166) = v168;
            v39 |= (unint64_t)(v169 & 0x7F) << v164;
            if (v169 < 0)
            {
              v164 += 7;
              v28 = v165++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_455;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_455:
        v299 = 180;
        goto LABEL_529;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v170 = 0;
        v171 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x8000000uLL;
        while (2)
        {
          v172 = *v17;
          v173 = *(_QWORD *)(v3 + v172);
          v174 = v173 + 1;
          if (v173 == -1 || v174 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v175 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v173);
            *(_QWORD *)(v3 + v172) = v174;
            v39 |= (unint64_t)(v175 & 0x7F) << v170;
            if (v175 < 0)
            {
              v170 += 7;
              v28 = v171++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_459;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_459:
        v299 = 192;
        goto LABEL_529;
      case 27:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 2uLL;
        v176 = *v17;
        v177 = *(_QWORD *)(v3 + v176);
        if (v177 <= 0xFFFFFFFFFFFFFFF7 && v177 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v177);
          *(_QWORD *)(v3 + v176) = v177 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 24;
        goto LABEL_553;
      case 28:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 0x40uLL;
        v178 = *v17;
        v179 = *(_QWORD *)(v3 + v178);
        if (v179 <= 0xFFFFFFFFFFFFFFF7 && v179 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v179);
          *(_QWORD *)(v3 + v178) = v179 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 88;
        goto LABEL_553;
      case 29:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v180 = 0;
        v181 = 0;
        v182 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x800000000uLL;
        while (2)
        {
          v183 = *v17;
          v184 = *(_QWORD *)(v3 + v183);
          v185 = v184 + 1;
          if (v184 == -1 || v185 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v186 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v184);
            *(_QWORD *)(v3 + v183) = v185;
            v182 |= (unint64_t)(v186 & 0x7F) << v180;
            if (v186 < 0)
            {
              v180 += 7;
              v28 = v181++ >= 9;
              if (v28)
              {
                v182 = 0;
                goto LABEL_463;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v182 = 0;
LABEL_463:
        v300 = v182 != 0;
        v301 = 203;
        goto LABEL_524;
      case 30:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 0x80uLL;
        v187 = *v17;
        v188 = *(_QWORD *)(v3 + v187);
        if (v188 <= 0xFFFFFFFFFFFFFFF7 && v188 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(v3 + *v20) + v188);
          *(_QWORD *)(v3 + v187) = v188 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v54 = 0;
        }
        v306 = 96;
LABEL_553:
        *(_QWORD *)(a1 + v306) = v54;
        goto LABEL_559;
      case 31:
        if (!v32)
          goto LABEL_382;
        if ((*(_BYTE *)(a1 + v11[450] + 5) & 0x40) != 0)
        {
          v305 = PBReaderSkipValueWithTag();
          v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v19 = (v16 == 0) | v15;
          if ((v305 & 1) == 0)
            goto LABEL_577;
          v303 = *(_QWORD *)(a1 + 216) << 17;
LABEL_536:
          v7 += v303 >> 63;
          goto LABEL_559;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_576;
        v313 = objc_alloc_init(GEOHyperlinkMetaData);
        if (GEOHyperlinkMetaDataReadAllFrom((uint64_t)v313, (void *)v3))
        {
          PBReaderRecallMark();
          v151 = 40;
LABEL_244:
          v143 = *(void **)(a1 + v151);
          *(_QWORD *)(a1 + v151) = v313;
LABEL_245:

          --v7;
          v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v19 = (v16 == 0) | v15;
LABEL_559:
          if (!(v15 & 1 | (v7 != 0)))
            goto LABEL_560;
          continue;
        }
LABEL_575:

LABEL_576:
        v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
LABEL_577:
        v3 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x1C00000000000uLL;
        if ((v15 & 1) != 0)
          goto LABEL_573;
        return v3;
      case 32:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v189 = 0;
        v190 = 0;
        v191 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x20000000uLL;
        while (2)
        {
          v192 = *v17;
          v193 = *(_QWORD *)(v3 + v192);
          v194 = v193 + 1;
          if (v193 == -1 || v194 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v195 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v193);
            *(_QWORD *)(v3 + v192) = v194;
            v191 |= (unint64_t)(v195 & 0x7F) << v189;
            if (v195 < 0)
            {
              v189 += 7;
              v28 = v190++ >= 9;
              if (v28)
              {
                v191 = 0;
                goto LABEL_467;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v191 = 0;
LABEL_467:
        v300 = v191 != 0;
        v301 = 197;
        goto LABEL_524;
      case 33:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v196 = 0;
        v197 = 0;
        v198 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x400000000uLL;
        while (2)
        {
          v199 = *v17;
          v200 = *(_QWORD *)(v3 + v199);
          v201 = v200 + 1;
          if (v200 == -1 || v201 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v202 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v200);
            *(_QWORD *)(v3 + v199) = v201;
            v198 |= (unint64_t)(v202 & 0x7F) << v196;
            if (v202 < 0)
            {
              v196 += 7;
              v28 = v197++ >= 9;
              if (v28)
              {
                v198 = 0;
                goto LABEL_471;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v198 = 0;
LABEL_471:
        v300 = v198 != 0;
        v301 = 202;
        goto LABEL_524;
      case 34:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v203 = 0;
        v204 = 0;
        v205 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x200000000uLL;
        while (2)
        {
          v206 = *v17;
          v207 = *(_QWORD *)(v3 + v206);
          v208 = v207 + 1;
          if (v207 == -1 || v208 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v209 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v207);
            *(_QWORD *)(v3 + v206) = v208;
            v205 |= (unint64_t)(v209 & 0x7F) << v203;
            if (v209 < 0)
            {
              v203 += 7;
              v28 = v204++ >= 9;
              if (v28)
              {
                v205 = 0;
                goto LABEL_475;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v205 = 0;
LABEL_475:
        v300 = v205 != 0;
        v301 = 201;
        goto LABEL_524;
      case 35:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v210 = 0;
        v211 = 0;
        v212 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x100000000uLL;
        while (2)
        {
          v213 = *v17;
          v214 = *(_QWORD *)(v3 + v213);
          v215 = v214 + 1;
          if (v214 == -1 || v215 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v216 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v214);
            *(_QWORD *)(v3 + v213) = v215;
            v212 |= (unint64_t)(v216 & 0x7F) << v210;
            if (v216 < 0)
            {
              v210 += 7;
              v28 = v211++ >= 9;
              if (v28)
              {
                v212 = 0;
                goto LABEL_479;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v212 = 0;
LABEL_479:
        v300 = v212 != 0;
        v301 = 200;
        goto LABEL_524;
      case 36:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v217 = 0;
        v218 = 0;
        v219 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x40000000uLL;
        while (2)
        {
          v220 = *v17;
          v221 = *(_QWORD *)(v3 + v220);
          v222 = v221 + 1;
          if (v221 == -1 || v222 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v223 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v221);
            *(_QWORD *)(v3 + v220) = v222;
            v219 |= (unint64_t)(v223 & 0x7F) << v217;
            if (v223 < 0)
            {
              v217 += 7;
              v28 = v218++ >= 9;
              if (v28)
              {
                v219 = 0;
                goto LABEL_483;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v219 = 0;
LABEL_483:
        v300 = v219 != 0;
        v301 = 198;
        goto LABEL_524;
      case 37:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v224 = 0;
        v225 = 0;
        v226 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x80000000uLL;
        while (2)
        {
          v227 = *v17;
          v228 = *(_QWORD *)(v3 + v227);
          v229 = v228 + 1;
          if (v228 == -1 || v229 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v230 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v228);
            *(_QWORD *)(v3 + v227) = v229;
            v226 |= (unint64_t)(v230 & 0x7F) << v224;
            if (v230 < 0)
            {
              v224 += 7;
              v28 = v225++ >= 9;
              if (v28)
              {
                v226 = 0;
                goto LABEL_487;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v226 = 0;
LABEL_487:
        v300 = v226 != 0;
        v301 = 199;
        goto LABEL_524;
      case 38:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 0x2000uLL;
        v231 = *v17;
        v232 = *(_QWORD *)(v3 + v231);
        if (v232 <= 0xFFFFFFFFFFFFFFFBLL && v232 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v233 = *(_DWORD *)(*(_QWORD *)(v3 + *v20) + v232);
          *(_QWORD *)(v3 + v231) = v232 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v233 = 0;
        }
        v307 = 136;
        goto LABEL_558;
      case 39:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        *(_QWORD *)(a1 + v11[450]) |= 0x4000uLL;
        v234 = *v17;
        v235 = *(_QWORD *)(v3 + v234);
        if (v235 <= 0xFFFFFFFFFFFFFFFBLL && v235 + 4 <= *(_QWORD *)(v3 + *v6))
        {
          v233 = *(_DWORD *)(*(_QWORD *)(v3 + *v20) + v235);
          *(_QWORD *)(v3 + v234) = v235 + 4;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v233 = 0;
        }
        v307 = 140;
LABEL_558:
        *(_DWORD *)(a1 + v307) = v233;
        goto LABEL_559;
      case 40:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v236 = 0;
        v237 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x8000uLL;
        while (2)
        {
          v238 = *v17;
          v239 = *(_QWORD *)(v3 + v238);
          v240 = v239 + 1;
          if (v239 == -1 || v240 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v241 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v239);
            *(_QWORD *)(v3 + v238) = v240;
            v39 |= (unint64_t)(v241 & 0x7F) << v236;
            if (v241 < 0)
            {
              v236 += 7;
              v28 = v237++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_491;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_491:
        v299 = 144;
        goto LABEL_529;
      case 41:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v242 = 0;
        v243 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x10000uLL;
        while (2)
        {
          v244 = *v17;
          v245 = *(_QWORD *)(v3 + v244);
          v246 = v245 + 1;
          if (v245 == -1 || v246 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v247 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v245);
            *(_QWORD *)(v3 + v244) = v246;
            v39 |= (unint64_t)(v247 & 0x7F) << v242;
            if (v247 < 0)
            {
              v242 += 7;
              v28 = v243++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_495;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_495:
        v299 = 148;
        goto LABEL_529;
      case 42:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v248 = 0;
        v249 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x20000uLL;
        while (2)
        {
          v250 = *v17;
          v251 = *(_QWORD *)(v3 + v250);
          v252 = v251 + 1;
          if (v251 == -1 || v252 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v253 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v251);
            *(_QWORD *)(v3 + v250) = v252;
            v39 |= (unint64_t)(v253 & 0x7F) << v248;
            if (v253 < 0)
            {
              v248 += 7;
              v28 = v249++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_499;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_499:
        v299 = 152;
        goto LABEL_529;
      case 43:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v254 = 0;
        v255 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x200000uLL;
        while (2)
        {
          v256 = *v17;
          v257 = *(_QWORD *)(v3 + v256);
          v258 = v257 + 1;
          if (v257 == -1 || v258 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v259 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v257);
            *(_QWORD *)(v3 + v256) = v258;
            v39 |= (unint64_t)(v259 & 0x7F) << v254;
            if (v259 < 0)
            {
              v254 += 7;
              v28 = v255++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_503;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_503:
        v299 = 168;
        goto LABEL_529;
      case 44:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v260 = 0;
        v261 = 0;
        v262 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x80000000000uLL;
        while (2)
        {
          v263 = *v17;
          v264 = *(_QWORD *)(v3 + v263);
          v265 = v264 + 1;
          if (v264 == -1 || v265 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v266 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v264);
            *(_QWORD *)(v3 + v263) = v265;
            v262 |= (unint64_t)(v266 & 0x7F) << v260;
            if (v266 < 0)
            {
              v260 += 7;
              v28 = v261++ >= 9;
              if (v28)
              {
                v262 = 0;
                goto LABEL_507;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v262 = 0;
LABEL_507:
        v300 = v262 != 0;
        v301 = 211;
        goto LABEL_524;
      case 45:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v267 = 0;
        v268 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x80000uLL;
        while (2)
        {
          v269 = *v17;
          v270 = *(_QWORD *)(v3 + v269);
          v271 = v270 + 1;
          if (v270 == -1 || v271 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v272 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v270);
            *(_QWORD *)(v3 + v269) = v271;
            v39 |= (unint64_t)(v272 & 0x7F) << v267;
            if (v272 < 0)
            {
              v267 += 7;
              v28 = v268++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_511;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_511:
        v299 = 160;
        goto LABEL_529;
      case 46:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v273 = 0;
        v274 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x40000uLL;
        while (2)
        {
          v275 = *v17;
          v276 = *(_QWORD *)(v3 + v275);
          v277 = v276 + 1;
          if (v276 == -1 || v277 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v278 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v276);
            *(_QWORD *)(v3 + v275) = v277;
            v39 |= (unint64_t)(v278 & 0x7F) << v273;
            if (v278 < 0)
            {
              v273 += 7;
              v28 = v274++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_515;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_515:
        v299 = 156;
        goto LABEL_529;
      case 47:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v279 = 0;
        v280 = 0;
        v39 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x400000uLL;
        while (2)
        {
          v281 = *v17;
          v282 = *(_QWORD *)(v3 + v281);
          v283 = v282 + 1;
          if (v282 == -1 || v283 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v284 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v282);
            *(_QWORD *)(v3 + v281) = v283;
            v39 |= (unint64_t)(v284 & 0x7F) << v279;
            if (v284 < 0)
            {
              v279 += 7;
              v28 = v280++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_519;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v39) = 0;
LABEL_519:
        v299 = 172;
        goto LABEL_529;
      case 48:
        if ((v8 & 1) == 0)
          goto LABEL_382;
        v285 = 0;
        v286 = 0;
        v287 = 0;
        *(_QWORD *)(a1 + v11[450]) |= 0x100000000000uLL;
        while (2)
        {
          v288 = *v17;
          v289 = *(_QWORD *)(v3 + v288);
          v290 = v289 + 1;
          if (v289 == -1 || v290 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v291 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v289);
            *(_QWORD *)(v3 + v288) = v290;
            v287 |= (unint64_t)(v291 & 0x7F) << v285;
            if (v291 < 0)
            {
              v285 += 7;
              v28 = v286++ >= 9;
              if (v28)
              {
                v287 = 0;
                goto LABEL_523;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v287 = 0;
LABEL_523:
        v300 = v287 != 0;
        v301 = 212;
LABEL_524:
        *(_BYTE *)(a1 + v301) = v300;
        goto LABEL_559;
      case 49:
        if ((v8 & 1) != 0)
        {
          v292 = 0;
          v293 = 0;
          v39 = 0;
          *(_QWORD *)(a1 + v11[450]) |= 0x100000uLL;
          while (1)
          {
            v294 = *v17;
            v295 = *(_QWORD *)(v3 + v294);
            v296 = v295 + 1;
            if (v295 == -1 || v296 > *(_QWORD *)(v3 + *v6))
              break;
            v297 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v295);
            *(_QWORD *)(v3 + v294) = v296;
            v39 |= (unint64_t)(v297 & 0x7F) << v292;
            if ((v297 & 0x80) == 0)
              goto LABEL_526;
            v292 += 7;
            v28 = v293++ >= 9;
            if (v28)
            {
              LODWORD(v39) = 0;
              goto LABEL_528;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_526:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v39) = 0;
LABEL_528:
          v299 = 164;
LABEL_529:
          *(_DWORD *)(a1 + v299) = v39;
        }
        else
        {
LABEL_382:
          v298 = PBReaderSkipValueWithTag();
          v19 = (v16 == 0) | v15;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
          if ((v298 & 1) == 0)
            goto LABEL_577;
        }
        goto LABEL_559;
      default:
        v44 = PBReaderSkipValueWithTag();
        v19 = (v16 == 0) | v15;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v11 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
        if (!v44)
          goto LABEL_577;
        goto LABEL_559;
    }
  }
}

void sub_18968B1E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18968B99C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18968EB44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClientACSuggestionEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOClientACSuggestionEntryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOClientACSuggestionEntryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOClientACSuggestionEntryReadAllFrom_initialTag;
  Specified = GEOClientACSuggestionEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 72), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18968ECF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOClientACSuggestionEntryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOClientACSuggestionEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18968ED58(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOClientACSuggestionEntryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  int v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  int v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  int v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  int v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  int v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  int v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  int v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  int v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  int v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  int v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  int v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  int v197;
  unsigned int v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  int v202;
  _BOOL8 v203;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v27 = v28++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 3u:
        case 5u:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Eu:
          if (v16 != 1)
            goto LABEL_331;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_327;
          v20 = v19 + 8;
          goto LABEL_25;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v27 = v33++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v27 = v38++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v27 = v43++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v27 = v48++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v27 = v53++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v27 = v58++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v27 = v63++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v27 = v68++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v27 = v73++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v78 = 0;
          while (1)
          {
            v79 = *v2;
            v80 = *(_QWORD *)&a1[v79];
            v81 = v80 + 1;
            if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
            *(_QWORD *)&a1[v79] = v81;
            if (v82 < 0)
            {
              v27 = v78++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v83 = 0;
          while (1)
          {
            v84 = *v2;
            v85 = *(_QWORD *)&a1[v84];
            v86 = v85 + 1;
            if (v85 == -1 || v86 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v87 = *(char *)(*(_QWORD *)&a1[*v5] + v85);
            *(_QWORD *)&a1[v84] = v86;
            if (v87 < 0)
            {
              v27 = v83++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v88 = 0;
          while (1)
          {
            v89 = *v2;
            v90 = *(_QWORD *)&a1[v89];
            v91 = v90 + 1;
            if (v90 == -1 || v91 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v92 = *(char *)(*(_QWORD *)&a1[*v5] + v90);
            *(_QWORD *)&a1[v89] = v91;
            if (v92 < 0)
            {
              v27 = v88++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x14u:
          if (v16 == 2)
            goto LABEL_140;
          goto LABEL_331;
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v93 = 0;
          while (1)
          {
            v94 = *v2;
            v95 = *(_QWORD *)&a1[v94];
            v96 = v95 + 1;
            if (v95 == -1 || v96 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v97 = *(char *)(*(_QWORD *)&a1[*v5] + v95);
            *(_QWORD *)&a1[v94] = v96;
            if (v97 < 0)
            {
              v27 = v93++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSubactionMetaDataIsValid(a1))
            goto LABEL_331;
          goto LABEL_197;
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v98 = 0;
          while (1)
          {
            v99 = *v2;
            v100 = *(_QWORD *)&a1[v99];
            v101 = v100 + 1;
            if (v100 == -1 || v101 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v102 = *(char *)(*(_QWORD *)&a1[*v5] + v100);
            *(_QWORD *)&a1[v99] = v101;
            if (v102 < 0)
            {
              v27 = v98++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v103 = 0;
          while (1)
          {
            v104 = *v2;
            v105 = *(_QWORD *)&a1[v104];
            v106 = v105 + 1;
            if (v105 == -1 || v106 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v107 = *(char *)(*(_QWORD *)&a1[*v5] + v105);
            *(_QWORD *)&a1[v104] = v106;
            if (v107 < 0)
            {
              v27 = v103++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x19u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v108 = 0;
          while (1)
          {
            v109 = *v2;
            v110 = *(_QWORD *)&a1[v109];
            v111 = v110 + 1;
            if (v110 == -1 || v111 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v112 = *(char *)(*(_QWORD *)&a1[*v5] + v110);
            *(_QWORD *)&a1[v109] = v111;
            if (v112 < 0)
            {
              v27 = v108++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v113 = 0;
          while (1)
          {
            v114 = *v2;
            v115 = *(_QWORD *)&a1[v114];
            v116 = v115 + 1;
            if (v115 == -1 || v116 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v117 = *(char *)(*(_QWORD *)&a1[*v5] + v115);
            *(_QWORD *)&a1[v114] = v116;
            if (v117 < 0)
            {
              v27 = v113++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v118 = 0;
          while (1)
          {
            v119 = *v2;
            v120 = *(_QWORD *)&a1[v119];
            v121 = v120 + 1;
            if (v120 == -1 || v121 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v122 = *(char *)(*(_QWORD *)&a1[*v5] + v120);
            *(_QWORD *)&a1[v119] = v121;
            if (v122 < 0)
            {
              v27 = v118++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOHyperlinkMetaDataIsValid(a1))
            goto LABEL_331;
LABEL_197:
          PBReaderRecallMark();
          continue;
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v123 = 0;
          while (1)
          {
            v124 = *v2;
            v125 = *(_QWORD *)&a1[v124];
            v126 = v125 + 1;
            if (v125 == -1 || v126 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v127 = *(char *)(*(_QWORD *)&a1[*v5] + v125);
            *(_QWORD *)&a1[v124] = v126;
            if (v127 < 0)
            {
              v27 = v123++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v128 = 0;
          while (1)
          {
            v129 = *v2;
            v130 = *(_QWORD *)&a1[v129];
            v131 = v130 + 1;
            if (v130 == -1 || v131 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v132 = *(char *)(*(_QWORD *)&a1[*v5] + v130);
            *(_QWORD *)&a1[v129] = v131;
            if (v132 < 0)
            {
              v27 = v128++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x22u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v133 = 0;
          while (1)
          {
            v134 = *v2;
            v135 = *(_QWORD *)&a1[v134];
            v136 = v135 + 1;
            if (v135 == -1 || v136 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v137 = *(char *)(*(_QWORD *)&a1[*v5] + v135);
            *(_QWORD *)&a1[v134] = v136;
            if (v137 < 0)
            {
              v27 = v133++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x23u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v138 = 0;
          while (1)
          {
            v139 = *v2;
            v140 = *(_QWORD *)&a1[v139];
            v141 = v140 + 1;
            if (v140 == -1 || v141 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v142 = *(char *)(*(_QWORD *)&a1[*v5] + v140);
            *(_QWORD *)&a1[v139] = v141;
            if (v142 < 0)
            {
              v27 = v138++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x24u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v143 = 0;
          while (1)
          {
            v144 = *v2;
            v145 = *(_QWORD *)&a1[v144];
            v146 = v145 + 1;
            if (v145 == -1 || v146 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v147 = *(char *)(*(_QWORD *)&a1[*v5] + v145);
            *(_QWORD *)&a1[v144] = v146;
            if (v147 < 0)
            {
              v27 = v143++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x25u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v148 = 0;
          while (1)
          {
            v149 = *v2;
            v150 = *(_QWORD *)&a1[v149];
            v151 = v150 + 1;
            if (v150 == -1 || v151 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v152 = *(char *)(*(_QWORD *)&a1[*v5] + v150);
            *(_QWORD *)&a1[v149] = v151;
            if (v152 < 0)
            {
              v27 = v148++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x26u:
        case 0x27u:
          if (v16 != 5)
            goto LABEL_331;
          v18 = *v2;
          v21 = *(_QWORD *)&a1[v18];
          if (v21 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_327;
          v20 = v21 + 4;
LABEL_25:
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_327;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0x28u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v153 = 0;
          while (1)
          {
            v154 = *v2;
            v155 = *(_QWORD *)&a1[v154];
            v156 = v155 + 1;
            if (v155 == -1 || v156 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v157 = *(char *)(*(_QWORD *)&a1[*v5] + v155);
            *(_QWORD *)&a1[v154] = v156;
            if (v157 < 0)
            {
              v27 = v153++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x29u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v158 = 0;
          while (1)
          {
            v159 = *v2;
            v160 = *(_QWORD *)&a1[v159];
            v161 = v160 + 1;
            if (v160 == -1 || v161 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v162 = *(char *)(*(_QWORD *)&a1[*v5] + v160);
            *(_QWORD *)&a1[v159] = v161;
            if (v162 < 0)
            {
              v27 = v158++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x2Au:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v163 = 0;
          while (1)
          {
            v164 = *v2;
            v165 = *(_QWORD *)&a1[v164];
            v166 = v165 + 1;
            if (v165 == -1 || v166 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v167 = *(char *)(*(_QWORD *)&a1[*v5] + v165);
            *(_QWORD *)&a1[v164] = v166;
            if (v167 < 0)
            {
              v27 = v163++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v168 = 0;
          while (1)
          {
            v169 = *v2;
            v170 = *(_QWORD *)&a1[v169];
            v171 = v170 + 1;
            if (v170 == -1 || v171 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v172 = *(char *)(*(_QWORD *)&a1[*v5] + v170);
            *(_QWORD *)&a1[v169] = v171;
            if (v172 < 0)
            {
              v27 = v168++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x2Cu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v173 = 0;
          while (1)
          {
            v174 = *v2;
            v175 = *(_QWORD *)&a1[v174];
            v176 = v175 + 1;
            if (v175 == -1 || v176 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v177 = *(char *)(*(_QWORD *)&a1[*v5] + v175);
            *(_QWORD *)&a1[v174] = v176;
            if (v177 < 0)
            {
              v27 = v173++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x2Du:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v178 = 0;
          while (1)
          {
            v179 = *v2;
            v180 = *(_QWORD *)&a1[v179];
            v181 = v180 + 1;
            if (v180 == -1 || v181 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v182 = *(char *)(*(_QWORD *)&a1[*v5] + v180);
            *(_QWORD *)&a1[v179] = v181;
            if (v182 < 0)
            {
              v27 = v178++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x2Eu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v183 = 0;
          while (1)
          {
            v184 = *v2;
            v185 = *(_QWORD *)&a1[v184];
            v186 = v185 + 1;
            if (v185 == -1 || v186 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v187 = *(char *)(*(_QWORD *)&a1[*v5] + v185);
            *(_QWORD *)&a1[v184] = v186;
            if (v187 < 0)
            {
              v27 = v183++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x2Fu:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v188 = 0;
          while (1)
          {
            v189 = *v2;
            v190 = *(_QWORD *)&a1[v189];
            v191 = v190 + 1;
            if (v190 == -1 || v191 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v192 = *(char *)(*(_QWORD *)&a1[*v5] + v190);
            *(_QWORD *)&a1[v189] = v191;
            if (v192 < 0)
            {
              v27 = v188++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x30u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v193 = 0;
          while (1)
          {
            v194 = *v2;
            v195 = *(_QWORD *)&a1[v194];
            v196 = v195 + 1;
            if (v195 == -1 || v196 > *(_QWORD *)&a1[*v3])
              goto LABEL_326;
            v197 = *(char *)(*(_QWORD *)&a1[*v5] + v195);
            *(_QWORD *)&a1[v194] = v196;
            if (v197 < 0)
            {
              v27 = v193++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_328;
          }
        case 0x31u:
          if ((v8 & 7) != 0)
            goto LABEL_331;
          v198 = 0;
          break;
        default:
LABEL_140:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_331:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v199 = *v2;
        v200 = *(_QWORD *)&a1[v199];
        v201 = v200 + 1;
        if (v200 == -1 || v201 > *(_QWORD *)&a1[*v3])
          break;
        v202 = *(char *)(*(_QWORD *)&a1[*v5] + v200);
        *(_QWORD *)&a1[v199] = v201;
        if (v202 < 0)
        {
          v27 = v198++ > 8;
          if (!v27)
            continue;
        }
        goto LABEL_328;
      }
LABEL_326:
      v14 = *v4;
LABEL_327:
      a1[v14] = 1;
LABEL_328:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v203 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v203;
}

BOOL GEOSubactionMetaDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_64;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_49;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_64;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_44;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_49;
          }
        case 3u:
          if (v15 == 2)
            goto LABEL_48;
          goto LABEL_64;
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_64:
              PBReaderRecallMark();
              return 0;
            }
LABEL_52:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v33 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v34 = *v2;
                v35 = *(_QWORD *)&a1[v34];
                v36 = v35 + 1;
                if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                  break;
                v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
                *(_QWORD *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  v13 = v33++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_52;
              }
              a1[*v4] = 1;
            }
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_64;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_49;
            }
LABEL_44:
            a1[*v4] = 1;
          }
LABEL_49:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_62;
          break;
        case 5u:
          if (v15 == 2)
            goto LABEL_48;
          goto LABEL_64;
        case 6u:
          if (v15 == 2)
            goto LABEL_48;
          goto LABEL_64;
        default:
LABEL_48:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_49;
          goto LABEL_64;
      }
    }
  }
LABEL_62:
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOHyperlinkMetaDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_1896908B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOClientACSuggestionEntryIsDirty(uint64_t a1)
{
  unint64_t v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v2 = *(_QWORD *)(a1 + 216);
  if ((v2 & 0x3000000000000) != 0)
    return 1;
  if ((v2 & 0x800000000000) != 0)
  {
    if (GEOSubactionMetaDataIsDirty(*(_QWORD *)(a1 + 72)))
      return 1;
    v2 = *(_QWORD *)(a1 + 216);
  }
  return (v2 >> 46) & 1;
}

os_unfair_lock_s *GEOClientACSuggestionEntryIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOClientACSuggestionEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189691A6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOHyperlinkMetaDataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 3)
        {
          PBReaderReadString();
          v25 = objc_claimAutoreleasedReturnValue();
          v26 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v25;

        }
        else if ((v10 >> 3) == 2)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189693DF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOHyperlinkMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOHyperlinkMetaDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189693E50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189694320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventClientACSuggestionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  int v39;
  GEOClientACSuggestionEntry *v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  char v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  int v111;
  __int16 v112;
  void *v113;
  char v115;
  char v116;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int16 *)(a1 + 88) >> 12) & 1)
      + ((*(unsigned __int16 *)(a1 + 88) >> 11) & 1)
      + ((*(unsigned __int16 *)(a1 + 88) >> 10) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v116 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
        v115 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_180;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_180:
      if ((v15 & 1) != 0)
      {
        v110 = 1;
        goto LABEL_188;
      }
      if (v16)
      {
        while (1)
        {
          v111 = *v16++;
          v112 = 4096;
          switch(v111)
          {
            case 0:
              goto LABEL_189;
            case 1:
              goto LABEL_186;
            case 2:
              v112 = 2048;
              goto LABEL_186;
            case 3:
              v112 = 1024;
LABEL_186:
              *(_WORD *)(a1 + v20[453]) |= v112;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_189;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if ((v116 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_132;
        if ((*(_WORD *)(a1 + v20[453]) & 0x1000) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v37;

          --v8;
          goto LABEL_178;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_194;
        v8 += *(unsigned __int16 *)(a1 + v20[453]) << 19 >> 31;
        goto LABEL_178;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + v20[453]) & 0x800) != 0)
          goto LABEL_132;
        PBReaderReadString();
        v40 = (GEOClientACSuggestionEntry *)objc_claimAutoreleasedReturnValue();
        if (v40)
          -[GEOLogMsgEventClientACSuggestions _addNoFlagsQueryTokens:](a1, v40);
        goto LABEL_51;
      case 3:
        if (!v32 || (*(_WORD *)(a1 + v20[453]) & 0x400) != 0)
          goto LABEL_132;
        if ((PBReaderPlaceMark() & 1) == 0)
        {
LABEL_194:
          v110 = 0;
          goto LABEL_196;
        }
        v40 = objc_alloc_init(GEOClientACSuggestionEntry);
        if (GEOClientACSuggestionEntryReadAllFrom((uint64_t)v40, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventClientACSuggestions _addNoFlagsEntries:](a1, v40);
LABEL_51:

          v20 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
LABEL_178:
          v15 = v115;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_179:
          if (!(v15 & 1 | (v8 != 0)))
            goto LABEL_180;
          continue;
        }

        v110 = 0;
        v20 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
LABEL_196:
        v15 = v115;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_188:
        *(_WORD *)(a1 + v20[453]) |= 0x1000u;
        *(_WORD *)(a1 + v20[453]) |= 0x800u;
        *(_WORD *)(a1 + v20[453]) |= 0x400u;
        if ((v110 & 1) != 0)
        {
LABEL_189:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_190;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_190:
            v113 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_WORD *)(a1 + v20[453]) |= 8u;
        while (2)
        {
          v44 = *v17;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v28 = v42++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v43) = 0;
LABEL_137:
        v107 = 68;
        goto LABEL_175;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v48 = 0;
        v49 = 0;
        v43 = 0;
        *(_WORD *)(a1 + v20[453]) |= 0x20u;
        while (2)
        {
          v50 = *v17;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v43 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v28 = v49++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v43) = 0;
LABEL_141:
        v107 = 76;
        goto LABEL_175;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v54 = 0;
        v55 = 0;
        v43 = 0;
        *(_WORD *)(a1 + v20[453]) |= 4u;
        while (2)
        {
          v56 = *v17;
          v57 = *(_QWORD *)(v3 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v57);
            *(_QWORD *)(v3 + v56) = v58;
            v43 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v28 = v55++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v43) = 0;
LABEL_145:
        v107 = 64;
        goto LABEL_175;
      case 7:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v60 = 0;
        v61 = 0;
        v43 = 0;
        *(_WORD *)(a1 + v20[453]) |= 0x40u;
        while (2)
        {
          v62 = *v17;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v43 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v28 = v61++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v43) = 0;
LABEL_149:
        v107 = 80;
        goto LABEL_175;
      case 8:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v66 = 0;
        v67 = 0;
        v43 = 0;
        *(_WORD *)(a1 + v20[453]) |= 0x10u;
        while (2)
        {
          v68 = *v17;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v43 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              v28 = v67++ >= 9;
              if (v28)
              {
                LODWORD(v43) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v43) = 0;
LABEL_153:
        v107 = 72;
        goto LABEL_175;
      case 9:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v72 = 0;
        v73 = 0;
        v74 = 0;
        *(_WORD *)(a1 + v20[453]) |= 0x100u;
        while (2)
        {
          v75 = *v17;
          v76 = *(_QWORD *)(v3 + v75);
          v77 = v76 + 1;
          if (v76 == -1 || v77 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v76);
            *(_QWORD *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              v28 = v73++ >= 9;
              if (v28)
              {
                v74 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v74 = 0;
LABEL_157:
        v108 = v74 != 0;
        v109 = 85;
        goto LABEL_170;
      case 10:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v79 = 0;
        v80 = 0;
        v81 = 0;
        *(_WORD *)(a1 + v20[453]) |= 0x80u;
        while (2)
        {
          v82 = *v17;
          v83 = *(_QWORD *)(v3 + v82);
          v84 = v83 + 1;
          if (v83 == -1 || v84 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v85 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v83);
            *(_QWORD *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              v28 = v80++ >= 9;
              if (v28)
              {
                v81 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v81 = 0;
LABEL_161:
        v108 = v81 != 0;
        v109 = 84;
        goto LABEL_170;
      case 11:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v86 = 0;
        v87 = 0;
        v88 = 0;
        *(_WORD *)(a1 + v20[453]) |= 1u;
        while (2)
        {
          v89 = *v17;
          v90 = *(_QWORD *)(v3 + v89);
          v91 = v90 + 1;
          if (v90 == -1 || v91 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v90);
            *(_QWORD *)(v3 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              v28 = v87++ >= 9;
              if (v28)
              {
                v88 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v88 = 0;
LABEL_165:
        *(_QWORD *)(a1 + 24) = v88;
        goto LABEL_179;
      case 12:
        if ((v7 & 1) == 0)
          goto LABEL_132;
        v93 = 0;
        v94 = 0;
        v95 = 0;
        *(_WORD *)(a1 + v20[453]) |= 0x200u;
        while (2)
        {
          v96 = *v17;
          v97 = *(_QWORD *)(v3 + v96);
          v98 = v97 + 1;
          if (v97 == -1 || v98 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v99 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v97);
            *(_QWORD *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              v28 = v94++ >= 9;
              if (v28)
              {
                v95 = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v95 = 0;
LABEL_169:
        v108 = v95 != 0;
        v109 = 86;
LABEL_170:
        *(_BYTE *)(a1 + v109) = v108;
        goto LABEL_179;
      case 13:
        if ((v7 & 1) != 0)
        {
          v100 = 0;
          v101 = 0;
          v43 = 0;
          *(_WORD *)(a1 + v20[453]) |= 2u;
          while (1)
          {
            v102 = *v17;
            v103 = *(_QWORD *)(v3 + v102);
            v104 = v103 + 1;
            if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v6))
              break;
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v43 |= (unint64_t)(v105 & 0x7F) << v100;
            if ((v105 & 0x80) == 0)
              goto LABEL_172;
            v100 += 7;
            v28 = v101++ >= 9;
            if (v28)
            {
              LODWORD(v43) = 0;
              goto LABEL_174;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_172:
          if (*(_BYTE *)(v3 + *v18))
            LODWORD(v43) = 0;
LABEL_174:
          v107 = 60;
LABEL_175:
          *(_DWORD *)(a1 + v107) = v43;
        }
        else
        {
LABEL_132:
          v106 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v115;
          if ((v106 & 1) == 0)
          {
LABEL_187:
            v110 = 0;
            goto LABEL_188;
          }
        }
        goto LABEL_179;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v115;
        if (!v39)
          goto LABEL_187;
        goto LABEL_179;
    }
  }
}

void sub_189695024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189695354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189696CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventClientACSuggestionsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLogMsgEventClientACSuggestionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventClientACSuggestionsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventClientACSuggestionsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventClientACSuggestionsReadAllFrom_initialTag;
  Specified = GEOLogMsgEventClientACSuggestionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventClientACSuggestionsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189696F70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventClientACSuggestionsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventClientACSuggestionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189696FD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventClientACSuggestionsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  _BOOL8 v68;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_112;
          goto LABEL_22;
        case 2u:
          if (v15 == 2)
            goto LABEL_22;
          goto LABEL_112;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientACSuggestionEntryIsValid(a1))
            goto LABEL_112;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_108;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_109;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_112;
          v63 = 0;
          break;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_112:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v64 = *v2;
        v65 = *(_QWORD *)&a1[v64];
        v66 = v65 + 1;
        if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
          break;
        v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
        *(_QWORD *)&a1[v64] = v66;
        if (v67 < 0)
        {
          v22 = v63++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_109;
      }
LABEL_108:
      a1[*v4] = 1;
LABEL_109:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v68 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v68;
}

void sub_189697910(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventClientACSuggestionsIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(_WORD *)(a1 + 88) & 0x3C00) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 88) & 0x400) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if ((GEOClientACSuggestionEntryIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v7 + 1) + 8 * i)) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOLogMsgEventClientACSuggestionsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOLogMsgEventClientACSuggestionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18969821C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189698E14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSubactionMetaDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  int *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void *v58;
  char v59;
  uint64_t v60;
  char v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  int v69;
  char v70;
  void *v71;
  void *v73;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFBFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
  {
LABEL_110:
    if ((v12 & 1) != 0)
    {
      v68 = 1;
      goto LABEL_112;
    }
    if (v13)
    {
      while (1)
      {
        v69 = *v13++;
        v70 = 16;
        switch(v69)
        {
          case 0:
            goto LABEL_121;
          case 3:
            goto LABEL_120;
          case 4:
            v70 = 4;
            goto LABEL_120;
          case 5:
            v70 = 32;
            goto LABEL_120;
          case 6:
            v70 = 8;
LABEL_120:
            *(_BYTE *)(a1 + 84) |= v70;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_121;
  }
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(v3 + *v15))
      goto LABEL_110;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      v22 = v21 + 1;
      if (v21 == -1 || v22 > *(_QWORD *)(v3 + *v6))
        break;
      v23 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      v24 = v18++ >= 9;
      if (v24)
      {
        v19 = 0;
        v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    v26 = v19 & 7;
    if (v25 || v26 == 4)
      goto LABEL_110;
    v28 = v19 >> 3;
    v29 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_84;
        v34 = 0;
        v35 = 0;
        v36 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (1)
        {
          v37 = *v14;
          v38 = *(_QWORD *)(v3 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(v3 + *v6))
            break;
          v40 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v38);
          *(_QWORD *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0)
            goto LABEL_87;
          v34 += 7;
          v24 = v35++ >= 9;
          if (v24)
          {
            LODWORD(v36) = 0;
            goto LABEL_89;
          }
        }
        *(_BYTE *)(v3 + *v15) = 1;
LABEL_87:
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v36) = 0;
LABEL_89:
        v60 = 76;
        goto LABEL_94;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_84;
        v42 = 0;
        v43 = 0;
        v36 = 0;
        *(_BYTE *)(a1 + 84) |= 2u;
        while (2)
        {
          v44 = *v14;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v15) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v45);
            *(_QWORD *)(v3 + v44) = v46;
            v36 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              v24 = v43++ >= 9;
              if (v24)
              {
                LODWORD(v36) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v15))
          LODWORD(v36) = 0;
LABEL_93:
        v60 = 80;
LABEL_94:
        *(_DWORD *)(a1 + v60) = v36;
        goto LABEL_108;
      case 3:
        if (!v29)
          goto LABEL_84;
        if ((*(_BYTE *)(a1 + 84) & 0x10) == 0)
        {
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v48;

          --v8;
LABEL_107:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_108:
          if (!(v12 & 1 | (v8 != 0)) || *(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_110;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v8 += *(unsigned __int8 *)(a1 + 84) << 27 >> 31;
          goto LABEL_107;
        }
LABEL_125:
        v68 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_112:
        *(_BYTE *)(a1 + 84) |= 0x10u;
        *(_BYTE *)(a1 + 84) |= 4u;
        *(_BYTE *)(a1 + 84) |= 0x20u;
        *(_BYTE *)(a1 + 84) |= 8u;
        if ((v68 & 1) != 0)
        {
LABEL_121:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_122;
          return v3;
        }
        v3 = 0;
        if ((v12 & 1) == 0)
          return v3;
LABEL_122:
        v71 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 4:
        if (!v29 || (*(_BYTE *)(a1 + 84) & 4) != 0)
          goto LABEL_84;
        if (v26 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_125;
          while (1)
          {
            v50 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v51 = 0;
            v52 = 0;
            v53 = 0;
            while (1)
            {
              v54 = *v14;
              v55 = *(_QWORD *)(v3 + v54);
              v56 = v55 + 1;
              if (v55 == -1 || v56 > *(_QWORD *)(v3 + *v6))
                break;
              v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v55);
              *(_QWORD *)(v3 + v54) = v56;
              v53 |= (unint64_t)(v57 & 0x7F) << v51;
              if (v57 < 0)
              {
                v51 += 7;
                v24 = v52++ >= 9;
                if (!v24)
                  continue;
              }
              goto LABEL_73;
            }
            *(_BYTE *)(v3 + *v50) = 1;
LABEL_73:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v61 = 0;
          v62 = 0;
          v63 = 0;
          while (1)
          {
            v64 = *v14;
            v65 = *(_QWORD *)(v3 + v64);
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)(v3 + *v6))
              break;
            v67 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v65);
            *(_QWORD *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              v24 = v62++ >= 9;
              if (!v24)
                continue;
            }
            goto LABEL_106;
          }
          *(_BYTE *)(v3 + *v15) = 1;
LABEL_106:
          PBRepeatedInt32Add();
        }
        goto LABEL_107;
      case 5:
        if (!v29 || (*(_BYTE *)(a1 + 84) & 0x20) != 0)
          goto LABEL_84;
        PBReaderReadString();
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v58)
          goto LABEL_83;
        v73 = v58;
        -[GEOSubactionMetaData _addNoFlagsDisplayedText:](a1, v58);
        goto LABEL_82;
      case 6:
        if (v29 && (*(_BYTE *)(a1 + 84) & 8) == 0)
        {
          PBReaderReadString();
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          if (v58)
          {
            v73 = v58;
            -[GEOSubactionMetaData _addNoFlagsChildItemSubactionType:](a1, v58);
LABEL_82:
            v58 = v73;
          }
LABEL_83:

          goto LABEL_107;
        }
LABEL_84:
        v59 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if ((v59 & 1) == 0)
        {
LABEL_124:
          v68 = 0;
          goto LABEL_112;
        }
        goto LABEL_108;
      default:
        v41 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v41)
          goto LABEL_124;
        goto LABEL_108;
    }
  }
}

void sub_1896996EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189699B18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189699E48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969AAEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSubactionMetaDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOSubactionMetaDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOSubactionMetaDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOSubactionMetaDataReadAllFrom_initialTag;
  Specified = GEOSubactionMetaDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18969AC74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSubactionMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOSubactionMetaDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18969ACD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18969B020(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSubactionMetaDataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = (*(_BYTE *)(a1 + 84) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18969B5DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORegionalResourceTileKeyActiveScenariosBitSet(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unsigned int v7;
  int v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v2)
  {
    v3 = v2;
    LODWORD(v4) = 0;
    v5 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v1);
        v7 = objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * i), "intValue");
        v8 = 1 << v7;
        if (v7 > 6)
          v8 = 0;
        v4 = v8 | v4;
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id _geo_requestClassForMessageType(int a1)
{
  void *v2;

  v2 = 0;
  switch(a1)
  {
    case 1005:
    case 1009:
    case 1010:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1021:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
LABEL_3:
      objc_opt_class();
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 1006:
    case 1007:
    case 1008:
    case 1011:
    case 1012:
    case 1018:
    case 1019:
    case 1020:
    case 1022:
    case 1023:
      return v2;
    default:
      switch(a1)
      {
        case '+':
        case ',':
        case '.':
        case '0':
        case '1':
        case '2':
        case '4':
        case '5':
        case '6':
        case ':':
        case '<':
          goto LABEL_3;
        default:
          return v2;
      }
  }
  return v2;
}

id _geo_responseClassForMessageType(int a1)
{
  void *v2;

  v2 = 0;
  switch(a1)
  {
    case 1005:
    case 1009:
    case 1010:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1021:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
LABEL_3:
      objc_opt_class();
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    case 1006:
    case 1007:
    case 1008:
    case 1011:
    case 1012:
    case 1018:
    case 1019:
    case 1020:
    case 1022:
    case 1023:
      return v2;
    default:
      switch(a1)
      {
        case '+':
        case ',':
        case '.':
        case '0':
        case '1':
        case '2':
        case '4':
        case '5':
        case '6':
        case ':':
        case '<':
          goto LABEL_3;
        default:
          return v2;
      }
  }
  return v2;
}

void sub_18969E494(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Unwind_Resume(a1);
}

id _actionURLSchemes(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  int v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 2);
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  objc_msgSend(v1, "attributionApps", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v15;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * i), "handledSchemes");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "containsObject:", CFSTR("com.apple.maps.action"));

        if (v9)
        {
          objc_msgSend(v2, "addObject:", CFSTR("com.apple.maps.action"));
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_11:

  objc_msgSend(v1, "webBaseActionURL");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "length");

  if (v11)
  {
    objc_msgSend(v1, "webBaseActionURL");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "addObject:", v12);

  }
  return v2;
}

void sub_1896A3374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A3484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A393C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896A51F8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void setupGYBStatements(void *a1, int a2)
{
  id v3;
  const char *v4;
  char *v5;
  char *v6;
  char *v7;
  const char *v8;
  id v9;

  v3 = a1;
  if (a2)
    v4 = "DROP TABLE reqcountdata";
  else
    v4 = 0;
  v9 = v3;
  if (objc_msgSend(v3, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS reqcountdata(   startTime REAL NOT NULL,    endTime REAL NOT NULL,    appid TEXT NOT NULL,    requesttype INT NOT NULL,    result INT NOT NULL,    xmitbytes INT NOT NULL,    recvbytes INT NOT NULL,    interface INT NOT NULL   );",
                       v4))
  {
    v5 = a2 ? "DROP TABLE proactivetile" : 0;
    if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS proactivetile(   identifier TEXT NOT NULL,    policy INT NOT NULL,    start_timestamp INT NOT NULL,    end_timestamp INT,    tile_count INT,    dl_attempts INT,    success_count INT,    failure_count INT,    bytes_downloaded INT   );",
                         v5))
    {
      v6 = a2 ? "DROP TABLE route_preload_sessions" : 0;
      if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS route_preload_sessions(   start_time INT NOT NULL,    end_time INT NOT NULL,    transport_type INT NOT NULL,    tiles_preloaded INT NOT NULL,    tiles_used INT NOT NULL,    tiles_missed INT NOT NULL   );",
                           v6))
      {
        v7 = a2 ? "DROP TABLE externalreqcountdata" : 0;
        if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS externalreqcountdata(   startTime REAL NOT NULL,    endTime REAL NOT NULL,    xmitbytes INT,    recvbytes INT,    interface INT,    appid TEXT NOT NULL,    requesttype TEXT NOT NULL,    requestsubtype TEXT,    source TEXT   );",
                             v7))
        {
          if (a2)
            v8 = "DROP TABLE placecache";
          else
            v8 = 0;
          if (objc_msgSend(v9, "createTable:withDrop:", "CREATE TABLE IF NOT EXISTS placecache(   timestamp REAL NOT NULL,    appid TEXT NOT NULL,    requesttype INT NOT NULL,    result INT NOT NULL   );",
                               v8)
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO reqcountdata    (startTime, endTime, appid, requesttype, result, xmitbytes, recvbytes, interface)    VALUES (@startTime, @endTime, @appid, @requesttype, @result, @xmitbytes, @recvbytes, @interface);",
                               CFSTR("reqcountdata_insert"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT startTime, endTime, appid, requesttype, result, xmitbytes, recvbytes, interface    FROM reqcountdata    WHERE startTime >= @startTime and endTime <= @endTime    ORDER BY startTime, rowid;",
                               CFSTR("reqcountdata_readlog"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT appid, requesttype, result, xmitbytes, recvbytes, startTime, endTime, interface    FROM reqcountdata    WHERE startTime >= @startTime and endTime <= @endTime;",
                               CFSTR("reqcountdata_readcounts"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM reqcountdata    WHERE startTime < @startTime;",
                               CFSTR("reqcountdata_prune"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM reqcountdata;",
                               CFSTR("reqcountdata_deleteall"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO proactivetile    (identifier, policy, start_timestamp, end_timestamp, tile_count, dl_attempts, success_count, failure_count, bytes_downloaded)    VALUES (@identifier, @policy, @start_timestamp, NULL, NULL, NULL, NULL, NULL, NULL);",
                               CFSTR("proactivetile_insertstart"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "UPDATE proactivetile    SET end_timestamp = @end_timestamp, tile_count = @tile_count, dl_attempts = @dl_attempts, success_count = @success_count, failure_count = @failure_count, bytes_downloaded = @bytes_downloaded    WHERE identifier = @identifier AND policy = @policy;",
                               CFSTR("proactivetile_insertend"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM proactivetile;",
                               CFSTR("proactivetile_deleteall"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT identifier, policy, start_timestamp, end_timestamp, tile_count, dl_attempts, success_count, failure_count, bytes_downloaded    FROM proactivetile    WHERE start_timestamp >= @start_timestamp    ORDER BY start_timestamp;",
                               CFSTR("proactivetile_query"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO route_preload_sessions    (start_time, end_time, transport_type, tiles_preloaded, tiles_used, tiles_missed)    VALUES (@start_time, @end_time, @transport_type, @tiles_preloaded, @tiles_used, @tiles_missed);",
                               CFSTR("routepreload_insert"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT start_time, end_time, transport_type, tiles_preloaded, tiles_used, tiles_missed    FROM route_preload_sessions    WHERE start_time >= @start_time;",
                               CFSTR("routepreload_read"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO externalreqcountdata    (startTime, endTime, xmitbytes, recvbytes, interface, appid, requesttype, requestsubtype, source)    VALUES (@startTime, @endTime, @xmitbytes, @recvbytes, @interface, @appid, @requesttype, @requestsubtype, @source);",
                               CFSTR("externalreqcountdata_insert"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT startTime, endTime, xmitbytes, recvbytes, interface, appid, requesttype, requestsubtype, source    FROM externalreqcountdata;",
                               CFSTR("externalreqcountdata_readcounts"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM externalreqcountdata    WHERE startTime < @startTime;",
                               CFSTR("externalreqcountdata_prune"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM externalreqcountdata;",
                               CFSTR("externalreqcountdata_deleteall"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "INSERT INTO placecache    (timestamp, appid, requesttype, result)    VALUES (@timestamp, @appid, @requesttype, @result);",
                               CFSTR("placecache_insert"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "SELECT appid, requesttype, result, timestamp    FROM placecache    WHERE timestamp >= @begin and timestamp <= @end;",
                               CFSTR("placecache_readcounts"))
            && objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM placecache    WHERE timestamp < @timestamp;",
                               CFSTR("placecache_prune")))
          {
            objc_msgSend(v9, "prepareStatement:forKey:", "DELETE FROM placecache;", CFSTR("placecache_deleteall"));
          }
        }
      }
    }
  }

}

void sub_1896A7694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A7AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A804C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A86C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1896A8A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1896A8C94(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1896A90B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_1896A9578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A96C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A991C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896A9E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1896AA090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896AA374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896AA67C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __reqcountdata_insert_block_invoke(double *a1, uint64_t a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  int v7;
  void *v8;
  double v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id obj;
  id v44;

  v4 = (void *)*((_QWORD *)a1 + 4);
  v5 = a1[7];
  v6 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v44 = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindRealParameter:toValue:inStatement:error:", "@startTime", a2, &v44, v5);
  objc_storeStrong((id *)(v6 + 40), v44);
  if (!v7)
    return 0;
  v8 = (void *)*((_QWORD *)a1 + 4);
  v9 = a1[8];
  v10 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  obj = *(id *)(v10 + 40);
  v11 = objc_msgSend(v8, "bindRealParameter:toValue:inStatement:error:", "@endTime", a2, &obj, v9);
  objc_storeStrong((id *)(v10 + 40), obj);
  if (!v11)
    return 0;
  v12 = (void *)*((_QWORD *)a1 + 4);
  v13 = *((_QWORD *)a1 + 5);
  v14 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v42 = *(id *)(v14 + 40);
  v15 = objc_msgSend(v12, "bindTextParameter:toValue:inStatement:error:", "@appid", v13, a2, &v42);
  objc_storeStrong((id *)(v14 + 40), v42);
  if (!v15)
    return 0;
  v16 = (void *)*((_QWORD *)a1 + 4);
  v17 = *((_QWORD *)a1 + 9);
  v18 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v41 = *(id *)(v18 + 40);
  v19 = objc_msgSend(v16, "bindInt64Parameter:toValue:inStatement:error:", "@requesttype", v17, a2, &v41);
  objc_storeStrong((id *)(v18 + 40), v41);
  if (!v19)
    return 0;
  v20 = (void *)*((_QWORD *)a1 + 4);
  v21 = *((_QWORD *)a1 + 10);
  v22 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v40 = *(id *)(v22 + 40);
  v23 = objc_msgSend(v20, "bindInt64Parameter:toValue:inStatement:error:", "@result", v21, a2, &v40);
  objc_storeStrong((id *)(v22 + 40), v40);
  if (!v23)
    return 0;
  v24 = (void *)*((_QWORD *)a1 + 4);
  v25 = *((_QWORD *)a1 + 11);
  v26 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v39 = *(id *)(v26 + 40);
  v27 = objc_msgSend(v24, "bindInt64Parameter:toValue:inStatement:error:", "@xmitbytes", v25, a2, &v39);
  objc_storeStrong((id *)(v26 + 40), v39);
  if (!v27)
    return 0;
  v28 = (void *)*((_QWORD *)a1 + 4);
  v29 = *((_QWORD *)a1 + 12);
  v30 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v38 = *(id *)(v30 + 40);
  v31 = objc_msgSend(v28, "bindInt64Parameter:toValue:inStatement:error:", "@recvbytes", v29, a2, &v38);
  objc_storeStrong((id *)(v30 + 40), v38);
  if (!v31)
    return 0;
  v32 = (void *)*((_QWORD *)a1 + 4);
  v33 = *((_QWORD *)a1 + 13);
  v34 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v37 = *(id *)(v34 + 40);
  v35 = objc_msgSend(v32, "bindInt64Parameter:toValue:inStatement:error:", "@interface", v33, a2, &v37);
  objc_storeStrong((id *)(v34 + 40), v37);
  return v35;
}

uint64_t __reqcountdata_readcounts_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v21;
  id v22;
  id obj;

  v4 = *(void **)(a1 + 32);
  v5 = *(double *)(a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindRealParameter:toValue:inStatement:error:", "@startTime", a2, &obj, v5);
  objc_storeStrong((id *)(v6 + 40), obj);
  if ((_DWORD)v7)
  {
    v8 = *(void **)(a1 + 32);
    v9 = *(double *)(a1 + 64);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v22 = *(id *)(v10 + 40);
    v7 = objc_msgSend(v8, "bindRealParameter:toValue:inStatement:error:", "@endTime", a2, &v22, v9);
    objc_storeStrong((id *)(v10 + 40), v22);
    if ((_DWORD)v7)
    {
      v11 = sqlite3_step(a2);
      while ((_DWORD)v11 == 100)
      {
        objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 0, a2);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = 1;
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 1, a2);
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 2, a2);
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 3, a2);
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 4, a2);
        objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 5, a2);
        v14 = v13;
        objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 6, a2);
        v16 = v15;
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 7, a2);
        if (!(*(unsigned int (**)(double, double))(*(_QWORD *)(a1 + 40) + 16))(v14, v16))
          goto LABEL_10;
        v11 = sqlite3_step(a2);

      }
      if ((_DWORD)v11 == 101)
        return 1;
      v17 = *(void **)(a1 + 32);
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v21 = *(id *)(v18 + 40);
      objc_msgSend(v17, "reportSQLiteErrorCode:method:error:", v11, CFSTR("step"), &v21);
      v19 = v21;
      v7 = 0;
      v12 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = v19;
LABEL_10:

    }
  }
  return v7;
}

uint64_t __reqcountdata_readlog_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  int v7;
  void *v8;
  double v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v23;
  id v24;
  id obj;

  v4 = *(void **)(a1 + 32);
  v5 = *(double *)(a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindRealParameter:toValue:inStatement:error:", "@startTime", a2, &obj, v5);
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7)
    return 0;
  v8 = *(void **)(a1 + 32);
  v9 = *(double *)(a1 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v24 = *(id *)(v10 + 40);
  v11 = objc_msgSend(v8, "bindRealParameter:toValue:inStatement:error:", "@endTime", a2, &v24, v9);
  objc_storeStrong((id *)(v10 + 40), v24);
  if (!v11)
    return 0;
  v12 = sqlite3_step(a2);
  while ((_DWORD)v12 == 100)
  {
    objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 0, a2);
    v14 = v13;
    v15 = 1;
    objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 1, a2);
    v17 = v16;
    objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 2, a2);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 3, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 4, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 5, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 6, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 7, a2);
    if (!(*(unsigned int (**)(double, double))(*(_QWORD *)(a1 + 40) + 16))(v14, v17))
      goto LABEL_10;
    v12 = sqlite3_step(a2);

  }
  if ((_DWORD)v12 == 101)
    return 1;
  v19 = *(void **)(a1 + 32);
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v23 = *(id *)(v20 + 40);
  objc_msgSend(v19, "reportSQLiteErrorCode:method:error:", v12, CFSTR("step"), &v23);
  v21 = v23;
  v15 = 0;
  v18 = *(void **)(v20 + 40);
  *(_QWORD *)(v20 + 40) = v21;
LABEL_10:

  return v15;
}

uint64_t __reqcountdata_prune_block_invoke(double *a1, uint64_t a2)
{
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id obj;

  v2 = a1[6];
  v3 = (void *)*((_QWORD *)a1 + 4);
  v4 = *(_QWORD *)(*((_QWORD *)a1 + 5) + 8);
  obj = *(id *)(v4 + 40);
  v5 = objc_msgSend(v3, "bindRealParameter:toValue:inStatement:error:", "@startTime", a2, &obj, v2);
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __externalreqcountdata_prune_block_invoke(double *a1, uint64_t a2)
{
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id obj;

  v2 = a1[6];
  v3 = (void *)*((_QWORD *)a1 + 4);
  v4 = *(_QWORD *)(*((_QWORD *)a1 + 5) + 8);
  obj = *(id *)(v4 + 40);
  v5 = objc_msgSend(v3, "bindRealParameter:toValue:inStatement:error:", "@startTime", a2, &obj, v2);
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __placecache_prune_block_invoke(double *a1, uint64_t a2)
{
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id obj;

  v2 = a1[6];
  v3 = (void *)*((_QWORD *)a1 + 4);
  v4 = *(_QWORD *)(*((_QWORD *)a1 + 5) + 8);
  obj = *(id *)(v4 + 40);
  v5 = objc_msgSend(v3, "bindRealParameter:toValue:inStatement:error:", "@timestamp", a2, &obj, v2);
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

uint64_t __reqcountdata_deleteall_block_invoke()
{
  return 1;
}

uint64_t __proactivetile_deleteall_block_invoke()
{
  return 1;
}

uint64_t __externalreqcountdata_deleteall_block_invoke()
{
  return 1;
}

uint64_t __placecache_deleteall_block_invoke()
{
  return 1;
}

uint64_t __proactivetile_insertstart_block_invoke(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;
  id v18;
  id obj;

  v4 = (void *)a1[4];
  v5 = a1[5];
  v6 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindTextParameter:toValue:inStatement:error:", "@identifier", v5, a2, &obj);
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7)
    return 0;
  v8 = (void *)a1[4];
  v9 = a1[7];
  v10 = *(_QWORD *)(a1[6] + 8);
  v18 = *(id *)(v10 + 40);
  v11 = objc_msgSend(v8, "bindInt64Parameter:toValue:inStatement:error:", "@policy", v9, a2, &v18);
  objc_storeStrong((id *)(v10 + 40), v18);
  if (!v11)
    return 0;
  v12 = (void *)a1[4];
  v13 = a1[8];
  v14 = *(_QWORD *)(a1[6] + 8);
  v17 = *(id *)(v14 + 40);
  v15 = objc_msgSend(v12, "bindInt64Parameter:toValue:inStatement:error:", "@start_timestamp", v13, a2, &v17);
  objc_storeStrong((id *)(v14 + 40), v17);
  return v15;
}

uint64_t __proactivetile_insertend_block_invoke(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id obj;
  id v44;

  v4 = (void *)a1[4];
  v5 = a1[5];
  v6 = *(_QWORD *)(a1[6] + 8);
  v44 = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindTextParameter:toValue:inStatement:error:", "@identifier", v5, a2, &v44);
  objc_storeStrong((id *)(v6 + 40), v44);
  if (!v7)
    return 0;
  v8 = (void *)a1[4];
  v9 = a1[7];
  v10 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v10 + 40);
  v11 = objc_msgSend(v8, "bindInt64Parameter:toValue:inStatement:error:", "@policy", v9, a2, &obj);
  objc_storeStrong((id *)(v10 + 40), obj);
  if (!v11)
    return 0;
  v12 = (void *)a1[4];
  v13 = a1[8];
  v14 = *(_QWORD *)(a1[6] + 8);
  v42 = *(id *)(v14 + 40);
  v15 = objc_msgSend(v12, "bindInt64Parameter:toValue:inStatement:error:", "@end_timestamp", v13, a2, &v42);
  objc_storeStrong((id *)(v14 + 40), v42);
  if (!v15)
    return 0;
  v16 = (void *)a1[4];
  v17 = a1[9];
  v18 = *(_QWORD *)(a1[6] + 8);
  v41 = *(id *)(v18 + 40);
  v19 = objc_msgSend(v16, "bindInt64Parameter:toValue:inStatement:error:", "@tile_count", v17, a2, &v41);
  objc_storeStrong((id *)(v18 + 40), v41);
  if (!v19)
    return 0;
  v20 = (void *)a1[4];
  v21 = a1[10];
  v22 = *(_QWORD *)(a1[6] + 8);
  v40 = *(id *)(v22 + 40);
  v23 = objc_msgSend(v20, "bindInt64Parameter:toValue:inStatement:error:", "@dl_attempts", v21, a2, &v40);
  objc_storeStrong((id *)(v22 + 40), v40);
  if (!v23)
    return 0;
  v24 = (void *)a1[4];
  v25 = a1[11];
  v26 = *(_QWORD *)(a1[6] + 8);
  v39 = *(id *)(v26 + 40);
  v27 = objc_msgSend(v24, "bindInt64Parameter:toValue:inStatement:error:", "@success_count", v25, a2, &v39);
  objc_storeStrong((id *)(v26 + 40), v39);
  if (!v27)
    return 0;
  v28 = (void *)a1[4];
  v29 = a1[12];
  v30 = *(_QWORD *)(a1[6] + 8);
  v38 = *(id *)(v30 + 40);
  v31 = objc_msgSend(v28, "bindInt64Parameter:toValue:inStatement:error:", "@failure_count", v29, a2, &v38);
  objc_storeStrong((id *)(v30 + 40), v38);
  if (!v31)
    return 0;
  v32 = (void *)a1[4];
  v33 = a1[13];
  v34 = *(_QWORD *)(a1[6] + 8);
  v37 = *(id *)(v34 + 40);
  v35 = objc_msgSend(v32, "bindInt64Parameter:toValue:inStatement:error:", "@bytes_downloaded", v33, a2, &v37);
  objc_storeStrong((id *)(v34 + 40), v37);
  return v35;
}

uint64_t __proactivetile_query_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v14;
  id obj;

  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindInt64Parameter:toValue:inStatement:error:", "@start_timestamp", v5, a2, &obj);
  objc_storeStrong((id *)(v6 + 40), obj);
  if ((_DWORD)v7)
  {
    v8 = sqlite3_step(a2);
    while ((_DWORD)v8 == 100)
    {
      objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 0, a2);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 1;
      if (!(*(unsigned int (**)(_QWORD, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), v9, objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 1, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 2, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 3, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 4, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 5, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 6, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 7, a2), objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 8, a2)))goto LABEL_9;
      v8 = sqlite3_step(a2);

    }
    if ((_DWORD)v8 == 101)
      return 1;
    v10 = *(void **)(a1 + 32);
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v14 = *(id *)(v11 + 40);
    objc_msgSend(v10, "reportSQLiteErrorCode:method:error:", v8, CFSTR("step"), &v14);
    v12 = v14;
    v7 = 0;
    v9 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v12;
LABEL_9:

  }
  return v7;
}

uint64_t __routepreload_insert_block_invoke(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id obj;

  v4 = a1[6];
  v5 = (void *)a1[4];
  v6 = *(_QWORD *)(a1[5] + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v5, "bindInt64Parameter:toValue:inStatement:error:", "@start_time", v4, a2, &obj);
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7)
    return 0;
  v8 = a1[7];
  v9 = (void *)a1[4];
  v10 = *(_QWORD *)(a1[5] + 8);
  v33 = *(id *)(v10 + 40);
  v11 = objc_msgSend(v9, "bindInt64Parameter:toValue:inStatement:error:", "@end_time", v8, a2, &v33);
  objc_storeStrong((id *)(v10 + 40), v33);
  if (!v11)
    return 0;
  v12 = a1[8];
  v13 = (void *)a1[4];
  v14 = *(_QWORD *)(a1[5] + 8);
  v32 = *(id *)(v14 + 40);
  v15 = objc_msgSend(v13, "bindInt64Parameter:toValue:inStatement:error:", "@transport_type", v12, a2, &v32);
  objc_storeStrong((id *)(v14 + 40), v32);
  if (!v15)
    return 0;
  v16 = a1[9];
  v17 = (void *)a1[4];
  v18 = *(_QWORD *)(a1[5] + 8);
  v31 = *(id *)(v18 + 40);
  v19 = objc_msgSend(v17, "bindInt64Parameter:toValue:inStatement:error:", "@tiles_preloaded", v16, a2, &v31);
  objc_storeStrong((id *)(v18 + 40), v31);
  if (!v19)
    return 0;
  v20 = a1[10];
  v21 = (void *)a1[4];
  v22 = *(_QWORD *)(a1[5] + 8);
  v30 = *(id *)(v22 + 40);
  v23 = objc_msgSend(v21, "bindInt64Parameter:toValue:inStatement:error:", "@tiles_used", v20, a2, &v30);
  objc_storeStrong((id *)(v22 + 40), v30);
  if (!v23)
    return 0;
  v24 = a1[11];
  v25 = (void *)a1[4];
  v26 = *(_QWORD *)(a1[5] + 8);
  v29 = *(id *)(v26 + 40);
  v27 = objc_msgSend(v25, "bindInt64Parameter:toValue:inStatement:error:", "@tiles_missed", v24, a2, &v29);
  objc_storeStrong((id *)(v26 + 40), v29);
  return v27;
}

uint64_t __routepreload_read_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v13;
  id obj;

  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindInt64Parameter:toValue:inStatement:error:", "@start_time", v5, a2, &obj);
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7)
    return 0;
  v8 = sqlite3_step(a2);
  v9 = 1;
  while ((_DWORD)v8 == 100)
  {
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 0, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 1, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 2, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 3, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 4, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 5, a2);
    if (!(*(unsigned int (**)(void))(*(_QWORD *)(a1 + 40) + 16))())
      return v9;
    v8 = sqlite3_step(a2);
  }
  if ((_DWORD)v8 != 101)
  {
    v10 = *(void **)(a1 + 32);
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v13 = *(id *)(v11 + 40);
    objc_msgSend(v10, "reportSQLiteErrorCode:method:error:", v8, CFSTR("step"), &v13);
    objc_storeStrong((id *)(v11 + 40), v13);
    return 0;
  }
  return 1;
}

uint64_t __externalreqcountdata_insert_block_invoke(double *a1, uint64_t a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  int v7;
  void *v8;
  double v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id obj;
  id v48;
  id v49;

  v4 = (void *)*((_QWORD *)a1 + 4);
  v5 = a1[10];
  v6 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v49 = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindRealParameter:toValue:inStatement:error:", "@startTime", a2, &v49, v5);
  objc_storeStrong((id *)(v6 + 40), v49);
  if (!v7)
    return 0;
  v8 = (void *)*((_QWORD *)a1 + 4);
  v9 = a1[11];
  v10 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v48 = *(id *)(v10 + 40);
  v11 = objc_msgSend(v8, "bindRealParameter:toValue:inStatement:error:", "@endTime", a2, &v48, v9);
  objc_storeStrong((id *)(v10 + 40), v48);
  if (!v11)
    return 0;
  v12 = (void *)*((_QWORD *)a1 + 4);
  v13 = *((_QWORD *)a1 + 12);
  v14 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  obj = *(id *)(v14 + 40);
  v15 = objc_msgSend(v12, "bindInt64Parameter:toValue:inStatement:error:", "@xmitbytes", v13, a2, &obj);
  objc_storeStrong((id *)(v14 + 40), obj);
  if (!v15)
    return 0;
  v16 = (void *)*((_QWORD *)a1 + 4);
  v17 = *((_QWORD *)a1 + 13);
  v18 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v46 = *(id *)(v18 + 40);
  v19 = objc_msgSend(v16, "bindInt64Parameter:toValue:inStatement:error:", "@recvbytes", v17, a2, &v46);
  objc_storeStrong((id *)(v18 + 40), v46);
  if (!v19)
    return 0;
  v20 = (void *)*((_QWORD *)a1 + 4);
  v21 = *((_QWORD *)a1 + 14);
  v22 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v45 = *(id *)(v22 + 40);
  v23 = objc_msgSend(v20, "bindInt64Parameter:toValue:inStatement:error:", "@interface", v21, a2, &v45);
  objc_storeStrong((id *)(v22 + 40), v45);
  if (!v23)
    return 0;
  v24 = (void *)*((_QWORD *)a1 + 4);
  v25 = *((_QWORD *)a1 + 5);
  v26 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v44 = *(id *)(v26 + 40);
  v27 = objc_msgSend(v24, "bindTextParameter:toValue:inStatement:error:", "@appid", v25, a2, &v44);
  objc_storeStrong((id *)(v26 + 40), v44);
  if (!v27)
    return 0;
  v28 = (void *)*((_QWORD *)a1 + 4);
  v29 = *((_QWORD *)a1 + 6);
  v30 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v43 = *(id *)(v30 + 40);
  v31 = objc_msgSend(v28, "bindTextParameter:toValue:inStatement:error:", "@requesttype", v29, a2, &v43);
  objc_storeStrong((id *)(v30 + 40), v43);
  if (!v31)
    return 0;
  v32 = (void *)*((_QWORD *)a1 + 4);
  v33 = *((_QWORD *)a1 + 7);
  v34 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v42 = *(id *)(v34 + 40);
  v35 = objc_msgSend(v32, "bindTextParameter:toValue:inStatement:error:", "@requestsubtype", v33, a2, &v42);
  objc_storeStrong((id *)(v34 + 40), v42);
  if (!v35)
    return 0;
  v36 = (void *)*((_QWORD *)a1 + 4);
  v37 = *((_QWORD *)a1 + 8);
  v38 = *(_QWORD *)(*((_QWORD *)a1 + 9) + 8);
  v41 = *(id *)(v38 + 40);
  v39 = objc_msgSend(v36, "bindTextParameter:toValue:inStatement:error:", "@source", v37, a2, &v41);
  objc_storeStrong((id *)(v38 + 40), v41);
  return v39;
}

BOOL __externalreqcountdata_readcounts_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  char v14;
  void *v15;
  uint64_t v16;
  id obj;

  v4 = sqlite3_step(a2);
  do
  {
    if ((_DWORD)v4 != 100)
      break;
    objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 0, a2);
    v6 = v5;
    objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 1, a2);
    v8 = v7;
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 2, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 3, a2);
    objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 4, a2);
    objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 5, a2);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 6, a2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 7, a2);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 8, a2);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (*(uint64_t (**)(double, double))(*(_QWORD *)(a1 + 40) + 16))(v6, v8);
    v14 = v13;
    v4 = v13 ? sqlite3_step(a2) : 101;

  }
  while ((v14 & 1) != 0);
  if ((_DWORD)v4 != 101)
  {
    v15 = *(void **)(a1 + 32);
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    obj = *(id *)(v16 + 40);
    objc_msgSend(v15, "reportSQLiteErrorCode:method:error:", v4, CFSTR("step"), &obj);
    objc_storeStrong((id *)(v16 + 40), obj);
  }
  return (_DWORD)v4 == 101;
}

uint64_t __placecache_insert_block_invoke(double *a1, uint64_t a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v21;
  id v22;
  id v23;
  id obj;

  v4 = (void *)*((_QWORD *)a1 + 4);
  v5 = a1[7];
  v6 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindRealParameter:toValue:inStatement:error:", "@timestamp", a2, &obj, v5);
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7)
    return 0;
  v8 = (void *)*((_QWORD *)a1 + 4);
  v9 = *((_QWORD *)a1 + 5);
  v10 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v23 = *(id *)(v10 + 40);
  v11 = objc_msgSend(v8, "bindTextParameter:toValue:inStatement:error:", "@appid", v9, a2, &v23);
  objc_storeStrong((id *)(v10 + 40), v23);
  if (!v11)
    return 0;
  v12 = (void *)*((_QWORD *)a1 + 4);
  v13 = *((_QWORD *)a1 + 8);
  v14 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v22 = *(id *)(v14 + 40);
  v15 = objc_msgSend(v12, "bindInt64Parameter:toValue:inStatement:error:", "@requesttype", v13, a2, &v22);
  objc_storeStrong((id *)(v14 + 40), v22);
  if (!v15)
    return 0;
  v16 = (void *)*((_QWORD *)a1 + 4);
  v17 = *((_QWORD *)a1 + 9);
  v18 = *(_QWORD *)(*((_QWORD *)a1 + 6) + 8);
  v21 = *(id *)(v18 + 40);
  v19 = objc_msgSend(v16, "bindInt64Parameter:toValue:inStatement:error:", "@result", v17, a2, &v21);
  objc_storeStrong((id *)(v18 + 40), v21);
  return v19;
}

uint64_t __placecache_readcounts_block_invoke(uint64_t a1, sqlite3_stmt *a2)
{
  void *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v17;
  id v18;
  id obj;

  v4 = *(void **)(a1 + 32);
  v5 = *(double *)(a1 + 56);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v6 + 40);
  v7 = objc_msgSend(v4, "bindRealParameter:toValue:inStatement:error:", "@begin", a2, &obj, v5);
  objc_storeStrong((id *)(v6 + 40), obj);
  if ((_DWORD)v7)
  {
    v8 = *(void **)(a1 + 32);
    v9 = *(double *)(a1 + 64);
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v18 = *(id *)(v10 + 40);
    v7 = objc_msgSend(v8, "bindRealParameter:toValue:inStatement:error:", "@end", a2, &v18, v9);
    objc_storeStrong((id *)(v10 + 40), v18);
    if ((_DWORD)v7)
    {
      v11 = sqlite3_step(a2);
      while ((_DWORD)v11 == 100)
      {
        objc_msgSend(*(id *)(a1 + 32), "stringForColumn:inStatment:", 0, a2);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = 1;
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 1, a2);
        objc_msgSend(*(id *)(a1 + 32), "int64ForColumn:inStatment:", 2, a2);
        objc_msgSend(*(id *)(a1 + 32), "doubleForColumn:inStatment:", 3, a2);
        if (!(*(unsigned int (**)(void))(*(_QWORD *)(a1 + 40) + 16))())
          goto LABEL_10;
        v11 = sqlite3_step(a2);

      }
      if ((_DWORD)v11 == 101)
        return 1;
      v13 = *(void **)(a1 + 32);
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v17 = *(id *)(v14 + 40);
      objc_msgSend(v13, "reportSQLiteErrorCode:method:error:", v11, CFSTR("step"), &v17);
      v15 = v17;
      v7 = 0;
      v12 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v15;
LABEL_10:

    }
  }
  return v7;
}

void navdRestarted(uint64_t a1, void *a2)
{
  uint32_t v2;
  dispatch_time_t v3;
  _QWORD v4[4];
  id v5;
  id location;

  objc_initWeak(&location, a2);
  v2 = arc4random_uniform(0x2EEu);
  v3 = dispatch_time(0, (uint64_t)((double)v2 / 1000.0 * 1000000000.0));
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __navdRestarted_block_invoke;
  v4[3] = &unk_1E1BFF8B0;
  objc_copyWeak(&v5, &location);
  dispatch_after(v3, MEMORY[0x1E0C80D38], v4);
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_1896AC198(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1896AC31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896AC85C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id a36)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak(&a36);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__85(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x18D765024](*(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __navdRestarted_block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "open");

}

void sub_1896AFAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double GEOAutomaticUpdateFrequencyForOfflineDataSize(unint64_t a1)
{
  id v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char isKindOfClass;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  uint8_t v19[16];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  _getValue(GeoOfflineConfig_AutomaticUpdatesFrequencyBuckets, (uint64_t)off_1EDF4EA28, 1, 0, 0, 0);
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  v4 = -1.0;
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v21;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v21 != v6)
        objc_enumerationMutation(v2);
      v8 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * v7);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)v19 = 0;
          _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: [testBucket isKindOfClass:NSDictionary.class]", v19, 2u);
        }
        goto LABEL_11;
      }
      objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("sizeInMB"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("interval"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) != 0)
        {
          if (1000000 * objc_msgSend(v9, "unsignedLongLongValue") >= a1)
          {
            v15 = v8;

            if (v15)
            {
              objc_msgSend(v15, "objectForKeyedSubscript:", CFSTR("interval"));
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v16, "doubleValue");
              v4 = v17;

              goto LABEL_24;
            }
            v4 = -1.0;
            goto LABEL_26;
          }
          goto LABEL_10;
        }
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)v19 = 0;
          v12 = MEMORY[0x1E0C81028];
          v13 = "Assertion failed: [testBucket[IntervalBucketKey] isKindOfClass:NSNumber.class]";
          goto LABEL_19;
        }
      }
      else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)v19 = 0;
        v12 = MEMORY[0x1E0C81028];
        v13 = "Assertion failed: [sizeThresholdNumber isKindOfClass:NSNumber.class]";
LABEL_19:
        _os_log_fault_impl(&dword_1885A9000, v12, OS_LOG_TYPE_FAULT, v13, v19, 2u);
      }
LABEL_10:

LABEL_11:
      if (v5 == ++v7)
      {
        v14 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
        v5 = v14;
        if (v14)
          goto LABEL_3;
        break;
      }
    }
  }
  v15 = v2;
LABEL_24:

LABEL_26:
  return v4;
}

uint64_t GEOMaximumAutomaticUpdateOfflineDataSize()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint8_t v5[16];
  uint8_t buf[16];

  _getValue(GeoOfflineConfig_AutomaticUpdatesFrequencyBuckets, (uint64_t)off_1EDF4EA28, 1, 0, 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "lastObject");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("sizeInMB"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v3 = 1000000 * objc_msgSend(v2, "unsignedIntegerValue");
    }
    else
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)v5 = 0;
        _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: [sizeThresholdNumber isKindOfClass:NSNumber.class]", v5, 2u);
      }
      v3 = 0;
    }

  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: [bucket isKindOfClass:NSDictionary.class]", buf, 2u);
    }
    v3 = 0;
  }

  return v3;
}

void GEOFetchOfflineMapsDownloadURLForSFFlightLeg(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  NSObject *v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = a2;
  qos_class_self();
  geo_dispatch_queue_create_with_qos();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __GEOFetchOfflineMapsDownloadURLForSFFlightLeg_block_invoke;
  block[3] = &unk_1E1C00BB8;
  v11 = v5;
  v12 = v4;
  v10 = v3;
  v6 = v5;
  v7 = v4;
  v8 = v3;
  dispatch_async(v6, block);

}

id GEOGetOfflineUtilitiesLog()
{
  if (qword_1ECDBC820 != -1)
    dispatch_once(&qword_1ECDBC820, &__block_literal_global_176);
  return (id)_MergedGlobals_312;
}

void sub_1896B07E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

double geod_init(uint64_t a1, double a2, double a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  long double v12;
  double v13;
  double v14;
  double v15;
  float64x2_t v21;
  const double *v22;
  float64x2_t v23;
  float64x2_t v24;
  double result;
  double v26;
  double v27;

  if ((_MergedGlobals_313 & 1) == 0)
  {
    byte_1ECDBC830 = 1;
    byte_1ECDBC82C = 1;
    qword_1ECDBC848 = 0x2000000000000000;
    qword_1ECDBC858 = 0x400921FB54442D18;
    unk_1ECDBC860 = 0x3CB0000000000000;
    qword_1ECDBC868 = 0x3B10000000000000;
    qword_1ECDBC870 = 0x3D29000000000000;
    qword_1ECDBC878 = 0x3EEF400000000000;
    qword_1ECDBC838 = 0x3E50000000000000;
    qword_1ECDBC840 = 0x3F91DF46A2529D39;
    qword_1ECDBC850 = sqrt(-1.0);
    _MergedGlobals_313 = 1;
  }
  v5 = 1.0;
  if (a3 > 1.0)
    a3 = 1.0 / a3;
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  v6 = a3 * (2.0 - a3);
  *(double *)(a1 + 16) = 1.0 - a3;
  *(double *)(a1 + 24) = v6;
  v7 = a3 / (2.0 - a3);
  *(double *)(a1 + 32) = v6 / ((1.0 - a3) * (1.0 - a3));
  *(double *)(a1 + 40) = v7;
  v8 = (1.0 - a3) * a2;
  *(double *)(a1 + 48) = v8;
  if (v6 == 0.0)
  {
    v9 = sqrt(fabs(v6));
  }
  else
  {
    if (v6 <= 0.0)
    {
      v27 = a3 / (2.0 - a3);
      v13 = atan(sqrt(-v6));
      v7 = v27;
    }
    else
    {
      v10 = fabs(sqrt(v6));
      v11 = (v10 + v10) / (1.0 - v10);
      if (v11 + 1.0 + -1.0 != 0.0)
      {
        v26 = a3 / (2.0 - a3);
        v12 = log(v11 + 1.0);
        v7 = v26;
        v11 = v11 * v12 / (v11 + 1.0 + -1.0);
      }
      v13 = v11 * 0.5;
    }
    v9 = sqrt(fabs(v6));
    v5 = v13 / v9;
  }
  v14 = (a2 * a2 + v8 * v8 * v5) * 0.5;
  v15 = *(double *)&qword_1ECDBC838 * 0.01;
  if (v9 < 0.1)
    v9 = 0.1;
  *(double *)(a1 + 56) = v14;
  *(double *)(a1 + 64) = v15 / v9;
  *(_QWORD *)(a1 + 72) = 0x3FF0000000000000;
  *(double *)(a1 + 80) = (v7 + -1.0) * 0.5;
  *(double *)(a1 + 88) = (v7 * (v7 * 3.0 + -1.0) + -2.0) * 0.125;
  *(double *)(a1 + 96) = ((-3.0 - v7) * v7 + -1.0) * 0.0625;
  *(double *)(a1 + 104) = (v7 * -2.0 + -3.0) * 0.015625;
  *(_QWORD *)(a1 + 112) = 0xBF98000000000000;
  *(double *)(a1 + 120) = (1.0 - v7) * 0.25;
  *(double *)(a1 + 128) = (1.0 - v7 * v7) * 0.125;
  *(double *)(a1 + 136) = ((3.0 - v7) * v7 + 3.0) * 0.015625;
  *(double *)(a1 + 144) = (v7 * 2.0 + 5.0) * 0.0078125;
  *(_QWORD *)(a1 + 152) = 0x3F98000000000000;
  *(double *)(a1 + 160) = ((v7 + -3.0) * v7 + 2.0) * 0.03125;
  *(double *)(a1 + 168) = ((v7 * -3.0 + -2.0) * v7 + 3.0) * 0.015625;
  *(double *)(a1 + 176) = (v7 + 3.0) * 0.0078125;
  *(_QWORD *)(a1 + 184) = 0x3F94000000000000;
  __asm { FMOV            V4.2D, #-10.0 }
  _Q4.f64[0] = v7 * 5.0 + -9.0;
  *(float64x2_t *)(a1 + 192) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_189CE1340, _Q4, v7), (float64x2_t)xmmword_189CE1350);
  *(_QWORD *)(a1 + 208) = 0x3F8C000000000000;
  *(double *)(a1 + 216) = (v7 * -14.0 + 7.0) * 0.001953125;
  v21 = (float64x2_t)vdupq_lane_s64(0x4050000000000000, 0);
  v21.f64[0] = v7 * 100.0 + 208.0;
  *(_OWORD *)(a1 + 224) = xmmword_189CE1360;
  *(float64x2_t *)(a1 + 240) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_189CE13A0, vmlaq_n_f64((float64x2_t)xmmword_189CE1390, vmlaq_n_f64((float64x2_t)xmmword_189CE1380, vmlaq_n_f64((float64x2_t)xmmword_189CE1370, v21, v7), v7), v7), v7), (float64x2_t)xmmword_189CE13B0);
  *(double *)(a1 + 256) = (v7 * ((v7 * -10656.0 + 14144.0) * v7 + -4576.0) + -858.0) / 45045.0;
  *(double *)(a1 + 264) = ((v7 * -224.0 + -4784.0) * v7 + 1573.0) / 45045.0;
  *(double *)(a1 + 272) = (v7 * 1088.0 + 156.0) / 45045.0;
  *(_QWORD *)(a1 + 280) = 0x3F7A7604778D4A49;
  *(double *)(a1 + 288) = (v7 * (v7 * ((v7 * -64.0 + -624.0) * v7 + 4576.0) + -6864.0) + 3003.0) / 135135.0;
  v22 = (const double *)&unk_189CE12C8;
  v23 = vld1q_dup_f64(v22);
  v23.f64[0] = v7 * 5952.0 + -11648.0;
  *(float64x2_t *)(a1 + 296) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_189CE13D0, vmlaq_n_f64((float64x2_t)xmmword_189CE13C0, v23, v7), v7), (float64x2_t)vdupq_n_s64(0x41007EF800000000uLL));
  *(double *)(a1 + 312) = (v7 * -2944.0 + 468.0) / 135135.0;
  *(_QWORD *)(a1 + 320) = 0x3F1D191762EA8BC0;
  *(double *)(a1 + 328) = (v7 * ((v7 * -1440.0 + 4160.0) * v7 + -4576.0) + 1716.0) / 225225.0;
  *(double *)(a1 + 336) = ((v7 * -8448.0 + 4992.0) * v7 + -1144.0) / 225225.0;
  *(double *)(a1 + 344) = (v7 * 1856.0 + -936.0) / 225225.0;
  *(_QWORD *)(a1 + 352) = 0x3F48713C9AC504C0;
  v24 = (float64x2_t)vdupq_lane_s64(0x4090000000000000, 0);
  v24.f64[0] = v7 * 3584.0 + -3328.0;
  *(float64x2_t *)(a1 + 360) = vdivq_f64(vmlaq_n_f64((float64x2_t)xmmword_189CE13E0, v24, v7), (float64x2_t)xmmword_189CE13F0);
  *(_QWORD *)(a1 + 376) = 0xBF61AAA9A0A0B047;
  result = (v7 * -2560.0 + 832.0) / 405405.0;
  *(double *)(a1 + 384) = result;
  *(_QWORD *)(a1 + 392) = 0xBF4F09B28BA4D955;
  *(_QWORD *)(a1 + 400) = 0x3F5529855F363717;
  return result;
}

void geod_lineinit(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6)
{
  double v9;
  int v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  __double2 v20;
  double sinval;
  double cosval;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  BOOL v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double *v39;
  int v40;
  double v41;
  BOOL v42;
  double v43;
  __double2 v44;
  float64x2_t v45;
  float64x2_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double *v51;
  double v52;
  int v53;
  double v54;
  double v55;
  uint64_t i;
  double v57;
  double v58;
  double v59;
  double v60;
  double *v61;
  double v62;
  int v63;
  double v64;
  double v65;
  double *v66;
  double v67;
  int v68;
  double v69;
  double v70;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 48);
  v9 = *(double *)(a2 + 16);
  *(double *)(a1 + 56) = v9;
  if (a3)
    v10 = a3 | 0x280;
  else
    v10 = 2955;
  *(_DWORD *)(a1 + 488) = v10;
  v11 = a6 + 360.0;
  if (a6 >= -180.0)
    v11 = a6;
  if (a6 >= 180.0)
    v12 = a6 + -360.0;
  else
    v12 = v11;
  v13 = fabs(v12);
  if (v13 < 0.0625)
    v13 = v13 + -0.0625 + 0.0625;
  v14 = v13;
  v15 = -v13;
  if (v12 >= 0.0)
    v16 = v14;
  else
    v16 = v15;
  v17 = a5 + -360.0;
  v18 = a5 + 360.0;
  if (a5 >= -180.0)
    v18 = a5;
  if (a5 < 180.0)
    v17 = v18;
  *(double *)a1 = a4;
  *(double *)(a1 + 8) = v17;
  *(double *)(a1 + 16) = v16;
  v19 = *(double *)&qword_1ECDBC840;
  v20 = __sincos_stret(v16 * *(double *)&qword_1ECDBC840);
  if (v16 == -180.0)
    sinval = 0.0;
  else
    sinval = v20.__sinval;
  if (fabs(v14) == 90.0)
    cosval = 0.0;
  else
    cosval = v20.__cosval;
  *(double *)(a1 + 88) = sinval;
  *(double *)(a1 + 96) = cosval;
  v23 = v9 * sin(v19 * a4);
  if (fabs(a4) == 90.0)
    v24 = *(double *)&qword_1ECDBC848;
  else
    v24 = cos(v19 * a4);
  v25 = sqrt(v24 * v24 + v23 * v23);
  v26 = v23 / v25;
  v27 = v24 / v25;
  *(double *)(a1 + 120) = sqrt(*(double *)(a2 + 32) * (v26 * v26) + 1.0);
  v28 = sqrt(sinval * v26 * (sinval * v26) + cosval * cosval);
  *(double *)(a1 + 64) = sinval * v27;
  *(double *)(a1 + 72) = v28;
  v29 = v26 * (sinval * v27);
  v30 = 0.0;
  v31 = cosval == 0.0 && v26 == 0.0;
  v32 = cosval * v27;
  if (v31)
    v32 = 1.0;
  *(double *)(a1 + 144) = v29;
  *(double *)(a1 + 152) = v32;
  v33 = sqrt(v32 * v32 + v26 * v26);
  *(double *)(a1 + 104) = v26 / v33;
  *(double *)(a1 + 112) = v32 / v33;
  v34 = v28 * v28 * *(double *)(a2 + 32);
  *(double *)(a1 + 80) = v34;
  v35 = v34 / (v34 + (sqrt(v34 + 1.0) + 1.0) * 2.0);
  v70 = v35;
  if ((v10 & 1) != 0)
  {
    *(double *)(a1 + 160) = (v35 + v35 * v35 * (v35 * v35 * (v35 * v35 + 4.0) + 64.0) * 0.00390625) / (1.0 - v35);
    C1f(a1 + 224, v35);
    v36 = *(double *)(a1 + 104);
    v37 = *(double *)(a1 + 112);
    v38 = (v36 + v37) * (v37 - v36 + v37 - v36);
    v39 = (double *)(a1 + 272);
    v40 = -3;
    v41 = 0.0;
    do
    {
      v30 = *v39 - (v30 - v38 * v41);
      v41 = *(v39 - 1) - (v41 - v38 * v30);
      v39 -= 2;
      v42 = __CFADD__(v40++, 1);
    }
    while (!v42);
    v43 = (v36 + v36) * v37 * v41;
    *(double *)(a1 + 184) = v43;
    v44 = __sincos_stret(v43);
    *(double *)(a1 + 128) = v37 * v44.__sinval + v36 * v44.__cosval;
    *(double *)(a1 + 136) = v37 * v44.__cosval - v36 * v44.__sinval;
    v10 = *(_DWORD *)(a1 + 488);
    v35 = v70;
    if ((v10 & 2) == 0)
    {
LABEL_35:
      if ((v10 & 4) == 0)
        goto LABEL_36;
      goto LABEL_44;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_35;
  }
  v45 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v35 * v35), 0);
  v45.f64[0] = v35;
  v46.f64[0] = v35 * (v35 * v35);
  v47 = v35 * v46.f64[0];
  v46.f64[1] = v35 * v46.f64[0];
  *(float64x2_t *)(a1 + 288) = vdivq_f64(vmulq_f64(v45, vmlaq_n_f64((float64x2_t)xmmword_189CE1420, vmlaq_n_f64((float64x2_t)xmmword_189CE1410, (float64x2_t)xmmword_189CE1400, v35 * v35), v35 * v35)), (float64x2_t)xmmword_189CE1430);
  *(float64x2_t *)(a1 + 304) = vdivq_f64(vmulq_f64(v46, vmlaq_n_f64((float64x2_t)xmmword_189CE1450, (float64x2_t)xmmword_189CE1440, v35 * v35)), (float64x2_t)xmmword_189CE1460);
  v46.f64[0] = v35 * (v35 * v46.f64[0]);
  v46.f64[1] = v35 * (v35 * v47);
  *(float64x2_t *)(a1 + 320) = vdivq_f64(vmulq_f64(v46, (float64x2_t)xmmword_189CE1470), (float64x2_t)xmmword_189CE1480);
  if ((v10 & 4) == 0)
  {
LABEL_36:
    if ((v10 & 8) == 0)
      goto LABEL_37;
    goto LABEL_48;
  }
LABEL_44:
  *(double *)(a1 + 168) = -(v35 - v35 * v35 * (v35 * v35 * (v35 * v35 * 25.0 + 36.0) + 64.0) * 0.00390625 * (1.0 - v35));
  C2f(a1 + 336, v35);
  v48 = *(double *)(a1 + 104);
  v49 = *(double *)(a1 + 112);
  v50 = (v48 + v49) * (v49 - v48 + v49 - v48);
  v51 = (double *)(a1 + 384);
  v52 = 0.0;
  v53 = -3;
  v54 = 0.0;
  do
  {
    v52 = *v51 - (v52 - v50 * v54);
    v54 = *(v51 - 1) - (v54 - v50 * v52);
    v51 -= 2;
    v42 = __CFADD__(v53++, 1);
  }
  while (!v42);
  *(double *)(a1 + 192) = (v48 + v48) * v49 * v54;
  v10 = *(_DWORD *)(a1 + 488);
  v35 = v70;
  if ((v10 & 8) == 0)
  {
LABEL_37:
    if ((v10 & 0x10) == 0)
      return;
    goto LABEL_54;
  }
LABEL_48:
  C3f(a2, a1 + 392, v35);
  v35 = v70;
  v55 = 0.0;
  for (i = 112; i != 64; i -= 8)
    v55 = *(double *)(a2 + i) + v70 * v55;
  *(double *)(a1 + 176) = -(*(double *)(a1 + 32) * *(double *)(a1 + 64)) * v55;
  v57 = *(double *)(a1 + 104);
  v58 = *(double *)(a1 + 112);
  v59 = (v57 + v58) * (v58 - v57 + v58 - v57);
  v60 = *(double *)(a1 + 432);
  v61 = (double *)(a1 + 424);
  v62 = 0.0;
  v63 = -2;
  do
  {
    v62 = *v61 - (v62 - v59 * v60);
    v60 = *(v61 - 1) - (v60 - v59 * v62);
    v61 -= 2;
    v42 = __CFADD__(v63++, 1);
  }
  while (!v42);
  *(double *)(a1 + 200) = (v57 + v57) * v58 * v60;
  if ((*(_DWORD *)(a1 + 488) & 0x10) != 0)
  {
LABEL_54:
    C4f(a2, a1 + 440, v35);
    *(double *)(a1 + 208) = *(double *)(a1 + 24)
                          * *(double *)(a1 + 24)
                          * *(double *)(a1 + 72)
                          * *(double *)(a1 + 64)
                          * *(double *)(a2 + 24);
    v64 = *(double *)(a1 + 112);
    v65 = (*(double *)(a1 + 104) + v64) * (v64 - *(double *)(a1 + 104) + v64 - *(double *)(a1 + 104));
    v66 = (double *)(a1 + 480);
    v67 = 0.0;
    v68 = -3;
    v69 = 0.0;
    do
    {
      v67 = *v66 - (v67 - v65 * v69);
      v69 = *(v66 - 1) - (v69 - v65 * v67);
      v66 -= 2;
      v42 = __CFADD__(v68++, 1);
    }
    while (!v42);
    *(double *)(a1 + 216) = v64 * (v69 - v67);
  }
}

float64_t C1f(uint64_t a1, float64_t a2)
{
  float64x2_t v2;
  float64x2_t v3;
  float64_t v4;
  float64_t v5;
  float64_t v6;
  float64_t result;

  v2.f64[0] = 6.0 - a2 * a2;
  v2.f64[1] = a2 * a2 * -9.0 + 64.0;
  v3 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(a2 * a2), 0);
  v3.f64[0] = a2;
  *(float64x2_t *)(a1 + 8) = vmulq_f64(vmulq_f64(v3, vmlaq_n_f64((float64x2_t)xmmword_189CE1490, v2, a2 * a2)), (float64x2_t)xmmword_189CE14A0);
  v4 = a2 * a2 * a2;
  v2.f64[0] = v4 * (a2 * a2 * 9.0 + -16.0) / 768.0;
  v5 = v4 * a2;
  *(float64_t *)(a1 + 24) = v2.f64[0];
  *(float64_t *)(a1 + 32) = (a2 * a2 * 3.0 + -5.0) * v5 * 0.001953125;
  v6 = v5 * a2;
  result = v6 * a2 * -7.0 * 0.00048828125;
  *(float64_t *)(a1 + 40) = v6 * -7.0 / 1280.0;
  *(float64_t *)(a1 + 48) = result;
  return result;
}

float64_t C2f(uint64_t a1, float64_t a2)
{
  float64x2_t v2;
  float64x2_t v3;
  float64_t v4;
  float64_t v5;
  float64_t result;

  v2.f64[0] = a2 * a2 + 2.0;
  v3 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(a2 * a2), 0);
  v2.f64[1] = a2 * a2 * 35.0 + 64.0;
  v3.f64[0] = a2;
  *(float64x2_t *)(a1 + 8) = vmulq_f64(vmulq_f64(v3, vmlaq_n_f64((float64x2_t)xmmword_189CE14B0, v2, a2 * a2)), (float64x2_t)xmmword_189CE14A0);
  v2.f64[0] = a2 * a2 * a2;
  v4 = v2.f64[0] * (a2 * a2 * 15.0 + 80.0) / 768.0;
  v2.f64[0] = v2.f64[0] * a2;
  *(float64_t *)(a1 + 24) = v4;
  *(float64_t *)(a1 + 32) = (a2 * a2 * 7.0 + 35.0) * v2.f64[0] * 0.001953125;
  v5 = v2.f64[0] * a2;
  v2.f64[0] = v2.f64[0] * a2 * 63.0 / 1280.0;
  result = v5 * a2 * 77.0 * 0.00048828125;
  *(float64_t *)(a1 + 40) = v2.f64[0];
  *(float64_t *)(a1 + 48) = result;
  return result;
}

double C3f(uint64_t a1, uint64_t a2, double result)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  double v7;
  int v8;
  double *v9;
  double v10;
  double v12;
  uint64_t i;

  v3 = -1;
  v4 = 15;
  v5 = 5;
  do
  {
    v6 = v4;
    v7 = 0.0;
    v8 = v3;
    v9 = (double *)(a1 + 112 + 8 * v4);
    do
    {
      v10 = *v9--;
      v7 = v10 + result * v7;
    }
    while (!__CFADD__(v8++, 1));
    v4 = v6 + v3;
    *(double *)(a2 + 8 * v5) = v7;
    --v3;
    --v5;
  }
  while (v5);
  v12 = 1.0;
  for (i = 8; i != 48; i += 8)
  {
    v12 = v12 * result;
    *(double *)(a2 + i) = v12 * *(double *)(a2 + i);
  }
  return result;
}

double C4f(uint64_t a1, uint64_t a2, double result)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  double v7;
  int v8;
  double *v9;
  double v10;
  double v12;
  uint64_t i;

  v3 = -1;
  v4 = 21;
  v5 = 6;
  do
  {
    v6 = v4;
    v7 = 0.0;
    v8 = v3;
    v9 = (double *)(a1 + 232 + 8 * v4);
    do
    {
      v10 = *v9--;
      v7 = v10 + result * v7;
    }
    while (!__CFADD__(v8++, 1));
    v4 = v6 + v3--;
    --v5;
    *(double *)(a2 + 8 * v5) = v7;
  }
  while (v5);
  v12 = 1.0;
  for (i = 8; i != 48; i += 8)
  {
    v12 = v12 * result;
    *(double *)(a2 + i) = v12 * *(double *)(a2 + i);
  }
  return result;
}

double geod_genposition(uint64_t a1, int a2, double *a3, double *a4, double *a5, double *a6, double *a7, double *a8, double a9, double *a10, double *a11)
{
  int v11;
  double v12;
  unsigned int v20;
  double v21;
  double v22;
  double sinval;
  __double2 v24;
  double v25;
  double cosval;
  double v27;
  double v28;
  double v29;
  __double2 v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double *v36;
  double v37;
  int v38;
  double v39;
  BOOL v40;
  double v41;
  __double2 v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double *v48;
  double v49;
  int v50;
  double v51;
  __double2 v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double *v59;
  double v60;
  int v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  uint64_t *v70;
  double v71;
  double v72;
  double v73;
  double *v74;
  double v75;
  int v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  long double v82;
  double v83;
  double v84;
  long double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double *v90;
  double v91;
  int v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double *v99;
  double v100;
  int v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v117;
  double v118;
  double v119;
  double v120;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;

  v11 = *(_DWORD *)(a1 + 488);
  if (!(a2 | v11 & 0x800))
    return *(double *)&qword_1ECDBC850;
  v12 = a9;
  v20 = (unsigned __int16)v11 & (((a3 != 0) << 7) | ((a4 != 0) << 8) | ((a5 != 0) << 9) | ((a6 != 0) << 10) | ((a7 != 0) << 12) | ((((unint64_t)a8 | (unint64_t)a10) != 0) << 13) | ((a11 != 0) << 14));
  if (a2)
  {
    v21 = fabs(a9);
    v22 = v21 + floor(v21 / 180.0) * -180.0;
    v131 = *(double *)&qword_1ECDBC840 * a9;
    v24 = __sincos_stret(*(double *)&qword_1ECDBC840 * a9);
    sinval = v24.__sinval;
    v25 = 0.0;
    if (v22 == 0.0)
      sinval = 0.0;
    if (v22 == 90.0)
      cosval = 0.0;
    else
      cosval = v24.__cosval;
  }
  else
  {
    v27 = *(double *)(a1 + 40);
    v28 = *(double *)(a1 + 160) + 1.0;
    v29 = a9 / (v27 * v28);
    v30 = __sincos_stret(v29);
    v31 = *(double *)(a1 + 128);
    v32 = *(double *)(a1 + 136);
    v33 = v32 * v30.__sinval + v31 * v30.__cosval;
    v34 = v32 * v30.__cosval - v31 * v30.__sinval;
    v35 = (v33 + v34) * (v34 - v33 + v34 - v33);
    v36 = (double *)(a1 + 328);
    v37 = 0.0;
    v38 = -3;
    v39 = 0.0;
    do
    {
      v37 = *v36 - (v37 - v35 * v39);
      v39 = *(v36 - 1) - (v39 - v35 * v37);
      v36 -= 2;
      v40 = __CFADD__(v38++, 1);
    }
    while (!v40);
    v25 = v34 * (v33 * -2.0) * v39;
    v41 = *(double *)(a1 + 184);
    v131 = v29 - (v25 - v41);
    v42 = __sincos_stret(v131);
    sinval = v42.__sinval;
    cosval = v42.__cosval;
    if (fabs(*(double *)(a1 + 32)) > 0.01)
    {
      v43 = *(double *)(a1 + 104);
      v44 = *(double *)(a1 + 112);
      v45 = v42.__sinval * v44 + v43 * v42.__cosval;
      v46 = v44 * v42.__cosval - v43 * v42.__sinval;
      v47 = (v46 + v45) * (v46 - v45 + v46 - v45);
      v48 = (double *)(a1 + 272);
      v49 = 0.0;
      v50 = -3;
      v51 = 0.0;
      do
      {
        v49 = *v48 - (v49 - v47 * v51);
        v51 = *(v48 - 1) - (v51 - v47 * v49);
        v48 -= 2;
        v40 = __CFADD__(v50++, 1);
      }
      while (!v40);
      v25 = v46 * (v45 + v45) * v51;
      v131 = v131 - (-v12 / v27 + v28 * (v131 + v25 - v41)) / sqrt(*(double *)(a1 + 80) * (v45 * v45) + 1.0);
      v52 = __sincos_stret(v131);
      sinval = v52.__sinval;
      cosval = v52.__cosval;
    }
  }
  v54 = *(double *)(a1 + 104);
  v53 = *(double *)(a1 + 112);
  v118 = sinval * v53;
  v55 = sinval * v53 + v54 * cosval;
  v123 = v53;
  v56 = v53 * cosval - v54 * sinval;
  v57 = 0.0;
  if ((v20 & 0x3400) != 0)
  {
    if (a2 || fabs(*(double *)(a1 + 32)) > 0.01)
    {
      v58 = (v56 + v55) * (v56 - v55 + v56 - v55);
      v59 = (double *)(a1 + 272);
      v60 = 0.0;
      v61 = -3;
      v62 = 0.0;
      do
      {
        v60 = *v59 - (v60 - v58 * v62);
        v62 = *(v59 - 1) - (v62 - v58 * v60);
        v59 -= 2;
        v40 = __CFADD__(v61++, 1);
      }
      while (!v40);
      v25 = v56 * (v55 + v55) * v62;
    }
    v57 = (*(double *)(a1 + 160) + 1.0) * (v25 - *(double *)(a1 + 184));
  }
  v127 = v57;
  v122 = cosval;
  v119 = sinval;
  v63 = *(double *)(a1 + 72);
  v124 = *(double *)(a1 + 80);
  v64 = *(double *)(a1 + 64);
  v65 = sqrt(v56 * v63 * (v56 * v63) + v64 * v64);
  if (v65 == 0.0)
    v66 = *(double *)&qword_1ECDBC848;
  else
    v66 = v56;
  v117 = *(double *)&qword_1ECDBC848;
  if (v65 == 0.0)
    v67 = *(double *)&qword_1ECDBC848;
  else
    v67 = v65;
  v68 = atan2(v55 * v64 * *(double *)(a1 + 152) - v66 * *(double *)(a1 + 144), v55 * v64 * *(double *)(a1 + 144) + v66 * *(double *)(a1 + 152));
  v69 = 0.0;
  if ((v20 & 0x400) != 0)
    v69 = v12;
  v126 = v69;
  v70 = &_MergedGlobals_238;
  if (a2 && (v20 & 0x400) != 0)
    v126 = *(double *)(a1 + 40) * (v127 + (*(double *)(a1 + 160) + 1.0) * v131);
  v125 = 0.0;
  v129 = v55 + v66;
  v130 = v66 - v55;
  v71 = 0.0;
  if ((v20 & 0x100) != 0)
  {
    v72 = v129 * (v130 + v130);
    v73 = *(double *)(a1 + 432);
    v74 = (double *)(a1 + 424);
    v75 = 0.0;
    v76 = -2;
    do
    {
      v75 = *v74 - (v75 - v72 * v73);
      v73 = *(v74 - 1) - (v73 - v72 * v75);
      v74 -= 2;
      v40 = __CFADD__(v76++, 1);
    }
    while (!v40);
    v77 = fmod((v68 + *(double *)(a1 + 176) * (v131 + (v55 + v55) * v66 * v73 - *(double *)(a1 + 200)))/ *(double *)&qword_1ECDBC840, 360.0);
    v70 = &_MergedGlobals_238;
    v78 = v77 + 360.0;
    if (v77 >= -180.0)
      v78 = v77;
    if (v77 >= 180.0)
      v79 = v77 + -360.0;
    else
      v79 = v78;
    v80 = *(double *)(a1 + 8) + v79;
    v81 = v80 + 360.0;
    if (v80 >= -180.0)
      v81 = v80;
    if (v80 >= 180.0)
      v71 = v80 + -360.0;
    else
      v71 = v81;
  }
  if ((v20 & 0x80) != 0)
  {
    v82 = atan2(v55 * v63, v67 * *(double *)(a1 + 56));
    v70 = &_MergedGlobals_238;
    v125 = v82 / *(double *)&qword_1ECDBC840;
  }
  v120 = v71;
  v83 = 0.0;
  v84 = 0.0;
  if ((v20 & 0x200) != 0)
  {
    v85 = atan2(-v64, v63 * v66);
    v83 = 0.0;
    v70 = &_MergedGlobals_238;
    v84 = 0.0 - v85 / *(double *)&qword_1ECDBC840;
  }
  v86 = 0.0;
  v87 = 0.0;
  if ((v20 & 0x3000) != 0)
  {
    v88 = sqrt(v124 * (v55 * v55) + 1.0);
    v89 = v129 * (v130 + v130);
    v90 = (double *)(a1 + 384);
    v91 = 0.0;
    v92 = -3;
    v93 = 0.0;
    do
    {
      v91 = *v90 - (v91 - v89 * v93);
      v93 = *(v90 - 1) - (v93 - v89 * v91);
      v90 -= 2;
      v40 = __CFADD__(v92++, 1);
    }
    while (!v40);
    v94 = v127
        - (*(double *)(a1 + 168) + 1.0) * ((v55 + v55) * v66 * v93 - *(double *)(a1 + 192))
        + (*(double *)(a1 + 160) - *(double *)(a1 + 168)) * v131;
    v83 = 0.0;
    v87 = 0.0;
    if ((v20 & 0x1000) != 0)
      v87 = *(double *)(a1 + 40) * (v88 * (v123 * v55) - *(double *)(a1 + 120) * (v54 * v66) + -(v123 * v66) * v94);
    if ((v20 & 0x2000) != 0)
    {
      v95 = *(double *)(a1 + 120);
      v96 = (v54 + v55) * (v124 * (v55 - v54)) / (v88 + v95);
      v86 = v122 + v54 * (v94 * -v66 + v96 * v55) / v95;
      v83 = v122 - v55 * (v96 * v54 - v123 * v94) / v88;
    }
    else
    {
      v86 = 0.0;
    }
  }
  v97 = 0.0;
  if (v20 >= 0x4000)
  {
    v98 = v129 * (v130 + v130);
    v99 = (double *)(a1 + 480);
    v100 = 0.0;
    v101 = -3;
    v102 = 0.0;
    do
    {
      v100 = *v99 - (v100 - v98 * v102);
      v102 = *(v99 - 1) - (v102 - v98 * v100);
      v99 -= 2;
      v40 = __CFADD__(v101++, 1);
    }
    while (!v40);
    v103 = v66 * (v102 - v100);
    v128 = v86;
    if (v63 == 0.0 || v64 == 0.0)
    {
      v105 = v87;
      v106 = v12;
      v107 = v83;
      v108 = v84;
      v113 = *(double *)(a1 + 88);
      v112 = *(double *)(a1 + 96);
      v114 = v64 * v112 - v63 * v66 * v113;
      v111 = v64 * v113 + v63 * v66 * v112;
      v110 = v117 * v112;
      if (v114 == 0.0 && v111 < 0.0)
        v111 = -1.0;
      else
        v110 = v114;
    }
    else
    {
      v104 = v54;
      v105 = v87;
      v106 = v12;
      v107 = v83;
      v108 = v84;
      v109 = v119 * v104 + v123 * (1.0 - v122);
      if (v122 > 0.0)
        v109 = v119 * (v104 + v118 / (v122 + 1.0));
      v110 = v63 * v64 * v109;
      v111 = v64 * v64 + v123 * (v63 * v63) * v66;
    }
    v115 = *(double *)(a1 + 48);
    v97 = *(double *)(a1 + 208) * (v103 - *(double *)(a1 + 216)) + v115 * atan2(v110, v111);
    v70 = &_MergedGlobals_238;
    v84 = v108;
    v83 = v107;
    v12 = v106;
    v87 = v105;
    v86 = v128;
  }
  if (a3 && (v20 & 0x80) != 0)
    *a3 = v125;
  if (a4 && (v20 & 0x100) != 0)
    *a4 = v120;
  if (a5 && (v20 & 0x200) != 0)
    *a5 = v84;
  if (a6 && (v20 & 0x400) != 0)
    *a6 = v126;
  if (a7 && (v20 & 0x1000) != 0)
    *a7 = v87;
  if ((v20 & 0x2000) != 0)
  {
    if (a8)
      *a8 = v86;
    if (a10)
      *a10 = v83;
  }
  if (a11 && v20 >= 0x4000)
    *a11 = v97;
  if (!a2)
    return v131 / *((double *)v70 + 264);
  return v12;
}

double geod_geninverse(double *a1, double *a2, double *a3, double *a4, double *a5, unint64_t a6, long double *a7, double *a8, double a9, double a10, double a11, double a12)
{
  _BOOL4 v15;
  _BOOL4 v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  int v33;
  double v34;
  double v35;
  int v36;
  BOOL v37;
  int v38;
  double v39;
  int v40;
  int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  BOOL v65;
  int v66;
  double v67;
  double v68;
  double v69;
  double v70;
  int v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  float64_t v89;
  double v90;
  double v91;
  double v92;
  double v93;
  long double v94;
  double v95;
  double v96;
  double v97;
  uint64_t i;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  long double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  __double2 v120;
  double v121;
  _BOOL4 v122;
  _BOOL4 v123;
  unsigned int v124;
  uint64_t v125;
  int v126;
  _BOOL4 v127;
  unsigned int v128;
  double v129;
  double v130;
  double v131;
  int v132;
  BOOL v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  uint64_t v149;
  double v150;
  double v151;
  double v152;
  double v153;
  uint64_t v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  uint64_t j;
  double v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  int v167;
  double v168;
  int v169;
  double v170;
  __double2 v171;
  double v172;
  double v173;
  BOOL v174;
  double v175;
  double v176;
  double v177;
  double v178;
  double v179;
  double v180;
  double v181;
  double v182;
  double v183;
  double v184;
  double v185;
  double v186;
  double v187;
  double v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  double v194;
  double v195;
  double v196;
  double v197;
  double v198;
  double v199;
  double v200;
  double v201;
  double v202;
  double *v203;
  double v204;
  int v205;
  double v206;
  BOOL v207;
  double v208;
  double v209;
  double *v210;
  double v211;
  int v212;
  double v213;
  BOOL v214;
  double v215;
  double v216;
  double v217;
  __double2 v218;
  long double v219;
  long double v220;
  double v221;
  double v222;
  double v223;
  double v224;
  double v225;
  long double v226;
  double v227;
  double v228;
  long double v229;
  int v231;
  int v232;
  _BOOL4 v233;
  double *v234;
  double v235;
  double v236;
  double v237;
  double *v238;
  double v239;
  double v240;
  double v241;
  double v242;
  double v245;
  double v246;
  double v249;
  double v250;
  double v251;
  double v253;
  double v254;
  double v255;
  double v256;
  double v257;
  double v258;
  double v259;
  double v260;
  double v261;
  double v262;
  double v263;
  double v264;
  double v265;
  double v266;
  double v267;
  double v268;
  double v269;
  double v270;
  double v271;
  double v272;
  double v273;
  double v274;
  double v275;
  double v276;
  double v277;
  double v278;
  double __x;
  double __xa;
  double v281;
  double v282;
  double v283;
  double v284;
  double v285;
  double v286;
  double v287;
  double v288;
  double v289;
  double v290;
  double v291;
  double v292;
  long double v293;
  double v294;
  double v295;
  double v296;
  double v297[5];
  uint64_t v298;
  double v299[5];
  double v300;
  double v301[7];
  double v302[9];

  v302[7] = *(double *)MEMORY[0x1E0C80C00];
  v293 = 0.0;
  v294 = 0.0;
  v291 = 0.0;
  v292 = 0.0;
  v15 = ((unint64_t)a3 | (unint64_t)a4) != 0;
  v16 = (a6 | (unint64_t)a7) != 0;
  v17 = a10 + 360.0;
  if (a10 >= -180.0)
    v17 = a10;
  if (a10 >= 180.0)
    v18 = a10 + -360.0;
  else
    v18 = v17;
  v19 = a12 + 360.0;
  if (a12 >= -180.0)
    v19 = a12;
  if (a12 >= 180.0)
    v20 = a12 + -360.0;
  else
    v20 = v19;
  v302[0] = v20 - v18;
  v301[0] = v20 - v18 - v20;
  v299[0] = v20 - v18 - v301[0];
  v301[0] = v18 + v301[0];
  v299[0] = v299[0] - v20;
  v21 = v301[0] + v299[0];
  v22 = v302[0];
  if (v302[0] + -180.0 - (v301[0] + v299[0]) <= 0.0)
  {
    if (v302[0] + 180.0 - v21 <= 0.0)
      v22 = v302[0] + 360.0;
  }
  else
  {
    v22 = v302[0] + -360.0;
  }
  v23 = v22 - v21;
  v24 = vabdd_f64(v22, v21);
  v302[0] = v24;
  if (v24 >= 0.0625)
    v25 = v302[0];
  else
    v25 = v24 + -0.0625 + 0.0625;
  v302[0] = v25;
  if (v23 >= 0.0)
    v26 = v302[0];
  else
    v26 = -v25;
  v27 = fabs(a9);
  v302[0] = v27;
  if (v27 >= 0.0625)
    v28 = v302[0];
  else
    v28 = v27 + -0.0625 + 0.0625;
  v302[0] = v28;
  if (a9 >= 0.0)
    v29 = v302[0];
  else
    v29 = -v28;
  v30 = fabs(a11);
  v302[0] = v30;
  if (v30 >= 0.0625)
    v31 = v302[0];
  else
    v31 = v30 + -0.0625 + 0.0625;
  v302[0] = v31;
  if (a11 >= 0.0)
    v32 = v302[0];
  else
    v32 = -v31;
  if (v26 >= 0.0)
    v33 = 1;
  else
    v33 = -1;
  v34 = fabs(v28);
  v35 = fabs(v31);
  if (v26 < 0.0)
    v36 = 1;
  else
    v36 = -1;
  v250 = v35;
  v251 = v34;
  v37 = v34 < v35;
  if (v34 >= v35)
    v38 = 1;
  else
    v38 = -1;
  if (v34 >= v35)
    v39 = v32;
  else
    v39 = v29;
  if (v37)
  {
    v29 = v32;
    v40 = v36;
  }
  else
  {
    v40 = v33;
  }
  if (v29 < 0.0)
    v41 = 1;
  else
    v41 = -1;
  v42 = v29 * (double)v41;
  v43 = v39 * (double)v41;
  v282 = *(double *)&qword_1ECDBC840;
  v44 = *(double *)&qword_1ECDBC840 * v42;
  v45 = a1[2];
  v46 = v45 * sin(*(double *)&qword_1ECDBC840 * v42);
  v47 = &_MergedGlobals_238;
  if (v42 == -90.0)
    v48 = *(double *)&qword_1ECDBC848;
  else
    v48 = cos(v44);
  v49 = sqrt(v48 * v48 + v46 * v46);
  v289 = v48 / v49;
  v290 = v46 / v49;
  v249 = v45;
  v50 = v45 * sin(v282 * v43);
  if (fabs(v43) == 90.0)
    v51 = *(double *)&qword_1ECDBC848;
  else
    v51 = cos(v282 * v43);
  v52 = v26 * (double)v33;
  v53 = sqrt(v51 * v51 + v50 * v50);
  v54 = v50 / v53;
  v275 = -v290;
  if (v289 >= -v290)
  {
    if (fabs(v54) == -v290)
      v281 = v289;
    else
      v281 = v51 / v53;
  }
  else
  {
    v281 = v51 / v53;
    if (v51 / v53 == v289)
    {
      if (v54 >= 0.0)
        v54 = -v290;
      else
        v54 = v290;
    }
  }
  v55 = a1[4];
  v56 = 1.0;
  v260 = sqrt(v55 * (v290 * v290) + 1.0);
  v261 = v55;
  v257 = sqrt(v55 * (v54 * v54) + 1.0);
  __x = v52 * v282;
  v57 = sin(v52 * v282);
  v58 = 0.0;
  v272 = v57;
  if (v52 == 180.0)
    v59 = 0.0;
  else
    v59 = v57;
  v288 = v54;
  if ((v42 == -90.0 || v59 == 0.0)
    && ((v283 = cos(__x),
         v60 = atan2(fmax(v281 * v275 + v283 * v289 * v54, 0.0), v290 * v54 + v283 * v289 * v281),
         Lengths((uint64_t)a1, &v292, &v291, v299, v16, &v294, &v293, (uint64_t)v302, a1[5], v60, v290, v283 * v289, v260, v54, v281, v257, v289, v281, (uint64_t)v301),
         v60 < 1.0)
     || (v58 = 1.0, v291 >= 0.0)))
  {
    v71 = 0;
    v76 = a1[6];
    v273 = v76 * v292;
    v276 = v291 * v76;
    v268 = 0.0;
    v74 = v283;
    v73 = v60 / v282;
    v75 = v289;
    v72 = 0.0;
  }
  else if (v290 == 0.0
         && ((v61 = a1[1], v61 <= 0.0) || __x <= *(double *)&qword_1ECDBC858 - v61 * *(double *)&qword_1ECDBC858))
  {
    v68 = *a1;
    v69 = a1[6];
    v70 = sin(__x / v249);
    if (v16)
    {
      v293 = cos(__x / v249);
      v294 = v293;
    }
    v268 = __x / v249;
    v273 = __x * v68;
    v276 = v70 * v69;
    v59 = 1.0;
    v71 = 1;
    v56 = 0.0;
    v72 = 1.0;
    v73 = v52 / v249;
    v74 = 0.0;
    v75 = v289;
  }
  else
  {
    v62 = -(v290 * v281 - v54 * v289);
    v63 = v289 * v54;
    v299[0] = v289 * v54;
    v297[0] = v290 * v281;
    v64 = v289 * v54 + v290 * v281;
    v65 = v290 * v54 + v281 * v289 >= 0.0 && v62 < 0.5;
    v258 = v58;
    v284 = v290 * v54;
    if (v65)
    {
      v67 = __x;
      if (*(double *)&qword_1ECDBC858 / 6.0 >= __x)
      {
        v67 = __x / (v249 * (v260 + v257) * 0.5);
        v272 = sin(v67);
        v66 = 1;
      }
      else
      {
        v66 = 0;
      }
    }
    else
    {
      v66 = 0;
      v67 = __x;
    }
    v77 = cos(v67);
    v78 = v281 * v272;
    v79 = v290 * v281 * (v272 * v272);
    v80 = v289 * v54 + v290 * v281;
    v81 = v64 - v79 / (1.0 - v77);
    v82 = v79 / (v77 + 1.0) - (v290 * v281 - v54 * v289);
    if (v77 >= 0.0)
      v83 = v82;
    else
      v83 = v81;
    v84 = sqrt(v83 * v83 + v78 * v78);
    v85 = v289 * v281 * v77 + v290 * v54;
    if (v66 && v84 < a1[8])
    {
      v75 = v289;
      v86 = v62 - v63 * (v272 * v272) / (v77 + 1.0);
      v87 = sqrt(v86 * v86 + v289 * v272 * (v289 * v272));
      v265 = v289 * v272 / v87;
      v56 = v86 / v87;
      v88 = atan2(v84, v85);
    }
    else
    {
      v88 = -1.0;
      v265 = 0.0;
      if (v85 >= 0.0
        || (v89 = a1[5], v90 = fabs(v89), v90 > 0.1)
        || (v91 = *(double *)&qword_1ECDBC858, v84 >= v289 * v289 * (v90 * 6.0 * *(double *)&qword_1ECDBC858)))
      {
        v56 = 0.0;
        v75 = v289;
      }
      else
      {
        v299[0] = 0.0;
        v92 = a1[1];
        if (v92 >= 0.0)
        {
          v96 = v290 * v290 * v261 / (v290 * v290 * v261 + (sqrt(v290 * v290 * v261 + 1.0) + 1.0) * 2.0);
          v97 = 0.0;
          for (i = 14; i != 8; --i)
            v97 = a1[i] + v96 * v97;
          v75 = v289;
          v99 = *(double *)&qword_1ECDBC858 * (v289 * v92 * v97);
          v299[0] = (__x - *(double *)&qword_1ECDBC858) / v99;
          v100 = v64 / (v289 * v99);
        }
        else
        {
          v269 = a1[1];
          v93 = v54;
          v75 = v289;
          v94 = atan2(v64, -(v284 - v281 * v289));
          v296 = 0.0;
          v297[0] = 0.0;
          Lengths((uint64_t)a1, &v295, v297, &v296, 0, &v295, &v295, (uint64_t)v302, v89, v91 + v94, v290, -v75, v260, v93, v281, v257, v75, v281, (uint64_t)v301);
          v299[0] = v297[0] / (v91 * (v289 * v281 * v296)) + -1.0;
          if (v299[0] >= -0.01)
          {
            v92 = v269;
            v95 = v91 * -(v269 * (v289 * v289));
            v80 = v64;
          }
          else
          {
            v95 = v64 / v299[0];
            v80 = v64;
            v92 = v269;
          }
          v99 = v95 / v289;
          v100 = (__x - v91) / (v95 / v289);
          v88 = -1.0;
        }
        if (v100 <= -*(double *)&qword_1ECDBC870 || v299[0] <= -1.0 - *(double *)&qword_1ECDBC878)
        {
          v102 = v100 * v100;
          v103 = (v100 * v100 + v299[0] * v299[0] + -1.0) / 6.0;
          if (v100 * v100 != 0.0 || (v104 = 0.0, v103 > 0.0))
          {
            v270 = v92;
            v105 = v80;
            v106 = v102 * (v299[0] * v299[0]) * 0.25;
            v107 = v103 * (v103 * v103);
            v108 = v106 * (v106 + v107 * 2.0);
            if (v108 >= 0.0)
            {
              v111 = v106 + v107;
              v112 = sqrt(v108);
              if (v111 < 0.0)
                v112 = -v112;
              v113 = v111 + v112;
              v114 = pow(fabs(v111 + v112), 0.333333333);
              if (v113 < 0.0)
                v114 = -v114;
              v115 = v103 * v103 / v114;
              if (v114 == 0.0)
                v115 = 0.0;
              v110 = v103 + v114 + v115;
            }
            else
            {
              v109 = atan2(sqrt(-v108), -(v106 + v107));
              v110 = v103 + (v103 + v103) * cos(v109 / 3.0);
            }
            v116 = sqrt(v102 + v110 * v110);
            if (v110 >= 0.0)
              v117 = v110 + v116;
            else
              v117 = v102 / (v116 - v110);
            v80 = v105;
            v92 = v270;
            v104 = v117
                 / ((v117 - v102) / (v116 + v116)
                  + sqrt(v117 + (v117 - v102) / (v116 + v116) * ((v117 - v102) / (v116 + v116))));
          }
          v118 = v80;
          if (v92 >= 0.0)
          {
            v119 = -(v299[0] * v104);
            v104 = v104 + 1.0;
          }
          else
          {
            v119 = -(v100 * (v104 + 1.0));
          }
          v120 = __sincos_stret(v99 * (v119 / v104));
          v78 = v281 * v120.__sinval;
          v83 = v118 - v290 * v281 * (v120.__sinval * v120.__sinval) / (v120.__cosval + 1.0);
          v88 = -1.0;
        }
        else if (v92 >= 0.0)
        {
          if (v299[0] >= -1.0)
            v78 = -v299[0];
          else
            v78 = 1.0;
          v83 = -sqrt(1.0 - v78 * v78);
        }
        else
        {
          v101 = 0.0;
          if (v299[0] <= -*(double *)&qword_1ECDBC870)
            v101 = -1.0;
          if (v299[0] >= v101)
            v83 = v299[0];
          else
            v83 = v101;
          v78 = sqrt(1.0 - v83 * v83);
        }
        v56 = 0.0;
      }
    }
    if (v78 <= 0.0)
    {
      v74 = 0.0;
      v59 = 1.0;
    }
    else
    {
      v121 = sqrt(v83 * v83 + v78 * v78);
      v59 = v78 / v121;
      v74 = v83 / v121;
    }
    if (v88 >= 0.0)
    {
      v286 = v74;
      v181 = (v260 + v257) * 0.5;
      v182 = a1[6];
      v278 = v88 * v182;
      v183 = v181 * v181 * v182;
      v184 = v88;
      v185 = v88 / v181;
      v186 = sin(v88 / v181);
      if (v16)
      {
        v293 = cos(v185);
        v294 = v293;
      }
      v273 = v181 * v278;
      v276 = v186 * v183;
      v73 = v184 / v282;
      v71 = 1;
      v268 = __x / (v249 * v181);
      v74 = v286;
      v72 = v265;
    }
    else
    {
      v72 = 0.0;
      if (byte_1ECDBC82C == 1)
      {
        v231 = v41;
        v232 = v40;
        v233 = v15;
        v234 = a2;
        v238 = a8;
        v122 = 0;
        v123 = 0;
        v124 = 0;
        v125 = qword_1ECDBC848;
        v126 = byte_1ECDBC830;
        v241 = -*(double *)&qword_1ECDBC848;
        v127 = fabs(v288) != v275 || v281 != v75;
        if (byte_1ECDBC830)
          v128 = 20;
        else
          v128 = 0;
        v235 = unk_1ECDBC860 * 16.0;
        v236 = *(double *)&qword_1ECDBC858;
        if (v75 >= v275)
          v129 = (v290 - v288) * (v290 + v288);
        else
          v129 = (v281 - v75) * (v75 + v281);
        v237 = v129;
        v239 = *(double *)&qword_1ECDBC868;
        v240 = unk_1ECDBC860;
        v130 = -1.0;
        v245 = *(double *)&qword_1ECDBC848;
        v246 = 1.0;
        while (1)
        {
          v131 = v59;
          if (v124 < 0x14)
            v132 = v126;
          else
            v132 = 0;
          v133 = v74 == 0.0 && v290 == 0.0;
          v297[0] = 0.0;
          v134 = v241;
          if (!v133)
            v134 = v74;
          v135 = v75 * v134;
          v136 = v135 * v135;
          v285 = v74;
          v274 = v130;
          v277 = *(double *)&v125;
          if (v127)
          {
            v137 = v281;
            v138 = sqrt(v237 + v136) / v281;
          }
          else
          {
            v138 = fabs(v134);
            v137 = v281;
          }
          v258 = v138;
          v259 = v75 * v131;
          v139 = sqrt(v290 * v131 * (v290 * v131) + v134 * v134);
          v140 = sqrt(v136 + v290 * v290);
          v141 = v290 / v140;
          v142 = v135 / v140;
          v143 = v137 * v138;
          v144 = sqrt(v143 * v143 + v288 * v288);
          v145 = v288 / v144;
          v146 = v137 * v138 / v144;
          v254 = v142 * (v288 / v144) - v141 * v146;
          v256 = v131;
          v147 = v261 * (v139 * v139) / (v261 * (v139 * v139) + (sqrt(v261 * (v139 * v139) + 1.0) + 1.0) * 2.0);
          C3f((uint64_t)a1, (uint64_t)v299, v147);
          v148 = v146;
          v149 = 0;
          v150 = (v145 + v146) * (v146 - v145 + v146 - v145);
          v151 = 0.0;
          v152 = v300;
          v153 = v300;
          do
          {
            v151 = v299[v149 + 4] - (v151 - v150 * v153);
            v153 = v299[v149 + 3] - (v153 - v150 * v151);
            v149 -= 2;
          }
          while ((_DWORD)(v149 * 8) != -32);
          v154 = 0;
          v263 = v148;
          v266 = v145;
          v155 = v141 * v145 + v142 * v148;
          v156 = (v141 + v142) * (v142 - v141 + v142 - v141);
          v157 = 0.0;
          do
          {
            v157 = v299[v154 + 4] - (v157 - v156 * v152);
            v152 = v299[v154 + 3] - (v152 - v156 * v157);
            v154 -= 2;
          }
          while ((_DWORD)(v154 * 8) != -32);
          v271 = v142;
          v242 = v141;
          v158 = v141 + v141;
          v253 = a1[1];
          v159 = 0.0;
          for (j = 14; j != 8; --j)
            v159 = a1[j] + v147 * v159;
          v161 = 0.0;
          v162 = atan2(fmax(v254, 0.0), v155);
          v255 = v162;
          if (v132)
          {
            v161 = v249 * -2.0 * v260 / v290;
            if (v258 != 0.0)
            {
              Lengths((uint64_t)a1, &v296, v297, &v296, 0, &v296, &v296, (uint64_t)v302, v147, v162, v242, v271, v260, v266, v263, v257, v289, v281, (uint64_t)v301);
              v162 = v255;
              v161 = v249 / v143 * v297[0];
            }
          }
          v163 = v259 * -(v253 * v159) * (v263 * (v266 + v266) * v153 - v271 * v158 * v152 + v162);
          v164 = atan2(fmax(v135 * (v288 * v259) - v290 * v259 * v143, 0.0), v290 * v259 * (v288 * v259) + v135 * v143);
          if (v122)
            break;
          v165 = v163 + v164 - __x;
          v166 = fabs(v165);
          if (v123)
            v167 = 8;
          else
            v167 = 2;
          v75 = v289;
          v74 = v285;
          v168 = v256;
          if (v166 < v240 * (double)v167)
          {
            v180 = v281;
            if (v281 == v289)
              v72 = v256;
            else
              v72 = v259 / v281;
LABEL_210:
            a8 = v238;
            a2 = v234;
            v15 = v233;
            v41 = v231;
            v40 = v232;
            v47 = &_MergedGlobals_238;
            goto LABEL_211;
          }
          if (v165 <= 0.0 || v124 <= v128 && v285 / v256 <= v274 / v277)
          {
            if (v124 > v128 || v285 / v256 < v246 / v245)
            {
              v245 = v256;
              v246 = v285;
            }
          }
          else
          {
            v274 = v285;
            v277 = v256;
          }
          if (v161 > 0.0)
            v169 = v132;
          else
            v169 = 0;
          if (v169 == 1
            && ((v170 = -v165 / v161,
                 v171 = __sincos_stret(v170),
                 v172 = v285 * v171.__sinval + v256 * v171.__cosval,
                 v173 = fabs(v170),
                 v172 > 0.0)
              ? (v174 = v173 < v236)
              : (v174 = 0),
                v174))
          {
            v122 = 0;
            v178 = v285 * v171.__cosval - v256 * v171.__sinval;
            v179 = sqrt(v178 * v178 + v172 * v172);
            v59 = v172 / v179;
            v74 = v178 / v179;
            v123 = v166 <= v235;
            v130 = v274;
            *(double *)&v125 = v277;
          }
          else
          {
            v130 = v274;
            *(double *)&v125 = v277;
            v175 = (v245 + v277) * 0.5;
            v176 = (v246 + v274) * 0.5;
            v177 = sqrt(v176 * v176 + v175 * v175);
            v59 = v175 / v177;
            v74 = v176 / v177;
            v122 = v246 - v176 / v177 + vabdd_f64(v245, v175 / v177) < v239 || v74 - v274 + vabdd_f64(v59, v277) < v239;
            v123 = 0;
          }
          if (++v124 == 83)
          {
            v180 = v281;
            if (v281 == v289)
              v72 = v256;
            else
              v72 = v259 / v281;
            v168 = v59;
            goto LABEL_210;
          }
        }
        v180 = v281;
        v75 = v289;
        v168 = v256;
        if (v281 == v289)
          v72 = v256;
        else
          v72 = v259 / v281;
        a8 = v238;
        a2 = v234;
        v15 = v233;
        v41 = v231;
        v40 = v232;
        v47 = &_MergedGlobals_238;
        v74 = v285;
LABEL_211:
        v187 = v242;
        v189 = v266;
        v188 = v271;
        v190 = v263;
      }
      else
      {
        v255 = v88;
        v168 = v59;
        v163 = 0.0;
        v187 = 0.0;
        v188 = 0.0;
        v189 = 0.0;
        v190 = 0.0;
        v147 = 0.0;
        v180 = v281;
      }
      Lengths((uint64_t)a1, &v292, &v291, v297, v16, &v294, &v293, (uint64_t)v302, v147, v255, v187, v188, v260, v189, v190, v257, v75, v180, (uint64_t)v301);
      v191 = a1[6];
      v276 = v191 * v291;
      v273 = v191 * v292;
      v268 = __x - v163;
      v71 = 1;
      v59 = v168;
      v56 = v258;
      v73 = v255 / v282;
    }
  }
  v192 = 0.0;
  if (a8)
  {
    v287 = v74;
    v193 = sqrt(v290 * v59 * (v290 * v59) + v74 * v74);
    v194 = 0.0;
    if (v193 != 0.0)
    {
      v195 = v75 * v59;
      if (v75 * v59 != 0.0)
      {
        __xa = v73;
        v267 = v72;
        v196 = v281 * v56;
        v197 = v261 * (v193 * v193) / (v261 * (v193 * v193) + (sqrt(v261 * (v193 * v193) + 1.0) + 1.0) * 2.0);
        v262 = *a1 * *a1;
        v264 = a1[3];
        v198 = sqrt(v75 * v287 * (v75 * v287) + v290 * v290);
        v199 = v290 / v198;
        v200 = v75 * v287 / v198;
        v201 = sqrt(v196 * v196 + v288 * v288);
        C4f((uint64_t)a1, (uint64_t)v297, v197);
        v202 = (v199 + v200) * (v200 - v199 + v200 - v199);
        v203 = (double *)&v298;
        v204 = 0.0;
        v205 = -3;
        v206 = 0.0;
        do
        {
          v204 = *v203 - (v204 - v202 * v206);
          v206 = *(v203 - 1) - (v206 - v202 * v204);
          v203 -= 2;
          v207 = __CFADD__(v205++, 1);
        }
        while (!v207);
        v208 = v196 / v201;
        v209 = (v288 / v201 + v196 / v201) * (v196 / v201 - v288 / v201 + v196 / v201 - v288 / v201);
        v210 = (double *)&v298;
        v211 = 0.0;
        v212 = -3;
        v213 = 0.0;
        do
        {
          v211 = *v210 - (v211 - v209 * v213);
          v213 = *(v210 - 1) - (v213 - v209 * v211);
          v210 -= 2;
          v207 = __CFADD__(v212++, 1);
        }
        while (!v207);
        v72 = v267;
        v194 = v264 * (v195 * (v193 * v262)) * (v208 * (v213 - v211) - v200 * (v206 - v204));
        v75 = v289;
        v73 = __xa;
      }
    }
    if (v71 && (v268 < *(double *)&qword_1ECDBC858 * 0.75 ? (v214 = v288 - v290 < 1.75) : (v214 = 0), v214))
    {
      v218 = __sincos_stret(v268);
      v219 = atan2(((v75 + 1.0) * v288 + v290 * (v281 + 1.0)) * v218.__sinval, ((v75 + 1.0) * (v281 + 1.0) + v290 * v288) * (v218.__cosval + 1.0));
      v217 = v219 + v219;
      v74 = v287;
    }
    else
    {
      v74 = v287;
      v215 = v72 * v287 - v56 * v59;
      v216 = v59 * v72 + v56 * v287;
      if (v215 == 0.0 && v216 < 0.0)
      {
        v215 = v287 * *((double *)v47 + 265);
        v216 = -1.0;
      }
      v217 = atan2(v215, v216);
    }
    v192 = (v194 + a1[7] * v217) * (double)(v38 * v40 * v41) + 0.0;
  }
  if (v251 >= v250)
  {
    v221 = v74;
    v222 = v59;
    v74 = v56;
    v59 = v72;
  }
  else
  {
    if (v16)
    {
      v220 = v293;
      v293 = v294;
      v294 = v220;
    }
    v221 = v56;
    v222 = v72;
  }
  v223 = 0.0;
  v224 = 0.0;
  if (v15)
  {
    v225 = (double)(v41 * v38);
    v226 = v74 * v225;
    v227 = v73;
    v228 = (double)(v38 * v40);
    v224 = 0.0 - atan2(-(v222 * v228), v221 * v225) / v282;
    v229 = -(v59 * v228);
    v73 = v227;
    v223 = 0.0 - atan2(v229, v226) / v282;
  }
  if (a2)
    *a2 = v273 + 0.0;
  if (v15)
  {
    if (a3)
      *a3 = v224;
    if (a4)
      *a4 = v223;
  }
  if (a5)
    *a5 = v276 + 0.0;
  if (v16)
  {
    if (a6)
      *(double *)a6 = v294;
    if (a7)
      *a7 = v293;
  }
  if (a8)
    *a8 = v192;
  return v73;
}

void Lengths(uint64_t a1, double *a2, double *a3, double *a4, int a5, double *a6, double *a7, uint64_t a8, float64_t a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, uint64_t a19)
{
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  float64_t v56;
  double v57;
  float64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;

  C1f(a8, a9);
  C2f(a19, a9);
  v35 = 0;
  v36 = 1.0 - a9;
  v37 = (a14 + a15) * (a15 - a14 + a15 - a14);
  v38 = 0.0;
  v39 = 0.0;
  do
  {
    v38 = *(double *)(a8 + v35 + 48) - (v38 - v37 * v39);
    v39 = *(double *)(a8 + v35 + 40) - (v39 - v37 * v38);
    v35 -= 16;
  }
  while ((_DWORD)v35 != -48);
  v40 = 0;
  v41 = (a11 + a12) * (a12 - a11 + a12 - a11);
  v42 = 0.0;
  v43 = 0.0;
  do
  {
    v42 = *(double *)(a8 + v40 + 48) - (v42 - v41 * v43);
    v43 = *(double *)(a8 + v40 + 40) - (v43 - v41 * v42);
    v40 -= 16;
  }
  while ((_DWORD)v40 != -48);
  v44 = 0;
  v45 = (a14 + a14) * a15;
  v46 = (a11 + a11) * a12;
  v47 = v46 * v43;
  v48 = 0.0;
  v49 = 0.0;
  do
  {
    v48 = *(double *)(a19 + v44 + 48) - (v48 - v37 * v49);
    v49 = *(double *)(a19 + v44 + 40) - (v49 - v37 * v48);
    v44 -= 16;
  }
  while ((_DWORD)v44 != -48);
  v50 = 0;
  v51 = (a9 * a9 * (a9 * a9 * (a9 * a9 + 4.0) + 64.0) * 0.00390625 + a9) / v36;
  v52 = v45 * v39;
  v53 = v51 + 1.0;
  v54 = 0.0;
  v55 = 0.0;
  do
  {
    v54 = *(double *)(a19 + v50 + 48) - (v54 - v41 * v55);
    v55 = *(double *)(a19 + v50 + 40) - (v55 - v41 * v54);
    v50 -= 16;
  }
  while ((_DWORD)v50 != -48);
  v56 = a9 * a9 * (a9 * a9 * (a9 * a9 * 25.0 + 36.0) + 64.0) * 0.00390625 * v36 - a9;
  v57 = v53 * (v52 - v47);
  v58 = (v56 + 1.0) * (v45 * v49 - v46 * v55);
  v59 = v51 - v56;
  v60 = v57 - v58 + v59 * a10;
  v61 = -(a11 * a15) * a13 + a16 * (a12 * a14) + -(a12 * a15) * v60;
  v62 = v57 + v53 * a10;
  if (a5)
  {
    v63 = a11 * a14 + a12 * a15;
    v64 = (a17 + a18) * ((a17 - a18) * *(double *)(a1 + 32)) / (a13 + a16);
    *a2 = v62;
    *a3 = v61;
    *a4 = v59;
    *a6 = v63 + (v64 * a14 - v60 * a15) * a11 / a13;
    *a7 = v63 - (v64 * a11 - v60 * a12) * a14 / a16;
  }
  else
  {
    *a2 = v62;
    *a3 = v61;
    *a4 = v59;
  }
}

void sub_1896B4C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandCountInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int *v13;
  GEOPDSearchBrandRelationship *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  int v65;
  char v66;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFDFFFALL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (((v12 | v8) & 1) != 0)
    v13 = 0;
  else
    v13 = a3;
  LODWORD(v14) = v12;
  v66 = (v13 == 0) | v12;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_104;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_104:
      if ((v14 & 1) != 0)
      {
        v60 = 1;
        goto LABEL_116;
      }
      if (v13)
      {
        while (1)
        {
          v61 = *v13++;
          v62 = 8;
          switch(v61)
          {
            case 0:
              goto LABEL_117;
            case 1:
              goto LABEL_111;
            case 2:
              v62 = 64;
              goto LABEL_111;
            case 4:
              v62 = 32;
              goto LABEL_111;
            case 7:
              v62 = 16;
LABEL_111:
              *(_BYTE *)(a1 + 84) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_117;
    }
    v28 = v20 >> 3;
    v29 = (char)v14;
    if ((v66 & 1) == 0)
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 84) & 8) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_46;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_113;
        v59 = 16 * *(_BYTE *)(a1 + 84);
        goto LABEL_101;
      case 2:
        if (!v29)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_113:
            v60 = 0;
            goto LABEL_115;
          }
          v59 = 2 * *(_BYTE *)(a1 + 84);
LABEL_101:
          v7 += v59 >> 7;
        }
        else
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
LABEL_46:
          v37 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          --v7;
        }
        goto LABEL_102;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 84) |= 4u;
        while (2)
        {
          v41 = *v15;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v25 = v39++ >= 9;
              if (v25)
              {
                v40 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v40 = 0;
LABEL_87:
        v58 = 64;
        goto LABEL_96;
      case 4:
        if (!v29 || (*(_BYTE *)(a1 + 84) & 0x20) != 0)
          goto LABEL_82;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v65 = (int)v14;
        v14 = objc_alloc_init(GEOPDSearchCountryOccurrence);
        if (!GEOPDSearchCountryOccurrenceReadAllFrom((uint64_t)v14, (void *)v3))
          goto LABEL_114;
        PBReaderRecallMark();
        -[GEOPDSearchBrandCountInfo _addNoFlagsCountryOccurrence:](a1, v14);
        goto LABEL_81;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v45 = 0;
        v46 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 84) |= 1u;
        while (2)
        {
          v47 = *v15;
          v48 = *(_QWORD *)(v3 + v47);
          v49 = v48 + 1;
          if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              v25 = v46++ >= 9;
              if (v25)
              {
                v40 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v40 = 0;
LABEL_91:
        v58 = 48;
        goto LABEL_96;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v51 = 0;
        v52 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 84) |= 2u;
        while (2)
        {
          v53 = *v15;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v40 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              v25 = v52++ >= 9;
              if (v25)
              {
                v40 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v40 = 0;
LABEL_95:
        v58 = 56;
LABEL_96:
        *(_QWORD *)(a1 + v58) = v40;
        goto LABEL_103;
      case 7:
        if (!v29 || (*(_BYTE *)(a1 + 84) & 0x10) != 0)
        {
LABEL_82:
          v57 = PBReaderSkipValueWithTag();
          v16 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
LABEL_112:
            v60 = 0;
            goto LABEL_116;
          }
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v65 = (int)v14;
        v14 = objc_alloc_init(GEOPDSearchBrandRelationship);
        if (GEOPDSearchBrandRelationshipReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchBrandCountInfo _addNoFlagsBrandRelationship:](a1, v14);
LABEL_81:

          LODWORD(v14) = v65;
LABEL_102:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_103:
          if (!(v14 & 1 | (v7 != 0)))
            goto LABEL_104;
          continue;
        }
LABEL_114:

        v60 = 0;
        LOBYTE(v14) = v65;
LABEL_115:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_116:
        *(_BYTE *)(a1 + 84) |= 8u;
        *(_BYTE *)(a1 + 84) |= 0x40u;
        *(_BYTE *)(a1 + 84) |= 0x20u;
        *(_BYTE *)(a1 + 84) |= 0x10u;
        if ((v60 & 1) != 0)
        {
LABEL_117:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_118;
        }
        else
        {
          v3 = 0;
          if ((v14 & 1) != 0)
          {
LABEL_118:
            v63 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v36 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_112;
        goto LABEL_103;
    }
  }
}

void sub_1896B6D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B6F48(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandCountInfoReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchBrandCountInfoReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 72) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 76) = objc_msgSend(v6, "length");
      Specified = GEOPDSearchBrandCountInfoReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchBrandCountInfoReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1896B70C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandRelationshipIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BOOL8 v33;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_50;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_46;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v28 = 0;
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          v33 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
          break;
        v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
        *(_QWORD *)&a1[v29] = v31;
        if (v32 < 0)
        {
          v22 = v28++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_1896B76BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B7B8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandRelationshipReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = objc_claimAutoreleasedReturnValue();
            v19 = *(void **)(a1 + 32);
            *(_QWORD *)(a1 + 32) = v18;

            continue;
          case 2u:
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            while (1)
            {
              v23 = *v4;
              v24 = *(_QWORD *)&v3[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
                break;
              v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
              *(_QWORD *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0)
                goto LABEL_45;
              v20 += 7;
              v15 = v21++ >= 9;
              if (v15)
              {
                v22 = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6])
              v22 = 0;
LABEL_47:
            v39 = 16;
            goto LABEL_56;
          case 3u:
            v27 = 0;
            v28 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 4u;
            while (2)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
                *(_QWORD *)&v3[v29] = v31;
                v22 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  v15 = v28++ >= 9;
                  if (v15)
                  {
                    v22 = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v22 = 0;
LABEL_51:
            v39 = 24;
            goto LABEL_56;
          case 4u:
            v33 = 0;
            v34 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_59;
            continue;
        }
        while (1)
        {
          v35 = *v4;
          v36 = *(_QWORD *)&v3[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
            break;
          v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
          *(_QWORD *)&v3[v35] = v37;
          v22 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0)
            goto LABEL_53;
          v33 += 7;
          v15 = v34++ >= 9;
          if (v15)
          {
            v22 = 0;
            goto LABEL_55;
          }
        }
        v3[*v6] = 1;
LABEL_53:
        if (v3[*v6])
          v22 = 0;
LABEL_55:
        v39 = 8;
LABEL_56:
        *(_QWORD *)(a1 + v39) = v22;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_1896B8670(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandTriggerReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = *v6;
            v17 = v3[v16];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = *v6;
        v17 = v3[v16];
        if (v3[v16])
          v10 = 0;
LABEL_15:
        if (v17 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v21 = *v4;
          v22 = *(_QWORD *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v23 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[v16] = 1;
            v23 = 0;
          }
          *(_QWORD *)(a1 + 8) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_1896B8D38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandTriggerInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  unint64_t v29;
  _BOOL4 v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  GEOPDSearchBrandTrigger *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  int v54;
  int v55;
  char v56;
  void *v57;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v59 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_85;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      v24 = v23 + 1;
      if (v23 == -1 || v24 > *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v26 = v20++ >= 9;
      if (v26)
      {
        v21 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        v53 = 1;
        goto LABEL_96;
      }
      if (!v14)
        goto LABEL_97;
      while (1)
      {
        v55 = *v14++;
        v54 = v55;
        if (v55 == 1)
          break;
        if (v54 == 2)
        {
          v56 = 8;
LABEL_94:
          *(_BYTE *)(a1 + 60) |= v56;
        }
        else if (!v54)
        {
          goto LABEL_97;
        }
      }
      v56 = 4;
      goto LABEL_94;
    }
    v29 = v21 >> 3;
    v30 = v13;
    if (!v59)
    {
      v31 = v14;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30)
          goto LABEL_67;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v35 = objc_claimAutoreleasedReturnValue();
          v36 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v35;

          --v8;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_95;
        v8 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        goto LABEL_78;
      case 2:
        if (!v30 || (*(_BYTE *)(a1 + 60) & 8) != 0)
          goto LABEL_67;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_95;
        v37 = objc_alloc_init(GEOPDSearchBrandTrigger);
        if (GEOPDSearchBrandTriggerReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchBrandTriggerInfo _addNoFlagsTrigger:](a1, v37);

          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_78:
          if (v8)
            v52 = 1;
          else
            v52 = v13;
          if ((v52 & 1) == 0)
            goto LABEL_85;
          continue;
        }

        v53 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v53 & 1) != 0)
        {
LABEL_97:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_98;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_98:
            v57 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_67;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v41 = *v16;
          v42 = *(_QWORD *)(v3 + v41);
          v43 = v42 + 1;
          if (v42 == -1 || v43 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v42);
            *(_QWORD *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              v26 = v39++ >= 9;
              if (v26)
              {
                v40 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v40 = 0;
LABEL_72:
        v51 = 24;
        goto LABEL_77;
      case 4:
        if ((v7 & 1) != 0)
        {
          v45 = 0;
          v46 = 0;
          v40 = 0;
          *(_BYTE *)(a1 + 60) |= 2u;
          while (1)
          {
            v47 = *v16;
            v48 = *(_QWORD *)(v3 + v47);
            v49 = v48 + 1;
            if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v6))
              break;
            v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v48);
            *(_QWORD *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if ((v50 & 0x80) == 0)
              goto LABEL_74;
            v45 += 7;
            v26 = v46++ >= 9;
            if (v26)
            {
              v40 = 0;
              goto LABEL_76;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_74:
          if (*(_BYTE *)(v3 + *v17))
            v40 = 0;
LABEL_76:
          v51 = 32;
LABEL_77:
          *(_QWORD *)(a1 + v51) = v40;
        }
        else
        {
LABEL_67:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_95:
            v53 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_78;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_95;
        goto LABEL_78;
    }
  }
}

void sub_1896B99B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B9B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBrandTriggerInfoReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchBrandTriggerInfoReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 52) = objc_msgSend(v6, "length");
      Specified = GEOPDSearchBrandTriggerInfoReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchBrandTriggerInfoReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1896B9CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896B9F4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BA274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchCountryOccurrenceReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_32;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              v22 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v22 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v18;

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1896BA860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSearchChainInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int *v13;
  GEOPDSearchCountryOccurrence *v14;
  int *v15;
  int *v16;
  int *v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  BOOL v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  void *v44;
  char v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  char v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (((v12 | v8) & 1) != 0)
    v13 = 0;
  else
    v13 = a3;
  LODWORD(v14) = v12;
  v53 = (v13 == 0) | v12;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  v17 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_78;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    while (1)
    {
      v21 = *v15;
      v22 = *(_QWORD *)(v3 + v21);
      v23 = v22 + 1;
      if (v22 == -1 || v23 > *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v22);
      *(_QWORD *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0)
        goto LABEL_24;
      v18 += 7;
      v25 = v19++ >= 9;
      if (v25)
      {
        v20 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_24:
    v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v20 = 0;
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_78:
      if ((v14 & 1) != 0)
      {
        v47 = 1;
        goto LABEL_90;
      }
      if (v13)
      {
        while (1)
        {
          v48 = *v13++;
          v49 = 8;
          switch(v48)
          {
            case 0:
              goto LABEL_91;
            case 1:
              goto LABEL_85;
            case 2:
              v49 = 16;
              goto LABEL_85;
            case 3:
              v49 = 4;
              goto LABEL_85;
            case 5:
              v49 = 2;
LABEL_85:
              *(_BYTE *)(a1 + 68) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_91;
    }
    v28 = v20 >> 3;
    v29 = (char)v14;
    if ((v53 & 1) == 0)
    {
      v30 = v13;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29)
          goto LABEL_65;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 32;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_87;
        v46 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_75;
      case 2:
        if (!v29 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
          goto LABEL_65;
        v52 = (int)v14;
        PBReaderReadString();
        v14 = (GEOPDSearchCountryOccurrence *)objc_claimAutoreleasedReturnValue();
        if (v14)
          -[GEOPDSearchSearchChainInfo _addNoFlagsTrigger:](a1, v14);
        goto LABEL_52;
      case 3:
        if (!v29 || (*(_BYTE *)(a1 + 68) & 4) != 0)
          goto LABEL_65;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_87;
        v52 = (int)v14;
        v14 = objc_alloc_init(GEOPDSearchCountryOccurrence);
        if (GEOPDSearchCountryOccurrenceReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchSearchChainInfo _addNoFlagsCountryOccurrence:](a1, v14);
LABEL_52:

          LODWORD(v14) = v52;
LABEL_76:
          v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_77:
          if (!(v14 & 1 | (v7 != 0)))
            goto LABEL_78;
          continue;
        }

        v47 = 0;
        LOBYTE(v14) = v52;
LABEL_89:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_90:
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        *(_BYTE *)(a1 + 68) |= 4u;
        *(_BYTE *)(a1 + 68) |= 2u;
        if ((v47 & 1) != 0)
        {
LABEL_91:
          v3 = *(_BYTE *)(v3 + *v16) == 0;
          if ((v14 & 1) != 0)
            goto LABEL_92;
        }
        else
        {
          v3 = 0;
          if ((v14 & 1) != 0)
          {
LABEL_92:
            v50 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_65;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v40 = *v15;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v16) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v17) + v41);
            *(_QWORD *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              v25 = v38++ >= 9;
              if (v25)
              {
                v39 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v16))
          v39 = 0;
LABEL_70:
        *(_QWORD *)(a1 + 40) = v39;
        goto LABEL_77;
      case 5:
        if (v29)
        {
          if ((*(_BYTE *)(a1 + 68) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_87:
              v47 = 0;
              goto LABEL_89;
            }
            v46 = *(_BYTE *)(a1 + 68) << 6;
LABEL_75:
            v7 += v46 >> 7;
          }
          else
          {
            PBReaderReadString();
            v34 = objc_claimAutoreleasedReturnValue();
            v35 = 16;
LABEL_64:
            v44 = *(void **)(a1 + v35);
            *(_QWORD *)(a1 + v35) = v34;

            --v7;
          }
          goto LABEL_76;
        }
LABEL_65:
        v45 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if ((v45 & 1) == 0)
        {
LABEL_86:
          v47 = 0;
          goto LABEL_90;
        }
        goto LABEL_77;
      default:
        v36 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_86;
        goto LABEL_77;
    }
  }
}

void sub_1896BB1B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BB6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BB88C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSearchChainInfoReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDSearchSearchChainInfoReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 56) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 60) = objc_msgSend(v6, "length");
      Specified = GEOPDSearchSearchChainInfoReadSpecified(a1, (unint64_t)v6, (int *)&GEOPDSearchSearchChainInfoReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1896BBA0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BBD0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BC144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896BD150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896BD35C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1896BD764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896BD8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896BDA54(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1896BDD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896BDE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896BE1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1896BE524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896BEBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_1896BEF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896BF6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void sub_1896C0914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  _Block_object_dispose(&a58, 8);
  _Unwind_Resume(a1);
}

void sub_1896C1E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1896C235C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1896C2774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896C28AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896C2AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896C2EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1896C3930(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C3990(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1896C4270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C42D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncReplyIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  _BOOL8 v29;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_34;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              v22 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6])
            v22 = 0;
LABEL_36:
          *(_BYTE *)(a1 + 24) = v22 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v27 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v28 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v27;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_39;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1896C4D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C4D74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceConfigureSubscriptionShouldSyncRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_37;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            break;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPairedDeviceGetStorageInfoReplyReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1896C5A14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoReplyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceGetStorageInfoReplyReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C5A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoReplyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDeviceGetStorageInfoRequestReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1896C63C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceGetStorageInfoRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C6424(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceGetStorageInfoRequestIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_1896C6B50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unsigned __int8 v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  GEOPairedDeviceConfigureSubscriptionShouldSyncRequest *v41;
  void *v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  int v58;
  void *v59;
  void *v60;
  void *v61;
  char v62;
  __int16 v63;
  int v64;
  int v65;
  __int16 v66;
  void *v67;
  int v69;
  char v70;
  char v71;
  char v72;
  BOOL v73;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 100);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 96));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(unsigned __int16 *)(a1 + 112);
  v14 = ((v13 >> 6) & 1)
      + (v13 & 1)
      + ((v13 >> 9) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFFEFFFDFFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((v13 >> 8) & 1)+ ((v13 >> 1) & 1)+ ((v13 >> 7) & 1));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v18 = v14 > 6;
        v19 = v18 & ~(_BYTE)v12 | v10;
        v20 = v18 | v12;
        v70 = v19;
        v71 = v20 | v19;
        if (((v20 | v9) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v72 = (v21 == 0) | v20;
        v73 = v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v14;
LABEL_7:
        v15 = v10;
LABEL_8:
        v16 = v11;
        v17 = v12;
LABEL_10:
        ++v8;
        v10 = v15;
        v11 = v16;
        v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v22) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v23))
      goto LABEL_152;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      v30 = v29 + 1;
      if (v29 == -1 || v30 > *(_QWORD *)(v3 + *v7))
        break;
      v31 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v32 = v26++ >= 9;
      if (v32)
      {
        v27 = 0;
        v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_152:
      v69 = 1;
      goto LABEL_153;
    }
    v35 = v27 >> 3;
    v36 = v73;
    if ((v72 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 'd':
        if ((v9 & 1) != 0)
          *(_QWORD *)(a1 + 120) = 3;
        if (!v36)
          goto LABEL_125;
        if ((*(_WORD *)(a1 + 112) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v63 = *(_WORD *)(a1 + 112) << 13;
          goto LABEL_149;
        }
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v41 = objc_alloc_init(GEOPairedDeviceConfigureSubscriptionShouldSyncRequest);
        if (!GEOPairedDeviceConfigureSubscriptionShouldSyncRequestReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v42 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v41;

        if (*(_QWORD *)(a1 + 32))
        {
          v43 = 3;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'e':
        if ((v9 & 1) != 0)
          *(_QWORD *)(a1 + 120) = 4;
        if (!v36)
          goto LABEL_125;
        if ((*(_WORD *)(a1 + 112) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v63 = *(_WORD *)(a1 + 112) << 7;
          goto LABEL_149;
        }
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStartStopDownloadRequest);
        if (!GEOPairedDeviceSubscriptionStartStopDownloadRequestReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v51 = *(void **)(a1 + 80);
        *(_QWORD *)(a1 + 80) = v41;

        if (*(_QWORD *)(a1 + 80))
        {
          v43 = 4;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'f':
        if ((v9 & 1) != 0)
          *(_QWORD *)(a1 + 120) = 5;
        if (!v36)
          goto LABEL_125;
        if ((*(_WORD *)(a1 + 112) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v63 = *(_WORD *)(a1 + 112) << 14;
          goto LABEL_149;
        }
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v41 = objc_alloc_init(GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequest);
        if (!GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v52 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v41;

        if (*(_QWORD *)(a1 + 24))
        {
          v43 = 5;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'g':
        if ((v9 & 1) != 0)
          *(_QWORD *)(a1 + 120) = 6;
        if (!v36)
          goto LABEL_125;
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v63 = *(_WORD *)(a1 + 112) << 8;
          goto LABEL_149;
        }
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStatesSummary);
        if (!GEOPairedDeviceSubscriptionStatesSummaryReadAllFrom((uint64_t)v41, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v53 = *(void **)(a1 + 72);
        *(_QWORD *)(a1 + 72) = v41;

        if (*(_QWORD *)(a1 + 72))
        {
          v43 = 6;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'h':
        if ((v9 & 1) != 0)
          *(_QWORD *)(a1 + 120) = 7;
        if (!v36)
          goto LABEL_125;
        if ((*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v63 = *(_WORD *)(a1 + 112) << 9;
          goto LABEL_149;
        }
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStateSynchronizationRequest);
        if (!GEOPairedDeviceSubscriptionStateSynchronizationRequestReadAllFrom(v41, (void *)v3))
          goto LABEL_175;
        PBReaderRecallMark();
        v54 = *(void **)(a1 + 64);
        *(_QWORD *)(a1 + 64) = v41;

        if (*(_QWORD *)(a1 + 64))
        {
          v43 = 7;
          goto LABEL_123;
        }
        goto LABEL_124;
      case 'i':
        if ((v9 & 1) != 0)
          *(_QWORD *)(a1 + 120) = 8;
        if (!v36)
        {
LABEL_125:
          v62 = PBReaderSkipValueWithTag();
          v24 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if ((v62 & 1) == 0)
          {
            v69 = 0;
            goto LABEL_153;
          }
          goto LABEL_151;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_176;
          v63 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_149;
        }
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_176;
        v41 = objc_alloc_init(GEOPairedDeviceSubscriptionStateUpdate);
        if (!GEOPairedDeviceSubscriptionStateUpdateReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          goto LABEL_175;
        PBReaderRecallMark();
        v55 = *(void **)(a1 + 88);
        *(_QWORD *)(a1 + 88) = v41;

        if (*(_QWORD *)(a1 + 88))
        {
          v43 = 8;
          goto LABEL_123;
        }
        goto LABEL_124;
      default:
        switch((int)v35)
        {
          case 1:
            if ((v9 & 1) == 0)
              goto LABEL_125;
            v44 = 0;
            v45 = 0;
            v46 = 0;
            while (2)
            {
              v47 = *v22;
              v48 = *(_QWORD *)(v3 + v47);
              v49 = v48 + 1;
              if (v48 == -1 || v49 > *(_QWORD *)(v3 + *v7))
              {
                *(_BYTE *)(v3 + *v23) = 1;
              }
              else
              {
                v50 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v48);
                *(_QWORD *)(v3 + v47) = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  v32 = v45++ >= 9;
                  if (v32)
                  {
                    LODWORD(v46) = 0;
                    goto LABEL_130;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(_BYTE *)(v3 + *v23))
              LODWORD(v46) = 0;
LABEL_130:
            *(_DWORD *)(a1 + 108) = v46;
            goto LABEL_151;
          case 2:
            if (!v36)
              goto LABEL_125;
            if ((*(_WORD *)(a1 + 112) & 0x10) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_176;
              v63 = *(_WORD *)(a1 + 112) << 11;
              goto LABEL_149;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_176;
            v41 = objc_alloc_init(GEOPairedDeviceMessageMetadata);
            if (!GEOPairedDeviceMessageMetadataReadAllFrom((uint64_t)v41, (void *)v3))
              goto LABEL_175;
            PBReaderRecallMark();
            v59 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v41;

            goto LABEL_124;
          case 3:
            if ((v9 & 1) != 0)
              *(_QWORD *)(a1 + 120) = 1;
            if (!v36)
              goto LABEL_125;
            if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_176;
              v63 = *(_WORD *)(a1 + 112) << 10;
              goto LABEL_149;
            }
            objc_msgSend((id)a1, "resetPayload");
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_176;
            v41 = objc_alloc_init(GEOPairedDevicePingRequest);
            if (!GEOPairedDevicePingRequestReadAllFrom((uint64_t)v41, (void *)v3))
              goto LABEL_175;
            PBReaderRecallMark();
            v60 = *(void **)(a1 + 56);
            *(_QWORD *)(a1 + 56) = v41;

            if (*(_QWORD *)(a1 + 56))
            {
              v43 = 1;
              goto LABEL_123;
            }
            goto LABEL_124;
          case 4:
            if ((v9 & 1) != 0)
              *(_QWORD *)(a1 + 120) = 2;
            if (!v36)
              goto LABEL_125;
            if ((*(_WORD *)(a1 + 112) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_176;
              v63 = *(_WORD *)(a1 + 112) << 12;
LABEL_149:
              v8 += v63 >> 15;
              goto LABEL_150;
            }
            objc_msgSend((id)a1, "resetPayload");
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_176;
            v41 = objc_alloc_init(GEOPairedDeviceGetStorageInfoRequest);
            if (GEOPairedDeviceGetStorageInfoRequestReadAllFrom((uint64_t)v41, (void *)v3))
            {
              PBReaderRecallMark();
              v61 = *(void **)(a1 + 40);
              *(_QWORD *)(a1 + 40) = v41;

              if (*(_QWORD *)(a1 + 40))
              {
                v43 = 2;
LABEL_123:
                *(_QWORD *)(a1 + 120) = v43;
              }
LABEL_124:
              --v8;
LABEL_150:
              v23 = (int *)MEMORY[0x1E0D82BC8];
              v7 = (int *)MEMORY[0x1E0D82BD8];
              v24 = (int *)MEMORY[0x1E0D82BB8];
LABEL_151:
              if (!(v71 & 1 | (v8 != 0)))
                goto LABEL_152;
              continue;
            }
LABEL_175:

LABEL_176:
            v69 = 0;
            v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_153:
            if ((v70 & 1) != 0)
LABEL_154:
              *(_WORD *)(a1 + 112) |= 1u;
            if (v73 || (v69 & 1) == 0)
            {
              *(_WORD *)(a1 + 112) |= 0x10u;
              *(_WORD *)(a1 + 112) |= 0x20u;
              *(_WORD *)(a1 + 112) |= 8u;
              *(_WORD *)(a1 + 112) |= 4u;
              *(_WORD *)(a1 + 112) |= 0x100u;
              *(_WORD *)(a1 + 112) |= 2u;
              *(_WORD *)(a1 + 112) |= 0x80u;
              *(_WORD *)(a1 + 112) |= 0x40u;
              *(_WORD *)(a1 + 112) |= 0x200u;
            }
            else if (v21)
            {
              while (2)
              {
                v65 = *v21++;
                v64 = v65;
                switch(v65)
                {
                  case 'd':
                    v66 = 4;
                    goto LABEL_168;
                  case 'e':
                    v66 = 256;
                    goto LABEL_168;
                  case 'f':
                    v66 = 2;
                    goto LABEL_168;
                  case 'g':
                    v66 = 128;
                    goto LABEL_168;
                  case 'h':
                    v66 = 64;
                    goto LABEL_168;
                  case 'i':
                    v66 = 512;
LABEL_168:
                    *(_WORD *)(a1 + 112) |= v66;
                    continue;
                  default:
                    v66 = 16;
                    switch(v64)
                    {
                      case 0:
                        goto LABEL_169;
                      case 2:
                        goto LABEL_168;
                      case 3:
                        v66 = 32;
                        goto LABEL_168;
                      case 4:
                        v66 = 8;
                        goto LABEL_168;
                      default:
                        continue;
                    }
                    goto LABEL_169;
                }
              }
            }
LABEL_169:
            if (v69)
              v3 = *(_BYTE *)(v3 + *v23) == 0;
            else
              v3 = 0;
            if (v73)
            {
              v67 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = 0;

            }
            return v3;
          default:
            if ((v70 & 1) == 0 || (*(_WORD *)(a1 + 112) & 1) != 0)
              goto LABEL_125;
            if (!*(_QWORD *)(a1 + 16))
            {
              v56 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v57 = *(void **)(a1 + 16);
              *(_QWORD *)(a1 + 16) = v56;

            }
            v58 = PBUnknownFieldAdd();
            v23 = (int *)MEMORY[0x1E0D82BC8];
            v7 = (int *)MEMORY[0x1E0D82BD8];
            v24 = (int *)MEMORY[0x1E0D82BB8];
            if (v58)
              goto LABEL_151;
            v69 = 0;
            goto LABEL_154;
        }
    }
  }
}

void sub_1896C79E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C7B2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C7C78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C7DC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C7F0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C8058(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C81A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C82F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896C8CB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPairedDeviceMessageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  return objc_msgSend(a1[11], "readAll:", 1);
}

unint64_t GEOPairedDeviceMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 100))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPairedDeviceMessageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 100) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPairedDeviceMessageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPairedDeviceMessageReadAllFrom_initialTag;
  Specified = GEOPairedDeviceMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPairedDeviceMessageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1896C8EFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceMessageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceMessageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896C8F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPairedDeviceMessageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v24;
  uint64_t v25;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_71;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        goto LABEL_71;
      switch((v9 >> 3))
      {
        case 'd':
          if (v16 == 2
            && PBReaderPlaceMark()
            && GEOPairedDeviceConfigureSubscriptionShouldSyncRequestIsValid(a1))
          {
            goto LABEL_66;
          }
          goto LABEL_78;
        case 'e':
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOPairedDeviceSubscriptionStartStopDownloadRequestIsValid(a1))
          {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'f':
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOPairedDeviceCheckinWithSubscriptionStateSummaryRequestIsValid(a1))
          {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'g':
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceSubscriptionStatesSummaryIsValid(a1))
            goto LABEL_78;
          goto LABEL_66;
        case 'h':
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOPairedDeviceSubscriptionStateSynchronizationRequestIsValid(a1))
          {
            goto LABEL_78;
          }
          goto LABEL_66;
        case 'i':
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceSubscriptionStateUpdateIsValid(a1))
          {
LABEL_78:
            PBReaderRecallMark();
            return 0;
          }
LABEL_66:
          PBReaderRecallMark();
LABEL_67:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_71;
          break;
        default:
          switch((v9 >> 3))
          {
            case 1u:
              if (v5 || (v9 & 7) != 0)
                goto LABEL_78;
              v18 = 0;
              break;
            case 2u:
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceMessageMetadataIsValid(a1))
                goto LABEL_78;
              goto LABEL_66;
            case 3u:
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOPairedDevicePingRequestIsValid(a1))
                goto LABEL_78;
              goto LABEL_66;
            case 4u:
              if (v16 == 2
                && PBReaderPlaceMark()
                && GEOPairedDeviceGetStorageInfoRequestIsValid((unsigned __int8 *)a1))
              {
                goto LABEL_66;
              }
              goto LABEL_78;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_78;
              goto LABEL_67;
          }
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              break;
            v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
            *(_QWORD *)&a1[v19] = v21;
            v5 = 1;
            if (v22 < 0 && v18++ <= 8)
              continue;
            goto LABEL_67;
          }
          v5 = 1;
          a1[*v4] = 1;
          goto LABEL_67;
      }
    }
  }
  v5 = 0;
LABEL_71:
  if (a1[*v4])
    v24 = 1;
  else
    v24 = v5 == 0;
  v25 = !v24;
  PBReaderRecallMark();
  return v25;
}

BOOL GEOPairedDeviceMessageMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1)
          goto LABEL_43;
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (v21 = v20 + 8, v21 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v19] = v21;
        else
          a1[v14] = 1;
      }
      else if ((_DWORD)v18 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_43;
        v22 = 0;
        while (1)
        {
          v23 = *v2;
          v24 = *(_QWORD *)&a1[v23];
          v25 = v24 + 1;
          if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
            break;
          v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
          *(_QWORD *)&a1[v23] = v25;
          if (v26 < 0 && v22++ <= 8)
            continue;
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v18 == 1)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_43:
          v28 = 0;
          goto LABEL_42;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPairedDevicePingRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDeviceSubscriptionStartStopDownloadRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  _BOOL8 v29;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_42;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_42;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_44;
        v24 = 0;
        while (1)
        {
          v25 = *v2;
          v26 = *(_QWORD *)&a1[v25];
          v27 = v26 + 1;
          if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
          *(_QWORD *)&a1[v25] = v27;
          if (v28 < 0)
          {
            v23 = v24++ > 8;
            if (!v23)
              continue;
          }
          goto LABEL_41;
        }
      }
      if ((_DWORD)v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_42;
    }
    if ((v8 & 7) != 0)
      goto LABEL_44;
    v18 = 0;
    while (1)
    {
      v19 = *v2;
      v20 = *(_QWORD *)&a1[v19];
      v21 = v20 + 1;
      if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
        break;
      v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
      *(_QWORD *)&a1[v19] = v21;
      if (v22 < 0)
      {
        v23 = v18++ > 8;
        if (!v23)
          continue;
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPairedDeviceSubscriptionStatesSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v38;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1)
          goto LABEL_67;
        v29 = *v2;
        v30 = *(_QWORD *)&a1[v29];
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && (v31 = v30 + 8, v31 <= *(_QWORD *)&a1[*v3]))
          *(_QWORD *)&a1[v29] = v31;
        else
          a1[v14] = 1;
      }
      else if ((_DWORD)v18 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_67;
        v32 = 0;
        while (1)
        {
          v33 = *v2;
          v34 = *(_QWORD *)&a1[v33];
          v35 = v34 + 1;
          if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
            break;
          v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
          *(_QWORD *)&a1[v33] = v35;
          if (v36 < 0 && v32++ <= 8)
            continue;
          goto LABEL_65;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v18 == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || *(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_67;
        v19 = 0;
        v20 = 0;
        do
        {
          if (a1[*v4])
            break;
          v21 = 0;
          v22 = 0;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              break;
            v27 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0)
              goto LABEL_35;
            v21 += 7;
            v13 = v22++ >= 9;
            if (v13)
            {
              v23 = 0;
              if (a1[*v4])
                goto LABEL_46;
              goto LABEL_36;
            }
          }
          a1[*v4] = 1;
LABEL_35:
          if (a1[*v4])
            break;
LABEL_36:
          v28 = v23 & 7;
          if ((v23 >> 3) == 2)
          {
            if (v28 != 2 || !GEOPairedDeviceSubscriptionStateSummaryIsValid(a1))
              goto LABEL_67;
            v20 = 1;
          }
          else if ((v23 >> 3) == 1)
          {
            if (v28 != 2)
              goto LABEL_67;
            v19 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_67;
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_67;
          }
        }
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
LABEL_46:
        if ((v19 & 1) == 0 || (v20 & 1) == 0)
        {
LABEL_67:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_67;
      }
LABEL_65:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPairedDeviceSubscriptionStateSynchronizationRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPairedDeviceSubscriptionStateUpdateIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_50;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_38;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_50;
          v23 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceProgressIsValid(a1))
            goto LABEL_50;
          goto LABEL_46;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceSubscriptionStateUserInfoIsValid(a1))
            goto LABEL_50;
LABEL_46:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v24 = *v2;
        v25 = *(_QWORD *)&a1[v24];
        v26 = v25 + 1;
        if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
          break;
        v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
        *(_QWORD *)&a1[v24] = v26;
        if (v27 < 0)
        {
          v22 = v23++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_47;
      }
LABEL_38:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1896CA48C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPairedDeviceMessageIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  if ((*(_WORD *)(a1 + 112) & 0x5FE) != 0)
    return 1;
  if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
    return GEOPairedDeviceSubscriptionStateUpdateIsDirty(*(_QWORD *)(a1 + 88));
  return 0;
}

os_unfair_lock_s *GEOPairedDeviceMessageIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPairedDeviceMessageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896CA868(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896CABD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceMessageMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  id v31;
  void *v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(_BYTE *)(a1 + 36) |= 1u;
          v21 = *v4;
          v22 = *(_QWORD *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v23 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v22 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v23 = 0;
          }
          *(_QWORD *)(a1 + 24) = v23;
        }
        else if ((_DWORD)v18 == 2)
        {
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            v29 = v28 + 1;
            if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
              break;
            v30 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
            *(_QWORD *)&v3[v27] = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if ((v30 & 0x80) == 0)
              goto LABEL_38;
            v24 += 7;
            v15 = v25++ >= 9;
            if (v15)
            {
              LODWORD(v26) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6])
            LODWORD(v26) = 0;
LABEL_40:
          *(_DWORD *)(a1 + 32) = v26;
        }
        else if ((_DWORD)v18 == 1)
        {
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v19;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v31 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v32 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v31;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_45;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_45:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_1896CB858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceMessageMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceMessageMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896CB8B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingReplyReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1896CC5F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingReplyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDevicePingReplyReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896CC654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingReplyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDevicePingRequestReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1896CD22C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDevicePingRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDevicePingRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896CD28C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceProgressReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  _BOOL8 v51;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 44) |= 0x10u;
            while (2)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
                *(_QWORD *)&v3[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  v15 = v19++ >= 9;
                  if (v15)
                  {
                    v20 = 0;
                    goto LABEL_58;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v20 = 0;
LABEL_58:
            *(_BYTE *)(a1 + 40) = v20 != 0;
            continue;
          case 2u:
            *(_BYTE *)(a1 + 44) |= 4u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v29 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v29 = 0;
            }
            *(_DWORD *)(a1 + 32) = v29;
            continue;
          case 3u:
            v30 = 0;
            v31 = 0;
            v32 = 0;
            *(_BYTE *)(a1 + 44) |= 8u;
            while (2)
            {
              v33 = *v4;
              v34 = *(_QWORD *)&v3[v33];
              v35 = v34 + 1;
              if (v34 == -1 || v35 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v36 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                *(_QWORD *)&v3[v33] = v35;
                v32 |= (unint64_t)(v36 & 0x7F) << v30;
                if (v36 < 0)
                {
                  v30 += 7;
                  v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v32) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v32) = 0;
LABEL_62:
            *(_DWORD *)(a1 + 36) = v32;
            continue;
          case 4u:
            v37 = 0;
            v38 = 0;
            v39 = 0;
            *(_BYTE *)(a1 + 44) |= 2u;
            while (1)
            {
              v40 = *v4;
              v41 = *(_QWORD *)&v3[v40];
              v42 = v41 + 1;
              if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
                break;
              v43 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
              *(_QWORD *)&v3[v40] = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if ((v43 & 0x80) == 0)
                goto LABEL_64;
              v37 += 7;
              v15 = v38++ >= 9;
              if (v15)
              {
                v39 = 0;
                goto LABEL_66;
              }
            }
            v3[*v6] = 1;
LABEL_64:
            if (v3[*v6])
              v39 = 0;
LABEL_66:
            v50 = 24;
            goto LABEL_71;
          case 5u:
            v44 = 0;
            v45 = 0;
            v39 = 0;
            *(_BYTE *)(a1 + 44) |= 1u;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v26 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v25;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_76;
            continue;
        }
        while (1)
        {
          v46 = *v4;
          v47 = *(_QWORD *)&v3[v46];
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)&v3[*v5])
            break;
          v49 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v47);
          *(_QWORD *)&v3[v46] = v48;
          v39 |= (unint64_t)(v49 & 0x7F) << v44;
          if ((v49 & 0x80) == 0)
            goto LABEL_68;
          v44 += 7;
          v15 = v45++ >= 9;
          if (v15)
          {
            v39 = 0;
            goto LABEL_70;
          }
        }
        v3[*v6] = 1;
LABEL_68:
        if (v3[*v6])
          v39 = 0;
LABEL_70:
        v50 = 16;
LABEL_71:
        *(_QWORD *)(a1 + v50) = v39;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v51 = v3[*v6] == 0;
  }
  else
  {
LABEL_76:
    v51 = 0;
  }
  objc_sync_exit(v3);

  return v51;
}

void sub_1896CE3F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceProgressReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceProgressReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896CE458(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceProgressIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  _BOOL8 v42;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_59;
          }
        case 2u:
          if (v16 != 5)
            goto LABEL_62;
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_58;
          v26 = v25 + 4;
          if (v26 > *(_QWORD *)&a1[*v3])
            goto LABEL_58;
          *(_QWORD *)&a1[v24] = v26;
          continue;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v23 = v27++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_59;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_57;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v23 = v32++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_59;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag())
            continue;
LABEL_62:
          v42 = 0;
          goto LABEL_61;
      }
      while (1)
      {
        v38 = *v2;
        v39 = *(_QWORD *)&a1[v38];
        v40 = v39 + 1;
        if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
          break;
        v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
        *(_QWORD *)&a1[v38] = v40;
        if (v41 < 0)
        {
          v23 = v37++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_59;
      }
LABEL_57:
      v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v42 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v42;
}

unint64_t GEOPairedDeviceReplyReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPairedDeviceConfigureSubscriptionShouldSyncReply *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  int v44;
  char v45;
  char v46;
  int v47;
  int v48;
  BOOL v49;
  char v50;
  void *v51;
  int v53;
  int *v54;
  char v55;
  char v56;
  char v57;
  BOOL v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v55 = v15;
        v56 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v57 = (v17 == 0) | v16;
        v58 = v16;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_83;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      v53 = 1;
      goto LABEL_84;
    }
    v31 = v23 >> 3;
    v32 = v58;
    if ((v57 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 100)
    {
      if ((v8 & 1) != 0)
        *(_QWORD *)(a1 + 64) = 3;
      if (!v32)
      {
LABEL_72:
        v45 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if ((v45 & 1) == 0)
        {
          v53 = 0;
          goto LABEL_84;
        }
        goto LABEL_82;
      }
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_106;
        v46 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_80;
      }
      objc_msgSend((id)a1, "resetPayload");
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_106;
      v37 = objc_alloc_init(GEOPairedDeviceConfigureSubscriptionShouldSyncReply);
      if (!GEOPairedDeviceConfigureSubscriptionShouldSyncReplyReadAllFrom((uint64_t)v37, (void *)v3))
        goto LABEL_105;
      PBReaderRecallMark();
      v40 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v37;

      if (!*(_QWORD *)(a1 + 24))
        goto LABEL_65;
      v39 = 3;
LABEL_64:
      *(_QWORD *)(a1 + 64) = v39;
      goto LABEL_65;
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if ((v8 & 1) != 0)
        *(_QWORD *)(a1 + 64) = 1;
      if (!v32)
        goto LABEL_72;
      if ((*(_BYTE *)(a1 + 60) & 8) == 0)
      {
        objc_msgSend((id)a1, "resetPayload");
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_106;
        v37 = objc_alloc_init(GEOPairedDevicePingReply);
        if (!GEOPairedDevicePingReplyReadAllFrom((uint64_t)v37, (void *)v3))
          goto LABEL_105;
        PBReaderRecallMark();
        v38 = *(void **)(a1 + 40);
        *(_QWORD *)(a1 + 40) = v37;

        if (*(_QWORD *)(a1 + 40))
        {
          v39 = 1;
          goto LABEL_64;
        }
LABEL_65:
        --v7;
LABEL_81:
        v19 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_82;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_106;
      v46 = 16 * *(_BYTE *)(a1 + 60);
LABEL_80:
      v7 += v46 >> 7;
      goto LABEL_81;
    }
    if ((v55 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_72;
    if (!*(_QWORD *)(a1 + 16))
    {
      v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v43 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v42;

    }
    v44 = PBUnknownFieldAdd();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if (!v44)
    {
      v53 = 0;
      v54 = &OBJC_IVAR___GEOTileCoordinate__x;
      goto LABEL_85;
    }
LABEL_82:
    if (!(v56 & 1 | (v7 != 0)))
      goto LABEL_83;
  }
  if ((v8 & 1) != 0)
    *(_QWORD *)(a1 + 64) = 2;
  if (!v32)
    goto LABEL_72;
  if ((*(_BYTE *)(a1 + 60) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_106;
    v46 = 32 * *(_BYTE *)(a1 + 60);
    goto LABEL_80;
  }
  objc_msgSend((id)a1, "resetPayload");
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_106;
  v37 = objc_alloc_init(GEOPairedDeviceGetStorageInfoReply);
  if (GEOPairedDeviceGetStorageInfoReplyReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    v41 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v37;

    if (!*(_QWORD *)(a1 + 32))
      goto LABEL_65;
    v39 = 2;
    goto LABEL_64;
  }
LABEL_105:

LABEL_106:
  v53 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_84:
  v54 = &OBJC_IVAR___GEOTileCoordinate__x;
  if ((v55 & 1) == 0)
    goto LABEL_86;
LABEL_85:
  *(_BYTE *)(a1 + v54[366]) |= 1u;
LABEL_86:
  if (v58 || (v53 & 1) == 0)
  {
    *(_BYTE *)(a1 + v54[366]) |= 8u;
    *(_BYTE *)(a1 + v54[366]) |= 4u;
    *(_BYTE *)(a1 + v54[366]) |= 2u;
    goto LABEL_99;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v48 = *v17++;
        v47 = v48;
        v49 = v48 == 1;
        if (v48 > 1)
          break;
        if (v49)
        {
          v50 = 8;
LABEL_97:
          *(_BYTE *)(a1 + v54[366]) |= v50;
          continue;
        }
        if (!v47)
          goto LABEL_99;
      }
      if (v47 == 100)
      {
        v50 = 2;
      }
      else
      {
        if (v47 != 2)
          continue;
        v50 = 4;
      }
      goto LABEL_97;
    }
  }
LABEL_99:
  if (v53)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v58)
  {
    v51 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1896CF764(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896CF8AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896CF9F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896CFEEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPairedDeviceReplyReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPairedDeviceReplyReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPairedDeviceReplyReadAllFrom_initialTag;
  Specified = GEOPairedDeviceReplyReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1896D00B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceReplyReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D0114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_35;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_35;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 100)
      {
        if (v15 != 2
          || !PBReaderPlaceMark()
          || !GEOPairedDeviceConfigureSubscriptionShouldSyncReplyIsValid((unsigned __int8 *)a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDevicePingReplyIsValid(a1))
          goto LABEL_36;
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_36;
LABEL_34:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_35;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceGetStorageInfoReplyIsValid(a1))
      goto LABEL_36;
    goto LABEL_32;
  }
LABEL_35:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_1896D0514(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1896D0800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D0A80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D0D7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyEnvelopeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOPairedDeviceReplyError *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  int v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v54 = v17 & ~(_BYTE)v12 | v10;
        v55 = v17 | v12 | v54;
        if ((((v17 | v12) | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v56 = (v18 == 0) | v17 | v12;
        v57 = v17 | v12;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v10;
LABEL_8:
        v15 = v11;
        v16 = v12;
LABEL_10:
        ++v8;
        v10 = v14;
        v11 = v15;
        v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v20))
      goto LABEL_81;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v7))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_81:
      v52 = 1;
      goto LABEL_82;
    }
    v32 = v24 >> 3;
    v33 = v57;
    if ((v56 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 3)
    {
      if ((v9 & 1) != 0)
        *(_QWORD *)(a1 + 64) = 2;
      if (!v33)
      {
LABEL_70:
        v46 = PBReaderSkipValueWithTag();
        v20 = (int *)MEMORY[0x1E0D82BC8];
        if ((v46 & 1) == 0)
        {
          v52 = 0;
          goto LABEL_82;
        }
        goto LABEL_80;
      }
      if ((*(_BYTE *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_98;
        v47 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_78;
      }
      objc_msgSend((id)a1, "resetResult");
      if ((PBReaderPlaceMark() & 1) == 0)
        goto LABEL_98;
      v38 = objc_alloc_init(GEOPairedDeviceReplyError);
      if (!GEOPairedDeviceReplyErrorReadAllFrom((uint64_t)v38, (void *)v3))
        goto LABEL_97;
      PBReaderRecallMark();
      v40 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v38;

      if (!*(_QWORD *)(a1 + 24))
      {
LABEL_63:
        --v8;
        goto LABEL_79;
      }
      v41 = 2;
LABEL_62:
      *(_QWORD *)(a1 + 64) = v41;
      goto LABEL_63;
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_70;
      if ((*(_BYTE *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_98;
        v38 = objc_alloc_init(GEOPairedDeviceReplyMetadata);
        if (!GEOPairedDeviceReplyMetadataReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_97;
        PBReaderRecallMark();
        v39 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v38;

        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_98;
      v47 = 32 * *(_BYTE *)(a1 + 60);
LABEL_78:
      v8 += v47 >> 7;
LABEL_79:
      v20 = (int *)MEMORY[0x1E0D82BC8];
      goto LABEL_80;
    }
    if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 1) != 0)
      goto LABEL_70;
    if (!*(_QWORD *)(a1 + 16))
    {
      v43 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v44 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v43;

    }
    v45 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v45)
    {
      v52 = 0;
      v53 = &OBJC_IVAR___GEOTileCoordinate__x;
      goto LABEL_83;
    }
LABEL_80:
    v7 = (int *)MEMORY[0x1E0D82BD8];
    if (!(v55 & 1 | (v8 != 0)))
      goto LABEL_81;
  }
  if ((v9 & 1) != 0)
    *(_QWORD *)(a1 + 64) = 1;
  if (!v33)
    goto LABEL_70;
  if ((*(_BYTE *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_98;
    v47 = 16 * *(_BYTE *)(a1 + 60);
    goto LABEL_78;
  }
  objc_msgSend((id)a1, "resetResult");
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_98;
  v38 = objc_alloc_init(GEOPairedDeviceReply);
  if (GEOPairedDeviceReplyReadAllFrom((uint64_t)v38, (void *)v3, v11 & 1))
  {
    PBReaderRecallMark();
    v42 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v38;

    if (!*(_QWORD *)(a1 + 40))
      goto LABEL_63;
    v41 = 1;
    goto LABEL_62;
  }
LABEL_97:

LABEL_98:
  v52 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
  v53 = &OBJC_IVAR___GEOTileCoordinate__x;
  if ((v54 & 1) == 0)
    goto LABEL_84;
LABEL_83:
  *(_BYTE *)(a1 + v53[375]) |= 1u;
LABEL_84:
  if (v57 & 1 | ((v52 & 1) == 0))
  {
    *(_BYTE *)(a1 + v53[375]) |= 4u;
    *(_BYTE *)(a1 + v53[375]) |= 8u;
    *(_BYTE *)(a1 + v53[375]) |= 2u;
  }
  else if (v18)
  {
    while (1)
    {
      v48 = *v18++;
      v49 = 4;
      switch(v48)
      {
        case 0:
          goto LABEL_91;
        case 1:
          goto LABEL_90;
        case 2:
          v49 = 8;
          goto LABEL_90;
        case 3:
          v49 = 2;
LABEL_90:
          *(_BYTE *)(a1 + v53[375]) |= v49;
          break;
        default:
          continue;
      }
    }
  }
LABEL_91:
  if (v52)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if ((v57 & 1) != 0)
  {
    v50 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1896D1580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D16C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D1C6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyEnvelopeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPairedDeviceReplyEnvelopeReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPairedDeviceReplyEnvelopeReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPairedDeviceReplyEnvelopeReadAllFrom_initialTag;
  Specified = GEOPairedDeviceReplyEnvelopeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1896D1E34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceReplyEnvelopeReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceReplyEnvelopeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D1E94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyEnvelopeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unint64_t v17;
  _BOOL8 v18;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_35;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        goto LABEL_35;
      v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceReplyErrorIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceReplyMetadataIsValid(a1))
          goto LABEL_36;
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_36;
LABEL_34:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_35;
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPairedDeviceReplyIsValid(a1))
      goto LABEL_36;
    goto LABEL_32;
  }
LABEL_35:
  v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOPairedDeviceReplyMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && (PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_29;
          goto LABEL_32;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1)
            goto LABEL_32;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (v20 = v19 + 8, v20 <= *(_QWORD *)&a1[*v3]))
            *(_QWORD *)&a1[v18] = v20;
          else
            a1[v14] = 1;
          goto LABEL_29;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_32:
            v21 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_30;
          break;
      }
    }
  }
LABEL_30:
  v21 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOPairedDeviceReplyErrorIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_1896D2614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPairedDeviceReplyEnvelopeIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x14) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if (GEOPairedDeviceReplyIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOPairedDeviceReplyEnvelopeIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPairedDeviceReplyEnvelopeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1896D2988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D2C60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyErrorReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v18;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1896D3390(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyErrorReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceReplyErrorReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D33F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = objc_claimAutoreleasedReturnValue();
            v19 = *(void **)(a1 + 32);
            *(_QWORD *)(a1 + 32) = v18;

            break;
          case 2u:
            *(_BYTE *)(a1 + 48) |= 2u;
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v24 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v23);
              *(_QWORD *)&v3[v22] = v23 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v24 = 0;
            }
            v29 = 24;
            goto LABEL_40;
          case 3u:
            *(_BYTE *)(a1 + 48) |= 1u;
            v25 = *v4;
            v26 = *(_QWORD *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v24 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v26);
              *(_QWORD *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v24 = 0;
            }
            v29 = 16;
            goto LABEL_40;
          case 4u:
            *(_BYTE *)(a1 + 48) |= 4u;
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)&v3[*v5])
            {
              v24 = *(_QWORD *)(*(_QWORD *)&v3[*v7] + v28);
              *(_QWORD *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              v24 = 0;
            }
            v29 = 40;
LABEL_40:
            *(_QWORD *)(a1 + v29) = v24;
            break;
          default:
            if (!*(_QWORD *)(a1 + 8))
            {
              v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
              v21 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = v20;

            }
            if (!PBUnknownFieldAdd())
              goto LABEL_43;
            break;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_1896D40D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceReplyMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceReplyMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D4138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStartStopDownloadRequestReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  unint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  void *v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v23 = *v4;
            v24 = *(_QWORD *)&v3[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&v3[*v5])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v24);
            *(_QWORD *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0)
              goto LABEL_44;
            v20 += 7;
            v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6])
            LODWORD(v22) = 0;
LABEL_46:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((_DWORD)v18 == 2)
        {
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v30 = *v4;
            v31 = *(_QWORD *)&v3[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&v3[*v5])
              break;
            v33 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v31);
            *(_QWORD *)&v3[v30] = v32;
            v29 |= (unint64_t)(v33 & 0x7F) << v27;
            if ((v33 & 0x80) == 0)
              goto LABEL_48;
            v27 += 7;
            v15 = v28++ >= 9;
            if (v15)
            {
              v29 = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6])
            v29 = 0;
LABEL_50:
          *(_BYTE *)(a1 + 28) = v29 != 0;
        }
        else if ((_DWORD)v18 == 1)
        {
          PBReaderReadString();
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          if (v19)
            objc_msgSend((id)a1, "addIdentifiers:", v19);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v34 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v35 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v34;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_53;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_1896D52F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStartStopDownloadRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceSubscriptionStartStopDownloadRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D5354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSummaryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  _BOOL8 v27;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v20 = 0;
LABEL_34:
          *(_BYTE *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v25 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v26 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v25;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1896D616C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceSubscriptionStateSummaryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D61CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSummaryIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPairedDeviceSubscriptionStateSynchronizationRequestReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  void *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          if (v18)
            objc_msgSend(a1, "addIdentifiersToObserve:", v18);

        }
        else
        {
          if (!a1[1])
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = (void *)a1[1];
            a1[1] = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1896D6E34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateSynchronizationRequestReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceSubscriptionStateSynchronizationRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D6E94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D759C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceSubscriptionStateUpdateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  GEOPairedDeviceProgress *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  int v64;
  int *v65;
  char v66;
  char v67;
  char v68;
  BOOL v69;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 > 1;
        v15 = v14 & ~(_BYTE)v10 | v9;
        v16 = v14 | v10;
        v66 = v15;
        v67 = v16 | v15;
        if (((v16 | v8) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v68 = (v17 == 0) | v16;
        v69 = v16;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_95;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_95:
      v64 = 1;
      goto LABEL_96;
    }
    v31 = v23 >> 3;
    v32 = v69;
    if ((v68 & 1) == 0)
    {
      v33 = v17;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v37 = objc_claimAutoreleasedReturnValue();
          v38 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v37;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_112;
        v59 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_92;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 68) |= 2u;
        while (2)
        {
          v45 = *v18;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_80:
        v58 = 64;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_75;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_BYTE *)(a1 + 68) |= 1u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v44) = 0;
LABEL_84:
        v58 = 60;
LABEL_85:
        *(_DWORD *)(a1 + v58) = v44;
        goto LABEL_94;
      case 4:
        if (!v32)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_112;
          v59 = 8 * *(_BYTE *)(a1 + 68);
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_112;
        v55 = objc_alloc_init(GEOPairedDeviceProgress);
        if (!GEOPairedDeviceProgressReadAllFrom((uint64_t)v55, (void *)v3))
          goto LABEL_111;
        PBReaderRecallMark();
        v56 = 32;
        goto LABEL_73;
      case 5:
        if (!v32)
          goto LABEL_75;
        if ((*(_BYTE *)(a1 + 68) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_112;
          v59 = 4 * *(_BYTE *)(a1 + 68);
LABEL_92:
          v7 += v59 >> 7;
LABEL_93:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_94:
          if (!(v67 & 1 | (v7 != 0)))
            goto LABEL_95;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_112;
        v55 = objc_alloc_init(GEOPairedDeviceSubscriptionStateUserInfo);
        if (GEOPairedDeviceSubscriptionStateUserInfoReadAllFrom((uint64_t)v55, (void *)v3))
        {
          PBReaderRecallMark();
          v56 = 40;
LABEL_73:
          v38 = *(void **)(a1 + v56);
          *(_QWORD *)(a1 + v56) = v55;
LABEL_74:

          --v7;
          goto LABEL_93;
        }
LABEL_111:

LABEL_112:
        v64 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_96:
        v65 = &OBJC_IVAR___GEOTileCoordinate__x;
        if ((v66 & 1) != 0)
LABEL_97:
          *(_BYTE *)(a1 + v65[400]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(_BYTE *)(a1 + v65[400]) |= 8u;
          *(_BYTE *)(a1 + v65[400]) |= 0x10u;
          *(_BYTE *)(a1 + v65[400]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            v60 = *v17++;
            v61 = 8;
            switch(v60)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 4:
                v61 = 16;
                goto LABEL_104;
              case 5:
                v61 = 32;
LABEL_104:
                *(_BYTE *)(a1 + v65[400]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v64)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if (v69)
        {
          v62 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(_BYTE *)(a1 + 68) & 4) != 0)
        {
LABEL_75:
          v57 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v57 & 1) == 0)
          {
            v64 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v39 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v40 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v39;

          }
          v41 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v41)
          {
            v64 = 0;
            v65 = &OBJC_IVAR___GEOTileCoordinate__x;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_1896D7F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D8054(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D8810(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceSubscriptionStateUpdateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPairedDeviceSubscriptionStateUpdateReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPairedDeviceSubscriptionStateUpdateReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPairedDeviceSubscriptionStateUpdateReadAllFrom_initialTag;
  Specified = GEOPairedDeviceSubscriptionStateUpdateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 40), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1896D89C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPairedDeviceSubscriptionStateUpdateReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceSubscriptionStateUpdateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D8A28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUserInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_1896D8E5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUpdateIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 68) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1896D91E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896D9580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUserInfoReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      while (1)
      {
        if (v3[*v6])
          goto LABEL_49;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          goto LABEL_49;
        if ((v10 >> 3) == 2)
          break;
        if ((v10 >> 3) == 1)
        {
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__waitingReasons;
              goto LABEL_41;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__waitingReasons;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__waitingReasons;
LABEL_42:
          if (v3[*v6])
            LODWORD(v20) = 0;
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(_QWORD *)(a1 + 8))
        {
          v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v34 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v33;

        }
        if ((PBUnknownFieldAdd() & 1) == 0)
          goto LABEL_50;
LABEL_45:
        if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          goto LABEL_49;
      }
      v27 = 0;
      v28 = 0;
      v20 = 0;
      *(_BYTE *)(a1 + 24) |= 1u;
      while (1)
      {
        v29 = *v4;
        v30 = *(_QWORD *)&v3[v29];
        v31 = v30 + 1;
        if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
          break;
        v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
        *(_QWORD *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__minBatteryLevel;
          goto LABEL_42;
        }
        v27 += 7;
        v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__minBatteryLevel;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOPairedDeviceSubscriptionStateUserInfo__minBatteryLevel;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1896D9F04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStateUserInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceSubscriptionStateUserInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896D9F64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStatesSummaryReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  char v21;
  GEOPairedDeviceSubscriptionStateSummary *v22;
  void *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v32;
  GEOPairedDeviceSubscriptionStateSummary *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  _BOOL8 v46;
  char v48;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = &OBJC_IVAR___GEOTileCoordinate__x;
      v8 = &OBJC_IVAR___GEOTileCoordinate__x;
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v4;
          v14 = *(_QWORD *)&v3[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v3[*v5])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v3[*v9] + v14);
          *(_QWORD *)&v3[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v17 = v11++ >= 9;
          if (v17)
          {
            v12 = 0;
            v18 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v18 = v3[*v6];
        if (v3[*v6])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          *(_BYTE *)(a1 + v7[416]) |= 1u;
          v34 = *v4;
          v35 = *(_QWORD *)&v3[v34];
          if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(_QWORD *)&v3[*v5])
          {
            v36 = *(_QWORD *)(*(_QWORD *)&v3[*v9] + v35);
            *(_QWORD *)&v3[v34] = v35 + 8;
          }
          else
          {
            v3[*v6] = 1;
            v36 = 0;
          }
          *(_QWORD *)(a1 + v8[417]) = v36;
        }
        else if ((_DWORD)v20 == 2)
        {
          v37 = 0;
          v38 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + v7[416]) |= 2u;
          while (1)
          {
            v40 = *v4;
            v41 = *(_QWORD *)&v3[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&v3[*v5])
              break;
            v43 = *(_BYTE *)(*(_QWORD *)&v3[*v9] + v41);
            *(_QWORD *)&v3[v40] = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if ((v43 & 0x80) == 0)
              goto LABEL_62;
            v37 += 7;
            v17 = v38++ >= 9;
            if (v17)
            {
              v39 = 0;
              goto LABEL_64;
            }
          }
          v3[*v6] = 1;
LABEL_62:
          if (v3[*v6])
            v39 = 0;
LABEL_64:
          *(_BYTE *)(a1 + 32) = v39 != 0;
        }
        else if ((_DWORD)v20 == 1)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_72;
          if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
          {
            v23 = 0;
            v22 = 0;
LABEL_71:

            goto LABEL_72;
          }
          v21 = 0;
          v48 = 0;
          v22 = 0;
          v23 = 0;
          while (2)
          {
            if (!v3[*v6])
            {
              v24 = 0;
              v25 = 0;
              v26 = 0;
              while (1)
              {
                v27 = *v4;
                v28 = *(_QWORD *)&v3[v27];
                v29 = v28 + 1;
                if (v28 == -1 || v29 > *(_QWORD *)&v3[*v5])
                  break;
                v30 = *(_BYTE *)(*(_QWORD *)&v3[*v9] + v28);
                *(_QWORD *)&v3[v27] = v29;
                v26 |= (unint64_t)(v30 & 0x7F) << v24;
                if ((v30 & 0x80) == 0)
                  goto LABEL_34;
                v24 += 7;
                if (v25++ > 8)
                  goto LABEL_42;
              }
              v3[*v6] = 1;
LABEL_34:
              if (v3[*v6])
                v26 = 0;
              if ((v26 >> 3) != 2)
              {
                if ((v26 >> 3) == 1)
                {
                  PBReaderReadString();
                  v32 = objc_claimAutoreleasedReturnValue();

                  v48 = 1;
                  v23 = (void *)v32;
                  goto LABEL_43;
                }
LABEL_42:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_71;
                goto LABEL_43;
              }
              if (!PBReaderPlaceMark())
                goto LABEL_71;
              v33 = objc_alloc_init(GEOPairedDeviceSubscriptionStateSummary);

              if (!GEOPairedDeviceSubscriptionStateSummaryReadAllFrom((uint64_t)v33, v3))
              {
                v22 = v33;
                goto LABEL_71;
              }
              PBReaderRecallMark();
              v21 = 1;
              v22 = v33;
LABEL_43:
              if (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5])
                continue;
            }
            break;
          }
          if ((v48 & 1) == 0 || (v21 & 1) == 0)
            goto LABEL_71;
          objc_msgSend((id)a1, "setSubscriptionStatesValue:forKey:", v22, v23);
          v7 = &OBJC_IVAR___GEOTileCoordinate__x;
          v8 = &OBJC_IVAR___GEOTileCoordinate__x;
          PBReaderRecallMark();

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v44;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_72;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_72:
    v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}

void sub_1896DB144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPairedDeviceSubscriptionStatesSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPairedDeviceSubscriptionStatesSummaryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896DB1A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOYelpPhotosURLs(void *a1)
{
  return _GEOYelpURLs(a1, 0, CFSTR("photos"), 0);
}

id _GEOYelpURLs(void *a1, void *a2, void *a3, void *a4)
{
  __CFString *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  const __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v33;
  id v34;
  __CFString *v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  _QWORD v42[4];

  v42[2] = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v11 = objc_alloc_init(MEMORY[0x1E0CB3998]);
  objc_msgSend(v11, "setScheme:", CFSTR("yelp6"));
  objc_msgSend(v11, "setHost:", &stru_1E1C241D0);
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", CFSTR("/biz"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v8)
    objc_msgSend(v12, "appendFormat:", CFSTR("/%@"), v8);
  if (v9)
    objc_msgSend(v13, "appendFormat:", CFSTR("/%@"), v9);
  v36 = v9;
  objc_msgSend(v11, "setPath:", v13);
  if (v7)
    v14 = v7;
  else
    v14 = &stru_1E1C241D0;
  objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("biz_id"), v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = v15;
  objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("xref"), CFSTR("apple"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v42[1] = v16;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v42, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = (void *)objc_msgSend(v17, "mutableCopy");

  v19 = v10;
  if (v10)
  {
    v34 = v8;
    v35 = v7;
    v39 = 0u;
    v40 = 0u;
    v37 = 0u;
    v38 = 0u;
    v33 = v10;
    v20 = v10;
    v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    if (v21)
    {
      v22 = v21;
      v23 = *(_QWORD *)v38;
      do
      {
        for (i = 0; i != v22; ++i)
        {
          if (*(_QWORD *)v38 != v23)
            objc_enumerationMutation(v20);
          v25 = *(_QWORD *)(*((_QWORD *)&v37 + 1) + 8 * i);
          v26 = (void *)MEMORY[0x1E0CB39D8];
          objc_msgSend(v20, "objectForKey:", v25);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "queryItemWithName:value:", v25, v27);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "addObject:", v28);

        }
        v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
      }
      while (v22);
    }

    v8 = v34;
    v7 = v35;
    v19 = v33;
  }
  objc_msgSend(v11, "setQueryItems:", v18);
  objc_msgSend(v11, "URL");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "absoluteString");
  v30 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObject:", v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  return v31;
}

id GEOYelpAddPhotoURLs(void *a1)
{
  return _GEOYelpURLs(a1, CFSTR("add"), CFSTR("photo"), 0);
}

id GEOYelpViewPhotoURLs(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v10 = CFSTR("photo_id");
    v11[0] = v3;
    v5 = (void *)MEMORY[0x1E0C99D80];
    v6 = a1;
    objc_msgSend(v5, "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
    v7 = (id)objc_claimAutoreleasedReturnValue();
    _GEOYelpURLs(v6, 0, CFSTR("photo"), v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = a1;
    _GEOYelpURLs(v7, 0, CFSTR("photos"), 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v8;
}

id GEOYelpReviewsURLs(void *a1)
{
  return _GEOYelpURLs(a1, 0, CFSTR("reviews"), 0);
}

id GEOYelpAddReviewURLs(void *a1)
{
  return _GEOYelpURLs(a1, CFSTR("add"), CFSTR("reviewdraft"), 0);
}

id GEOYelpViewReviewURLs(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  const __CFString *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v10 = CFSTR("review_id");
    v11[0] = v3;
    v5 = (void *)MEMORY[0x1E0C99D80];
    v6 = a1;
    objc_msgSend(v5, "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
    v7 = (id)objc_claimAutoreleasedReturnValue();
    _GEOYelpURLs(v6, 0, CFSTR("review"), v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = a1;
    _GEOYelpURLs(v7, 0, CFSTR("reviews"), 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v8;
}

id GEOYelpCheckInURLs(void *a1)
{
  return _GEOYelpURLs(a1, CFSTR("add"), CFSTR("check_in"), 0);
}

uint64_t GEOGeodesicEvaluate(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  int v12;
  int v13;
  double v14;
  double v16;
  double v17;
  _OWORD v18[31];
  double v19;
  double v20;

  v19 = 0.0;
  v20 = 0.0;
  if (_MergedGlobals_314 != -1)
    dispatch_once(&_MergedGlobals_314, &__block_literal_global_178);
  geod_geninverse(dbl_1ECDBC888, &v20, &v19, 0, 0, 0, 0, 0, a2, a3, a4, a5);
  if (v20 >= a6)
  {
    memset(v18, 0, sizeof(v18));
    geod_lineinit((uint64_t)v18, (uint64_t)dbl_1ECDBC888, 0, a2, a3, v19);
    (*(void (**)(uint64_t, double, double))(a1 + 16))(a1, a2, a3);
    v12 = vcvtpd_s64_f64(v20 / a6);
    if (v12 >= 2)
    {
      v13 = v12 - 1;
      v14 = 1.0;
      do
      {
        v16 = 0.0;
        v17 = 0.0;
        geod_genposition((uint64_t)v18, 0, &v16, &v17, 0, 0, 0, 0, v14 * a6, 0, 0);
        (*(void (**)(uint64_t, double, double))(a1 + 16))(a1, v16, v17);
        v14 = v14 + 1.0;
        --v13;
      }
      while (v13);
    }
  }
  else
  {
    (*(void (**)(uint64_t, double, double))(a1 + 16))(a1, a2, a3);
  }
  return (*(uint64_t (**)(uint64_t, double, double))(a1 + 16))(a1, a4, a5);
}

double ___geodesic_block_invoke()
{
  return geod_init((uint64_t)dbl_1ECDBC888, 6378137.0, 0.00335281066);
}

void sub_1896DCE5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1896DD064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1896DD0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1896DD188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1896DE2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  void *v39;
  void *v40;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a32, 8);
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::destroy(a39);

  _Unwind_Resume(a1);
}

id GEOGetAlmanacLog(void)
{
  if (qword_1ECDBCA28 != -1)
    dispatch_once(&qword_1ECDBCA28, &__block_literal_global_179);
  return (id)_MergedGlobals_315;
}

void sub_1896DE5CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t *a60)
{
  uint64_t *v61;
  uint64_t v62;

  v61 = a60;
  if (a60 == &a57)
  {
    v62 = 4;
    v61 = &a57;
  }
  else
  {
    if (!a60)
      goto LABEL_6;
    v62 = 5;
  }
  (*(void (**)(void))(*v61 + 8 * v62))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

GEOAlmanacRiseTransitSet *_getRTS<std::__tree_const_iterator<_GEORiseTransitSetEvent,std::__tree_node<_GEORiseTransitSetEvent,void *> *,long>,BOOL (*)(unsigned int,unsigned int)>(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  void (**v5)(_QWORD, _QWORD);
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  int v10;
  int v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  int v15;
  int v16;
  GEOAlmanacRiseTransitSet *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  GEOAlmanacRiseTransitSet *v24;
  unint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  _QWORD v32[8];
  _QWORD v33[3];
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t (*v39)();
  const char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t (*v46)();
  const char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t (*v53)();
  const char *v54;
  _QWORD *v55;

  v49 = 0;
  v50 = &v49;
  v51 = 0x3812000000;
  v52 = __Block_byref_object_copy__111;
  v53 = __Block_byref_object_dispose__112;
  v54 = "";
  v55 = a2;
  v42 = 0;
  v43 = &v42;
  v44 = 0x3812000000;
  v45 = __Block_byref_object_copy__111;
  v46 = __Block_byref_object_dispose__112;
  v47 = "";
  v48 = a2;
  v35 = 0;
  v36 = &v35;
  v37 = 0x3812000000;
  v38 = __Block_byref_object_copy__111;
  v39 = __Block_byref_object_dispose__112;
  v40 = "";
  v41 = a2;
  v33[0] = 0;
  v33[1] = v33;
  v33[2] = 0x2020000000;
  v34 = 0;
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = ___ZL7_getRTSINSt3__121__tree_const_iteratorI23_GEORiseTransitSetEventPNS0_11__tree_nodeIS2_PvEElEEPFbjjEEP24GEOAlmanacRiseTransitSetT_SC_T0__block_invoke;
  v32[3] = &unk_1E1C157F8;
  v32[4] = &v49;
  v32[5] = &v35;
  v32[6] = &v42;
  v32[7] = v33;
  v4 = MEMORY[0x18D765024](v32);
  v5 = (void (**)(_QWORD, _QWORD))v4;
  if ((_QWORD *)a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, a1);
    v6 = *(_QWORD **)(a1 + 8);
    if (v6)
    {
      do
      {
        v7 = v6;
        v6 = (_QWORD *)*v6;
      }
      while (v6);
    }
    else
    {
      v8 = (_QWORD *)a1;
      do
      {
        v7 = (_QWORD *)v8[2];
        v9 = *v7 == (_QWORD)v8;
        v8 = v7;
      }
      while (!v9);
    }
    if (v7 != a2)
    {
      v10 = *(_DWORD *)(a1 + 40);
      v11 = *((_DWORD *)v7 + 10);
      if (v10 == 8)
      {
        if (v11 != 16)
          goto LABEL_33;
      }
      else if (v10 == 32)
      {
        if (v11 != 8)
          goto LABEL_33;
      }
      else if (v10 != 16 || v11 != 32)
      {
        goto LABEL_33;
      }
      ((void (**)(_QWORD, _QWORD *))v5)[2](v5, v7);
      v12 = (_QWORD *)v7[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        v14 = v7;
        do
        {
          v13 = (_QWORD *)v14[2];
          v9 = *v13 == (_QWORD)v14;
          v14 = v13;
        }
        while (!v9);
      }
      if (v13 != a2)
      {
        v15 = *((_DWORD *)v7 + 10);
        v16 = *((_DWORD *)v13 + 10);
        if (v15 != 8)
        {
          if (v15 == 32)
          {
            if (v16 != 8)
              goto LABEL_33;
          }
          else if (v15 != 16 || v16 != 32)
          {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
        if (v16 == 16)
LABEL_32:
          ((void (*)(void (**)(_QWORD, _QWORD)))v5[2])(v5);
      }
    }
  }
LABEL_33:
  v17 = [GEOAlmanacRiseTransitSet alloc];
  v18 = v50[6];
  if ((_QWORD *)v18 == a2)
  {
    v30 = 0xBFF0000000000000;
    v19 = -1;
  }
  else
  {
    v30 = *(_QWORD *)(v18 + 32);
    v19 = *(_DWORD *)(v18 + 40);
  }
  v31 = v19;
  v20 = v43[6];
  if ((_QWORD *)v20 == a2)
  {
    v28 = 0xBFF0000000000000;
    v21 = -1;
  }
  else
  {
    v28 = *(_QWORD *)(v20 + 32);
    v21 = *(_DWORD *)(v20 + 40);
  }
  v29 = v21;
  v22 = v36[6];
  if ((_QWORD *)v22 == a2)
  {
    v26 = 0xBFF0000000000000;
    v23 = -1;
  }
  else
  {
    v26 = *(_QWORD *)(v22 + 32);
    v23 = *(_DWORD *)(v22 + 40);
  }
  v27 = v23;
  v24 = -[GEOAlmanacRiseTransitSet initWithRise:transit:set:](v17, "initWithRise:transit:set:", &v30, &v28, &v26);

  _Block_object_dispose(v33, 8);
  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&v42, 8);
  _Block_object_dispose(&v49, 8);
  return v24;
}

void sub_1896DE930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  void *v28;
  uint64_t v29;

  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Block_object_dispose((const void *)(v29 - 104), 8);
  _Unwind_Resume(a1);
}

void sub_1896DE9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1896DED14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1896DEDBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896DEE14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896DEEE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896DF0E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void ___ZL16GEOGetAlmanacLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "Almanac");
  v1 = (void *)_MergedGlobals_315;
  _MergedGlobals_315 = (uint64_t)v0;

}

void _GEORiseTransitSetEvent::_GEORiseTransitSetEvent(_GEORiseTransitSetEvent *this, GEORiseTransitSet *a2, unsigned int a3)
{
  double v5;
  NSObject *v6;
  uint8_t v7[16];

  GEORiseTransitSet::eventOfType(a2, a3);
  this->JD = v5;
  this->type = a3;
  if (v5 <= -10.0)
  {
    GEOGetAlmanacLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1885A9000, v6, OS_LOG_TYPE_FAULT, "umm, what?", v7, 2u);
    }

  }
}

uint64_t std::__tree<_GEORiseTransitSetEvent,_GEORiseTransitSetEventIsLessThan,std::allocator<_GEORiseTransitSetEvent>>::__emplace_unique_key_args<_GEORiseTransitSetEvent,_GEORiseTransitSetEvent const&>(uint64_t **a1, int a2, _OWORD *a3, double a4)
{
  uint64_t *v6;
  uint64_t **v7;
  uint64_t **v10;
  double v11;
  int v12;
  _OWORD *v13;
  uint64_t *v14;
  uint64_t *v15;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    while (1)
    {
      while (1)
      {
        v10 = (uint64_t **)v6;
        v11 = *((double *)v6 + 4);
        v12 = *((_DWORD *)v6 + 10);
        if (!_GEORiseTransitSetEventIsLessThan::operator()(a2, v12, a4, v11))
          break;
        v6 = *v10;
        v7 = v10;
        if (!*v10)
          goto LABEL_9;
      }
      if (!_GEORiseTransitSetEventIsLessThan::operator()(v12, a2, v11, a4))
        return 0;
      v6 = v10[1];
      if (!v6)
      {
        v7 = v10 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v10 = a1 + 1;
LABEL_9:
    v13 = operator new(0x30uLL);
    v13[2] = *a3;
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    *((_QWORD *)v13 + 2) = v10;
    *v7 = (uint64_t *)v13;
    v14 = (uint64_t *)**a1;
    if (v14)
    {
      *a1 = v14;
      v15 = *v7;
    }
    else
    {
      v15 = (uint64_t *)v13;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v15);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return 1;
  }
}

BOOL _GEORiseTransitSetEventIsLessThan::operator()(int a1, int a2, double a3, double a4)
{
  int v6;

  if (a1 == a2 && vabdd_f64(a3, a4) < 0.007)
    return 0;
  if (a3 != a4)
    return a3 < a4;
  v6 = GEOSolarEventTypeToOrdinal(a1);
  return v6 < (int)GEOSolarEventTypeToOrdinal(a2);
}

uint64_t GEOSolarEventTypeToOrdinal(int a1)
{
  int v1;
  uint64_t result;

  if (a1 > 31)
  {
    if (a1 <= 127)
    {
      if (a1 == 32)
        return 8;
      if (a1 == 64)
        return 5;
    }
    else
    {
      switch(a1)
      {
        case 128:
          return 6;
        case 256:
          return 7;
        case 512:
          return 9;
      }
    }
    return 0xFFFFFFFFLL;
  }
  else
  {
    v1 = a1 - 1;
    result = 0;
    switch(v1)
    {
      case 0:
        return result;
      case 1:
        result = 1;
        break;
      case 3:
        result = 2;
        break;
      case 7:
        result = 3;
        break;
      default:
        return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t __Block_byref_object_copy__111(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 48) = *(_QWORD *)(a2 + 48);
  return result;
}

__n128 __Block_byref_object_copy__118(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

void sub_1896DF770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

os_log_t GEOGreenTeaGetLog()
{
  return GEOFindOrCreateLog("com.apple.greentea", "GEO");
}

uint64_t GEOGreenTeaLog(NSObject *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  const __CFString *v8;
  int v10;
  const __CFString *v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  if (+[GEOPlatform isRunningInGeod](GEOPlatform, "isRunningInGeod")
    || !os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
  {
    return 0;
  }
  v6 = objc_msgSend(a3, "bundleId");
  if (!v6)
    v6 = objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle"), "bundleIdentifier");
  v7 = 1;
  if (os_log_type_enabled(a1, OS_LOG_TYPE_INFO))
  {
    v8 = CFSTR("Unknown");
    if (v6)
      v8 = (const __CFString *)v6;
    v10 = 138412546;
    v11 = v8;
    v12 = 2080;
    v13 = a2;
    _os_log_impl(&dword_1885A9000, a1, OS_LOG_TYPE_INFO, "%@ is transmitting user location for %s", (uint8_t *)&v10, 0x16u);
  }
  return v7;
}

id _GEOConfigStorageDirectUserReadWrite()
{
  if (qword_1ECDBAC78 != -1)
    dispatch_once(&qword_1ECDBAC78, &__block_literal_global_90_2);
  return (id)_MergedGlobals_3_2;
}

id _GEOConfigStorageDirectSystemReadWrite()
{
  if (qword_1ECDBAC78 != -1)
    dispatch_once(&qword_1ECDBAC78, &__block_literal_global_90_2);
  return (id)qword_1ECDBAC70;
}

void ___initStorageReadWrite_block_invoke()
{
  GEOConfigStorageDirectReadWrite *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  GEOConfigStorageDirectReadWrite *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  id v10;
  uint8_t buf[2];
  __int16 v12;

  if (!+[GEOPlatform isRunningInGeod](GEOPlatform, "isRunningInGeod"))
  {
    if (!os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      return;
    v12 = 0;
    v7 = MEMORY[0x1E0C81028];
    v8 = "Assertion failed: GEOPlatform.isRunningInGeod";
    v9 = (uint8_t *)&v12;
LABEL_9:
    _os_log_fault_impl(&dword_1885A9000, v7, OS_LOG_TYPE_FAULT, v8, v9, 2u);
    return;
  }
  if (!_user_storage_readonly)
  {
    v0 = [GEOConfigStorageDirectReadWrite alloc];
    +[GEOFilePaths urlFor:](GEOFilePaths, "urlFor:", 34);
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = -[GEOConfigStorageDirectReadWrite initWithPath:forSource:](v0, "initWithPath:forSource:", v1, 7);
    v3 = (void *)_MergedGlobals_3_2;
    _MergedGlobals_3_2 = v2;

    v4 = [GEOConfigStorageDirectReadWrite alloc];
    +[GEOFilePaths urlFor:](GEOFilePaths, "urlFor:", 33);
    v10 = (id)objc_claimAutoreleasedReturnValue();
    v5 = -[GEOConfigStorageDirectReadWrite initWithPath:forSource:](v4, "initWithPath:forSource:", v10, 6);
    v6 = (void *)qword_1ECDBAC70;
    qword_1ECDBAC70 = v5;

    return;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    v7 = MEMORY[0x1E0C81028];
    v8 = "Assertion failed: _user_storage_readonly == ((void *)0)";
    v9 = buf;
    goto LABEL_9;
  }
}

uint64_t NanoRegistryLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = NanoRegistryLibraryCore_frameworkLibrary;
  v6 = NanoRegistryLibraryCore_frameworkLibrary;
  if (!NanoRegistryLibraryCore_frameworkLibrary)
  {
    v7 = __const__block__paths_5;
    v8 = *(_OWORD *)&off_1E1C15890;
    v1 = _sl_dlopen();
    v4[3] = v1;
    NanoRegistryLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E1284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t NanoRegistryLibrary()
{
  uint64_t v0;
  void *v2;

  v0 = NanoRegistryLibraryCore();
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t PairedDeviceRegistryLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = PairedDeviceRegistryLibraryCore_frameworkLibrary;
  v6 = PairedDeviceRegistryLibraryCore_frameworkLibrary;
  if (!PairedDeviceRegistryLibraryCore_frameworkLibrary)
  {
    v7 = __const__block__paths_8;
    v8 = *(_OWORD *)&off_1E1C158B0;
    v1 = _sl_dlopen();
    v4[3] = v1;
    PairedDeviceRegistryLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E13A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t PairedDeviceRegistryLibrary()
{
  uint64_t v0;
  void *v2;

  v0 = PairedDeviceRegistryLibraryCore();
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

Class __getNRPairedDeviceRegistryClass_block_invoke(uint64_t a1)
{
  Class result;

  NanoRegistryLibrary();
  result = objc_getClass("NRPairedDeviceRegistry");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getNRPairedDeviceRegistryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)getPDRRegistryClass();
  }
  return result;
}

id getPDRRegistryClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getPDRRegistryClass_softClass;
  v7 = getPDRRegistryClass_softClass;
  if (!getPDRRegistryClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getPDRRegistryClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getPDRRegistryClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1896E1520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPDRRegistryClass_block_invoke(uint64_t a1)
{
  Class result;

  PairedDeviceRegistryLibrary();
  result = objc_getClass("PDRRegistry");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getPDRRegistryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)getNRDevicePropertySystemVersionSymbolLoc();
  }
  return result;
}

void *getNRDevicePropertySystemVersionSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRDevicePropertySystemVersionSymbolLoc_ptr;
  v6 = getNRDevicePropertySystemVersionSymbolLoc_ptr;
  if (!getNRDevicePropertySystemVersionSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRDevicePropertySystemVersion");
    v4[3] = (uint64_t)v0;
    getNRDevicePropertySystemVersionSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E161C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getNRDevicePropertySystemVersion()
{
  id *NRDevicePropertySystemVersionSymbolLoc;
  uint64_t v2;

  NRDevicePropertySystemVersionSymbolLoc = (id *)getNRDevicePropertySystemVersionSymbolLoc();
  if (NRDevicePropertySystemVersionSymbolLoc)
    return *NRDevicePropertySystemVersionSymbolLoc;
  dlerror();
  v2 = abort_report_np();
  return (id)getNRDevicePropertySystemBuildVersionSymbolLoc(v2);
}

void *getNRDevicePropertySystemBuildVersionSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRDevicePropertySystemBuildVersionSymbolLoc_ptr;
  v6 = getNRDevicePropertySystemBuildVersionSymbolLoc_ptr;
  if (!getNRDevicePropertySystemBuildVersionSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRDevicePropertySystemBuildVersion");
    v4[3] = (uint64_t)v0;
    getNRDevicePropertySystemBuildVersionSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E16E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getNRDevicePropertySystemBuildVersion()
{
  id *NRDevicePropertySystemBuildVersionSymbolLoc;
  uint64_t v2;

  NRDevicePropertySystemBuildVersionSymbolLoc = (id *)getNRDevicePropertySystemBuildVersionSymbolLoc();
  if (NRDevicePropertySystemBuildVersionSymbolLoc)
    return *NRDevicePropertySystemBuildVersionSymbolLoc;
  dlerror();
  v2 = abort_report_np();
  return (id)getNRDevicePropertyProductTypeSymbolLoc(v2);
}

void *getNRDevicePropertyProductTypeSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRDevicePropertyProductTypeSymbolLoc_ptr;
  v6 = getNRDevicePropertyProductTypeSymbolLoc_ptr;
  if (!getNRDevicePropertyProductTypeSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRDevicePropertyProductType");
    v4[3] = (uint64_t)v0;
    getNRDevicePropertyProductTypeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E17AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getNRDevicePropertyProductType()
{
  id *NRDevicePropertyProductTypeSymbolLoc;
  uint64_t v2;

  NRDevicePropertyProductTypeSymbolLoc = (id *)getNRDevicePropertyProductTypeSymbolLoc();
  if (NRDevicePropertyProductTypeSymbolLoc)
    return *NRDevicePropertyProductTypeSymbolLoc;
  dlerror();
  v2 = abort_report_np();
  return (id)getNRDevicePropertyScreenScaleSymbolLoc(v2);
}

void *getNRDevicePropertyScreenScaleSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRDevicePropertyScreenScaleSymbolLoc_ptr;
  v6 = getNRDevicePropertyScreenScaleSymbolLoc_ptr;
  if (!getNRDevicePropertyScreenScaleSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRDevicePropertyScreenScale");
    v4[3] = (uint64_t)v0;
    getNRDevicePropertyScreenScaleSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E1874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getNRDevicePropertyScreenScale()
{
  id *NRDevicePropertyScreenScaleSymbolLoc;
  uint64_t v2;

  NRDevicePropertyScreenScaleSymbolLoc = (id *)getNRDevicePropertyScreenScaleSymbolLoc();
  if (NRDevicePropertyScreenScaleSymbolLoc)
    return *NRDevicePropertyScreenScaleSymbolLoc;
  dlerror();
  v2 = abort_report_np();
  return (id)getNRDevicePropertyIsActiveSymbolLoc(v2);
}

void *getNRDevicePropertyIsActiveSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRDevicePropertyIsActiveSymbolLoc_ptr;
  v6 = getNRDevicePropertyIsActiveSymbolLoc_ptr;
  if (!getNRDevicePropertyIsActiveSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRDevicePropertyIsActive");
    v4[3] = (uint64_t)v0;
    getNRDevicePropertyIsActiveSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E193C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getNRDevicePropertyIsActive()
{
  id *NRDevicePropertyIsActiveSymbolLoc;

  NRDevicePropertyIsActiveSymbolLoc = (id *)getNRDevicePropertyIsActiveSymbolLoc();
  if (NRDevicePropertyIsActiveSymbolLoc)
    return *NRDevicePropertyIsActiveSymbolLoc;
  dlerror();
  abort_report_np();
  return getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc();
}

void *getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr;
  v6 = getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr;
  if (!getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRPairedDeviceRegistryDevicesDidUpdateNotification");
    v4[3] = (uint64_t)v0;
    getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E1A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getNRPairedDeviceRegistryDevicesDidUpdateNotification()
{
  id *NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc;

  NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc = (id *)getNRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc();
  if (NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc)
    return *NRPairedDeviceRegistryDevicesDidUpdateNotificationSymbolLoc;
  dlerror();
  abort_report_np();
  return getNRWatchOSVersionForRemoteDeviceSymbolLoc();
}

void *getNRWatchOSVersionForRemoteDeviceSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr;
  v6 = getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr;
  if (!getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRWatchOSVersionForRemoteDevice");
    v4[3] = (uint64_t)v0;
    getNRWatchOSVersionForRemoteDeviceSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E1ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t geoNRWatchOSVersionForRemoteDevice(void *a1)
{
  id v1;
  uint64_t (*NRWatchOSVersionForRemoteDeviceSymbolLoc)(id);
  uint64_t v3;
  uint64_t v5;

  v1 = a1;
  NRWatchOSVersionForRemoteDeviceSymbolLoc = (uint64_t (*)(id))getNRWatchOSVersionForRemoteDeviceSymbolLoc();
  if (NRWatchOSVersionForRemoteDeviceSymbolLoc)
  {
    v3 = NRWatchOSVersionForRemoteDeviceSymbolLoc(v1);

    return v3;
  }
  else
  {
    dlerror();
    v5 = abort_report_np();
    return getNRVersionIsGreaterThanOrEqualSymbolLoc(v5);
  }
}

void *getNRVersionIsGreaterThanOrEqualSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr;
  v6 = getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr;
  if (!getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr)
  {
    v1 = (void *)NanoRegistryLibrary();
    v0 = dlsym(v1, "NRVersionIsGreaterThanOrEqual");
    v4[3] = (uint64_t)v0;
    getNRVersionIsGreaterThanOrEqualSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1896E1BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id geoNRVersionIsGreaterThanOrEqual(uint64_t a1, uint64_t a2)
{
  uint64_t (*NRVersionIsGreaterThanOrEqualSymbolLoc)(uint64_t, uint64_t);
  void *v6;
  SEL v7;
  GEOSessionID v8;

  NRVersionIsGreaterThanOrEqualSymbolLoc = (uint64_t (*)(uint64_t, uint64_t))getNRVersionIsGreaterThanOrEqualSymbolLoc();
  if (NRVersionIsGreaterThanOrEqualSymbolLoc)
    return (id)NRVersionIsGreaterThanOrEqualSymbolLoc(a1, a2);
  dlerror();
  v6 = (void *)abort_report_np();
  return +[GEOUserSession highBytesStringFromSession:](v6, v7, v8);
}

uint64_t onLocationServicesResetNotification()
{
  return _setValue(GeoUserSessionConfig_LongSessionDataByAppID, (uint64_t)off_1EDF49B80, 0, 0, 0);
}

void sub_1896E1F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896E2118(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1896E2384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;

  _Block_object_dispose(&a36, 8);
  _Block_object_dispose((const void *)(v36 - 200), 8);
  _Block_object_dispose((const void *)(v36 - 168), 8);
  _Block_object_dispose((const void *)(v36 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1896E2CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  uint64_t v48;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose(&a42, 8);
  _Block_object_dispose(&a48, 8);
  _Block_object_dispose((const void *)(v48 - 232), 8);
  _Block_object_dispose((const void *)(v48 - 200), 8);
  _Block_object_dispose((const void *)(v48 - 168), 8);
  _Block_object_dispose((const void *)(v48 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1896E2F34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1896E365C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1896E37F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896E3A28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1896E3C6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1896E3FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  os_unfair_lock_s *v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  os_unfair_lock_unlock(v17);
  _Unwind_Resume(a1);
}

void sub_1896E41D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1896E5D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896E5F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896E61E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896E6534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1896E6668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896E6E10(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1896E6FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896E7508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1896E7AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOStringForDuration(uint64_t a1, double a2)
{
  double v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;

  v3 = ceil(a2 / 60.0) * 60.0;
  objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (+[GEOComposedString hasLocalizationProvider](GEOComposedString, "hasLocalizationProvider"))
  {
    +[GEOComposedString localizationProvider](GEOComposedString, "localizationProvider");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "locale");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setLocale:", v6);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99DC8], "autoupdatingCurrentLocale");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setLocale:", v5);
  }

  v7 = objc_alloc_init(MEMORY[0x1E0CB3570]);
  objc_msgSend(v7, "setCalendar:", v4);
  objc_msgSend(v7, "setZeroFormattingBehavior:", 14);
  objc_msgSend(v7, "setAllowedUnits:", 112);
  objc_msgSend(v7, "setMaximumUnitCount:", 2);
  objc_msgSend(v7, "setUnitsStyle:", a1);
  objc_msgSend(v7, "stringFromTimeInterval:", v3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "length"))
  {
    objc_msgSend(v8, "stringByReplacingOccurrencesOfString:withString:", CFSTR(","), &stru_1E1C241D0);
    v9 = objc_claimAutoreleasedReturnValue();

    v8 = (void *)v9;
  }

  return v8;
}

BOOL GEOBookedTableReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  void *v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  BOOL v111;
  uint64_t v112;
  _BOOL8 v113;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_WORD *)(a1 + 36) |= 2u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              v23 = v22 + 1;
              if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0)
                goto LABEL_115;
              v18 += 7;
              v15 = v19++ >= 9;
              if (v15)
              {
                v20 = 0;
                goto LABEL_117;
              }
            }
            v3[*v6] = 1;
LABEL_115:
            if (v3[*v6])
              v20 = 0;
LABEL_117:
            v111 = v20 != 0;
            v112 = 24;
            goto LABEL_166;
          case 2u:
            v25 = 0;
            v26 = 0;
            v27 = 0;
            *(_WORD *)(a1 + 36) |= 8u;
            while (2)
            {
              v28 = *v4;
              v29 = *(_QWORD *)&v3[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v31 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v29);
                *(_QWORD *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  v15 = v26++ >= 9;
                  if (v15)
                  {
                    v27 = 0;
                    goto LABEL_121;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v27 = 0;
LABEL_121:
            v111 = v27 != 0;
            v112 = 26;
            goto LABEL_166;
          case 3u:
            v32 = 0;
            v33 = 0;
            v34 = 0;
            *(_WORD *)(a1 + 36) |= 0x1000u;
            while (2)
            {
              v35 = *v4;
              v36 = *(_QWORD *)&v3[v35];
              v37 = v36 + 1;
              if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
                *(_QWORD *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  v15 = v33++ >= 9;
                  if (v15)
                  {
                    v34 = 0;
                    goto LABEL_125;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v34 = 0;
LABEL_125:
            v111 = v34 != 0;
            v112 = 35;
            goto LABEL_166;
          case 4u:
            v39 = 0;
            v40 = 0;
            v41 = 0;
            *(_WORD *)(a1 + 36) |= 0x200u;
            while (2)
            {
              v42 = *v4;
              v43 = *(_QWORD *)&v3[v42];
              v44 = v43 + 1;
              if (v43 == -1 || v44 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v45 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v43);
                *(_QWORD *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  v15 = v40++ >= 9;
                  if (v15)
                  {
                    v41 = 0;
                    goto LABEL_129;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v41 = 0;
LABEL_129:
            v111 = v41 != 0;
            v112 = 32;
            goto LABEL_166;
          case 5u:
            v46 = 0;
            v47 = 0;
            v48 = 0;
            *(_WORD *)(a1 + 36) |= 0x800u;
            while (2)
            {
              v49 = *v4;
              v50 = *(_QWORD *)&v3[v49];
              v51 = v50 + 1;
              if (v50 == -1 || v51 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v52 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v50);
                *(_QWORD *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  v15 = v47++ >= 9;
                  if (v15)
                  {
                    v48 = 0;
                    goto LABEL_133;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v48 = 0;
LABEL_133:
            v111 = v48 != 0;
            v112 = 34;
            goto LABEL_166;
          case 6u:
            v53 = 0;
            v54 = 0;
            v55 = 0;
            *(_WORD *)(a1 + 36) |= 0x400u;
            while (2)
            {
              v56 = *v4;
              v57 = *(_QWORD *)&v3[v56];
              v58 = v57 + 1;
              if (v57 == -1 || v58 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v59 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v57);
                *(_QWORD *)&v3[v56] = v58;
                v55 |= (unint64_t)(v59 & 0x7F) << v53;
                if (v59 < 0)
                {
                  v53 += 7;
                  v15 = v54++ >= 9;
                  if (v15)
                  {
                    v55 = 0;
                    goto LABEL_137;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v55 = 0;
LABEL_137:
            v111 = v55 != 0;
            v112 = 33;
            goto LABEL_166;
          case 7u:
            v60 = 0;
            v61 = 0;
            v62 = 0;
            *(_WORD *)(a1 + 36) |= 0x10u;
            while (2)
            {
              v63 = *v4;
              v64 = *(_QWORD *)&v3[v63];
              v65 = v64 + 1;
              if (v64 == -1 || v65 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v66 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v64);
                *(_QWORD *)&v3[v63] = v65;
                v62 |= (unint64_t)(v66 & 0x7F) << v60;
                if (v66 < 0)
                {
                  v60 += 7;
                  v15 = v61++ >= 9;
                  if (v15)
                  {
                    v62 = 0;
                    goto LABEL_141;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v62 = 0;
LABEL_141:
            v111 = v62 != 0;
            v112 = 27;
            goto LABEL_166;
          case 8u:
            PBReaderReadString();
            v67 = objc_claimAutoreleasedReturnValue();
            v68 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v67;

            continue;
          case 9u:
            v69 = 0;
            v70 = 0;
            v71 = 0;
            *(_WORD *)(a1 + 36) |= 1u;
            while (2)
            {
              v72 = *v4;
              v73 = *(_QWORD *)&v3[v72];
              v74 = v73 + 1;
              if (v73 == -1 || v74 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v75 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v73);
                *(_QWORD *)&v3[v72] = v74;
                v71 |= (unint64_t)(v75 & 0x7F) << v69;
                if (v75 < 0)
                {
                  v69 += 7;
                  v15 = v70++ >= 9;
                  if (v15)
                  {
                    v71 = 0;
                    goto LABEL_145;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v71 = 0;
LABEL_145:
            *(_QWORD *)(a1 + 16) = v71;
            continue;
          case 0xAu:
            v76 = 0;
            v77 = 0;
            v78 = 0;
            *(_WORD *)(a1 + 36) |= 4u;
            while (2)
            {
              v79 = *v4;
              v80 = *(_QWORD *)&v3[v79];
              v81 = v80 + 1;
              if (v80 == -1 || v81 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v82 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v80);
                *(_QWORD *)&v3[v79] = v81;
                v78 |= (unint64_t)(v82 & 0x7F) << v76;
                if (v82 < 0)
                {
                  v76 += 7;
                  v15 = v77++ >= 9;
                  if (v15)
                  {
                    v78 = 0;
                    goto LABEL_149;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v78 = 0;
LABEL_149:
            v111 = v78 != 0;
            v112 = 25;
            goto LABEL_166;
          case 0xBu:
            v83 = 0;
            v84 = 0;
            v85 = 0;
            *(_WORD *)(a1 + 36) |= 0x20u;
            while (2)
            {
              v86 = *v4;
              v87 = *(_QWORD *)&v3[v86];
              v88 = v87 + 1;
              if (v87 == -1 || v88 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v89 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v87);
                *(_QWORD *)&v3[v86] = v88;
                v85 |= (unint64_t)(v89 & 0x7F) << v83;
                if (v89 < 0)
                {
                  v83 += 7;
                  v15 = v84++ >= 9;
                  if (v15)
                  {
                    v85 = 0;
                    goto LABEL_153;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v85 = 0;
LABEL_153:
            v111 = v85 != 0;
            v112 = 28;
            goto LABEL_166;
          case 0xCu:
            v90 = 0;
            v91 = 0;
            v92 = 0;
            *(_WORD *)(a1 + 36) |= 0x100u;
            while (2)
            {
              v93 = *v4;
              v94 = *(_QWORD *)&v3[v93];
              v95 = v94 + 1;
              if (v94 == -1 || v95 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v96 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v94);
                *(_QWORD *)&v3[v93] = v95;
                v92 |= (unint64_t)(v96 & 0x7F) << v90;
                if (v96 < 0)
                {
                  v90 += 7;
                  v15 = v91++ >= 9;
                  if (v15)
                  {
                    v92 = 0;
                    goto LABEL_157;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v92 = 0;
LABEL_157:
            v111 = v92 != 0;
            v112 = 31;
            goto LABEL_166;
          case 0xDu:
            v97 = 0;
            v98 = 0;
            v99 = 0;
            *(_WORD *)(a1 + 36) |= 0x80u;
            while (2)
            {
              v100 = *v4;
              v101 = *(_QWORD *)&v3[v100];
              v102 = v101 + 1;
              if (v101 == -1 || v102 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v103 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v101);
                *(_QWORD *)&v3[v100] = v102;
                v99 |= (unint64_t)(v103 & 0x7F) << v97;
                if (v103 < 0)
                {
                  v97 += 7;
                  v15 = v98++ >= 9;
                  if (v15)
                  {
                    v99 = 0;
                    goto LABEL_161;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              v99 = 0;
LABEL_161:
            v111 = v99 != 0;
            v112 = 30;
            goto LABEL_166;
          case 0xEu:
            v104 = 0;
            v105 = 0;
            v106 = 0;
            *(_WORD *)(a1 + 36) |= 0x40u;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_169;
            continue;
        }
        while (1)
        {
          v107 = *v4;
          v108 = *(_QWORD *)&v3[v107];
          v109 = v108 + 1;
          if (v108 == -1 || v109 > *(_QWORD *)&v3[*v5])
            break;
          v110 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v108);
          *(_QWORD *)&v3[v107] = v109;
          v106 |= (unint64_t)(v110 & 0x7F) << v104;
          if ((v110 & 0x80) == 0)
            goto LABEL_163;
          v104 += 7;
          v15 = v105++ >= 9;
          if (v15)
          {
            v106 = 0;
            goto LABEL_165;
          }
        }
        v3[*v6] = 1;
LABEL_163:
        if (v3[*v6])
          v106 = 0;
LABEL_165:
        v111 = v106 != 0;
        v112 = 29;
LABEL_166:
        *(_BYTE *)(a1 + v112) = v111;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v113 = v3[*v6] == 0;
  }
  else
  {
LABEL_169:
    v113 = 0;
  }
  objc_sync_exit(v3);

  return v113;
}

void sub_1896E9E40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBookedTableReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOBookedTableReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896E9EA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBookedTableIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  _BOOL8 v83;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 8u:
          if (v15 == 2)
            goto LABEL_76;
          goto LABEL_130;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v58 = 0;
          while (1)
          {
            v59 = *v2;
            v60 = *(_QWORD *)&a1[v59];
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
            *(_QWORD *)&a1[v59] = v61;
            if (v62 < 0)
            {
              v22 = v58++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v63 = 0;
          while (1)
          {
            v64 = *v2;
            v65 = *(_QWORD *)&a1[v64];
            v66 = v65 + 1;
            if (v65 == -1 || v66 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v67 = *(char *)(*(_QWORD *)&a1[*v5] + v65);
            *(_QWORD *)&a1[v64] = v66;
            if (v67 < 0)
            {
              v22 = v63++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v68 = 0;
          while (1)
          {
            v69 = *v2;
            v70 = *(_QWORD *)&a1[v69];
            v71 = v70 + 1;
            if (v70 == -1 || v71 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v72 = *(char *)(*(_QWORD *)&a1[*v5] + v70);
            *(_QWORD *)&a1[v69] = v71;
            if (v72 < 0)
            {
              v22 = v68++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v73 = 0;
          while (1)
          {
            v74 = *v2;
            v75 = *(_QWORD *)&a1[v74];
            v76 = v75 + 1;
            if (v75 == -1 || v76 > *(_QWORD *)&a1[*v3])
              goto LABEL_126;
            v77 = *(char *)(*(_QWORD *)&a1[*v5] + v75);
            *(_QWORD *)&a1[v74] = v76;
            if (v77 < 0)
            {
              v22 = v73++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_127;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_130;
          v78 = 0;
          break;
        default:
LABEL_76:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_130:
          v83 = 0;
          goto LABEL_129;
      }
      while (1)
      {
        v79 = *v2;
        v80 = *(_QWORD *)&a1[v79];
        v81 = v80 + 1;
        if (v80 == -1 || v81 > *(_QWORD *)&a1[*v3])
          break;
        v82 = *(char *)(*(_QWORD *)&a1[*v5] + v80);
        *(_QWORD *)&a1[v79] = v81;
        if (v82 < 0)
        {
          v22 = v78++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_127;
      }
LABEL_126:
      a1[*v4] = 1;
LABEL_127:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v83 = a1[*v4] == 0;
LABEL_129:
  PBReaderRecallMark();
  return v83;
}

void sub_1896EB4A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookedSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  int *v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOBookedTable *v38;
  int v39;
  char v40;
  char v41;
  char v42;
  int v43;
  int v44;
  void *v45;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  v16 = (int *)MEMORY[0x1E0D82BC8];
  if (v12)
    v17 = 1;
  else
    v17 = v14 == 0;
  v18 = (int *)MEMORY[0x1E0D82BB8];
  v19 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v16))
      goto LABEL_61;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v15;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_27;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v16) = 1;
LABEL_27:
    v28 = *(unsigned __int8 *)(v3 + *v16);
    if (*(_BYTE *)(v3 + *v16))
      v22 = 0;
LABEL_29:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      if (v13)
      {
        v42 = 1;
        goto LABEL_74;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v44 = *v14++;
            v43 = v44;
            if (v44 != 1 && v43 != 2)
              break;
            *(_BYTE *)(a1 + v19[605]) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_75;
    }
    v30 = v22 >> 3;
    v31 = v13;
    if (!v17)
    {
      v32 = v14;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 != 2)
    {
      if ((_DWORD)v30 != 1)
      {
        v39 = PBReaderSkipValueWithTag();
        v16 = (int *)MEMORY[0x1E0D82BC8];
        if (!v39)
          goto LABEL_70;
        goto LABEL_57;
      }
      if (v31)
      {
        if ((*(_BYTE *)(a1 + v19[605]) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_71:
            v42 = 0;
            goto LABEL_73;
          }
          v8 -= *(_BYTE *)(a1 + v19[605]) & 1;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v36;

          --v8;
        }
LABEL_56:
        v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_57:
        if (v8)
          v41 = 1;
        else
          v41 = v13;
        if ((v41 & 1) == 0)
          goto LABEL_61;
        continue;
      }
LABEL_52:
      v40 = PBReaderSkipValueWithTag();
      v16 = (int *)MEMORY[0x1E0D82BC8];
      if ((v40 & 1) == 0)
      {
LABEL_70:
        v42 = 0;
        goto LABEL_74;
      }
      goto LABEL_57;
    }
    break;
  }
  if (!v31 || (*(_BYTE *)(a1 + v19[605]) & 2) != 0)
    goto LABEL_52;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v38 = objc_alloc_init(GEOBookedTable);
  if (GEOBookedTableReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLogMsgEventTableBookedSession _addNoFlagsBookedTable:](a1, v38);

    v19 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
    goto LABEL_56;
  }

  v42 = 0;
  v19 = &OBJC_IVAR___GEOPlaceIdentifier__unknownFields;
LABEL_73:
  v16 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  *(_BYTE *)(a1 + v19[605]) |= 1u;
  *(_BYTE *)(a1 + v19[605]) |= 2u;
  if ((v42 & 1) != 0)
  {
LABEL_75:
    v3 = *(_BYTE *)(v3 + *v16) == 0;
    if (!v13)
      return v3;
    goto LABEL_76;
  }
  v3 = 0;
  if (v13)
  {
LABEL_76:
    v45 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1896EB9DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EC1E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventTableBookedSessionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLogMsgEventTableBookedSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventTableBookedSessionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventTableBookedSessionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventTableBookedSessionReadAllFrom_initialTag;
  Specified = GEOLogMsgEventTableBookedSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventTableBookedSessionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1896EC468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookedSessionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTableBookedSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896EC4C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookedSessionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  _BOOL8 v17;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOBookedTableIsValid(a1))
          goto LABEL_29;
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1896EC8D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookedSessionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1896ECC80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896ED07C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookingSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  const float *v10;
  uint32x4_t v11;
  int8x16_t v12;
  unsigned int v13;
  unsigned int v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  void *v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  char v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  void *v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  int v122;
  char v123;
  int v124;
  int v125;
  int v126;
  void *v127;
  void *v129;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (const float *)(a1 + 112);
  v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  v13 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_189CE18E0), v12));
  while (1)
  {
    v14 = a3[v8];
    if (v14 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  v15 = v9 | (v13 > 2);
  if (v9 & 1 | (v13 > 2) | v7 & 1)
    v16 = 0;
  else
    v16 = a3;
  v17 = (int *)MEMORY[0x1E0D82BF0];
  v18 = (int *)MEMORY[0x1E0D82BC8];
  v19 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_207;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      v27 = v21++ >= 9;
      if (v27)
      {
        v22 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_207:
      if ((v15 & 1) != 0)
      {
        v123 = 1;
        goto LABEL_223;
      }
      if (!v16)
        goto LABEL_224;
      while (1)
      {
        while (1)
        {
          v125 = *v16++;
          v124 = v125;
          if (v125 <= 9)
            break;
          if (v124 == 10)
          {
            v126 = 0x8000;
LABEL_219:
            *(_DWORD *)(a1 + 112) |= v126;
          }
          else if (v124 == 16)
          {
            v126 = 0x4000;
            goto LABEL_219;
          }
        }
        switch(v124)
        {
          case 1:
            v126 = 0x2000;
            goto LABEL_219;
          case 4:
            v126 = 4096;
            goto LABEL_219;
          case 0:
            goto LABEL_224;
        }
      }
    }
    v30 = v22 >> 3;
    v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 113) & 0x20) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 40;
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_229;
        v122 = (int)(*(_DWORD *)(a1 + 112) << 18) >> 31;
        goto LABEL_202;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v39 = 0;
        v40 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          v42 = *v17;
          v43 = *(_QWORD *)(v3 + v42);
          v44 = v43 + 1;
          if (v43 == -1 || v44 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
            *(_QWORD *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              v27 = v40++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v41) = 0;
LABEL_152:
        v118 = 92;
        goto LABEL_182;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v46 = 0;
        v47 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 112) |= 0x20u;
        while (2)
        {
          v48 = *v17;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v41) = 0;
LABEL_156:
        v118 = 96;
        goto LABEL_182;
      case 4:
        if (!v31)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 113) & 0x10) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 32;
          goto LABEL_101;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_229;
        v122 = (int)(*(_DWORD *)(a1 + 112) << 19) >> 31;
        goto LABEL_202;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        *(_DWORD *)(a1 + 112) |= 8u;
        while (2)
        {
          v55 = *v17;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v27 = v53++ >= 9;
              if (v27)
              {
                v54 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v54 = 0;
LABEL_160:
        v119 = 72;
        goto LABEL_169;
      case 6:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v59 = 0;
        v60 = 0;
        v54 = 0;
        *(_DWORD *)(a1 + 112) |= 2u;
        while (2)
        {
          v61 = *v17;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v54 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v27 = v60++ >= 9;
              if (v27)
              {
                v54 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v54 = 0;
LABEL_164:
        v119 = 24;
        goto LABEL_169;
      case 7:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v65 = 0;
        v66 = 0;
        v54 = 0;
        *(_DWORD *)(a1 + 112) |= 1u;
        while (2)
        {
          v67 = *v17;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v54 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              v27 = v66++ >= 9;
              if (v27)
              {
                v54 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v54 = 0;
LABEL_168:
        v119 = 16;
LABEL_169:
        *(_QWORD *)(a1 + v119) = v54;
        goto LABEL_206;
      case 8:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        *(_DWORD *)(a1 + 112) |= 4u;
        v71 = *v17;
        v72 = *(_QWORD *)(v3 + v71);
        if (v72 <= 0xFFFFFFFFFFFFFFF7 && v72 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v73 = *(_QWORD *)(*(_QWORD *)(v3 + *v19) + v72);
          *(_QWORD *)(v3 + v71) = v72 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v18) = 1;
          v73 = 0;
        }
        *(_QWORD *)(a1 + 48) = v73;
        goto LABEL_206;
      case 9:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        while (2)
        {
          v77 = *v17;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v27 = v75++ >= 9;
              if (v27)
              {
                v76 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v76 = 0;
LABEL_173:
        v120 = v76 != 0;
        v121 = 106;
        goto LABEL_195;
      case 10:
        if (!v31)
          goto LABEL_147;
        if ((*(_BYTE *)(a1 + 113) & 0x80) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = 64;
LABEL_101:
          v81 = *(void **)(a1 + v37);
          *(_QWORD *)(a1 + v37) = v36;

          --v8;
          goto LABEL_203;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v122 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
LABEL_202:
          v8 += v122;
LABEL_203:
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_206:
          if (!(v15 & 1 | (v8 != 0)))
            goto LABEL_207;
          continue;
        }
LABEL_229:
        v123 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_223:
        *(_DWORD *)(a1 + 112) |= 0x2000u;
        *(_DWORD *)(a1 + 112) |= 0x1000u;
        *(_DWORD *)(a1 + 112) |= 0x8000u;
        *(_DWORD *)(a1 + 112) |= 0x4000u;
        if ((v123 & 1) != 0)
        {
LABEL_224:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_225;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_225:
            v127 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 11:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v82 = 0;
        v83 = 0;
        v84 = 0;
        *(_DWORD *)(a1 + 112) |= 0x100u;
        while (2)
        {
          v85 = *v17;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v27 = v83++ >= 9;
              if (v27)
              {
                v84 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v84 = 0;
LABEL_177:
        v120 = v84 != 0;
        v121 = 105;
        goto LABEL_195;
      case 12:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v89 = 0;
        v90 = 0;
        v41 = 0;
        *(_DWORD *)(a1 + 112) |= 0x40u;
        while (2)
        {
          v91 = *v17;
          v92 = *(_QWORD *)(v3 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v41 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v27 = v90++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v41) = 0;
LABEL_181:
        v118 = 100;
LABEL_182:
        *(_DWORD *)(a1 + v118) = v41;
        goto LABEL_206;
      case 13:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v95 = 0;
        v96 = 0;
        v97 = 0;
        *(_DWORD *)(a1 + 112) |= 0x80u;
        while (2)
        {
          v98 = *v17;
          v99 = *(_QWORD *)(v3 + v98);
          v100 = v99 + 1;
          if (v99 == -1 || v100 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v101 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v99);
            *(_QWORD *)(v3 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              v27 = v96++ >= 9;
              if (v27)
              {
                v97 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v97 = 0;
LABEL_186:
        v120 = v97 != 0;
        v121 = 104;
        goto LABEL_195;
      case 14:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v102 = 0;
        v103 = 0;
        v104 = 0;
        *(_DWORD *)(a1 + 112) |= 0x400u;
        while (2)
        {
          v105 = *v17;
          v106 = *(_QWORD *)(v3 + v105);
          v107 = v106 + 1;
          if (v106 == -1 || v107 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v106);
            *(_QWORD *)(v3 + v105) = v107;
            v104 |= (unint64_t)(v108 & 0x7F) << v102;
            if (v108 < 0)
            {
              v102 += 7;
              v27 = v103++ >= 9;
              if (v27)
              {
                v104 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v104 = 0;
LABEL_190:
        v120 = v104 != 0;
        v121 = 107;
        goto LABEL_195;
      case 15:
        if ((v7 & 1) == 0)
          goto LABEL_147;
        v109 = 0;
        v110 = 0;
        v111 = 0;
        *(_DWORD *)(a1 + 112) |= 0x800u;
        while (2)
        {
          v112 = *v17;
          v113 = *(_QWORD *)(v3 + v112);
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              v27 = v110++ >= 9;
              if (v27)
              {
                v111 = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          v111 = 0;
LABEL_194:
        v120 = v111 != 0;
        v121 = 108;
LABEL_195:
        *(_BYTE *)(a1 + v121) = v120;
        goto LABEL_206;
      case 16:
        if (v31 && (*(_BYTE *)(a1 + 113) & 0x40) == 0)
        {
          PBReaderReadString();
          v116 = (void *)objc_claimAutoreleasedReturnValue();
          if (v116)
          {
            v129 = v116;
            -[GEOLogMsgEventTableBookingSession _addNoFlagsErrorMessage:](a1, v116);
            v116 = v129;
          }

          goto LABEL_203;
        }
LABEL_147:
        v117 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if ((v117 & 1) == 0)
        {
LABEL_222:
          v123 = 0;
          goto LABEL_223;
        }
        goto LABEL_206;
      default:
        v38 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (!v38)
          goto LABEL_222;
        goto LABEL_206;
    }
  }
}

void sub_1896EE320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EE6D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EEAA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896EFCB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookingSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventTableBookingSessionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventTableBookingSessionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventTableBookingSessionReadAllFrom_initialTag;
  Specified = GEOLogMsgEventTableBookingSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1896EFE38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTableBookingSessionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventTableBookingSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1896EFE98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookingSessionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  _BOOL8 v77;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_126;
          goto LABEL_122;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v18 = 0;
          while (1)
          {
            v19 = *v2;
            v20 = *(_QWORD *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v22 = *(char *)(*(_QWORD *)&a1[*v5] + v20);
            *(_QWORD *)&a1[v19] = v21;
            if (v22 < 0)
            {
              v23 = v18++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v24 = 0;
          while (1)
          {
            v25 = *v2;
            v26 = *(_QWORD *)&a1[v25];
            v27 = v26 + 1;
            if (v26 == -1 || v27 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v28 = *(char *)(*(_QWORD *)&a1[*v5] + v26);
            *(_QWORD *)&a1[v25] = v27;
            if (v28 < 0)
            {
              v23 = v24++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 4u:
          if (v16 == 2)
            goto LABEL_122;
          goto LABEL_126;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v29 = 0;
          while (1)
          {
            v30 = *v2;
            v31 = *(_QWORD *)&a1[v30];
            v32 = v31 + 1;
            if (v31 == -1 || v32 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v33 = *(char *)(*(_QWORD *)&a1[*v5] + v31);
            *(_QWORD *)&a1[v30] = v32;
            if (v33 < 0)
            {
              v23 = v29++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v23 = v34++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v23 = v39++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 8u:
          if (v16 != 1)
            goto LABEL_126;
          v44 = *v2;
          v45 = *(_QWORD *)&a1[v44];
          if (v45 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_120;
          v46 = v45 + 8;
          if (v46 > *(_QWORD *)&a1[*v3])
            goto LABEL_120;
          *(_QWORD *)&a1[v44] = v46;
          continue;
        case 9u:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v23 = v47++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 0xAu:
          if (v16 == 2)
            goto LABEL_122;
          goto LABEL_126;
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v23 = v52++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v23 = v57++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v23 = v62++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_119;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v23 = v67++ > 8;
              if (!v23)
                continue;
            }
            goto LABEL_123;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_126;
          v72 = 0;
          break;
        case 0x10u:
          if (v16 != 2)
            goto LABEL_126;
LABEL_122:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_126:
          v77 = 0;
          goto LABEL_125;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_126;
          continue;
      }
      while (1)
      {
        v73 = *v2;
        v74 = *(_QWORD *)&a1[v73];
        v75 = v74 + 1;
        if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
          break;
        v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
        *(_QWORD *)&a1[v73] = v75;
        if (v76 < 0)
        {
          v23 = v72++ > 8;
          if (!v23)
            continue;
        }
        goto LABEL_123;
      }
LABEL_119:
      v14 = *v4;
LABEL_120:
      a1[v14] = 1;
LABEL_123:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v77 = a1[*v4] == 0;
LABEL_125:
  PBReaderRecallMark();
  return v77;
}

void sub_1896F0858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTableBookingSessionIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 22);
  v2 = (a1[28]._os_unfair_lock_opaque & 0x1F000) != 0;
  os_unfair_lock_unlock(a1 + 22);
  return v2;
}

void sub_1896F1044(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1896F3ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetRRMetadataRecorderLog()
{
  if (qword_1ECDBCA80 != -1)
    dispatch_once(&qword_1ECDBCA80, &__block_literal_global_183);
  return (id)_MergedGlobals_319;
}

void sub_1896F89EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896F8A78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1896F8AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)GEOProbeCrumbs;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_1896F9298(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  operator delete(v1);
  if (v2)
    operator delete(v2);
  _Unwind_Resume(a1);
}

id GEOGetGEOProbeCrumbsLog(void)
{
  if (qword_1ECDBCA90 != -1)
    dispatch_once(&qword_1ECDBCA90, &__block_literal_global_184);
  return (id)_MergedGlobals_320;
}

void sub_1896F954C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896F97FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1896F9D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  void *v23;

  if (a22 < 0)
    operator delete(__p);
  maps::path_codec::geo3::RiceEncodedIntegers::~RiceEncodedIntegers((maps::path_codec::geo3::RiceEncodedIntegers *)&a23);

  _Unwind_Resume(a1);
}

void ___ZL23GEOGetGEOProbeCrumbsLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "GEOProbeCrumbs");
  v1 = (void *)_MergedGlobals_320;
  _MergedGlobals_320 = (uint64_t)v0;

}

id loadResource(void *a1, objc_class *a2)
{
  NSObject *v3;
  void *v4;
  NSObject *v5;
  BOOL v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  id v16;
  id v17;
  uint8_t buf[4];
  NSObject *v19;
  __int16 v20;
  NSObject *v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v17 = 0;
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithContentsOfFile:options:error:", v3, 0, &v17);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v17;
  if (v4)
    v6 = v5 == 0;
  else
    v6 = 0;
  if (!v6)
  {
    v7 = v5;
    GEOGetPublisherAttributionLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v19 = v3;
      v20 = 2112;
      v21 = v7;
      _os_log_impl(&dword_1885A9000, v8, OS_LOG_TYPE_ERROR, "Couldn't read \"%@\": %@", buf, 0x16u);
    }
LABEL_21:
    v10 = 0;
    goto LABEL_22;
  }
  -[NSObject pathExtension](v3, "pathExtension");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "lowercaseString");
  v8 = objc_claimAutoreleasedReturnValue();

  if (-[NSObject isEqualToString:](v8, "isEqualToString:", CFSTR("pb")))
  {
    v10 = (void *)objc_msgSend([a2 alloc], "initWithData:", v4);
    v7 = 0;
  }
  else
  {
    if ((-[NSObject isEqualToString:](v8, "isEqualToString:", CFSTR("json")) & 1) == 0
      && !-[NSObject containsString:](v3, "containsString:", CFSTR(".json")))
    {
      GEOGetPublisherAttributionLog();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v19 = v8;
        v20 = 2112;
        v21 = v3;
        _os_log_impl(&dword_1885A9000, v14, OS_LOG_TYPE_ERROR, "Unrecognized file extension \"%@\" on %@", buf, 0x16u);
      }

      v7 = 0;
      goto LABEL_21;
    }
    v16 = 0;
    objc_msgSend(MEMORY[0x1E0CB36D8], "JSONObjectWithData:options:error:", v4, 0, &v16);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v16;
    v7 = v12;
    if (!v11 || v12)
    {
      GEOGetPublisherAttributionLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412546;
        v19 = v3;
        v20 = 2112;
        v21 = v7;
        _os_log_impl(&dword_1885A9000, v13, OS_LOG_TYPE_ERROR, "Couldn't parse json \"%@\": %@", buf, 0x16u);
      }

      v10 = 0;
    }
    else
    {
      v10 = (void *)objc_msgSend([a2 alloc], "initWithJSON:", v11);
    }

  }
LABEL_22:

  return v10;
}

id GEOGetPublisherAttributionLog()
{
  if (qword_1ECDBCAB0 != -1)
    dispatch_once(&qword_1ECDBCAB0, &__block_literal_global_132_0);
  return (id)qword_1ECDBCAA8;
}

void sub_1896FAE08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896FAEF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1896FB2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id a58,uint64_t a59,char a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id a65;
  void *v65;
  void *v66;

  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a60, 8);

  _Unwind_Resume(a1);
}

void sub_1896FB404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1896FB58C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1896FB674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1896FBA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1896FBC38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896FBE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void _addAssetsForMarketMask(void *a1, uint64_t a2, unsigned int a3, int a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  uint64_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  BOOL v20;
  uint64_t *v21;
  _QWORD *v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = *(_QWORD *)(a2 + 8);
  if (v8)
  {
    v9 = a2 + 8;
    do
    {
      v10 = *(unsigned __int8 *)(v8 + 32);
      v11 = v10 >= a3;
      if (v10 >= a3)
        v12 = (uint64_t *)v8;
      else
        v12 = (uint64_t *)(v8 + 8);
      if (v11)
        v9 = v8;
      v8 = *v12;
    }
    while (*v12);
    if (v9 != a2 + 8 && *(unsigned __int8 *)(v9 + 32) <= a3)
    {
      v13 = *(_QWORD **)(v9 + 40);
      v14 = *(_QWORD **)(v9 + 48);
      if (v13 != v14)
      {
        v24 = xmmword_189CE1960;
        do
        {
          v26 = v24;
          *(_QWORD *)((char *)&v26 + 1) = *v13;
          v28 = v26;
          objc_msgSend(v7, "addKey:", &v28, v24, v26);
          ++v13;
        }
        while (v13 != v14);
      }
    }
  }
  v17 = *(_QWORD *)(a2 + 32);
  v16 = a2 + 32;
  v15 = v17;
  if (v17)
  {
    v18 = v16;
    do
    {
      v19 = *(unsigned __int8 *)(v15 + 32);
      v20 = v19 >= a3;
      if (v19 >= a3)
        v21 = (uint64_t *)v15;
      else
        v21 = (uint64_t *)(v15 + 8);
      if (v20)
        v18 = v15;
      v15 = *v21;
    }
    while (*v21);
    if (v18 != v16 && *(unsigned __int8 *)(v18 + 32) <= a3)
    {
      v22 = *(_QWORD **)(v18 + 40);
      v23 = *(_QWORD **)(v18 + 48);
      if (v22 != v23)
      {
        v25 = xmmword_189CE1970;
        do
        {
          v27 = v25;
          *(_QWORD *)((char *)&v27 + 1) = *v22;
          HIBYTE(v27) = 0;
          *(_DWORD *)((char *)&v27 + 11) = a4;
          v28 = v27;
          objc_msgSend(v7, "addKey:", &v28, v25, v27);
          ++v22;
        }
        while (v22 != v23);
      }
    }
  }

}

void sub_1896FBFF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896FC168(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1896FC260(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1896FC400(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1896FC754(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896FC9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1896FCB54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896FCC64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1896FCD14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _errorForResponse(void *a1)
{
  id v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  __CFString *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  uint8_t buf[4];
  const __CFString *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_msgSend(v1, "status");
  if (v2 > 4)
  {
    if (v2 == 5)
    {
      v3 = (void *)MEMORY[0x1E0CB35C8];
      v4 = -10;
      goto LABEL_10;
    }
    if (v2 != 20)
    {
      if (v2 == 60)
      {
        v3 = (void *)MEMORY[0x1E0CB35C8];
        v4 = -28;
LABEL_10:
        objc_msgSend(v3, "GEOErrorWithCode:userInfo:", v4, 0);
        v5 = objc_claimAutoreleasedReturnValue();
        goto LABEL_11;
      }
      goto LABEL_17;
    }
    v7 = (void *)MEMORY[0x1E0CB35C8];
    v8 = objc_msgSend(v1, "status");
    if ((int)v8 <= 29)
    {
      v9 = CFSTR("STATUS_SUCCESS");
      switch((int)v8)
      {
        case 0:
          goto LABEL_50;
        case 1:
          v9 = CFSTR("STATUS_FAILED");
          break;
        case 2:
          v9 = CFSTR("STATUS_INCOMPLETE");
          break;
        case 3:
        case 4:
          goto LABEL_41;
        case 5:
          v9 = CFSTR("INVALID_REQUEST");
          break;
        default:
          if ((_DWORD)v8 != 20)
            goto LABEL_41;
          v9 = CFSTR("FAILED_NO_RESULT");
          break;
      }
      goto LABEL_50;
    }
    if ((int)v8 > 49)
    {
      if ((_DWORD)v8 == 50)
      {
        v9 = CFSTR("STATUS_DEDUPED");
        goto LABEL_50;
      }
      if ((_DWORD)v8 == 60)
      {
        v9 = CFSTR("VERSION_MISMATCH");
        goto LABEL_50;
      }
    }
    else
    {
      if ((_DWORD)v8 == 30)
      {
        v9 = CFSTR("NEEDS_REFINEMENT");
        goto LABEL_50;
      }
      if ((_DWORD)v8 == 40)
      {
        v9 = CFSTR("FAILED_NOT_AUTHORIZED");
LABEL_50:
        v13 = v7;
        v14 = -8;
LABEL_53:
        objc_msgSend(v13, "GEOErrorWithCode:reason:", v14, v9);
        v6 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_54;
      }
    }
LABEL_41:
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), v8);
    v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_50;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      v3 = (void *)MEMORY[0x1E0CB35C8];
      v4 = -8;
      goto LABEL_10;
    }
LABEL_17:
    v10 = (void *)MEMORY[0x1E0CB35C8];
    v11 = objc_msgSend(v1, "status");
    if ((int)v11 <= 29)
    {
      v9 = CFSTR("STATUS_SUCCESS");
      switch((int)v11)
      {
        case 0:
          goto LABEL_52;
        case 1:
          v9 = CFSTR("STATUS_FAILED");
          break;
        case 2:
          v9 = CFSTR("STATUS_INCOMPLETE");
          break;
        case 3:
        case 4:
          goto LABEL_42;
        case 5:
          v9 = CFSTR("INVALID_REQUEST");
          break;
        default:
          if ((_DWORD)v11 != 20)
            goto LABEL_42;
          v9 = CFSTR("FAILED_NO_RESULT");
          break;
      }
      goto LABEL_52;
    }
    if ((int)v11 > 49)
    {
      if ((_DWORD)v11 == 50)
      {
        v9 = CFSTR("STATUS_DEDUPED");
        goto LABEL_52;
      }
      if ((_DWORD)v11 == 60)
      {
        v9 = CFSTR("VERSION_MISMATCH");
        goto LABEL_52;
      }
    }
    else
    {
      if ((_DWORD)v11 == 30)
      {
        v9 = CFSTR("NEEDS_REFINEMENT");
        goto LABEL_52;
      }
      if ((_DWORD)v11 == 40)
      {
        v9 = CFSTR("FAILED_NOT_AUTHORIZED");
LABEL_52:
        v13 = v10;
        v14 = -7;
        goto LABEL_53;
      }
    }
LABEL_42:
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), v11);
    v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
    goto LABEL_52;
  }
  if (objc_msgSend(v1, "etaResultsCount"))
  {
    v6 = 0;
    goto LABEL_54;
  }
  GEOFindOrCreateLog("com.apple.GeoServices", "GEOQuickETARequester");
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    v17 = CFSTR("Did not get any ETA results");
    _os_log_impl(&dword_1885A9000, v12, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
  }

  objc_msgSend(MEMORY[0x1E0CB35C8], "GEOErrorWithCode:reason:", -8, CFSTR("Did not get any ETA results"));
  v5 = objc_claimAutoreleasedReturnValue();
LABEL_11:
  v6 = (void *)v5;
LABEL_54:

  return v6;
}

uint64_t GEOShouldWatermark()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = MapsFeature_IsEnabled_Watermarking();
  if ((_DWORD)result)
  {
    +[GEOMapsAuthServiceHelper sharedAuthHelper](GEOMapsAuthServiceHelper, "sharedAuthHelper");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v1, "isCurrentEnvironmentSecure");

    return v2;
  }
  return result;
}

void sub_189700968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189700A48(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

uint64_t GEOMuninMeshTileKeyMake(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  _BYTE v8[9];

  v8[0] = 5;
  if (a6 == 2)
  {
    v6 = 7;
    goto LABEL_5;
  }
  if (a6 == 1)
  {
    v6 = 6;
LABEL_5:
    v8[0] = v6;
  }
  *(_QWORD *)&v8[1] = a3;
  return *(_QWORD *)v8;
}

void *GeoServicesConfig_GetUserDefaultStringKeysForWatchSync()
{
  return &unk_1E1E85798;
}

void *GeoServicesConfig_GetConfigStoreStringKeysForWatchSync()
{
  return &unk_1E1E857B0;
}

void *GeoServicesConfig_GetConfigStoreStringKeysForXPCMigration()
{
  return &unk_1E1E857C8;
}

void *GeoServicesConfig_GetConfigStoreStringKeysForSystemMigration()
{
  return &unk_1E1E857E0;
}

void *_getUserDefaultStringKeysForStateCapture()
{
  return &unk_1E1E857F8;
}

void *_getConfigStoreStringKeysForStateCapture_1()
{
  return &unk_1E1E85810;
}

uint64_t GeoOfflineConfig_GetUserDefaultStringKeysForWatchSync()
{
  return MEMORY[0x1E0C9AA60];
}

uint64_t GeoOfflineConfig_GetConfigStoreStringKeysForWatchSync()
{
  return MEMORY[0x1E0C9AA60];
}

void *_getUserDefaultStringKeysForStateCapture_0()
{
  return &unk_1E1E85918;
}

void *_getConfigStoreStringKeysForStateCapture_2()
{
  return &unk_1E1E85930;
}

uint64_t GeoAnalyticsLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = GeoAnalyticsLibraryCore_frameworkLibrary;
  v6 = GeoAnalyticsLibraryCore_frameworkLibrary;
  if (!GeoAnalyticsLibraryCore_frameworkLibrary)
  {
    v7 = xmmword_1E1C1FEC8;
    v8 = *(_OWORD *)&off_1E1C1FED8;
    v1 = _sl_dlopen();
    v4[3] = v1;
    GeoAnalyticsLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1897038F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t GeoAnalyticsLibrary()
{
  uint64_t v0;
  void *v2;

  v0 = GeoAnalyticsLibraryCore();
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getGEOAPPortalClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getGEOAPPortalClass_softClass;
  v7 = getGEOAPPortalClass_softClass;
  if (!getGEOAPPortalClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getGEOAPPortalClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getGEOAPPortalClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_189703A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getGEOAPPortalClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  GeoAnalyticsLibrary();
  result = objc_getClass("GEOAPPortal");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getGEOAPPortalClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)getGEOAPLocationCollectionReporterClass(v3);
  }
  return result;
}

id getGEOAPLocationCollectionReporterClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getGEOAPLocationCollectionReporterClass_softClass;
  v7 = getGEOAPLocationCollectionReporterClass_softClass;
  if (!getGEOAPLocationCollectionReporterClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getGEOAPLocationCollectionReporterClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getGEOAPLocationCollectionReporterClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_189703B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getGEOAPLocationCollectionReporterClass_block_invoke(uint64_t a1)
{
  Class result;

  GeoAnalyticsLibrary();
  result = objc_getClass("GEOAPLocationCollectionReporter");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getGEOAPLocationCollectionReporterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    return (Class)getGEOAPServiceManagerClass();
  }
  return result;
}

id getGEOAPServiceManagerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getGEOAPServiceManagerClass_softClass;
  v7 = getGEOAPServiceManagerClass_softClass;
  if (!getGEOAPServiceManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getGEOAPServiceManagerClass_block_invoke;
    v3[3] = &unk_1E1C03348;
    v3[4] = &v4;
    __getGEOAPServiceManagerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_189703C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

GEONavdPeer *__getGEOAPServiceManagerClass_block_invoke(uint64_t a1)
{
  GEONavdPeer *result;
  GEONavdPeer *v3;
  SEL v4;
  id v5;

  GeoAnalyticsLibrary();
  result = (GEONavdPeer *)objc_getClass("GEOAPServiceManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getGEOAPServiceManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (GEONavdPeer *)abort_report_np();
    return -[GEONavdPeer initWithXPCConnection:](v3, v4, v5);
  }
  return result;
}

void sub_1897045DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnalyticsPipelineStateDataReadSpecified(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int32x2_t v9;
  __int128 v10;
  int32x2_t v11;
  int32x2_t v12;
  int32x2_t v13;
  int32x2_t v14;
  int32x2_t v15;
  int32x2_t v16;
  int32x2_t v17;
  int32x2_t v18;
  int32x2_t v19;
  int32x2_t v20;
  int32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  int32x2_t v24;
  int32x2_t v25;
  int32x2_t v26;
  int32x2_t v27;
  int32x2_t v28;
  int32x2_t v29;
  int32x2_t v30;
  int32x2_t v31;
  int32x2_t v32;
  int32x2_t v33;
  int32x2_t v34;
  int32x2_t v35;
  int32x2_t v36;
  int32x2_t v37;
  char v38;
  int8x16_t v39;
  int32x2_t v40;
  _BYTE *v41;
  int *v42;
  int8x16_t v43;
  int8x16_t v44;
  uint64_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int *v59;
  int *v60;
  int *v61;
  int *v62;
  char v63;
  unsigned int v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  BOOL v69;
  int v70;
  int v71;
  unint64_t v73;
  BOOL v74;
  int *v75;
  int v76;
  int v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  GEOCarInfo *v81;
  uint64_t v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  char v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  char v137;
  unsigned int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  char v143;
  unsigned int v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  char v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  char v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char v169;
  char v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  char v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  char v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  char v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  char v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char v216;
  char v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  char v235;
  char v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  unint64_t v246;
  char v247;
  unsigned int v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  char v253;
  char v254;
  unsigned int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  char v260;
  char v261;
  unsigned int v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  char v267;
  char v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  char v274;
  char v275;
  unsigned int v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  char v281;
  char v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  char v287;
  uint64_t v288;
  unint64_t v289;
  char v290;
  unsigned int v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  char v295;
  char v296;
  unsigned int v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  char v303;
  unsigned int v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  char v309;
  char v310;
  unsigned int v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  char v316;
  char v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  char v323;
  char v324;
  unsigned int v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  char v330;
  char v331;
  unsigned int v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  char v336;
  char v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  char v343;
  char v344;
  unsigned int v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  char v349;
  char v350;
  unsigned int v351;
  uint64_t v352;
  unint64_t v353;
  char v354;
  uint64_t v355;
  unint64_t v356;
  char v357;
  unsigned int v358;
  uint64_t v359;
  unint64_t v360;
  char v361;
  char v362;
  unsigned int v363;
  uint64_t v364;
  unint64_t v365;
  char v366;
  char v367;
  unsigned int v368;
  uint64_t v369;
  unint64_t v370;
  char v371;
  char v372;
  unsigned int v373;
  uint64_t v374;
  unint64_t v375;
  char v376;
  char v377;
  unsigned int v378;
  uint64_t v379;
  unint64_t v380;
  char v381;
  char v382;
  unsigned int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  unint64_t v387;
  char v388;
  char v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unint64_t v394;
  char v395;
  char v396;
  unsigned int v397;
  uint64_t v398;
  unint64_t v399;
  char v400;
  char v401;
  unsigned int v402;
  uint64_t v403;
  unint64_t v404;
  char v405;
  char v406;
  unsigned int v407;
  uint64_t v408;
  unint64_t v409;
  char v410;
  char v411;
  unsigned int v412;
  uint64_t v413;
  uint64_t v414;
  unint64_t v415;
  char v416;
  char v417;
  unsigned int v418;
  uint64_t v419;
  unint64_t v420;
  char v421;
  char v422;
  unsigned int v423;
  uint64_t v424;
  unint64_t v425;
  char v426;
  char v427;
  unsigned int v428;
  uint64_t v429;
  unint64_t v430;
  char v431;
  char v432;
  unsigned int v433;
  uint64_t v434;
  uint64_t v435;
  unint64_t v436;
  char v437;
  char v438;
  unsigned int v439;
  uint64_t v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  char v444;
  unsigned int v445;
  uint64_t v446;
  uint64_t v447;
  unint64_t v448;
  char v449;
  char v450;
  unsigned int v451;
  uint64_t v452;
  unint64_t v453;
  char v454;
  char v455;
  unsigned int v456;
  uint64_t v457;
  uint64_t v458;
  unint64_t v459;
  char v460;
  char v461;
  unsigned int v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  char v466;
  uint64_t v467;
  unint64_t v468;
  char v469;
  unsigned int v470;
  uint64_t v471;
  uint64_t v472;
  unint64_t v473;
  char v474;
  char v475;
  unsigned int v476;
  uint64_t v477;
  unint64_t v478;
  char v479;
  uint64_t v480;
  unint64_t v481;
  char v482;
  unsigned int v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  unint64_t v487;
  char v488;
  char v489;
  unsigned int v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  unint64_t v494;
  char v495;
  char v496;
  unsigned int v497;
  uint64_t v498;
  uint64_t v499;
  unint64_t v500;
  char v501;
  char v502;
  unsigned int v503;
  uint64_t v504;
  unint64_t v505;
  char v506;
  char v507;
  unsigned int v508;
  uint64_t v509;
  unint64_t v510;
  char v511;
  char v512;
  unsigned int v513;
  uint64_t v514;
  unint64_t v515;
  char v516;
  char v517;
  unsigned int v518;
  uint64_t v519;
  unint64_t v520;
  char v521;
  char v522;
  unsigned int v523;
  uint64_t v524;
  unint64_t v525;
  char v526;
  char v527;
  unsigned int v528;
  uint64_t v529;
  unint64_t v530;
  char v531;
  char v532;
  unsigned int v533;
  uint64_t v534;
  uint64_t v535;
  unint64_t v536;
  char v537;
  char v538;
  unsigned int v539;
  uint64_t v540;
  uint64_t v541;
  unint64_t v542;
  char v543;
  char v544;
  unsigned int v545;
  uint64_t v546;
  uint64_t v547;
  unint64_t v548;
  char v549;
  char v550;
  unsigned int v551;
  uint64_t v552;
  uint64_t v553;
  unint64_t v554;
  char v555;
  char v556;
  unsigned int v557;
  uint64_t v558;
  uint64_t v559;
  unint64_t v560;
  char v561;
  char v562;
  unsigned int v563;
  uint64_t v564;
  unint64_t v565;
  char v566;
  char v567;
  unsigned int v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  unint64_t v572;
  char v573;
  char v574;
  unsigned int v575;
  uint64_t v576;
  uint64_t v577;
  unint64_t v578;
  char v579;
  void *v580;
  char v581;
  unsigned int v582;
  uint64_t v583;
  unint64_t v584;
  char v585;
  char v586;
  unsigned int v587;
  uint64_t v588;
  unint64_t v589;
  char v590;
  char v591;
  unsigned int v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  unint64_t v596;
  char v597;
  char v598;
  unsigned int v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  unint64_t v603;
  char v604;
  char v605;
  unsigned int v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  unint64_t v610;
  char v611;
  char v612;
  unsigned int v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  unint64_t v617;
  char v618;
  char v619;
  unsigned int v620;
  uint64_t v621;
  unint64_t v622;
  char v623;
  char v624;
  unsigned int v625;
  uint64_t v626;
  uint64_t v627;
  unint64_t v628;
  char v629;
  char v630;
  unsigned int v631;
  uint64_t v632;
  uint64_t v633;
  unint64_t v634;
  char v635;
  int v636;
  char v637;
  unsigned int v638;
  uint64_t v639;
  uint64_t v640;
  unint64_t v641;
  char v642;
  char v643;
  unsigned int v644;
  uint64_t v645;
  uint64_t v646;
  unint64_t v647;
  char v648;
  char v649;
  unsigned int v650;
  uint64_t v651;
  uint64_t v652;
  unint64_t v653;
  char v654;
  char v655;
  unsigned int v656;
  uint64_t v657;
  uint64_t v658;
  unint64_t v659;
  char v660;
  char v661;
  unsigned int v662;
  uint64_t v663;
  unint64_t v664;
  char v665;
  char v666;
  unsigned int v667;
  uint64_t v668;
  unint64_t v669;
  char v670;
  char v671;
  unsigned int v672;
  uint64_t v673;
  unint64_t v674;
  char v675;
  char v676;
  unsigned int v677;
  uint64_t v678;
  unint64_t v679;
  char v680;
  char v681;
  BOOL v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  char v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  char v690;
  uint64_t v691;
  char v692;
  uint64_t v693;
  char v694;
  uint64_t v695;
  char v696;
  uint64_t v697;
  char v698;
  uint64_t v699;
  char v700;
  uint64_t v701;
  char v702;
  uint64_t v703;
  char v704;
  uint64_t v705;
  char v706;
  uint64_t v707;
  char v708;
  uint64_t v709;
  char v710;
  char v711;
  char v712;
  char v713;
  uint64_t v714;
  char v715;
  char v716;
  char v717;
  char v718;
  char v719;
  uint64_t v720;
  char v721;
  uint64_t v722;
  char v723;
  uint64_t v724;
  char v725;
  char v726;
  uint64_t v727;
  char v728;
  uint64_t v729;
  char v730;
  char v731;
  char v732;
  uint64_t v733;
  char v734;
  uint64_t v735;
  char v736;
  char v737;
  uint64_t v738;
  char v739;
  char v740;
  uint64_t v741;
  char v742;
  char v743;
  uint64_t v744;
  char v745;
  uint64_t v746;
  char v747;
  char v748;
  __int128 v749;
  char v750;
  uint64_t v751;
  uint64_t v752;
  char v753;
  unsigned int v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  unint64_t v758;
  char v759;
  char v760;
  unsigned int v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unint64_t v765;
  char v766;
  char v767;
  unint64_t v768;
  _BOOL8 v769;
  int v770;
  int v771;
  int v772;
  unint64_t v773;
  uint64_t v774;
  int v775;
  void *v776;
  char v778;
  unint64_t v779;
  char v780;
  char v781;

  if (!a2)
    return 0;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 512));
  *(_QWORD *)&a2[*MEMORY[0x1E0D82BD8]] = *(unsigned int *)(a1 + 508);
  objc_msgSend(a2, "seekToOffset:", *(unsigned int *)(a1 + 504));
  v6 = 0;
  v7 = 0;
  v8 = *(unsigned __int16 *)(a1 + 740) | ((unint64_t)*(unsigned __int8 *)(a1 + 742) << 16);
  *((_QWORD *)&v10 + 1) = v8;
  *(_QWORD *)&v10 = *(_QWORD *)(a1 + 732);
  v9 = (int32x2_t)(v10 >> 54);
  *((_QWORD *)&v10 + 1) = v8;
  v11 = (int32x2_t)(v10 >> 43);
  v12 = v9;
  *((_QWORD *)&v10 + 1) = v8;
  v13 = v11;
  v14 = (int32x2_t)(v10 >> 44);
  *((_QWORD *)&v10 + 1) = v8;
  v15 = (int32x2_t)(v10 >> 51);
  *((_QWORD *)&v10 + 1) = v8;
  v16 = (int32x2_t)(v10 >> 41);
  *((_QWORD *)&v10 + 1) = v8;
  v17 = (int32x2_t)(v10 >> 47);
  *((_QWORD *)&v10 + 1) = v8;
  v18 = (int32x2_t)(v10 >> 49);
  *((_QWORD *)&v10 + 1) = v8;
  v19 = (int32x2_t)(v10 >> 58);
  *((_QWORD *)&v10 + 1) = v8;
  v20 = (int32x2_t)(v10 >> 60);
  *((_QWORD *)&v10 + 1) = v8;
  v21 = (int32x2_t)(v10 >> 59);
  *((_QWORD *)&v10 + 1) = v8;
  v22 = (int32x2_t)(v10 >> 55);
  *((_QWORD *)&v10 + 1) = v8;
  v23 = (int32x2_t)(v10 >> 53);
  *((_QWORD *)&v10 + 1) = v8;
  v24 = (int32x2_t)(v10 >> 46);
  *((_QWORD *)&v10 + 1) = v8;
  v25 = (int32x2_t)(v10 >> 38);
  *((_QWORD *)&v10 + 1) = v8;
  v26 = (int32x2_t)(v10 >> 37);
  *((_QWORD *)&v10 + 1) = v8;
  v27 = (int32x2_t)(v10 >> 50);
  *((_QWORD *)&v10 + 1) = v8;
  v28 = (int32x2_t)(v10 >> 48);
  *((_QWORD *)&v10 + 1) = v8;
  v29 = (int32x2_t)(v10 >> 42);
  *((_QWORD *)&v10 + 1) = v8;
  v30 = (int32x2_t)(v10 >> 62);
  *((_QWORD *)&v10 + 1) = v8;
  v31 = (int32x2_t)(v10 >> 61);
  *((_QWORD *)&v10 + 1) = v8;
  v32 = (int32x2_t)(v10 >> 63);
  *((_QWORD *)&v10 + 1) = v8;
  v33 = (int32x2_t)(v10 >> 56);
  *((_QWORD *)&v10 + 1) = v8;
  v34 = (int32x2_t)(v10 >> 39);
  *((_QWORD *)&v10 + 1) = v8;
  v35 = (int32x2_t)(v10 >> 45);
  *((_QWORD *)&v10 + 1) = v8;
  v36 = (int32x2_t)(v10 >> 40);
  *((_QWORD *)&v10 + 1) = v8;
  v37 = (int32x2_t)(v10 >> 57);
  *((_QWORD *)&v10 + 1) = v8;
  v38 = 0;
  *(int32x2_t *)v39.i8 = vzip1_s32(v31, v30);
  v39.u64[1] = (unint64_t)vzip1_s32(v32, (int32x2_t)(v8 >> 2));
  v40 = v34;
  v41 = a2;
  v42 = (int *)MEMORY[0x1E0D82BD8];
  *(int32x2_t *)v43.i8 = vzip1_s32(v28, v27);
  v43.u64[1] = (unint64_t)vzip1_s32(v29, (int32x2_t)(v8 >> 14));
  *(int32x2_t *)v44.i8 = vzip1_s32(v24, (int32x2_t)(v8 >> 5));
  v44.u64[1] = (unint64_t)vzip1_s32(v26, v25);
  v45 = 0;
  *(int32x2_t *)v46.i8 = vzip1_s32(v23, v22);
  v46.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 9), (int32x2_t)(v8 >> 6));
  *(int32x2_t *)v47.i8 = vzip1_s32((int32x2_t)(v8 >> 3), v19);
  v47.u64[1] = (unint64_t)vzip1_s32(v21, v20);
  *(int32x2_t *)v48.i8 = vzip1_s32((int32x2_t)(v8 >> 12), (int32x2_t)(v8 >> 11));
  v48.u64[1] = (unint64_t)vzip1_s32(v18, v17);
  *(int32x2_t *)v49.i8 = vzip1_s32(v14, v13);
  v49.u64[1] = (unint64_t)vzip1_s32(v16, v15);
  *(int32x2_t *)v50.i8 = vzip1_s32((int32x2_t)v8, (int32x2_t)(v8 >> 1));
  v50.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 4), v12);
  v51.i64[0] = 0x100000001;
  v51.i64[1] = 0x100000001;
  *(int32x2_t *)v52.i8 = vzip1_s32((int32x2_t)(v8 >> 10), v35);
  v52.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 13), v36);
  *(int32x2_t *)v53.i8 = vzip1_s32(v33, (int32x2_t)*(unsigned __int8 *)(a1 + 742));
  v53.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 15), v40);
  *(int32x2_t *)v54.i8 = vzip1_s32(v37, (int32x2_t)(v8 >> 8));
  v54.u64[1] = (unint64_t)vzip1_s32((int32x2_t)(v8 >> 7), (int32x2_t)(v10 >> 52));
  v55 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v49, v51), (int32x4_t)vandq_s8(v50, v51)), vaddq_s32((int32x4_t)vandq_s8(v47, v51), (int32x4_t)vandq_s8(v48, v51))), vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v44, v51), (int32x4_t)vandq_s8(v46, v51)), vaddq_s32((int32x4_t)vandq_s8(v39, v51), (int32x4_t)vandq_s8(v43, v51)))), vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v53, v51), (int32x4_t)vandq_s8(v52, v51)), (int32x4_t)vandq_s8(v54, v51))));
  while (2)
  {
    v56 = 1;
    v57 = 1;
    switch(a3[v6])
    {
      case -3:
        v38 = 1;
        goto LABEL_6;
      case -2:
        v56 = v45;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v780 = v45;
        v58 = v7 | (v55 > 0x22);
        if (v7 & 1 | (v55 > 0x22) | v38 & 1)
          v59 = 0;
        else
          v59 = a3;
        v60 = (int *)MEMORY[0x1E0D82BF0];
        v61 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)&v41[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&v41[*MEMORY[0x1E0D82BD8]])
          goto LABEL_1510;
        v62 = (int *)MEMORY[0x1E0D82BB8];
        v781 = v38;
        break;
      default:
        ++v55;
LABEL_6:
        v56 = v45;
        v57 = v7;
LABEL_8:
        ++v6;
        v45 = v56;
        v7 = v57;
        continue;
    }
    break;
  }
  while (2)
  {
    if (v41[*v61])
      goto LABEL_1510;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    while (1)
    {
      v66 = *v60;
      v67 = *(_QWORD *)&v41[v66];
      if (v67 == -1 || v67 >= *(_QWORD *)&v41[*v42])
        break;
      v68 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v67);
      *(_QWORD *)&v41[v66] = v67 + 1;
      v65 |= (unint64_t)(v68 & 0x7F) << v63;
      if ((v68 & 0x80) == 0)
        goto LABEL_23;
      v63 += 7;
      v69 = v64++ >= 9;
      if (v69)
      {
        v65 = 0;
        v70 = v41[*v61];
        goto LABEL_25;
      }
    }
    v41[*v61] = 1;
LABEL_23:
    v70 = v41[*v61];
    if (v41[*v61])
      v65 = 0;
LABEL_25:
    v71 = v65 & 7;
    if (v70 || v71 == 4)
    {
LABEL_1510:
      if ((v58 & 1) != 0)
      {
        v767 = *(_BYTE *)(a1 + 742) | 1;
        v768 = *(_QWORD *)(a1 + 732) | 0xFFFFFFE000000000;
        *(_WORD *)(a1 + 740) = -1;
        *(_QWORD *)(a1 + 732) = v768;
        *(_BYTE *)(a1 + 742) = v767;
      }
      else if (v59)
      {
        while (1)
        {
          v771 = *v59++;
          v770 = v771;
          switch(v771)
          {
            case 44:
              v772 = 0;
              v773 = 0x2000000000;
              goto LABEL_1560;
            case 45:
              v772 = 0;
              v773 = 0x4000000000;
              goto LABEL_1560;
            case 46:
              v773 = 0;
              v772 = 8;
              goto LABEL_1560;
            case 47:
            case 49:
            case 50:
            case 53:
            case 55:
            case 56:
            case 57:
            case 58:
            case 61:
            case 64:
            case 65:
            case 66:
            case 72:
            case 73:
            case 74:
            case 77:
            case 78:
            case 79:
            case 80:
            case 84:
            case 85:
            case 86:
            case 87:
            case 89:
            case 94:
            case 96:
            case 97:
            case 98:
            case 100:
            case 101:
            case 102:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 120:
            case 121:
            case 126:
            case 127:
            case 128:
            case 133:
            case 134:
            case 135:
            case 136:
              continue;
            case 48:
              v772 = 0;
              v773 = 0x400000000000000;
              goto LABEL_1560;
            case 51:
              v772 = 0;
              v773 = 0x800000000000000;
              goto LABEL_1560;
            case 52:
              v772 = 0;
              v773 = 0x1000000000000000;
              goto LABEL_1560;
            case 54:
              v772 = 0;
              v773 = 0x2000000000000000;
              goto LABEL_1560;
            case 59:
              v772 = 0;
              v773 = 0x8000000000000000;
              goto LABEL_1560;
            case 60:
              v773 = 0;
              v772 = 4;
              goto LABEL_1560;
            case 62:
              v773 = 0;
              v772 = 1;
              goto LABEL_1560;
            case 63:
              v773 = 0;
              v772 = 2;
              goto LABEL_1560;
            case 67:
              v772 = 0;
              v773 = 0x40000000000000;
              goto LABEL_1560;
            case 68:
              v772 = 0;
              v773 = 0x20000000000000;
              goto LABEL_1560;
            case 69:
              v772 = 0;
              v773 = 0x80000000000000;
              goto LABEL_1560;
            case 70:
              v773 = 0;
              v772 = 512;
              goto LABEL_1560;
            case 71:
              v773 = 0;
              v772 = 64;
              goto LABEL_1560;
            case 75:
              v773 = 0;
              v772 = 4096;
              goto LABEL_1560;
            case 76:
              v773 = 0;
              v772 = 2048;
              goto LABEL_1560;
            case 81:
              v772 = 0;
              v773 = 0x2000000000000;
              goto LABEL_1560;
            case 82:
              v772 = 0;
              v773 = 0x800000000000;
              goto LABEL_1560;
            case 83:
              v772 = 0;
              v773 = 0x40000000000;
              goto LABEL_1560;
            case 88:
              v773 = 0;
              v772 = 0x4000;
              goto LABEL_1560;
            case 90:
              v772 = 0;
              v773 = 0x100000000000000;
              goto LABEL_1560;
            case 91:
              v772 = 0;
              v773 = 0x1000000000000;
              goto LABEL_1560;
            case 92:
              v773 = 0;
              v772 = 0x10000;
              goto LABEL_1560;
            case 93:
              v773 = 0;
              v772 = 0x8000;
              goto LABEL_1560;
            case 95:
              v772 = 0;
              v773 = 0x4000000000000;
              goto LABEL_1560;
            case 99:
              v772 = 0;
              v773 = 0x8000000000;
              goto LABEL_1560;
            case 103:
              v773 = 0;
              v772 = 32;
              goto LABEL_1560;
            case 119:
              v772 = 0;
              v773 = 0x4000000000000000;
              goto LABEL_1560;
            case 122:
              v773 = 0;
              v772 = 1024;
              goto LABEL_1560;
            case 123:
              v772 = 0;
              v773 = 0x200000000000;
              goto LABEL_1560;
            case 124:
              v773 = 0;
              v772 = 0x2000;
              goto LABEL_1560;
            case 125:
              v772 = 0;
              v773 = 0x10000000000;
              goto LABEL_1560;
            case 129:
              v772 = 0;
              v773 = 0x200000000000000;
              goto LABEL_1560;
            case 130:
              v773 = 0;
              v772 = 256;
              goto LABEL_1560;
            case 131:
              v773 = 0;
              v772 = 128;
              goto LABEL_1560;
            case 132:
              v773 = 0;
              v772 = 16;
              goto LABEL_1560;
            case 137:
              v772 = 0;
              v773 = 0x10000000000000;
LABEL_1560:
              v774 = *(_QWORD *)(a1 + 732);
              *(_QWORD *)(a1 + 724) = *(_QWORD *)(a1 + 724);
              *(_QWORD *)(a1 + 732) = v774 | v773;
              v775 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16) | v772;
              *(_WORD *)(a1 + 740) |= v772;
              *(_BYTE *)(a1 + 742) = BYTE2(v775);
              break;
            default:
              v772 = 0;
              v773 = 0x80000000000;
              switch(v770)
              {
                case 0:
                  goto LABEL_1561;
                case 1:
                  goto LABEL_1560;
                case 2:
                  v772 = 0;
                  v773 = 0x100000000000;
                  goto LABEL_1560;
                case 3:
                  v772 = 0;
                  v773 = 0x20000000000;
                  goto LABEL_1560;
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                  continue;
                case 9:
                  v772 = 0;
                  v773 = 0x8000000000000;
                  goto LABEL_1560;
                default:
                  if (v770 != 37)
                    continue;
                  v772 = 0;
                  v773 = 0x400000000000;
                  goto LABEL_1560;
              }
          }
        }
      }
LABEL_1561:
      v769 = v41[*v61] == 0;
      if ((v58 & 1) == 0)
        return v769;
LABEL_1562:
      v776 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

      return v769;
    }
    v73 = v65 >> 3;
    v74 = v58;
    if (!((v59 == 0) | v58 & 1))
    {
      v75 = v59;
      do
      {
        v77 = *v75++;
        v76 = v77;
        v74 = v77 != 0;
        if (v77)
          v78 = v76 == (_DWORD)v73;
        else
          v78 = 1;
      }
      while (!v78);
    }
    switch((int)v73)
    {
      case 1:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x80000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 96;
          goto LABEL_829;
        }
        v686 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v686 & 1) == 0)
          goto LABEL_1565;
        v687 = *(_QWORD *)(a1 + 732);
        v688 = v687 << 20 >> 40;
        v689 = v687 << 20 >> 63;
        goto LABEL_1471;
      case 2:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x100000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 104;
          goto LABEL_829;
        }
        v690 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v690 & 1) == 0)
          goto LABEL_1565;
        v691 = *(_QWORD *)(a1 + 732);
        v688 = v691 << 19 >> 40;
        v689 = v691 << 19 >> 63;
        goto LABEL_1471;
      case 3:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x20000000000) != 0)
        {
          v692 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v692 & 1) == 0)
            goto LABEL_1565;
          v693 = *(_QWORD *)(a1 + 732);
          v688 = v693 << 22 >> 40;
          v689 = v693 << 22 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOCarInfo);
        if (!GEOCarInfoReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 80;
        goto LABEL_948;
      case 4:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_QWORD *)(a1 + 732) |= 0x100000000uLL;
        while (2)
        {
          v86 = *v60;
          v87 = *(_QWORD *)&v41[v86];
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v87);
            *(_QWORD *)&v41[v86] = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v69 = v84++ >= 9;
              if (v69)
              {
                v85 = 0;
                goto LABEL_1022;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v85 = 0;
LABEL_1022:
        v682 = v85 != 0;
        v683 = 716;
        goto LABEL_1376;
      case 5:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v90 = 0;
        v91 = 0;
        v92 = 0;
        *(_QWORD *)(a1 + 732) |= 0x80000000uLL;
        while (2)
        {
          v93 = *v60;
          v94 = *(_QWORD *)&v41[v93];
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v94);
            *(_QWORD *)&v41[v93] = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v69 = v91++ >= 9;
              if (v69)
              {
                v92 = 0;
                goto LABEL_1026;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v92 = 0;
LABEL_1026:
        v682 = v92 != 0;
        v683 = 715;
        goto LABEL_1376;
      case 6:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v97 = 0;
        v98 = 0;
        v99 = 0;
        *(_QWORD *)(a1 + 732) |= 0x800000000uLL;
        while (2)
        {
          v100 = *v60;
          v101 = *(_QWORD *)&v41[v100];
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v101);
            *(_QWORD *)&v41[v100] = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              v69 = v98++ >= 9;
              if (v69)
              {
                v99 = 0;
                goto LABEL_1030;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v99 = 0;
LABEL_1030:
        v682 = v99 != 0;
        v683 = 719;
        goto LABEL_1376;
      case 7:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v104 = 0;
        v105 = 0;
        v106 = 0;
        *(_QWORD *)(a1 + 732) |= 0x400000000uLL;
        while (2)
        {
          v107 = *v60;
          v108 = *(_QWORD *)&v41[v107];
          v109 = v108 + 1;
          if (v108 == -1 || v109 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v108);
            *(_QWORD *)&v41[v107] = v109;
            v106 |= (unint64_t)(v110 & 0x7F) << v104;
            if (v110 < 0)
            {
              v104 += 7;
              v69 = v105++ >= 9;
              if (v69)
              {
                v106 = 0;
                goto LABEL_1034;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v106 = 0;
LABEL_1034:
        v682 = v106 != 0;
        v683 = 718;
        goto LABEL_1376;
      case 8:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 0x40uLL;
        v111 = *v60;
        v112 = *(_QWORD *)&v41[v111];
        if (v112 <= 0xFFFFFFFFFFFFFFF7 && v112 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v112);
          *(_QWORD *)&v41[v111] = v112 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 216;
        goto LABEL_1507;
      case 9:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x8000000000000) != 0)
        {
          v694 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v694 & 1) == 0)
            goto LABEL_1565;
          v695 = *(_QWORD *)(a1 + 732);
          v688 = v695 << 12 >> 40;
          v689 = v695 << 12 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 192;
        goto LABEL_948;
      case 10:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v114 = 0;
        v115 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x8000000000uLL;
        while (2)
        {
          v117 = *v60;
          v118 = *(_QWORD *)&v41[v117];
          v119 = v118 + 1;
          if (v118 == -1 || v119 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v120 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v118);
            *(_QWORD *)&v41[v117] = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              v69 = v115++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1038;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1038:
        v684 = 620;
        goto LABEL_1393;
      case 11:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_QWORD *)(a1 + 732) |= 0x2000000uLL;
        while (2)
        {
          v124 = *v60;
          v125 = *(_QWORD *)&v41[v124];
          v126 = v125 + 1;
          if (v125 == -1 || v126 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v127 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v125);
            *(_QWORD *)&v41[v124] = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              v69 = v122++ >= 9;
              if (v69)
              {
                v123 = 0;
                goto LABEL_1042;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v123 = 0;
LABEL_1042:
        v682 = v123 != 0;
        v683 = 709;
        goto LABEL_1376;
      case 12:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 8uLL;
        v128 = *v60;
        v129 = *(_QWORD *)&v41[v128];
        if (v129 <= 0xFFFFFFFFFFFFFFF7 && v129 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v129);
          *(_QWORD *)&v41[v128] = v129 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 184;
        goto LABEL_1507;
      case 13:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v130 = 0;
        v131 = 0;
        v132 = 0;
        *(_QWORD *)(a1 + 732) |= 0x4000000uLL;
        while (2)
        {
          v133 = *v60;
          v134 = *(_QWORD *)&v41[v133];
          v135 = v134 + 1;
          if (v134 == -1 || v135 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v136 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v134);
            *(_QWORD *)&v41[v133] = v135;
            v132 |= (unint64_t)(v136 & 0x7F) << v130;
            if (v136 < 0)
            {
              v130 += 7;
              v69 = v131++ >= 9;
              if (v69)
              {
                v132 = 0;
                goto LABEL_1046;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v132 = 0;
LABEL_1046:
        v682 = v132 != 0;
        v683 = 710;
        goto LABEL_1376;
      case 14:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v137 = 0;
        v138 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x40000000uLL;
        while (2)
        {
          v139 = *v60;
          v140 = *(_QWORD *)&v41[v139];
          v141 = v140 + 1;
          if (v140 == -1 || v141 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v142 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v140);
            *(_QWORD *)&v41[v139] = v141;
            v116 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              v69 = v138++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1050;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1050:
        v684 = 584;
        goto LABEL_1393;
      case 15:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v143 = 0;
        v144 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x80000000uLL;
        while (2)
        {
          v145 = *v60;
          v146 = *(_QWORD *)&v41[v145];
          v147 = v146 + 1;
          if (v146 == -1 || v147 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v146);
            *(_QWORD *)&v41[v145] = v147;
            v116 |= (unint64_t)(v148 & 0x7F) << v143;
            if (v148 < 0)
            {
              v143 += 7;
              v69 = v144++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1054;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1054:
        v684 = 588;
        goto LABEL_1393;
      case 16:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v149 = 0;
        v150 = 0;
        v151 = 0;
        *(_QWORD *)(a1 + 732) |= 0x10uLL;
        while (2)
        {
          v152 = *v60;
          v153 = *(_QWORD *)&v41[v152];
          v154 = v153 + 1;
          if (v153 == -1 || v154 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v155 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v153);
            *(_QWORD *)&v41[v152] = v154;
            v151 |= (unint64_t)(v155 & 0x7F) << v149;
            if (v155 < 0)
            {
              v149 += 7;
              v69 = v150++ >= 9;
              if (v69)
              {
                v151 = 0;
                goto LABEL_1058;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v151 = 0;
LABEL_1058:
        v682 = v151 != 0;
        v683 = 688;
        goto LABEL_1376;
      case 17:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v156 = 0;
        v157 = 0;
        v158 = 0;
        *(_QWORD *)(a1 + 732) |= 0x80uLL;
        while (2)
        {
          v159 = *v60;
          v160 = *(_QWORD *)&v41[v159];
          v161 = v160 + 1;
          if (v160 == -1 || v161 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v162 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v160);
            *(_QWORD *)&v41[v159] = v161;
            v158 |= (unint64_t)(v162 & 0x7F) << v156;
            if (v162 < 0)
            {
              v156 += 7;
              v69 = v157++ >= 9;
              if (v69)
              {
                v158 = 0;
                goto LABEL_1062;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v158 = 0;
LABEL_1062:
        v682 = v158 != 0;
        v683 = 691;
        goto LABEL_1376;
      case 18:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v163 = 0;
        v164 = 0;
        v165 = 0;
        *(_QWORD *)(a1 + 732) |= 0x400uLL;
        while (2)
        {
          v166 = *v60;
          v167 = *(_QWORD *)&v41[v166];
          v168 = v167 + 1;
          if (v167 == -1 || v168 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v169 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v167);
            *(_QWORD *)&v41[v166] = v168;
            v165 |= (unint64_t)(v169 & 0x7F) << v163;
            if (v169 < 0)
            {
              v163 += 7;
              v69 = v164++ >= 9;
              if (v69)
              {
                v165 = 0;
                goto LABEL_1066;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v165 = 0;
LABEL_1066:
        v682 = v165 != 0;
        v683 = 694;
        goto LABEL_1376;
      case 19:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v170 = 0;
        v171 = 0;
        v172 = 0;
        *(_QWORD *)(a1 + 732) |= 0x800uLL;
        while (2)
        {
          v173 = *v60;
          v174 = *(_QWORD *)&v41[v173];
          v175 = v174 + 1;
          if (v174 == -1 || v175 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v176 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v174);
            *(_QWORD *)&v41[v173] = v175;
            v172 |= (unint64_t)(v176 & 0x7F) << v170;
            if (v176 < 0)
            {
              v170 += 7;
              v69 = v171++ >= 9;
              if (v69)
              {
                v172 = 0;
                goto LABEL_1070;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v172 = 0;
LABEL_1070:
        v682 = v172 != 0;
        v683 = 695;
        goto LABEL_1376;
      case 20:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v177 = 0;
        v178 = 0;
        v179 = 0;
        *(_QWORD *)(a1 + 732) |= 0x2000uLL;
        while (2)
        {
          v180 = *v60;
          v181 = *(_QWORD *)&v41[v180];
          v182 = v181 + 1;
          if (v181 == -1 || v182 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v183 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v181);
            *(_QWORD *)&v41[v180] = v182;
            v179 |= (unint64_t)(v183 & 0x7F) << v177;
            if (v183 < 0)
            {
              v177 += 7;
              v69 = v178++ >= 9;
              if (v69)
              {
                v179 = 0;
                goto LABEL_1074;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v179 = 0;
LABEL_1074:
        v682 = v179 != 0;
        v683 = 697;
        goto LABEL_1376;
      case 21:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v184 = 0;
        v185 = 0;
        v186 = 0;
        *(_QWORD *)(a1 + 732) |= 0x8000uLL;
        while (2)
        {
          v187 = *v60;
          v188 = *(_QWORD *)&v41[v187];
          v189 = v188 + 1;
          if (v188 == -1 || v189 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v190 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v188);
            *(_QWORD *)&v41[v187] = v189;
            v186 |= (unint64_t)(v190 & 0x7F) << v184;
            if (v190 < 0)
            {
              v184 += 7;
              v69 = v185++ >= 9;
              if (v69)
              {
                v186 = 0;
                goto LABEL_1078;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v186 = 0;
LABEL_1078:
        v682 = v186 != 0;
        v683 = 699;
        goto LABEL_1376;
      case 22:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v191 = 0;
        v192 = 0;
        v193 = 0;
        *(_QWORD *)(a1 + 732) |= 0x10000uLL;
        while (2)
        {
          v194 = *v60;
          v195 = *(_QWORD *)&v41[v194];
          v196 = v195 + 1;
          if (v195 == -1 || v196 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v197 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v195);
            *(_QWORD *)&v41[v194] = v196;
            v193 |= (unint64_t)(v197 & 0x7F) << v191;
            if (v197 < 0)
            {
              v191 += 7;
              v69 = v192++ >= 9;
              if (v69)
              {
                v193 = 0;
                goto LABEL_1082;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v193 = 0;
LABEL_1082:
        v682 = v193 != 0;
        v683 = 700;
        goto LABEL_1376;
      case 23:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v198 = 0;
        v199 = 0;
        v200 = 0;
        *(_QWORD *)(a1 + 732) |= 0x20000uLL;
        while (2)
        {
          v201 = *v60;
          v202 = *(_QWORD *)&v41[v201];
          v203 = v202 + 1;
          if (v202 == -1 || v203 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v204 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v202);
            *(_QWORD *)&v41[v201] = v203;
            v200 |= (unint64_t)(v204 & 0x7F) << v198;
            if (v204 < 0)
            {
              v198 += 7;
              v69 = v199++ >= 9;
              if (v69)
              {
                v200 = 0;
                goto LABEL_1086;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v200 = 0;
LABEL_1086:
        v682 = v200 != 0;
        v683 = 701;
        goto LABEL_1376;
      case 24:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v205 = 0;
        v206 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x400000000uLL;
        while (2)
        {
          v207 = *v60;
          v208 = *(_QWORD *)&v41[v207];
          v209 = v208 + 1;
          if (v208 == -1 || v209 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v210 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v208);
            *(_QWORD *)&v41[v207] = v209;
            v116 |= (unint64_t)(v210 & 0x7F) << v205;
            if (v210 < 0)
            {
              v205 += 7;
              v69 = v206++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1090;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1090:
        v684 = 600;
        goto LABEL_1393;
      case 25:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v211 = 0;
        v212 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x800000000uLL;
        while (2)
        {
          v213 = *v60;
          v214 = *(_QWORD *)&v41[v213];
          v215 = v214 + 1;
          if (v214 == -1 || v215 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v216 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v214);
            *(_QWORD *)&v41[v213] = v215;
            v116 |= (unint64_t)(v216 & 0x7F) << v211;
            if (v216 < 0)
            {
              v211 += 7;
              v69 = v212++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1094;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1094:
        v684 = 604;
        goto LABEL_1393;
      case 26:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v217 = 0;
        v218 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x2000000000uLL;
        while (2)
        {
          v219 = *v60;
          v220 = *(_QWORD *)&v41[v219];
          v221 = v220 + 1;
          if (v220 == -1 || v221 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v222 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v220);
            *(_QWORD *)&v41[v219] = v221;
            v116 |= (unint64_t)(v222 & 0x7F) << v217;
            if (v222 < 0)
            {
              v217 += 7;
              v69 = v218++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1098;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1098:
        v684 = 612;
        goto LABEL_1393;
      case 27:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v223 = 0;
        v224 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x200000000uLL;
        while (2)
        {
          v225 = *v60;
          v226 = *(_QWORD *)&v41[v225];
          v227 = v226 + 1;
          if (v226 == -1 || v227 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v228 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v226);
            *(_QWORD *)&v41[v225] = v227;
            v116 |= (unint64_t)(v228 & 0x7F) << v223;
            if (v228 < 0)
            {
              v223 += 7;
              v69 = v224++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1102;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1102:
        v684 = 596;
        goto LABEL_1393;
      case 28:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v229 = 0;
        v230 = 0;
        v231 = 0;
        *(_QWORD *)(a1 + 732) |= 0x200000uLL;
        while (2)
        {
          v232 = *v60;
          v233 = *(_QWORD *)&v41[v232];
          v234 = v233 + 1;
          if (v233 == -1 || v234 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v235 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v233);
            *(_QWORD *)&v41[v232] = v234;
            v231 |= (unint64_t)(v235 & 0x7F) << v229;
            if (v235 < 0)
            {
              v229 += 7;
              v69 = v230++ >= 9;
              if (v69)
              {
                v231 = 0;
                goto LABEL_1106;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v231 = 0;
LABEL_1106:
        v682 = v231 != 0;
        v683 = 705;
        goto LABEL_1376;
      case 29:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v236 = 0;
        v237 = 0;
        v238 = 0;
        *(_QWORD *)(a1 + 732) |= 0x400000uLL;
        while (2)
        {
          v239 = *v60;
          v240 = *(_QWORD *)&v41[v239];
          v241 = v240 + 1;
          if (v240 == -1 || v241 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v242 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v240);
            *(_QWORD *)&v41[v239] = v241;
            v238 |= (unint64_t)(v242 & 0x7F) << v236;
            if (v242 < 0)
            {
              v236 += 7;
              v69 = v237++ >= 9;
              if (v69)
              {
                v238 = 0;
                goto LABEL_1110;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v238 = 0;
LABEL_1110:
        v682 = v238 != 0;
        v683 = 706;
        goto LABEL_1376;
      case 30:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 4uLL;
        v243 = *v60;
        v244 = *(_QWORD *)&v41[v243];
        if (v244 <= 0xFFFFFFFFFFFFFFF7 && v244 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v244);
          *(_QWORD *)&v41[v243] = v244 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 144;
        goto LABEL_1507;
      case 31:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 2uLL;
        v245 = *v60;
        v246 = *(_QWORD *)&v41[v245];
        if (v246 <= 0xFFFFFFFFFFFFFFF7 && v246 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v246);
          *(_QWORD *)&v41[v245] = v246 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 136;
        goto LABEL_1507;
      case 32:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v247 = 0;
        v248 = 0;
        v249 = 0;
        *(_QWORD *)(a1 + 724) |= 0x400000000000000uLL;
        while (2)
        {
          v250 = *v60;
          v251 = *(_QWORD *)&v41[v250];
          v252 = v251 + 1;
          if (v251 == -1 || v252 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v253 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v251);
            *(_QWORD *)&v41[v250] = v252;
            v249 |= (unint64_t)(v253 & 0x7F) << v247;
            if (v253 < 0)
            {
              v247 += 7;
              v69 = v248++ >= 9;
              if (v69)
              {
                v249 = 0;
                goto LABEL_1114;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v249 = 0;
LABEL_1114:
        v682 = v249 != 0;
        v683 = 678;
        goto LABEL_1376;
      case 33:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v254 = 0;
        v255 = 0;
        v256 = 0;
        *(_QWORD *)(a1 + 724) |= 0x2000000000000000uLL;
        while (2)
        {
          v257 = *v60;
          v258 = *(_QWORD *)&v41[v257];
          v259 = v258 + 1;
          if (v258 == -1 || v259 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v260 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v258);
            *(_QWORD *)&v41[v257] = v259;
            v256 |= (unint64_t)(v260 & 0x7F) << v254;
            if (v260 < 0)
            {
              v254 += 7;
              v69 = v255++ >= 9;
              if (v69)
              {
                v256 = 0;
                goto LABEL_1118;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v256 = 0;
LABEL_1118:
        v682 = v256 != 0;
        v683 = 681;
        goto LABEL_1376;
      case 34:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v261 = 0;
        v262 = 0;
        v263 = 0;
        *(_QWORD *)(a1 + 724) |= 0x200000000000000uLL;
        while (2)
        {
          v264 = *v60;
          v265 = *(_QWORD *)&v41[v264];
          v266 = v265 + 1;
          if (v265 == -1 || v266 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v267 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v265);
            *(_QWORD *)&v41[v264] = v266;
            v263 |= (unint64_t)(v267 & 0x7F) << v261;
            if (v267 < 0)
            {
              v261 += 7;
              v69 = v262++ >= 9;
              if (v69)
              {
                v263 = 0;
                goto LABEL_1122;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v263 = 0;
LABEL_1122:
        v682 = v263 != 0;
        v683 = 677;
        goto LABEL_1376;
      case 35:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v268 = 0;
        v269 = 0;
        v270 = 0;
        *(_QWORD *)(a1 + 724) |= 0x1000000000000000uLL;
        while (2)
        {
          v271 = *v60;
          v272 = *(_QWORD *)&v41[v271];
          v273 = v272 + 1;
          if (v272 == -1 || v273 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v274 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v272);
            *(_QWORD *)&v41[v271] = v273;
            v270 |= (unint64_t)(v274 & 0x7F) << v268;
            if (v274 < 0)
            {
              v268 += 7;
              v69 = v269++ >= 9;
              if (v69)
              {
                v270 = 0;
                goto LABEL_1126;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v270 = 0;
LABEL_1126:
        v682 = v270 != 0;
        v683 = 680;
        goto LABEL_1376;
      case 36:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v275 = 0;
        v276 = 0;
        v277 = 0;
        *(_QWORD *)(a1 + 724) |= 0x800000000000000uLL;
        while (2)
        {
          v278 = *v60;
          v279 = *(_QWORD *)&v41[v278];
          v280 = v279 + 1;
          if (v279 == -1 || v280 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v281 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v279);
            *(_QWORD *)&v41[v278] = v280;
            v277 |= (unint64_t)(v281 & 0x7F) << v275;
            if (v281 < 0)
            {
              v275 += 7;
              v69 = v276++ >= 9;
              if (v69)
              {
                v277 = 0;
                goto LABEL_1130;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v277 = 0;
LABEL_1130:
        v682 = v277 != 0;
        v683 = 679;
        goto LABEL_1376;
      case 37:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x400000000000) != 0)
        {
          v696 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v696 & 1) == 0)
            goto LABEL_1565;
          v697 = *(_QWORD *)(a1 + 732);
          v688 = v697 << 17 >> 40;
          v689 = v697 << 17 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 120;
        goto LABEL_948;
      case 38:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v282 = 0;
        v283 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x2000uLL;
        while (2)
        {
          v284 = *v60;
          v285 = *(_QWORD *)&v41[v284];
          v286 = v285 + 1;
          if (v285 == -1 || v286 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v287 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v285);
            *(_QWORD *)&v41[v284] = v286;
            v116 |= (unint64_t)(v287 & 0x7F) << v282;
            if (v287 < 0)
            {
              v282 += 7;
              v69 = v283++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1134;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1134:
        v684 = 516;
        goto LABEL_1393;
      case 39:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 1uLL;
        v288 = *v60;
        v289 = *(_QWORD *)&v41[v288];
        if (v289 <= 0xFFFFFFFFFFFFFFF7 && v289 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v289);
          *(_QWORD *)&v41[v288] = v289 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 128;
        goto LABEL_1507;
      case 40:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v290 = 0;
        v291 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x4000uLL;
        while (2)
        {
          v292 = *v60;
          v293 = *(_QWORD *)&v41[v292];
          v294 = v293 + 1;
          if (v293 == -1 || v294 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v295 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v293);
            *(_QWORD *)&v41[v292] = v294;
            v116 |= (unint64_t)(v295 & 0x7F) << v290;
            if (v295 < 0)
            {
              v290 += 7;
              v69 = v291++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1138;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1138:
        v684 = 520;
        goto LABEL_1393;
      case 41:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v296 = 0;
        v297 = 0;
        v298 = 0;
        *(_QWORD *)(a1 + 724) |= 0x100000000000000uLL;
        while (2)
        {
          v299 = *v60;
          v300 = *(_QWORD *)&v41[v299];
          v301 = v300 + 1;
          if (v300 == -1 || v301 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v302 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v300);
            *(_QWORD *)&v41[v299] = v301;
            v298 |= (unint64_t)(v302 & 0x7F) << v296;
            if (v302 < 0)
            {
              v296 += 7;
              v69 = v297++ >= 9;
              if (v69)
              {
                v298 = 0;
                goto LABEL_1142;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v298 = 0;
LABEL_1142:
        v682 = v298 != 0;
        v683 = 676;
        goto LABEL_1376;
      case 42:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v303 = 0;
        v304 = 0;
        v305 = 0;
        *(_QWORD *)(a1 + 724) |= 0x10000000000000uLL;
        while (2)
        {
          v306 = *v60;
          v307 = *(_QWORD *)&v41[v306];
          v308 = v307 + 1;
          if (v307 == -1 || v308 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v309 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v307);
            *(_QWORD *)&v41[v306] = v308;
            v305 |= (unint64_t)(v309 & 0x7F) << v303;
            if (v309 < 0)
            {
              v303 += 7;
              v69 = v304++ >= 9;
              if (v69)
              {
                v305 = 0;
                goto LABEL_1146;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v305 = 0;
LABEL_1146:
        v682 = v305 != 0;
        v683 = 672;
        goto LABEL_1376;
      case 43:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v310 = 0;
        v311 = 0;
        v312 = 0;
        *(_QWORD *)(a1 + 732) |= 0x1000000000uLL;
        while (2)
        {
          v313 = *v60;
          v314 = *(_QWORD *)&v41[v313];
          v315 = v314 + 1;
          if (v314 == -1 || v315 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v316 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v314);
            *(_QWORD *)&v41[v313] = v315;
            v312 |= (unint64_t)(v316 & 0x7F) << v310;
            if (v316 < 0)
            {
              v310 += 7;
              v69 = v311++ >= 9;
              if (v69)
              {
                v312 = 0;
                goto LABEL_1150;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v312 = 0;
LABEL_1150:
        v682 = v312 != 0;
        v683 = 720;
        goto LABEL_1376;
      case 44:
        if (!v74 || (*(_QWORD *)(a1 + 732) & 0x2000000000) != 0)
          goto LABEL_1017;
        if (v71 != 2)
        {
          v753 = 0;
          v754 = 0;
          v755 = 0;
          while (1)
          {
            v756 = *v60;
            v757 = *(_QWORD *)&v41[v756];
            v758 = v757 + 1;
            if (v757 == -1 || v758 > *(_QWORD *)&v41[*v42])
              goto LABEL_1499;
            v759 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v757);
            *(_QWORD *)&v41[v756] = v758;
            v755 |= (unint64_t)(v759 & 0x7F) << v753;
            if (v759 < 0)
            {
              v753 += 7;
              v69 = v754++ >= 9;
              if (!v69)
                continue;
            }
            goto LABEL_1500;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_1565;
        while (*(_QWORD *)&v41[*v60] < *(_QWORD *)&v41[*v42] && !v41[*v61])
        {
          v317 = 0;
          v318 = 0;
          v319 = 0;
          while (1)
          {
            v320 = *v60;
            v321 = *(_QWORD *)&v41[v320];
            v322 = v321 + 1;
            if (v321 == -1 || v322 > *(_QWORD *)&v41[*v42])
              break;
            v323 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v321);
            *(_QWORD *)&v41[v320] = v322;
            v319 |= (unint64_t)(v323 & 0x7F) << v317;
            if (v323 < 0)
            {
              v317 += 7;
              v69 = v318++ >= 9;
              if (!v69)
                continue;
            }
            goto LABEL_356;
          }
          v41[*v61] = 1;
LABEL_356:
          PBRepeatedInt32Add();
        }
        goto LABEL_1474;
      case 45:
        if (!v74 || (*(_QWORD *)(a1 + 732) & 0x4000000000) != 0)
          goto LABEL_1017;
        if (v71 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_1565;
          while (*(_QWORD *)&v41[*v60] < *(_QWORD *)&v41[*v42] && !v41[*v61])
          {
            v324 = 0;
            v325 = 0;
            v326 = 0;
            while (1)
            {
              v327 = *v60;
              v328 = *(_QWORD *)&v41[v327];
              v329 = v328 + 1;
              if (v328 == -1 || v329 > *(_QWORD *)&v41[*v42])
                break;
              v330 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v328);
              *(_QWORD *)&v41[v327] = v329;
              v326 |= (unint64_t)(v330 & 0x7F) << v324;
              if (v330 < 0)
              {
                v324 += 7;
                v69 = v325++ >= 9;
                if (!v69)
                  continue;
              }
              goto LABEL_371;
            }
            v41[*v61] = 1;
LABEL_371:
            PBRepeatedInt32Add();
          }
LABEL_1474:
          PBReaderRecallMark();
        }
        else
        {
          v760 = 0;
          v761 = 0;
          v762 = 0;
          while (1)
          {
            v763 = *v60;
            v764 = *(_QWORD *)&v41[v763];
            v765 = v764 + 1;
            if (v764 == -1 || v765 > *(_QWORD *)&v41[*v42])
              break;
            v766 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v764);
            *(_QWORD *)&v41[v763] = v765;
            v762 |= (unint64_t)(v766 & 0x7F) << v760;
            if (v766 < 0)
            {
              v760 += 7;
              v69 = v761++ >= 9;
              if (!v69)
                continue;
            }
            goto LABEL_1500;
          }
LABEL_1499:
          v41[*v61] = 1;
LABEL_1500:
          PBRepeatedInt32Add();
        }
        goto LABEL_950;
      case 46:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 8) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 392;
          goto LABEL_829;
        }
        v698 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v698 & 1) == 0)
          goto LABEL_1565;
        v699 = (*(_QWORD *)(a1 + 732) >> 44) | (*(unsigned __int16 *)(a1 + 740) << 20);
        goto LABEL_1470;
      case 47:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v331 = 0;
        v332 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x100000000000uLL;
        while (2)
        {
          v333 = *v60;
          v334 = *(_QWORD *)&v41[v333];
          v335 = v334 + 1;
          if (v334 == -1 || v335 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v336 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v334);
            *(_QWORD *)&v41[v333] = v335;
            v116 |= (unint64_t)(v336 & 0x7F) << v331;
            if (v336 < 0)
            {
              v331 += 7;
              v69 = v332++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1154;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1154:
        v684 = 640;
        goto LABEL_1393;
      case 48:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x400000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 272;
          goto LABEL_829;
        }
        v700 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v700 & 1) == 0)
          goto LABEL_1565;
        v701 = *(_QWORD *)(a1 + 732);
        v688 = (32 * v701) >> 40;
        v689 = (32 * v701) >> 63;
        goto LABEL_1471;
      case 49:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v337 = 0;
        v338 = 0;
        v339 = 0;
        *(_QWORD *)(a1 + 724) |= 0x80uLL;
        while (2)
        {
          v340 = *v60;
          v341 = *(_QWORD *)&v41[v340];
          v342 = v341 + 1;
          if (v341 == -1 || v342 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v343 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v341);
            *(_QWORD *)&v41[v340] = v342;
            v339 |= (unint64_t)(v343 & 0x7F) << v337;
            if (v343 < 0)
            {
              v337 += 7;
              v69 = v338++ >= 9;
              if (v69)
              {
                v339 = 0;
                goto LABEL_1158;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v339 = 0;
LABEL_1158:
        v685 = 280;
        goto LABEL_1187;
      case 50:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v344 = 0;
        v345 = 0;
        v339 = 0;
        *(_QWORD *)(a1 + 724) |= 0x100uLL;
        while (2)
        {
          v346 = *v60;
          v347 = *(_QWORD *)&v41[v346];
          v348 = v347 + 1;
          if (v347 == -1 || v348 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v349 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v347);
            *(_QWORD *)&v41[v346] = v348;
            v339 |= (unint64_t)(v349 & 0x7F) << v344;
            if (v349 < 0)
            {
              v344 += 7;
              v69 = v345++ >= 9;
              if (v69)
              {
                v339 = 0;
                goto LABEL_1162;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v339 = 0;
LABEL_1162:
        v685 = 288;
        goto LABEL_1187;
      case 51:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x800000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 296;
          goto LABEL_829;
        }
        v702 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v702 & 1) == 0)
          goto LABEL_1565;
        v703 = *(_QWORD *)(a1 + 732);
        v688 = (16 * v703) >> 40;
        v689 = (16 * v703) >> 63;
        goto LABEL_1471;
      case 52:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x1000000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 304;
          goto LABEL_829;
        }
        v704 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v704 & 1) == 0)
          goto LABEL_1565;
        v705 = *(_QWORD *)(a1 + 732);
        v688 = (8 * v705) >> 40;
        v689 = (8 * v705) >> 63;
        goto LABEL_1471;
      case 53:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v350 = 0;
        v351 = 0;
        v339 = 0;
        *(_QWORD *)(a1 + 724) |= 0x200uLL;
        while (2)
        {
          v352 = *v60;
          v353 = *(_QWORD *)&v41[v352];
          if (v353 == -1 || v353 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v354 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v353);
            *(_QWORD *)&v41[v352] = v353 + 1;
            v339 |= (unint64_t)(v354 & 0x7F) << v350;
            if (v354 < 0)
            {
              v350 += 7;
              v69 = v351++ >= 9;
              if (v69)
              {
                v339 = 0;
                goto LABEL_1166;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v339 = 0;
LABEL_1166:
        v685 = 312;
        goto LABEL_1187;
      case 54:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x2000000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 320;
          goto LABEL_829;
        }
        v706 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v706 & 1) == 0)
          goto LABEL_1565;
        v707 = *(_QWORD *)(a1 + 732);
        v688 = (4 * v707) >> 40;
        v689 = (4 * v707) >> 63;
        goto LABEL_1471;
      case 55:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 0x400uLL;
        v355 = *v60;
        v356 = *(_QWORD *)&v41[v355];
        if (v356 <= 0xFFFFFFFFFFFFFFF7 && v356 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v356);
          *(_QWORD *)&v41[v355] = v356 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 328;
        goto LABEL_1507;
      case 56:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v357 = 0;
        v358 = 0;
        v339 = 0;
        *(_QWORD *)(a1 + 724) |= 0x800uLL;
        while (2)
        {
          v359 = *v60;
          v360 = *(_QWORD *)&v41[v359];
          if (v360 == -1 || v360 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v361 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v360);
            *(_QWORD *)&v41[v359] = v360 + 1;
            v339 |= (unint64_t)(v361 & 0x7F) << v357;
            if (v361 < 0)
            {
              v357 += 7;
              v69 = v358++ >= 9;
              if (v69)
              {
                v339 = 0;
                goto LABEL_1170;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v339 = 0;
LABEL_1170:
        v685 = 344;
        goto LABEL_1187;
      case 57:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v362 = 0;
        v363 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x20000000000uLL;
        while (2)
        {
          v364 = *v60;
          v365 = *(_QWORD *)&v41[v364];
          if (v365 == -1 || v365 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v366 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v365);
            *(_QWORD *)&v41[v364] = v365 + 1;
            v116 |= (unint64_t)(v366 & 0x7F) << v362;
            if (v366 < 0)
            {
              v362 += 7;
              v69 = v363++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1174;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1174:
        v684 = 628;
        goto LABEL_1393;
      case 58:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v367 = 0;
        v368 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x40000000000uLL;
        while (2)
        {
          v369 = *v60;
          v370 = *(_QWORD *)&v41[v369];
          if (v370 == -1 || v370 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v371 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v370);
            *(_QWORD *)&v41[v369] = v370 + 1;
            v116 |= (unint64_t)(v371 & 0x7F) << v367;
            if (v371 < 0)
            {
              v367 += 7;
              v69 = v368++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1178;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1178:
        v684 = 632;
        goto LABEL_1393;
      case 59:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x8000000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 352;
          goto LABEL_829;
        }
        v708 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v708 & 1) == 0)
          goto LABEL_1565;
        v709 = *(_QWORD *)(a1 + 732);
        v688 = v709 >> 40;
        v689 = v709 >> 63;
        goto LABEL_1471;
      case 60:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 4) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 384;
          goto LABEL_829;
        }
        v710 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v710 & 1) == 0)
          goto LABEL_1565;
        v699 = (*(_QWORD *)(a1 + 732) >> 43) | (*(unsigned __int16 *)(a1 + 740) << 21);
        goto LABEL_1470;
      case 61:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v372 = 0;
        v373 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x80000000000uLL;
        while (2)
        {
          v374 = *v60;
          v375 = *(_QWORD *)&v41[v374];
          if (v375 == -1 || v375 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v376 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v375);
            *(_QWORD *)&v41[v374] = v375 + 1;
            v116 |= (unint64_t)(v376 & 0x7F) << v372;
            if (v376 < 0)
            {
              v372 += 7;
              v69 = v373++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1182;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1182:
        v684 = 636;
        goto LABEL_1393;
      case 62:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 1) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 360;
          goto LABEL_829;
        }
        v711 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v711 & 1) == 0)
          goto LABEL_1565;
        v699 = (*(_QWORD *)(a1 + 732) >> 41) | (*(unsigned __int16 *)(a1 + 740) << 23);
        goto LABEL_1470;
      case 63:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 2) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 368;
          goto LABEL_829;
        }
        v712 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v712 & 1) == 0)
          goto LABEL_1565;
        v699 = (*(_QWORD *)(a1 + 732) >> 42) | (*(unsigned __int16 *)(a1 + 740) << 22);
        goto LABEL_1470;
      case 64:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v377 = 0;
        v378 = 0;
        v339 = 0;
        *(_QWORD *)(a1 + 724) |= 0x1000uLL;
        while (2)
        {
          v379 = *v60;
          v380 = *(_QWORD *)&v41[v379];
          if (v380 == -1 || v380 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v381 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v380);
            *(_QWORD *)&v41[v379] = v380 + 1;
            v339 |= (unint64_t)(v381 & 0x7F) << v377;
            if (v381 < 0)
            {
              v377 += 7;
              v69 = v378++ >= 9;
              if (v69)
              {
                v339 = 0;
                goto LABEL_1186;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v339 = 0;
LABEL_1186:
        v685 = 376;
LABEL_1187:
        *(_QWORD *)(a1 + v685) = v339;
        goto LABEL_1508;
      case 65:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v382 = 0;
        v383 = 0;
        v384 = 0;
        *(_QWORD *)(a1 + 724) |= 0x80000000000000uLL;
        while (2)
        {
          v385 = *v60;
          v386 = *(_QWORD *)&v41[v385];
          v387 = v386 + 1;
          if (v386 == -1 || v387 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v388 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v386);
            *(_QWORD *)&v41[v385] = v387;
            v384 |= (unint64_t)(v388 & 0x7F) << v382;
            if (v388 < 0)
            {
              v382 += 7;
              v69 = v383++ >= 9;
              if (v69)
              {
                v384 = 0;
                goto LABEL_1191;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v384 = 0;
LABEL_1191:
        v682 = v384 != 0;
        v683 = 675;
        goto LABEL_1376;
      case 66:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v389 = 0;
        v390 = 0;
        v391 = 0;
        *(_QWORD *)(a1 + 732) |= 0x40000000uLL;
        while (2)
        {
          v392 = *v60;
          v393 = *(_QWORD *)&v41[v392];
          v394 = v393 + 1;
          if (v393 == -1 || v394 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v395 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v393);
            *(_QWORD *)&v41[v392] = v394;
            v391 |= (unint64_t)(v395 & 0x7F) << v389;
            if (v395 < 0)
            {
              v389 += 7;
              v69 = v390++ >= 9;
              if (v69)
              {
                v391 = 0;
                goto LABEL_1195;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v391 = 0;
LABEL_1195:
        v682 = v391 != 0;
        v683 = 714;
        goto LABEL_1376;
      case 67:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x40000000000000) == 0)
        {
          PBReaderReadData();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 240;
          goto LABEL_829;
        }
        v713 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v713 & 1) == 0)
          goto LABEL_1565;
        v714 = *(_QWORD *)(a1 + 732);
        v688 = v714 << 9 >> 40;
        v689 = v714 << 9 >> 63;
        goto LABEL_1471;
      case 68:
        if (!v74 || (*(_QWORD *)(a1 + 732) & 0x20000000000000) != 0)
          goto LABEL_1017;
        PBReaderReadData();
        v81 = (GEOCarInfo *)objc_claimAutoreleasedReturnValue();
        if (v81)
          -[GEOAnalyticsPipelineStateData _addNoFlagsMapsServerMetadataSuggestionEntryDisplayed:](a1, v81);
        goto LABEL_910;
      case 69:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x80000000000000) != 0)
        {
          v715 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v715 & 1) == 0)
            goto LABEL_1565;
          v699 = *(unsigned int *)(a1 + 736);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOMapsServerMetadata);
        if (!GEOMapsServerMetadataReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 248;
        goto LABEL_948;
      case 70:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x200) != 0)
        {
          v716 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v716 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 50) | (*(unsigned __int16 *)(a1 + 740) << 14);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEORouteDetails);
        if (!GEORouteDetailsReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 440;
        goto LABEL_948;
      case 71:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x40) != 0)
        {
          v717 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v717 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 47) | (*(unsigned __int16 *)(a1 + 740) << 17);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgEventPredExTrainingData);
        if (!GEOLogMsgEventPredExTrainingDataReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 416;
        goto LABEL_948;
      case 72:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v396 = 0;
        v397 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x1000000000000uLL;
        while (2)
        {
          v398 = *v60;
          v399 = *(_QWORD *)&v41[v398];
          if (v399 == -1 || v399 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v400 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v399);
            *(_QWORD *)&v41[v398] = v399 + 1;
            v116 |= (unint64_t)(v400 & 0x7F) << v396;
            if (v400 < 0)
            {
              v396 += 7;
              v69 = v397++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1199;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1199:
        v684 = 656;
        goto LABEL_1393;
      case 73:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v401 = 0;
        v402 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x2000000000000uLL;
        while (2)
        {
          v403 = *v60;
          v404 = *(_QWORD *)&v41[v403];
          if (v404 == -1 || v404 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v405 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v404);
            *(_QWORD *)&v41[v403] = v404 + 1;
            v116 |= (unint64_t)(v405 & 0x7F) << v401;
            if (v405 < 0)
            {
              v401 += 7;
              v69 = v402++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1203;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1203:
        v684 = 660;
        goto LABEL_1393;
      case 74:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v406 = 0;
        v407 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x4000000000000uLL;
        while (2)
        {
          v408 = *v60;
          v409 = *(_QWORD *)&v41[v408];
          if (v409 == -1 || v409 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v410 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v409);
            *(_QWORD *)&v41[v408] = v409 + 1;
            v116 |= (unint64_t)(v410 & 0x7F) << v406;
            if (v410 < 0)
            {
              v406 += 7;
              v69 = v407++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1207;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1207:
        v684 = 664;
        goto LABEL_1393;
      case 75:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x1000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 464;
          goto LABEL_829;
        }
        v718 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v718 & 1) == 0)
          goto LABEL_1565;
        v699 = (*(_QWORD *)(a1 + 732) >> 53) | (*(unsigned __int16 *)(a1 + 740) << 11);
        goto LABEL_1470;
      case 76:
        if (!v74 || (*(_WORD *)(a1 + 740) & 0x800) != 0)
          goto LABEL_1017;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOAutoCompleteResultInfo);
        if (!GEOAutoCompleteResultInfoReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        -[GEOAnalyticsPipelineStateData _addNoFlagsSuggestionsDisplayedResults:](a1, v81);
        goto LABEL_910;
      case 77:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v411 = 0;
        v412 = 0;
        v413 = 0;
        *(_QWORD *)(a1 + 724) |= 0x40000000000000uLL;
        while (2)
        {
          v414 = *v60;
          v415 = *(_QWORD *)&v41[v414];
          if (v415 == -1 || v415 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v416 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v415);
            *(_QWORD *)&v41[v414] = v415 + 1;
            v413 |= (unint64_t)(v416 & 0x7F) << v411;
            if (v416 < 0)
            {
              v411 += 7;
              v69 = v412++ >= 9;
              if (v69)
              {
                v413 = 0;
                goto LABEL_1211;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v413 = 0;
LABEL_1211:
        v682 = v413 != 0;
        v683 = 674;
        goto LABEL_1376;
      case 78:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v417 = 0;
        v418 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x200000000000uLL;
        while (2)
        {
          v419 = *v60;
          v420 = *(_QWORD *)&v41[v419];
          if (v420 == -1 || v420 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v421 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v420);
            *(_QWORD *)&v41[v419] = v420 + 1;
            v116 |= (unint64_t)(v421 & 0x7F) << v417;
            if (v421 < 0)
            {
              v417 += 7;
              v69 = v418++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1215;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1215:
        v684 = 644;
        goto LABEL_1393;
      case 79:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v422 = 0;
        v423 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x400000000000uLL;
        while (2)
        {
          v424 = *v60;
          v425 = *(_QWORD *)&v41[v424];
          if (v425 == -1 || v425 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v426 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v425);
            *(_QWORD *)&v41[v424] = v425 + 1;
            v116 |= (unint64_t)(v426 & 0x7F) << v422;
            if (v426 < 0)
            {
              v422 += 7;
              v69 = v423++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1219;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1219:
        v684 = 648;
        goto LABEL_1393;
      case 80:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v427 = 0;
        v428 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x800000000000uLL;
        while (2)
        {
          v429 = *v60;
          v430 = *(_QWORD *)&v41[v429];
          if (v430 == -1 || v430 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v431 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v430);
            *(_QWORD *)&v41[v429] = v430 + 1;
            v116 |= (unint64_t)(v431 & 0x7F) << v427;
            if (v431 < 0)
            {
              v427 += 7;
              v69 = v428++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1223;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1223:
        v684 = 652;
        goto LABEL_1393;
      case 81:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x2000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 168;
          goto LABEL_829;
        }
        v719 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v719 & 1) == 0)
          goto LABEL_1565;
        v720 = *(_QWORD *)(a1 + 732);
        v688 = v720 << 14 >> 40;
        v689 = v720 << 14 >> 63;
        goto LABEL_1471;
      case 82:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x800000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 152;
          goto LABEL_829;
        }
        v721 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v721 & 1) == 0)
          goto LABEL_1565;
        v722 = *(_QWORD *)(a1 + 732);
        v688 = v722 << 16 >> 40;
        v689 = v722 << 16 >> 63;
        goto LABEL_1471;
      case 83:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x40000000000) != 0)
        {
          v723 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v723 & 1) == 0)
            goto LABEL_1565;
          v724 = *(_QWORD *)(a1 + 732);
          v688 = v724 << 21 >> 40;
          v689 = v724 << 21 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateCuratedCollection);
        if (!GEOLogMsgStateCuratedCollectionReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 88;
        goto LABEL_948;
      case 84:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v432 = 0;
        v433 = 0;
        v434 = 0;
        *(_QWORD *)(a1 + 732) |= 0x20uLL;
        while (2)
        {
          v435 = *v60;
          v436 = *(_QWORD *)&v41[v435];
          if (v436 == -1 || v436 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v437 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v436);
            *(_QWORD *)&v41[v435] = v436 + 1;
            v434 |= (unint64_t)(v437 & 0x7F) << v432;
            if (v437 < 0)
            {
              v432 += 7;
              v69 = v433++ >= 9;
              if (v69)
              {
                v434 = 0;
                goto LABEL_1227;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v434 = 0;
LABEL_1227:
        v682 = v434 != 0;
        v683 = 689;
        goto LABEL_1376;
      case 85:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v438 = 0;
        v439 = 0;
        v440 = 0;
        *(_QWORD *)(a1 + 732) |= 0x40uLL;
        while (2)
        {
          v441 = *v60;
          v442 = *(_QWORD *)&v41[v441];
          if (v442 == -1 || v442 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v443 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v442);
            *(_QWORD *)&v41[v441] = v442 + 1;
            v440 |= (unint64_t)(v443 & 0x7F) << v438;
            if (v443 < 0)
            {
              v438 += 7;
              v69 = v439++ >= 9;
              if (v69)
              {
                v440 = 0;
                goto LABEL_1231;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v440 = 0;
LABEL_1231:
        v682 = v440 != 0;
        v683 = 690;
        goto LABEL_1376;
      case 86:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v444 = 0;
        v445 = 0;
        v446 = 0;
        *(_QWORD *)(a1 + 732) |= 8uLL;
        while (2)
        {
          v447 = *v60;
          v448 = *(_QWORD *)&v41[v447];
          if (v448 == -1 || v448 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v449 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v448);
            *(_QWORD *)&v41[v447] = v448 + 1;
            v446 |= (unint64_t)(v449 & 0x7F) << v444;
            if (v449 < 0)
            {
              v444 += 7;
              v69 = v445++ >= 9;
              if (v69)
              {
                v446 = 0;
                goto LABEL_1235;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v446 = 0;
LABEL_1235:
        v682 = v446 != 0;
        v683 = 687;
        goto LABEL_1376;
      case 87:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v450 = 0;
        v451 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x20000000uLL;
        while (2)
        {
          v452 = *v60;
          v453 = *(_QWORD *)&v41[v452];
          if (v453 == -1 || v453 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v454 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v453);
            *(_QWORD *)&v41[v452] = v453 + 1;
            v116 |= (unint64_t)(v454 & 0x7F) << v450;
            if (v454 < 0)
            {
              v450 += 7;
              v69 = v451++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1239;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1239:
        v684 = 580;
        goto LABEL_1393;
      case 88:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x4000) != 0)
        {
          v725 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v725 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 55) | (*(unsigned __int16 *)(a1 + 740) << 9);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateUGCPhoto);
        if (!GEOLogMsgStateUGCPhotoReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 480;
        goto LABEL_948;
      case 89:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v455 = 0;
        v456 = 0;
        v457 = 0;
        *(_QWORD *)(a1 + 732) |= 0x200uLL;
        while (2)
        {
          v458 = *v60;
          v459 = *(_QWORD *)&v41[v458];
          if (v459 == -1 || v459 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v460 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v459);
            *(_QWORD *)&v41[v458] = v459 + 1;
            v457 |= (unint64_t)(v460 & 0x7F) << v455;
            if (v460 < 0)
            {
              v455 += 7;
              v69 = v456++ >= 9;
              if (v69)
              {
                v457 = 0;
                goto LABEL_1243;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v457 = 0;
LABEL_1243:
        v682 = v457 != 0;
        v683 = 693;
        goto LABEL_1376;
      case 90:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x100000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 256;
          goto LABEL_829;
        }
        v726 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v726 & 1) == 0)
          goto LABEL_1565;
        v727 = *(_QWORD *)(a1 + 732);
        v688 = v727 << 7 >> 40;
        v689 = v727 << 7 >> 63;
        goto LABEL_1471;
      case 91:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x1000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 160;
          goto LABEL_829;
        }
        v728 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v728 & 1) == 0)
          goto LABEL_1565;
        v729 = *(_QWORD *)(a1 + 732);
        v688 = v729 << 15 >> 40;
        v689 = v729 << 15 >> 63;
        goto LABEL_1471;
      case 92:
        if (!v74)
          goto LABEL_1017;
        if (((*(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16)) & 0x10000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 496;
          goto LABEL_829;
        }
        v730 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v730 & 1) == 0)
          goto LABEL_1565;
        v699 = (*(unsigned __int16 *)(a1 + 740) << 7) | (*(unsigned __int8 *)(a1 + 742) << 23) | (*(_QWORD *)(a1 + 732) >> 57);
        goto LABEL_1470;
      case 93:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x8000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 488;
          goto LABEL_829;
        }
        v731 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v731 & 1) == 0)
          goto LABEL_1565;
        v699 = *(unsigned int *)(a1 + 739);
        goto LABEL_1470;
      case 94:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v461 = 0;
        v462 = 0;
        v463 = 0;
        *(_QWORD *)(a1 + 732) |= 4uLL;
        while (2)
        {
          v464 = *v60;
          v465 = *(_QWORD *)&v41[v464];
          if (v465 == -1 || v465 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v466 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v465);
            *(_QWORD *)&v41[v464] = v465 + 1;
            v463 |= (unint64_t)(v466 & 0x7F) << v461;
            if (v466 < 0)
            {
              v461 += 7;
              v69 = v462++ >= 9;
              if (v69)
              {
                v463 = 0;
                goto LABEL_1247;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v463 = 0;
LABEL_1247:
        v682 = v463 != 0;
        v683 = 686;
        goto LABEL_1376;
      case 95:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x4000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 176;
          goto LABEL_829;
        }
        v732 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v732 & 1) == 0)
          goto LABEL_1565;
        v733 = *(_QWORD *)(a1 + 732);
        v688 = v733 << 13 >> 40;
        v689 = v733 << 13 >> 63;
        goto LABEL_1471;
      case 96:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 0x20uLL;
        v467 = *v60;
        v468 = *(_QWORD *)&v41[v467];
        if (v468 <= 0xFFFFFFFFFFFFFFF7 && v468 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v468);
          *(_QWORD *)&v41[v467] = v468 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 208;
        goto LABEL_1507;
      case 97:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v469 = 0;
        v470 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x4000000000uLL;
        while (2)
        {
          v471 = *v60;
          v472 = *(_QWORD *)&v41[v471];
          v473 = v472 + 1;
          if (v472 == -1 || v473 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v474 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v472);
            *(_QWORD *)&v41[v471] = v473;
            v116 |= (unint64_t)(v474 & 0x7F) << v469;
            if (v474 < 0)
            {
              v469 += 7;
              v69 = v470++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1251;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1251:
        v684 = 616;
        goto LABEL_1393;
      case 98:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v475 = 0;
        v476 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x10000000uLL;
        while (2)
        {
          v477 = *v60;
          v478 = *(_QWORD *)&v41[v477];
          if (v478 == -1 || v478 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v479 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v478);
            *(_QWORD *)&v41[v477] = v478 + 1;
            v116 |= (unint64_t)(v479 & 0x7F) << v475;
            if (v479 < 0)
            {
              v475 += 7;
              v69 = v476++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1255;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1255:
        v684 = 576;
        goto LABEL_1393;
      case 99:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x8000000000) != 0)
        {
          v734 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v734 & 1) == 0)
            goto LABEL_1565;
          v735 = *(_QWORD *)(a1 + 732);
          v688 = v735 << 24 >> 40;
          v689 = v735 << 24 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateAccount);
        if (!GEOLogMsgStateAccountReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 64;
        goto LABEL_948;
      case 100:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        *(_QWORD *)(a1 + 724) |= 0x10uLL;
        v480 = *v60;
        v481 = *(_QWORD *)&v41[v480];
        if (v481 <= 0xFFFFFFFFFFFFFFF7 && v481 + 8 <= *(_QWORD *)&v41[*v42])
        {
          v113 = *(_QWORD *)(*(_QWORD *)&v41[*v62] + v481);
          *(_QWORD *)&v41[v480] = v481 + 8;
        }
        else
        {
          v41[*v61] = 1;
          v113 = 0;
        }
        v752 = 200;
LABEL_1507:
        *(_QWORD *)(a1 + v752) = v113;
        goto LABEL_1508;
      case 101:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v482 = 0;
        v483 = 0;
        v484 = 0;
        *(_QWORD *)(a1 + 732) |= 0x800000uLL;
        while (2)
        {
          v485 = *v60;
          v486 = *(_QWORD *)&v41[v485];
          v487 = v486 + 1;
          if (v486 == -1 || v487 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v488 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v486);
            *(_QWORD *)&v41[v485] = v487;
            v484 |= (unint64_t)(v488 & 0x7F) << v482;
            if (v488 < 0)
            {
              v482 += 7;
              v69 = v483++ >= 9;
              if (v69)
              {
                v484 = 0;
                goto LABEL_1259;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v484 = 0;
LABEL_1259:
        v682 = v484 != 0;
        v683 = 707;
        goto LABEL_1376;
      case 102:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v489 = 0;
        v490 = 0;
        v491 = 0;
        *(_QWORD *)(a1 + 732) |= 0x1000000uLL;
        while (2)
        {
          v492 = *v60;
          v493 = *(_QWORD *)&v41[v492];
          v494 = v493 + 1;
          if (v493 == -1 || v494 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v495 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v493);
            *(_QWORD *)&v41[v492] = v494;
            v491 |= (unint64_t)(v495 & 0x7F) << v489;
            if (v495 < 0)
            {
              v489 += 7;
              v69 = v490++ >= 9;
              if (v69)
              {
                v491 = 0;
                goto LABEL_1263;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v491 = 0;
LABEL_1263:
        v682 = v491 != 0;
        v683 = 708;
        goto LABEL_1376;
      case 103:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x20) != 0)
        {
          v736 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v736 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 46) | (*(unsigned __int16 *)(a1 + 740) << 18);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStatePlaceCard);
        if (!GEOLogMsgStatePlaceCardReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 408;
        goto LABEL_948;
      case 104:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v496 = 0;
        v497 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x10000000000uLL;
        while (2)
        {
          v498 = *v60;
          v499 = *(_QWORD *)&v41[v498];
          v500 = v499 + 1;
          if (v499 == -1 || v500 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v501 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v499);
            *(_QWORD *)&v41[v498] = v500;
            v116 |= (unint64_t)(v501 & 0x7F) << v496;
            if (v501 < 0)
            {
              v496 += 7;
              v69 = v497++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1267;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1267:
        v684 = 624;
        goto LABEL_1393;
      case 105:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v502 = 0;
        v503 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x400000uLL;
        while (2)
        {
          v504 = *v60;
          v505 = *(_QWORD *)&v41[v504];
          if (v505 == -1 || v505 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v506 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v505);
            *(_QWORD *)&v41[v504] = v505 + 1;
            v116 |= (unint64_t)(v506 & 0x7F) << v502;
            if (v506 < 0)
            {
              v502 += 7;
              v69 = v503++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1271;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1271:
        v684 = 552;
        goto LABEL_1393;
      case 106:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v507 = 0;
        v508 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x800000uLL;
        while (2)
        {
          v509 = *v60;
          v510 = *(_QWORD *)&v41[v509];
          if (v510 == -1 || v510 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v511 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v510);
            *(_QWORD *)&v41[v509] = v510 + 1;
            v116 |= (unint64_t)(v511 & 0x7F) << v507;
            if (v511 < 0)
            {
              v507 += 7;
              v69 = v508++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1275;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1275:
        v684 = 556;
        goto LABEL_1393;
      case 107:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v512 = 0;
        v513 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x2000000uLL;
        while (2)
        {
          v514 = *v60;
          v515 = *(_QWORD *)&v41[v514];
          if (v515 == -1 || v515 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v516 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v515);
            *(_QWORD *)&v41[v514] = v515 + 1;
            v116 |= (unint64_t)(v516 & 0x7F) << v512;
            if (v516 < 0)
            {
              v512 += 7;
              v69 = v513++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1279;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1279:
        v684 = 564;
        goto LABEL_1393;
      case 108:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v517 = 0;
        v518 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x1000000uLL;
        while (2)
        {
          v519 = *v60;
          v520 = *(_QWORD *)&v41[v519];
          if (v520 == -1 || v520 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v521 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v520);
            *(_QWORD *)&v41[v519] = v520 + 1;
            v116 |= (unint64_t)(v521 & 0x7F) << v517;
            if (v521 < 0)
            {
              v517 += 7;
              v69 = v518++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1283;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1283:
        v684 = 560;
        goto LABEL_1393;
      case 109:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v522 = 0;
        v523 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x8000uLL;
        while (2)
        {
          v524 = *v60;
          v525 = *(_QWORD *)&v41[v524];
          if (v525 == -1 || v525 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v526 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v525);
            *(_QWORD *)&v41[v524] = v525 + 1;
            v116 |= (unint64_t)(v526 & 0x7F) << v522;
            if (v526 < 0)
            {
              v522 += 7;
              v69 = v523++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1287;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1287:
        v684 = 524;
        goto LABEL_1393;
      case 110:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v527 = 0;
        v528 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x200000uLL;
        while (2)
        {
          v529 = *v60;
          v530 = *(_QWORD *)&v41[v529];
          if (v530 == -1 || v530 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v531 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v530);
            *(_QWORD *)&v41[v529] = v530 + 1;
            v116 |= (unint64_t)(v531 & 0x7F) << v527;
            if (v531 < 0)
            {
              v527 += 7;
              v69 = v528++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1291;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1291:
        v684 = 548;
        goto LABEL_1393;
      case 111:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v532 = 0;
        v533 = 0;
        v534 = 0;
        *(_QWORD *)(a1 + 732) |= 0x200000000uLL;
        while (2)
        {
          v535 = *v60;
          v536 = *(_QWORD *)&v41[v535];
          if (v536 == -1 || v536 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v537 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v536);
            *(_QWORD *)&v41[v535] = v536 + 1;
            v534 |= (unint64_t)(v537 & 0x7F) << v532;
            if (v537 < 0)
            {
              v532 += 7;
              v69 = v533++ >= 9;
              if (v69)
              {
                v534 = 0;
                goto LABEL_1295;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v534 = 0;
LABEL_1295:
        v682 = v534 != 0;
        v683 = 717;
        goto LABEL_1376;
      case 112:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v538 = 0;
        v539 = 0;
        v540 = 0;
        *(_QWORD *)(a1 + 724) |= 0x4000000000000000uLL;
        while (2)
        {
          v541 = *v60;
          v542 = *(_QWORD *)&v41[v541];
          if (v542 == -1 || v542 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v543 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v542);
            *(_QWORD *)&v41[v541] = v542 + 1;
            v540 |= (unint64_t)(v543 & 0x7F) << v538;
            if (v543 < 0)
            {
              v538 += 7;
              v69 = v539++ >= 9;
              if (v69)
              {
                v540 = 0;
                goto LABEL_1299;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v540 = 0;
LABEL_1299:
        v682 = v540 != 0;
        v683 = 682;
        goto LABEL_1376;
      case 113:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v544 = 0;
        v545 = 0;
        v546 = 0;
        *(_QWORD *)(a1 + 732) |= 2uLL;
        while (2)
        {
          v547 = *v60;
          v548 = *(_QWORD *)&v41[v547];
          if (v548 == -1 || v548 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v549 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v548);
            *(_QWORD *)&v41[v547] = v548 + 1;
            v546 |= (unint64_t)(v549 & 0x7F) << v544;
            if (v549 < 0)
            {
              v544 += 7;
              v69 = v545++ >= 9;
              if (v69)
              {
                v546 = 0;
                goto LABEL_1303;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v546 = 0;
LABEL_1303:
        v682 = v546 != 0;
        v683 = 685;
        goto LABEL_1376;
      case 114:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v550 = 0;
        v551 = 0;
        v552 = 0;
        *(_QWORD *)(a1 + 724) |= 0x8000000000000000;
        while (2)
        {
          v553 = *v60;
          v554 = *(_QWORD *)&v41[v553];
          if (v554 == -1 || v554 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v555 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v554);
            *(_QWORD *)&v41[v553] = v554 + 1;
            v552 |= (unint64_t)(v555 & 0x7F) << v550;
            if (v555 < 0)
            {
              v550 += 7;
              v69 = v551++ >= 9;
              if (v69)
              {
                v552 = 0;
                goto LABEL_1307;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v552 = 0;
LABEL_1307:
        v682 = v552 != 0;
        v683 = 683;
        goto LABEL_1376;
      case 115:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v556 = 0;
        v557 = 0;
        v558 = 0;
        *(_QWORD *)(a1 + 732) |= 1uLL;
        while (2)
        {
          v559 = *v60;
          v560 = *(_QWORD *)&v41[v559];
          if (v560 == -1 || v560 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v561 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v560);
            *(_QWORD *)&v41[v559] = v560 + 1;
            v558 |= (unint64_t)(v561 & 0x7F) << v556;
            if (v561 < 0)
            {
              v556 += 7;
              v69 = v557++ >= 9;
              if (v69)
              {
                v558 = 0;
                goto LABEL_1311;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v558 = 0;
LABEL_1311:
        v682 = v558 != 0;
        v683 = 684;
        goto LABEL_1376;
      case 116:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v562 = 0;
        v563 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x10000uLL;
        while (2)
        {
          v564 = *v60;
          v565 = *(_QWORD *)&v41[v564];
          if (v565 == -1 || v565 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v566 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v565);
            *(_QWORD *)&v41[v564] = v565 + 1;
            v116 |= (unint64_t)(v566 & 0x7F) << v562;
            if (v566 < 0)
            {
              v562 += 7;
              v69 = v563++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1315;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1315:
        v684 = 528;
        goto LABEL_1393;
      case 117:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v567 = 0;
        v568 = 0;
        v569 = 0;
        *(_QWORD *)(a1 + 732) |= 0x1000uLL;
        while (2)
        {
          v570 = *v60;
          v571 = *(_QWORD *)&v41[v570];
          v572 = v571 + 1;
          if (v571 == -1 || v572 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v573 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v571);
            *(_QWORD *)&v41[v570] = v572;
            v569 |= (unint64_t)(v573 & 0x7F) << v567;
            if (v573 < 0)
            {
              v567 += 7;
              v69 = v568++ >= 9;
              if (v69)
              {
                v569 = 0;
                goto LABEL_1319;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v569 = 0;
LABEL_1319:
        v682 = v569 != 0;
        v683 = 696;
        goto LABEL_1376;
      case 118:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v574 = 0;
        v575 = 0;
        v576 = 0;
        *(_QWORD *)(a1 + 732) |= 0x4000uLL;
        while (2)
        {
          v577 = *v60;
          v578 = *(_QWORD *)&v41[v577];
          if (v578 == -1 || v578 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v579 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v578);
            *(_QWORD *)&v41[v577] = v578 + 1;
            v576 |= (unint64_t)(v579 & 0x7F) << v574;
            if (v579 < 0)
            {
              v574 += 7;
              v69 = v575++ >= 9;
              if (v69)
              {
                v576 = 0;
                goto LABEL_1323;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v576 = 0;
LABEL_1323:
        v682 = v576 != 0;
        v683 = 698;
        goto LABEL_1376;
      case 119:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x4000000000000000) == 0)
        {
          PBReaderReadString();
          v79 = objc_claimAutoreleasedReturnValue();
          v80 = 336;
LABEL_829:
          v580 = *(void **)(a1 + v80);
          *(_QWORD *)(a1 + v80) = v79;
          goto LABEL_949;
        }
        v737 = PBReaderSkipValueWithTag();
        v38 = v781;
        if ((v737 & 1) == 0)
          goto LABEL_1565;
        v738 = *(_QWORD *)(a1 + 732);
        v688 = (2 * v738) >> 40;
        v689 = (2 * v738) >> 63;
        goto LABEL_1471;
      case 120:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v581 = 0;
        v582 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x100000000uLL;
        while (2)
        {
          v583 = *v60;
          v584 = *(_QWORD *)&v41[v583];
          if (v584 == -1 || v584 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v585 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v584);
            *(_QWORD *)&v41[v583] = v584 + 1;
            v116 |= (unint64_t)(v585 & 0x7F) << v581;
            if (v585 < 0)
            {
              v581 += 7;
              v69 = v582++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1327;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1327:
        v684 = 592;
        goto LABEL_1393;
      case 121:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v586 = 0;
        v587 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x8000000uLL;
        while (2)
        {
          v588 = *v60;
          v589 = *(_QWORD *)&v41[v588];
          if (v589 == -1 || v589 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v590 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v589);
            *(_QWORD *)&v41[v588] = v589 + 1;
            v116 |= (unint64_t)(v590 & 0x7F) << v586;
            if (v590 < 0)
            {
              v586 += 7;
              v69 = v587++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1331;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1331:
        v684 = 572;
        goto LABEL_1393;
      case 122:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x400) != 0)
        {
          v739 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v739 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 51) | (*(unsigned __int16 *)(a1 + 740) << 13);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateSearchResults);
        if (!GEOLogMsgStateSearchResultsReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 448;
        goto LABEL_948;
      case 123:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x200000000000) != 0)
        {
          v740 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v740 & 1) == 0)
            goto LABEL_1565;
          v741 = *(_QWORD *)(a1 + 732);
          v688 = v741 << 18 >> 40;
          v689 = v741 << 18 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateImpressionObject);
        if (!GEOLogMsgStateImpressionObjectReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 112;
        goto LABEL_948;
      case 124:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x2000) != 0)
        {
          v742 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v742 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 54) | (*(unsigned __int16 *)(a1 + 740) << 10);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateTapEvent);
        if (!GEOLogMsgStateTapEventReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 472;
        goto LABEL_948;
      case 125:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x10000000000) != 0)
        {
          v743 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v743 & 1) == 0)
            goto LABEL_1565;
          v744 = *(_QWORD *)(a1 + 732);
          v688 = v744 << 23 >> 40;
          v689 = v744 << 23 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateActionButtonDetails);
        if (!GEOLogMsgStateActionButtonDetailsReadAllFrom(v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 72;
        goto LABEL_948;
      case 126:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v591 = 0;
        v592 = 0;
        v593 = 0;
        *(_QWORD *)(a1 + 732) |= 0x80000uLL;
        while (2)
        {
          v594 = *v60;
          v595 = *(_QWORD *)&v41[v594];
          v596 = v595 + 1;
          if (v595 == -1 || v596 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v597 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v595);
            *(_QWORD *)&v41[v594] = v596;
            v593 |= (unint64_t)(v597 & 0x7F) << v591;
            if (v597 < 0)
            {
              v591 += 7;
              v69 = v592++ >= 9;
              if (v69)
              {
                v593 = 0;
                goto LABEL_1335;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v593 = 0;
LABEL_1335:
        v682 = v593 != 0;
        v683 = 703;
        goto LABEL_1376;
      case 127:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v598 = 0;
        v599 = 0;
        v600 = 0;
        *(_QWORD *)(a1 + 732) |= 0x40000uLL;
        while (2)
        {
          v601 = *v60;
          v602 = *(_QWORD *)&v41[v601];
          v603 = v602 + 1;
          if (v602 == -1 || v603 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v604 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v602);
            *(_QWORD *)&v41[v601] = v603;
            v600 |= (unint64_t)(v604 & 0x7F) << v598;
            if (v604 < 0)
            {
              v598 += 7;
              v69 = v599++ >= 9;
              if (v69)
              {
                v600 = 0;
                goto LABEL_1339;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v600 = 0;
LABEL_1339:
        v682 = v600 != 0;
        v683 = 702;
        goto LABEL_1376;
      case 128:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v605 = 0;
        v606 = 0;
        v607 = 0;
        *(_QWORD *)(a1 + 732) |= 0x100000uLL;
        while (2)
        {
          v608 = *v60;
          v609 = *(_QWORD *)&v41[v608];
          v610 = v609 + 1;
          if (v609 == -1 || v610 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v611 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v609);
            *(_QWORD *)&v41[v608] = v610;
            v607 |= (unint64_t)(v611 & 0x7F) << v605;
            if (v611 < 0)
            {
              v605 += 7;
              v69 = v606++ >= 9;
              if (v69)
              {
                v607 = 0;
                goto LABEL_1343;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v607 = 0;
LABEL_1343:
        v682 = v607 != 0;
        v683 = 704;
        goto LABEL_1376;
      case 129:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x200000000000000) != 0)
        {
          v745 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v745 & 1) == 0)
            goto LABEL_1565;
          v746 = *(_QWORD *)(a1 + 732);
          v688 = v746 << 6 >> 40;
          v689 = v746 << 6 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateARPPhotoSubmission);
        if (!GEOLogMsgStateARPPhotoSubmissionReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 264;
        goto LABEL_948;
      case 130:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x100) != 0)
        {
          v747 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v747 & 1) == 0)
            goto LABEL_1565;
          v699 = (*(_QWORD *)(a1 + 732) >> 49) | (*(unsigned __int16 *)(a1 + 740) << 15);
          goto LABEL_1470;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateARPRatingSubmission);
        if (!GEOLogMsgStateARPRatingSubmissionReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 432;
        goto LABEL_948;
      case 131:
        if (!v74)
          goto LABEL_1017;
        if ((*(_WORD *)(a1 + 740) & 0x80) != 0)
        {
          v748 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v748 & 1) == 0)
            goto LABEL_1565;
          v699 = *(unsigned int *)(a1 + 738);
LABEL_1470:
          v688 = v699 << 40 >> 40;
          v689 = v699 << 40 >> 63;
          goto LABEL_1471;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateARPRatingPhotoSubmission);
        if (!GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom((uint64_t)v81, v41))
          goto LABEL_1564;
        PBReaderRecallMark();
        v82 = 424;
        goto LABEL_948;
      case 132:
        if (!v74 || (*(_WORD *)(a1 + 740) & 0x10) != 0)
          goto LABEL_1017;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEORevealedPlaceCardModule);
        if (!GEORevealedPlaceCardModuleReadAllFrom((uint64_t)v81, v41, v780 & 1))
          goto LABEL_1564;
        PBReaderRecallMark();
        -[GEOAnalyticsPipelineStateData _addNoFlagsPlaceCardRevealedPlaceCardModule:](a1, v81);
LABEL_910:

        goto LABEL_950;
      case 133:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v612 = 0;
        v613 = 0;
        v614 = 0;
        *(_QWORD *)(a1 + 732) |= 0x100uLL;
        while (2)
        {
          v615 = *v60;
          v616 = *(_QWORD *)&v41[v615];
          v617 = v616 + 1;
          if (v616 == -1 || v617 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v618 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v616);
            *(_QWORD *)&v41[v615] = v617;
            v614 |= (unint64_t)(v618 & 0x7F) << v612;
            if (v618 < 0)
            {
              v612 += 7;
              v69 = v613++ >= 9;
              if (v69)
              {
                v614 = 0;
                goto LABEL_1347;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v614 = 0;
LABEL_1347:
        v682 = v614 != 0;
        v683 = 692;
        goto LABEL_1376;
      case 134:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v619 = 0;
        v620 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x4000000uLL;
        while (2)
        {
          v621 = *v60;
          v622 = *(_QWORD *)&v41[v621];
          if (v622 == -1 || v622 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v623 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v622);
            *(_QWORD *)&v41[v621] = v622 + 1;
            v116 |= (unint64_t)(v623 & 0x7F) << v619;
            if (v623 < 0)
            {
              v619 += 7;
              v69 = v620++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1351;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1351:
        v684 = 568;
        goto LABEL_1393;
      case 135:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v624 = 0;
        v625 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x1000000000uLL;
        while (2)
        {
          v626 = *v60;
          v627 = *(_QWORD *)&v41[v626];
          v628 = v627 + 1;
          if (v627 == -1 || v628 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v629 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v627);
            *(_QWORD *)&v41[v626] = v628;
            v116 |= (unint64_t)(v629 & 0x7F) << v624;
            if (v629 < 0)
            {
              v624 += 7;
              v69 = v625++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1355;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1355:
        v684 = 608;
        goto LABEL_1393;
      case 136:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v630 = 0;
        v631 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x8000000000000uLL;
        while (2)
        {
          v632 = *v60;
          v633 = *(_QWORD *)&v41[v632];
          v634 = v633 + 1;
          if (v633 == -1 || v634 > *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v635 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v633);
            *(_QWORD *)&v41[v632] = v634;
            v116 |= (unint64_t)(v635 & 0x7F) << v630;
            if (v635 < 0)
            {
              v630 += 7;
              v69 = v631++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1359;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1359:
        v684 = 668;
        goto LABEL_1393;
      case 137:
        if (!v74)
          goto LABEL_1017;
        if ((*(_QWORD *)(a1 + 732) & 0x10000000000000) != 0)
        {
          v750 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v750 & 1) == 0)
            goto LABEL_1565;
          v751 = *(_QWORD *)(a1 + 732);
          v688 = v751 << 11 >> 40;
          v689 = v751 << 11 >> 63;
LABEL_1471:
          *((_QWORD *)&v749 + 1) = v689;
          *(_QWORD *)&v749 = v688;
          v6 += v749 >> 23;
          goto LABEL_1508;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_1565;
        v81 = objc_alloc_init(GEOLogMsgStateMapsPlaceIds);
        if (GEOLogMsgStateMapsPlaceIdsReadAllFrom(v81, v41))
        {
          PBReaderRecallMark();
          v82 = 224;
LABEL_948:
          v580 = *(void **)(a1 + v82);
          *(_QWORD *)(a1 + v82) = v81;
LABEL_949:

          --v6;
LABEL_950:
          v38 = v781;
LABEL_1508:
          if (!(v58 & 1 | (v6 != 0)) || *(_QWORD *)&v41[*v60] >= *(_QWORD *)&v41[*v42])
            goto LABEL_1510;
          continue;
        }
LABEL_1564:

LABEL_1565:
        v769 = 0;
        v778 = *(_BYTE *)(a1 + 742) | 1;
        v779 = *(_QWORD *)(a1 + 732) | 0xFFFFFFE000000000;
        *(_WORD *)(a1 + 740) = -1;
        *(_QWORD *)(a1 + 732) = v779;
        *(_BYTE *)(a1 + 742) = v778;
        if ((v58 & 1) != 0)
          goto LABEL_1562;
        return v769;
      case 139:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v637 = 0;
        v638 = 0;
        v639 = 0;
        *(_QWORD *)(a1 + 724) |= 0x20000000000000uLL;
        while (2)
        {
          v640 = *v60;
          v641 = *(_QWORD *)&v41[v640];
          if (v641 == -1 || v641 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v642 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v641);
            *(_QWORD *)&v41[v640] = v641 + 1;
            v639 |= (unint64_t)(v642 & 0x7F) << v637;
            if (v642 < 0)
            {
              v637 += 7;
              v69 = v638++ >= 9;
              if (v69)
              {
                v639 = 0;
                goto LABEL_1363;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v639 = 0;
LABEL_1363:
        v682 = v639 != 0;
        v683 = 673;
        goto LABEL_1376;
      case 140:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v643 = 0;
        v644 = 0;
        v645 = 0;
        *(_QWORD *)(a1 + 732) |= 0x20000000uLL;
        while (2)
        {
          v646 = *v60;
          v647 = *(_QWORD *)&v41[v646];
          if (v647 == -1 || v647 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v648 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v647);
            *(_QWORD *)&v41[v646] = v647 + 1;
            v645 |= (unint64_t)(v648 & 0x7F) << v643;
            if (v648 < 0)
            {
              v643 += 7;
              v69 = v644++ >= 9;
              if (v69)
              {
                v645 = 0;
                goto LABEL_1367;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v645 = 0;
LABEL_1367:
        v682 = v645 != 0;
        v683 = 713;
        goto LABEL_1376;
      case 141:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v649 = 0;
        v650 = 0;
        v651 = 0;
        *(_QWORD *)(a1 + 732) |= 0x8000000uLL;
        while (2)
        {
          v652 = *v60;
          v653 = *(_QWORD *)&v41[v652];
          if (v653 == -1 || v653 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v654 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v653);
            *(_QWORD *)&v41[v652] = v653 + 1;
            v651 |= (unint64_t)(v654 & 0x7F) << v649;
            if (v654 < 0)
            {
              v649 += 7;
              v69 = v650++ >= 9;
              if (v69)
              {
                v651 = 0;
                goto LABEL_1371;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v651 = 0;
LABEL_1371:
        v682 = v651 != 0;
        v683 = 711;
        goto LABEL_1376;
      case 142:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v655 = 0;
        v656 = 0;
        v657 = 0;
        *(_QWORD *)(a1 + 732) |= 0x10000000uLL;
        while (2)
        {
          v658 = *v60;
          v659 = *(_QWORD *)&v41[v658];
          if (v659 == -1 || v659 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v660 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v659);
            *(_QWORD *)&v41[v658] = v659 + 1;
            v657 |= (unint64_t)(v660 & 0x7F) << v655;
            if (v660 < 0)
            {
              v655 += 7;
              v69 = v656++ >= 9;
              if (v69)
              {
                v657 = 0;
                goto LABEL_1375;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          v657 = 0;
LABEL_1375:
        v682 = v657 != 0;
        v683 = 712;
LABEL_1376:
        *(_BYTE *)(a1 + v683) = v682;
        goto LABEL_1508;
      case 144:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v661 = 0;
        v662 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x100000uLL;
        while (2)
        {
          v663 = *v60;
          v664 = *(_QWORD *)&v41[v663];
          if (v664 == -1 || v664 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v665 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v664);
            *(_QWORD *)&v41[v663] = v664 + 1;
            v116 |= (unint64_t)(v665 & 0x7F) << v661;
            if (v665 < 0)
            {
              v661 += 7;
              v69 = v662++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1380;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1380:
        v684 = 544;
        goto LABEL_1393;
      case 145:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v666 = 0;
        v667 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x80000uLL;
        while (2)
        {
          v668 = *v60;
          v669 = *(_QWORD *)&v41[v668];
          if (v669 == -1 || v669 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v670 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v669);
            *(_QWORD *)&v41[v668] = v669 + 1;
            v116 |= (unint64_t)(v670 & 0x7F) << v666;
            if (v670 < 0)
            {
              v666 += 7;
              v69 = v667++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1384;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1384:
        v684 = 540;
        goto LABEL_1393;
      case 146:
        if ((v38 & 1) == 0)
          goto LABEL_1017;
        v671 = 0;
        v672 = 0;
        v116 = 0;
        *(_QWORD *)(a1 + 724) |= 0x40000uLL;
        while (2)
        {
          v673 = *v60;
          v674 = *(_QWORD *)&v41[v673];
          if (v674 == -1 || v674 >= *(_QWORD *)&v41[*v42])
          {
            v41[*v61] = 1;
          }
          else
          {
            v675 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v674);
            *(_QWORD *)&v41[v673] = v674 + 1;
            v116 |= (unint64_t)(v675 & 0x7F) << v671;
            if (v675 < 0)
            {
              v671 += 7;
              v69 = v672++ >= 9;
              if (v69)
              {
                LODWORD(v116) = 0;
                goto LABEL_1388;
              }
              continue;
            }
          }
          break;
        }
        if (v41[*v61])
          LODWORD(v116) = 0;
LABEL_1388:
        v684 = 536;
        goto LABEL_1393;
      case 147:
        if ((v38 & 1) != 0)
        {
          v676 = 0;
          v677 = 0;
          v116 = 0;
          *(_QWORD *)(a1 + 724) |= 0x20000uLL;
          while (1)
          {
            v678 = *v60;
            v679 = *(_QWORD *)&v41[v678];
            if (v679 == -1 || v679 >= *(_QWORD *)&v41[*v42])
              break;
            v680 = *(_BYTE *)(*(_QWORD *)&v41[*v62] + v679);
            *(_QWORD *)&v41[v678] = v679 + 1;
            v116 |= (unint64_t)(v680 & 0x7F) << v676;
            if ((v680 & 0x80) == 0)
              goto LABEL_1390;
            v676 += 7;
            v69 = v677++ >= 9;
            if (v69)
            {
              LODWORD(v116) = 0;
              goto LABEL_1392;
            }
          }
          v41[*v61] = 1;
LABEL_1390:
          if (v41[*v61])
            LODWORD(v116) = 0;
LABEL_1392:
          v684 = 532;
LABEL_1393:
          *(_DWORD *)(a1 + v684) = v116;
        }
        else
        {
LABEL_1017:
          v681 = PBReaderSkipValueWithTag();
          v38 = v781;
          if ((v681 & 1) == 0)
            goto LABEL_1565;
        }
        goto LABEL_1508;
      default:
        v636 = PBReaderSkipValueWithTag();
        v38 = v781;
        if (!v636)
          goto LABEL_1565;
        goto LABEL_1508;
    }
  }
}

void sub_18970B124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970B288(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970B76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970E0D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970E76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970E8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970EC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970EFD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970F550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970F814(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970F978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970FB8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18970FFB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189710114(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189710280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971062C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189710794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897109A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189710F24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189711088(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897113FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189711568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897116D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189711B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189711CF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189717638(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971779C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189717900(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189717B18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189718278(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897188A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189718A04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189718B70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189718CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189719400(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A124(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A3F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A6B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A820(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971A988(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18971AAE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189727EFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAnalyticsPipelineStateDataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[10], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[51], "readAll:", 1);
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = a1[50];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v18;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v18 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v17, v22, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[31], "readAll:", 1);
  objc_msgSend(a1[55], "readAll:", 1);
  objc_msgSend(a1[52], "readAll:", 1);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v7 = a1[57];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v14;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v14 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v11++), "readAll:", 1, (_QWORD)v13);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v21, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[60], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[56], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[59], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[33], "readAll:", 1);
  objc_msgSend(a1[54], "readAll:", 1);
  objc_msgSend(a1[53], "readAll:", 1);
  return objc_msgSend(a1[28], "readAll:", 1);
}

BOOL GEOAnalyticsPipelineStateDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  _BOOL8 Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 508))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOAnalyticsPipelineStateDataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 512));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 504) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 508) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOAnalyticsPipelineStateDataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOAnalyticsPipelineStateDataReadAllFrom_initialTag;
  Specified = GEOAnalyticsPipelineStateDataReadSpecified(a1, (char *)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOAnalyticsPipelineStateDataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 512));
  return Specified;
}

void sub_189728354(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnalyticsPipelineStateDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOAnalyticsPipelineStateDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897283B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAnalyticsPipelineStateDataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  BOOL v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  int v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int v120;
  unsigned int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  int v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  int v135;
  unsigned int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  int v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  int v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  int v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  int v155;
  unsigned int v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  int v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  int v165;
  unsigned int v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  int v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  int v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  int v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  int v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  int v200;
  unsigned int v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  int v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  int v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  int v215;
  unsigned int v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  int v220;
  unsigned int v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  int v225;
  unsigned int v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  int v230;
  unsigned int v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  int v235;
  unsigned int v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  int v240;
  unsigned int v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  int v245;
  unsigned int v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  int v250;
  unsigned int v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  int v255;
  unsigned int v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  int v260;
  unsigned int v261;
  uint64_t v262;
  unint64_t v263;
  unint64_t v264;
  int v265;
  unsigned int v266;
  uint64_t v267;
  unint64_t v268;
  unint64_t v269;
  int v270;
  unsigned int v271;
  uint64_t v272;
  unint64_t v273;
  unint64_t v274;
  int v275;
  unsigned int v276;
  uint64_t v277;
  unint64_t v278;
  unint64_t v279;
  int v280;
  unsigned int v281;
  uint64_t v282;
  unint64_t v283;
  unint64_t v284;
  int v285;
  unsigned int v286;
  uint64_t v287;
  unint64_t v288;
  unint64_t v289;
  int v290;
  unsigned int v291;
  uint64_t v292;
  unint64_t v293;
  unint64_t v294;
  int v295;
  unsigned int v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  int v300;
  unsigned int v301;
  uint64_t v302;
  unint64_t v303;
  unint64_t v304;
  int v305;
  unsigned int v306;
  uint64_t v307;
  unint64_t v308;
  unint64_t v309;
  int v310;
  unsigned int v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  int v315;
  unsigned int v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  int v320;
  unsigned int v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  int v325;
  unsigned int v326;
  uint64_t v327;
  uint64_t v328;
  unint64_t v329;
  int v330;
  unsigned int v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  int v335;
  unsigned int v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  int v340;
  unsigned int v341;
  uint64_t v342;
  unint64_t v343;
  unint64_t v344;
  int v345;
  unsigned int v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  int v350;
  unsigned int v351;
  uint64_t v352;
  unint64_t v353;
  unint64_t v354;
  int v355;
  unsigned int v356;
  uint64_t v357;
  unint64_t v358;
  unint64_t v359;
  int v360;
  unsigned int v361;
  uint64_t v362;
  unint64_t v363;
  unint64_t v364;
  int v365;
  unsigned int v366;
  uint64_t v367;
  unint64_t v368;
  unint64_t v369;
  int v370;
  unsigned int v371;
  uint64_t v372;
  unint64_t v373;
  unint64_t v374;
  int v375;
  unsigned int v376;
  uint64_t v377;
  unint64_t v378;
  unint64_t v379;
  int v380;
  unsigned int v381;
  uint64_t v382;
  unint64_t v383;
  unint64_t v384;
  int v385;
  unsigned int v386;
  uint64_t v387;
  unint64_t v388;
  unint64_t v389;
  int v390;
  unsigned int v391;
  uint64_t v392;
  unint64_t v393;
  unint64_t v394;
  int v395;
  unsigned int v396;
  uint64_t v397;
  unint64_t v398;
  unint64_t v399;
  int v400;
  unsigned int v401;
  uint64_t v402;
  uint64_t v403;
  unint64_t v404;
  int v405;
  unsigned int v406;
  uint64_t v407;
  unint64_t v408;
  unint64_t v409;
  int v410;
  unsigned int v411;
  uint64_t v412;
  unint64_t v413;
  unint64_t v414;
  int v415;
  unsigned int v416;
  uint64_t v417;
  unint64_t v418;
  unint64_t v419;
  int v420;
  unsigned int v421;
  uint64_t v422;
  uint64_t v423;
  unint64_t v424;
  int v425;
  unsigned int v426;
  uint64_t v427;
  uint64_t v428;
  unint64_t v429;
  int v430;
  unsigned int v431;
  uint64_t v432;
  uint64_t v433;
  unint64_t v434;
  int v435;
  unsigned int v436;
  uint64_t v437;
  uint64_t v438;
  unint64_t v439;
  int v440;
  unsigned int v441;
  uint64_t v442;
  unint64_t v443;
  unint64_t v444;
  int v445;
  unsigned int v446;
  uint64_t v447;
  uint64_t v448;
  unint64_t v449;
  int v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t v453;
  unint64_t v454;
  int v455;
  unsigned int v456;
  uint64_t v457;
  unint64_t v458;
  unint64_t v459;
  int v460;
  unsigned int v461;
  uint64_t v462;
  uint64_t v463;
  unint64_t v464;
  int v465;
  unsigned int v466;
  uint64_t v467;
  uint64_t v468;
  unint64_t v469;
  int v470;
  unsigned int v471;
  uint64_t v472;
  uint64_t v473;
  unint64_t v474;
  int v475;
  unsigned int v476;
  uint64_t v477;
  unint64_t v478;
  unint64_t v479;
  int v480;
  unsigned int v481;
  uint64_t v482;
  unint64_t v483;
  unint64_t v484;
  int v485;
  unsigned int v486;
  uint64_t v487;
  unint64_t v488;
  unint64_t v489;
  int v490;
  unsigned int v491;
  uint64_t v492;
  unint64_t v493;
  unint64_t v494;
  int v495;
  unsigned int v496;
  uint64_t v497;
  uint64_t v498;
  unint64_t v499;
  int v500;
  unsigned int v501;
  uint64_t v502;
  uint64_t v503;
  unint64_t v504;
  int v505;
  _BOOL8 v506;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = *v4;
          v14 = a1[v13];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = *v4;
      v14 = a1[v13];
      if (a1[v13])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2)
            goto LABEL_933;
          goto LABEL_841;
        case 2u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCarInfoIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v20 = 0;
          while (1)
          {
            v21 = *v2;
            v22 = *(_QWORD *)&a1[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v24 = *(char *)(*(_QWORD *)&a1[*v5] + v22);
            *(_QWORD *)&a1[v21] = v23;
            if (v24 < 0)
            {
              v25 = v20++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v26 = 0;
          while (1)
          {
            v27 = *v2;
            v28 = *(_QWORD *)&a1[v27];
            v29 = v28 + 1;
            if (v28 == -1 || v29 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
            *(_QWORD *)&a1[v27] = v29;
            if (v30 < 0)
            {
              v25 = v26++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v31 = 0;
          while (1)
          {
            v32 = *v2;
            v33 = *(_QWORD *)&a1[v32];
            v34 = v33 + 1;
            if (v33 == -1 || v34 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v35 = *(char *)(*(_QWORD *)&a1[*v5] + v33);
            *(_QWORD *)&a1[v32] = v34;
            if (v35 < 0)
            {
              v25 = v31++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v36 = 0;
          while (1)
          {
            v37 = *v2;
            v38 = *(_QWORD *)&a1[v37];
            v39 = v38 + 1;
            if (v38 == -1 || v39 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v40 = *(char *)(*(_QWORD *)&a1[*v5] + v38);
            *(_QWORD *)&a1[v37] = v39;
            if (v40 < 0)
            {
              v25 = v36++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 8u:
        case 0xCu:
        case 0x1Eu:
        case 0x1Fu:
        case 0x27u:
        case 0x37u:
        case 0x60u:
        case 0x64u:
          if (v15 != 1)
            goto LABEL_933;
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_908;
          v19 = v18 + 8;
          if (v19 > *(_QWORD *)&a1[*v3])
            goto LABEL_908;
          *(_QWORD *)&a1[v17] = v19;
          goto LABEL_909;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v41 = 0;
          while (1)
          {
            v42 = *v2;
            v43 = *(_QWORD *)&a1[v42];
            v44 = v43 + 1;
            if (v43 == -1 || v44 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v45 = *(char *)(*(_QWORD *)&a1[*v5] + v43);
            *(_QWORD *)&a1[v42] = v44;
            if (v45 < 0)
            {
              v25 = v41++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v46 = 0;
          while (1)
          {
            v47 = *v2;
            v48 = *(_QWORD *)&a1[v47];
            v49 = v48 + 1;
            if (v48 == -1 || v49 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v50 = *(char *)(*(_QWORD *)&a1[*v5] + v48);
            *(_QWORD *)&a1[v47] = v49;
            if (v50 < 0)
            {
              v25 = v46++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v51 = 0;
          while (1)
          {
            v52 = *v2;
            v53 = *(_QWORD *)&a1[v52];
            v54 = v53 + 1;
            if (v53 == -1 || v54 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v55 = *(char *)(*(_QWORD *)&a1[*v5] + v53);
            *(_QWORD *)&a1[v52] = v54;
            if (v55 < 0)
            {
              v25 = v51++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0xEu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v56 = 0;
          while (1)
          {
            v57 = *v2;
            v58 = *(_QWORD *)&a1[v57];
            v59 = v58 + 1;
            if (v58 == -1 || v59 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v60 = *(char *)(*(_QWORD *)&a1[*v5] + v58);
            *(_QWORD *)&a1[v57] = v59;
            if (v60 < 0)
            {
              v25 = v56++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v61 = 0;
          while (1)
          {
            v62 = *v2;
            v63 = *(_QWORD *)&a1[v62];
            v64 = v63 + 1;
            if (v63 == -1 || v64 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v65 = *(char *)(*(_QWORD *)&a1[*v5] + v63);
            *(_QWORD *)&a1[v62] = v64;
            if (v65 < 0)
            {
              v25 = v61++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v66 = 0;
          while (1)
          {
            v67 = *v2;
            v68 = *(_QWORD *)&a1[v67];
            v69 = v68 + 1;
            if (v68 == -1 || v69 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v70 = *(char *)(*(_QWORD *)&a1[*v5] + v68);
            *(_QWORD *)&a1[v67] = v69;
            if (v70 < 0)
            {
              v25 = v66++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v71 = 0;
          while (1)
          {
            v72 = *v2;
            v73 = *(_QWORD *)&a1[v72];
            v74 = v73 + 1;
            if (v73 == -1 || v74 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v75 = *(char *)(*(_QWORD *)&a1[*v5] + v73);
            *(_QWORD *)&a1[v72] = v74;
            if (v75 < 0)
            {
              v25 = v71++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v76 = 0;
          while (1)
          {
            v77 = *v2;
            v78 = *(_QWORD *)&a1[v77];
            v79 = v78 + 1;
            if (v78 == -1 || v79 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v80 = *(char *)(*(_QWORD *)&a1[*v5] + v78);
            *(_QWORD *)&a1[v77] = v79;
            if (v80 < 0)
            {
              v25 = v76++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x13u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v81 = 0;
          while (1)
          {
            v82 = *v2;
            v83 = *(_QWORD *)&a1[v82];
            v84 = v83 + 1;
            if (v83 == -1 || v84 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v85 = *(char *)(*(_QWORD *)&a1[*v5] + v83);
            *(_QWORD *)&a1[v82] = v84;
            if (v85 < 0)
            {
              v25 = v81++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x14u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v86 = 0;
          while (1)
          {
            v87 = *v2;
            v88 = *(_QWORD *)&a1[v87];
            v89 = v88 + 1;
            if (v88 == -1 || v89 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v90 = *(char *)(*(_QWORD *)&a1[*v5] + v88);
            *(_QWORD *)&a1[v87] = v89;
            if (v90 < 0)
            {
              v25 = v86++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v91 = 0;
          while (1)
          {
            v92 = *v2;
            v93 = *(_QWORD *)&a1[v92];
            v94 = v93 + 1;
            if (v93 == -1 || v94 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v95 = *(char *)(*(_QWORD *)&a1[*v5] + v93);
            *(_QWORD *)&a1[v92] = v94;
            if (v95 < 0)
            {
              v25 = v91++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v96 = 0;
          while (1)
          {
            v97 = *v2;
            v98 = *(_QWORD *)&a1[v97];
            v99 = v98 + 1;
            if (v98 == -1 || v99 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v100 = *(char *)(*(_QWORD *)&a1[*v5] + v98);
            *(_QWORD *)&a1[v97] = v99;
            if (v100 < 0)
            {
              v25 = v96++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x17u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v101 = 0;
          while (1)
          {
            v102 = *v2;
            v103 = *(_QWORD *)&a1[v102];
            v104 = v103 + 1;
            if (v103 == -1 || v104 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v105 = *(char *)(*(_QWORD *)&a1[*v5] + v103);
            *(_QWORD *)&a1[v102] = v104;
            if (v105 < 0)
            {
              v25 = v101++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v106 = 0;
          while (1)
          {
            v107 = *v2;
            v108 = *(_QWORD *)&a1[v107];
            v109 = v108 + 1;
            if (v108 == -1 || v109 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v110 = *(char *)(*(_QWORD *)&a1[*v5] + v108);
            *(_QWORD *)&a1[v107] = v109;
            if (v110 < 0)
            {
              v25 = v106++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x19u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v111 = 0;
          while (1)
          {
            v112 = *v2;
            v113 = *(_QWORD *)&a1[v112];
            v114 = v113 + 1;
            if (v113 == -1 || v114 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v115 = *(char *)(*(_QWORD *)&a1[*v5] + v113);
            *(_QWORD *)&a1[v112] = v114;
            if (v115 < 0)
            {
              v25 = v111++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v116 = 0;
          while (1)
          {
            v117 = *v2;
            v118 = *(_QWORD *)&a1[v117];
            v119 = v118 + 1;
            if (v118 == -1 || v119 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v120 = *(char *)(*(_QWORD *)&a1[*v5] + v118);
            *(_QWORD *)&a1[v117] = v119;
            if (v120 < 0)
            {
              v25 = v116++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v121 = 0;
          while (1)
          {
            v122 = *v2;
            v123 = *(_QWORD *)&a1[v122];
            v124 = v123 + 1;
            if (v123 == -1 || v124 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v125 = *(char *)(*(_QWORD *)&a1[*v5] + v123);
            *(_QWORD *)&a1[v122] = v124;
            if (v125 < 0)
            {
              v25 = v121++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v126 = 0;
          while (1)
          {
            v127 = *v2;
            v128 = *(_QWORD *)&a1[v127];
            v129 = v128 + 1;
            if (v128 == -1 || v129 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v130 = *(char *)(*(_QWORD *)&a1[*v5] + v128);
            *(_QWORD *)&a1[v127] = v129;
            if (v130 < 0)
            {
              v25 = v126++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x1Du:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v131 = 0;
          while (1)
          {
            v132 = *v2;
            v133 = *(_QWORD *)&a1[v132];
            v134 = v133 + 1;
            if (v133 == -1 || v134 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v135 = *(char *)(*(_QWORD *)&a1[*v5] + v133);
            *(_QWORD *)&a1[v132] = v134;
            if (v135 < 0)
            {
              v25 = v131++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x20u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v136 = 0;
          while (1)
          {
            v137 = *v2;
            v138 = *(_QWORD *)&a1[v137];
            v139 = v138 + 1;
            if (v138 == -1 || v139 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v140 = *(char *)(*(_QWORD *)&a1[*v5] + v138);
            *(_QWORD *)&a1[v137] = v139;
            if (v140 < 0)
            {
              v25 = v136++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v141 = 0;
          while (1)
          {
            v142 = *v2;
            v143 = *(_QWORD *)&a1[v142];
            v144 = v143 + 1;
            if (v143 == -1 || v144 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v145 = *(char *)(*(_QWORD *)&a1[*v5] + v143);
            *(_QWORD *)&a1[v142] = v144;
            if (v145 < 0)
            {
              v25 = v141++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x22u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v146 = 0;
          while (1)
          {
            v147 = *v2;
            v148 = *(_QWORD *)&a1[v147];
            v149 = v148 + 1;
            if (v148 == -1 || v149 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v150 = *(char *)(*(_QWORD *)&a1[*v5] + v148);
            *(_QWORD *)&a1[v147] = v149;
            if (v150 < 0)
            {
              v25 = v146++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x23u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v151 = 0;
          while (1)
          {
            v152 = *v2;
            v153 = *(_QWORD *)&a1[v152];
            v154 = v153 + 1;
            if (v153 == -1 || v154 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v155 = *(char *)(*(_QWORD *)&a1[*v5] + v153);
            *(_QWORD *)&a1[v152] = v154;
            if (v155 < 0)
            {
              v25 = v151++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x24u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v156 = 0;
          while (1)
          {
            v157 = *v2;
            v158 = *(_QWORD *)&a1[v157];
            v159 = v158 + 1;
            if (v158 == -1 || v159 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v160 = *(char *)(*(_QWORD *)&a1[*v5] + v158);
            *(_QWORD *)&a1[v157] = v159;
            if (v160 < 0)
            {
              v25 = v156++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x25u:
          if (v15 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0)
            goto LABEL_933;
          goto LABEL_840;
        case 0x26u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v161 = 0;
          while (1)
          {
            v162 = *v2;
            v163 = *(_QWORD *)&a1[v162];
            v164 = v163 + 1;
            if (v163 == -1 || v164 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v165 = *(char *)(*(_QWORD *)&a1[*v5] + v163);
            *(_QWORD *)&a1[v162] = v164;
            if (v165 < 0)
            {
              v25 = v161++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x28u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v166 = 0;
          while (1)
          {
            v167 = *v2;
            v168 = *(_QWORD *)&a1[v167];
            v169 = v168 + 1;
            if (v168 == -1 || v169 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v170 = *(char *)(*(_QWORD *)&a1[*v5] + v168);
            *(_QWORD *)&a1[v167] = v169;
            if (v170 < 0)
            {
              v25 = v166++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x29u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v171 = 0;
          while (1)
          {
            v172 = *v2;
            v173 = *(_QWORD *)&a1[v172];
            v174 = v173 + 1;
            if (v173 == -1 || v174 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v175 = *(char *)(*(_QWORD *)&a1[*v5] + v173);
            *(_QWORD *)&a1[v172] = v174;
            if (v175 < 0)
            {
              v25 = v171++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x2Au:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v176 = 0;
          while (1)
          {
            v177 = *v2;
            v178 = *(_QWORD *)&a1[v177];
            v179 = v178 + 1;
            if (v178 == -1 || v179 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v180 = *(char *)(*(_QWORD *)&a1[*v5] + v178);
            *(_QWORD *)&a1[v177] = v179;
            if (v180 < 0)
            {
              v25 = v176++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x2Bu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v181 = 0;
          while (1)
          {
            v182 = *v2;
            v183 = *(_QWORD *)&a1[v182];
            v184 = v183 + 1;
            if (v183 == -1 || v184 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v185 = *(char *)(*(_QWORD *)&a1[*v5] + v183);
            *(_QWORD *)&a1[v182] = v184;
            if (v185 < 0)
            {
              v25 = v181++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x2Cu:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_933;
            while (1)
            {
              v186 = *v2;
              v187 = *(_QWORD *)&a1[v186];
              v188 = v187 + 1;
              if (v187 == -1 || v188 > *(_QWORD *)&a1[*v3])
                goto LABEL_907;
              v189 = *(char *)(*(_QWORD *)&a1[*v5] + v187);
              *(_QWORD *)&a1[v186] = v188;
              if (v189 < 0)
              {
                v190 = v15++;
                if (v190 <= 8)
                  continue;
              }
              goto LABEL_909;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_933;
LABEL_912:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v496 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v497 = *v2;
              v498 = *(_QWORD *)&a1[v497];
              v499 = v498 + 1;
              if (v498 == -1 || v499 > *(_QWORD *)&a1[*v3])
                break;
              v500 = *(char *)(*(_QWORD *)&a1[*v5] + v498);
              *(_QWORD *)&a1[v497] = v499;
              if (v500 < 0)
              {
                v12 = v496++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_912;
            }
            a1[*v4] = 1;
          }
          goto LABEL_840;
        case 0x2Du:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_933:
              PBReaderRecallMark();
              return 0;
            }
LABEL_922:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v501 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v502 = *v2;
                v503 = *(_QWORD *)&a1[v502];
                v504 = v503 + 1;
                if (v503 == -1 || v504 > *(_QWORD *)&a1[*v3])
                  break;
                v505 = *(char *)(*(_QWORD *)&a1[*v5] + v503);
                *(_QWORD *)&a1[v502] = v504;
                if (v505 < 0)
                {
                  v12 = v501++ >= 9;
                  if (!v12)
                    continue;
                }
                goto LABEL_922;
              }
              a1[*v4] = 1;
            }
LABEL_840:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_933;
            while (1)
            {
              v191 = *v2;
              v192 = *(_QWORD *)&a1[v191];
              v193 = v192 + 1;
              if (v192 == -1 || v193 > *(_QWORD *)&a1[*v3])
                break;
              v194 = *(char *)(*(_QWORD *)&a1[*v5] + v192);
              *(_QWORD *)&a1[v191] = v193;
              if (v194 < 0)
              {
                v195 = v15++;
                if (v195 <= 8)
                  continue;
              }
              goto LABEL_909;
            }
LABEL_907:
            v13 = *v4;
LABEL_908:
            a1[v13] = 1;
          }
LABEL_909:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_931;
          break;
        case 0x2Eu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x2Fu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v196 = 0;
          while (1)
          {
            v197 = *v2;
            v198 = *(_QWORD *)&a1[v197];
            v199 = v198 + 1;
            if (v198 == -1 || v199 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v200 = *(char *)(*(_QWORD *)&a1[*v5] + v198);
            *(_QWORD *)&a1[v197] = v199;
            if (v200 < 0)
            {
              v25 = v196++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x30u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x31u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v201 = 0;
          while (1)
          {
            v202 = *v2;
            v203 = *(_QWORD *)&a1[v202];
            v204 = v203 + 1;
            if (v203 == -1 || v204 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v205 = *(char *)(*(_QWORD *)&a1[*v5] + v203);
            *(_QWORD *)&a1[v202] = v204;
            if (v205 < 0)
            {
              v25 = v201++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x32u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v206 = 0;
          while (1)
          {
            v207 = *v2;
            v208 = *(_QWORD *)&a1[v207];
            v209 = v208 + 1;
            if (v208 == -1 || v209 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v210 = *(char *)(*(_QWORD *)&a1[*v5] + v208);
            *(_QWORD *)&a1[v207] = v209;
            if (v210 < 0)
            {
              v25 = v206++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x33u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x34u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x35u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v211 = 0;
          while (1)
          {
            v212 = *v2;
            v213 = *(_QWORD *)&a1[v212];
            v214 = v213 + 1;
            if (v213 == -1 || v214 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v215 = *(char *)(*(_QWORD *)&a1[*v5] + v213);
            *(_QWORD *)&a1[v212] = v214;
            if (v215 < 0)
            {
              v25 = v211++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x36u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x38u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v216 = 0;
          while (1)
          {
            v217 = *v2;
            v218 = *(_QWORD *)&a1[v217];
            v219 = v218 + 1;
            if (v218 == -1 || v219 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v220 = *(char *)(*(_QWORD *)&a1[*v5] + v218);
            *(_QWORD *)&a1[v217] = v219;
            if (v220 < 0)
            {
              v25 = v216++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x39u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v221 = 0;
          while (1)
          {
            v222 = *v2;
            v223 = *(_QWORD *)&a1[v222];
            v224 = v223 + 1;
            if (v223 == -1 || v224 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v225 = *(char *)(*(_QWORD *)&a1[*v5] + v223);
            *(_QWORD *)&a1[v222] = v224;
            if (v225 < 0)
            {
              v25 = v221++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x3Au:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v226 = 0;
          while (1)
          {
            v227 = *v2;
            v228 = *(_QWORD *)&a1[v227];
            v229 = v228 + 1;
            if (v228 == -1 || v229 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v230 = *(char *)(*(_QWORD *)&a1[*v5] + v228);
            *(_QWORD *)&a1[v227] = v229;
            if (v230 < 0)
            {
              v25 = v226++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x3Bu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x3Cu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x3Du:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v231 = 0;
          while (1)
          {
            v232 = *v2;
            v233 = *(_QWORD *)&a1[v232];
            v234 = v233 + 1;
            if (v233 == -1 || v234 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v235 = *(char *)(*(_QWORD *)&a1[*v5] + v233);
            *(_QWORD *)&a1[v232] = v234;
            if (v235 < 0)
            {
              v25 = v231++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x3Eu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x3Fu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x40u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v236 = 0;
          while (1)
          {
            v237 = *v2;
            v238 = *(_QWORD *)&a1[v237];
            v239 = v238 + 1;
            if (v238 == -1 || v239 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v240 = *(char *)(*(_QWORD *)&a1[*v5] + v238);
            *(_QWORD *)&a1[v237] = v239;
            if (v240 < 0)
            {
              v25 = v236++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x41u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v241 = 0;
          while (1)
          {
            v242 = *v2;
            v243 = *(_QWORD *)&a1[v242];
            v244 = v243 + 1;
            if (v243 == -1 || v244 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v245 = *(char *)(*(_QWORD *)&a1[*v5] + v243);
            *(_QWORD *)&a1[v242] = v244;
            if (v245 < 0)
            {
              v25 = v241++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x42u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v246 = 0;
          while (1)
          {
            v247 = *v2;
            v248 = *(_QWORD *)&a1[v247];
            v249 = v248 + 1;
            if (v248 == -1 || v249 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v250 = *(char *)(*(_QWORD *)&a1[*v5] + v248);
            *(_QWORD *)&a1[v247] = v249;
            if (v250 < 0)
            {
              v25 = v246++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x43u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x44u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x45u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapsServerMetadataIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x46u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteDetailsIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x47u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventPredExTrainingDataIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x48u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v251 = 0;
          while (1)
          {
            v252 = *v2;
            v253 = *(_QWORD *)&a1[v252];
            v254 = v253 + 1;
            if (v253 == -1 || v254 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v255 = *(char *)(*(_QWORD *)&a1[*v5] + v253);
            *(_QWORD *)&a1[v252] = v254;
            if (v255 < 0)
            {
              v25 = v251++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x49u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v256 = 0;
          while (1)
          {
            v257 = *v2;
            v258 = *(_QWORD *)&a1[v257];
            v259 = v258 + 1;
            if (v258 == -1 || v259 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v260 = *(char *)(*(_QWORD *)&a1[*v5] + v258);
            *(_QWORD *)&a1[v257] = v259;
            if (v260 < 0)
            {
              v25 = v256++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x4Au:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v261 = 0;
          while (1)
          {
            v262 = *v2;
            v263 = *(_QWORD *)&a1[v262];
            if (v263 == -1 || v263 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v264 = v263 + 1;
            v265 = *(char *)(*(_QWORD *)&a1[*v5] + v263);
            *(_QWORD *)&a1[v262] = v264;
            if (v265 < 0)
            {
              v25 = v261++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x4Bu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x4Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutoCompleteResultInfoIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x4Du:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v266 = 0;
          while (1)
          {
            v267 = *v2;
            v268 = *(_QWORD *)&a1[v267];
            if (v268 == -1 || v268 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v269 = v268 + 1;
            v270 = *(char *)(*(_QWORD *)&a1[*v5] + v268);
            *(_QWORD *)&a1[v267] = v269;
            if (v270 < 0)
            {
              v25 = v266++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x4Eu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v271 = 0;
          while (1)
          {
            v272 = *v2;
            v273 = *(_QWORD *)&a1[v272];
            if (v273 == -1 || v273 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v274 = v273 + 1;
            v275 = *(char *)(*(_QWORD *)&a1[*v5] + v273);
            *(_QWORD *)&a1[v272] = v274;
            if (v275 < 0)
            {
              v25 = v271++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x4Fu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v276 = 0;
          while (1)
          {
            v277 = *v2;
            v278 = *(_QWORD *)&a1[v277];
            if (v278 == -1 || v278 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v279 = v278 + 1;
            v280 = *(char *)(*(_QWORD *)&a1[*v5] + v278);
            *(_QWORD *)&a1[v277] = v279;
            if (v280 < 0)
            {
              v25 = v276++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x50u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v281 = 0;
          while (1)
          {
            v282 = *v2;
            v283 = *(_QWORD *)&a1[v282];
            if (v283 == -1 || v283 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v284 = v283 + 1;
            v285 = *(char *)(*(_QWORD *)&a1[*v5] + v283);
            *(_QWORD *)&a1[v282] = v284;
            if (v285 < 0)
            {
              v25 = v281++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x51u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x52u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x53u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateCuratedCollectionIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x54u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v286 = 0;
          while (1)
          {
            v287 = *v2;
            v288 = *(_QWORD *)&a1[v287];
            if (v288 == -1 || v288 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v289 = v288 + 1;
            v290 = *(char *)(*(_QWORD *)&a1[*v5] + v288);
            *(_QWORD *)&a1[v287] = v289;
            if (v290 < 0)
            {
              v25 = v286++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x55u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v291 = 0;
          while (1)
          {
            v292 = *v2;
            v293 = *(_QWORD *)&a1[v292];
            if (v293 == -1 || v293 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v294 = v293 + 1;
            v295 = *(char *)(*(_QWORD *)&a1[*v5] + v293);
            *(_QWORD *)&a1[v292] = v294;
            if (v295 < 0)
            {
              v25 = v291++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x56u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v296 = 0;
          while (1)
          {
            v297 = *v2;
            v298 = *(_QWORD *)&a1[v297];
            if (v298 == -1 || v298 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v299 = v298 + 1;
            v300 = *(char *)(*(_QWORD *)&a1[*v5] + v298);
            *(_QWORD *)&a1[v297] = v299;
            if (v300 < 0)
            {
              v25 = v296++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x57u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v301 = 0;
          while (1)
          {
            v302 = *v2;
            v303 = *(_QWORD *)&a1[v302];
            if (v303 == -1 || v303 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v304 = v303 + 1;
            v305 = *(char *)(*(_QWORD *)&a1[*v5] + v303);
            *(_QWORD *)&a1[v302] = v304;
            if (v305 < 0)
            {
              v25 = v301++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x58u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateUGCPhotoIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x59u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v306 = 0;
          while (1)
          {
            v307 = *v2;
            v308 = *(_QWORD *)&a1[v307];
            if (v308 == -1 || v308 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v309 = v308 + 1;
            v310 = *(char *)(*(_QWORD *)&a1[*v5] + v308);
            *(_QWORD *)&a1[v307] = v309;
            if (v310 < 0)
            {
              v25 = v306++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x5Au:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x5Bu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x5Cu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x5Du:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x5Eu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v311 = 0;
          while (1)
          {
            v312 = *v2;
            v313 = *(_QWORD *)&a1[v312];
            if (v313 == -1 || v313 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v314 = v313 + 1;
            v315 = *(char *)(*(_QWORD *)&a1[*v5] + v313);
            *(_QWORD *)&a1[v312] = v314;
            if (v315 < 0)
            {
              v25 = v311++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x5Fu:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x61u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v316 = 0;
          while (1)
          {
            v317 = *v2;
            v318 = *(_QWORD *)&a1[v317];
            v319 = v318 + 1;
            if (v318 == -1 || v319 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v320 = *(char *)(*(_QWORD *)&a1[*v5] + v318);
            *(_QWORD *)&a1[v317] = v319;
            if (v320 < 0)
            {
              v25 = v316++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x62u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v321 = 0;
          while (1)
          {
            v322 = *v2;
            v323 = *(_QWORD *)&a1[v322];
            if (v323 == -1 || v323 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v324 = v323 + 1;
            v325 = *(char *)(*(_QWORD *)&a1[*v5] + v323);
            *(_QWORD *)&a1[v322] = v324;
            if (v325 < 0)
            {
              v25 = v321++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x63u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateAccountIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x65u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v326 = 0;
          while (1)
          {
            v327 = *v2;
            v328 = *(_QWORD *)&a1[v327];
            v329 = v328 + 1;
            if (v328 == -1 || v329 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v330 = *(char *)(*(_QWORD *)&a1[*v5] + v328);
            *(_QWORD *)&a1[v327] = v329;
            if (v330 < 0)
            {
              v25 = v326++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x66u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v331 = 0;
          while (1)
          {
            v332 = *v2;
            v333 = *(_QWORD *)&a1[v332];
            v334 = v333 + 1;
            if (v333 == -1 || v334 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v335 = *(char *)(*(_QWORD *)&a1[*v5] + v333);
            *(_QWORD *)&a1[v332] = v334;
            if (v335 < 0)
            {
              v25 = v331++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x67u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStatePlaceCardIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x68u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v336 = 0;
          while (1)
          {
            v337 = *v2;
            v338 = *(_QWORD *)&a1[v337];
            v339 = v338 + 1;
            if (v338 == -1 || v339 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v340 = *(char *)(*(_QWORD *)&a1[*v5] + v338);
            *(_QWORD *)&a1[v337] = v339;
            if (v340 < 0)
            {
              v25 = v336++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x69u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v341 = 0;
          while (1)
          {
            v342 = *v2;
            v343 = *(_QWORD *)&a1[v342];
            if (v343 == -1 || v343 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v344 = v343 + 1;
            v345 = *(char *)(*(_QWORD *)&a1[*v5] + v343);
            *(_QWORD *)&a1[v342] = v344;
            if (v345 < 0)
            {
              v25 = v341++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x6Au:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v346 = 0;
          while (1)
          {
            v347 = *v2;
            v348 = *(_QWORD *)&a1[v347];
            if (v348 == -1 || v348 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v349 = v348 + 1;
            v350 = *(char *)(*(_QWORD *)&a1[*v5] + v348);
            *(_QWORD *)&a1[v347] = v349;
            if (v350 < 0)
            {
              v25 = v346++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x6Bu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v351 = 0;
          while (1)
          {
            v352 = *v2;
            v353 = *(_QWORD *)&a1[v352];
            if (v353 == -1 || v353 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v354 = v353 + 1;
            v355 = *(char *)(*(_QWORD *)&a1[*v5] + v353);
            *(_QWORD *)&a1[v352] = v354;
            if (v355 < 0)
            {
              v25 = v351++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x6Cu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v356 = 0;
          while (1)
          {
            v357 = *v2;
            v358 = *(_QWORD *)&a1[v357];
            if (v358 == -1 || v358 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v359 = v358 + 1;
            v360 = *(char *)(*(_QWORD *)&a1[*v5] + v358);
            *(_QWORD *)&a1[v357] = v359;
            if (v360 < 0)
            {
              v25 = v356++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x6Du:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v361 = 0;
          while (1)
          {
            v362 = *v2;
            v363 = *(_QWORD *)&a1[v362];
            if (v363 == -1 || v363 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v364 = v363 + 1;
            v365 = *(char *)(*(_QWORD *)&a1[*v5] + v363);
            *(_QWORD *)&a1[v362] = v364;
            if (v365 < 0)
            {
              v25 = v361++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x6Eu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v366 = 0;
          while (1)
          {
            v367 = *v2;
            v368 = *(_QWORD *)&a1[v367];
            if (v368 == -1 || v368 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v369 = v368 + 1;
            v370 = *(char *)(*(_QWORD *)&a1[*v5] + v368);
            *(_QWORD *)&a1[v367] = v369;
            if (v370 < 0)
            {
              v25 = v366++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x6Fu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v371 = 0;
          while (1)
          {
            v372 = *v2;
            v373 = *(_QWORD *)&a1[v372];
            if (v373 == -1 || v373 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v374 = v373 + 1;
            v375 = *(char *)(*(_QWORD *)&a1[*v5] + v373);
            *(_QWORD *)&a1[v372] = v374;
            if (v375 < 0)
            {
              v25 = v371++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x70u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v376 = 0;
          while (1)
          {
            v377 = *v2;
            v378 = *(_QWORD *)&a1[v377];
            if (v378 == -1 || v378 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v379 = v378 + 1;
            v380 = *(char *)(*(_QWORD *)&a1[*v5] + v378);
            *(_QWORD *)&a1[v377] = v379;
            if (v380 < 0)
            {
              v25 = v376++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x71u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v381 = 0;
          while (1)
          {
            v382 = *v2;
            v383 = *(_QWORD *)&a1[v382];
            if (v383 == -1 || v383 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v384 = v383 + 1;
            v385 = *(char *)(*(_QWORD *)&a1[*v5] + v383);
            *(_QWORD *)&a1[v382] = v384;
            if (v385 < 0)
            {
              v25 = v381++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x72u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v386 = 0;
          while (1)
          {
            v387 = *v2;
            v388 = *(_QWORD *)&a1[v387];
            if (v388 == -1 || v388 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v389 = v388 + 1;
            v390 = *(char *)(*(_QWORD *)&a1[*v5] + v388);
            *(_QWORD *)&a1[v387] = v389;
            if (v390 < 0)
            {
              v25 = v386++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x73u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v391 = 0;
          while (1)
          {
            v392 = *v2;
            v393 = *(_QWORD *)&a1[v392];
            if (v393 == -1 || v393 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v394 = v393 + 1;
            v395 = *(char *)(*(_QWORD *)&a1[*v5] + v393);
            *(_QWORD *)&a1[v392] = v394;
            if (v395 < 0)
            {
              v25 = v391++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x74u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v396 = 0;
          while (1)
          {
            v397 = *v2;
            v398 = *(_QWORD *)&a1[v397];
            if (v398 == -1 || v398 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v399 = v398 + 1;
            v400 = *(char *)(*(_QWORD *)&a1[*v5] + v398);
            *(_QWORD *)&a1[v397] = v399;
            if (v400 < 0)
            {
              v25 = v396++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x75u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v401 = 0;
          while (1)
          {
            v402 = *v2;
            v403 = *(_QWORD *)&a1[v402];
            v404 = v403 + 1;
            if (v403 == -1 || v404 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v405 = *(char *)(*(_QWORD *)&a1[*v5] + v403);
            *(_QWORD *)&a1[v402] = v404;
            if (v405 < 0)
            {
              v25 = v401++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x76u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v406 = 0;
          while (1)
          {
            v407 = *v2;
            v408 = *(_QWORD *)&a1[v407];
            if (v408 == -1 || v408 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v409 = v408 + 1;
            v410 = *(char *)(*(_QWORD *)&a1[*v5] + v408);
            *(_QWORD *)&a1[v407] = v409;
            if (v410 < 0)
            {
              v25 = v406++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x77u:
          if (v15 == 2)
            goto LABEL_841;
          goto LABEL_933;
        case 0x78u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v411 = 0;
          while (1)
          {
            v412 = *v2;
            v413 = *(_QWORD *)&a1[v412];
            if (v413 == -1 || v413 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v414 = v413 + 1;
            v415 = *(char *)(*(_QWORD *)&a1[*v5] + v413);
            *(_QWORD *)&a1[v412] = v414;
            if (v415 < 0)
            {
              v25 = v411++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x79u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v416 = 0;
          while (1)
          {
            v417 = *v2;
            v418 = *(_QWORD *)&a1[v417];
            if (v418 == -1 || v418 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v419 = v418 + 1;
            v420 = *(char *)(*(_QWORD *)&a1[*v5] + v418);
            *(_QWORD *)&a1[v417] = v419;
            if (v420 < 0)
            {
              v25 = v416++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x7Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateSearchResultsIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x7Bu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateImpressionObjectIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x7Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateTapEventIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x7Du:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateActionButtonDetailsIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x7Eu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v421 = 0;
          while (1)
          {
            v422 = *v2;
            v423 = *(_QWORD *)&a1[v422];
            v424 = v423 + 1;
            if (v423 == -1 || v424 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v425 = *(char *)(*(_QWORD *)&a1[*v5] + v423);
            *(_QWORD *)&a1[v422] = v424;
            if (v425 < 0)
            {
              v25 = v421++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x7Fu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v426 = 0;
          while (1)
          {
            v427 = *v2;
            v428 = *(_QWORD *)&a1[v427];
            v429 = v428 + 1;
            if (v428 == -1 || v429 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v430 = *(char *)(*(_QWORD *)&a1[*v5] + v428);
            *(_QWORD *)&a1[v427] = v429;
            if (v430 < 0)
            {
              v25 = v426++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x80u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v431 = 0;
          while (1)
          {
            v432 = *v2;
            v433 = *(_QWORD *)&a1[v432];
            v434 = v433 + 1;
            if (v433 == -1 || v434 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v435 = *(char *)(*(_QWORD *)&a1[*v5] + v433);
            *(_QWORD *)&a1[v432] = v434;
            if (v435 < 0)
            {
              v25 = v431++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x81u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPPhotoSubmissionIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x82u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingSubmissionIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x83u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateARPRatingPhotoSubmissionIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x84u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleIsValid(a1))
            goto LABEL_933;
          goto LABEL_840;
        case 0x85u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v436 = 0;
          while (1)
          {
            v437 = *v2;
            v438 = *(_QWORD *)&a1[v437];
            v439 = v438 + 1;
            if (v438 == -1 || v439 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v440 = *(char *)(*(_QWORD *)&a1[*v5] + v438);
            *(_QWORD *)&a1[v437] = v439;
            if (v440 < 0)
            {
              v25 = v436++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x86u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v441 = 0;
          while (1)
          {
            v442 = *v2;
            v443 = *(_QWORD *)&a1[v442];
            if (v443 == -1 || v443 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v444 = v443 + 1;
            v445 = *(char *)(*(_QWORD *)&a1[*v5] + v443);
            *(_QWORD *)&a1[v442] = v444;
            if (v445 < 0)
            {
              v25 = v441++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x87u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v446 = 0;
          while (1)
          {
            v447 = *v2;
            v448 = *(_QWORD *)&a1[v447];
            v449 = v448 + 1;
            if (v448 == -1 || v449 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v450 = *(char *)(*(_QWORD *)&a1[*v5] + v448);
            *(_QWORD *)&a1[v447] = v449;
            if (v450 < 0)
            {
              v25 = v446++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x88u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v451 = 0;
          while (1)
          {
            v452 = *v2;
            v453 = *(_QWORD *)&a1[v452];
            v454 = v453 + 1;
            if (v453 == -1 || v454 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v455 = *(char *)(*(_QWORD *)&a1[*v5] + v453);
            *(_QWORD *)&a1[v452] = v454;
            if (v455 < 0)
            {
              v25 = v451++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x89u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLogMsgStateMapsPlaceIdsIsValid(a1))
            goto LABEL_840;
          goto LABEL_933;
        case 0x8Bu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v456 = 0;
          while (1)
          {
            v457 = *v2;
            v458 = *(_QWORD *)&a1[v457];
            if (v458 == -1 || v458 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v459 = v458 + 1;
            v460 = *(char *)(*(_QWORD *)&a1[*v5] + v458);
            *(_QWORD *)&a1[v457] = v459;
            if (v460 < 0)
            {
              v25 = v456++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x8Cu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v461 = 0;
          while (1)
          {
            v462 = *v2;
            v463 = *(_QWORD *)&a1[v462];
            v464 = v463 + 1;
            if (v463 == -1 || v464 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v465 = *(char *)(*(_QWORD *)&a1[*v5] + v463);
            *(_QWORD *)&a1[v462] = v464;
            if (v465 < 0)
            {
              v25 = v461++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x8Du:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v466 = 0;
          while (1)
          {
            v467 = *v2;
            v468 = *(_QWORD *)&a1[v467];
            v469 = v468 + 1;
            if (v468 == -1 || v469 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v470 = *(char *)(*(_QWORD *)&a1[*v5] + v468);
            *(_QWORD *)&a1[v467] = v469;
            if (v470 < 0)
            {
              v25 = v466++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x8Eu:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v471 = 0;
          while (1)
          {
            v472 = *v2;
            v473 = *(_QWORD *)&a1[v472];
            v474 = v473 + 1;
            if (v473 == -1 || v474 > *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v475 = *(char *)(*(_QWORD *)&a1[*v5] + v473);
            *(_QWORD *)&a1[v472] = v474;
            if (v475 < 0)
            {
              v25 = v471++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x90u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v476 = 0;
          while (1)
          {
            v477 = *v2;
            v478 = *(_QWORD *)&a1[v477];
            if (v478 == -1 || v478 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v479 = v478 + 1;
            v480 = *(char *)(*(_QWORD *)&a1[*v5] + v478);
            *(_QWORD *)&a1[v477] = v479;
            if (v480 < 0)
            {
              v25 = v476++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x91u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v481 = 0;
          while (1)
          {
            v482 = *v2;
            v483 = *(_QWORD *)&a1[v482];
            if (v483 == -1 || v483 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v484 = v483 + 1;
            v485 = *(char *)(*(_QWORD *)&a1[*v5] + v483);
            *(_QWORD *)&a1[v482] = v484;
            if (v485 < 0)
            {
              v25 = v481++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x92u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v486 = 0;
          while (1)
          {
            v487 = *v2;
            v488 = *(_QWORD *)&a1[v487];
            if (v488 == -1 || v488 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v489 = v488 + 1;
            v490 = *(char *)(*(_QWORD *)&a1[*v5] + v488);
            *(_QWORD *)&a1[v487] = v489;
            if (v490 < 0)
            {
              v25 = v486++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        case 0x93u:
          if ((v8 & 7) != 0)
            goto LABEL_933;
          v491 = 0;
          while (1)
          {
            v492 = *v2;
            v493 = *(_QWORD *)&a1[v492];
            if (v493 == -1 || v493 >= *(_QWORD *)&a1[*v3])
              goto LABEL_907;
            v494 = v493 + 1;
            v495 = *(char *)(*(_QWORD *)&a1[*v5] + v493);
            *(_QWORD *)&a1[v492] = v494;
            if (v495 < 0)
            {
              v25 = v491++ > 8;
              if (!v25)
                continue;
            }
            goto LABEL_909;
          }
        default:
LABEL_841:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_933;
          goto LABEL_909;
      }
    }
  }
LABEL_931:
  v506 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v506;
}

void sub_18972C018(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOAnalyticsPipelineStateDataIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 512));
  v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
  v3 = *(_QWORD *)(a1 + 732);
  if (*(_QWORD *)&v2 & 0x20000 | v3 & 0x180000000000)
    return 1;
  if ((v3 & 0x20000000000) != 0)
  {
    if (GEOCarInfoIsDirty(*(os_unfair_lock_s **)(a1 + 80)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if ((v3 & 0x8000000000000) != 0)
    return 1;
  if ((v3 & 0x400000000000) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 120)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if ((v2 & 0x20) != 0)
  {
    if ((GEOLogMsgStatePlaceCardIsDirty(*(os_unfair_lock_s **)(a1 + 408)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if (v3 & 0xFC60006000000000 | v2 & 0x1F)
    return 1;
  if ((v3 & 0x80000000000000) != 0)
  {
    if ((GEOMapsServerMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 248)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x40) != 0)
  {
    if (GEOLogMsgEventPredExTrainingDataIsDirty(*(_QWORD *)(a1 + 416)))
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if (v2 & 0x1800 | v3 & 0x7800000000000)
    return 1;
  if ((v3 & 0x40000000000) != 0)
  {
    if ((GEOLogMsgStateCuratedCollectionIsDirty(*(os_unfair_lock_s **)(a1 + 88)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 740) | (*(unsigned __int8 *)(a1 + 742) << 16);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if (*(_QWORD *)&v2 & 0x1C000 | v3 & 0x100008000000000)
    return 1;
  if ((v2 & 0x400) != 0)
  {
    if (GEOLogMsgStateSearchResultsIsDirty(*(_QWORD *)(a1 + 448)))
      return 1;
    LOWORD(v2) = *(_WORD *)(a1 + 740);
    v3 = *(_QWORD *)(a1 + 732);
  }
  if (v2 & 0x2000 | v3 & 0x200210000000000)
    return 1;
  if ((v2 & 0x100) == 0)
    goto LABEL_33;
  if (GEOLogMsgStateARPRatingSubmissionIsDirty(*(_QWORD *)(a1 + 432)))
    return 1;
  LOWORD(v2) = *(_WORD *)(a1 + 740);
  v3 = *(_QWORD *)(a1 + 732);
LABEL_33:
  if (v2 & 0x80 | v3 & 0x10000000000000)
    return 1;
  if ((v2 & 0x10) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v5 = *(id *)(a1 + 400);
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v5);
        if ((GEORevealedPlaceCardModuleIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v9 + 1) + 8 * i)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_46;
        }
      }
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v6)
        continue;
      break;
    }
  }
LABEL_46:

  return v6;
}

os_unfair_lock_s *GEOAnalyticsPipelineStateDataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOAnalyticsPipelineStateDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 128);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOAnalyticsPipelineStateDataClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  void *v5;
  int HasSensitiveFields;
  void *v7;
  _DWORD *v8;

  if (a3
    && objc_msgSend(a1, "hasLookAroundLocation")
    && (objc_msgSend(a1, "lookAroundLocation"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    objc_msgSend(a1, "lookAroundLocation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (_DWORD *)objc_msgSend(v7, "copy");

    GEOLocationClearSensitiveFields(v8);
    objc_msgSend(a1, "setLookAroundLocation:", v8);
  }
  else
  {
    objc_msgSend(a1, "lookAroundLocation");
    v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearSensitiveFields:", a2);
  }

}

void *GEOAnalyticsPipelineStateDataHasSensitiveFields(void *result)
{
  void *v1;
  uint64_t HasSensitiveFields;

  if (result)
  {
    objc_msgSend(result, "lookAroundLocation");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_18972F794(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189734658(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id GEOGetRoutePreloaderLog(void)
{
  if (qword_1ECDBCB08 != -1)
    dispatch_once(&qword_1ECDBCB08, &__block_literal_global_191);
  return (id)_MergedGlobals_325;
}

void sub_189734750(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189734998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1897352D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  void *v21;
  void *v22;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_18973540C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_189735510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189735820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;

  _Unwind_Resume(a1);
}

void sub_1897358DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189735AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189735F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,id location)
{
  void *v53;
  void *v54;

  _Unwind_Resume(a1);
}

void sub_18973609C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1897361CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189736360(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189736CD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897372EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189737630(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189737884(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18973804C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_189738360(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897383D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void ___ZL23GEOGetRoutePreloaderLogv_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.GeoServices", "RoutePreloader");
  v1 = (void *)_MergedGlobals_325;
  _MergedGlobals_325 = (uint64_t)v0;

}

uint64_t GEOIsDeviceLocationServicesCapable()
{
  return 1;
}

void sub_189739734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsRequestReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint32x4_t v13;
  int8x16_t v14;
  uint64x2_t v15;
  int *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  int *v22;
  int *v23;
  int *v24;
  int *v25;
  char v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  BOOL v33;
  int v34;
  unint64_t v36;
  BOOL v37;
  int *v38;
  int v39;
  int v40;
  BOOL v41;
  GEORouteAttributes *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  int v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  void *v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  char v116;
  char v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  void *v126;
  int v128;
  char v129;
  char v130;
  char v131;
  char v132;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 288));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 284);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 280));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 328);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = (uint64x2_t)vdupq_n_s64(v12);
  v16 = v6;
  v17 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE30F0), v14), (int32x4_t)(*(_OWORD *)&vshlq_u32(v13, (uint32x4_t)xmmword_189CE30E0) & __PAIR128__(0xFFFFFFE1FFFFFFE1, 0xFFFFFFE1FFFFFFE1))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE3100), v14)), (int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vshlq_u64(v15, (uint64x2_t)xmmword_189CE3120), (int32x4_t)vshlq_u64(v15, (uint64x2_t)xmmword_189CE3110)), v14)))+ ((v12 >> 41) & 1)+ ((v12 >> 35) & 1)+ (BYTE4(v12) & 1)+ (WORD1(v12) & 1)+ ((v12 >> 23) & 1)+ ((v12 >> 15) & 1)
      + ((v12 >> 37) & 1)
      + ((v12 >> 21) & 1)
      + ((v12 >> 26) & 1)
      + ((v12 >> 38) & 1)
      + ((v12 >> 39) & 1)
      + ((v12 >> 13) & 1)
      + (v12 >> 31);
  while (2)
  {
    v18 = 1;
    v19 = 1;
    v20 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v17;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v19 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v21 = v17 > 0x16;
        v129 = v21 & ~(_BYTE)v11 | v9;
        v130 = v21 | v11 | v129;
        if ((((v21 | v11) | v8) & 1) != 0)
          v22 = 0;
        else
          v22 = a3;
        v131 = (v22 == 0) | v21 | v11;
        v132 = v21 | v11;
        v23 = (int *)MEMORY[0x1E0D82BF0];
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v17;
LABEL_7:
        v18 = v9;
LABEL_8:
        v19 = v10;
        v20 = v11;
LABEL_10:
        ++v7;
        v9 = v18;
        v10 = v19;
        v11 = v20;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v23) >= *(_QWORD *)(v3 + *v16) || *(_BYTE *)(v3 + *v24))
      goto LABEL_376;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *v23;
      v30 = *(_QWORD *)(v3 + v29);
      v31 = v30 + 1;
      if (v30 == -1 || v31 > *(_QWORD *)(v3 + *v16))
        break;
      v32 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v30);
      *(_QWORD *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0)
        goto LABEL_25;
      v26 += 7;
      v33 = v27++ >= 9;
      if (v33)
      {
        v28 = 0;
        v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v24) = 1;
LABEL_25:
    v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(_BYTE *)(v3 + *v24))
      v28 = 0;
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_376:
      v128 = 1;
      goto LABEL_377;
    }
    v36 = v28 >> 3;
    v37 = v132;
    if ((v131 & 1) == 0)
    {
      v38 = v22;
      do
      {
        v40 = *v38++;
        v39 = v40;
        v37 = v40 != 0;
        if (v40)
          v41 = v39 == (_DWORD)v36;
        else
          v41 = 1;
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 332) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_423;
          v42 = objc_alloc_init(GEORouteAttributes);
          if (GEORouteAttributesReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            v43 = 216;
            goto LABEL_247;
          }
          goto LABEL_422;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_423;
        v121 = *(_QWORD *)(a1 + 328) << 28;
        goto LABEL_361;
      case 2:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 17:
      case 41:
LABEL_55:
        if ((v129 & 1) == 0 || (*(_BYTE *)(a1 + 329) & 0x20) != 0)
          goto LABEL_286;
        if (!*(_QWORD *)(a1 + 16))
        {
          v47 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v48 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v47;

        }
        v49 = PBUnknownFieldAdd();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v16 = (int *)MEMORY[0x1E0D82BD8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        if (v49)
          goto LABEL_375;
        v128 = 0;
        goto LABEL_378;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 328) |= 0x20uLL;
        while (2)
        {
          v53 = *v23;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v33 = v51++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_291;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_291:
        v118 = 300;
        goto LABEL_367;
      case 4:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 330) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 43;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 88;
        goto LABEL_247;
      case 5:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 330) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 44;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 80;
        goto LABEL_247;
      case 6:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 331) & 0x10) == 0)
        {
          PBReaderReadData();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 152;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_423;
        v121 = *(_QWORD *)(a1 + 328) << 35;
        goto LABEL_361;
      case 7:
        if (!v37 || (*(_BYTE *)(a1 + 331) & 0x20) != 0)
          goto LABEL_284;
        PBReaderReadData();
        v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
        if (v42)
          -[GEODirectionsRequest _addNoFlagsOriginalRouteZilchPoints:](a1, v42);
        goto LABEL_257;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v59 = 0;
        v60 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 328) |= 0x200uLL;
        while (2)
        {
          v61 = *v23;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v52 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v33 = v60++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_295;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_295:
        v118 = 316;
        goto LABEL_367;
      case 9:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 330) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 47;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOClientCapabilities);
        if (!GEOClientCapabilitiesReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 56;
        goto LABEL_247;
      case 10:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 331) & 8) == 0)
        {
          PBReaderReadData();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 144;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_423;
        v121 = *(_QWORD *)(a1 + 328) << 36;
        goto LABEL_361;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        *(_QWORD *)(a1 + 328) |= 8uLL;
        v65 = *v23;
        v66 = *(_QWORD *)(v3 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFFBLL && (v67 = v66 + 4, v66 + 4 <= *(_QWORD *)(v3 + *v16)))
        {
          v68 = *(_DWORD *)(*(_QWORD *)(v3 + *v25) + v66);
          *(_QWORD *)(v3 + v65) = v67;
        }
        else
        {
          v68 = 0;
          *(_BYTE *)(v3 + *v24) = 1;
        }
        *(_DWORD *)(a1 + 292) = v68;
        goto LABEL_375;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v69 = 0;
        v70 = 0;
        v71 = 0;
        *(_QWORD *)(a1 + 328) |= 0x800uLL;
        while (2)
        {
          v72 = *v23;
          v73 = *(_QWORD *)(v3 + v72);
          v74 = v73 + 1;
          if (v73 == -1 || v74 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v75 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v73);
            *(_QWORD *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              v33 = v70++ >= 9;
              if (v33)
              {
                v71 = 0;
                goto LABEL_299;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v71 = 0;
LABEL_299:
        v119 = v71 != 0;
        v120 = 324;
        goto LABEL_308;
      case 19:
        if ((v8 & 1) == 0)
          goto LABEL_284;
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 24), v3) & 1) == 0)
          goto LABEL_423;
        PBReaderRecallMark();
        *(_QWORD *)(a1 + 328) |= 1uLL;
        goto LABEL_362;
      case 20:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 330) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 40;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEODirectionsRequestFeedback);
        if (!GEODirectionsRequestFeedbackReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 112;
        goto LABEL_247;
      case 21:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 329) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 48;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOAdditionalEnabledMarkets);
        if (!GEOAdditionalEnabledMarketsReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 48;
        goto LABEL_247;
      case 22:
        if (!v37 || (*(_BYTE *)(a1 + 333) & 2) != 0)
          goto LABEL_284;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        -[GEODirectionsRequest _addNoFlagsWaypointTyped:](a1, v42);
        goto LABEL_257;
      case 23:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 331) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 33;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOOriginalRoute);
        if (!GEOOriginalRouteReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 168;
        goto LABEL_247;
      case 24:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v76 = 0;
        v77 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 328) |= 0x100uLL;
        while (2)
        {
          v78 = *v23;
          v79 = *(_QWORD *)(v3 + v78);
          v80 = v79 + 1;
          if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v52 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              v33 = v77++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_303;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_303:
        v118 = 312;
        goto LABEL_367;
      case 25:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 332) & 0x20) == 0)
        {
          PBReaderReadData();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 240;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_423;
        v121 = *(_QWORD *)(a1 + 328) << 26;
        goto LABEL_361;
      case 26:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v82 = 0;
        v83 = 0;
        v84 = 0;
        *(_QWORD *)(a1 + 328) |= 0x1000uLL;
        while (2)
        {
          v85 = *v23;
          v86 = *(_QWORD *)(v3 + v85);
          v87 = v86 + 1;
          if (v86 == -1 || v87 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v86);
            *(_QWORD *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              v33 = v83++ >= 9;
              if (v33)
              {
                v84 = 0;
                goto LABEL_307;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          v84 = 0;
LABEL_307:
        v119 = v84 != 0;
        v120 = 325;
LABEL_308:
        *(_BYTE *)(a1 + v120) = v119;
        goto LABEL_375;
      case 27:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 330) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 45;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOCommonOptions);
        if (!GEOCommonOptionsReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 72;
        goto LABEL_247;
      case 28:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 331) & 2) == 0)
        {
          PBReaderReadString();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 128;
          goto LABEL_200;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_423;
        v121 = *(_QWORD *)(a1 + 328) << 38;
        goto LABEL_361;
      case 29:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 331) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 39;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 120;
        goto LABEL_247;
      case 30:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v89 = 0;
        v90 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 328) |= 0x80uLL;
        while (2)
        {
          v91 = *v23;
          v92 = *(_QWORD *)(v3 + v91);
          v93 = v92 + 1;
          if (v92 == -1 || v93 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v92);
            *(_QWORD *)(v3 + v91) = v93;
            v52 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v33 = v90++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_312:
        v118 = 308;
        goto LABEL_367;
      case 31:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 329) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 49;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOPDABClientDatasetMetadata);
        if (!GEOPDABClientDatasetMetadataReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 40;
        goto LABEL_247;
      case 32:
        if (!v37 || (*(_BYTE *)(a1 + 330) & 0x20) != 0)
          goto LABEL_284;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        -[GEODirectionsRequest _addNoFlagsDeviceHistoricalLocation:](a1, v42);
        goto LABEL_257;
      case 33:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v95 = 0;
        v96 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 328) |= 0x40uLL;
        while (2)
        {
          v97 = *v23;
          v98 = *(_QWORD *)(v3 + v97);
          v99 = v98 + 1;
          if (v98 == -1 || v99 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v98);
            *(_QWORD *)(v3 + v97) = v99;
            v52 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v33 = v96++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_316:
        v118 = 304;
        goto LABEL_367;
      case 34:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 331) & 4) == 0)
        {
          PBReaderReadData();
          v57 = objc_claimAutoreleasedReturnValue();
          v58 = 136;
LABEL_200:
          v101 = *(void **)(a1 + v58);
          *(_QWORD *)(a1 + v58) = v57;
          goto LABEL_248;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_423;
        v121 = *(_QWORD *)(a1 + 328) << 37;
        goto LABEL_361;
      case 35:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        *(_QWORD *)(a1 + 328) |= 4uLL;
        v102 = *v23;
        v103 = *(_QWORD *)(v3 + v102);
        if (v103 <= 0xFFFFFFFFFFFFFFF7 && v103 + 8 <= *(_QWORD *)(v3 + *v16))
        {
          v46 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v103);
          *(_QWORD *)(v3 + v102) = v103 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v24) = 1;
          v46 = 0;
        }
        v122 = 232;
LABEL_374:
        *(_QWORD *)(a1 + v122) = v46;
        goto LABEL_375;
      case 36:
        if (!v37 || (*(_BYTE *)(a1 + 331) & 0x80) != 0)
          goto LABEL_284;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOStopStepEVInfo);
        if (!GEOStopStepEVInfoReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_422;
        PBReaderRecallMark();
        -[GEODirectionsRequest _addNoFlagsOriginalRouteEvInfo:](a1, v42);
        goto LABEL_257;
      case 37:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 332) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 31;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOOriginalWaypointRoute);
        if (!GEOOriginalWaypointRouteReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 184;
        goto LABEL_247;
      case 38:
        if ((v8 & 1) == 0)
          goto LABEL_286;
        v104 = 0;
        v105 = 0;
        v52 = 0;
        *(_QWORD *)(a1 + 328) |= 0x10uLL;
        while (2)
        {
          v106 = *v23;
          v107 = *(_QWORD *)(v3 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v107);
            *(_QWORD *)(v3 + v106) = v108;
            v52 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              v33 = v105++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_320;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_320:
        v118 = 296;
        goto LABEL_367;
      case 39:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 332) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 29;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEORecentLocationHistory);
        if (!GEORecentLocationHistoryReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 200;
        goto LABEL_247;
      case 40:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 332) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 30;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOPrivacyMetadata);
        if (!GEOPrivacyMetadataReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 192;
        goto LABEL_247;
      case 42:
        if (!v37)
          goto LABEL_286;
        if ((*(_BYTE *)(a1 + 333) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 23;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOTripInfo);
        if (!GEOTripInfoReadAllFrom((uint64_t)v42, (void *)v3))
          goto LABEL_422;
        PBReaderRecallMark();
        v43 = 264;
        goto LABEL_247;
      case 43:
        if (v37 && (*(_BYTE *)(a1 + 330) & 0x40) == 0)
        {
          PBReaderReadString();
          v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
          if (v42)
            -[GEODirectionsRequest _addNoFlagsDisplayedBannerId:](a1, v42);
LABEL_257:

          goto LABEL_362;
        }
LABEL_284:
        v116 = PBReaderSkipValueWithTag();
        v24 = (int *)MEMORY[0x1E0D82BC8];
        v16 = (int *)MEMORY[0x1E0D82BD8];
        v25 = (int *)MEMORY[0x1E0D82BB8];
        if ((v116 & 1) == 0)
          goto LABEL_421;
        goto LABEL_375;
      case 44:
        if (!v37)
        {
LABEL_286:
          v117 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BB8];
          v16 = (int *)MEMORY[0x1E0D82BD8];
          v24 = (int *)MEMORY[0x1E0D82BC8];
          if ((v117 & 1) == 0)
          {
LABEL_421:
            v128 = 0;
            goto LABEL_377;
          }
LABEL_375:
          if (!(v130 & 1 | (v7 != 0)))
            goto LABEL_376;
          continue;
        }
        if ((*(_BYTE *)(a1 + 330) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_423;
          v121 = *(_QWORD *)(a1 + 328) << 46;
LABEL_361:
          v7 += v121 >> 63;
LABEL_362:
          v24 = (int *)MEMORY[0x1E0D82BC8];
          v16 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_375;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_423;
        v42 = objc_alloc_init(GEOClientFeedbackInfo);
        if (GEOClientFeedbackInfoReadAllFrom(v42, (void *)v3))
        {
          PBReaderRecallMark();
          v43 = 64;
LABEL_247:
          v101 = *(void **)(a1 + v43);
          *(_QWORD *)(a1 + v43) = v42;
LABEL_248:

          --v7;
          goto LABEL_362;
        }
LABEL_422:

LABEL_423:
        v128 = 0;
        v24 = (int *)MEMORY[0x1E0D82BC8];
LABEL_377:
        if ((v129 & 1) != 0)
LABEL_378:
          *(_QWORD *)(a1 + 328) |= 0x2000uLL;
        if (v132 & 1 | ((v128 & 1) == 0))
        {
          *(_QWORD *)(a1 + 328) |= 0x3FFFFFFC000uLL;
          goto LABEL_415;
        }
        if (v22)
        {
          while (1)
          {
            v124 = *v22++;
            v123 = v124;
            if (v124 <= 99)
            {
              v125 = 0x800000000;
              switch(v123)
              {
                case 0:
                  goto LABEL_415;
                case 1:
                  goto LABEL_414;
                case 4:
                  v125 = 0x100000;
                  goto LABEL_414;
                case 5:
                  v125 = 0x80000;
                  goto LABEL_414;
                case 6:
                  v125 = 0x10000000;
                  goto LABEL_414;
                case 7:
                  v125 = 0x20000000;
                  goto LABEL_414;
                case 9:
                  v125 = 0x10000;
                  goto LABEL_414;
                case 10:
                  v125 = 0x8000000;
                  goto LABEL_414;
                case 20:
                  v125 = 0x800000;
                  goto LABEL_414;
                case 21:
                  v125 = 0x8000;
                  goto LABEL_414;
                case 22:
                  v125 = 0x20000000000;
                  goto LABEL_414;
                case 23:
                  v125 = 0x40000000;
                  goto LABEL_414;
                case 25:
                  v125 = 0x2000000000;
                  goto LABEL_414;
                case 27:
                  v125 = 0x40000;
                  goto LABEL_414;
                case 28:
                  v125 = 0x2000000;
                  goto LABEL_414;
                case 29:
                  v125 = 0x1000000;
                  goto LABEL_414;
                case 31:
                  v125 = 0x4000;
                  goto LABEL_414;
                case 32:
                  v125 = 0x200000;
                  goto LABEL_414;
                case 34:
                  v125 = 0x4000000;
                  goto LABEL_414;
                case 36:
                  v125 = 0x80000000;
                  goto LABEL_414;
                case 37:
                  v125 = 0x100000000;
                  goto LABEL_414;
                case 39:
                  v125 = 0x400000000;
                  goto LABEL_414;
                case 40:
                  v125 = 0x200000000;
                  goto LABEL_414;
                case 42:
                  v125 = 0x10000000000;
                  goto LABEL_414;
                case 43:
                  v125 = 0x400000;
                  goto LABEL_414;
                case 44:
                  v125 = 0x20000;
                  goto LABEL_414;
                default:
                  continue;
              }
              break;
            }
            switch(v123)
            {
              case 'd':
                v125 = 0x1000000000;
                break;
              case 'e':
                v125 = 0x4000000000;
                break;
              case 'f':
                v125 = 0x8000000000;
                break;
              default:
                continue;
            }
LABEL_414:
            *(_QWORD *)(a1 + 328) |= v125;
          }
        }
LABEL_415:
        if (v128)
          v3 = *(_BYTE *)(v3 + *v24) == 0;
        else
          v3 = 0;
        if ((v132 & 1) != 0)
        {
          v126 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        switch((int)v36)
        {
          case 'd':
            if (!v37 || (*(_BYTE *)(a1 + 332) & 0x10) != 0)
              goto LABEL_284;
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_423;
            v42 = objc_alloc_init(GEOGeoServiceTag);
            if (!GEOGeoServiceTagReadAllFrom((uint64_t)v42, (void *)v3))
              goto LABEL_422;
            PBReaderRecallMark();
            -[GEODirectionsRequest _addNoFlagsServiceTag:](a1, v42);
            goto LABEL_257;
          case 'e':
            if (!v37 || (*(_BYTE *)(a1 + 332) & 0x40) != 0)
              goto LABEL_284;
            PBReaderReadData();
            v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
            if (v42)
              -[GEODirectionsRequest _addNoFlagsTrafficApiResponses:](a1, v42);
            goto LABEL_257;
          case 'f':
            if (!v37 || (*(_BYTE *)(a1 + 332) & 0x80) != 0)
              goto LABEL_284;
            PBReaderReadString();
            v42 = (GEORouteAttributes *)objc_claimAutoreleasedReturnValue();
            if (v42)
              -[GEODirectionsRequest _addNoFlagsTrafficSnapshotIds:](a1, v42);
            goto LABEL_257;
          case 'g':
            if ((v8 & 1) == 0)
              goto LABEL_286;
            v110 = 0;
            v111 = 0;
            v52 = 0;
            *(_QWORD *)(a1 + 328) |= 0x400uLL;
            break;
          default:
            if ((_DWORD)v36 != 1025)
              goto LABEL_55;
            if ((v8 & 1) == 0)
              goto LABEL_286;
            *(_QWORD *)(a1 + 328) |= 2uLL;
            v44 = *v23;
            v45 = *(_QWORD *)(v3 + v44);
            if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(_QWORD *)(v3 + *v16))
            {
              v46 = *(_QWORD *)(*(_QWORD *)(v3 + *v25) + v45);
              *(_QWORD *)(v3 + v44) = v45 + 8;
            }
            else
            {
              *(_BYTE *)(v3 + *v24) = 1;
              v46 = 0;
            }
            v122 = 208;
            goto LABEL_374;
        }
        while (2)
        {
          v112 = *v23;
          v113 = *(_QWORD *)(v3 + v112);
          v114 = v113 + 1;
          if (v113 == -1 || v114 > *(_QWORD *)(v3 + *v16))
          {
            *(_BYTE *)(v3 + *v24) = 1;
          }
          else
          {
            v115 = *(_BYTE *)(*(_QWORD *)(v3 + *v25) + v113);
            *(_QWORD *)(v3 + v112) = v114;
            v52 |= (unint64_t)(v115 & 0x7F) << v110;
            if (v115 < 0)
            {
              v110 += 7;
              v33 = v111++ >= 9;
              if (v33)
              {
                LODWORD(v52) = 0;
                goto LABEL_366;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v24))
          LODWORD(v52) = 0;
LABEL_366:
        v118 = 320;
LABEL_367:
        *(_DWORD *)(a1 + v118) = v52;
        goto LABEL_375;
    }
  }
}

void sub_18973B3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973B738(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973BA74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973BC94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973BDDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973BF24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973C06C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973C3A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973C4F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973C82C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973C974(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973CB3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973CEE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D02C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D1F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D3C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D508(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D650(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973D974(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973DABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973DFB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973E180(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973E2C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973E408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973E54C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973E888(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18973EBC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189741C4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEODirectionsRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];
  _BYTE v40[128];
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[27], "readAll:", 1);
  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v2 = a1[34];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v35;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v35 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v34, v41, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[11], "readAll:", 1);
  objc_msgSend(a1[10], "readAll:", 1);
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = a1[22];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[21], "readAll:", 1);
  objc_msgSend(a1[23], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[14], "readAll:", 1);
  objc_msgSend(a1[6], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  objc_msgSend(a1[15], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = a1[12];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v27;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v27 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v39, 16);
    }
    while (v14);
  }

  objc_msgSend(a1[25], "readAll:", 1);
  objc_msgSend(a1[24], "readAll:", 1);
  objc_msgSend(a1[33], "readAll:", 1);
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = a1[28];
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v23;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v23 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * v21++), "readAll:", 1, (_QWORD)v22);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v22, v38, 16);
    }
    while (v19);
  }

}

uint64_t GEODirectionsRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 284))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODirectionsRequestReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 288));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 280) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 284) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODirectionsRequestReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODirectionsRequestReadAllFrom_initialTag;
  Specified = GEODirectionsRequestReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEODirectionsRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 288));
  return Specified;
}

void sub_1897421A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsRequestReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODirectionsRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189742200(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  unint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  _BOOL8 v70;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      v18 = v8 >> 3;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEORouteAttributesIsValid(a1))
            goto LABEL_185;
          goto LABEL_203;
        case 2u:
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x11u:
        case 0x29u:
          goto LABEL_189;
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            v25 = v24 + 1;
            if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v27 = v22++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 4u:
        case 0x1Du:
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOLocationIsValid(a1) & 1) == 0)
            goto LABEL_203;
          goto LABEL_185;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 6u:
          if (v16 == 2)
            goto LABEL_189;
          goto LABEL_203;
        case 7u:
          if (v16 == 2)
            goto LABEL_189;
          goto LABEL_203;
        case 8u:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v27 = v28++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 9u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0xAu:
          if (v16 == 2)
            goto LABEL_189;
          goto LABEL_203;
        case 0x10u:
          if (v16 != 5)
            goto LABEL_203;
          v19 = *v2;
          v33 = *(_QWORD *)&a1[v19];
          if (v33 > 0xFFFFFFFFFFFFFFFBLL)
            goto LABEL_167;
          v21 = v33 + 4;
          goto LABEL_148;
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v34 = 0;
          while (1)
          {
            v35 = *v2;
            v36 = *(_QWORD *)&a1[v35];
            v37 = v36 + 1;
            if (v36 == -1 || v37 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
            *(_QWORD *)&a1[v35] = v37;
            if (v38 < 0)
            {
              v27 = v34++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOSessionIDIsValid(a1) & 1) == 0)
            goto LABEL_203;
          goto LABEL_185;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODirectionsRequestFeedbackIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x15u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdditionalEnabledMarketsIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointTypedIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOOriginalRouteIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x18u:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v39 = 0;
          while (1)
          {
            v40 = *v2;
            v41 = *(_QWORD *)&a1[v40];
            v42 = v41 + 1;
            if (v41 == -1 || v42 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v43 = *(char *)(*(_QWORD *)&a1[*v5] + v41);
            *(_QWORD *)&a1[v40] = v42;
            if (v43 < 0)
            {
              v27 = v39++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 0x19u:
          if (v16 == 2)
            goto LABEL_189;
          goto LABEL_203;
        case 0x1Au:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v44 = 0;
          while (1)
          {
            v45 = *v2;
            v46 = *(_QWORD *)&a1[v45];
            v47 = v46 + 1;
            if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
            *(_QWORD *)&a1[v45] = v47;
            if (v48 < 0)
            {
              v27 = v44++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonOptionsIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x1Cu:
          if (v16 == 2)
            goto LABEL_189;
          goto LABEL_203;
        case 0x1Eu:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v49 = 0;
          while (1)
          {
            v50 = *v2;
            v51 = *(_QWORD *)&a1[v50];
            v52 = v51 + 1;
            if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
            *(_QWORD *)&a1[v50] = v52;
            if (v53 < 0)
            {
              v27 = v49++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDABClientDatasetMetadataIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x21u:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v54 = 0;
          while (1)
          {
            v55 = *v2;
            v56 = *(_QWORD *)&a1[v55];
            v57 = v56 + 1;
            if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
              goto LABEL_166;
            v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
            *(_QWORD *)&a1[v55] = v57;
            if (v58 < 0)
            {
              v27 = v54++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
        case 0x22u:
          if (v16 == 2)
            goto LABEL_189;
          goto LABEL_203;
        case 0x23u:
          if (v16 != 1)
            goto LABEL_203;
          v19 = *v2;
          v59 = *(_QWORD *)&a1[v19];
          if (v59 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_167;
          v21 = v59 + 8;
LABEL_148:
          if (v21 > *(_QWORD *)&a1[*v3])
            goto LABEL_167;
LABEL_149:
          *(_QWORD *)&a1[v19] = v21;
          continue;
        case 0x24u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStopStepEVInfoIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x25u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOOriginalWaypointRouteIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x26u:
          if ((v8 & 7) != 0)
            goto LABEL_203;
          v60 = 0;
          while (1)
          {
            v61 = *v2;
            v62 = *(_QWORD *)&a1[v61];
            v63 = v62 + 1;
            if (v62 == -1 || v63 > *(_QWORD *)&a1[*v3])
              break;
            v64 = *(char *)(*(_QWORD *)&a1[*v5] + v62);
            *(_QWORD *)&a1[v61] = v63;
            if (v64 < 0)
            {
              v27 = v60++ > 8;
              if (!v27)
                continue;
            }
            goto LABEL_190;
          }
LABEL_166:
          v14 = *v4;
LABEL_167:
          a1[v14] = 1;
          continue;
        case 0x27u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORecentLocationHistoryIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x28u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPrivacyMetadataIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x2Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTripInfoIsValid(a1))
            goto LABEL_203;
          goto LABEL_185;
        case 0x2Bu:
          if (v16 != 2)
            goto LABEL_203;
LABEL_189:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_203:
          PBReaderRecallMark();
          return 0;
        case 0x2Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientFeedbackInfoIsValid(a1))
            goto LABEL_203;
LABEL_185:
          PBReaderRecallMark();
          continue;
        default:
          switch((int)v18)
          {
            case 'd':
              if (v16 != 2 || !PBReaderPlaceMark() || (GEOGeoServiceTagIsValid(a1) & 1) == 0)
                goto LABEL_203;
              goto LABEL_185;
            case 'e':
              if (v16 == 2)
                goto LABEL_189;
              goto LABEL_203;
            case 'f':
              if (v16 == 2)
                goto LABEL_189;
              goto LABEL_203;
            case 'g':
              if ((v8 & 7) != 0)
                goto LABEL_203;
              v65 = 0;
              break;
            default:
              if ((_DWORD)v18 != 1025)
                goto LABEL_189;
              if (v16 != 1)
                goto LABEL_203;
              v19 = *v2;
              v20 = *(_QWORD *)&a1[v19];
              if (v20 > 0xFFFFFFFFFFFFFFF7)
                goto LABEL_201;
              v21 = v20 + 8;
              if (v21 > *(_QWORD *)&a1[*v3])
                goto LABEL_201;
              goto LABEL_149;
          }
          break;
      }
      while (1)
      {
        v66 = *v2;
        v67 = *(_QWORD *)&a1[v66];
        v68 = v67 + 1;
        if (v67 == -1 || v68 > *(_QWORD *)&a1[*v3])
          break;
        v69 = *(char *)(*(_QWORD *)&a1[*v5] + v67);
        *(_QWORD *)&a1[v66] = v68;
        if (v69 < 0)
        {
          v27 = v65++ > 8;
          if (!v27)
            continue;
        }
        goto LABEL_190;
      }
      v14 = *v4;
LABEL_201:
      a1[v14] = 1;
LABEL_190:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v70 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v70;
}

void sub_18974359C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODirectionsRequestIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 288));
  v2 = *(_QWORD *)(a1 + 328);
  if ((v2 & 0x40000000000) != 0)
    return 1;
  if ((v2 & 0x800000000) != 0)
  {
    if ((GEORouteAttributesIsDirty(*(os_unfair_lock_s **)(a1 + 216)) & 1) != 0)
      return 1;
    v2 = *(_QWORD *)(a1 + 328);
  }
  if ((v2 & 0x20000420000) == 0)
  {
    if ((v2 & 0x100000) == 0)
      goto LABEL_9;
    if (!GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 88)))
    {
      v2 = *(_QWORD *)(a1 + 328);
LABEL_9:
      if ((v2 & 0xB8080000) != 0)
        return 1;
      if ((v2 & 0x40000000) != 0)
      {
        if (GEOOriginalRouteIsDirty(*(_QWORD *)(a1 + 168)))
          return 1;
        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x100000000) != 0)
        return 1;
      if ((v2 & 0x10000) != 0)
      {
        if (GEOClientCapabilitiesIsDirty(*(_QWORD *)(a1 + 56)))
          return 1;
        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x800000) != 0)
      {
        if (GEODirectionsRequestFeedbackIsDirty(*(_QWORD *)(a1 + 112)))
          return 1;
        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x8000) != 0)
      {
        if (GEOAdditionalEnabledMarketsIsDirty(*(_QWORD *)(a1 + 48)))
          return 1;
        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x2002040000) != 0)
        return 1;
      if ((v2 & 0x1000000) != 0)
      {
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 120)))
          return 1;
        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x4204000) != 0)
        return 1;
      if ((v2 & 0x400000000) != 0)
      {
        if (GEORecentLocationHistoryIsDirty(*(_QWORD *)(a1 + 200)))
          return 1;
        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x1D200000000) != 0)
        return 1;
      if ((v2 & 0x20000000000) != 0)
      {
        v18 = 0u;
        v19 = 0u;
        v16 = 0u;
        v17 = 0u;
        v5 = *(id *)(a1 + 272);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
        if (v6)
        {
          v7 = v6;
          v8 = *(_QWORD *)v17;
LABEL_37:
          v9 = 0;
          while (1)
          {
            if (*(_QWORD *)v17 != v8)
              objc_enumerationMutation(v5);
            if ((GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v16 + 1) + 8 * v9)) & 1) != 0)
              goto LABEL_55;
            if (v7 == ++v9)
            {
              v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
              if (v7)
                goto LABEL_37;
              break;
            }
          }
        }

        v2 = *(_QWORD *)(a1 + 328);
      }
      if ((v2 & 0x200000) == 0)
        return 0;
      v14 = 0u;
      v15 = 0u;
      v12 = 0u;
      v13 = 0u;
      v5 = *(id *)(a1 + 96);
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
      if (!v3)
      {
LABEL_56:

        return v3;
      }
      v10 = *(_QWORD *)v13;
LABEL_48:
      v11 = 0;
      while (1)
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v5);
        if (GEOLocationIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v12 + 1) + 8 * v11)))
          break;
        if (v3 == ++v11)
        {
          v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v20, 16);
          if (v3)
            goto LABEL_48;
          goto LABEL_56;
        }
      }
LABEL_55:
      v3 = 1;
      goto LABEL_56;
    }
  }
  return 1;
}

os_unfair_lock_s *GEODirectionsRequestIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEODirectionsRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 72);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEODirectionsRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int HasSensitiveFields;
  void *v13;
  _DWORD *v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  _DWORD *v19;
  unint64_t result;
  unint64_t i;
  uint64_t v22;
  void *v23;
  _DWORD *v24;

  -[GEODirectionsRequest _readWaypointTypeds]((uint64_t)a1);
  if (objc_msgSend(a1[34], "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(a1[34], "objectAtIndexedSubscript:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (a3 && GEOWaypointTypedHasSensitiveFields(v7))
      {
        v9 = (void *)objc_msgSend(v8, "copy");
        objc_msgSend(v9, "waypointLocation");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "clearSensitiveFields:", a2);

        objc_msgSend(a1[34], "replaceObjectAtIndex:withObject:", v6, v9);
      }
      else
      {
        objc_msgSend(v8, "clearSensitiveFields:", a2);
      }

      ++v6;
    }
    while (v6 < objc_msgSend(a1[34], "count"));
  }
  if ((a3 & 1) != 0)
  {
    if (objc_msgSend(a1, "hasCurrentUserLocation")
      && (objc_msgSend(a1, "currentUserLocation"),
          v11 = (void *)objc_claimAutoreleasedReturnValue(),
          HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v11),
          v11,
          HasSensitiveFields))
    {
      objc_msgSend(a1, "currentUserLocation");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = (_DWORD *)objc_msgSend(v13, "copy");

      GEOLocationClearSensitiveFields(v14);
      objc_msgSend(a1, "setCurrentUserLocation:", v14);
    }
    else
    {
      objc_msgSend(a1, "currentUserLocation");
      v14 = (_DWORD *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "clearSensitiveFields:", a2);
    }

    if (objc_msgSend(a1, "hasLastKnownRoadLocation"))
    {
      objc_msgSend(a1, "lastKnownRoadLocation");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = GEOLocationHasSensitiveFields((uint64_t)v16);

      if (v17)
      {
        objc_msgSend(a1, "lastKnownRoadLocation");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = (_DWORD *)objc_msgSend(v18, "copy");

        GEOLocationClearSensitiveFields(v19);
        objc_msgSend(a1, "setLastKnownRoadLocation:", v19);
        goto LABEL_18;
      }
    }
  }
  else
  {
    objc_msgSend(a1, "currentUserLocation");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "clearSensitiveFields:", a2);

  }
  objc_msgSend(a1, "lastKnownRoadLocation");
  v19 = (_DWORD *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "clearSensitiveFields:", a2);
LABEL_18:

  -[GEODirectionsRequest _readDeviceHistoricalLocations]((uint64_t)a1);
  result = objc_msgSend(a1[12], "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(a1[12], "objectAtIndexedSubscript:", i);
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = (void *)v22;
      if (a3 && GEOLocationHasSensitiveFields(v22))
      {
        v24 = (_DWORD *)objc_msgSend(v23, "copy");
        GEOLocationClearSensitiveFields(v24);
        objc_msgSend(a1[12], "replaceObjectAtIndex:withObject:", i, v24);

      }
      else
      {
        objc_msgSend(v23, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(a1[12], "count");
    }
  }
  return result;
}

uint64_t GEODirectionsRequestHasSensitiveFields(uint64_t result)
{
  void *v1;
  void *v2;
  void *v3;
  char HasSensitiveFields;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v1 = (void *)result;
    objc_msgSend((id)result, "currentUserLocation");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (GEOLocationHasSensitiveFields((uint64_t)v2))
    {
LABEL_3:

      return 1;
    }
    objc_msgSend(v1, "lastKnownRoadLocation");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v3);

    if ((HasSensitiveFields & 1) != 0)
      return 1;
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    objc_msgSend(v1, "waypointTypeds");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v19;
LABEL_9:
      v8 = 0;
      while (1)
      {
        if (*(_QWORD *)v19 != v7)
          objc_enumerationMutation(v2);
        if ((GEOWaypointTypedHasSensitiveFields(*(void **)(*((_QWORD *)&v18 + 1) + 8 * v8)) & 1) != 0)
          goto LABEL_3;
        if (v6 == ++v8)
        {
          v6 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
          if (v6)
            goto LABEL_9;
          break;
        }
      }
    }

    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    objc_msgSend(v1, "deviceHistoricalLocations", 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v15;
      while (2)
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v15 != v12)
            objc_enumerationMutation(v9);
          if ((GEOLocationHasSensitiveFields(*(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v13)) & 1) != 0)
          {

            return 1;
          }
          ++v13;
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
        if (v11)
          continue;
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_189745314(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189746A64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestResponseAnalyticsDataReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v17;
  BOOL v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        v14 = v13 + 1;
        if (v13 == -1 || v14 > *(_QWORD *)&v3[*v5])
          break;
        v15 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v17 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v17 = 0;
      else
        v17 = v11;
LABEL_16:
      if (v8)
        v18 = 1;
      else
        v18 = (v17 & 7) == 4;
      if (v18)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v20 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v19;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189747540(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestResponseAnalyticsDataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODirectionsRequestResponseAnalyticsDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897475A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEODirectionsRequestResponseAnalyticsDataIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      v12 = v11 + 1;
      if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
        break;
      v13 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v15 = 1;
    else
      v15 = (v9 & 7) == 4;
    if (v15)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v16 = 0;
      goto LABEL_22;
    }
  }
  v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

void sub_189747C8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsResponseReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint32x4_t v13;
  int8x16_t v14;
  int32x2_t v15;
  int8x8_t v16;
  int8x8_t v17;
  uint64x2_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  char v25;
  int *v26;
  int *v27;
  int *v28;
  int *v29;
  char v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  BOOL v37;
  int v38;
  int v39;
  unint64_t v41;
  BOOL v42;
  int *v43;
  int v44;
  int v45;
  BOOL v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  GEORoute *v54;
  uint64_t v55;
  id v56;
  void *v57;
  int v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  int *v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  char v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  void *v125;
  char v126;
  char v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  int v139;
  uint64_t v140;
  void *v141;
  int v143;
  char v144;
  char v145;
  char v146;
  char v147;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 360));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 356);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 352));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 388);
  v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15.i32[0] = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE3130), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE3140), v14)));
  v16.i32[0] = v12 >> 27;
  v16.i32[1] = v12 >> 34;
  v17.i32[0] = v12 >> 43;
  v17.i32[1] = v12 >> 22;
  v18 = (uint64x2_t)vdupq_n_s64(v12);
  v15.i32[1] = BYTE4(v12) & 1;
  *(int32x2_t *)v13.i8 = vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v13.i8, (uint32x2_t)0xFFFFFFEBFFFFFFE3), (int8x8_t)0x100000001), (int32x2_t)vand_s8(v16, (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v13.i8, (uint32x2_t)0xFFFFFFEFFFFFFFECLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v18, (uint64x2_t)xmmword_189CE3150)), (int8x8_t)0x100000001)), vadd_s32(
                                 (int32x2_t)(*(_QWORD *)&vshl_u32(*(uint32x2_t *)v13.i8, (uint32x2_t)0xFFFFFFE6FFFFFFE2) & 0xFFFFFFC1FFFFFFC1), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v18, (uint64x2_t)xmmword_189CE3160)), (int8x8_t)0x100000001)))), vadd_s32(v15, (int32x2_t)vand_s8(v17, (int8x8_t)0x100000001)));
  v19 = vadd_s32(*(int32x2_t *)v13.i8, vdup_lane_s32(*(int32x2_t *)v13.i8, 1)).u32[0]
      + ((v12 >> 18) & 1)
      + ((v12 >> 14) & 1)
      + ((v12 >> 37) & 1)
      + ((v12 >> 41) & 1)
      + ((v12 >> 40) & 1)
      + (WORD1(v12) & 1)
      + ((v12 >> 35) & 1)
      + ((v12 >> 19) & 1)
      + ((v12 >> 38) & 1)
      + ((v12 >> 15) & 1)
      + ((v12 >> 9) & 1)
      + (v12 >> 31);
  while (2)
  {
    v20 = 1;
    v21 = 1;
    v22 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v19;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v21 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v23 = v19 > 0x1A;
        v24 = v23 & ~(_BYTE)v11 | v9;
        v25 = v23 | v11;
        v26 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v23 | v11) | v8) & 1) != 0)
          v27 = 0;
        else
          v27 = a3;
        v143 = 1;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_433;
        v144 = v25 | v24;
        v28 = (int *)MEMORY[0x1E0D82BC8];
        v147 = (v27 == 0) | v25;
        v29 = (int *)MEMORY[0x1E0D82BB8];
        v145 = v23 & ~(_BYTE)v11 | v9;
        v146 = v23 | v11;
        break;
      default:
        ++v19;
LABEL_7:
        v20 = v9;
LABEL_8:
        v21 = v10;
        v22 = v11;
LABEL_10:
        ++v7;
        v9 = v20;
        v10 = v21;
        v11 = v22;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v28))
      goto LABEL_432;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    while (1)
    {
      v33 = *v26;
      v34 = *(_QWORD *)(v3 + v33);
      v35 = v34 + 1;
      if (v34 == -1 || v35 > *(_QWORD *)(v3 + *v6))
        break;
      v36 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v34);
      *(_QWORD *)(v3 + v33) = v35;
      v32 |= (unint64_t)(v36 & 0x7F) << v30;
      if ((v36 & 0x80) == 0)
        goto LABEL_25;
      v30 += 7;
      v37 = v31++ >= 9;
      if (v37)
      {
        v32 = 0;
        v38 = *(unsigned __int8 *)(v3 + *v28);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v28) = 1;
LABEL_25:
    v38 = *(unsigned __int8 *)(v3 + *v28);
    if (*(_BYTE *)(v3 + *v28))
      v32 = 0;
LABEL_27:
    v39 = v32 & 7;
    if (v38 || v39 == 4)
    {
LABEL_432:
      v143 = 1;
LABEL_433:
      if ((v24 & 1) == 0)
        goto LABEL_435;
LABEL_434:
      *(_QWORD *)(a1 + 388) |= 0x200uLL;
      goto LABEL_435;
    }
    v41 = v32 >> 3;
    v42 = v25;
    if ((v147 & 1) == 0)
    {
      v43 = v27;
      do
      {
        v45 = *v43++;
        v44 = v45;
        v42 = v45 != 0;
        if (v45)
          v46 = v44 == (_DWORD)v41;
        else
          v46 = 1;
      }
      while (!v46);
    }
    switch((int)v41)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v47 = 0;
        v48 = 0;
        v49 = 0;
        while (2)
        {
          v50 = *v26;
          v51 = *(_QWORD *)(v3 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v51);
            *(_QWORD *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              v37 = v48++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          LODWORD(v49) = 0;
LABEL_341:
        v128 = 380;
        goto LABEL_366;
      case 2:
        if (!v42 || (*(_BYTE *)(a1 + 391) & 0x20) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEORoute);
        if (!GEORouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsRoute:](a1, v54);
        goto LABEL_276;
      case 3:
        if (!v42 || (*(_BYTE *)(a1 + 391) & 8) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOPlaceSearchResponse);
        if (!GEOPlaceSearchResponseReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsPlaceSearchResponse:](a1, v54);
        goto LABEL_276;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v59 = 0;
        v60 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 388) |= 8uLL;
        while (2)
        {
          v61 = *v26;
          v62 = *(_QWORD *)(v3 + v61);
          v63 = v62 + 1;
          if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v62);
            *(_QWORD *)(v3 + v61) = v63;
            v49 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              v37 = v60++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          LODWORD(v49) = 0;
LABEL_345:
        v128 = 372;
        goto LABEL_366;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v65 = 0;
        v66 = 0;
        v67 = 0;
        *(_QWORD *)(a1 + 388) |= 0x100uLL;
        while (2)
        {
          v68 = *v26;
          v69 = *(_QWORD *)(v3 + v68);
          v70 = v69 + 1;
          if (v69 == -1 || v70 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v71 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v69);
            *(_QWORD *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              v37 = v66++ >= 9;
              if (v37)
              {
                v67 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          v67 = 0;
LABEL_349:
        v129 = v67 != 0;
        v130 = 387;
        goto LABEL_375;
      case 6:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 390) & 0x10) == 0)
        {
          PBReaderReadData();
          v72 = objc_claimAutoreleasedReturnValue();
          v73 = 160;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_474;
        v131 = *(_QWORD *)(a1 + 388) << 43;
        goto LABEL_416;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v74 = 0;
        v75 = 0;
        v76 = 0;
        *(_QWORD *)(a1 + 388) |= 0x40uLL;
        while (2)
        {
          v77 = *v26;
          v78 = *(_QWORD *)(v3 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v78);
            *(_QWORD *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v37 = v75++ >= 9;
              if (v37)
              {
                v76 = 0;
                goto LABEL_353;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          v76 = 0;
LABEL_353:
        v129 = v76 != 0;
        v130 = 385;
        goto LABEL_375;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v81 = 0;
        v82 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 388) |= 2uLL;
        while (2)
        {
          v83 = *v26;
          v84 = *(_QWORD *)(v3 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v49 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v37 = v82++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_357;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          LODWORD(v49) = 0;
LABEL_357:
        v128 = 364;
        goto LABEL_366;
      case 9:
        if (!v42 || (*(_BYTE *)(a1 + 391) & 1) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsIncidentsOnRoutes:](a1, v54);
        goto LABEL_276;
      case 10:
        if (!v42 || (*(_BYTE *)(a1 + 390) & 0x80) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsIncidentsOffRoutes:](a1, v54);
        goto LABEL_276;
      case 11:
        if (!v42 || (*(_BYTE *)(a1 + 389) & 4) != 0)
          goto LABEL_334;
        if (!PBReaderPlaceMark())
          goto LABEL_474;
        -[GEODirectionsResponse _reserveProblemDetails:](a1, 1uLL);
        if (!GEOProblemDetailReadAllFrom(*(_QWORD *)(a1 + 24) + 12 * *(_QWORD *)(a1 + 32), v3))
          goto LABEL_474;
        PBReaderRecallMark();
        v87 = 32;
        v88 = *(_QWORD *)(a1 + 32) + 1;
LABEL_281:
        *(_QWORD *)(a1 + v87) = v88;
        goto LABEL_417;
      case 12:
      case 28:
LABEL_58:
        if ((v24 & 1) == 0 || (*(_BYTE *)(a1 + 389) & 2) != 0)
          goto LABEL_336;
        if (!*(_QWORD *)(a1 + 16))
        {
          v56 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v57 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v56;

        }
        v58 = PBUnknownFieldAdd();
        v26 = (int *)MEMORY[0x1E0D82BF0];
        v28 = (int *)MEMORY[0x1E0D82BC8];
        v29 = (int *)MEMORY[0x1E0D82BB8];
        if (v58)
          goto LABEL_419;
        v143 = 0;
        v25 = v146;
        goto LABEL_434;
      case 13:
        if (!v42 || (*(_BYTE *)(a1 + 389) & 8) != 0)
          goto LABEL_336;
        if (v39 != 2)
        {
          v132 = 0;
          v133 = 0;
          v134 = 0;
          while (1)
          {
            v135 = *v26;
            v136 = *(_QWORD *)(v3 + v135);
            v137 = v136 + 1;
            if (v136 == -1 || v137 > *(_QWORD *)(v3 + *v6))
              break;
            v138 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v136);
            *(_QWORD *)(v3 + v135) = v137;
            v134 |= (unint64_t)(v138 & 0x7F) << v132;
            if (v138 < 0)
            {
              v132 += 7;
              v37 = v133++ >= 9;
              if (!v37)
                continue;
            }
            goto LABEL_431;
          }
          *(_BYTE *)(v3 + *v28) = 1;
LABEL_431:
          PBRepeatedInt32Add();
          goto LABEL_417;
        }
        if (!PBReaderPlaceMark())
          goto LABEL_474;
        while (1)
        {
          v89 = (int *)MEMORY[0x1E0D82BF0];
          v90 = (int *)MEMORY[0x1E0D82BC8];
          if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6)
            || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
          {
            break;
          }
          v91 = 0;
          v92 = 0;
          v93 = 0;
          v94 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v95 = *v89;
            v96 = *(_QWORD *)(v3 + v95);
            v97 = v96 + 1;
            if (v96 == -1 || v97 > *(_QWORD *)(v3 + *v6))
              break;
            v98 = *(_BYTE *)(*(_QWORD *)(v3 + *v94) + v96);
            *(_QWORD *)(v3 + v95) = v97;
            v93 |= (unint64_t)(v98 & 0x7F) << v91;
            if (v98 < 0)
            {
              v91 += 7;
              v37 = v92++ >= 9;
              if (!v37)
                continue;
            }
            goto LABEL_138;
          }
          *(_BYTE *)(v3 + *v90) = 1;
LABEL_138:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        v28 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BF0];
        goto LABEL_418;
      case 14:
        if (!v42 || (*(_BYTE *)(a1 + 391) & 0x40) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOTransitServiceGap);
        if (!GEOTransitServiceGapReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsServiceGap:](a1, v54);
        goto LABEL_276;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v99 = 0;
        v100 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 388) |= 0x10uLL;
        while (2)
        {
          v101 = *v26;
          v102 = *(_QWORD *)(v3 + v101);
          v103 = v102 + 1;
          if (v102 == -1 || v103 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v104 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v102);
            *(_QWORD *)(v3 + v101) = v103;
            v49 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              v37 = v100++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_361;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          LODWORD(v49) = 0;
LABEL_361:
        v128 = 376;
        goto LABEL_366;
      case 16:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 392) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 24;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOPBTransitRoutingIncidentMessage);
        if (!GEOPBTransitRoutingIncidentMessageReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 312;
        goto LABEL_287;
      case 17:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 390) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 42;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEORouteDisplayHints);
        if (!GEORouteDisplayHintsReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 168;
        goto LABEL_287;
      case 18:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 392) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 29;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 272;
        goto LABEL_287;
      case 19:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 392) & 1) == 0)
        {
          PBReaderReadData();
          v72 = objc_claimAutoreleasedReturnValue();
          v73 = 256;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_474;
        v131 = *(_QWORD *)(a1 + 388) << 31;
        goto LABEL_416;
      case 20:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 390) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 41;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOAlert);
        if (!GEOAlertReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 176;
        goto LABEL_287;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v105 = 0;
        v106 = 0;
        v49 = 0;
        *(_QWORD *)(a1 + 388) |= 4uLL;
        while (2)
        {
          v107 = *v26;
          v108 = *(_QWORD *)(v3 + v107);
          v109 = v108 + 1;
          if (v108 == -1 || v109 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v110 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v108);
            *(_QWORD *)(v3 + v107) = v109;
            v49 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              v37 = v106++ >= 9;
              if (v37)
              {
                LODWORD(v49) = 0;
                goto LABEL_365;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          LODWORD(v49) = 0;
LABEL_365:
        v128 = 368;
LABEL_366:
        *(_DWORD *)(a1 + v128) = v49;
        goto LABEL_419;
      case 22:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 390) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 46;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 136;
        goto LABEL_287;
      case 23:
        if (!v42 || (*(_BYTE *)(a1 + 392) & 0x10) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOTrafficCamera);
        if (!GEOTrafficCameraReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsTrafficCamera:](a1, v54);
        goto LABEL_276;
      case 24:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 391) & 4) == 0)
        {
          PBReaderReadData();
          v72 = objc_claimAutoreleasedReturnValue();
          v73 = 208;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_474;
        v131 = *(_QWORD *)(a1 + 388) << 37;
        goto LABEL_416;
      case 25:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v111 = 0;
        v112 = 0;
        v113 = 0;
        *(_QWORD *)(a1 + 388) |= 0x80uLL;
        while (2)
        {
          v114 = *v26;
          v115 = *(_QWORD *)(v3 + v114);
          v116 = v115 + 1;
          if (v115 == -1 || v116 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v117 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v115);
            *(_QWORD *)(v3 + v114) = v116;
            v113 |= (unint64_t)(v117 & 0x7F) << v111;
            if (v117 < 0)
            {
              v111 += 7;
              v37 = v112++ >= 9;
              if (v37)
              {
                v113 = 0;
                goto LABEL_370;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          v113 = 0;
LABEL_370:
        v129 = v113 != 0;
        v130 = 386;
        goto LABEL_375;
      case 26:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 392) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 30;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOSnapScoreMetadata);
        if (!GEOSnapScoreMetadataReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 264;
        goto LABEL_287;
      case 27:
        if ((v8 & 1) == 0)
          goto LABEL_336;
        v118 = 0;
        v119 = 0;
        v120 = 0;
        *(_QWORD *)(a1 + 388) |= 0x20uLL;
        while (2)
        {
          v121 = *v26;
          v122 = *(_QWORD *)(v3 + v121);
          v123 = v122 + 1;
          if (v122 == -1 || v123 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v28) = 1;
          }
          else
          {
            v124 = *(_BYTE *)(*(_QWORD *)(v3 + *v29) + v122);
            *(_QWORD *)(v3 + v121) = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if (v124 < 0)
            {
              v118 += 7;
              v37 = v119++ >= 9;
              if (v37)
              {
                v120 = 0;
                goto LABEL_374;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v28))
          v120 = 0;
LABEL_374:
        v129 = v120 != 0;
        v130 = 384;
LABEL_375:
        *(_BYTE *)(a1 + v130) = v129;
        goto LABEL_419;
      case 29:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 390) & 4) == 0)
        {
          PBReaderReadString();
          v72 = objc_claimAutoreleasedReturnValue();
          v73 = 144;
          goto LABEL_291;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_474;
        v131 = *(_QWORD *)(a1 + 388) << 45;
        goto LABEL_416;
      case 30:
        if (!v42 || (*(_BYTE *)(a1 + 389) & 0x40) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOArrivalParameters);
        if (!GEOArrivalParametersReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsArrivalParameters:](a1, v54);
        goto LABEL_276;
      case 31:
        if (!v42 || (*(_BYTE *)(a1 + 392) & 0x20) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOTrafficSignal);
        if (!GEOTrafficSignalReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsTrafficSignal:](a1, v54);
        goto LABEL_276;
      case 32:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 393) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 22;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOTransitRouteUpdateConfiguration);
        if (!GEOTransitRouteUpdateConfigurationReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 328;
        goto LABEL_287;
      case 33:
        if (!v42 || (*(_BYTE *)(a1 + 393) & 8) != 0)
          goto LABEL_334;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOWaypointRoute);
        if (!GEOWaypointRouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsWaypointRoute:](a1, v54);
        goto LABEL_276;
      case 34:
        if (!v42 || (*(_BYTE *)(a1 + 393) & 1) != 0)
        {
LABEL_334:
          v126 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BF0];
          v28 = (int *)MEMORY[0x1E0D82BC8];
          v29 = (int *)MEMORY[0x1E0D82BB8];
          if ((v126 & 1) == 0)
            goto LABEL_474;
          goto LABEL_419;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOPBTransitPaymentMethodSuggestion);
        if (!GEOPBTransitPaymentMethodSuggestionReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        -[GEODirectionsResponse _addNoFlagsTransitPaymentMethodSuggestion:](a1, v54);
LABEL_276:

        goto LABEL_417;
      case 35:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 389) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 50;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEODirectionsRequestResponseAnalyticsData);
        if (!GEODirectionsRequestResponseAnalyticsDataReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 104;
        goto LABEL_287;
      case 36:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 393) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 21;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOUUID);
        if (!GEOUUIDReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 336;
        goto LABEL_287;
      case 37:
        if (!v42)
          goto LABEL_336;
        if ((*(_BYTE *)(a1 + 389) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 51;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOAdvisoriesInfo);
        if (!GEOAdvisoriesInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 96;
        goto LABEL_287;
      case 38:
        if (!v42)
        {
LABEL_336:
          v127 = PBReaderSkipValueWithTag();
          v29 = (int *)MEMORY[0x1E0D82BB8];
          v28 = (int *)MEMORY[0x1E0D82BC8];
          v26 = (int *)MEMORY[0x1E0D82BF0];
          if ((v127 & 1) == 0)
            goto LABEL_474;
          goto LABEL_419;
        }
        if ((*(_BYTE *)(a1 + 391) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_474;
          v131 = *(_QWORD *)(a1 + 388) << 35;
          goto LABEL_416;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_474;
        v54 = objc_alloc_init(GEOCommonResponseAttributes);
        if (!GEOCommonResponseAttributesReadAllFrom((uint64_t)v54, (void *)v3))
          goto LABEL_473;
        PBReaderRecallMark();
        v55 = 224;
        goto LABEL_287;
      default:
        switch((int)v41)
        {
          case 952:
            if (!v42 || (*(_BYTE *)(a1 + 391) & 2) != 0)
              goto LABEL_334;
            PBReaderReadString();
            v54 = (GEORoute *)objc_claimAutoreleasedReturnValue();
            if (v54)
              -[GEODirectionsResponse _addNoFlagsInternalError:](a1, v54);
            goto LABEL_276;
          case 953:
            if (!v42)
              goto LABEL_336;
            if ((*(_BYTE *)(a1 + 391) & 0x80) == 0)
            {
              PBReaderReadString();
              v72 = objc_claimAutoreleasedReturnValue();
              v73 = 248;
              goto LABEL_291;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_474;
            v131 = *(_QWORD *)(a1 + 388) << 32;
            goto LABEL_416;
          case 954:
            if (!v42)
              goto LABEL_336;
            if ((*(_BYTE *)(a1 + 390) & 1) == 0)
            {
              PBReaderReadString();
              v72 = objc_claimAutoreleasedReturnValue();
              v73 = 128;
              goto LABEL_291;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_474;
            v131 = *(_QWORD *)(a1 + 388) << 47;
            goto LABEL_416;
          case 955:
            if (!v42 || (*(_BYTE *)(a1 + 392) & 8) != 0)
              goto LABEL_334;
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_474;
            v54 = objc_alloc_init(GEOTransitSuggestedRoute);
            if (!GEOTransitSuggestedRouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
              goto LABEL_473;
            PBReaderRecallMark();
            -[GEODirectionsResponse _addNoFlagsSuggestedRoute:](a1, v54);
            goto LABEL_276;
          case 956:
          case 957:
          case 960:
            goto LABEL_58;
          case 958:
            if ((v8 & 1) == 0)
              goto LABEL_334;
            if (!PBReaderPlaceMark() || (GEOTimepointReadAllFrom(a1 + 72, v3) & 1) == 0)
              goto LABEL_474;
            PBReaderRecallMark();
            v87 = 388;
            v88 = *(_QWORD *)(a1 + 388) | 1;
            goto LABEL_281;
          case 959:
            if (!v42)
              goto LABEL_336;
            if ((*(_BYTE *)(a1 + 390) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_474;
              v131 = *(_QWORD *)(a1 + 388) << 44;
LABEL_416:
              v7 += v131 >> 63;
              goto LABEL_417;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_474;
            v54 = objc_alloc_init(GEOTransitDecoderData);
            if (GEOTransitDecoderDataReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
            {
              PBReaderRecallMark();
              v55 = 152;
LABEL_287:
              v125 = *(void **)(a1 + v55);
              *(_QWORD *)(a1 + v55) = v54;
LABEL_292:

              --v7;
LABEL_417:
              v26 = (int *)MEMORY[0x1E0D82BF0];
              v28 = (int *)MEMORY[0x1E0D82BC8];
LABEL_418:
              v29 = (int *)MEMORY[0x1E0D82BB8];
LABEL_419:
              if (!(v144 & 1 | (v7 != 0)))
              {
                v143 = 1;
                goto LABEL_475;
              }
              v24 = v145;
              v25 = v146;
              if (*(_QWORD *)(v3 + *v26) >= *(_QWORD *)(v3 + *v6))
                goto LABEL_432;
              continue;
            }
LABEL_473:

LABEL_474:
            v143 = 0;
LABEL_475:
            v25 = v146;
            if ((v145 & 1) != 0)
              goto LABEL_434;
LABEL_435:
            if (v25 & 1 | ((v143 & 1) == 0))
            {
              *(_QWORD *)(a1 + 388) |= 0xFFFFFFFFC00uLL;
            }
            else if (v27)
            {
              while (1)
              {
                v139 = *v27++;
                v140 = 0x20000000;
                switch(v139)
                {
                  case 0:
                    goto LABEL_466;
                  case 2:
                    goto LABEL_465;
                  case 3:
                    v140 = 0x8000000;
                    goto LABEL_465;
                  case 6:
                    v140 = 0x100000;
                    goto LABEL_465;
                  case 9:
                    v140 = 0x1000000;
                    goto LABEL_465;
                  case 10:
                    v140 = 0x800000;
                    goto LABEL_465;
                  case 11:
                    v140 = 1024;
                    goto LABEL_465;
                  case 13:
                    v140 = 2048;
                    goto LABEL_465;
                  case 14:
                    v140 = 0x40000000;
                    goto LABEL_465;
                  case 16:
                    v140 = 0x8000000000;
                    goto LABEL_465;
                  case 17:
                    v140 = 0x200000;
                    goto LABEL_465;
                  case 18:
                    v140 = 0x400000000;
                    goto LABEL_465;
                  case 19:
                    v140 = 0x100000000;
                    goto LABEL_465;
                  case 20:
                    v140 = 0x400000;
                    goto LABEL_465;
                  case 22:
                    v140 = 0x20000;
                    goto LABEL_465;
                  case 23:
                    v140 = 0x1000000000;
                    goto LABEL_465;
                  case 24:
                    v140 = 0x4000000;
                    goto LABEL_465;
                  case 26:
                    v140 = 0x200000000;
                    goto LABEL_465;
                  case 29:
                    v140 = 0x40000;
                    goto LABEL_465;
                  case 30:
                    v140 = 0x4000;
                    goto LABEL_465;
                  case 31:
                    v140 = 0x2000000000;
                    goto LABEL_465;
                  case 32:
                    v140 = 0x20000000000;
                    goto LABEL_465;
                  case 33:
                    v140 = 0x80000000000;
                    goto LABEL_465;
                  case 34:
                    v140 = 0x10000000000;
                    goto LABEL_465;
                  case 35:
                    v140 = 0x2000;
                    goto LABEL_465;
                  case 36:
                    v140 = 0x40000000000;
                    goto LABEL_465;
                  case 37:
                    v140 = 4096;
                    goto LABEL_465;
                  case 38:
                    v140 = 0x10000000;
LABEL_465:
                    *(_QWORD *)(a1 + 388) |= v140;
                    break;
                  default:
                    continue;
                }
              }
            }
LABEL_466:
            if (v143)
            {
              v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
              if ((v25 & 1) == 0)
                return v3;
LABEL_470:
              v141 = *(void **)(a1 + 8);
              *(_QWORD *)(a1 + 8) = 0;

            }
            else
            {
              v3 = 0;
              if ((v25 & 1) != 0)
                goto LABEL_470;
            }
            return v3;
          case 961:
            if (!v42)
              goto LABEL_336;
            if ((*(_BYTE *)(a1 + 392) & 0x40) == 0)
            {
              PBReaderReadString();
              v72 = objc_claimAutoreleasedReturnValue();
              v73 = 304;
LABEL_291:
              v125 = *(void **)(a1 + v73);
              *(_QWORD *)(a1 + v73) = v72;
              goto LABEL_292;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_474;
            v131 = *(_QWORD *)(a1 + 388) << 25;
            goto LABEL_416;
          default:
            if ((_DWORD)v41 != 1201)
              goto LABEL_58;
            if (!v42)
              goto LABEL_336;
            if ((*(_BYTE *)(a1 + 389) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0)
                goto LABEL_474;
              v131 = *(_QWORD *)(a1 + 388) << 48;
              goto LABEL_416;
            }
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_474;
            v54 = objc_alloc_init(GEOClientMetrics);
            if (!GEOClientMetricsReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1))
              goto LABEL_473;
            PBReaderRecallMark();
            v55 = 120;
            goto LABEL_287;
        }
    }
  }
}

void sub_189749EF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974A228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974A7E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974A92C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974AD80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974B0B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974B3E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974B8B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974BD34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C0E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C22C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C374(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C4B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C5FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C7C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974C90C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974CC40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974CE08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974D02C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974D174(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974D4A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974D7DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974D920(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974DC54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974DD9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974DEDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974E024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974E358(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974E4A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974E5E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974E9B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18974EAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189752834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODirectionsResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _BYTE v102[128];
  _BYTE v103[128];
  _BYTE v104[128];
  _BYTE v105[128];
  _BYTE v106[128];
  _BYTE v107[128];
  _BYTE v108[128];
  _BYTE v109[128];
  _BYTE v110[128];
  _BYTE v111[128];
  _BYTE v112[128];
  uint64_t v113;

  v113 = *MEMORY[0x1E0C80C00];
  v98 = 0u;
  v99 = 0u;
  v100 = 0u;
  v101 = 0u;
  v2 = *(id *)(a1 + 232);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v98, v112, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v99;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v99 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v98 + 1) + 8 * v6++), "readAll:", 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v98, v112, 16);
    }
    while (v4);
  }

  v96 = 0u;
  v97 = 0u;
  v94 = 0u;
  v95 = 0u;
  v7 = *(id *)(a1 + 344);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v94, v111, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v95;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v95 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v94 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v94, v111, 16);
    }
    while (v9);
  }

  v92 = 0u;
  v93 = 0u;
  v90 = 0u;
  v91 = 0u;
  v12 = *(id *)(a1 + 216);
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v90, v110, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v91;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v91 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v90 + 1) + 8 * v16++), "readAll:", 1);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v90, v110, 16);
    }
    while (v14);
  }

  v88 = 0u;
  v89 = 0u;
  v86 = 0u;
  v87 = 0u;
  v17 = *(id *)(a1 + 192);
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v86, v109, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v87;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v87 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v86 + 1) + 8 * v21++), "readAll:", 1);
      }
      while (v19 != v21);
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v86, v109, 16);
    }
    while (v19);
  }

  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  v22 = *(id *)(a1 + 184);
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v82, v108, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v83;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v83 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v82 + 1) + 8 * v26++), "readAll:", 1);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v82, v108, 16);
    }
    while (v24);
  }

  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v27 = *(id *)(a1 + 240);
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v78, v107, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v79;
    do
    {
      v31 = 0;
      do
      {
        if (*(_QWORD *)v79 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v78 + 1) + 8 * v31++), "readAll:", 1);
      }
      while (v29 != v31);
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v78, v107, 16);
    }
    while (v29);
  }

  -[GEOPBTransitRoutingIncidentMessage readAll:](*(_QWORD *)(a1 + 312), 1);
  objc_msgSend(*(id *)(a1 + 168), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 272), "readAll:", 1);
  -[GEOAlert readAll:](*(_QWORD *)(a1 + 176), 1);
  objc_msgSend(*(id *)(a1 + 136), "readAll:", 1);
  v76 = 0u;
  v77 = 0u;
  v74 = 0u;
  v75 = 0u;
  v32 = *(id *)(a1 + 288);
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v74, v106, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v75;
    do
    {
      v36 = 0;
      do
      {
        if (*(_QWORD *)v75 != v35)
          objc_enumerationMutation(v32);
        objc_msgSend(*(id *)(*((_QWORD *)&v74 + 1) + 8 * v36++), "readAll:", 1);
      }
      while (v34 != v36);
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v74, v106, 16);
    }
    while (v34);
  }

  -[GEOSnapScoreMetadata readAll:](*(_QWORD *)(a1 + 264), 1);
  v72 = 0u;
  v73 = 0u;
  v70 = 0u;
  v71 = 0u;
  v37 = *(id *)(a1 + 112);
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v70, v105, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v71;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v71 != v40)
          objc_enumerationMutation(v37);
        objc_msgSend(*(id *)(*((_QWORD *)&v70 + 1) + 8 * v41++), "readAll:", 1);
      }
      while (v39 != v41);
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v70, v105, 16);
    }
    while (v39);
  }

  v68 = 0u;
  v69 = 0u;
  v66 = 0u;
  v67 = 0u;
  v42 = *(id *)(a1 + 296);
  v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v66, v104, 16);
  if (v43)
  {
    v44 = v43;
    v45 = *(_QWORD *)v67;
    do
    {
      v46 = 0;
      do
      {
        if (*(_QWORD *)v67 != v45)
          objc_enumerationMutation(v42);
        objc_msgSend(*(id *)(*((_QWORD *)&v66 + 1) + 8 * v46++), "readAll:", 1);
      }
      while (v44 != v46);
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v66, v104, 16);
    }
    while (v44);
  }

  objc_msgSend(*(id *)(a1 + 328), "readAll:", 1);
  v64 = 0u;
  v65 = 0u;
  v62 = 0u;
  v63 = 0u;
  v47 = *(id *)(a1 + 320);
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v62, v103, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v63;
    do
    {
      v51 = 0;
      do
      {
        if (*(_QWORD *)v63 != v50)
          objc_enumerationMutation(v47);
        objc_msgSend(*(id *)(*((_QWORD *)&v62 + 1) + 8 * v51++), "readAll:", 1);
      }
      while (v49 != v51);
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v62, v103, 16);
    }
    while (v49);
  }

  objc_msgSend(*(id *)(a1 + 104), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 96), "readAll:", 1);
  objc_msgSend(*(id *)(a1 + 224), "readAll:", 1);
  v60 = 0u;
  v61 = 0u;
  v58 = 0u;
  v59 = 0u;
  v52 = *(id *)(a1 + 280);
  v53 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v58, v102, 16);
  if (v53)
  {
    v54 = v53;
    v55 = *(_QWORD *)v59;
    do
    {
      v56 = 0;
      do
      {
        if (*(_QWORD *)v59 != v55)
          objc_enumerationMutation(v52);
        objc_msgSend(*(id *)(*((_QWORD *)&v58 + 1) + 8 * v56++), "readAll:", 1, (_QWORD)v58);
      }
      while (v54 != v56);
      v54 = objc_msgSend(v52, "countByEnumeratingWithState:objects:count:", &v58, v102, 16);
    }
    while (v54);
  }

  objc_msgSend(*(id *)(a1 + 152), "readAll:", 1);
  return objc_msgSend(*(id *)(a1 + 120), "readAll:", 1);
}

uint64_t GEODirectionsResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 356))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEODirectionsResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 360));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 352) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 356) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEODirectionsResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEODirectionsResponseReadAllFrom_initialTag;
  Specified = GEODirectionsResponseReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEODirectionsResponseCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 360));
  return Specified;
}

void sub_189753188(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  uint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEODirectionsResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897531E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODirectionsResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  BOOL v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  BOOL v75;
  uint64_t v76;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_233;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        v12 = v11 + 1;
        if (v11 == -1 || v12 > *(_QWORD *)&a1[*v3])
          break;
        v13 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        v14 = v8++ >= 9;
        if (v14)
        {
          v9 = 0;
          v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v15 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v16 = v9 & 7;
      if (v15 || v16 == 4)
        goto LABEL_233;
      v18 = v9 >> 3;
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0)
            goto LABEL_240;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(char *)(*(_QWORD *)&a1[*v6] + v21);
            *(_QWORD *)&a1[v20] = v22;
            v5 = 1;
            if (v23 < 0)
            {
              v24 = v19++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
          v5 = 1;
          a1[*v4] = 1;
          goto LABEL_219;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || (GEOPlaceSearchResponseIsValid(a1) & 1) == 0)
            goto LABEL_240;
          goto LABEL_216;
        case 4u:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v25 = 0;
          while (1)
          {
            v26 = *v2;
            v27 = *(_QWORD *)&a1[v26];
            v28 = v27 + 1;
            if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v29 = *(char *)(*(_QWORD *)&a1[*v6] + v27);
            *(_QWORD *)&a1[v26] = v28;
            if (v29 < 0)
            {
              v24 = v25++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 5u:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v30 = 0;
          while (1)
          {
            v31 = *v2;
            v32 = *(_QWORD *)&a1[v31];
            v33 = v32 + 1;
            if (v32 == -1 || v33 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v34 = *(char *)(*(_QWORD *)&a1[*v6] + v32);
            *(_QWORD *)&a1[v31] = v33;
            if (v34 < 0)
            {
              v24 = v30++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 6u:
          if (v16 == 2)
            goto LABEL_218;
          goto LABEL_240;
        case 7u:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v35 = 0;
          while (1)
          {
            v36 = *v2;
            v37 = *(_QWORD *)&a1[v36];
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v39 = *(char *)(*(_QWORD *)&a1[*v6] + v37);
            *(_QWORD *)&a1[v36] = v38;
            if (v39 < 0)
            {
              v24 = v35++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 8u:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v40 = 0;
          while (1)
          {
            v41 = *v2;
            v42 = *(_QWORD *)&a1[v41];
            v43 = v42 + 1;
            if (v42 == -1 || v43 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v44 = *(char *)(*(_QWORD *)&a1[*v6] + v42);
            *(_QWORD *)&a1[v41] = v43;
            if (v44 < 0)
            {
              v24 = v40++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 9u:
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOProblemDetailIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0xCu:
        case 0x1Cu:
          goto LABEL_218;
        case 0xDu:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_240:
              PBReaderRecallMark();
              return 0;
            }
LABEL_223:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v70 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v71 = *v2;
                v72 = *(_QWORD *)&a1[v71];
                v73 = v72 + 1;
                if (v72 == -1 || v73 > *(_QWORD *)&a1[*v3])
                  break;
                v74 = *(char *)(*(_QWORD *)&a1[*v6] + v72);
                *(_QWORD *)&a1[v71] = v73;
                if (v74 < 0)
                {
                  v14 = v70++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_223;
              }
              a1[*v4] = 1;
            }
LABEL_216:
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0)
              goto LABEL_240;
            while (1)
            {
              v45 = *v2;
              v46 = *(_QWORD *)&a1[v45];
              v47 = v46 + 1;
              if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
                break;
              v48 = *(char *)(*(_QWORD *)&a1[*v6] + v46);
              *(_QWORD *)&a1[v45] = v47;
              if (v48 < 0)
              {
                v49 = v16++;
                if (v49 <= 8)
                  continue;
              }
              goto LABEL_219;
            }
LABEL_162:
            a1[*v4] = 1;
          }
LABEL_219:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_233;
          break;
        case 0xEu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitServiceGapIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0xFu:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v50 = 0;
          while (1)
          {
            v51 = *v2;
            v52 = *(_QWORD *)&a1[v51];
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v54 = *(char *)(*(_QWORD *)&a1[*v6] + v52);
            *(_QWORD *)&a1[v51] = v53;
            if (v54 < 0)
            {
              v24 = v50++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitRoutingIncidentMessageIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x11u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteDisplayHintsIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x12u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x13u:
          if (v16 == 2)
            goto LABEL_218;
          goto LABEL_240;
        case 0x14u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAlertIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x15u:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v55 = 0;
          while (1)
          {
            v56 = *v2;
            v57 = *(_QWORD *)&a1[v56];
            v58 = v57 + 1;
            if (v57 == -1 || v58 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v59 = *(char *)(*(_QWORD *)&a1[*v6] + v57);
            *(_QWORD *)&a1[v56] = v58;
            if (v59 < 0)
            {
              v24 = v55++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 0x16u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x18u:
          if (v16 == 2)
            goto LABEL_218;
          goto LABEL_240;
        case 0x19u:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v60 = 0;
          while (1)
          {
            v61 = *v2;
            v62 = *(_QWORD *)&a1[v61];
            v63 = v62 + 1;
            if (v62 == -1 || v63 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v64 = *(char *)(*(_QWORD *)&a1[*v6] + v62);
            *(_QWORD *)&a1[v61] = v63;
            if (v64 < 0)
            {
              v24 = v60++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 0x1Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSnapScoreMetadataIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x1Bu:
          if ((v9 & 7) != 0)
            goto LABEL_240;
          v65 = 0;
          while (1)
          {
            v66 = *v2;
            v67 = *(_QWORD *)&a1[v66];
            v68 = v67 + 1;
            if (v67 == -1 || v68 > *(_QWORD *)&a1[*v3])
              goto LABEL_162;
            v69 = *(char *)(*(_QWORD *)&a1[*v6] + v67);
            *(_QWORD *)&a1[v66] = v68;
            if (v69 < 0)
            {
              v24 = v65++ > 8;
              if (!v24)
                continue;
            }
            goto LABEL_219;
          }
        case 0x1Du:
          if (v16 != 2)
            goto LABEL_240;
LABEL_218:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            goto LABEL_219;
          goto LABEL_240;
        case 0x1Eu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOArrivalParametersIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x1Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTrafficSignalIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitRouteUpdateConfigurationIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x21u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x22u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitPaymentMethodSuggestionIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x23u:
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEODirectionsRequestResponseAnalyticsDataIsValid((unsigned __int8 *)a1))
          {
            goto LABEL_240;
          }
          goto LABEL_216;
        case 0x24u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x25u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOAdvisoriesInfoIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        case 0x26u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOCommonResponseAttributesIsValid(a1))
            goto LABEL_240;
          goto LABEL_216;
        default:
          switch((int)v18)
          {
            case 952:
              if (v16 == 2)
                goto LABEL_218;
              goto LABEL_240;
            case 953:
              if (v16 == 2)
                goto LABEL_218;
              goto LABEL_240;
            case 954:
              if (v16 == 2)
                goto LABEL_218;
              goto LABEL_240;
            case 955:
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitSuggestedRouteIsValid(a1))
                goto LABEL_240;
              goto LABEL_216;
            case 956:
            case 957:
            case 960:
              goto LABEL_218;
            case 958:
              if (v16 != 2 || !PBReaderPlaceMark() || (GEOTimepointIsValid(a1) & 1) == 0)
                goto LABEL_240;
              goto LABEL_216;
            case 959:
              if (v16 == 2 && PBReaderPlaceMark() && GEOTransitDecoderDataIsValid(a1))
                goto LABEL_216;
              goto LABEL_240;
            case 961:
              if (v16 == 2)
                goto LABEL_218;
              goto LABEL_240;
            default:
              if ((_DWORD)v18 != 1201)
                goto LABEL_218;
              if (v16 != 2 || !PBReaderPlaceMark() || !GEOClientMetricsIsValid(a1))
                goto LABEL_240;
              goto LABEL_216;
          }
      }
    }
  }
  v5 = 0;
LABEL_233:
  if (a1[*v4])
    v75 = 1;
  else
    v75 = v5 == 0;
  v76 = !v75;
  PBReaderRecallMark();
  return v76;
}

BOOL GEORouteDisplayHintsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  _BOOL8 v43;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_72;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_43;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8)
              continue;
            goto LABEL_48;
          }
        case 2u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0)
              goto LABEL_72;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              v25 = v24 + 1;
              if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
                goto LABEL_43;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v27 = v15++;
                if (v27 <= 8)
                  continue;
              }
              goto LABEL_48;
            }
          }
          if (!PBReaderPlaceMark())
            goto LABEL_72;
LABEL_51:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v33 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v34 = *v2;
              v35 = *(_QWORD *)&a1[v34];
              v36 = v35 + 1;
              if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
                break;
              v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
              *(_QWORD *)&a1[v34] = v36;
              if (v37 < 0)
              {
                v13 = v33++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_51;
            }
            a1[*v4] = 1;
          }
          goto LABEL_47;
        case 5u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_72:
              PBReaderRecallMark();
              return 0;
            }
LABEL_61:
            while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
            {
              v38 = a1[*v4];
              if (a1[*v4])
                break;
              while (1)
              {
                v39 = *v2;
                v40 = *(_QWORD *)&a1[v39];
                v41 = v40 + 1;
                if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
                  break;
                v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
                *(_QWORD *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  v13 = v38++ >= 9;
                  if (!v13)
                    continue;
                }
                goto LABEL_61;
              }
              a1[*v4] = 1;
            }
LABEL_47:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0)
              goto LABEL_72;
            while (1)
            {
              v28 = *v2;
              v29 = *(_QWORD *)&a1[v28];
              v30 = v29 + 1;
              if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
                break;
              v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
              *(_QWORD *)&a1[v28] = v30;
              if (v31 < 0)
              {
                v32 = v15++;
                if (v32 <= 8)
                  continue;
              }
              goto LABEL_48;
            }
LABEL_43:
            a1[*v4] = 1;
          }
LABEL_48:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_70;
          break;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORequestOptionsIsValid(a1))
            goto LABEL_47;
          goto LABEL_72;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_72;
          goto LABEL_48;
      }
    }
  }
LABEL_70:
  v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189754DB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEODirectionsResponseIsDirty(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _BYTE v84[128];
  _BYTE v85[128];
  _BYTE v86[128];
  _BYTE v87[128];
  _BYTE v88[128];
  _BYTE v89[128];
  _BYTE v90[128];
  _BYTE v91[128];
  _BYTE v92[128];
  _BYTE v93[128];
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 360));
  v2 = *(_QWORD *)(a1 + 388);
  if ((v2 & 0x1C0069900C00) != 0)
    return 1;
  if ((v2 & 0x8000000000) != 0)
  {
    if (GEOPBTransitRoutingIncidentMessageIsDirty(*(_QWORD *)(a1 + 312)))
      return 1;
    v2 = *(_QWORD *)(a1 + 388);
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEORouteDisplayHintsIsDirty(*(_QWORD *)(a1 + 168)))
      return 1;
    v2 = *(_QWORD *)(a1 + 388);
  }
  if ((v2 & 0x500000000) == 0)
  {
    if ((v2 & 0x400000) != 0)
    {
      if ((GEOAlertIsDirty(*(os_unfair_lock_s **)(a1 + 176)) & 1) != 0)
        return 1;
      v2 = *(_QWORD *)(a1 + 388);
    }
    if ((v2 & 0x1004020000) == 0)
    {
      if ((v2 & 0x200000000) != 0)
      {
        if ((GEOSnapScoreMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 264)) & 1) != 0)
          return 1;
        v2 = *(_QWORD *)(a1 + 388);
      }
      if ((v2 & 0x32000046000) == 0)
      {
        if ((v2 & 0x1000) != 0)
        {
          if ((GEOAdvisoriesInfoIsDirty(*(os_unfair_lock_s **)(a1 + 96)) & 1) != 0)
            return 1;
          v2 = *(_QWORD *)(a1 + 388);
        }
        if ((v2 & 0x892010000) == 0)
        {
          if ((v2 & 0x80000) != 0)
          {
            if ((GEOTransitDecoderDataIsDirty(*(os_unfair_lock_s **)(a1 + 152)) & 1) != 0)
              return 1;
            v2 = *(_QWORD *)(a1 + 388);
          }
          if ((v2 & 0x4000008000) == 0)
          {
            if ((v2 & 0x20000000) != 0)
            {
              v82 = 0u;
              v83 = 0u;
              v80 = 0u;
              v81 = 0u;
              v5 = *(id *)(a1 + 232);
              v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v80, v93, 16);
              if (v6)
              {
                v7 = v6;
                v8 = *(_QWORD *)v81;
LABEL_30:
                v9 = 0;
                while (1)
                {
                  if (*(_QWORD *)v81 != v8)
                    objc_enumerationMutation(v5);
                  if ((GEORouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v80 + 1) + 8 * v9)) & 1) != 0)
                    goto LABEL_128;
                  if (v7 == ++v9)
                  {
                    v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v80, v93, 16);
                    if (v7)
                      goto LABEL_30;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x80000000000) != 0)
            {
              v78 = 0u;
              v79 = 0u;
              v76 = 0u;
              v77 = 0u;
              v5 = *(id *)(a1 + 344);
              v10 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v76, v92, 16);
              if (v10)
              {
                v11 = v10;
                v12 = *(_QWORD *)v77;
LABEL_40:
                v13 = 0;
                while (1)
                {
                  if (*(_QWORD *)v77 != v12)
                    objc_enumerationMutation(v5);
                  if ((GEOWaypointRouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v76 + 1) + 8 * v13)) & 1) != 0)
                    goto LABEL_128;
                  if (v11 == ++v13)
                  {
                    v11 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v76, v92, 16);
                    if (v11)
                      goto LABEL_40;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x8000000) != 0)
            {
              v74 = 0u;
              v75 = 0u;
              v72 = 0u;
              v73 = 0u;
              v5 = *(id *)(a1 + 216);
              v14 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v72, v91, 16);
              if (v14)
              {
                v15 = v14;
                v16 = *(_QWORD *)v73;
LABEL_50:
                v17 = 0;
                while (1)
                {
                  if (*(_QWORD *)v73 != v16)
                    objc_enumerationMutation(v5);
                  if ((GEOPlaceSearchResponseIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v72 + 1)
                                                                                            + 8 * v17)) & 1) != 0)
                    goto LABEL_128;
                  if (v15 == ++v17)
                  {
                    v15 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v72, v91, 16);
                    if (v15)
                      goto LABEL_50;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x1000000) != 0)
            {
              v70 = 0u;
              v71 = 0u;
              v68 = 0u;
              v69 = 0u;
              v5 = *(id *)(a1 + 192);
              v18 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v68, v90, 16);
              if (v18)
              {
                v19 = v18;
                v20 = *(_QWORD *)v69;
LABEL_60:
                v21 = 0;
                while (1)
                {
                  if (*(_QWORD *)v69 != v20)
                    objc_enumerationMutation(v5);
                  if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v68 + 1) + 8 * v21)) & 1) != 0)
                    goto LABEL_128;
                  if (v19 == ++v21)
                  {
                    v19 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v68, v90, 16);
                    if (v19)
                      goto LABEL_60;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x800000) != 0)
            {
              v66 = 0u;
              v67 = 0u;
              v64 = 0u;
              v65 = 0u;
              v5 = *(id *)(a1 + 184);
              v22 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v89, 16);
              if (v22)
              {
                v23 = v22;
                v24 = *(_QWORD *)v65;
LABEL_70:
                v25 = 0;
                while (1)
                {
                  if (*(_QWORD *)v65 != v24)
                    objc_enumerationMutation(v5);
                  if ((GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v64 + 1) + 8 * v25)) & 1) != 0)
                    goto LABEL_128;
                  if (v23 == ++v25)
                  {
                    v23 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v64, v89, 16);
                    if (v23)
                      goto LABEL_70;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x1000000000) != 0)
            {
              v62 = 0u;
              v63 = 0u;
              v60 = 0u;
              v61 = 0u;
              v5 = *(id *)(a1 + 288);
              v26 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v88, 16);
              if (v26)
              {
                v27 = v26;
                v28 = *(_QWORD *)v61;
LABEL_80:
                v29 = 0;
                while (1)
                {
                  if (*(_QWORD *)v61 != v28)
                    objc_enumerationMutation(v5);
                  if ((GEOTrafficCameraIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v60 + 1) + 8 * v29)) & 1) != 0)
                    goto LABEL_128;
                  if (v27 == ++v29)
                  {
                    v27 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v60, v88, 16);
                    if (v27)
                      goto LABEL_80;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x4000) != 0)
            {
              v58 = 0u;
              v59 = 0u;
              v56 = 0u;
              v57 = 0u;
              v5 = *(id *)(a1 + 112);
              v30 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v87, 16);
              if (v30)
              {
                v31 = v30;
                v32 = *(_QWORD *)v57;
LABEL_90:
                v33 = 0;
                while (1)
                {
                  if (*(_QWORD *)v57 != v32)
                    objc_enumerationMutation(v5);
                  if (GEOArrivalParametersIsDirty(*(_QWORD *)(*((_QWORD *)&v56 + 1) + 8 * v33)))
                    goto LABEL_128;
                  if (v31 == ++v33)
                  {
                    v31 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v56, v87, 16);
                    if (v31)
                      goto LABEL_90;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x2000000000) != 0)
            {
              v54 = 0u;
              v55 = 0u;
              v52 = 0u;
              v53 = 0u;
              v5 = *(id *)(a1 + 296);
              v34 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v86, 16);
              if (v34)
              {
                v35 = v34;
                v36 = *(_QWORD *)v53;
LABEL_100:
                v37 = 0;
                while (1)
                {
                  if (*(_QWORD *)v53 != v36)
                    objc_enumerationMutation(v5);
                  if (GEOTrafficSignalIsDirty(*(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * v37)))
                    goto LABEL_128;
                  if (v35 == ++v37)
                  {
                    v35 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v52, v86, 16);
                    if (v35)
                      goto LABEL_100;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x10000000000) != 0)
            {
              v50 = 0u;
              v51 = 0u;
              v48 = 0u;
              v49 = 0u;
              v5 = *(id *)(a1 + 320);
              v38 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v85, 16);
              if (v38)
              {
                v39 = v38;
                v40 = *(_QWORD *)v49;
LABEL_110:
                v41 = 0;
                while (1)
                {
                  if (*(_QWORD *)v49 != v40)
                    objc_enumerationMutation(v5);
                  if ((GEOPBTransitPaymentMethodSuggestionIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v48 + 1) + 8 * v41)) & 1) != 0)
                    goto LABEL_128;
                  if (v39 == ++v41)
                  {
                    v39 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v48, v85, 16);
                    if (v39)
                      goto LABEL_110;
                    break;
                  }
                }
              }

              v2 = *(_QWORD *)(a1 + 388);
            }
            if ((v2 & 0x800000000) == 0)
              return 0;
            v46 = 0u;
            v47 = 0u;
            v44 = 0u;
            v45 = 0u;
            v5 = *(id *)(a1 + 280);
            v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v84, 16);
            if (!v3)
            {
LABEL_129:

              return v3;
            }
            v42 = *(_QWORD *)v45;
LABEL_121:
            v43 = 0;
            while (1)
            {
              if (*(_QWORD *)v45 != v42)
                objc_enumerationMutation(v5);
              if ((GEOTransitSuggestedRouteIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v44 + 1)
                                                                                          + 8 * v43)) & 1) != 0)
                break;
              if (v3 == ++v43)
              {
                v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v44, v84, 16);
                if (v3)
                  goto LABEL_121;
                goto LABEL_129;
              }
            }
LABEL_128:
            v3 = 1;
            goto LABEL_129;
          }
        }
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEODirectionsResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEODirectionsResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 90);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEODirectionsResponseClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t i;
  void *v8;
  void *v9;
  void *v10;

  -[GEODirectionsResponse _readPlaceSearchResponses](a1);
  result = objc_msgSend(*(id *)(a1 + 216), "count");
  if (result)
  {
    for (i = 0; i < result; ++i)
    {
      objc_msgSend(*(id *)(a1 + 216), "objectAtIndexedSubscript:", i);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (a3 && GEOPlaceSearchResponseHasSensitiveFields(v8))
      {
        v10 = (void *)objc_msgSend(v9, "copy");
        GEOPlaceSearchResponseClearSensitiveFields((uint64_t)v10, a2, 0);
        objc_msgSend(*(id *)(a1 + 216), "replaceObjectAtIndex:withObject:", i, v10);

      }
      else
      {
        objc_msgSend(v9, "clearSensitiveFields:", a2);
      }

      result = objc_msgSend(*(id *)(a1 + 216), "count");
    }
  }
  return result;
}

uint64_t GEODirectionsResponseHasSensitiveFields(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(a1, "placeSearchResponses", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v9;
    while (2)
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v1);
        if ((GEOPlaceSearchResponseHasSensitiveFields(*(void **)(*((_QWORD *)&v8 + 1) + 8 * v5)) & 1) != 0)
        {
          v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
  v6 = 0;
LABEL_12:

  return v6;
}

void sub_189757590(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189758EA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897597A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189759D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteDisplayHintsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  int v33;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  id v55;
  void *v56;
  int v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  GEORequestOptions *v65;
  void *v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  int v82;
  char v83;
  void *v84;
  char v86;
  char v87;
  int v88;
  char v89;
  char v90;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 1;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        if ((((v16 | v11) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v88 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = v17;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_120;
        v86 = v17;
        v89 = v18 | v17;
        v90 = (v19 == 0) | v18;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v87 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v21))
      goto LABEL_118;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_27:
    v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_118:
      v88 = 1;
      goto LABEL_119;
    }
    v35 = v26 >> 3;
    v36 = v18;
    if ((v90 & 1) == 0)
    {
      v37 = v19;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_90;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 96) |= 1u;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        while (1)
        {
          v44 = *v20;
          v45 = *(_QWORD *)(v3 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(v3 + *v6))
            break;
          v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v45);
          *(_QWORD *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0)
            goto LABEL_95;
          v41 += 7;
          v31 = v42++ >= 9;
          if (v31)
          {
            v43 = 0;
            goto LABEL_97;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_95:
        if (*(_BYTE *)(v3 + *v21))
          v43 = 0;
LABEL_97:
        *(_BYTE *)(a1 + 92) = v43 != 0;
        goto LABEL_91;
      case 2:
        if (!v36 || (*(_BYTE *)(a1 + 96) & 8) != 0)
          goto LABEL_90;
        if (v33 != 2)
        {
          v68 = 0;
          v69 = 0;
          v70 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v71 = *v20;
            v72 = *(_QWORD *)(v3 + v71);
            v73 = v72 + 1;
            if (v72 == -1 || v73 > *(_QWORD *)(v3 + *v6))
              goto LABEL_115;
            v74 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v72);
            *(_QWORD *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              v31 = v69++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_116;
          }
        }
        if (!PBReaderPlaceMark())
          goto LABEL_137;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
        {
          if (*(_BYTE *)(v3 + *v21))
            break;
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (1)
          {
            v51 = *v20;
            v52 = *(_QWORD *)(v3 + v51);
            v53 = v52 + 1;
            if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
              break;
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              v31 = v49++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_61;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_61:
          PBRepeatedInt32Add();
        }
        goto LABEL_84;
      case 5:
        if (!v36 || (*(_BYTE *)(a1 + 96) & 4) != 0)
          goto LABEL_90;
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_137;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v21))
              break;
            v58 = 0;
            v59 = 0;
            v60 = 0;
            while (1)
            {
              v61 = *v20;
              v62 = *(_QWORD *)(v3 + v61);
              v63 = v62 + 1;
              if (v62 == -1 || v63 > *(_QWORD *)(v3 + *v6))
                break;
              v64 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v62);
              *(_QWORD *)(v3 + v61) = v63;
              v60 |= (unint64_t)(v64 & 0x7F) << v58;
              if (v64 < 0)
              {
                v58 += 7;
                v31 = v59++ >= 9;
                if (!v31)
                  continue;
              }
              goto LABEL_83;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_83:
            PBRepeatedInt32Add();
          }
LABEL_84:
          PBReaderRecallMark();
        }
        else
        {
          v75 = 0;
          v76 = 0;
          v77 = 0;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v78 = *v20;
            v79 = *(_QWORD *)(v3 + v78);
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)(v3 + *v6))
              break;
            v81 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v79);
            *(_QWORD *)(v3 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              v31 = v76++ >= 9;
              if (!v31)
                continue;
            }
            goto LABEL_116;
          }
LABEL_115:
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_116:
          PBRepeatedInt32Add();
        }
        v18 = v87;
        goto LABEL_91;
      case 6:
        if (!v36)
          goto LABEL_90;
        if ((*(_BYTE *)(a1 + 96) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_137;
          v7 += *(unsigned __int8 *)(a1 + 96) << 27 >> 31;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_137;
        v65 = objc_alloc_init(GEORequestOptions);
        if (GEORequestOptionsReadAllFrom((uint64_t)v65, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v66 = *(void **)(a1 + 72);
          *(_QWORD *)(a1 + 72) = v65;

          --v7;
LABEL_100:
          v18 = v87;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
LABEL_91:
          if (!(v89 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_118;
          continue;
        }

LABEL_137:
        v88 = 0;
        v18 = v87;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_119:
        v22 = v86;
LABEL_120:
        if ((v22 & 1) != 0)
LABEL_121:
          *(_BYTE *)(a1 + 96) |= 2u;
        if (v18 & 1 | ((v88 & 1) == 0))
        {
          *(_BYTE *)(a1 + 96) |= 8u;
          *(_BYTE *)(a1 + 96) |= 4u;
          *(_BYTE *)(a1 + 96) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            v82 = *v19++;
            v83 = 8;
            switch(v82)
            {
              case 0:
                goto LABEL_129;
              case 2:
                goto LABEL_128;
              case 5:
                v83 = 4;
                goto LABEL_128;
              case 6:
                v83 = 16;
LABEL_128:
                *(_BYTE *)(a1 + 96) |= v83;
                break;
              default:
                continue;
            }
          }
        }
LABEL_129:
        if (v88)
        {
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0)
            return v3;
LABEL_133:
          v84 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
            goto LABEL_133;
        }
        return v3;
      default:
        if ((v86 & 1) == 0 || (*(_BYTE *)(a1 + 96) & 2) != 0)
        {
LABEL_90:
          v67 = PBReaderSkipValueWithTag();
          v18 = v87;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if ((v67 & 1) == 0)
          {
            v88 = 0;
            goto LABEL_119;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v55 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v56 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v55;

          }
          v57 = PBUnknownFieldAdd();
          v18 = v87;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v23 = (int *)MEMORY[0x1E0D82BB8];
          if (!v57)
          {
            v88 = 0;
            goto LABEL_121;
          }
        }
        goto LABEL_91;
    }
  }
}

void sub_18975AAE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975AED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975B9B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteDisplayHintsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORouteDisplayHintsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORouteDisplayHintsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORouteDisplayHintsReadAllFrom_initialTag;
  Specified = GEORouteDisplayHintsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18975BB40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteDisplayHintsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORouteDisplayHintsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18975BBA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975BDE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDisplayHintsIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = (*(_BYTE *)(a1 + 96) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_18975C178(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975C4CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18975CD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_18975CE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, void *a10)
{

  _Unwind_Resume(a1);
}

void std::deque<GEORoadEdge * {__strong}>::push_back(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[2];
  v5 = a1[1];
  v6 = ((v4 - v5) << 6) - 1;
  if (v4 == v5)
    v6 = 0;
  v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<GEORoadEdge * {__strong}>::__add_back_capacity(a1);
    v5 = a1[1];
    v7 = a1[5] + a1[4];
  }
  v8 = *(_QWORD *)(v5 + ((v7 >> 6) & 0x3FFFFFFFFFFFFF8));
  v9 = *a2;
  *a2 = 0;
  *(_QWORD *)(v8 + 8 * (v7 & 0x1FF)) = v9;
  ++a1[5];
}

void sub_18975D178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void sub_18975D468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  va_list va;

  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18975D64C(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Block_object_dispose((const void *)(v2 - 88), 8);

  _Unwind_Resume(a1);
}

void sub_18975D704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18975D868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void std::deque<GEORoadEdge * {__strong}>::insert(int64x2_t *a1, char *a2, uint64_t a3, void **a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  _BYTE *v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void ***v42;
  void **v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  void **v59;
  void ***v60;
  void **v61;
  void **v62;
  void ***v63;
  void **v64;
  void **v65;
  void ***v66;
  void **v67;
  void **v68;
  void **v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void **v75;
  _QWORD *v76;
  _QWORD *v77;

  v6 = a1[2].u64[0];
  v7 = a1->i64[1];
  v8 = a1[1].i64[0];
  v9 = (char *)(v7 + 8 * (v6 >> 9));
  if (v8 == v7)
    v10 = 0;
  else
    v10 = *(_QWORD *)v9 + 8 * (a1[2].i64[0] & 0x1FF);
  if (a3 == v10)
    v11 = 0;
  else
    v11 = ((a3 - *(_QWORD *)a2) >> 3) + ((a2 - v9) << 6) - ((v10 - *(_QWORD *)v9) >> 3);
  v12 = a1[2].i64[1];
  v13 = v12 - v11;
  if (v11 >= v12 - v11)
  {
    if (v8 == v7)
      v22 = 0;
    else
      v22 = ((v8 - v7) << 6) - 1;
    if (v22 == v12 + v6)
    {
      std::deque<GEORoadEdge * {__strong}>::__add_back_capacity(a1);
      v12 = a1[2].i64[1];
      v13 = v12 - v11;
    }
    if (v12 == v11)
    {
      v23 = a1[2].i64[0] + v11;
      v24 = *(_QWORD *)(a1->i64[1] + ((v23 >> 6) & 0x3FFFFFFFFFFFFF8));
      v25 = *a4;
      *a4 = 0;
      *(_QWORD *)(v24 + 8 * (v23 & 0x1FF)) = v25;
      ++a1[2].i64[1];
    }
    else
    {
      v26 = a1[2].i64[0] + v12;
      v27 = a1->i64[1];
      v28 = (_QWORD *)(v27 + 8 * (v26 >> 9));
      v29 = *v28 + 8 * (v26 & 0x1FF);
      if (a1[1].i64[0] == v27)
        v30 = 0;
      else
        v30 = (_QWORD *)v29;
      v31 = (uint64_t)v30 - *v28;
      v32 = v31 >> 3;
      if (v31 < 9)
      {
        v45 = 512 - v32;
        v34 = &v28[-(v45 >> 9)];
        v35 = (uint64_t *)(*v34 + 8 * (~(_WORD)v45 & 0x1FF));
      }
      else
      {
        v33 = v32 - 1;
        v34 = &v28[v33 >> 9];
        v35 = (uint64_t *)(*v34 + 8 * (v33 & 0x1FF));
      }
      v46 = *v35;
      *v35 = 0;
      *v30 = v46;
      ++a1[2].i64[1];
      if (v13 >= 2)
      {
        v47 = std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator-[abi:ne180100](v28, (uint64_t)v30, v13);
        v49 = v48;
        if (v34 == v47)
        {
          v70 = (uint64_t)v35;
          v55 = v28;
          v56 = v30;
        }
        else
        {
          v50 = v47;
          v53 = *v34;
          v52 = v34 - 1;
          v51 = v53;
          v54 = (uint64_t)v35;
          v55 = v28;
          v56 = v30;
          while (1)
          {
            std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v75, v51, v54, v55, v56);
            v55 = v76;
            v56 = v77;
            if (v52 == v50)
              break;
            v57 = *v52--;
            v51 = v57;
            v54 = v57 + 4096;
          }
          v70 = *v50 + 4096;
          v48 = v49;
        }
        std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v75, v48, v70, v55, v56);
        v28 = v76;
        v30 = v77;
      }
      v73 = *a4;
      *a4 = 0;
      if (v30 == (_QWORD *)*v28)
        v30 = (_QWORD *)(*(v28 - 1) + 4096);
      v74 = (void *)*(v30 - 1);
      *(v30 - 1) = v73;

    }
  }
  else
  {
    if (!v6)
      std::deque<GEORoadEdge * {__strong}>::__add_front_capacity((char **)a1);
    v14 = a1->i64[1];
    v15 = a1[1].i64[0];
    v16 = (void **)(v14 + 8 * ((unint64_t)a1[2].i64[0] >> 9));
    v17 = *v16;
    if (v11)
    {
      if (v15 == v14)
        v18 = 0;
      else
        v18 = (void **)((char *)*v16 + 8 * (a1[2].i64[0] & 0x1FF));
      v19 = (char *)v18 - v17;
      v20 = ((char *)v18 - v17) >> 3;
      if (v19 < 9)
        v21 = (char *)v16[-((unint64_t)(512 - v20) >> 9)] + 8 * (~(512 - (unsigned __int16)v20) & 0x1FF);
      else
        v21 = *(char **)((char *)v16 + (((unint64_t)(v20 - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
            + 8 * ((v20 - 1) & 0x1FF);
      v38 = *v18;
      *v18 = 0;
      *v21 = v38;
      a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_189CC15E0);
      if (v11 != 1)
      {
        v39 = (char *)v18 - (_BYTE *)*v16;
        v40 = v39 >> 3;
        if (v39 < -7)
        {
          v58 = 510 - v40;
          v42 = (void ***)&v16[-(v58 >> 9)];
          v43 = *v42;
          v44 = ~(_DWORD)v58 & 0x1FFLL;
        }
        else
        {
          v41 = v40 + 1;
          v42 = (void ***)&v16[v41 >> 9];
          v43 = *v42;
          v44 = v41 & 0x1FF;
        }
        v59 = &v43[v44];
        v60 = (void ***)std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator+[abi:ne180100](v16, (uint64_t)v18, v11);
        v62 = v61;
        if (v42 == v60)
        {
          v68 = v59;
          v69 = v62;
          v64 = v16;
          v65 = v18;
        }
        else
        {
          v63 = v60;
          std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v75, v59, v43 + 512, v16, v18);
          v64 = (void **)v76;
          v65 = (void **)v77;
          v66 = v42 + 1;
          while (v66 != v63)
          {
            v67 = *v66++;
            std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v75, v67, v67 + 512, v64, v65);
            v64 = (void **)v76;
            v65 = (void **)v77;
          }
          v68 = *v63;
          v69 = v62;
        }
        std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(&v75, v68, v69, v64, v65);
        v18 = (void **)v77;
      }
      v71 = *a4;
      *a4 = 0;
      v72 = *v18;
      *v18 = v71;

    }
    else
    {
      if (v15 == v14)
        v36 = 0;
      else
        v36 = (uint64_t)*v16 + 8 * (a1[2].i64[0] & 0x1FF);
      if ((_BYTE *)v36 == v17)
        v36 = (uint64_t)*(v16 - 1) + 4096;
      v37 = *a4;
      *a4 = 0;
      *(_QWORD *)(v36 - 8) = v37;
      a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_189CC15E0);
    }
  }
}

_QWORD *std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator+[abi:ne180100](_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a3)
  {
    v3 = a3 + ((a2 - *result) >> 3);
    if (v3 < 1)
      result -= (unint64_t)(511 - v3) >> 9;
    else
      result += (unint64_t)v3 >> 9;
  }
  return result;
}

void sub_18975DFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  void *v10;
  void *v11;
  va_list va;

  va_start(va, a10);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18975E1C4(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Block_object_dispose((const void *)(v2 - 88), 8);

  _Unwind_Resume(a1);
}

void sub_18975E27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18975E394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, void *a12)
{

  _Unwind_Resume(a1);
}

_QWORD *std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>::operator-[abi:ne180100](_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a3)
  {
    v3 = ((a2 - *result) >> 3) - a3;
    if (v3 < 1)
      result -= (unint64_t)(511 - v3) >> 9;
    else
      result += (unint64_t)v3 >> 9;
  }
  return result;
}

void sub_18975E584(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18975E638(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18975E6FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18975E790(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18975E82C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void std::deque<GEORoadEdge * {__strong}>::__add_front_capacity(char **a1)
{
  char *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  _QWORD *v41;

  v2 = a1[1];
  v3 = a1[2];
  if (v3 == v2)
    v4 = 0;
  else
    v4 = ((v3 - v2) << 6) - 1;
  v5 = a1[4];
  if (v4 - (unint64_t)&v5[(_QWORD)a1[5]] < 0x200)
  {
    v6 = a1[3];
    v7 = *a1;
    v8 = v6 - *a1;
    if (v3 - v2 >= (unint64_t)v8)
    {
      if (v6 == v7)
        v9 = 1;
      else
        v9 = v8 >> 2;
      v41 = a1 + 3;
      v37 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v9);
      v38 = v37;
      v39 = v37;
      v40 = &v37[8 * v10];
      v36 = operator new(0x1000uLL);
      std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(&v37, &v36);
      v12 = (uint64_t *)a1[1];
      v11 = a1[2];
      v13 = v39;
      while (v12 != (uint64_t *)v11)
      {
        if (v13 == v40)
        {
          v15 = v37;
          v14 = v38;
          if (v38 <= v37)
          {
            if (v13 == v37)
              v21 = 1;
            else
              v21 = (v13 - v37) >> 2;
            v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v21);
            v25 = v13 - v14;
            v24 = v13 == v14;
            v13 = &v22[8 * (v21 >> 2)];
            if (!v24)
            {
              v13 = &v22[8 * (v21 >> 2) + (v25 & 0xFFFFFFFFFFFFFFF8)];
              v26 = 8 * (v25 >> 3);
              v27 = &v22[8 * (v21 >> 2)];
              do
              {
                v28 = *(_QWORD *)v14;
                v14 += 8;
                *(_QWORD *)v27 = v28;
                v27 += 8;
                v26 -= 8;
              }
              while (v26);
            }
            v37 = v22;
            v38 = &v22[8 * (v21 >> 2)];
            v39 = v13;
            v40 = &v22[8 * v23];
            if (v15)
              operator delete(v15);
          }
          else
          {
            v16 = (v38 - v37) >> 3;
            if (v16 >= -1)
              v17 = v16 + 1;
            else
              v17 = v16 + 2;
            v18 = &v38[-8 * (v17 >> 1)];
            v19 = v13 - v38;
            if (v13 != v38)
            {
              memmove(&v38[-8 * (v17 >> 1)], v38, v13 - v38);
              v13 = v14;
            }
            v20 = &v13[-8 * (v17 >> 1)];
            v13 = &v18[v19];
            v38 = v20;
            v39 = &v18[v19];
          }
        }
        v29 = *v12++;
        *(_QWORD *)v13 = v29;
        v13 = v39 + 8;
        v39 += 8;
        v11 = a1[2];
      }
      v30 = *a1;
      v31 = v38;
      *a1 = v37;
      a1[1] = v31;
      v32 = v40;
      a1[2] = v13;
      a1[3] = v32;
      if (v13 - v31 == 8)
        v33 = 256;
      else
        v33 = (uint64_t)(a1[4] + 512);
      a1[4] = (char *)v33;
      if (v30)
        operator delete(v30);
    }
    else
    {
      if (v2 == v7)
      {
        v37 = (char *)operator new(0x1000uLL);
        std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(a1, &v37);
        v34 = a1[2];
        v37 = (char *)*((_QWORD *)v34 - 1);
        a1[2] = v34 - 8;
      }
      else
      {
        v37 = (char *)operator new(0x1000uLL);
      }
      std::__split_buffer<ErrorInfo *>::push_front((uint64_t)a1, &v37);
      if (a1[2] - a1[1] == 8)
        v35 = 256;
      else
        v35 = (uint64_t)(a1[4] + 512);
      a1[4] = (char *)v35;
    }
  }
  else
  {
    a1[4] = v5 + 512;
    v37 = (char *)*((_QWORD *)v3 - 1);
    a1[2] = v3 - 8;
    std::__split_buffer<ErrorInfo *>::push_front((uint64_t)a1, &v37);
  }
}

void sub_18975EC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  void *v10;

  operator delete(v10);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(_QWORD *a1, _QWORD *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;

  v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    v5 = (char *)a1[1];
    v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1)
        v16 = 1;
      else
        v16 = (uint64_t)&v4[-*a1] >> 2;
      v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v16);
      v19 = &v17[8 * (v16 >> 2)];
      v20 = (uint64_t *)a1[1];
      v4 = v19;
      v21 = a1[2] - (_QWORD)v20;
      if (v21)
      {
        v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        v22 = 8 * (v21 >> 3);
        v23 = &v17[8 * (v16 >> 2)];
        do
        {
          v24 = *v20++;
          *(_QWORD *)v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        v4 = (char *)a1[2];
      }
    }
    else
    {
      v7 = v6 >> 3;
      v8 = v6 >> 3 < -1;
      v9 = (v6 >> 3) + 2;
      if (v8)
        v10 = v9;
      else
        v10 = v7 + 1;
      v11 = -(v10 >> 1);
      v12 = v10 >> 1;
      v13 = &v5[-8 * v12];
      v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        v4 = (char *)a1[1];
      }
      v15 = &v4[8 * v11];
      v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(_QWORD *)v4 = *a2;
  a1[2] += 8;
}

void std::deque<GEORoadEdge * {__strong}>::__add_back_capacity(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  _QWORD *v72;

  v2 = a1[4];
  v3 = v2 >= 0x200;
  v4 = v2 - 512;
  if (v3)
  {
    a1[4] = v4;
    v5 = (_QWORD *)a1[1];
    v6 = (char *)a1[2];
    v9 = *v5;
    v7 = (char *)(v5 + 1);
    v8 = v9;
    a1[1] = v7;
    if (v6 != (char *)a1[3])
    {
LABEL_46:
      *(_QWORD *)v6 = v8;
      a1[2] += 8;
      return;
    }
    v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v6[-*a1] >> 2;
      v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v46);
      v48 = &v47[8 * (v46 >> 2)];
      v50 = &v47[8 * v49];
      v51 = (uint64_t *)a1[1];
      v6 = v48;
      v52 = a1[2] - (_QWORD)v51;
      if (v52)
      {
        v6 = &v48[v52 & 0xFFFFFFFFFFFFFFF8];
        v53 = 8 * (v52 >> 3);
        v54 = &v47[8 * (v46 >> 2)];
        do
        {
          v55 = *v51++;
          *(_QWORD *)v54 = v55;
          v54 += 8;
          v53 -= 8;
        }
        while (v53);
      }
      goto LABEL_43;
    }
LABEL_5:
    v11 = v10 >> 3;
    v12 = v10 >> 3 < -1;
    v13 = (v10 >> 3) + 2;
    if (v12)
      v14 = v13;
    else
      v14 = v11 + 1;
    v15 = -(v14 >> 1);
    v16 = v14 >> 1;
    v17 = &v7[-8 * v16];
    v18 = v6 - v7;
    if (v6 != v7)
    {
      memmove(&v7[-8 * v16], v7, v6 - v7);
      v7 = (char *)a1[1];
    }
    v6 = &v17[v18];
    a1[1] = &v7[8 * v15];
    a1[2] = &v17[v18];
    goto LABEL_46;
  }
  v19 = a1[2];
  v20 = (v19 - a1[1]) >> 3;
  v21 = a1[3];
  v22 = v21 - *a1;
  if (v20 < v22 >> 3)
  {
    if (v21 != v19)
    {
      v68 = (char *)operator new(0x1000uLL);
      std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(a1, &v68);
      return;
    }
    v68 = (char *)operator new(0x1000uLL);
    std::__split_buffer<ErrorInfo *>::push_front((uint64_t)a1, &v68);
    v57 = (_QWORD *)a1[1];
    v6 = (char *)a1[2];
    v58 = *v57;
    v7 = (char *)(v57 + 1);
    v8 = v58;
    a1[1] = v7;
    if (v6 != (char *)a1[3])
      goto LABEL_46;
    v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1)
        v60 = 1;
      else
        v60 = (uint64_t)&v6[-*a1] >> 2;
      v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v60);
      v48 = &v47[8 * (v60 >> 2)];
      v50 = &v47[8 * v61];
      v62 = (uint64_t *)a1[1];
      v6 = v48;
      v63 = a1[2] - (_QWORD)v62;
      if (v63)
      {
        v6 = &v48[v63 & 0xFFFFFFFFFFFFFFF8];
        v64 = 8 * (v63 >> 3);
        v65 = &v47[8 * (v60 >> 2)];
        do
        {
          v66 = *v62++;
          *(_QWORD *)v65 = v66;
          v65 += 8;
          v64 -= 8;
        }
        while (v64);
      }
LABEL_43:
      v56 = (char *)*a1;
      *a1 = v47;
      a1[1] = v48;
      a1[2] = v6;
      a1[3] = v50;
      if (v56)
      {
        operator delete(v56);
        v6 = (char *)a1[2];
      }
      goto LABEL_46;
    }
    goto LABEL_5;
  }
  if (v21 == *a1)
    v23 = 1;
  else
    v23 = v22 >> 2;
  v72 = a1 + 3;
  v68 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v23);
  v69 = &v68[8 * v20];
  v70 = v69;
  v71 = &v68[8 * v24];
  v67 = operator new(0x1000uLL);
  std::__split_buffer<GEORoadEdge * {__strong}*>::push_back(&v68, &v67);
  v26 = v68;
  v25 = v69;
  v27 = v70;
  v28 = v71;
  v29 = a1[2];
  if (v29 == a1[1])
  {
    v45 = v69;
  }
  else
  {
    do
    {
      if (v25 == v26)
      {
        if (v27 >= v28)
        {
          if (v28 == v25)
            v35 = 1;
          else
            v35 = (v28 - v25) >> 2;
          v36 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unique_ptr<google::protobuf::Message>>>(v35);
          v26 = v36;
          v30 = &v36[(2 * v35 + 6) & 0xFFFFFFFFFFFFFFF8];
          v39 = v27 - v25;
          v38 = v27 == v25;
          v27 = v30;
          if (!v38)
          {
            v27 = &v30[v39 & 0xFFFFFFFFFFFFFFF8];
            v40 = 8 * (v39 >> 3);
            v41 = v30;
            v42 = v25;
            do
            {
              v43 = *(_QWORD *)v42;
              v42 += 8;
              *(_QWORD *)v41 = v43;
              v41 += 8;
              v40 -= 8;
            }
            while (v40);
          }
          v28 = &v36[8 * v37];
          if (v25)
            operator delete(v25);
        }
        else
        {
          v31 = (v28 - v27) >> 3;
          if (v31 >= -1)
            v32 = v31 + 1;
          else
            v32 = v31 + 2;
          v33 = v32 >> 1;
          v30 = &v25[8 * (v32 >> 1)];
          v34 = v25;
          if (v27 != v25)
          {
            memmove(v30, v25, v27 - v25);
            v34 = v27;
          }
          v27 = &v34[8 * v33];
          v26 = v25;
        }
      }
      else
      {
        v30 = v25;
      }
      v44 = *(_QWORD *)(v29 - 8);
      v29 -= 8;
      *((_QWORD *)v30 - 1) = v44;
      v45 = v30 - 8;
      v25 = v45;
    }
    while (v29 != a1[1]);
  }
  v59 = (char *)*a1;
  *a1 = v26;
  a1[1] = v45;
  a1[2] = v27;
  a1[3] = v28;
  if (v59)
    operator delete(v59);
}

void sub_18975F134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  void *v10;

  operator delete(v10);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(void ***a1, void **a2, void **a3, void **a4, void **a5)
{
  void **v6;
  void **v7;
  void **v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  void *v16;
  void **v17;
  void **v18;

  v6 = a4;
  v7 = a2;
  if (a2 == a3)
  {
    v9 = a2;
  }
  else
  {
    v9 = a3;
    v10 = (void **)*a4;
    while (1)
    {
      v11 = (char *)v10 - (char *)a5 + 4096;
      if (v9 - v7 >= v11 >> 3)
        v12 = v11 >> 3;
      else
        v12 = v9 - v7;
      if (v12)
      {
        v13 = 8 * v12;
        v14 = &v7[v12];
        do
        {
          v15 = *v7;
          *v7++ = 0;
          v16 = *a5;
          *a5++ = v15;

          v13 -= 8;
        }
        while (v13);
        v7 = v14;
      }
      if (v7 == v9)
        break;
      v17 = (void **)v6[1];
      ++v6;
      v10 = v17;
      a5 = v17;
    }
    if ((char *)*v6 + 4096 == (char *)a5)
    {
      v18 = (void **)v6[1];
      ++v6;
      a5 = v18;
    }
  }
  *a1 = v9;
  a1[1] = v6;
  a1[2] = a5;
}

void std::__move_backward_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<GEORoadEdge * {__strong}*,std::__deque_iterator<GEORoadEdge * {__strong},GEORoadEdge * {__strong}*,GEORoadEdge * {__strong}&,GEORoadEdge * {__strong}**,long,512l>,0>(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;

  v6 = a4;
  if (a2 == a3)
  {
    v9 = a2;
  }
  else
  {
    v9 = a3;
    v10 = *a4;
    v11 = a3;
    while (1)
    {
      v12 = (uint64_t)a5 - v10;
      if ((v11 - a2) >> 3 >= v12 >> 3)
        v13 = v12 >> 3;
      else
        v13 = (v11 - a2) >> 3;
      if (v13)
      {
        v14 = -8 * v13;
        v15 = (uint64_t *)(v11 - 8);
        do
        {
          v16 = *v15;
          *v15-- = 0;
          v17 = (void *)*--a5;
          *a5 = v16;

          v14 += 8;
        }
        while (v14);
      }
      v11 -= 8 * v13;
      if (v11 == a2)
        break;
      v18 = *--v6;
      v10 = v18;
      a5 = (_QWORD *)(v18 + 4096);
    }
    if ((_QWORD *)(*v6 + 4096) == a5)
    {
      v19 = (_QWORD *)v6[1];
      ++v6;
      a5 = v19;
    }
  }
  *a1 = v9;
  a1[1] = v6;
  a1[2] = a5;
}

uint64_t featureTypeForGEOFeatureType(int a1)
{
  uint64_t v1;

  v1 = (a1 - 1);
  if (v1 < 0x29)
    return v1 + 1;
  else
    return 0;
}

void sub_189762438(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

id GEOGetAuditTokenLog()
{
  if (qword_1ECDBCB48 != -1)
    dispatch_once(&qword_1ECDBCB48, &__block_literal_global_154_1);
  return (id)qword_1ECDBCB40;
}

void sub_1897630F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL ___photoContentForURLType_block_invoke(uint64_t a1, uint64_t a2)
{
  int v2;

  if (a2 && (*(_BYTE *)(a2 + 36) & 2) != 0)
    v2 = *(_DWORD *)(a2 + 28);
  else
    v2 = 0;
  return v2 == *(_DWORD *)(a1 + 32);
}

id getAMSMediaArtworkCropStyleSourceSize()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getAMSMediaArtworkCropStyleSourceSizeSymbolLoc_ptr;
  v7 = getAMSMediaArtworkCropStyleSourceSizeSymbolLoc_ptr;
  if (!getAMSMediaArtworkCropStyleSourceSizeSymbolLoc_ptr)
  {
    v1 = (void *)AppleMediaServicesLibrary();
    v0 = (id *)dlsym(v1, "AMSMediaArtworkCropStyleSourceSize");
    v5[3] = (uint64_t)v0;
    getAMSMediaArtworkCropStyleSourceSizeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getAMSMediaArtworkFormatHEIC()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getAMSMediaArtworkFormatHEICSymbolLoc_ptr;
  v7 = getAMSMediaArtworkFormatHEICSymbolLoc_ptr;
  if (!getAMSMediaArtworkFormatHEICSymbolLoc_ptr)
  {
    v1 = (void *)AppleMediaServicesLibrary();
    v0 = (id *)dlsym(v1, "AMSMediaArtworkFormatHEIC");
    v5[3] = (uint64_t)v0;
    getAMSMediaArtworkFormatHEICSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id GEOGetGEOComposedETARouteLog()
{
  if (qword_1ECDBCB90 != -1)
    dispatch_once(&qword_1ECDBCB90, &__block_literal_global_196);
  return (id)_MergedGlobals_330;
}

void sub_1897670F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189767164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)GEOSnappedRoutePath;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_189767378(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18976754C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18976797C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  va_list va;

  va_start(va, a15);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100](v18 - 120);
  _Unwind_Resume(a1);
}

void _addFullControlPoint(void ****a1, unsigned int a2, void *a3)
{
  id v5;
  void *v6;
  int v7;
  std::__shared_weak_count_vtbl *v8;
  unsigned int i;
  uint64_t v10;
  uint64_t v11;
  unint64_t on_zero_shared;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (__cdecl *v23)(std::__shared_weak_count *__hidden);
  void (__cdecl *v24)(std::__shared_weak_count *__hidden);
  char *v25;
  uint64_t v26;
  int v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t *v34;
  __int16 StartHeading;
  unsigned int v36;
  FormOfWay v37;
  FunctionalClass v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  void ****v45;
  _OWORD v46[2];
  std::__shared_weak_count_vtbl *v47;
  std::__shared_weak_count *v48;
  char v49[8];
  std::__shared_weak_count *v50;
  std::__shared_weak_count_vtbl *v51;
  std::__shared_weak_count *v52;
  _OWORD v53[2];
  _OWORD v54[3];

  v5 = a3;
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "zilchControlPointAt:", a2);
  else
    memset(v54, 0, 32);
  v7 = zilch::ControlPoint::type((zilch::ControlPoint *)v54);
  if (a2 && v7 && objc_msgSend(v6, "coordinateCount") > (unint64_t)(a2 + 1))
  {
    v45 = a1;
    v8 = (std::__shared_weak_count_vtbl *)operator new();
    v8->__on_zero_shared = 0;
    v8->~__shared_weak_count = 0;
    v8->~__shared_weak_count_0 = 0;
    for (i = a2; objc_msgSend(v6, "coordinateCount") > (unint64_t)i; ++i)
    {
      if (v6)
        objc_msgSend(v6, "zilchControlPointAt:", i);
      else
        memset(v53, 0, sizeof(v53));
      v10 = zilch::ControlPoint::position((zilch::ControlPoint *)v53);
      v11 = v10;
      v13 = (unint64_t)v8->~__shared_weak_count_0;
      on_zero_shared = (unint64_t)v8->__on_zero_shared;
      if (v13 >= on_zero_shared)
      {
        v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - (unint64_t)v8->~__shared_weak_count) >> 2);
        v17 = v16 + 1;
        if (v16 + 1 > 0x1555555555555555)
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(on_zero_shared - (unint64_t)v8->~__shared_weak_count) >> 2);
        if (2 * v18 > v17)
          v17 = 2 * v18;
        if (v18 >= 0xAAAAAAAAAAAAAAALL)
          v19 = 0x1555555555555555;
        else
          v19 = v17;
        if (v19)
          v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::GeoCoordinates>>((uint64_t)&v8->__on_zero_shared, v19);
        else
          v20 = 0;
        v21 = &v20[12 * v16];
        v22 = *(_QWORD *)v11;
        *((_DWORD *)v21 + 2) = *(_DWORD *)(v11 + 8);
        *(_QWORD *)v21 = v22;
        v24 = v8->~__shared_weak_count;
        v23 = v8->~__shared_weak_count_0;
        v25 = v21;
        if (v23 != v8->~__shared_weak_count)
        {
          do
          {
            v26 = *(_QWORD *)((char *)v23 - 12);
            v23 = (void (__cdecl *)(std::__shared_weak_count *__hidden))((char *)v23 - 12);
            v27 = *((_DWORD *)v23 + 2);
            *(_QWORD *)(v25 - 12) = v26;
            v25 -= 12;
            *((_DWORD *)v25 + 2) = v27;
          }
          while (v23 != v24);
          v23 = v8->~__shared_weak_count;
        }
        v15 = v21 + 12;
        v8->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))v25;
        v8->~__shared_weak_count_0 = (void (__cdecl *)(std::__shared_weak_count *__hidden))(v21 + 12);
        v8->__on_zero_shared = (void (__cdecl *)(std::__shared_count *__hidden))&v20[12 * v19];
        if (v23)
          operator delete(v23);
      }
      else
      {
        v14 = *(_QWORD *)v10;
        *(_DWORD *)(v13 + 8) = *(_DWORD *)(v10 + 8);
        *(_QWORD *)v13 = v14;
        v15 = (char *)(v13 + 12);
      }
      v8->~__shared_weak_count_0 = (void (__cdecl *)(std::__shared_weak_count *__hidden))v15;
      if (!zilch::ControlPoint::type((zilch::ControlPoint *)v53)
        && 0xAAAAAAAAAAAAAAABLL * (((char *)v8->~__shared_weak_count_0 - (char *)v8->~__shared_weak_count) >> 2) > 1)
      {
        break;
      }
    }
    v51 = v8;
    v28 = (std::__shared_weak_count *)operator new();
    v28->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    v28->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB800;
    v28->__shared_weak_owners_ = 0;
    v28[1].__vftable = v8;
    v52 = v28;
    v47 = v8;
    v48 = v28;
    do
      v30 = __ldxr(p_shared_owners);
    while (__stxr(v30 + 1, p_shared_owners));
    zilch::GeoPolyline::GeoPolyline((uint64_t)v49, &v47, 0);
    v31 = v48;
    if (v48)
    {
      v32 = (unint64_t *)&v48->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    v34 = (uint64_t *)zilch::ControlPoint::position((zilch::ControlPoint *)v54);
    StartHeading = zilch::GeoPolyline::getStartHeading((zilch::GeoPolyline *)v49);
    zilch::ControlPoint::ControlPoint((uint64_t)v53, v34, StartHeading);
    v36 = a2;
    while (1)
    {
      if (v6)
        objc_msgSend(v6, "zilchControlPointAt:", v36 - 1);
      else
        memset(v46, 0, sizeof(v46));
      if (!zilch::ControlPoint::type((zilch::ControlPoint *)v46))
        break;
      if (!--v36)
        goto LABEL_48;
    }
    v37.var0 = zilch::ControlPoint::formOfWay((zilch::ControlPoint *)v46);
    zilch::ControlPoint::setFormOfWay((FormOfWay *)v53, v37);
    v38.var0 = zilch::ControlPoint::functionalClass((zilch::ControlPoint *)v46);
    zilch::ControlPoint::setFunctionalClass((FunctionalClass *)v53, v38);
    zilch::ControlPoint::setType(v53, 0);
LABEL_48:
    zilch::Message::addPoint(*v45, (const zilch::ControlPoint *)v53);
    v39 = v50;
    if (v50)
    {
      v40 = (unint64_t *)&v50->__shared_owners_;
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
    v42 = v52;
    if (v52)
    {
      v43 = (unint64_t *)&v52->__shared_owners_;
      do
        v44 = __ldaxr(v43);
      while (__stlxr(v44 - 1, v43));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
  }
  else
  {
    zilch::Message::addPoint(*a1, (const zilch::ControlPoint *)v54);
  }

}

void sub_189767E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  void *v8;
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va);
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)va1);

  _Unwind_Resume(a1);
}

void sub_189768220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1897683D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189768450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void geo::SnappedPathMapMatchingSection::~SnappedPathMapMatchingSection(id *this)
{
  objc_destroyWeak(this + 1);
}

{
  objc_destroyWeak(this + 1);
  JUMPOUT(0x18D76437CLL);
}

uint64_t geo::SnappedPathMapMatchingSection::isMatchingCandidate(id *this)
{
  id WeakRetained;
  uint64_t v2;

  WeakRetained = objc_loadWeakRetained(this + 1);
  v2 = objc_msgSend(WeakRetained, "isMapMatched");

  return v2;
}

void sub_1897685B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t geo::SnappedPathMapMatchingSection::polylineStart(id *this)
{
  id WeakRetained;
  unsigned int v2;

  WeakRetained = objc_loadWeakRetained(this + 1);
  v2 = objc_msgSend(WeakRetained, "routeStartIndex");

  return v2;
}

void sub_1897685FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t geo::SnappedPathMapMatchingSection::polylineEnd(id *this)
{
  id WeakRetained;
  unsigned int v2;

  WeakRetained = objc_loadWeakRetained(this + 1);
  v2 = objc_msgSend(WeakRetained, "routeEndIndex");

  return v2;
}

void sub_189768640(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void geo::SnappedPathMapMatchingSection::forEachSegment(uint64_t a1, void *a2)
{
  uint64_t (**v3)(id, uint64_t, uint64_t, uint64_t, uint64_t, void *);
  id WeakRetained;
  void *v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
  objc_msgSend(WeakRetained, "edges");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = v5;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v6)
  {
    v14 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v17 != v14)
          objc_enumerationMutation(v5);
        v8 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        objc_msgSend(v8, "feature", v14);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v8, "points");
        v11 = objc_msgSend(v8, "routeOffsets");
        v12 = 0;
        while (++v12 < (unint64_t)objc_msgSend(v8, "pointCount"))
        {
          v13 = v3[2](v3, v10, v10 + 8, v11, v11 + 8, v9);
          v10 += 8;
          v11 += 8;
          if (v13)
          {

            v5 = v15;
            goto LABEL_12;
          }
        }

        v5 = v15;
      }
      v6 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }
LABEL_12:

}

void sub_189768800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates> const,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

void std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates> const,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__on_zero_shared(uint64_t a1)
{
  std::default_delete<zilch::MessageData>::operator()[abi:ne180100](a1 + 24, *(_QWORD *)(a1 + 24));
}

uint64_t std::__shared_ptr_pointer<std::vector<zilch::GeoCoordinates> *,std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::__shared_ptr_default_delete<std::vector<zilch::GeoCoordinates> const,std::vector<zilch::GeoCoordinates>>,std::allocator<std::vector<zilch::GeoCoordinates>>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void std::__shared_ptr_emplace<zilch::Message>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB560;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<zilch::Message>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E1BFB560;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D76437CLL);
}

void std::__shared_ptr_emplace<zilch::Message>::__on_zero_shared(uint64_t a1)
{
  zilch::Message::~Message((zilch::Message *)(a1 + 24));
}

unint64_t GEOPBOfflinePerformanceMetricsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v24;
  unint64_t v26;
  BOOL v27;
  int *v28;
  int v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  GEOPBOfflineServiceMetrics *v35;
  char v36;
  char v37;
  int v38;
  char v39;
  void *v40;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFEFFFFFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 68) & 1));
  while (1)
  {
    v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_70;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      if (v21 == -1 || v21 >= *(_QWORD *)(v3 + *v6))
        break;
      v22 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_70:
      if ((v12 & 1) != 0)
      {
        v37 = 1;
        goto LABEL_80;
      }
      if (v13)
      {
        while (1)
        {
          v38 = *v13++;
          v39 = 2;
          switch(v38)
          {
            case 0:
              goto LABEL_81;
            case 1:
              goto LABEL_78;
            case 2:
              v39 = 8;
              goto LABEL_78;
            case 3:
              v39 = 4;
              goto LABEL_78;
            case 4:
              v39 = 1;
              goto LABEL_78;
            case 5:
              v39 = 16;
LABEL_78:
              *(_BYTE *)(a1 + 68) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_81;
    }
    v26 = v19 >> 3;
    v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v28 = v13;
      do
      {
        v30 = *v28++;
        v29 = v30;
        v27 = v30 != 0;
        if (v30)
          v31 = v29 == (_DWORD)v26;
        else
          v31 = 1;
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27)
          goto LABEL_58;
        if ((*(_BYTE *)(a1 + 68) & 2) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 24;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_79;
        v36 = *(_BYTE *)(a1 + 68) << 6;
        goto LABEL_66;
      case 2:
        if (!v27)
          goto LABEL_58;
        if ((*(_BYTE *)(a1 + 68) & 8) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_79;
        v36 = 16 * *(_BYTE *)(a1 + 68);
        goto LABEL_66;
      case 3:
        if (!v27)
          goto LABEL_58;
        if ((*(_BYTE *)(a1 + 68) & 4) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 32;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_79;
        v36 = 32 * *(_BYTE *)(a1 + 68);
LABEL_66:
        v7 += v36 >> 7;
        goto LABEL_69;
      case 4:
        if (!v27)
          goto LABEL_58;
        if ((*(_BYTE *)(a1 + 68) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_79:
            v37 = 0;
            goto LABEL_80;
          }
          v7 -= *(_BYTE *)(a1 + 68) & 1;
        }
        else
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 16;
LABEL_52:
          v34 = *(void **)(a1 + v33);
          *(_QWORD *)(a1 + v33) = v32;

          --v7;
        }
        goto LABEL_69;
      case 5:
        if (!v27 || (*(_BYTE *)(a1 + 68) & 0x10) != 0)
        {
LABEL_58:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_79;
LABEL_69:
          if (!(v12 & 1 | (v7 != 0)))
            goto LABEL_70;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_79;
        v35 = objc_alloc_init(GEOPBOfflineServiceMetrics);
        if (GEOPBOfflineServiceMetricsReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPBOfflinePerformanceMetrics _addNoFlagsServiceMetrics:](a1, v35);

          v15 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_69;
        }

        v37 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_80:
        *(_BYTE *)(a1 + 68) |= 2u;
        *(_BYTE *)(a1 + 68) |= 8u;
        *(_BYTE *)(a1 + 68) |= 4u;
        *(_BYTE *)(a1 + 68) |= 1u;
        *(_BYTE *)(a1 + 68) |= 0x10u;
        if ((v37 & 1) != 0)
        {
LABEL_81:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_82;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_82:
            v40 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_79;
        goto LABEL_69;
    }
  }
}

void sub_1897692F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189769858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189769940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBOfflinePerformanceMetricsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[128];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = 0u;
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v1 = *(id *)(a1 + 48);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v6;
    while (1)
    {
      if (*(_QWORD *)v6 != v4)
        objc_enumerationMutation(v1);
      if (!--v3)
      {
        v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v5, v9, 16);
        if (!v3)
          break;
      }
    }
  }

}

unint64_t GEOPBOfflinePerformanceMetricsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflinePerformanceMetricsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBOfflinePerformanceMetricsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBOfflinePerformanceMetricsReadAllFrom_initialTag;
  Specified = GEOPBOfflinePerformanceMetricsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBOfflinePerformanceMetricsCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189769BAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189769E28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976A0A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976A76C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineRequestMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  _BOOL4 v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  GEOMapRegion *v63;
  char v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char v68;
  int v69;
  int v70;
  char v71;
  void *v72;
  _BOOL4 v74;
  BOOL v75;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 60) >> 5) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1)
          v15 = 0;
        else
          v15 = a3;
        v16 = v14 != 0;
        if (v14)
          v17 = 1;
        else
          v17 = v15 == 0;
        v75 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_108;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_26;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_26:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_108:
      if (v16)
      {
        v68 = 1;
        goto LABEL_119;
      }
      if (!v15)
        goto LABEL_120;
      while (1)
      {
        v70 = *v15++;
        v69 = v70;
        if (v70 == 4)
          break;
        if (v69 == 6)
        {
          v71 = 16;
LABEL_117:
          *(_BYTE *)(a1 + 60) |= v71;
        }
        else if (!v69)
        {
          goto LABEL_120;
        }
      }
      v71 = 32;
      goto LABEL_117;
    }
    v30 = v23 >> 3;
    v31 = v16;
    if (!v75)
    {
      v32 = v15;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v39 = *v18;
          v40 = *(_QWORD *)(v3 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0)
            goto LABEL_85;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_87;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_85:
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v38) = 0;
LABEL_87:
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_104;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v46 = *v18;
          v47 = *(_QWORD *)(v3 + v46);
          if (v47 == -1 || v47 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v47);
            *(_QWORD *)(v3 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              v27 = v44++ >= 9;
              if (v27)
              {
                v45 = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v45 = 0;
LABEL_91:
        *(_QWORD *)(a1 + 32) = v45;
        goto LABEL_104;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v49 = 0;
        v50 = 0;
        v51 = 0;
        *(_BYTE *)(a1 + 60) |= 4u;
        while (2)
        {
          v52 = *v18;
          v53 = *(_QWORD *)(v3 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v53);
            *(_QWORD *)(v3 + v52) = v53 + 1;
            v51 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v27 = v50++ >= 9;
              if (v27)
              {
                v51 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v51 = 0;
LABEL_95:
        v65 = v51 != 0;
        v66 = 56;
        goto LABEL_100;
      case 4:
        if (!v31)
          goto LABEL_82;
        if ((*(_BYTE *)(a1 + 60) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_125:
            v68 = 0;
            goto LABEL_127;
          }
          v9 += *(unsigned __int8 *)(a1 + 60) << 26 >> 31;
        }
        else
        {
          PBReaderReadString();
          v55 = objc_claimAutoreleasedReturnValue();
          v56 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v55;

          --v9;
        }
        goto LABEL_103;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_82;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_BYTE *)(a1 + 60) |= 8u;
        while (2)
        {
          v60 = *v18;
          v61 = *(_QWORD *)(v3 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v61);
            *(_QWORD *)(v3 + v60) = v61 + 1;
            v59 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              v27 = v58++ >= 9;
              if (v27)
              {
                v59 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v59 = 0;
LABEL_99:
        v65 = v59 != 0;
        v66 = 57;
LABEL_100:
        *(_BYTE *)(a1 + v66) = v65;
        goto LABEL_104;
      case 6:
        if (!v31 || (*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
LABEL_82:
          v64 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v64 & 1) == 0)
          {
LABEL_118:
            v68 = 0;
            goto LABEL_119;
          }
LABEL_104:
          if (v9)
            v67 = 1;
          else
            v67 = v16;
          if ((v67 & 1) == 0)
            goto LABEL_108;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_125;
        v74 = v16;
        v63 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v63, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPBOfflineRequestMetadata _addNoFlagsDownloadedRegions:](a1, v63);

          v16 = v74;
LABEL_103:
          v19 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_104;
        }

        v68 = 0;
        v16 = v74;
LABEL_127:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_119:
        *(_BYTE *)(a1 + 60) |= 0x20u;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        if ((v68 & 1) != 0)
        {
LABEL_120:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if (v16)
            goto LABEL_121;
        }
        else
        {
          v3 = 0;
          if (v16)
          {
LABEL_121:
            v72 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v42 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v42)
          goto LABEL_118;
        goto LABEL_104;
    }
  }
}

void sub_18976B0E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976BC90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPBOfflineRequestMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPBOfflineRequestMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineRequestMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBOfflineRequestMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBOfflineRequestMetadataReadAllFrom_initialTag;
  Specified = GEOPBOfflineRequestMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPBOfflineRequestMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18976BF1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineRequestMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBOfflineRequestMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976BF7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineRequestMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  _BOOL8 v37;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_59;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_59;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
              goto LABEL_54;
            v30 = v29 + 1;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v21 = v27++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_59;
          }
        case 4u:
          if (v14 == 2)
            goto LABEL_44;
          goto LABEL_62;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_62;
          v32 = 0;
          break;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_62;
          PBReaderRecallMark();
          continue;
        default:
LABEL_44:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v33 = *v2;
        v34 = *(_QWORD *)&a1[v33];
        if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
          break;
        v35 = v34 + 1;
        v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
        *(_QWORD *)&a1[v33] = v35;
        if (v36 < 0)
        {
          v21 = v32++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_59;
      }
LABEL_54:
      a1[*v4] = 1;
LABEL_59:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_18976C598(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineRequestMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 60) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18976CB98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976D1A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineResponseMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v28;
  unint64_t v30;
  _BOOL4 v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEOPBOfflinePerformanceMetrics *v38;
  void *v39;
  char v40;
  char v41;
  char v42;
  int v43;
  int v44;
  void *v45;
  BOOL v47;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        if (v14)
          v17 = 1;
        v47 = v17;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_60;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      if (v22++ >= 9)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        v41 = 1;
        goto LABEL_72;
      }
      if (!v16)
        goto LABEL_73;
      while (1)
      {
        v44 = *v16++;
        v43 = v44;
        if (v44 == 1)
          break;
        if (v43 == 2)
        {
          v42 = 1;
LABEL_66:
          *(_BYTE *)(a1 + 44) |= v42;
        }
        else if (!v43)
        {
          goto LABEL_73;
        }
      }
      v42 = 2;
      goto LABEL_66;
    }
    v30 = v23 >> 3;
    v31 = v15;
    if (!v47)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 2)
      break;
    if ((_DWORD)v30 == 1)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 44) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_71;
          v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v36;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_71;
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag())
      goto LABEL_71;
LABEL_56:
    if (v9)
      v40 = 1;
    else
      v40 = v15;
    if ((v40 & 1) == 0)
      goto LABEL_60;
  }
  if (!v31)
    goto LABEL_50;
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      v41 = 0;
      goto LABEL_72;
    }
    v9 -= *(_BYTE *)(a1 + 44) & 1;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v38 = objc_alloc_init(GEOPBOfflinePerformanceMetrics);
  if (GEOPBOfflinePerformanceMetricsReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    v39 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v38;

    --v9;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_56;
  }

  v41 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 2u;
  *(_BYTE *)(a1 + 44) |= 1u;
  if ((v41 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_74;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_74:
      v45 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_18976D73C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18976E0EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineResponseMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineResponseMetadataReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPBOfflineResponseMetadataReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPBOfflineResponseMetadataReadAllFrom_initialTag;
  Specified = GEOPBOfflineResponseMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    -[GEOPBOfflinePerformanceMetrics readAll:](*(_QWORD *)(a1 + 16), 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18976E290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineResponseMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOPBOfflineResponseMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18976E2F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineResponseMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  char v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  BOOL v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  int v50;
  int v51;
  _BOOL8 v52;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_107:
    v52 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v52;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    if (a1[*v4])
      goto LABEL_107;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
        break;
      v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v12 = v7++ >= 9;
      if (v12)
      {
        v8 = 0;
        v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v13 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v14 = v8 & 7;
    if (v13 || v14 == 4)
      goto LABEL_107;
    if ((v8 >> 3) != 2)
    {
      if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_110;
      goto LABEL_106;
    }
    if (v14 != 2 || !PBReaderPlaceMark())
      goto LABEL_110;
    objc_msgSend(a1, "position", 0, 0);
    objc_msgSend(a1, "length");
LABEL_25:
    if (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
      while (1)
      {
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 == -1 || v20 >= *(_QWORD *)&a1[*v3])
          break;
        v21 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v20);
        *(_QWORD *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0)
          goto LABEL_35;
        v16 += 7;
        v12 = v17++ >= 9;
        if (v12)
        {
          v18 = 0;
          v22 = a1[*v4];
          goto LABEL_37;
        }
      }
      a1[*v4] = 1;
LABEL_35:
      v22 = a1[*v4];
      if (a1[*v4])
        v18 = 0;
LABEL_37:
      v23 = v18 & 7;
      if (!v22 && v23 != 4)
        break;
    }
    v51 = a1[*v4];
    PBReaderRecallMark();
    if (v51)
      goto LABEL_110;
    PBReaderRecallMark();
LABEL_106:
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      goto LABEL_107;
  }
  switch((v18 >> 3))
  {
    case 1u:
      if (v23 != 2)
        goto LABEL_109;
      goto LABEL_49;
    case 2u:
      if (v23 == 2)
        goto LABEL_49;
      goto LABEL_109;
    case 3u:
      if (v23 == 2)
        goto LABEL_49;
      goto LABEL_109;
    case 4u:
      if (v23 == 2)
        goto LABEL_49;
      goto LABEL_109;
    case 5u:
      if (v23 != 2 || !PBReaderPlaceMark())
        goto LABEL_109;
      objc_msgSend(a1, "position");
      objc_msgSend(a1, "length");
      break;
    default:
LABEL_49:
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_109;
      goto LABEL_25;
  }
LABEL_54:
  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
  {
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v2;
      v29 = *(_QWORD *)&a1[v28];
      if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
        break;
      v30 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v29);
      *(_QWORD *)&a1[v28] = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0)
        goto LABEL_64;
      v25 += 7;
      v12 = v26++ >= 9;
      if (v12)
      {
        v27 = 0;
        v31 = a1[*v4];
        goto LABEL_66;
      }
    }
    a1[*v4] = 1;
LABEL_64:
    v31 = a1[*v4];
    if (a1[*v4])
      v27 = 0;
LABEL_66:
    if (v31 || (v27 & 7) == 4)
      break;
    v33 = v27 >> 3;
    if ((v27 >> 3) == 3)
    {
      if ((v27 & 7) != 0)
        goto LABEL_108;
      v45 = 0;
      while (1)
      {
        v46 = *v2;
        v47 = *(_QWORD *)&a1[v46];
        if (v47 == -1 || v47 >= *(_QWORD *)&a1[*v3])
          break;
        v48 = v47 + 1;
        v49 = *(char *)(*(_QWORD *)&a1[*v5] + v47);
        *(_QWORD *)&a1[v46] = v48;
        if (v49 < 0)
        {
          v39 = v45++ > 8;
          if (!v39)
            continue;
        }
        goto LABEL_54;
      }
LABEL_97:
      a1[*v4] = 1;
    }
    else
    {
      if ((_DWORD)v33 == 2)
      {
        if ((v27 & 7) != 0)
          goto LABEL_108;
        v40 = 0;
        while (1)
        {
          v41 = *v2;
          v42 = *(_QWORD *)&a1[v41];
          if (v42 == -1 || v42 >= *(_QWORD *)&a1[*v3])
            goto LABEL_97;
          v43 = v42 + 1;
          v44 = *(char *)(*(_QWORD *)&a1[*v5] + v42);
          *(_QWORD *)&a1[v41] = v43;
          if (v44 < 0)
          {
            v39 = v40++ > 8;
            if (!v39)
              continue;
          }
          goto LABEL_54;
        }
      }
      if ((_DWORD)v33 == 1)
      {
        if ((v27 & 7) != 0)
          goto LABEL_108;
        v34 = 0;
        while (1)
        {
          v35 = *v2;
          v36 = *(_QWORD *)&a1[v35];
          if (v36 == -1 || v36 >= *(_QWORD *)&a1[*v3])
            goto LABEL_97;
          v37 = v36 + 1;
          v38 = *(char *)(*(_QWORD *)&a1[*v5] + v36);
          *(_QWORD *)&a1[v35] = v37;
          if (v38 < 0)
          {
            v39 = v34++ > 8;
            if (!v39)
              continue;
          }
          goto LABEL_54;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_108:
        PBReaderRecallMark();
        goto LABEL_109;
      }
    }
  }
  v50 = a1[*v4];
  PBReaderRecallMark();
  if (!v50)
  {
    PBReaderRecallMark();
    goto LABEL_25;
  }
LABEL_109:
  PBReaderRecallMark();
LABEL_110:
  PBReaderRecallMark();
  return 0;
}

void sub_18976EA1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBOfflineResponseMetadataIsDirty(uint64_t a1)
{
  _BOOL8 v2;
  uint64_t v3;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 6) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
    return 0;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 64));
  v2 = (*(_BYTE *)(v3 + 68) & 0x3F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 64));
  return v2;
}

os_unfair_lock_s *GEOPBOfflineResponseMetadataIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPBOfflineResponseMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18976ED34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineServiceMetricsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        v17 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v24 = 0;
          v25 = 0;
          v26 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (1)
          {
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
              break;
            v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
            *(_QWORD *)&v3[v27] = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if ((v29 & 0x80) == 0)
              goto LABEL_50;
            v24 += 7;
            v14 = v25++ >= 9;
            if (v14)
            {
              LODWORD(v26) = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6])
            LODWORD(v26) = 0;
LABEL_52:
          *(_DWORD *)(a1 + 24) = v26;
        }
        else
        {
          if ((_DWORD)v17 == 2)
          {
            v30 = 0;
            v31 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 2u;
            while (1)
            {
              v32 = *v4;
              v33 = *(_QWORD *)&v3[v32];
              if (v33 == -1 || v33 >= *(_QWORD *)&v3[*v5])
                break;
              v34 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v33);
              *(_QWORD *)&v3[v32] = v33 + 1;
              v20 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0)
                goto LABEL_54;
              v30 += 7;
              v14 = v31++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6])
              v20 = 0;
LABEL_56:
            v35 = 16;
          }
          else
          {
            if ((_DWORD)v17 != 1)
            {
              if (!PBReaderSkipValueWithTag())
                goto LABEL_60;
              continue;
            }
            v18 = 0;
            v19 = 0;
            v20 = 0;
            *(_BYTE *)(a1 + 28) |= 1u;
            while (1)
            {
              v21 = *v4;
              v22 = *(_QWORD *)&v3[v21];
              if (v22 == -1 || v22 >= *(_QWORD *)&v3[*v5])
                break;
              v23 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
              *(_QWORD *)&v3[v21] = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if ((v23 & 0x80) == 0)
                goto LABEL_46;
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v20 = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6])
              v20 = 0;
LABEL_48:
            v35 = 8;
          }
          *(_QWORD *)(a1 + v35) = v20;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18976F624(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id MapsFeatureFlag_AddBlockListener(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[4];
  id v17;
  id v18;
  _QWORD *v19;
  _QWORD v20[3];
  char v21;
  _QWORD v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  v21 = 0;
  v21 = GEOIsFeatureActive(v5);
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __MapsFeatureFlag_AddBlockListener_block_invoke;
  v16[3] = &unk_1E1C206E8;
  v8 = v5;
  v17 = v8;
  v19 = v20;
  v9 = v7;
  v18 = v9;
  v10 = (void *)MEMORY[0x18D765024](v16);
  _GEOConfigAddBlockListenerForKey(MapsFeaturesConfig_RemoteFeatureFlags, (uint64_t)off_1EDF4AF38, v6, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  _GEOConfigAddBlockListenerForKey(GeoServicesConfig_ClientAuthFeatureFlagsStateInfo, (uint64_t)off_1EDF4DE08, v6, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsAuthClientFeatureFlagsLastUpdated, (uint64_t)off_1EDF4DE58, v6, v10);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = v11;
  v22[1] = v12;
  v22[2] = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v22, 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  _Block_object_dispose(v20, 8);
  return v14;
}

void sub_18976FABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void MapsFeatureFlag_RemoveBlockListener(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v9 = 0u;
    v10 = 0u;
    v7 = 0u;
    v8 = 0u;
    v2 = v1;
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v8;
      do
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v8 != v5)
            objc_enumerationMutation(v2);
          GEOConfigRemoveBlockListener(*(void **)(*((_QWORD *)&v7 + 1) + 8 * v6++));
        }
        while (v4 != v6);
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      }
      while (v4);
    }

  }
  else
  {
    GEOConfigRemoveBlockListener(v1);
  }

}

void MapsFeatureFlag_AddDelegateListener(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  uint64_t *v14;
  _QWORD v15[5];
  id v16;
  id location;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = __Block_byref_object_copy__95;
  v22 = __Block_byref_object_dispose__95;
  v23 = 0;
  objc_initWeak(&location, v7);
  v8 = MEMORY[0x1E0C809B0];
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __MapsFeatureFlag_AddDelegateListener_block_invoke;
  v15[3] = &unk_1E1C20710;
  objc_copyWeak(&v16, &location);
  v15[4] = &v18;
  MapsFeatureFlag_AddBlockListener(v5, v6, v15);
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = (void *)v19[5];
  v19[5] = v9;

  v12[0] = v8;
  v12[1] = 3221225472;
  v12[2] = __MapsFeatureFlag_AddDelegateListener_block_invoke_2;
  v12[3] = &unk_1E1C20738;
  v11 = v7;
  v13 = v11;
  v14 = &v18;
  withFFDelegateListeners(v12);

  objc_destroyWeak(&v16);
  objc_destroyWeak(&location);
  _Block_object_dispose(&v18, 8);

}

void sub_18976FDB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void withFFDelegateListeners(void *a1)
{
  uint64_t v1;
  void *v2;
  void (**v3)(void);

  v3 = a1;
  os_unfair_lock_lock(&_MergedGlobals_331);
  if (!qword_1ECDBCBA0)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "weakToStrongObjectsMapTable");
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)qword_1ECDBCBA0;
    qword_1ECDBCBA0 = v1;

  }
  v3[2]();
  os_unfair_lock_unlock(&_MergedGlobals_331);

}

void sub_18976FED0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(&_MergedGlobals_331);
  _Unwind_Resume(a1);
}

void MapsFeatureFlag_RemoveDelegateListenerForAllKeys(void *a1)
{
  id v1;
  id v2;
  _QWORD v3[4];
  id v4;

  v1 = a1;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __MapsFeatureFlag_RemoveDelegateListenerForAllKeys_block_invoke;
  v3[3] = &unk_1E1C0CFE8;
  v4 = v1;
  v2 = v1;
  withFFDelegateListeners(v3);

}

void MapsFeature_RemoveBlockListener(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v9 = 0u;
    v10 = 0u;
    v7 = 0u;
    v8 = 0u;
    v2 = v1;
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v8;
      do
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v8 != v5)
            objc_enumerationMutation(v2);
          GEOConfigRemoveBlockListener(*(void **)(*((_QWORD *)&v7 + 1) + 8 * v6++));
        }
        while (v4 != v6);
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      }
      while (v4);
    }

  }
  else
  {
    GEOConfigRemoveBlockListener(v1);
  }

}

void MapsFeature_AddDelegateListener(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  uint64_t *v15;
  _QWORD v16[5];
  id v17[3];
  id location;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;

  v7 = a3;
  v8 = a4;
  v19 = 0;
  v20 = &v19;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__95;
  v23 = __Block_byref_object_dispose__95;
  v24 = 0;
  objc_initWeak(&location, v8);
  v9 = MEMORY[0x1E0C809B0];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __MapsFeature_AddDelegateListener_block_invoke;
  v16[3] = &unk_1E1C20788;
  objc_copyWeak(v17, &location);
  v16[4] = &v19;
  v17[1] = a1;
  v17[2] = a2;
  MapsFeature_AddBlockListener((uint64_t)a1, a2, v7, v16);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)v20[5];
  v20[5] = v10;

  v13[0] = v9;
  v13[1] = 3221225472;
  v13[2] = __MapsFeature_AddDelegateListener_block_invoke_2;
  v13[3] = &unk_1E1C20738;
  v12 = v8;
  v14 = v12;
  v15 = &v19;
  withSFFDelegateListeners(v13);

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&v19, 8);

}

void sub_189770314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void withSFFDelegateListeners(void *a1)
{
  uint64_t v1;
  void *v2;
  void (**v3)(void);

  v3 = a1;
  os_unfair_lock_lock(&stru_1ECDBCB9C);
  if (!qword_1ECDBCBA8)
  {
    objc_msgSend(MEMORY[0x1E0CB3748], "weakToStrongObjectsMapTable");
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)qword_1ECDBCBA8;
    qword_1ECDBCBA8 = v1;

  }
  v3[2]();
  os_unfair_lock_unlock(&stru_1ECDBCB9C);

}

void sub_18977041C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(&stru_1ECDBCB9C);
  _Unwind_Resume(a1);
}

void MapsFeature_RemoveDelegateListenerForAllKeys(void *a1)
{
  id v1;
  id v2;
  _QWORD v3[4];
  id v4;

  v1 = a1;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __MapsFeature_RemoveDelegateListenerForAllKeys_block_invoke;
  v3[3] = &unk_1E1C0CFE8;
  v4 = v1;
  v2 = v1;
  withSFFDelegateListeners(v3);

}

uint64_t MapsFeature_IsAvailable(int a1, void *a2)
{
  uint64_t result;
  void *v4;
  BOOL v5;

  result = 0;
  switch(a1)
  {
    case 4:
      v4 = off_1EDF4AF48;
      v5 = (_DWORD)MapsFeaturesConfig_IsMuninEnabled == 4;
      goto LABEL_65;
    case 5:
      v4 = off_1EDF4AF58;
      v5 = (_DWORD)MapsFeaturesConfig_EnableEVRouting == 5;
      goto LABEL_65;
    case 6:
      v4 = off_1EDF4AF68;
      v5 = (_DWORD)MapsFeaturesConfig_ShouldEnableLagunaBeach == 6;
      goto LABEL_65;
    case 7:
      v4 = off_1EDF4AF78;
      v5 = (_DWORD)MapsFeaturesConfig_EnableAlberta == 7;
      goto LABEL_65;
    case 8:
      if ((_DWORD)MapsFeaturesConfig_Watermarking != 8 || a2 != off_1EDF4AF88)
        return 0;
      return GEOIsFeatureActive(CFSTR("MapsDisableWatermark")) ^ 1;
    case 9:
      v4 = off_1EDF4AF98;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleGlobe == 9;
      goto LABEL_65;
    case 10:
      v4 = off_1EDF4AFA8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleAdvancedWater == 10;
      goto LABEL_65;
    case 11:
      v4 = off_1EDF4AFB8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleAdvancedLighting == 11;
      goto LABEL_65;
    case 12:
      v4 = off_1EDF4AFC8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleRoundedBuildings == 12;
      goto LABEL_65;
    case 13:
      v4 = off_1EDF4AFD8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleColorizedBuildings == 13;
      goto LABEL_65;
    case 14:
      v4 = off_1EDF4AFE8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleBuildingHeights == 14;
      goto LABEL_65;
    case 15:
      v4 = off_1EDF4AFF8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleTerrain == 15;
      goto LABEL_65;
    case 16:
      v4 = off_1EDF4B008;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleStonehenge == 16;
      goto LABEL_65;
    case 17:
      v4 = off_1EDF4B018;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleSearch == 17;
      goto LABEL_65;
    case 18:
      v4 = off_1EDF4B028;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvillePuck == 18;
      goto LABEL_65;
    case 19:
      v4 = off_1EDF4B038;
      v5 = (_DWORD)MapsFeaturesConfig_EnableBakersfield == 19;
      goto LABEL_65;
    case 20:
      v4 = off_1EDF4B048;
      v5 = (_DWORD)MapsFeaturesConfig_Maps269Enabled == 20;
      goto LABEL_65;
    case 21:
      v4 = off_1EDF4B058;
      v5 = (_DWORD)MapsFeaturesConfig_PedestrianAREnabled == 21;
      goto LABEL_65;
    case 22:
      v4 = off_1EDF4B068;
      v5 = (_DWORD)MapsFeaturesConfig_Maps298Enabled == 22;
      goto LABEL_65;
    case 23:
      v4 = off_1EDF4B078;
      v5 = (_DWORD)MapsFeaturesConfig_Maps357RoutePlanningEnabled == 23;
      goto LABEL_65;
    case 24:
      v4 = off_1EDF4B088;
      v5 = (_DWORD)MapsFeaturesConfig_PlaceCardShowcase == 24;
      goto LABEL_65;
    case 25:
      v4 = off_1EDF4B098;
      v5 = (_DWORD)MapsFeaturesConfig_GuidesMediaIntegrationEnabled == 25;
      goto LABEL_65;
    case 26:
      v4 = off_1EDF4B0A8;
      v5 = (_DWORD)MapsFeaturesConfig_GuidesMediaIntegrationThirdPartyLinksEnabled == 26;
      goto LABEL_65;
    case 27:
      v4 = off_1EDF4B0B8;
      v5 = (_DWORD)MapsFeaturesConfig_ShelbyvilleMapKitEnabled == 27;
      goto LABEL_65;
    case 28:
      v4 = off_1EDF4B0C8;
      v5 = (_DWORD)MapsFeaturesConfig_DrivingMultiWaypointRoutesEnabled == 28;
      goto LABEL_65;
    case 29:
      v4 = off_1EDF4B0D8;
      v5 = (_DWORD)MapsFeaturesConfig_Maps420 == 29;
      goto LABEL_65;
    case 30:
      v4 = off_1EDF4B0E8;
      v5 = (_DWORD)MapsFeaturesConfig_TransitPayEnabled == 30;
      goto LABEL_65;
    case 31:
      v4 = off_1EDF4B0F8;
      v5 = (_DWORD)MapsFeaturesConfig_RAPSydneyEnabled == 31;
      goto LABEL_65;
    case 32:
      v4 = off_1EDF4B108;
      v5 = (_DWORD)MapsFeaturesConfig_PlaceCardWebViewEnabled == 32;
      goto LABEL_65;
    case 33:
      v4 = off_1EDF4B118;
      v5 = (_DWORD)MapsFeaturesConfig_SydneyARPEnabled == 33;
      goto LABEL_65;
    case 34:
      v4 = off_1EDF4B128;
      v5 = (_DWORD)MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled == 34;
      goto LABEL_65;
    case 35:
      v4 = off_1EDF4B138;
      v5 = (_DWORD)MapsFeaturesConfig_ElevatedPolygonsEnabled == 35;
      goto LABEL_65;
    case 36:
      v4 = off_1EDF4B148;
      v5 = (_DWORD)MapsFeaturesConfig_SearchResultsImpressions == 36;
      goto LABEL_65;
    case 37:
      v4 = off_1EDF4B158;
      v5 = (_DWORD)MapsFeaturesConfig_StandaloneWatchOffline == 37;
      goto LABEL_65;
    case 38:
      v4 = off_1EDF4B168;
      v5 = (_DWORD)MapsFeaturesConfig_RAPCommunityIDEnabled == 38;
      goto LABEL_65;
    case 39:
      v4 = off_1EDF4B178;
      v5 = (_DWORD)MapsFeaturesConfig_RealTimeEVCharger == 39;
      goto LABEL_65;
    case 40:
      v4 = off_1EDF4B188;
      v5 = (_DWORD)MapsFeaturesConfig_HikingWatchEnabled == 40;
      goto LABEL_65;
    case 41:
      v4 = off_1EDF4B198;
      v5 = (_DWORD)MapsFeaturesConfig_HikingiOSEnabled == 41;
      goto LABEL_65;
    case 42:
      v4 = off_1EDF4B1A8;
      v5 = (_DWORD)MapsFeaturesConfig_EVRoutingEnhancements == 42;
      goto LABEL_65;
    case 43:
      v4 = off_1EDF4B1B8;
      v5 = (_DWORD)MapsFeaturesConfig_MapsWally == 43;
      goto LABEL_65;
    case 44:
      v4 = off_1EDF4B1C8;
      v5 = (_DWORD)MapsFeaturesConfig_ARPCommunityIDEnabled == 44;
      goto LABEL_65;
    case 45:
      v4 = off_1EDF4B1D8;
      v5 = (_DWORD)MapsFeaturesConfig_SSAOEnabled == 45;
      goto LABEL_65;
    case 46:
      v4 = off_1EDF4B1E8;
      v5 = (_DWORD)MapsFeaturesConfig_OrderPickupEnabled == 46;
      goto LABEL_65;
    case 47:
      v4 = off_1EDF4B1F8;
      v5 = (_DWORD)MapsFeaturesConfig_SPRForMapSnapshots == 47;
      goto LABEL_65;
    case 48:
      v4 = off_1EDF4B208;
      v5 = (_DWORD)MapsFeaturesConfig_OptimizeSearchResultComponents == 48;
      goto LABEL_65;
    case 49:
      v4 = off_1EDF4B218;
      v5 = (_DWORD)MapsFeaturesConfig_SearchAndDiscovery == 49;
      goto LABEL_65;
    case 50:
      v4 = off_1EDF4B228;
      v5 = (_DWORD)MapsFeaturesConfig_MyPlacesFeatures == 50;
      goto LABEL_65;
    case 51:
      if ((_DWORD)MapsFeaturesConfig_Maps102 == 51 && a2 == off_1EDF4B238)
        return GEOIsFeatureActive(CFSTR("MapsFutureRelease"));
      else
        return 0;
    case 52:
      v4 = off_1EDF4B248;
      v5 = (_DWORD)MapsFeaturesConfig_FlexibleActionLinksEnabled == 52;
      goto LABEL_65;
    case 53:
      v4 = off_1EDF4B258;
      v5 = (_DWORD)MapsFeaturesConfig_FrenchClimateLaw == 53;
      goto LABEL_65;
    case 54:
      v4 = off_1EDF4B268;
      v5 = (_DWORD)MapsFeaturesConfig_VKMLayoutEnabled_SPR == 54;
      goto LABEL_65;
    case 55:
      v4 = off_1EDF4B278;
      v5 = (_DWORD)MapsFeaturesConfig_VKMLayoutEnabled_Navigation == 55;
      goto LABEL_65;
    case 56:
      v4 = off_1EDF4B288;
      v5 = (_DWORD)MapsFeaturesConfig_VKMLayoutEnabled_Flyover == 56;
      goto LABEL_65;
    case 58:
      v4 = off_1EDF4B2A8;
      v5 = (_DWORD)MapsFeaturesConfig_Maps182 == 58;
LABEL_65:
      result = v5 && a2 == v4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t MapsFeature_IsAvailable_Munin()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_EVRouting()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_LagunaBeach()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Alberta()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Watermarking()
{
  return GEOIsFeatureActive(CFSTR("MapsDisableWatermark")) ^ 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleGlobe()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleAdvancedWater()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleAdvancedLighting()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleRoundedBuildings()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleColorizedBuildings()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleBuildingHeights()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleTerrain()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleStonehenge()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleSearch()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvillePuck()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Bakersfield()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps269()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_PedestrianAR()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps357RoutePlanning()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_PlaceCardShowcase()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_GuidesMediaIntegration()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_GuidesMediaIntegrationThirdPartyLinks()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleMapKit()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_DrivingMultiWaypointRoutes()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps420()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_TransitPay()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_RAPSydney()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_PlaceCardWebView()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_SydneyARP()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VisualLocalizationCrowdsourcing()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_SearchResultsImpressions()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_StandaloneWatchOffline()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_RAPCommunityID()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_RealTimeEVCharger()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_HikingWatch()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_HikingiOS()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_EVRoutingEnhancements()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_MapsWally()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_ARPCommunityID()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_OrderPickup()
{
  return 1;
}

uint64_t MapKitFeature_IsAvailable_SPRForMapSnapshots()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_OptimizeSearchResultComponents()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_SearchAndDiscovery()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_MyPlacesFeatures()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps102()
{
  return GEOIsFeatureActive(CFSTR("MapsFutureRelease"));
}

uint64_t MapsFeature_IsAvailable_FlexibleActionLinks()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_FrenchClimateLaw()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VKMLayout_SPR()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VKMLayout_Navigation()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_VKMLayout_Flyover()
{
  return 1;
}

uint64_t MapsFeature_IsAvailable_Maps182()
{
  return 1;
}

uint64_t MapsFeature_IsEnabled_Munin()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_IsMuninEnabled, (uint64_t)off_1EDF4AF48);
}

uint64_t MapsFeature_IsEnabled_EVRouting()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_EnableEVRouting, (uint64_t)off_1EDF4AF58);
}

uint64_t MapsFeature_IsEnabled_LagunaBeach()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShouldEnableLagunaBeach, (uint64_t)off_1EDF4AF68);
}

uint64_t MapsFeature_IsEnabled_Alberta()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_EnableAlberta, (uint64_t)off_1EDF4AF78);
}

uint64_t MapsFeature_IsEnabled_Watermarking()
{
  uint64_t result;

  result = GEOConfigGetBOOL(MapsFeaturesConfig_Watermarking, (uint64_t)off_1EDF4AF88);
  if ((_DWORD)result)
    return GEOIsFeatureActive(CFSTR("MapsDisableWatermark")) ^ 1;
  return result;
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleStonehenge()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvilleStonehenge, (uint64_t)off_1EDF4B008);
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleSearch()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvilleSearch, (uint64_t)off_1EDF4B018);
}

uint64_t MapsFeature_IsEnabled_ShelbyvillePuck()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvillePuck, (uint64_t)off_1EDF4B028);
}

uint64_t MapsFeature_IsEnabled_Bakersfield()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_EnableBakersfield, (uint64_t)off_1EDF4B038);
}

uint64_t MapsFeature_IsEnabled_Maps269()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps269Enabled, (uint64_t)off_1EDF4B048);
}

uint64_t MapsFeature_IsEnabled_PedestrianAR()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_PedestrianAREnabled, (uint64_t)off_1EDF4B058);
}

uint64_t MapsFeature_IsEnabled_Maps357RoutePlanning()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps357RoutePlanningEnabled, (uint64_t)off_1EDF4B078);
}

uint64_t MapsFeature_IsEnabled_PlaceCardShowcase()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_PlaceCardShowcase, (uint64_t)off_1EDF4B088);
}

uint64_t MapsFeature_IsEnabled_GuidesMediaIntegration()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_GuidesMediaIntegrationEnabled, (uint64_t)off_1EDF4B098);
}

uint64_t MapsFeature_IsEnabled_GuidesMediaIntegrationThirdPartyLinks()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_GuidesMediaIntegrationThirdPartyLinksEnabled, (uint64_t)off_1EDF4B0A8);
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleMapKit()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ShelbyvilleMapKitEnabled, (uint64_t)off_1EDF4B0B8);
}

uint64_t MapsFeature_IsEnabled_DrivingMultiWaypointRoutes()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_DrivingMultiWaypointRoutesEnabled, (uint64_t)off_1EDF4B0C8);
}

uint64_t MapsFeature_IsEnabled_Maps420()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps420, (uint64_t)off_1EDF4B0D8);
}

uint64_t MapsFeature_IsEnabled_TransitPay()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_TransitPayEnabled, (uint64_t)off_1EDF4B0E8);
}

uint64_t MapsFeature_IsEnabled_RAPSydney()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_RAPSydneyEnabled, (uint64_t)off_1EDF4B0F8);
}

uint64_t MapsFeature_IsEnabled_PlaceCardWebView()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_PlaceCardWebViewEnabled, (uint64_t)off_1EDF4B108);
}

uint64_t MapsFeature_IsEnabled_SydneyARP()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SydneyARPEnabled, (uint64_t)off_1EDF4B118);
}

uint64_t MapsFeature_IsEnabled_VisualLocalizationCrowdsourcing()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled, (uint64_t)off_1EDF4B128);
}

uint64_t MapsFeature_IsEnabled_SearchResultsImpressions()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SearchResultsImpressions, (uint64_t)off_1EDF4B148);
}

uint64_t MapsFeature_IsEnabled_StandaloneWatchOffline()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_StandaloneWatchOffline, (uint64_t)off_1EDF4B158);
}

uint64_t MapsFeature_IsEnabled_RAPCommunityID()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_RAPCommunityIDEnabled, (uint64_t)off_1EDF4B168);
}

uint64_t MapsFeature_IsEnabled_RealTimeEVCharger()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_RealTimeEVCharger, (uint64_t)off_1EDF4B178);
}

uint64_t MapsFeature_IsEnabled_HikingWatch()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_HikingWatchEnabled, (uint64_t)off_1EDF4B188);
}

uint64_t MapsFeature_IsEnabled_HikingiOS()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_HikingiOSEnabled, (uint64_t)off_1EDF4B198);
}

uint64_t MapsFeature_IsEnabled_EVRoutingEnhancements()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_EVRoutingEnhancements, (uint64_t)off_1EDF4B1A8);
}

uint64_t MapsFeature_IsEnabled_MapsWally()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_MapsWally, (uint64_t)off_1EDF4B1B8);
}

uint64_t MapsFeature_IsEnabled_ARPCommunityID()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_ARPCommunityIDEnabled, (uint64_t)off_1EDF4B1C8);
}

uint64_t MapsFeature_IsEnabled_SSAO()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SSAOEnabled, (uint64_t)off_1EDF4B1D8);
}

uint64_t MapsFeature_IsEnabled_OrderPickup()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_OrderPickupEnabled, (uint64_t)off_1EDF4B1E8);
}

uint64_t MapsFeature_IsEnabled_OptimizeSearchResultComponents()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_OptimizeSearchResultComponents, (uint64_t)off_1EDF4B208);
}

uint64_t MapsFeature_IsEnabled_SearchAndDiscovery()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_SearchAndDiscovery, (uint64_t)off_1EDF4B218);
}

uint64_t MapsFeature_IsEnabled_MyPlacesFeatures()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_MyPlacesFeatures, (uint64_t)off_1EDF4B228);
}

uint64_t MapsFeature_IsEnabled_Maps102()
{
  uint64_t result;

  result = GEOConfigGetBOOL(MapsFeaturesConfig_Maps102, (uint64_t)off_1EDF4B238);
  if ((_DWORD)result)
    return GEOIsFeatureActive(CFSTR("MapsFutureRelease"));
  return result;
}

uint64_t MapsFeature_IsEnabled_FrenchClimateLaw()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_FrenchClimateLaw, (uint64_t)off_1EDF4B258);
}

uint64_t MapsFeature_IsEnabled_VKMLayout_SPR()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_VKMLayoutEnabled_SPR, (uint64_t)off_1EDF4B268);
}

uint64_t MapsFeature_IsEnabled_VKMLayout_Navigation()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_VKMLayoutEnabled_Navigation, (uint64_t)off_1EDF4B278);
}

uint64_t MapsFeature_IsEnabled_VKMLayout_Flyover()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_VKMLayoutEnabled_Flyover, (uint64_t)off_1EDF4B288);
}

uint64_t MapsFeature_IsEnabled_Maps182()
{
  return GEOConfigGetBOOL(MapsFeaturesConfig_Maps182, (uint64_t)off_1EDF4B2A8);
}

uint64_t MapsFeature_SetEnabled(int a1, void *a2, uint64_t a3)
{
  uint64_t result;
  int v8;
  int v10;
  BOOL v13;
  BOOL v61;

  result = 0;
  switch(a1)
  {
    case 4:
      if ((_DWORD)MapsFeaturesConfig_IsMuninEnabled != 4 || a2 != off_1EDF4AF48)
        return 0;
      v8 = 4;
      goto LABEL_329;
    case 5:
      if ((_DWORD)MapsFeaturesConfig_EnableEVRouting != 5 || a2 != off_1EDF4AF58)
        return 0;
      v10 = 5;
      goto LABEL_328;
    case 6:
      if ((_DWORD)MapsFeaturesConfig_ShouldEnableLagunaBeach != 6 || a2 != off_1EDF4AF68)
        return 0;
      v8 = 6;
      goto LABEL_329;
    case 7:
      if ((_DWORD)MapsFeaturesConfig_EnableAlberta != 7 || a2 != off_1EDF4AF78)
        return 0;
      v8 = 7;
      goto LABEL_329;
    case 8:
      v13 = (_DWORD)MapsFeaturesConfig_Watermarking == 8 && a2 == off_1EDF4AF88;
      if (!v13 || (GEOIsFeatureActive(CFSTR("MapsDisableWatermark")) & 1) != 0)
        return 0;
      v8 = 8;
      goto LABEL_329;
    case 9:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleGlobe != 9 || a2 != off_1EDF4AF98)
        return 0;
      v10 = 9;
      goto LABEL_328;
    case 10:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleAdvancedWater != 10 || a2 != off_1EDF4AFA8)
        return 0;
      v10 = 10;
      goto LABEL_328;
    case 11:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleAdvancedLighting != 11 || a2 != off_1EDF4AFB8)
        return 0;
      v10 = 11;
      goto LABEL_328;
    case 12:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleRoundedBuildings != 12 || a2 != off_1EDF4AFC8)
        return 0;
      v8 = 12;
      goto LABEL_329;
    case 13:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleColorizedBuildings != 13 || a2 != off_1EDF4AFD8)
        return 0;
      v10 = 13;
      goto LABEL_328;
    case 14:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleBuildingHeights != 14 || a2 != off_1EDF4AFE8)
        return 0;
      v8 = 14;
      goto LABEL_329;
    case 15:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleTerrain != 15 || a2 != off_1EDF4AFF8)
        return 0;
      v8 = 15;
      goto LABEL_329;
    case 16:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleStonehenge != 16 || a2 != off_1EDF4B008)
        return 0;
      v8 = 16;
      goto LABEL_329;
    case 17:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleSearch != 17 || a2 != off_1EDF4B018)
        return 0;
      v10 = 17;
      goto LABEL_328;
    case 18:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvillePuck != 18 || a2 != off_1EDF4B028)
        return 0;
      v10 = 18;
      goto LABEL_328;
    case 19:
      if ((_DWORD)MapsFeaturesConfig_EnableBakersfield != 19 || a2 != off_1EDF4B038)
        return 0;
      v10 = 19;
      goto LABEL_328;
    case 20:
      if ((_DWORD)MapsFeaturesConfig_Maps269Enabled != 20 || a2 != off_1EDF4B048)
        return 0;
      v10 = 20;
      goto LABEL_328;
    case 21:
      if ((_DWORD)MapsFeaturesConfig_PedestrianAREnabled != 21 || a2 != off_1EDF4B058)
        return 0;
      v10 = 21;
      goto LABEL_328;
    case 22:
      if ((_DWORD)MapsFeaturesConfig_Maps298Enabled != 22 || a2 != off_1EDF4B068)
        return 0;
      v10 = 22;
      goto LABEL_328;
    case 23:
      if ((_DWORD)MapsFeaturesConfig_Maps357RoutePlanningEnabled != 23 || a2 != off_1EDF4B078)
        return 0;
      v10 = 23;
      goto LABEL_328;
    case 24:
      if ((_DWORD)MapsFeaturesConfig_PlaceCardShowcase != 24 || a2 != off_1EDF4B088)
        return 0;
      v8 = 24;
      goto LABEL_329;
    case 25:
      if ((_DWORD)MapsFeaturesConfig_GuidesMediaIntegrationEnabled != 25 || a2 != off_1EDF4B098)
        return 0;
      v10 = 25;
      goto LABEL_328;
    case 26:
      if ((_DWORD)MapsFeaturesConfig_GuidesMediaIntegrationThirdPartyLinksEnabled != 26 || a2 != off_1EDF4B0A8)
        return 0;
      v10 = 26;
      goto LABEL_328;
    case 27:
      if ((_DWORD)MapsFeaturesConfig_ShelbyvilleMapKitEnabled != 27 || a2 != off_1EDF4B0B8)
        return 0;
      v10 = 27;
      goto LABEL_328;
    case 28:
      if ((_DWORD)MapsFeaturesConfig_DrivingMultiWaypointRoutesEnabled != 28 || a2 != off_1EDF4B0C8)
        return 0;
      v8 = 28;
      goto LABEL_329;
    case 29:
      if ((_DWORD)MapsFeaturesConfig_Maps420 != 29 || a2 != off_1EDF4B0D8)
        return 0;
      v10 = 29;
      goto LABEL_328;
    case 30:
      if ((_DWORD)MapsFeaturesConfig_TransitPayEnabled != 30 || a2 != off_1EDF4B0E8)
        return 0;
      v8 = 30;
      goto LABEL_329;
    case 31:
      if ((_DWORD)MapsFeaturesConfig_RAPSydneyEnabled != 31 || a2 != off_1EDF4B0F8)
        return 0;
      v8 = 31;
      goto LABEL_329;
    case 32:
      if ((_DWORD)MapsFeaturesConfig_PlaceCardWebViewEnabled != 32 || a2 != off_1EDF4B108)
        return 0;
      v8 = 32;
      goto LABEL_329;
    case 33:
      if ((_DWORD)MapsFeaturesConfig_SydneyARPEnabled != 33 || a2 != off_1EDF4B118)
        return 0;
      v10 = 33;
      goto LABEL_328;
    case 34:
      if ((_DWORD)MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled != 34 || a2 != off_1EDF4B128)
        return 0;
      v10 = 34;
      goto LABEL_328;
    case 35:
      if ((_DWORD)MapsFeaturesConfig_ElevatedPolygonsEnabled != 35 || a2 != off_1EDF4B138)
        return 0;
      v10 = 35;
      goto LABEL_328;
    case 36:
      if ((_DWORD)MapsFeaturesConfig_SearchResultsImpressions != 36 || a2 != off_1EDF4B148)
        return 0;
      v10 = 36;
      goto LABEL_328;
    case 37:
      if ((_DWORD)MapsFeaturesConfig_StandaloneWatchOffline != 37 || a2 != off_1EDF4B158)
        return 0;
      v10 = 37;
      goto LABEL_328;
    case 38:
      if ((_DWORD)MapsFeaturesConfig_RAPCommunityIDEnabled != 38 || a2 != off_1EDF4B168)
        return 0;
      v10 = 38;
      goto LABEL_328;
    case 39:
      if ((_DWORD)MapsFeaturesConfig_RealTimeEVCharger != 39 || a2 != off_1EDF4B178)
        return 0;
      v10 = 39;
      goto LABEL_328;
    case 40:
      if ((_DWORD)MapsFeaturesConfig_HikingWatchEnabled != 40 || a2 != off_1EDF4B188)
        return 0;
      v10 = 40;
      goto LABEL_328;
    case 41:
      if ((_DWORD)MapsFeaturesConfig_HikingiOSEnabled != 41 || a2 != off_1EDF4B198)
        return 0;
      v10 = 41;
      goto LABEL_328;
    case 42:
      if ((_DWORD)MapsFeaturesConfig_EVRoutingEnhancements != 42 || a2 != off_1EDF4B1A8)
        return 0;
      v10 = 42;
      goto LABEL_328;
    case 43:
      if ((_DWORD)MapsFeaturesConfig_MapsWally != 43 || a2 != off_1EDF4B1B8)
        return 0;
      v10 = 43;
      goto LABEL_328;
    case 44:
      if ((_DWORD)MapsFeaturesConfig_ARPCommunityIDEnabled != 44 || a2 != off_1EDF4B1C8)
        return 0;
      v10 = 44;
      goto LABEL_328;
    case 45:
      if ((_DWORD)MapsFeaturesConfig_SSAOEnabled != 45 || a2 != off_1EDF4B1D8)
        return 0;
      v10 = 45;
      goto LABEL_328;
    case 46:
      if ((_DWORD)MapsFeaturesConfig_OrderPickupEnabled != 46 || a2 != off_1EDF4B1E8)
        return 0;
      v10 = 46;
      goto LABEL_328;
    case 47:
      if ((_DWORD)MapsFeaturesConfig_SPRForMapSnapshots != 47 || a2 != off_1EDF4B1F8)
        return 0;
      v10 = 47;
      goto LABEL_328;
    case 48:
      if ((_DWORD)MapsFeaturesConfig_OptimizeSearchResultComponents != 48 || a2 != off_1EDF4B208)
        return 0;
      v8 = 48;
      goto LABEL_329;
    case 49:
      if ((_DWORD)MapsFeaturesConfig_SearchAndDiscovery != 49 || a2 != off_1EDF4B218)
        return 0;
      v10 = 49;
      goto LABEL_328;
    case 50:
      if ((_DWORD)MapsFeaturesConfig_MyPlacesFeatures != 50 || a2 != off_1EDF4B228)
        return 0;
      v10 = 50;
      goto LABEL_328;
    case 51:
      v61 = (_DWORD)MapsFeaturesConfig_Maps102 == 51 && a2 == off_1EDF4B238;
      if (!v61 || (GEOIsFeatureActive(CFSTR("MapsFutureRelease")) & 1) == 0)
        return 0;
      v10 = 51;
      goto LABEL_328;
    case 52:
      if ((_DWORD)MapsFeaturesConfig_FlexibleActionLinksEnabled != 52 || a2 != off_1EDF4B248)
        return 0;
      v10 = 52;
      goto LABEL_328;
    case 53:
      if ((_DWORD)MapsFeaturesConfig_FrenchClimateLaw != 53 || a2 != off_1EDF4B258)
        return 0;
      v10 = 53;
      goto LABEL_328;
    case 54:
      if ((_DWORD)MapsFeaturesConfig_VKMLayoutEnabled_SPR != 54 || a2 != off_1EDF4B268)
        return 0;
      v10 = 54;
      goto LABEL_328;
    case 55:
      if ((_DWORD)MapsFeaturesConfig_VKMLayoutEnabled_Navigation != 55 || a2 != off_1EDF4B278)
        return 0;
      v10 = 55;
      goto LABEL_328;
    case 56:
      if ((_DWORD)MapsFeaturesConfig_VKMLayoutEnabled_Flyover != 56 || a2 != off_1EDF4B288)
        return 0;
      v8 = 56;
      goto LABEL_329;
    case 58:
      if ((_DWORD)MapsFeaturesConfig_Maps182 != 58 || a2 != off_1EDF4B2A8)
        return 0;
      v10 = 58;
LABEL_328:
      v8 = v10;
LABEL_329:
      GEOConfigSetBOOL(v8, (uint64_t)a2);
      return a3;
    default:
      return result;
  }
}

id GEOGetGEOComposedStringLog_1()
{
  if (qword_1EDF4FBA8 != -1)
    dispatch_once(&qword_1EDF4FBA8, &__block_literal_global_197);
  return (id)_MergedGlobals_5;
}

void _geoTransitLineItemsForPlaceDatas(void *a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = ___geoTransitLineItemsForPlaceDatas_block_invoke;
    v5[3] = &unk_1E1C021B8;
    v6 = v3;
    _attributedGeoMapItemsForPlaceDatasWithHandler(5, a1, 0, 0, 0, 0, v5);

  }
}

void ___geoTransitLineItemsForPlaceDatas_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;

  v9 = a2;
  v5 = a3;
  v6 = objc_msgSend(v9, "count");
  if (v5 || !v6)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v9, "count"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = ___geoTransitLineItemsForPlaceDatas_block_invoke_2;
    v10[3] = &unk_1E1C207E0;
    v11 = v7;
    v8 = v7;
    objc_msgSend(v9, "enumerateObjectsUsingBlock:", v10);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

void ___geoTransitLineItemsForPlaceDatas_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  _GEOPlaceDataTransitLineItem *v4;
  _GEOPlaceDataTransitLineItem *v5;

  v3 = a2;
  v5 = -[_GEOPlaceDataTransitLineItem initWithMapItem:]([_GEOPlaceDataTransitLineItem alloc], "initWithMapItem:", v3);

  v4 = v5;
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
    v4 = v5;
  }

}

void sub_18977604C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void geo::MapNodeRoad::~MapNodeRoad(void **this)
{
  *this = off_1E1BF6930;
  GEOVectorTileRelease(this[3]);

}

{
  *this = off_1E1BF6930;
  GEOVectorTileRelease(this[3]);

  JUMPOUT(0x18D76437CLL);
}

uint64_t geo::MapNodeRoad::toString(geo::MapNodeRoad *this)
{
  _QWORD *v1;
  _QWORD v3[11];
  char v4;
  uint64_t v5;

  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v3);
  v1 = (_QWORD *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)", ", 2);
  std::ostream::operator<<();
  std::stringbuf::str();
  v3[0] = *MEMORY[0x1E0DE4F60];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(v3[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 24);
  v3[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v4 < 0)
    operator delete((void *)v3[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D764310](&v5);
}

void sub_18977903C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::ostringstream::~ostringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

GEOMapEdgeRoadConnectionFinder *geo::MapNodeRoad::findEdgesOut(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  GEOMapEdgeRoadConnectionFinder *v10;
  GEOMapEdgeRoadConnectionFinder *v11;
  GEOMapEdgeRoadConnectionFinder *v12;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = -[GEOMapEdgeConnectionFinder initWithMap:tile:junction:coordinate:]([GEOMapEdgeRoadConnectionFinder alloc], "initWithMap:tile:junction:coordinate:", v7, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(double *)(a1 + 8), *(double *)(a1 + 16));
  -[GEOMapRequest setCompletionHandler:](v10, "setCompletionHandler:", v9);
  -[GEOMapEdgeConnectionFinder findConnectionsOut:](v10, "findConnectionsOut:", v8);
  if (-[GEOMapRequest isFinished](v10, "isFinished"))
    v11 = 0;
  else
    v11 = v10;
  v12 = v11;

  return v12;
}

void sub_1897790FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

GEOMapEdgeRoadConnectionFinder *geo::MapNodeRoad::findEdgesIn(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  GEOMapEdgeRoadConnectionFinder *v10;
  GEOMapEdgeRoadConnectionFinder *v11;
  GEOMapEdgeRoadConnectionFinder *v12;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = -[GEOMapEdgeConnectionFinder initWithMap:tile:junction:coordinate:]([GEOMapEdgeRoadConnectionFinder alloc], "initWithMap:tile:junction:coordinate:", v7, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(double *)(a1 + 8), *(double *)(a1 + 16));
  -[GEOMapRequest setCompletionHandler:](v10, "setCompletionHandler:", v9);
  -[GEOMapEdgeConnectionFinder findConnectionsIn:](v10, "findConnectionsIn:", v8);
  if (-[GEOMapRequest isFinished](v10, "isFinished"))
    v11 = 0;
  else
    v11 = v10;
  v12 = v11;

  return v12;
}

void sub_1897791CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t geo::MapNodeRoad::type(geo::MapNodeRoad *this)
{
  return 0;
}

id _buildCNPostalAddressFromStructuredAddress(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  NSObject *v23;
  uint8_t buf[4];
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (ContactsLibraryCore())
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s forbids %s to be nil"), "CNPostalAddress *_buildCNPostalAddressFromStructuredAddress(GEOStructuredAddress *__strong)", "structuredAddress");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v1)
    {

      v4 = objc_alloc_init((Class)getCNMutablePostalAddressClass());
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s forbids %s to be nil"), "CNPostalAddress *_buildCNPostalAddressFromStructuredAddress(GEOStructuredAddress *__strong)", "cnpostal");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      if (v4)
      {

        objc_msgSend(v1, "countryCode");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v7, "length"))
          objc_msgSend(v4, "setISOCountryCode:", v7);
        objc_msgSend(v1, "fullThoroughfare");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v8, "length"))
        {
          objc_msgSend(v1, "thoroughfare");
          v9 = objc_claimAutoreleasedReturnValue();

          v8 = (void *)v9;
        }
        if (!objc_msgSend(v8, "length"))
        {
          objc_msgSend(v7, "lowercaseString");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v10, "isEqualToString:", CFSTR("jp"));

          if (v11)
          {
            objc_msgSend(v1, "subLocality");
            v12 = objc_claimAutoreleasedReturnValue();

            v8 = (void *)v12;
          }
        }
        if (objc_msgSend(v8, "length"))
          objc_msgSend(v4, "setStreet:", v8);
        objc_msgSend(v1, "locality");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v13, "length"))
          objc_msgSend(v4, "setCity:", v13);
        objc_msgSend(v1, "administrativeAreaCode");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v14, "length"))
        {
          objc_msgSend(v1, "administrativeArea");
          v15 = objc_claimAutoreleasedReturnValue();

          v14 = (void *)v15;
        }
        if (objc_msgSend(v14, "length"))
          objc_msgSend(v4, "setState:", v14);
        objc_msgSend(v1, "postCodeFull");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v16, "length"))
        {
          objc_msgSend(v1, "postCode");
          v17 = objc_claimAutoreleasedReturnValue();

          v16 = (void *)v17;
        }
        if (objc_msgSend(v16, "length"))
          objc_msgSend(v4, "setPostalCode:", v16);
        objc_msgSend(v1, "subAdministrativeArea");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v18, "length"))
          objc_msgSend(v4, "setSubAdministrativeArea:", v18);
        objc_msgSend(v1, "subLocality");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v19, "length"))
          objc_msgSend(v4, "setSubLocality:", v19);
        objc_msgSend(v1, "country");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v20, "length"))
          objc_msgSend(v4, "setCountry:", v20);
        v3 = v4;

        v21 = v3;
        goto LABEL_38;
      }
      GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        v26 = v6;
        _os_log_impl(&dword_1885A9000, v23, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
      }

      v3 = 0;
    }
    else
    {
      GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        v26 = v3;
        _os_log_impl(&dword_1885A9000, v22, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
      }

    }
    v21 = 0;
LABEL_38:

    goto LABEL_39;
  }
  v21 = 0;
LABEL_39:

  return v21;
}

void sub_1897795D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _Unwind_Exception *exception_object)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_189779684()
{
  JUMPOUT(0x18977967CLL);
}

id getCNPostalAddressCountryKey(void)
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getCNPostalAddressCountryKeySymbolLoc(void)::ptr;
  v7 = getCNPostalAddressCountryKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressCountryKeySymbolLoc(void)::ptr)
  {
    v1 = (void *)ContactsLibrary();
    v0 = (id *)dlsym(v1, "CNPostalAddressCountryKey");
    v5[3] = (uint64_t)v0;
    getCNPostalAddressCountryKeySymbolLoc(void)::ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getCNPostalAddressISOCountryCodeKey(void)
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr;
  v7 = getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr)
  {
    v1 = (void *)ContactsLibrary();
    v0 = (id *)dlsym(v1, "CNPostalAddressISOCountryCodeKey");
    v5[3] = (uint64_t)v0;
    getCNPostalAddressISOCountryCodeKeySymbolLoc(void)::ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getCNPostalAddressStateKey(void)
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getCNPostalAddressStateKeySymbolLoc(void)::ptr;
  v7 = getCNPostalAddressStateKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressStateKeySymbolLoc(void)::ptr)
  {
    v1 = (void *)ContactsLibrary();
    v0 = (id *)dlsym(v1, "CNPostalAddressStateKey");
    v5[3] = (uint64_t)v0;
    getCNPostalAddressStateKeySymbolLoc(void)::ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getCNPostalAddressCityKey(void)
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getCNPostalAddressCityKeySymbolLoc(void)::ptr;
  v7 = getCNPostalAddressCityKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressCityKeySymbolLoc(void)::ptr)
  {
    v1 = (void *)ContactsLibrary();
    v0 = (id *)dlsym(v1, "CNPostalAddressCityKey");
    v5[3] = (uint64_t)v0;
    getCNPostalAddressCityKeySymbolLoc(void)::ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getCNPostalAddressPostalCodeKey(void)
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr;
  v7 = getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr;
  if (!getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr)
  {
    v1 = (void *)ContactsLibrary();
    v0 = (id *)dlsym(v1, "CNPostalAddressPostalCodeKey");
    v5[3] = (uint64_t)v0;
    getCNPostalAddressPostalCodeKeySymbolLoc(void)::ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    dlerror();
    v3 = (_Unwind_Exception *)abort_report_np();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id _buildStructuredAddressFromCNPostalAddress(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  objc_msgSend(a1, "dictionaryRepresentation");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v1, "mutableCopy");

  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 12);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___buildStructuredAddressFromCNPostalAddress_block_invoke;
  v7[3] = &unk_1E1C20918;
  v4 = v3;
  v8 = v4;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v7);
  objc_msgSend(v2, "removeObjectsForKeys:", v4);
  _buildStructuredAddressFromAnyAddressDictionary(v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_189779A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void ___buildStructuredAddressFromCNPostalAddress_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && !objc_msgSend(v5, "length")
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && !objc_msgSend(v5, "count")
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && !objc_msgSend(v5, "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
  }

}

void sub_189779B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id _buildMissingFormattedAddressStringFromCNPostalAddress(CNPostalAddress *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v15;
  void *v16;
  CNPostalAddress *v17;
  id obj;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v17 = a1;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s forbids %s to be nil"), "NSString *_buildMissingFormattedAddressStringFromCNPostalAddress(CNPostalAddress *__strong)", "cnPostalAddress");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v17)
  {

    objc_msgSend(getCNPostalAddressFormatterClass(), "stringFromPostalAddress:style:", v17, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "componentsSeparatedByString:", CFSTR("\n"));
    v15 = (id)objc_claimAutoreleasedReturnValue();
    v19 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    obj = v15;
    v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, buf, 16);
    if (v3)
    {
      v4 = *(_QWORD *)v21;
      do
      {
        for (i = 0; i != v3; ++i)
        {
          if (*(_QWORD *)v21 != v4)
            objc_enumerationMutation(obj);
          v6 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
          objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceCharacterSet");
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "componentsSeparatedByCharactersInSet:", v7);
          v8 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(MEMORY[0x1E0CB3880], "predicateWithFormat:", CFSTR("SELF != ''"));
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "filteredArrayUsingPredicate:", v9);
          v10 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v10, "componentsJoinedByString:", CFSTR(" "));
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v11, "length"))
            objc_msgSend(v19, "addObject:", v11);

        }
        v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, buf, 16);
      }
      while (v3);
    }

    objc_msgSend(v19, "componentsJoinedByString:", CFSTR("\n"));
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      v25 = v2;
      _os_log_impl(&dword_1885A9000, v13, OS_LOG_TYPE_ERROR, "%{public}@", buf, 0xCu);
    }

    v12 = 0;
  }

  return v12;
}

void sub_189779E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void _AddressObjectPtrFromLegacy(GEOAddress *a1, GEOLocalizedString *a2, GEOPDLocalizedSpokenStructuredAddress *a3, NSString *a4, NSString *a5, NSString *a6, NSString *a7, NSString *a8, void *a9)
{
  GEOLocalizedString *v16;
  GEOPDLocalizedSpokenStructuredAddress *v17;
  NSString *v18;
  NSString *v19;
  NSString *v20;
  NSString *v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  addr_obj::Logger *v29;
  NSString *v30;
  void *v31[2];
  uint64_t v32;
  void *v33[2];
  char v34;
  void *v35[2];
  char v36;
  std::string v37;
  void *v38[2];
  uint64_t v39;
  void *__p[2];
  char v41;
  void *v42[2];
  char v43;
  uint8_t buf[16];
  uint64_t v45;
  void *v46;
  char v47;
  void *v48;
  char v49;
  std::string v50;
  __int128 v51;
  uint64_t v52;
  std::string v53;
  __int128 v54;
  uint64_t v55;

  v16 = a2;
  v17 = a3;
  v18 = a4;
  v19 = a5;
  v20 = a6;
  v30 = a7;
  v21 = a8;
  v22 = a9;
  v54 = 0uLL;
  v55 = 0;
  if (v16)
  {
    -[GEOLocalizedString data](v16, "data");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSData cppData](buf, v23);
    if (SHIBYTE(v55) < 0)
      operator delete((void *)v54);
    v54 = *(_OWORD *)buf;
    v55 = v45;
    HIBYTE(v45) = 0;
    buf[0] = 0;

    v24 = HIBYTE(v55);
    if (v55 < 0)
      v24 = *((_QWORD *)&v54 + 1);
    if (v24)
    {
      addr_obj::SerializedAddress::SerializedAddress(&v53, &v54);
      v51 = 0uLL;
      v52 = 0;
      if (v17 && -[GEOPDLocalizedSpokenStructuredAddress hasStringValue](v17, "hasStringValue"))
      {
        -[GEOPDLocalizedSpokenStructuredAddress stringValue](v17, "stringValue");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSString stdString](buf, v25);
        if (SHIBYTE(v52) < 0)
          operator delete((void *)v51);
        v51 = *(_OWORD *)buf;
        v52 = v45;
        HIBYTE(v45) = 0;
        buf[0] = 0;

      }
      if (SHIBYTE(v55) < 0)
      {
        *(_BYTE *)v54 = 0;
        *((_QWORD *)&v54 + 1) = 0;
        if (!v18)
        {
LABEL_23:
          addr_obj::SerializedAddress::SerializedAddress(&v50, &v54);
          -[NSString stdString](v33, v30);
          -[NSString stdString](v42, v21);
          -[NSString stdString](__p, v22);
          addr_obj::Localization::Localization(buf, v33, v42, __p);
          if (v41 < 0)
            operator delete(__p[0]);
          if (v43 < 0)
            operator delete(v42[0]);
          if (v34 < 0)
            operator delete(v33[0]);
          if (_MergedGlobals_332 != -1)
            dispatch_once(&_MergedGlobals_332, &__block_literal_global_200);
          v29 = (addr_obj::Logger *)qword_1ECDBCBB8;
          if (v19)
            -[NSString stdString](v42, v19);
          else
            std::string::basic_string[abi:ne180100]<0>(v42, "");
          if (v20)
            -[NSString stdString](__p, v20);
          else
            std::string::basic_string[abi:ne180100]<0>(__p, "");
          v38[0] = 0;
          v38[1] = 0;
          v39 = 0;
          std::string::basic_string[abi:ne180100]<0>(v35, "");
          addr_obj::SerializedAddress::SerializedAddress(&v37, (__int128 *)v35);
          addr_obj::VenueInfo::VenueInfo((addr_obj::VenueInfo *)v33);
          v31[0] = 0;
          v31[1] = 0;
          v32 = 0;
          addr_obj::AddressObjectFactory::fromLegacy(v29, (addr_obj::Localization *)buf, (uint64_t)v42, (unsigned __int8 *)&v53, (uint64_t)__p, (uint64_t)&v51, (unsigned __int8 *)&v50, (uint64_t)v38, a1, (unsigned __int8 *)&v37, (__int128 **)v33, (uint64_t)v31, 0);
          if (SHIBYTE(v32) < 0)
            operator delete(v31[0]);
          addr_obj::VenueInfo::~VenueInfo((void ***)v33);
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v37.__r_.__value_.__l.__data_);
          if (v36 < 0)
            operator delete(v35[0]);
          if (SHIBYTE(v39) < 0)
            operator delete(v38[0]);
          if (v41 < 0)
            operator delete(__p[0]);
          if (v43 < 0)
            operator delete(v42[0]);
          if (v49 < 0)
            operator delete(v48);
          if (v47 < 0)
            operator delete(v46);
          if (SHIBYTE(v45) < 0)
            operator delete(*(void **)buf);
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v50.__r_.__value_.__l.__data_);
          if (SHIBYTE(v52) < 0)
            operator delete((void *)v51);
          if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v53.__r_.__value_.__l.__data_);
          goto LABEL_61;
        }
      }
      else
      {
        LOBYTE(v54) = 0;
        HIBYTE(v55) = 0;
        if (!v18)
          goto LABEL_23;
      }
      -[GEOPDLocalizedSpokenStructuredAddress _readSpokenStructuredAddress]((uint64_t)v18);
      if (v18[4])
      {
        -[GEOPDLocalizedSpokenStructuredAddress spokenStructuredAddress](v18);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "data");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSData cppData](buf, v28);
        if (SHIBYTE(v55) < 0)
          operator delete((void *)v54);
        v54 = *(_OWORD *)buf;
        v55 = v45;
        HIBYTE(v45) = 0;
        buf[0] = 0;

      }
      goto LABEL_23;
    }
  }
  GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
  v26 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_1885A9000, v26, OS_LOG_TYPE_DEBUG, "Empty localized address, can't create AddressObject", buf, 2u);
  }

  a1->super.super.isa = 0;
  a1->_reader = 0;
LABEL_61:
  if (SHIBYTE(v55) < 0)
    operator delete((void *)v54);

}

void sub_18977A404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _Unwind_Exception *exception_object, void *a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,char a58)
{
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;

  if (*(char *)(v66 - 137) < 0)
    operator delete(*(void **)(v66 - 160));
  if (*(char *)(v66 - 113) < 0)
    operator delete(*(void **)(v66 - 136));
  if (*(char *)(v66 - 89) < 0)
    operator delete(*(void **)(v66 - 112));

  _Unwind_Resume(a1);
}

void _AddressObjectPtrFromCNPostalAddress(CNPostalAddress *a1, NSString *a2, NSString *a3, NSString *a4, void *a5)
{
  CNPostalAddress *v8;
  void *v9;
  unint64_t v10;
  addr_obj::Logger *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  id v22;
  NSString *v23;
  NSString *v24;
  void *v25[2];
  char v26;
  void *v27[2];
  char v28;
  void *v29[2];
  char v30;
  void *v31[2];
  char v32;
  void *v33[2];
  char v34;
  void *__p[2];
  char v36;
  void *v37[2];
  char v38;
  void *v39[2];
  char v40;
  uint8_t buf[8];
  char v42;
  void *v43;
  char v44;
  void *v45;
  char v46;
  void *v47[2];
  unsigned __int8 v48;

  v8 = a2;
  v24 = a3;
  v23 = a4;
  v22 = a5;
  _buildMissingFormattedAddressStringFromCNPostalAddress(v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSString stdString](v47, v9);

  v10 = v48;
  if ((v48 & 0x80u) != 0)
    v10 = (unint64_t)v47[1];
  if (v10)
  {
    -[NSString stdString](v39, v24);
    -[NSString stdString](v37, v23);
    -[NSString stdString](__p, v22);
    addr_obj::Localization::Localization(buf, v39, v37, __p);
    if (v36 < 0)
      operator delete(__p[0]);
    if (v38 < 0)
      operator delete(v37[0]);
    if (v40 < 0)
      operator delete(v39[0]);
    if (_MergedGlobals_332 != -1)
      dispatch_once(&_MergedGlobals_332, &__block_literal_global_200);
    v11 = (addr_obj::Logger *)qword_1ECDBCBB8;
    -[CNPostalAddress street](v8, "street");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v39, v20);
    -[CNPostalAddress city](v8, "city");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v37, v12);
    -[CNPostalAddress state](v8, "state");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](__p, v13);
    -[CNPostalAddress postalCode](v8, "postalCode");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v33, v14);
    -[CNPostalAddress country](v8, "country");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v31, v15);
    -[CNPostalAddress ISOCountryCode](v8, "ISOCountryCode");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v29, v16);
    -[CNPostalAddress subAdministrativeArea](v8, "subAdministrativeArea");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v27, v17);
    -[CNPostalAddress subLocality](v8, "subLocality");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSString stdString](v25, v18);
    addr_obj::AddressObjectFactory::fromContact(v11, (addr_obj::Localization *)buf, (uint64_t)v47, (uint64_t)v39, (uint64_t)v37, (uint64_t)__p, (uint64_t)v33, (uint64_t)v31, a1, (uint64_t)v29, (uint64_t)v27, (uint64_t)v25);
    if (v26 < 0)
      operator delete(v25[0]);

    if (v28 < 0)
      operator delete(v27[0]);

    if (v30 < 0)
      operator delete(v29[0]);

    if (v32 < 0)
      operator delete(v31[0]);

    if (v34 < 0)
      operator delete(v33[0]);

    if (v36 < 0)
      operator delete(__p[0]);

    if (v38 < 0)
      operator delete(v37[0]);

    if (v40 < 0)
      operator delete(v39[0]);

    if (v46 < 0)
      operator delete(v45);
    if (v44 < 0)
      operator delete(v43);
    if (v42 < 0)
      operator delete(*(void **)buf);
  }
  else
  {
    GEOFindOrCreateLog("com.apple.GeoServices", "GEOAddressObject");
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1885A9000, v19, OS_LOG_TYPE_DEBUG, "Empty formatted address and address dictionary, can't create AddressObject", buf, 2u);
    }

    a1->super.isa = 0;
    a1[1].super.isa = 0;
  }
  if ((char)v48 < 0)
    operator delete(v47[0]);

}

void sub_18977A9B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  void *v58;
  uint64_t v59;

  if (*(char *)(v59 - 89) < 0)
    operator delete(*(void **)(v59 - 112));

  _Unwind_Resume(a1);
}

void sub_18977ADB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_18977AF44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18977B2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *v65;
  void *v66;
  uint64_t v67;

  if (a17 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a29 < 0)
    operator delete(a24);
  if (a35 < 0)
    operator delete(a30);
  if (a41 < 0)
    operator delete(a36);
  if (a47 < 0)
    operator delete(a42);
  if (a53 < 0)
    operator delete(a48);
  if (a59 < 0)
    operator delete(a54);
  if (a65 < 0)
    operator delete(a60);
  addr_obj::Localization::~Localization((void **)(v67 - 152));
  if (*(char *)(v67 - 201) < 0)
    operator delete(*(void **)(v67 - 224));
  if (*(char *)(v67 - 177) < 0)
    operator delete(*(void **)(v67 - 200));
  if (*(char *)(v67 - 153) < 0)
    operator delete(*(void **)(v67 - 176));

  _Unwind_Resume(a1);
}

void sub_18977B4AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id GEOAddressObjectOfGEOPDAddressObject(uint64_t a1, uint64_t a2)
{
  +[GEOAddressObject addressObjectWithPlaceDataAddressObject:placeDataAddress:placeDataInfo:placeDataEntity:](GEOAddressObject, "addressObjectWithPlaceDataAddressObject:placeDataAddress:placeDataInfo:placeDataEntity:", a1, 0, a2, 0);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_18977B638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977B600);
  }
  _Unwind_Resume(a1);
}

void sub_18977B788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18977B890(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18977BA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977B9C8);
  }
  _Unwind_Resume(a1);
}

void sub_18977BB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977BB54);
  }
  _Unwind_Resume(a1);
}

void sub_18977BD28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  void *v17;
  void *v19;

  v19 = v17;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977BCECLL);
  }

  _Unwind_Resume(a1);
}

void sub_18977BF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;

  if (a18 < 0)
    operator delete(__p);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977BEC4);
  }
  _Unwind_Resume(a1);
}

void sub_18977C144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977C10CLL);
  }
  _Unwind_Resume(a1);
}

void sub_18977C374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;

  if (a18 < 0)
    operator delete(__p);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977C2A8);
  }
  _Unwind_Resume(a1);
}

void sub_18977C520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977C4E8);
  }
  _Unwind_Resume(a1);
}

void sub_18977C728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;
  void *v19;
  void *v21;

  v21 = v19;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977C6ECLL);
  }

  _Unwind_Resume(a1);
}

_QWORD *std::shared_ptr<addr_obj::AddressObject>::operator=[abi:ne180100](_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (a3)
  {
    v4 = (unint64_t *)(a3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = (std::__shared_weak_count *)a1[1];
  *a1 = a2;
  a1[1] = a3;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_18977C874(_Unwind_Exception *a1, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977C860);
  }
  _Unwind_Resume(a1);
}

void sub_18977C9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977C9A4);
  }
  _Unwind_Resume(a1);
}

void sub_18977CB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977CB34);
  }
  _Unwind_Resume(a1);
}

void sub_18977CC18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18977CD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977CD2CLL);
  }
  _Unwind_Resume(a1);
}

void sub_18977CEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977CEB8);
  }
  _Unwind_Resume(a1);
}

void sub_18977D07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977D044);
  }
  _Unwind_Resume(a1);
}

void sub_18977D220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977D1E8);
  }
  _Unwind_Resume(a1);
}

void sub_18977D39C(_Unwind_Exception *a1, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977D368);
  }
  _Unwind_Resume(a1);
}

void sub_18977D514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977D4DCLL);
  }
  _Unwind_Resume(a1);
}

void sub_18977D6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977D668);
  }
  _Unwind_Resume(a1);
}

void sub_18977D9B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18977DB48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977DB10);
  }
  _Unwind_Resume(a1);
}

void sub_18977DCD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977DCA0);
  }
  _Unwind_Resume(a1);
}

void sub_18977DEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  void *v18;
  void *v19;
  void *v21;

  v21 = v19;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977DEA0);
  }

  _Unwind_Resume(a1);
}

void sub_18977DFB4(_Unwind_Exception *a1, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977DFA0);
  }
  _Unwind_Resume(a1);
}

void sub_18977E11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977E0E4);
  }
  _Unwind_Resume(a1);
}

void sub_18977E288(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18977E33C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18977E450(_Unwind_Exception *a1, int a2)
{
  void *v2;

  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x18977E41CLL);
  }
  _Unwind_Resume(a1);
}

id GEOAddressObjectOfGEOPDAddress(uint64_t a1, uint64_t a2)
{
  +[GEOAddressObject addressObjectWithPlaceDataAddressObject:placeDataAddress:placeDataInfo:placeDataEntity:](GEOAddressObject, "addressObjectWithPlaceDataAddressObject:placeDataAddress:placeDataInfo:placeDataEntity:", 0, a1, 0, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id GEOAddressObjectOfGEOPlace(void *a1)
{
  id v1;
  GEOPDAddress *v2;
  GEOPDLocalizedAddress *v3;
  void *v4;
  void *v5;
  GEOLocalizedString *v6;
  void *v7;
  void *v8;
  GEOPDLocalizedSpokenStructuredAddress *v9;
  void *v10;
  void *v11;
  void *v12;

  v1 = a1;
  if (objc_msgSend(v1, "hasAddress"))
  {
    v2 = objc_alloc_init(GEOPDAddress);
    v3 = objc_alloc_init(GEOPDLocalizedAddress);
    objc_msgSend(v1, "address");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOPDLocalizedAddress setAddress:]((uint64_t)v3, v4);

    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOPDAddress setLocalizedAddress:]((uint64_t)v2, v5);

    v6 = objc_alloc_init(GEOLocalizedString);
    objc_msgSend(v1, "spokenAddress");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOLocalizedString setStringValue:](v6, "setStringValue:", v7);

    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOPDAddress setSpokenNavigationAddress:]((uint64_t)v2, v8);

    v9 = objc_alloc_init(GEOPDLocalizedSpokenStructuredAddress);
    objc_msgSend(v1, "spokenStructuredAddress");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOPDLocalizedSpokenStructuredAddress setSpokenStructuredAddress:]((uint64_t)v9, v10);

    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOPDAddress setSpokenStructuredAddress:]((uint64_t)v2, v11);

    +[GEOAddressObject addressObjectWithPlaceDataAddressObject:placeDataAddress:placeDataInfo:placeDataEntity:](GEOAddressObject, "addressObjectWithPlaceDataAddressObject:placeDataAddress:placeDataInfo:placeDataEntity:", 0, v2, 0, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_18977E68C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id GEOPDAddressObjectOfGEOAddressObject(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "rawBytes");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    v2 = (void *)objc_opt_new();
    -[GEOPDAddressObject setAddressObject:]((uint64_t)v2, v1);
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_18977E730(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

GEOTileKeyList *GEOProactiveAppClipTileKeysNearLocation(double a1, double a2)
{
  double Double;
  GEOTileKeyList *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  unsigned int v16;
  double v17;
  int v18;
  unsigned int v20;
  signed int v21;
  signed int v22;
  NSObject *v23;
  unsigned int v24;
  BOOL v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint8_t v28[8];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  Double = GEOConfigGetDouble(GeoServicesConfig_DefaultTileRadius_ProactiveAppClip, (uint64_t)off_1EDF4DE48);
  v5 = objc_alloc_init(GEOTileKeyList);
  +[GEOResourceManifestManager modernManager](GEOResourceManifestManager, "modernManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "activeTileGroup");
  v7 = objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v7, "activeTileSetForStyle:size:scale:", 72, 2, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (objc_msgSend(v8, "availableTilesCount"))
    {
      v9 = GEOMapRectMakeWithRadialDistance(a1, a2, Double);
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v16 = objc_msgSend(v8, "maximumZoomLevelInRect:");
      v17 = (double)(1 << v16) * 0.0000000037252903;
      LODWORD(v7) = vcvtmd_s64_f64(v9 * v17);
      v18 = vcvtmd_s64_f64((v9 + v13) * v17);
      if ((int)v7 <= v18)
      {
        v20 = v16;
        v21 = vcvtmd_s64_f64(v11 * v17);
        v22 = vcvtmd_s64_f64((v11 + v15) * v17);
        v23 = MEMORY[0x1E0C81028];
        do
        {
          v24 = v21;
          if (v21 <= v22)
          {
            do
            {
              v29 = 0;
              v30 = 0;
              objc_msgSend(v8, "size");
              objc_msgSend(v8, "scale");
              v26 = v20;
              if (v20 >= 0x100)
              {
                if (os_log_type_enabled(v23, OS_LOG_TYPE_FAULT))
                {
                  *(_WORD *)v28 = 0;
                  _os_log_fault_impl(&dword_1885A9000, v23, OS_LOG_TYPE_FAULT, "Assertion failed: z <= UINT8_MAX", v28, 2u);
                }
                v26 = -1;
              }
              v29 = GEOGloriaQuadIDTileKeyMake((gloria::MortonUtils *)v7, v24, v26);
              v30 = v27;
              -[GEOTileKeyList addKey:](v5, "addKey:", &v29);
              ++v24;
            }
            while (v22 + 1 != v24);
          }
          v25 = (_DWORD)v7 == v18;
          v7 = (v7 + 1);
        }
        while (!v25);
      }
    }
  }

  return v5;
}

uint64_t _GEONumberOfTileKeysForRegion(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  unsigned int v11;

  v6 = GEOMapRectForMapRegion(a1);
  v7 = (double)(1 << a5) * 0.0000000037252903;
  v11 = vcvtmd_u64_f64(v7 * (v9 + v10)) - vcvtmd_u64_f64(v7 * v9) + 1;
  return v11 + v11 * (vcvtmd_u64_f64(v7 * (v6 + v8)) - vcvtmd_u64_f64(v7 * v6));
}

uint64_t _GEOEnumerateTileKeysForRegion(void *a1, unsigned int a2, char a3, uint64_t a4, unsigned int a5, unsigned int a6, void *a7)
{
  uint64_t (**v13)(id, _QWORD *);
  double v14;
  double v15;
  double v16;
  double v17;
  unint64_t v18;
  double v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned __int8 v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  int v33;
  uint64_t v34;
  NSObject *v36;
  const char *v37;
  unsigned int v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint8_t buf[24];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v13 = a7;
  v14 = GEOMapRectForMapRegion(a1);
  v17 = (double)(1 << a5) * 0.0000000037252903;
  LODWORD(v18) = vcvtmd_u64_f64(v17 * v14);
  v20 = vcvtmd_u64_f64(v17 * (v14 + v19));
  v21 = v20 - v18 + 1;
  v22 = a6 / v21;
  v23 = a6 % v21 + v18;
  if (v23 > v20)
  {
    if (!os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      goto LABEL_26;
    *(_WORD *)buf = 0;
    v36 = MEMORY[0x1E0C81028];
    v37 = "Assertion failed: startX <= maxX";
    goto LABEL_30;
  }
  v24 = vcvtmd_u64_f64(v17 * (v15 + v16));
  v25 = v22 + vcvtmd_u64_f64(v17 * v15);
  if (v25 > v24)
  {
    if (!os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
      goto LABEL_26;
    *(_WORD *)buf = 0;
    v36 = MEMORY[0x1E0C81028];
    v37 = "Assertion failed: startY <= maxY";
    goto LABEL_30;
  }
  v26 = a4 << 52;
  v27 = a2 - 72;
  v40 = ((unint64_t)(a3 & 0xF) << 48) | v26;
  v38 = v24;
  v39 = v18;
  while (1)
  {
    if (v23 <= v20)
    {
      do
      {
        v41 = 0;
        v42 = 0;
        if (v27 <= 0x11 && ((1 << v27) & 0x20005) != 0)
        {
          v28 = a5;
          if (a5 >= 0x100)
          {
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Assertion failed: z <= UINT8_MAX", buf, 2u);
            }
            v28 = -1;
          }
          v29 = GEOGloriaQuadIDTileKeyMake((gloria::MortonUtils *)v23, v25, v28);
        }
        else
        {
          *(_QWORD *)&buf[1] = ((unint64_t)(a5 & 0x3F) << 40) & 0x3FFFFFFFFFFFLL | ((unint64_t)v23 << 46);
          buf[0] = 2;
          if (a2 <= 0x19 && ((1 << a2) & 0x200101C) != 0)
            v31 = 128;
          else
            v31 = (unint64_t)(a2 == 26) << 7;
          *((_QWORD *)&v32 + 1) = ((unint64_t)(v25 & 0x3FFFFFF) << 8) | ((unint64_t)(a2 & 0x3FFF) << 34) | (v23 >> 18) | v40;
          *(_QWORD *)&v32 = v23 << 46;
          v30 = v32 >> 56;
          v29 = v31 | *(_QWORD *)buf & 0xFFFFFFFFFFFFFF7FLL;
        }
        v41 = v29;
        v42 = v30;
        v33 = v13[2](v13, &v41);
        v23 = (v23 + 1);
      }
      while (v33 && v23 <= v20);
      if ((v33 & 1) != 0)
      {
        v24 = v38;
        v18 = v39;
      }
      else
      {
        v34 = 0;
        if (v23 <= v20)
          goto LABEL_27;
        v24 = v38;
        v18 = v39;
        if (v25 != v38)
          goto LABEL_27;
      }
    }
    if (v23 <= v20)
      break;
    ++v25;
    v23 = v18;
    if (v25 > v24)
      goto LABEL_26;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    v36 = MEMORY[0x1E0C81028];
    v37 = "Assertion failed: x > maxX";
LABEL_30:
    _os_log_fault_impl(&dword_1885A9000, v36, OS_LOG_TYPE_FAULT, v37, buf, 2u);
  }
LABEL_26:
  v34 = 1;
LABEL_27:

  return v34;
}

float64_t GEOLocationCoordinate2DFromOrientedPosition(__int128 *a1)
{
  uint64_t v1;
  float64x2_t v3;
  __int128 v4;
  uint64_t v5;

  v1 = *((_QWORD *)a1 + 2);
  v4 = *a1;
  v5 = v1;
  geo::Geocentric<double>::toCoordinate3D<geo::Degrees,double>((double *)&v4, &v3);
  return v3.f64[0];
}

void **GEOMuninMetadataTileCreate(uint64_t a1, uint64_t a2)
{
  GEOPDGroundMetadataTile *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void **v8;
  size_t v9;
  void *v10;
  size_t v11;
  void *v12;
  size_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  GEOPDGroundMetadataTile *v19;
  size_t v20;
  void *v21;
  size_t v22;
  void *v23;
  GEOPDGroundMetadataTile *v24;
  size_t v25;
  void *v26;
  GEOPDGroundMetadataTile *v27;
  size_t v28;
  void *v29;
  GEOPDGroundMetadataTile *v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  unint64_t j;
  void *v35;
  FILE *v36;
  int v37;
  uint64_t v39;
  unint64_t k;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  int v58;
  char *v59;
  _QWORD *v60;
  void *v61;
  char v62;
  int v63;
  char *v64;
  _QWORD *v65;
  void *v66;
  char v67;
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t m;
  unint64_t n;
  id *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _BYTE v82[128];
  uint64_t v83;

  v83 = *MEMORY[0x1E0C80C00];
  v4 = [GEOPDGroundMetadataTile alloc];
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytesNoCopy:length:freeWhenDone:", a1, a2, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[GEOPDGroundMetadataTile initWithData:](v4, "initWithData:", v5);

  if (!v6)
  {
    v8 = 0;
    goto LABEL_54;
  }
  -[GEOPDGroundMetadataTile _readCoord](v6);
  if (*(_QWORD *)(v6 + 32))
  {
    -[GEOPDGroundMetadataTile coord]((id *)v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }
  v8 = (void **)malloc_type_calloc(1uLL, 0x80uLL, 0x10200407642C3B1uLL);
  if (!v8)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 468;
LABEL_51:
    fprintf(v36, "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v37);
    goto LABEL_52;
  }
  -[GEOPDGroundMetadataTile _readBuildTables](v6);
  v9 = objc_msgSend(*(id *)(v6 + 16), "count");
  v8[1] = (void *)v9;
  if (v9 > 0x10000)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 472;
    goto LABEL_51;
  }
  v10 = malloc_type_calloc(v9, 0x28uLL, 0x1000040FF9850F6uLL);
  *v8 = v10;
  if (!v10)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 474;
    goto LABEL_51;
  }
  -[GEOPDGroundMetadataTile _readPhotoPositions](v6);
  v11 = objc_msgSend(*(id *)(v6 + 40), "count");
  v8[3] = (void *)v11;
  if (v11 >= 0x10001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 477;
    goto LABEL_51;
  }
  v12 = malloc_type_calloc(v11, 0x40uLL, 0x1000040036F7A65uLL);
  v8[2] = v12;
  if (!v12)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 479;
    goto LABEL_51;
  }
  v77 = (id *)(id)v6;
  -[GEOPDGroundMetadataTile _readCameraMetadataTables]((uint64_t)v77);
  v13 = objc_msgSend(v77[3], "count");
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  -[GEOPDGroundMetadataTile photoPositions](v77);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v78, v82, 16);
  if (v15)
  {
    v16 = *(_QWORD *)v79;
    do
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v79 != v16)
          objc_enumerationMutation(v14);
        v13 += objc_msgSend(*(id *)(*((_QWORD *)&v78 + 1) + 8 * i), "cameraMetadatasCount");
      }
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v78, v82, 16);
    }
    while (v15);
  }

  v8[5] = (void *)v13;
  if (v13 >= 0x320001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 482;
    goto LABEL_51;
  }
  v18 = malloc_type_calloc(v13, 0x98uLL, 0x10000406F6DD5A3uLL);
  v8[4] = v18;
  if (!v18)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 484;
    goto LABEL_51;
  }
  v8[7] = (void *)v20;
  if (v20 >= 0x320001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 487;
    goto LABEL_51;
  }
  v21 = malloc_type_calloc(v20, 8uLL, 0x1000040789AEA99uLL);
  v8[6] = v21;
  if (!v21)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 489;
    goto LABEL_51;
  }
  -[GEOPDGroundMetadataTile _readStorefronts]((uint64_t)v77);
  v22 = objc_msgSend(v77[6], "count");
  v8[9] = (void *)v22;
  if (v22 >= 0x10001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 492;
    goto LABEL_51;
  }
  v23 = malloc_type_calloc(v22, 0x28uLL, 0x10000400A747E1EuLL);
  v8[8] = v23;
  if (!v23)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 494;
    goto LABEL_51;
  }
  v8[11] = (void *)v25;
  if (v25 >= 0x10001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 497;
    goto LABEL_51;
  }
  v26 = malloc_type_calloc(v25, 0x30uLL, 0x100004064842E6AuLL);
  v8[10] = v26;
  if (!v26)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 499;
    goto LABEL_51;
  }
  v8[13] = (void *)v28;
  if (v28 >= 0x10001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 502;
    goto LABEL_51;
  }
  v29 = malloc_type_calloc(v28, 0x30uLL, 0x100004064842E6AuLL);
  v8[12] = v29;
  if (!v29)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 504;
    goto LABEL_51;
  }
  v8[15] = (void *)v31;
  if (v31 >= 0x20001)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 507;
    goto LABEL_51;
  }
  v32 = malloc_type_calloc(v31, 0x38uLL, 0x10000409380FD32uLL);
  v8[14] = v32;
  if (!v32)
  {
    v36 = (FILE *)*MEMORY[0x1E0C80C10];
    v37 = 509;
    goto LABEL_51;
  }
  v33 = 0;
  for (j = 0; ; ++j)
  {
    -[GEOPDGroundMetadataTile _readBuildTables]((uint64_t)v77);
    if (j >= objc_msgSend(v77[2], "count"))
      break;
    -[GEOPDGroundMetadataTile buildTableAtIndex:](v77, j);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    {
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 517);

      goto LABEL_52;
    }

    v33 += 40;
  }
  v39 = 0;
  for (k = 0; ; ++k)
  {
    -[GEOPDGroundMetadataTile _readCameraMetadataTables]((uint64_t)v77);
    if (k >= objc_msgSend(v77[3], "count"))
      break;
    -[GEOPDGroundMetadataTile cameraMetadataTables](v77);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "objectAtIndex:", k);
    v42 = (void *)objc_claimAutoreleasedReturnValue();

    {
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 527);

      goto LABEL_52;
    }

    v39 += 152;
  }
  v43 = 0;
  v44 = 0;
  for (m = 0; ; ++m)
  {
    -[GEOPDGroundMetadataTile _readPhotoPositions]((uint64_t)v77);
    if (m >= objc_msgSend(v77[5], "count"))
      break;
    -[GEOPDGroundMetadataTile photoPositions](v77);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "objectAtIndex:", m);
    v46 = (void *)objc_claimAutoreleasedReturnValue();

    {
      v68 = 538;
LABEL_89:
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v68);

      goto LABEL_52;
    }
    {
      v68 = 542;
      goto LABEL_89;
    }
    v47 = objc_msgSend(v46, "cameraMetadataIndexsCount");
    if (v47 + v44 + objc_msgSend(v46, "cameraMetadatasCount") > (unint64_t)v8[7])
    {
      v68 = 546;
      goto LABEL_89;
    }
    v48 = objc_msgSend(v46, "cameraMetadatasCount");
    v49 = (unint64_t)v8[5];
    if (v48 + k > v49)
    {
      v68 = 547;
      goto LABEL_89;
    }
    {
      v68 = 549;
      goto LABEL_89;
    }
    v50 = objc_msgSend(v46, "cameraMetadatasCount");
    v51 = objc_msgSend(v46, "cameraMetadatasCount");
    v52 = objc_msgSend(v46, "cameraMetadataIndexsCount");

    k += v50;
    v44 += v51 + v52;
    v43 += 64;
  }
  v72 = 0;
  v73 = 0;
  v71 = 0;
  v74 = 0;
  for (n = 0; ; ++n)
  {
    -[GEOPDGroundMetadataTile _readStorefronts]((uint64_t)v77);
    if (n >= objc_msgSend(v77[6], "count"))
      goto LABEL_53;
    -[GEOPDGroundMetadataTile storefronts](v77);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "objectAtIndex:", n);
    v54 = (void *)objc_claimAutoreleasedReturnValue();

    v55 = (char *)v8[8];
    {
      v69 = 568;
LABEL_92:
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v69);

      goto LABEL_52;
    }
    {
      v69 = 572;
      goto LABEL_92;
    }
    v56 = objc_msgSend(v54, "facesCount");
    if (!objc_msgSend(v54, "hasPresentation"))
      goto LABEL_83;
    objc_msgSend(v54, "presentation");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    v58 = objc_msgSend(v57, "hasCloseUpView");
    v59 = &v55[v73];
    if (v58)
    {
      *((_QWORD *)v59 + 1) = v72;
      v60 = v8[10];
      objc_msgSend(v57, "closeUpView");
      v61 = (void *)objc_claimAutoreleasedReturnValue();

      if ((v62 & 1) == 0)
      {
        v70 = 586;
        goto LABEL_95;
      }
      ++v72;
    }
    else
    {
      *((_QWORD *)v59 + 1) = -1;
    }
    v63 = objc_msgSend(v57, "hasStandOffView");
    v64 = &v55[v73];
    if (!v63)
    {
      *((_QWORD *)v64 + 2) = -1;
      goto LABEL_82;
    }
    *((_QWORD *)v64 + 2) = v71;
    v65 = v8[12];
    objc_msgSend(v57, "standOffView");
    v66 = (void *)objc_claimAutoreleasedReturnValue();

    if ((v67 & 1) == 0)
      break;
    ++v71;
LABEL_82:

LABEL_83:
    v74 += v56;
    v73 += 40;
  }
  v70 = 596;
LABEL_95:
  fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v70);

LABEL_52:
  GEOMuninMetadataTileDestroy(v8);
  v8 = 0;
LABEL_53:

LABEL_54:
  return v8;
}

void sub_18977F778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::collectionPointPhotoCount(id *this, GEOPDGroundMetadataTile *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[GEOPDGroundMetadataTile photoPositions](this);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 0;
  v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * i);
        v8 = objc_msgSend(v7, "cameraMetadatasCount", (_QWORD)v10);
        v3 += v8 + objc_msgSend(v7, "cameraMetadataIndexsCount");
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

  return v3;
}

void sub_18977F994(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::storefrontCloseUpViewCount(id *this, GEOPDGroundMetadataTile *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  unsigned int v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[GEOPDGroundMetadataTile storefronts](this);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 0;
  v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v12 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v7, "hasPresentation", (_QWORD)v11))
        {
          objc_msgSend(v7, "presentation");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = objc_msgSend(v8, "hasCloseUpView");

          v3 += v9;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v4);
  }

  return v3;
}

void sub_18977FAD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::storefrontStandOffViewCount(id *this, GEOPDGroundMetadataTile *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  unsigned int v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[GEOPDGroundMetadataTile storefronts](this);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 0;
  v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v12 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v7, "hasPresentation", (_QWORD)v11))
        {
          objc_msgSend(v7, "presentation");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = objc_msgSend(v8, "hasStandOffView");

          v3 += v9;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v4);
  }

  return v3;
}

void sub_18977FC20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::storefrontFaceCount(id *this, GEOPDGroundMetadataTile *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[GEOPDGroundMetadataTile storefronts](this);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 0;
  v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v3 += objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "facesCount", (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return v3;
}

void sub_18977FD40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::decodeBuildEntry(void *a1, uint64_t a2)
{
  _DWORD *v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  char v11;
  uint64_t v12;

  v3 = a1;
  v4 = (uint64_t)v3;
  if (v3 && (v5 = *((unsigned __int16 *)v3 + 54), (~v5 & 3) == 0) && (v6 = v3[19], v6 <= 0xFFFE) && (v5 & 0x84) == 0x84)
  {
    *(_WORD *)a2 = v6;
    *(_DWORD *)(a2 + 4) = v3[20];
    v7 = v3[21];
    *(_DWORD *)(a2 + 12) = v7;
    *(_QWORD *)(a2 + 24) = 0;
    if (v7 >= 2)
    {
      -[GEOPDGroundDataBuild _readLodWithTextures]((uint64_t)v3);
      v8 = *(_QWORD *)(v4 + 48);
      if (v8 >= 8)
        v8 = 8;
      *(_QWORD *)(a2 + 24) = v8;
      if (v8)
      {
        v9 = 0;
        do
        {
          -[GEOPDGroundDataBuild _readLodWithTextures](v4);
          *(_BYTE *)(a2 + 32 + v9) = *(_DWORD *)(*(_QWORD *)(v4 + 40) + 4 * v9);
          ++v9;
        }
        while (v9 < *(_QWORD *)(a2 + 24));
      }
    }
    v10 = -[GEOPDGroundDataBuild type](v4);
    v11 = v10 == 2;
    if (v10 == 3)
      v11 = 2;
    *(_BYTE *)(a2 + 16) = v11;
    if ((*(_WORD *)(v4 + 108) & 0x10) != 0)
      *(_DWORD *)(a2 + 20) = *(_DWORD *)(v4 + 92);
    else
      *(_DWORD *)(a2 + 20) = 1077936128;
    v12 = 1;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 222);
    v12 = 0;
  }

  return v12;
}

void sub_18977FEF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::decodePhotoInfo(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  int v5;
  double *v6;
  float v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  unint64_t i;
  FILE *v16;
  uint64_t v17;
  FILE **v19;
  int v20;
  char v21;

  v3 = a1;
  v4 = (uint64_t)v3;
  if (!v3
    || (-[GEOPDCameraMetadata _readPosition]((uint64_t)v3), !*(_QWORD *)(v4 + 48))
    || (*(_BYTE *)(v4 + 80) & 1) == 0
    || (-[GEOPDCameraMetadata _readLensProjection](v4), !*(_QWORD *)(v4 + 40)))
  {
    v16 = (FILE *)*MEMORY[0x1E0C80C10];
LABEL_20:
    fprintf(v16, "%s:%d Metadata parse error: Decode error here\n");
LABEL_21:
    v17 = 0;
    goto LABEL_22;
  }
  v5 = *(_DWORD *)(v4 + 68);
  if (v5 >= 256)
  {
    v16 = (FILE *)*MEMORY[0x1E0C80C10];
    goto LABEL_20;
  }
  *(_BYTE *)(a2 + 144) = v5;
  -[GEOPDCameraMetadata lensProjection]((id *)v4);
  v6 = (double *)objc_claimAutoreleasedReturnValue();
  if (v6)
    v7 = v6[4];
  else
    v7 = 0.0;
  *(float *)(a2 + 140) = v7;

  -[GEOPDCameraMetadata lensProjection]((id *)v4);
  v8 = (unsigned int *)(id)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (!v8 || (v8[21] & 0x200) == 0 || (v10 = v8[20], v10 >= 7))
  {
    v19 = (FILE **)MEMORY[0x1E0C80C10];
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 161);

    fprintf(*v19, "%s:%d Metadata parse error: Decode error here\n");
    goto LABEL_21;
  }
  *(_BYTE *)(a2 + 136) = v10;

  -[GEOPDCameraMetadata position]((id *)v4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = GEOOrientedPositionFromPDPosition(v11, a2);

  if ((v12 & 1) == 0)
  {
    v16 = (FILE *)*MEMORY[0x1E0C80C10];
    goto LABEL_20;
  }
  -[GEOPDCameraMetadata lensProjection]((id *)v4);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if ((v14 & 1) == 0)
  {
    v16 = (FILE *)*MEMORY[0x1E0C80C10];
    goto LABEL_20;
  }
  -[GEOPDCameraMetadata _readTextureIds](v4);
  if (*(_QWORD *)(v4 + 24) >= 6uLL)
  {
    v16 = (FILE *)*MEMORY[0x1E0C80C10];
    goto LABEL_20;
  }
  -[GEOPDCameraMetadata _readTextureIds](v4);
  if (*(_QWORD *)(v4 + 24))
  {
    for (i = 0; ; ++i)
    {
      -[GEOPDCameraMetadata _readTextureIds](v4);
      if (i >= *(_QWORD *)(v4 + 24))
      {
        -[GEOPDCameraMetadata _readTextureIds](v4);
        *(_BYTE *)(a2 + 149) = *(_QWORD *)(v4 + 24);
        goto LABEL_35;
      }
      -[GEOPDCameraMetadata _readTextureIds](v4);
      if (*(_DWORD *)(*(_QWORD *)(v4 + 16) + 4 * i) >= 0x20u)
        break;
      -[GEOPDCameraMetadata _readTextureIds](v4);
      *(_BYTE *)(a2 + 145 + i) = *(_DWORD *)(*(_QWORD *)(v4 + 16) + 4 * i);
    }
    v16 = (FILE *)*MEMORY[0x1E0C80C10];
    goto LABEL_20;
  }
  v20 = *(unsigned __int8 *)(a2 + 144);
  *(_BYTE *)(a2 + 145) = v20;
  if (v20 == 4 && *(float *)(a2 + 140) > 4.71238898)
  {
    *(_BYTE *)(a2 + 146) = 5;
    v21 = 2;
  }
  else
  {
    v21 = 1;
  }
  *(_BYTE *)(a2 + 149) = v21;
LABEL_35:
  v17 = 1;
LABEL_22:

  return v17;
}

void sub_18978023C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::decodeCollectionPoint(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  char v8;
  FILE *v9;
  int v10;
  uint64_t v11;
  void *v13;
  char v14;

  v5 = a1;
  v6 = a3;
  if (!objc_msgSend(v5, "hasImdataId")
    || (objc_msgSend(v5, "hasPosition") & 1) == 0 && !objc_msgSend(v5, "hasTilePosition")
    || !objc_msgSend(v5, "hasImageryTimestamp")
    || (objc_msgSend(v5, "hasBuildTableIndex") & 1) == 0)
  {
    v9 = (FILE *)*MEMORY[0x1E0C80C10];
    v10 = 299;
    goto LABEL_10;
  }
  *(_QWORD *)(a2 + 48) = objc_msgSend(v5, "imdataId");
  *(_QWORD *)(a2 + 40) = objc_msgSend(v5, "imageryTimestamp");
  if (!objc_msgSend(v5, "hasTilePosition"))
  {
    objc_msgSend(v5, "position");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = GEOOrientedPositionFromPDPosition(v13, a2);

    if ((v14 & 1) == 0)
    {
      v9 = (FILE *)*MEMORY[0x1E0C80C10];
      v10 = 307;
      goto LABEL_10;
    }
LABEL_13:
    *(_WORD *)(a2 + 56) = objc_msgSend(v5, "buildTableIndex");
    v11 = 1;
    goto LABEL_11;
  }
  objc_msgSend(v5, "tilePosition");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = GEOOrientedPositionFromPDTilePosition(v7, v6, a2);

  if ((v8 & 1) != 0)
    goto LABEL_13;
  v9 = (FILE *)*MEMORY[0x1E0C80C10];
  v10 = 305;
LABEL_10:
  fprintf(v9, "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v10);
  v11 = 0;
LABEL_11:

  return v11;
}

void sub_1897803C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

BOOL `anonymous namespace'::decodePhotoInfos(void *a1, uint64_t a2)
{
  id v3;
  unint64_t i;
  unint64_t v5;
  void *v6;
  void *v7;

  v3 = a1;
  for (i = 0; ; ++i)
  {
    v5 = objc_msgSend(v3, "cameraMetadatasCount");
    if (i >= v5)
      break;
    objc_msgSend(v3, "cameraMetadatas");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectAtIndex:", i);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    {
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 320);

      break;
    }

    a2 += 152;
  }

  return i >= v5;
}

void sub_1897804BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL `anonymous namespace'::decodeCollectionPointPhotos(void *a1, __int16 a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  _WORD *v15;
  int v16;
  int v17;

  v9 = a1;
  v10 = objc_msgSend(v9, "cameraMetadataIndexsCount");
  if (v10)
    v11 = objc_msgSend(v9, "cameraMetadataIndexsCount");
  else
    v11 = objc_msgSend(v9, "cameraMetadatasCount");
  v12 = v11;
  if (!v11)
  {
LABEL_12:
    v13 = 1;
    goto LABEL_16;
  }
  v13 = 0;
  v14 = 0;
  v15 = (_WORD *)(a4 + 4);
  while (1)
  {
    *v15 = a2;
    if (!v10)
      break;
    if (*(unsigned int *)(objc_msgSend(v9, "cameraMetadataIndexs") + 4 * v14) >= a5)
    {
      v17 = 334;
      goto LABEL_15;
    }
    v16 = *(_DWORD *)(objc_msgSend(v9, "cameraMetadataIndexs") + 4 * v14);
LABEL_11:
    *((_DWORD *)v15 - 1) = v16;
    v13 = ++v14 >= v12;
    v15 += 4;
    if (v12 == v14)
      goto LABEL_12;
  }
  if (a3 + v14 < a5)
  {
    v16 = a3 + v14;
    goto LABEL_11;
  }
  v17 = 337;
LABEL_15:
  fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v17);
LABEL_16:

  return v13;
}

void sub_18978060C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::decodeStorefrontBundle(void *a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  uint64_t v6;

  v5 = a1;
  v6 = objc_msgSend(v5, "hasIdentifier");
  if ((v6 & 1) != 0)
  {
    *a3 = objc_msgSend(v5, "identifier");
    a3[3] = a2;
    a3[4] = objc_msgSend(v5, "facesCount");
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 346);
  }

  return v6;
}

void sub_1897806B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL `anonymous namespace'::decodeFaces(void *a1, _DWORD *a2)
{
  id v3;
  unint64_t i;
  unint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  char v10;
  double v11;
  double v12;
  int v13;
  double v14;
  int v15;
  int v16;

  v3 = a1;
  for (i = 0; ; ++i)
  {
    v5 = objc_msgSend(v3, "facesCount");
    if (i >= v5)
      break;
    objc_msgSend(v3, "faces");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectAtIndex:", i);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(v7, "hasGeometry") & 1) == 0)
    {
      v16 = 360;
      goto LABEL_15;
    }
    objc_msgSend(v7, "geometry");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v8, "hasPosition")
      || !objc_msgSend(v8, "hasWidth")
      || (objc_msgSend(v8, "hasHeight") & 1) == 0)
    {
      v15 = 194;
      goto LABEL_14;
    }
    objc_msgSend(v8, "position");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = GEOOrientedPositionFromPDPosition(v9, (uint64_t)a2);

    if ((v10 & 1) == 0)
    {
      v15 = 196;
LABEL_14:
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v15);

      v16 = 361;
LABEL_15:
      fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v16);

      break;
    }
    objc_msgSend(v8, "width");
    *(float *)&v11 = v11;
    a2[10] = LODWORD(v11);
    objc_msgSend(v8, "height");
    *(float *)&v12 = v12;
    a2[11] = LODWORD(v12);
    v13 = objc_msgSend(v8, "hasDepth");
    LODWORD(v14) = 0;
    if (v13)
    {
      objc_msgSend(v8, "depth", v14);
      *(float *)&v14 = v14;
    }
    a2[12] = LODWORD(v14);

    a2 += 14;
  }

  return i >= v5;
}

void sub_189780880(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t `anonymous namespace'::decodeStorefrontView(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  char v5;
  uint64_t v6;
  int v7;

  v3 = a1;
  if (!objc_msgSend(v3, "hasImdataId") || (objc_msgSend(v3, "hasLookAt") & 1) == 0)
  {
    v7 = 369;
LABEL_6:
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v7);
    v6 = 0;
    goto LABEL_7;
  }
  *a2 = objc_msgSend(v3, "imdataId");
  objc_msgSend(v3, "lookAt");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = GEOOrientedPositionFromPDPosition(v4, (uint64_t)(a2 + 1));

  if ((v5 & 1) == 0)
  {
    v7 = 372;
    goto LABEL_6;
  }
  v6 = 1;
LABEL_7:

  return v6;
}

void sub_189780984(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GEOMuninMetadataTileDestroy(void **a1)
{
  if (a1)
  {
    free(*a1);
    free(a1[2]);
    free(a1[4]);
    free(a1[6]);
    free(a1[8]);
    free(a1[10]);
    free(a1[12]);
    free(a1[14]);
    free(a1);
  }
}

void GEOMuninFrustumFromLensModel(float *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  float v4;
  float v6;
  uint64_t k;
  float v9;
  float v10;
  float v11;
  float *v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float *v17;
  float v18;
  float v19;
  uint64_t v20;
  float *v21;
  float v22;
  float v23;
  uint64_t v24;
  float *v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  _OWORD *v45;
  float v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  float v50;
  unsigned int v51;
  float v52;
  float v53;
  float v54;
  float v55;
  int v56;
  float v57;
  float v58;
  float v59;
  float v60;
  float v61;
  float v62;
  float v63;
  int v64;
  float v65;
  float v66;
  float v67;
  float v68;
  uint64_t v69;
  float v70;
  uint64_t v71;
  float v72;
  uint64_t v73;
  uint64_t i;
  float *v75;
  float v76;
  float v77;
  uint64_t j;
  float *v79;
  float v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  _BYTE *v84;
  _DWORD *v85;
  uint64_t v86;
  int v87;
  int v88;
  _BYTE *v89;
  uint64_t v90;
  int v91;
  int v92;
  _DWORD *v93;
  uint64_t v94;
  int v95;
  _DWORD *v96;
  __int128 v97;
  int v98;
  uint64_t v100;
  float v101;
  float v102;
  unint64_t v103;
  int v104;
  _BYTE v105[12];
  unint64_t v106;
  int v107;
  unint64_t v108;
  int v109;
  unint64_t v110;
  int v111;
  unint64_t v112;
  int v113;
  unint64_t v114;
  int v115;
  unint64_t v116;
  int v117;
  unint64_t v118;
  int v119;
  _BYTE v120[24];
  __int128 v121;
  uint64_t v122;
  unint64_t v123;
  int v124;

  v121 = xmmword_189CE3B10;
  v122 = 0x80000000800000;
  *(_OWORD *)v120 = xmmword_189CE3B10;
  *(_QWORD *)&v120[16] = 0x80000000800000;
  v4 = a1[1];
  if (v4 >= 3.14159265 || (v6 = *a1, *a1 >= 3.14159265))
  {
    v28 = 0;
    __asm { FMOV            V0.2S, #-1.0 }
    v123 = _D0;
    v124 = 1065353216;
    do
    {
      *(float *)&v105[v28] = *(float *)((char *)&v123 + v28) * 2000.0;
      v28 += 4;
    }
    while (v28 != 12);
    v34 = 0;
    v103 = _D0;
    v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v34) = *(float *)((char *)&v103 + v34) * 2000.0;
      v34 += 4;
    }
    while (v34 != 12);
    v35 = 0;
    v106 = v123;
    v107 = v124;
    v103 = 0x3F800000BF800000;
    v104 = 1065353216;
    do
    {
      *(float *)((char *)&v123 + v35) = *(float *)((char *)&v103 + v35) * 2000.0;
      v35 += 4;
    }
    while (v35 != 12);
    v36 = 0;
    v108 = v123;
    v109 = v124;
    v103 = 0x3F800000BF800000;
    v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v36) = *(float *)((char *)&v103 + v36) * 2000.0;
      v36 += 4;
    }
    while (v36 != 12);
    v37 = 0;
    v110 = v123;
    v111 = v124;
    v103 = 0xBF8000003F800000;
    v104 = 1065353216;
    do
    {
      *(float *)((char *)&v123 + v37) = *(float *)((char *)&v103 + v37) * 2000.0;
      v37 += 4;
    }
    while (v37 != 12);
    v38 = 0;
    v112 = v123;
    v113 = v124;
    v103 = 0xBF8000003F800000;
    v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v38) = *(float *)((char *)&v103 + v38) * 2000.0;
      v38 += 4;
    }
    while (v38 != 12);
    v39 = 0;
    v114 = v123;
    v115 = v124;
    __asm { FMOV            V0.2S, #1.0 }
    v103 = _D0;
    v104 = 1065353216;
    do
    {
      *(float *)((char *)&v123 + v39) = *(float *)((char *)&v103 + v39) * 2000.0;
      v39 += 4;
    }
    while (v39 != 12);
    v41 = 0;
    v116 = v123;
    v117 = v124;
    v103 = _D0;
    v104 = -1082130432;
    do
    {
      *(float *)((char *)&v123 + v41) = *(float *)((char *)&v103 + v41) * 2000.0;
      v41 += 4;
    }
    while (v41 != 12);
    v42 = 0;
    v118 = v123;
    v119 = v124;
    do
    {
      v43 = *(_OWORD *)&v105[v42];
      v44 = *(_OWORD *)((char *)&v109 + v42);
      v45 = (_OWORD *)(a3 + v42);
      v45[1] = *(_OWORD *)((char *)&v106 + v42 + 4);
      v45[2] = v44;
      *v45 = v43;
      v42 += 48;
    }
    while (v42 != 96);
    return;
  }
  if (a2 != 2 && a2 != 4)
  {
    v46 = 0.5;
    v101 = v4 * 0.5;
    v102 = v6 * 0.5;
    v47 = 1.5708;
    v48 = 0;
    while (1)
    {
      v49 = 0;
      v100 = v48;
      LOBYTE(v47) = byte_189CE3B44[v48];
      v50 = (float)((float)((float)LODWORD(v47) + v46) / 5.0) + -0.5;
      do
      {
        v51 = byte_189CE3B44[v49];
        v123 = 0;
        v124 = 0;
        if (a2 == 3)
        {
          v60 = -(float)(a1[5]
                       - (float)((float)((float)((float)((float)((float)v51 + v46) / 5.0) + -0.5) * tanf(v102)) * 2.0));
          v61 = -(float)(a1[6] - (float)((float)(v50 * tanf(v101)) * 2.0));
          v62 = sqrtf((float)(v60 * v60) + (float)(v61 * v61));
          v63 = 1.0;
          v64 = 5;
          do
          {
            v63 = v63
                - (float)((float)((float)(v63
                                        * (float)((float)((float)((float)(v62 * v63)
                                                                * (float)(a1[2]
                                                                        + (float)((float)(a1[3]
                                                                                        + (float)(a1[4]
                                                                                                * (float)(v62 * v63)))
                                                                                * (float)(v62 * v63))))
                                                        * (float)(v62 * v63))
                                                + 1.0))
                                + -1.0)
                        / (float)((float)((float)((float)(v62 * v63)
                                                * (float)((float)(a1[2] * 3.0)
                                                        + (float)((float)((float)(a1[3] * 4.0)
                                                                        + (float)((float)(a1[4] * 5.0)
                                                                                * (float)(v62 * v63)))
                                                                * (float)(v62 * v63))))
                                        * (float)(v62 * v63))
                                + 1.0));
            --v64;
          }
          while (v64);
          v65 = (float)(v60 * v63) - a1[7];
          v66 = (float)(v61 * v63) - a1[8];
          v67 = fminf(sqrtf((float)(v65 * v65) + (float)(v66 * v66)), 1.5708);
          v68 = 0.0;
          if (v67 != 0.0)
            v68 = tanf(v67) / v67;
          v58 = v65 * v68;
          v59 = -(float)(v68 * v66);
          v46 = 0.5;
        }
        else
        {
          if (a2)
            goto LABEL_56;
          v52 = -(float)(a1[5]
                       - (float)((float)((float)((float)((float)((float)v51 + v46) / 5.0) + -0.5) * tanf(v102)) * 2.0));
          v53 = -(float)(a1[6] - (float)((float)(v50 * tanf(v101)) * 2.0));
          v54 = sqrtf((float)(v52 * v52) + (float)(v53 * v53));
          v55 = 1.0;
          v56 = 5;
          do
          {
            v55 = v55
                - (float)((float)((float)(v55
                                        * (float)((float)((float)((float)(v54 * v55)
                                                                * (float)(a1[2]
                                                                        + (float)((float)(a1[3]
                                                                                        + (float)(a1[4]
                                                                                                * (float)(v54 * v55)))
                                                                                * (float)(v54 * v55))))
                                                        * (float)(v54 * v55))
                                                + 1.0))
                                + -1.0)
                        / (float)((float)((float)((float)(v54 * v55)
                                                * (float)((float)(a1[2] * 3.0)
                                                        + (float)((float)((float)(a1[3] * 4.0)
                                                                        + (float)((float)(a1[4] * 5.0)
                                                                                * (float)(v54 * v55)))
                                                                * (float)(v54 * v55))))
                                        * (float)(v54 * v55))
                                + 1.0));
            --v56;
          }
          while (v56);
          v57 = v53 * v55;
          v58 = (float)(v52 * v55) - a1[7];
          v59 = -(float)(v57 - a1[8]);
        }
        v123 = __PAIR64__(LODWORD(v59), LODWORD(v58));
        v124 = -1082130432;
LABEL_56:
        v69 = 0;
        v70 = 0.0;
        do
        {
          v70 = v70 + (float)(*(float *)((char *)&v123 + v69) * *(float *)((char *)&v123 + v69));
          v69 += 4;
        }
        while (v69 != 12);
        v71 = 0;
        v72 = 1.0 / sqrtf(v70);
        do
        {
          *(float *)&v105[v71] = v72 * *(float *)((char *)&v123 + v71);
          v71 += 4;
        }
        while (v71 != 12);
        v73 = 0;
        v103 = *(_QWORD *)v105;
        v104 = *(_DWORD *)&v105[8];
        do
        {
          *(float *)&v105[v73] = *(float *)((char *)&v103 + v73) * 2000.0;
          v73 += 4;
        }
        while (v73 != 12);
        for (i = 0; i != 12; i += 4)
        {
          v75 = (float *)((char *)&v121 + i);
          v76 = *(float *)((char *)&v123 + i);
          v77 = *(float *)((char *)&v121 + i);
          if (v76 < v77)
            v77 = *(float *)((char *)&v123 + i);
          *v75 = v77;
          if (v75[3] >= v76)
            v76 = v75[3];
          v75[3] = v76;
        }
        for (j = 0; j != 12; j += 4)
        {
          v79 = (float *)&v120[j];
          v47 = *(float *)&v105[j];
          v80 = *(float *)&v120[j];
          if (v47 < v80)
            v80 = *(float *)&v105[j];
          *v79 = v80;
          if (v79[3] >= v47)
            v47 = v79[3];
          v79[3] = v47;
        }
        ++v49;
      }
      while (v49 != 6);
      v48 = v100 + 1;
      if (v100 == 5)
        goto LABEL_76;
    }
  }
  for (k = 0; k != 4; ++k)
  {
    if (a2 == 4)
    {
      v17 = (float *)((char *)&unk_189CE3B24 + 8 * k);
      v18 = *v17;
      v19 = v17[1];
      v11 = v18 * tanf(v6 * 0.5);
      v10 = -(float)(tanf(v4 * 0.5) * v19);
      v9 = -1.0;
    }
    else
    {
      v9 = 0.0;
      v10 = 0.0;
      v11 = 0.0;
      if (a2 == 2)
      {
        v12 = (float *)((char *)&unk_189CE3B24 + 8 * k);
        v13 = -(float)(a1[5] - (float)((float)(*v12 * 0.5) * v6));
        v14 = -(float)(a1[6] - (float)((float)(v12[1] * 0.5) * v4));
        v11 = tanf(v13);
        v15 = tanf(v14);
        v16 = cosf(v13);
        v9 = -1.0;
        v10 = (float)-v15 / v16;
      }
    }
    v20 = 0;
    *(float *)v105 = v11;
    *(float *)&v105[4] = v10;
    *(float *)&v105[8] = v9;
    do
    {
      v21 = (float *)((char *)&v121 + v20);
      v22 = *(float *)&v105[v20];
      v23 = *(float *)((char *)&v121 + v20);
      if (v22 < v23)
        v23 = *(float *)&v105[v20];
      *v21 = v23;
      if (v21[3] >= v22)
        v22 = v21[3];
      v21[3] = v22;
      v20 += 4;
    }
    while (v20 != 12);
    v24 = 0;
    *(float *)v105 = v11 * 2000.0;
    *(float *)&v105[4] = v10 * 2000.0;
    *(float *)&v105[8] = v9 * 2000.0;
    do
    {
      v25 = (float *)&v120[v24];
      v26 = *(float *)&v105[v24];
      v27 = *(float *)&v120[v24];
      if (v26 < v27)
        v27 = *(float *)&v105[v24];
      *v25 = v27;
      if (v25[3] >= v26)
        v26 = v25[3];
      v25[3] = v26;
      v24 += 4;
    }
    while (v24 != 12);
  }
LABEL_76:
  v81 = 0;
  v82 = v121;
  v83 = DWORD2(v121);
  *(_QWORD *)a3 = v121;
  *(_DWORD *)(a3 + 8) = v83;
  v84 = v120;
  do
  {
    v85 = v84 + 12;
    if ((v81 & 0xFFFFFFFE) == 0)
      v85 = v84;
    *(_DWORD *)&v105[4 * v81++] = *v85;
    v84 += 4;
  }
  while (v81 != 3);
  v86 = 0;
  v87 = *(_DWORD *)&v105[8];
  *(_QWORD *)(a3 + 12) = *(_QWORD *)v105;
  v88 = v122;
  *(_DWORD *)(a3 + 20) = v87;
  *(_DWORD *)(a3 + 24) = v82;
  *(_DWORD *)(a3 + 28) = v88;
  *(_DWORD *)(a3 + 32) = v83;
  do
  {
    v89 = &v120[v86 + 12];
    if (!v86)
      v89 = v120;
    *(_DWORD *)&v105[v86] = *(_DWORD *)v89;
    v86 += 4;
  }
  while (v86 != 12);
  v90 = 0;
  v91 = *(_DWORD *)&v105[8];
  *(_QWORD *)(a3 + 36) = *(_QWORD *)v105;
  v92 = HIDWORD(v121);
  *(_DWORD *)(a3 + 44) = v91;
  *(_DWORD *)(a3 + 48) = v92;
  *(_DWORD *)(a3 + 52) = HIDWORD(v82);
  *(_DWORD *)(a3 + 56) = v83;
  do
  {
    v93 = (_DWORD *)(((unint64_t)v120 | 0xC) + v90);
    if (v90 == 4)
      v93 = &v120[4];
    *(_DWORD *)&v105[v90] = *v93;
    v90 += 4;
  }
  while (v90 != 12);
  v94 = 0;
  v95 = *(_DWORD *)&v105[8];
  *(_QWORD *)(a3 + 60) = *(_QWORD *)v105;
  *(_DWORD *)(a3 + 68) = v95;
  do
  {
    v96 = (_DWORD *)(((unint64_t)&v121 | 0xC) + v94);
    if (v94 == 8)
      v96 = (_DWORD *)&v121 + 2;
    *(_DWORD *)&v105[v94] = *v96;
    v94 += 4;
  }
  while (v94 != 12);
  *(_QWORD *)&v97 = *(_QWORD *)&v105[4];
  *(_DWORD *)(a3 + 72) = *(_DWORD *)v105;
  v98 = *(_DWORD *)&v120[20];
  *((_QWORD *)&v97 + 1) = *(_QWORD *)&v120[12];
  *(_OWORD *)(a3 + 76) = v97;
  *(_DWORD *)(a3 + 92) = v98;
}

uint64_t GEOOrientedPositionFromPDPosition(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;

  v3 = a1;
  if (objc_msgSend(v3, "hasX")
    && objc_msgSend(v3, "hasY")
    && objc_msgSend(v3, "hasZ")
    && objc_msgSend(v3, "hasYaw")
    && objc_msgSend(v3, "hasPitch")
    && (objc_msgSend(v3, "hasRoll") & 1) != 0)
  {
    objc_msgSend(v3, "x");
    *(_QWORD *)a2 = v4;
    objc_msgSend(v3, "y");
    *(_QWORD *)(a2 + 8) = v5;
    objc_msgSend(v3, "z");
    *(_QWORD *)(a2 + 16) = v6;
    objc_msgSend(v3, "yaw");
    *(float *)&v7 = v7;
    *(_DWORD *)(a2 + 24) = LODWORD(v7);
    objc_msgSend(v3, "pitch");
    *(float *)&v8 = v8;
    *(_DWORD *)(a2 + 28) = LODWORD(v8);
    objc_msgSend(v3, "roll");
    *(float *)&v9 = v9;
    *(_DWORD *)(a2 + 32) = LODWORD(v9);
    v10 = 1;
  }
  else
  {
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 821);
    v10 = 0;
  }

  return v10;
}

void sub_189781428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t GEOOrientedPositionFromPDTilePosition(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  char v7;
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  uint64_t v22;
  FILE *v23;
  int v24;
  __int128 v26;
  uint64_t v27;
  double v28[3];
  double v29[3];
  double v30[3];
  double v31[3];
  double v32[3];

  v5 = a1;
  v6 = a2;
  if (!v6)
  {
    v23 = (FILE *)*MEMORY[0x1E0C80C10];
    v24 = 835;
    goto LABEL_11;
  }
  if (!objc_msgSend(v5, "hasX")
    || !objc_msgSend(v5, "hasY")
    || !objc_msgSend(v5, "hasAltitude")
    || !objc_msgSend(v5, "hasYaw")
    || !objc_msgSend(v5, "hasPitch")
    || (objc_msgSend(v5, "hasRoll") & 1) == 0)
  {
    v23 = (FILE *)*MEMORY[0x1E0C80C10];
    v24 = 836;
LABEL_11:
    fprintf(v23, "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", v24);
    v22 = 0;
    goto LABEL_12;
  }
  v7 = objc_msgSend(v6, "zoom");
  v8 = objc_msgSend(v6, "y");
  v9 = 1.0 / (double)(1 << v7);
  v10 = (double)(int)objc_msgSend(v6, "x");
  v11 = (double)((1 << v7) + ~v8);
  v32[0] = v9 * v10;
  v32[1] = v9 * v11;
  v32[2] = 0.0;
  v31[0] = v9 * (v10 + 1.0);
  v31[1] = v9 * v11;
  v31[2] = 0.0;
  geo::Mercator3<double>::toGeocentric<double>(v32, v30);
  geo::Mercator3<double>::toGeocentric<double>(v31, v29);
  v12 = gm::Matrix<double,3,1>::distanceToPoint<int,void>((uint64_t)v30, (uint64_t)v29);
  v13 = objc_msgSend(v5, "altitude");
  v14 = objc_msgSend(v5, "x");
  v15 = objc_msgSend(v5, "y");
  v16 = (double)v13 / 16383.0;
  v17 = (double)v14 / 16383.0;
  v18 = (double)v15 / 16383.0;
  v28[0] = v9 * (v10 + v17);
  v28[1] = v9 * (v11 + v18);
  v28[2] = v12 * v16;
  geo::Mercator3<double>::toGeocentric<double>(v28, (double *)&v26);
  *(_OWORD *)a3 = v26;
  *(_QWORD *)(a3 + 16) = v27;
  v19 = (double)objc_msgSend(v5, "yaw") / 16383.0 * 6.28318531;
  *(float *)(a3 + 24) = v19;
  v20 = (double)objc_msgSend(v5, "pitch") / 16383.0 * 6.28318531;
  *(float *)(a3 + 28) = v20;
  v21 = (double)objc_msgSend(v5, "roll") / 16383.0 * 6.28318531;
  *(float *)(a3 + 32) = v21;
  v22 = 1;
LABEL_12:

  return v22;
}

void sub_1897816B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double gm::Matrix<double,3,1>::distanceToPoint<int,void>(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  uint64_t v3;
  double v4;
  __int128 v6;

  for (i = 0; i != 24; i += 8)
    *(double *)((char *)&v6 + i) = *(double *)(a1 + i) - *(double *)(a2 + i);
  v3 = 0;
  v4 = 0.0;
  do
  {
    v4 = v4 + *(double *)((char *)&v6 + v3) * *(double *)((char *)&v6 + v3);
    v3 += 8;
  }
  while (v3 != 24);
  return sqrt(v4);
}

uint64_t `anonymous namespace'::frustumFromPDLensProjection(void *a1, int a2, _OWORD *a3)
{
  unsigned __int16 *v5;
  void *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD v21[6];
  float v22[9];

  v5 = a1;
  v6 = v5;
  if (!v5 || (~v5[42] & 0x1FF) != 0)
  {
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "%s:%d Metadata parse error: Decode error here\n", "/Library/Caches/com.apple.xbs/Sources/GeoServices/GeoServices/Tiles/Formats/Look Around/GEOMuninMetadata.mm", 174);
    v19 = 0;
  }
  else
  {
    v7 = *((double *)v5 + 4);
    v8 = *((double *)v5 + 3);
    v22[0] = v7;
    v22[1] = v8;
    v9 = *((double *)v5 + 5);
    v10 = *((double *)v5 + 6);
    v22[2] = v9;
    v22[3] = v10;
    v11 = *((double *)v5 + 7);
    v12 = *((double *)v5 + 1);
    v22[4] = v11;
    v22[5] = v12;
    v13 = *((double *)v5 + 2);
    v14 = *((double *)v5 + 8);
    v22[6] = v13;
    v22[7] = v14;
    v15 = *((double *)v5 + 9);
    v22[8] = v15;
    GEOMuninFrustumFromLensModel(v22, a2, (uint64_t)v21);
    v16 = v21[3];
    a3[2] = v21[2];
    a3[3] = v16;
    v17 = v21[5];
    a3[4] = v21[4];
    a3[5] = v17;
    v18 = v21[1];
    v19 = 1;
    *a3 = v21[0];
    a3[1] = v18;
  }

  return v19;
}

double geo::Mercator3<double>::toGeocentric<double>(double *a1, double *a2)
{
  double v4;
  long double v5;
  double v6;
  long double v7;
  double v8;
  double v9;
  __double2 v10;
  double v11;
  double v12;
  __double2 v13;
  double result;

  v4 = (*a1 + -0.5 + *a1 + -0.5) * 3.14159265;
  v5 = exp((a1[1] + -0.5 + a1[1] + -0.5) * 3.14159265);
  v6 = atan(v5) * 2.0 + -1.57079633;
  v7 = fmod(v4 + 3.14159265, 6.28318531);
  v8 = fmod(v7 + 6.28318531, 6.28318531) + -3.14159265;
  v9 = a1[2];
  v10 = __sincos_stret(v6);
  v11 = 6378137.0 / sqrt(v10.__sinval * -0.00669437999 * v10.__sinval + 1.0);
  v12 = v10.__cosval * (v9 + v11);
  v13 = __sincos_stret(v8);
  *a2 = v13.__cosval * v12;
  a2[1] = v13.__sinval * v12;
  result = v10.__sinval * (v9 + v11 * 0.99330562);
  a2[2] = result;
  return result;
}

void sub_189781F8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_189782834(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_189782CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  _Unwind_Resume(a1);
}

void sub_189782F34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1897830EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_189783188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897835D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_189783A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_189783E8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1897842EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1897844F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18978468C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189784BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_189784D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897850F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_189785270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897854A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_189785680(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189785AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_189785E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  _Unwind_Resume(a1);
}

void sub_18978624C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1897863A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897867A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22)
{
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1897869D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_189786EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_189787234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_189787600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_189787864(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1897879C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_189787C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_189788008(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id GEOGetGEOPOICategoryLog()
{
  if (qword_1ECDBCBE8 != -1)
    dispatch_once(&qword_1ECDBCBE8, &__block_literal_global_109_1);
  return (id)qword_1ECDBCBE0;
}

void sub_18978AD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18978B184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18978B2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18978B5F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOImageServiceImageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v26;
  unint64_t v28;
  _BOOL4 v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  char v38;
  char v39;
  char v40;
  int v41;
  int v42;
  void *v43;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_62;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      if (v20++ >= 9)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        v40 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            v42 = *v14++;
            v41 = v42;
            if (v42 != 1 && v41 != 2)
              break;
            *(_BYTE *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_73;
    }
    v28 = v21 >> 3;
    v29 = v13;
    if (!v15)
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    if ((_DWORD)v28 != 2)
    {
      if ((_DWORD)v28 != 1)
      {
        v37 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v37)
          goto LABEL_70;
        goto LABEL_58;
      }
      if (v29)
      {
        if ((*(_BYTE *)(a1 + 44) & 1) == 0)
        {
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_71;
        v9 -= *(_BYTE *)(a1 + 44) & 1;
LABEL_57:
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_58:
        if (v9)
          v39 = 1;
        else
          v39 = v13;
        if ((v39 & 1) == 0)
          goto LABEL_62;
        continue;
      }
LABEL_51:
      v38 = PBReaderSkipValueWithTag();
      v17 = (int *)MEMORY[0x1E0D82BC8];
      if ((v38 & 1) == 0)
      {
LABEL_70:
        v40 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v29)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
  {
    PBReaderReadData();
    v34 = objc_claimAutoreleasedReturnValue();
    v35 = 24;
LABEL_48:
    v36 = *(void **)(a1 + v35);
    *(_QWORD *)(a1 + v35) = v34;

    v17 = (int *)MEMORY[0x1E0D82BC8];
    --v9;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  v40 = 0;
  v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + 44) |= 1u;
  *(_BYTE *)(a1 + 44) |= 2u;
  if ((v40 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v17) == 0;
    if (!v13)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v13)
  {
LABEL_74:
    v43 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18978BB0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18978BF34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOImageServiceImageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOImageServiceImageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOImageServiceImageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOImageServiceImageReadAllFrom_initialTag;
  Specified = GEOImageServiceImageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18978C0C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOImageServiceImageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOImageServiceImageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18978C120(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceImageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_18978C458(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceImageIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v2 = (*(_BYTE *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18978C6DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceRequestReadAllFrom(_BYTE *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        v17 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v19 = 0;
          v20 = 0;
          v21 = 0;
          a1[24] |= 1u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_42;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_44:
          v30 = 16;
        }
        else
        {
          if ((_DWORD)v17 != 2)
          {
            if ((_DWORD)v17 == 1)
            {
              PBReaderReadData();
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              if (v18)
                objc_msgSend(a1, "addImageId:", v18);

            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_52;
            }
            continue;
          }
          v25 = 0;
          v26 = 0;
          v21 = 0;
          a1[24] |= 2u;
          while (1)
          {
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
              break;
            v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
            *(_QWORD *)&v3[v27] = v28 + 1;
            v21 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0)
              goto LABEL_46;
            v25 += 7;
            v14 = v26++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_48:
          v30 = 20;
        }
        *(_DWORD *)&a1[v30] = v21;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v31 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    v31 = 0;
  }
  objc_sync_exit(v3);

  return v31;
}

void sub_18978D2B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceRequestReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOImageServiceRequestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18978D310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceRequestIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_42;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_42;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_44;
        v23 = 0;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
            goto LABEL_39;
          v26 = v25 + 1;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v22 = v23++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_41;
        }
      }
      if ((_DWORD)v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        v28 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_42;
    }
    if ((v8 & 7) != 0)
      goto LABEL_44;
    v17 = 0;
    while (1)
    {
      v18 = *v2;
      v19 = *(_QWORD *)&a1[v18];
      if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
        break;
      v20 = v19 + 1;
      v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
      *(_QWORD *)&a1[v18] = v20;
      if (v21 < 0)
      {
        v22 = v17++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOImageServiceResponseReadAllFrom(_BYTE *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  GEOImageServiceImage *v35;
  uint64_t v36;
  _BOOL8 v37;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      while (!v5[*v8])
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        switch((v12 >> 3))
        {
          case 1u:
            v19 = 0;
            v20 = 0;
            v21 = 0;
            a1[28] |= 2u;
            while (1)
            {
              v22 = *v6;
              v23 = *(_QWORD *)&v5[v22];
              if (v23 == -1 || v23 >= *(_QWORD *)&v5[*v7])
                break;
              v24 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v23);
              *(_QWORD *)&v5[v22] = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if ((v24 & 0x80) == 0)
                goto LABEL_47;
              v19 += 7;
              v16 = v20++ >= 9;
              if (v16)
              {
                LODWORD(v21) = 0;
                goto LABEL_49;
              }
            }
            v5[*v8] = 1;
LABEL_47:
            if (v5[*v8])
              LODWORD(v21) = 0;
LABEL_49:
            v36 = 20;
            goto LABEL_58;
          case 2u:
            v25 = 0;
            v26 = 0;
            v21 = 0;
            a1[28] |= 4u;
            while (2)
            {
              v27 = *v6;
              v28 = *(_QWORD *)&v5[v27];
              if (v28 == -1 || v28 >= *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v29 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v28);
                *(_QWORD *)&v5[v27] = v28 + 1;
                v21 |= (unint64_t)(v29 & 0x7F) << v25;
                if (v29 < 0)
                {
                  v25 += 7;
                  v16 = v26++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v21) = 0;
LABEL_53:
            v36 = 24;
            goto LABEL_58;
          case 3u:
            v30 = 0;
            v31 = 0;
            v21 = 0;
            a1[28] |= 1u;
            while (2)
            {
              v32 = *v6;
              v33 = *(_QWORD *)&v5[v32];
              if (v33 == -1 || v33 >= *(_QWORD *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                v34 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v33);
                *(_QWORD *)&v5[v32] = v33 + 1;
                v21 |= (unint64_t)(v34 & 0x7F) << v30;
                if (v34 < 0)
                {
                  v30 += 7;
                  v16 = v31++ >= 9;
                  if (v16)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8])
              LODWORD(v21) = 0;
LABEL_57:
            v36 = 16;
LABEL_58:
            *(_DWORD *)&a1[v36] = v21;
            goto LABEL_59;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_62;
            v35 = objc_alloc_init(GEOImageServiceImage);
            if (!GEOImageServiceImageReadAllFrom((uint64_t)v35, v5, a3))
            {

              goto LABEL_62;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addImages:", v35, 0, 0);

LABEL_59:
            if (*(_QWORD *)&v5[*v6] >= *(_QWORD *)&v5[*v7])
              goto LABEL_60;
            break;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_62;
            goto LABEL_59;
        }
      }
    }
LABEL_60:
    v37 = v5[*v8] == 0;
  }
  else
  {
LABEL_62:
    v37 = 0;
  }
  objc_sync_exit(v5);

  return v37;
}

void sub_18978EC6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceResponseReadFrom(_BYTE *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOImageServiceResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18978ECCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOImageServiceResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  _BOOL8 v32;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v22 = 0;
          while (1)
          {
            v23 = *v2;
            v24 = *(_QWORD *)&a1[v23];
            if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v25 = v24 + 1;
            v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
            *(_QWORD *)&a1[v23] = v25;
            if (v26 < 0)
            {
              v21 = v22++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_53;
          v27 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOImageServiceImageIsValid(a1))
            goto LABEL_53;
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v28 = *v2;
        v29 = *(_QWORD *)&a1[v28];
        if (v29 == -1 || v29 >= *(_QWORD *)&a1[*v3])
          break;
        v30 = v29 + 1;
        v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
        *(_QWORD *)&a1[v28] = v30;
        if (v31 < 0)
        {
          v21 = v27++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

id GEOGetDefaultsForStateCapture()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  void (*v5)(void);
  void *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void (*v10)(void);
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", 3);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", _GEOConfigRangeCheckEnabled());
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setObject:forKeyedSubscript:", v1, CFSTR("RangeClampEnabled"));

  _GEOConfigStorageCFPrefsReadWrite();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  os_unfair_lock_lock_with_options();
  if (objc_msgSend((id)qword_1ECDBCBF8, "count"))
  {
    v4 = 0;
    do
    {
      v5 = (void (*)(void))objc_msgSend((id)qword_1ECDBCBF8, "pointerAtIndex:", v4);
      if (v5)
      {
        v5();
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "addObjectsFromArray:", v6);

      }
      ++v4;
    }
    while (v4 < objc_msgSend((id)qword_1ECDBCBF8, "count"));
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&_MergedGlobals_334);
  _valuesForStore(v2, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setObject:forKeyedSubscript:", v7, CFSTR("user_defaults"));

  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  os_unfair_lock_lock_with_options();
  if (objc_msgSend((id)qword_1ECDBCC00, "count"))
  {
    v9 = 0;
    do
    {
      v10 = (void (*)(void))objc_msgSend((id)qword_1ECDBCC00, "pointerAtIndex:", v9);
      if (v10)
      {
        v10();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addObjectsFromArray:", v11);

      }
      ++v9;
    }
    while (v9 < objc_msgSend((id)qword_1ECDBCC00, "count"));
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&_MergedGlobals_334);
  _GEOConfigStorageUser();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  _valuesForStore(v12, v8);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setObject:forKeyedSubscript:", v13, CFSTR("config_store"));

  _GEOConfigStorageXPC();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  _valuesForStore(v14, v8);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setObject:forKeyedSubscript:", v15, CFSTR("config_store_xpc"));

  _GEOConfigStorageSystem();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  _valuesForStore(v16, v8);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setObject:forKeyedSubscript:", v17, CFSTR("config_store_system"));

  return v0;
}

id _valuesForStore(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a2;
  objc_msgSend(a1, "getConfigValueForKey:countryCode:options:source:", 0, 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v5 = (void *)MEMORY[0x1E0C99E20];
    objc_msgSend(v4, "allKeys");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setWithArray:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "minusSet:", v3);
    objc_msgSend(v7, "removeObject:", CFSTR("DefaultsSanitizedVersion"));
    objc_msgSend(v7, "removeObject:", CFSTR("GEODefaultsRevision"));
    objc_msgSend(v7, "removeObject:", CFSTR("DisableSundanceCleanup"));
    v8 = (void *)objc_msgSend(v4, "mutableCopy");
    objc_msgSend(v7, "allObjects");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectsForKeys:", v9);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_18978FEC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18979016C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189790774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_189790988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_189790AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189790BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189790DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189790ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189791014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_1897910F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189791238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_189791320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189791434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1897914E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18979158C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189791624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189791778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189791864(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_189792BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetSubscriptionExpirationLog()
{
  if (qword_1ECDBCC20 != -1)
    dispatch_once(&qword_1ECDBCC20, &__block_literal_global_122_1);
  return (id)qword_1ECDBCC18;
}

id _createBGNonRepeatingSystemTaskRequest(void *a1, double a2)
{
  id v3;
  void *v4;

  v3 = a1;
  if (BackgroundSystemTasksLibraryCore())
  {
    v4 = (void *)objc_msgSend(objc_alloc((Class)getBGNonRepeatingSystemTaskRequestClass()), "initWithIdentifier:", v3);
    objc_msgSend(v4, "setPriority:", 2);
    objc_msgSend(v4, "setPreventsDeviceSleep:", 1);
    objc_msgSend(v4, "setRequiresExternalPower:", 0);
    objc_msgSend(v4, "setRequiresUserInactivity:", 1);
    objc_msgSend(v4, "setRequiresProtectionClass:", 3);
    objc_msgSend(v4, "setScheduleAfter:", a2);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id _nextSubscriptionUpdateRequiredExpirationDate()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;

  +[GEOOfflineDataConfiguration sharedConfiguration](GEOOfflineDataConfiguration, "sharedConfiguration");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "lastUpdatedDate");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    v3 = v1;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v3 = (id)objc_claimAutoreleasedReturnValue();
  }
  v4 = v3;

  objc_msgSend(v4, "dateByAddingTimeInterval:", (double)(unint64_t)GEOConfigGetUint64(GeoOfflineConfig_UpdateRequiredExpirationInterval, (uint64_t)off_1EDF4EA78));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_189793974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  _Block_object_dispose(&a36, 8);
  _Unwind_Resume(a1);
}

void sub_189794464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a38, 8);
  _Unwind_Resume(a1);
}

void sub_189795A80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_189795C38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189795CC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t geo::MapNode::MapNode(uint64_t a1, _OWORD *a2, void *a3, uint64_t a4)
{
  id v5;
  uint64_t v6;
  void *v7;

  *(_QWORD *)a1 = off_1E1BF6930;
  *(_OWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = a4;
  v5 = a3;
  GEOVectorTileRetain(v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;

  return a1;
}

BOOL geo::MapNode::operator==(_QWORD *a1, _QWORD *a2)
{
  int v4;

  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 24))(a1);
  return v4 == (*(unsigned int (**)(_QWORD *))(*a2 + 24))(a2) && a1[3] == a2[3] && a1[4] == a2[4];
}

id geo::MapNode::tile(id *this)
{
  return this[3];
}

uint64_t geo::MapNode::junction(geo::MapNode *this)
{
  return *((_QWORD *)this + 4);
}

void geo::MapNode::~MapNode(void **this)
{
  *this = off_1E1BF6930;
  GEOVectorTileRelease(this[3]);

}

id GEOStateSnapshot(void *a1)
{
  id v1;
  void *v2;
  uint64_t i;
  unint64_t v4;
  __CFString *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", CFSTR("Service URLs:\n"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = 0; i != 65; ++i)
  {
    v4 = i + 1;
    if ((unint64_t)(i - 22) < 0x2B || v4 <= 0x15 && ((1 << v4) & 0x3DDE26) != 0)
    {
      if (v4 > 0x41)
        v5 = 0;
      else
        v5 = off_1E1C20C40[i];
      GEOGetURLWithSource(v4, 0);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "appendFormat:", CFSTR("\t%@: %@\n"), v5, v6);

    }
  }
  objc_msgSend(v2, "appendString:", CFSTR("\n"));
  +[GEOExperimentConfiguration sharedConfiguration](GEOExperimentConfiguration, "sharedConfiguration");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "detailedDescription");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "appendFormat:", CFSTR("A/B Experiment Configuration:\n%@\n\n"), v8);

  +[GEOResourceManifestManager modernManagerForConfiguration:](GEOResourceManifestManager, "modernManagerForConfiguration:", v1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "detailedDescription");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "appendFormat:", CFSTR("%@"), v10);

  return v2;
}

id GEOStateSnapshotDictionaryRepresentation()
{
  id v0;
  id v1;
  uint64_t i;
  unint64_t v3;
  void *v4;
  void *v5;
  __CFString *v6;
  void *v7;
  void *v8;

  v0 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v1 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  for (i = 0; i != 65; ++i)
  {
    v3 = i + 1;
    if ((unint64_t)(i - 22) < 0x2B || v3 <= 0x15 && ((1 << v3) & 0x3DDE26) != 0)
    {
      GEOGetURLWithSource(i + 1, 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "absoluteString");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (v5)
      {
        if (v3 > 0x41)
          v6 = 0;
        else
          v6 = off_1E1C20C40[i];
        objc_msgSend(v1, "setObject:forKey:", v5, v6);
      }

    }
  }
  objc_msgSend(v0, "setObject:forKey:", v1, CFSTR("Service URLs"));
  +[GEOExperimentConfiguration sharedConfiguration](GEOExperimentConfiguration, "sharedConfiguration");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "detailedDescriptionDictionaryRepresentation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
    objc_msgSend(v0, "setObject:forKey:", v8, CFSTR("A/B Experiment Configuration"));

  return v0;
}

uint64_t GEOGloriaQuadIDTileKeyMake(gloria::MortonUtils *this, unsigned int a2, int a3)
{
  uint64_t v4;
  __int128 v6;

  LOBYTE(v6) = 12;
  gloria::MortonUtils::XYToQuadId((gloria::MortonUtils *)this, a2);
  *(_QWORD *)((char *)&v6 + 1) = a3 & 0x3F | ((gloria::LEADING_BITS_VALUE_LUT[a3] | v4) << 6);
  return v6;
}

uint64_t GEOGloriaQuadIDTileKeyMakeWithQuadKey(unint64_t a1)
{
  char v1;
  _BYTE v3[9];

  v1 = __clz(a1);
  *(_QWORD *)&v3[1] = ((unint64_t)(char)(63
                                                                             - v1
                                                                             + (((63 - v1) & 0x80) >> 7)) >> 1) | (a1 << 6);
  return *(_QWORD *)v3;
}

uint64_t GEOCellularInfoTileKeyMakeWithCoordinate(char a1, uint64_t a2, uint64_t a3, const unsigned __int8 *a4, double a5, double a6)
{
  return GEOGloriaQuadIDTileKeyMakeWithCoordinate(a1, a5, a6, a2, a3, a4);
}

uint64_t GEOCellularInfoTileKeyMake(gloria::MortonUtils *a1, unsigned int a2, int a3)
{
  return GEOGloriaQuadIDTileKeyMake(a1, a2, a3);
}

uint64_t GEOCellularInfoTileKeyMakeWithQuadKey(unint64_t a1)
{
  char v1;
  _BYTE v3[9];

  v1 = __clz(a1);
  *(_QWORD *)&v3[1] = ((unint64_t)(char)(63
                                                                             - v1
                                                                             + (((63 - v1) & 0x80) >> 7)) >> 1) | (a1 << 6);
  return *(_QWORD *)v3;
}

void sub_1897A2524(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897A26C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1897A2874(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897A2AC8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1897A2B44(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1897A3024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1897A38E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id GEOGetGEOComposedRouteLog()
{
  if (qword_1ECDBCC40 != -1)
    dispatch_once(&qword_1ECDBCC40, &__block_literal_global_249_0);
  return (id)_MergedGlobals_337;
}

void sub_1897A4068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1897A4274(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1897A4494(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1897A45E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

unint64_t GEOCountryRegionTupleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOCountryRegionTupleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897A5144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountryRegionTupleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_1897A5494(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOCountryRegionTupleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897A573C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A5960(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericTileReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _DWORD *v7;
  _DWORD *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  unint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  _DWORD *v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (_DWORD *)(a1 + 4);
    v8 = (_DWORD *)(a1 + 8);
    v9 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v3;
        v14 = *(_QWORD *)(a2 + v13);
        if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v4))
          break;
        v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v14 + 1;
        v12 |= (unint64_t)(v15 & 0x7F) << v10;
        if ((v15 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        if (v11++ >= 9)
        {
          v12 = 0;
          v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v12 = 0;
LABEL_14:
      if (v17 || (v12 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v19 = v12 >> 3;
      if ((v12 >> 3) == 3)
      {
        v28 = 0;
        v29 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
            break;
          v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v31);
          *(_QWORD *)(a2 + v30) = v31 + 1;
          v22 |= (unint64_t)(v32 & 0x7F) << v28;
          if ((v32 & 0x80) == 0)
          {
            v27 = (_DWORD *)a1;
            goto LABEL_48;
          }
          v28 += 7;
          v26 = v29++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            v27 = (_DWORD *)a1;
            goto LABEL_50;
          }
        }
        v27 = (_DWORD *)a1;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v19 == 2)
        break;
      if ((_DWORD)v19 == 1)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 12) |= 4u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          {
            v27 = v8;
            goto LABEL_47;
          }
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            break;
          v20 += 7;
          v26 = v21++ > 8;
          if (v26)
          {
            LODWORD(v22) = 0;
            v27 = v8;
            goto LABEL_50;
          }
        }
        v27 = v8;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v33 = 0;
    v34 = 0;
    v22 = 0;
    *(_BYTE *)(a1 + 12) |= 2u;
    while (1)
    {
      v35 = *v3;
      v36 = *(_QWORD *)(a2 + v35);
      if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
      {
        v27 = v7;
        goto LABEL_47;
      }
      v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v36);
      *(_QWORD *)(a2 + v35) = v36 + 1;
      v22 |= (unint64_t)(v37 & 0x7F) << v33;
      if ((v37 & 0x80) == 0)
        break;
      v33 += 7;
      v26 = v34++ > 8;
      if (v26)
      {
        LODWORD(v22) = 0;
        v27 = v7;
        goto LABEL_50;
      }
    }
    v27 = v7;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v22) = 0;
LABEL_50:
    *v27 = v22;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL GEOLanguageReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  id v24;
  void *v25;
  _BOOL8 v26;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          PBReaderReadString();
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          if (v23)
            objc_msgSend((id)a1, "addLanguage:", v23);

        }
        else if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_36;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_38:
          *(_DWORD *)(a1 + 24) = v19;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v24 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v25 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v24;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_41;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_1897A65F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLanguageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLanguageReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897A6658(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLanguageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v24;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v9 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_45:
          v17 = 0;
          goto LABEL_44;
        }
      }
      else if ((v9 >> 3) == 1)
      {
        v17 = 0;
        if (v5 || (v9 & 7) != 0)
          goto LABEL_44;
        v18 = 0;
        while (1)
        {
          v19 = *v2;
          v20 = *(_QWORD *)&a1[v19];
          if (v20 == -1 || v20 >= *(_QWORD *)&a1[*v3])
            break;
          v21 = v20 + 1;
          v22 = *(char *)(*(_QWORD *)&a1[*v6] + v20);
          *(_QWORD *)&a1[v19] = v21;
          v5 = 1;
          if (v22 < 0 && v18++ <= 8)
            continue;
          goto LABEL_35;
        }
        v5 = 1;
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_45;
      }
LABEL_35:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  if (a1[*v4])
    v24 = 1;
  else
    v24 = v5 == 0;
  v17 = !v24;
LABEL_44:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTileSetIsValid(char *a1)
{
  _BOOL4 v2;
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t v17;
  int v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  int v26;
  BOOL v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  BOOL v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  _BOOL4 AllFrom;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  BOOL v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  int v103;
  _BOOL8 v104;
  _QWORD v106[2];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;

  v111 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = 0;
  v110 = 0;
  v3 = (int *)MEMORY[0x1E0D82BF0];
  v109 = 0;
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v5])
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v3;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v4])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        v13 = v8++ >= 9;
        if (v13)
        {
          v9 = 0;
          v14 = a1[*v5];
          goto LABEL_14;
        }
      }
      a1[*v5] = 1;
LABEL_12:
      v14 = a1[*v5];
      if (a1[*v5])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v9 >> 3))
      {
        case 1u:
          if (v15 == 2)
            goto LABEL_175;
          goto LABEL_219;
        case 2u:
          if (v15 == 2)
            goto LABEL_175;
          goto LABEL_219;
        case 3u:
          v17 = v109;
          if (!(_DWORD)v109)
            goto LABEL_184;
          if ((_DWORD)v109 == 3)
            goto LABEL_219;
          if (HIDWORD(v109))
          {
            if (HIDWORD(v109) == 3 || v110)
              goto LABEL_219;
            v17 = 2;
          }
          else
          {
            v17 = 1;
          }
LABEL_184:
          *((_DWORD *)&v109 + v17) = 3;
          if (v15)
            goto LABEL_219;
          v89 = 0;
          while (1)
          {
            v90 = *v3;
            v91 = *(_QWORD *)&a1[v90];
            if (v91 == -1 || v91 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v92 = v91 + 1;
            v93 = *(char *)(*(_QWORD *)&a1[*v6] + v91);
            *(_QWORD *)&a1[v90] = v92;
            if (v93 < 0)
            {
              v33 = v89++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark())
            goto LABEL_219;
          objc_msgSend(a1, "position");
          objc_msgSend(a1, "length");
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
          {
            v18 = 0;
            goto LABEL_178;
          }
          v18 = 0;
          while (!a1[*v5])
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            while (2)
            {
              v22 = *v3;
              v23 = *(_QWORD *)&a1[v22];
              if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v4])
              {
                a1[*v5] = 1;
              }
              else
              {
                v24 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v23);
                *(_QWORD *)&a1[v22] = v23 + 1;
                v21 |= (unint64_t)(v24 & 0x7F) << v19;
                if (v24 < 0)
                {
                  v19 += 7;
                  v13 = v20++ >= 9;
                  if (v13)
                  {
                    v21 = 0;
                    v25 = a1[*v5];
                    goto LABEL_44;
                  }
                  continue;
                }
              }
              break;
            }
            v25 = a1[*v5];
            if (a1[*v5])
              v21 = 0;
LABEL_44:
            v26 = v21 & 7;
            if (v25)
              v27 = 1;
            else
              v27 = v26 == 4;
            if (!v27)
            {
              switch((v21 >> 3))
              {
                case 1u:
                  if (v18 || (v21 & 7) != 0)
                    goto LABEL_218;
                  v28 = 0;
                  do
                  {
                    v29 = *v3;
                    v30 = *(_QWORD *)&a1[v29];
                    if (v30 == -1 || v30 >= *(_QWORD *)&a1[*v4])
                    {
                      v18 = 1;
                      a1[*v5] = 1;
                      goto LABEL_86;
                    }
                    v31 = v30 + 1;
                    v32 = *(char *)(*(_QWORD *)&a1[*v6] + v30);
                    *(_QWORD *)&a1[v29] = v31;
                    v18 = 1;
                    if ((v32 & 0x80000000) == 0)
                      break;
                    v33 = v28++ > 8;
                  }
                  while (!v33);
                  goto LABEL_86;
                case 2u:
                  if (v26 == 2)
                  {
                    v107 = 0;
                    v108 = 0;
                    if (PBReaderPlaceMark())
                    {
                      if (GEOTileSetRegionIsValid(a1))
                        goto LABEL_75;
                    }
                  }
                  goto LABEL_218;
                case 3u:
                  if ((v21 & 7) != 0)
                    goto LABEL_218;
                  v34 = 0;
                  while (1)
                  {
                    v35 = *v3;
                    v36 = *(_QWORD *)&a1[v35];
                    if (v36 == -1 || v36 >= *(_QWORD *)&a1[*v4])
                      goto LABEL_84;
                    v37 = v36 + 1;
                    v38 = *(char *)(*(_QWORD *)&a1[*v6] + v36);
                    *(_QWORD *)&a1[v35] = v37;
                    if (v38 < 0)
                    {
                      v33 = v34++ > 8;
                      if (!v33)
                        continue;
                    }
                    goto LABEL_86;
                  }
                case 4u:
                  if (v26 != 2)
                    goto LABEL_218;
                  if (!PBReaderPlaceMark())
                    goto LABEL_218;
                  v107 = objc_msgSend(a1, "position");
                  v108 = objc_msgSend(a1, "length");
                  v106[0] = 0;
                  v106[1] = 0;
                  AllFrom = GEOGenericTileReadAllFrom((uint64_t)v106, (uint64_t)a1);
                  PBReaderRecallMark();
                  if (!AllFrom)
                    goto LABEL_218;
LABEL_75:
                  PBReaderRecallMark();
                  goto LABEL_86;
                case 5u:
                  if ((v21 & 7) != 0)
                    goto LABEL_218;
                  v40 = 0;
                  break;
                default:
                  if ((PBReaderSkipValueWithTag() & 1) != 0)
                    goto LABEL_86;
LABEL_218:
                  PBReaderRecallMark();
                  goto LABEL_219;
              }
              while (1)
              {
                v41 = *v3;
                v42 = *(_QWORD *)&a1[v41];
                if (v42 == -1 || v42 >= *(_QWORD *)&a1[*v4])
                  break;
                v43 = v42 + 1;
                v44 = *(char *)(*(_QWORD *)&a1[*v6] + v42);
                *(_QWORD *)&a1[v41] = v43;
                if (v44 < 0)
                {
                  v33 = v40++ > 8;
                  if (!v33)
                    continue;
                }
                goto LABEL_86;
              }
LABEL_84:
              a1[*v5] = 1;
LABEL_86:
              if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
                break;
              continue;
            }
            break;
          }
LABEL_178:
          v87 = a1[*v5];
          PBReaderRecallMark();
          if (v87)
            v88 = 1;
          else
            v88 = v18 == 0;
          if (v88)
            goto LABEL_219;
LABEL_182:
          PBReaderRecallMark();
          goto LABEL_211;
        case 6u:
          v45 = v109;
          if (!(_DWORD)v109)
            goto LABEL_193;
          if ((_DWORD)v109 == 6)
            goto LABEL_219;
          if (HIDWORD(v109))
          {
            if (HIDWORD(v109) == 6 || v110)
              goto LABEL_219;
            v45 = 2;
          }
          else
          {
            v45 = 1;
          }
LABEL_193:
          *((_DWORD *)&v109 + v45) = 6;
          if (v15)
            goto LABEL_219;
          v94 = 0;
          while (1)
          {
            v95 = *v3;
            v96 = *(_QWORD *)&a1[v95];
            if (v96 == -1 || v96 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v97 = v96 + 1;
            v98 = *(char *)(*(_QWORD *)&a1[*v6] + v96);
            *(_QWORD *)&a1[v95] = v97;
            if (v98 < 0)
            {
              v33 = v94++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 7u:
          v46 = v109;
          if (!(_DWORD)v109)
            goto LABEL_202;
          if ((_DWORD)v109 == 7)
            goto LABEL_219;
          if (HIDWORD(v109))
          {
            if (HIDWORD(v109) == 7 || v110)
            {
LABEL_219:
              PBReaderRecallMark();
              return 0;
            }
            v46 = 2;
          }
          else
          {
            v46 = 1;
          }
LABEL_202:
          *((_DWORD *)&v109 + v46) = 7;
          if (v15)
            goto LABEL_219;
          v99 = 0;
          while (1)
          {
            v100 = *v3;
            v101 = *(_QWORD *)&a1[v100];
            if (v101 == -1 || v101 >= *(_QWORD *)&a1[*v4])
              break;
            v102 = v101 + 1;
            v103 = *(char *)(*(_QWORD *)&a1[*v6] + v101);
            *(_QWORD *)&a1[v100] = v102;
            if (v103 < 0)
            {
              v33 = v99++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
LABEL_210:
          a1[*v5] = 1;
LABEL_211:
          if (*(_QWORD *)&a1[*v3] >= *(_QWORD *)&a1[*v4])
            goto LABEL_212;
          break;
        case 9u:
          if (v15 == 2)
            goto LABEL_175;
          goto LABEL_219;
        case 0xAu:
          if (v15 != 2)
            goto LABEL_219;
          v107 = 0;
          v108 = 0;
          if (!PBReaderPlaceMark() || !GEOLanguageIsValid(a1))
            goto LABEL_219;
          goto LABEL_182;
        case 0xBu:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v47 = 0;
          while (1)
          {
            v48 = *v3;
            v49 = *(_QWORD *)&a1[v48];
            if (v49 == -1 || v49 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v50 = v49 + 1;
            v51 = *(char *)(*(_QWORD *)&a1[*v6] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v33 = v47++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0xCu:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v52 = 0;
          while (1)
          {
            v53 = *v3;
            v54 = *(_QWORD *)&a1[v53];
            if (v54 == -1 || v54 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v55 = v54 + 1;
            v56 = *(char *)(*(_QWORD *)&a1[*v6] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v33 = v52++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0xDu:
          if (v15 == 2)
          {
            v107 = 0;
            v108 = 0;
            if (PBReaderPlaceMark())
            {
              if (GEOCountryRegionTupleIsValid(a1))
                goto LABEL_182;
            }
          }
          goto LABEL_219;
        case 0xEu:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v57 = 0;
          while (1)
          {
            v58 = *v3;
            v59 = *(_QWORD *)&a1[v58];
            if (v59 == -1 || v59 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v60 = v59 + 1;
            v61 = *(char *)(*(_QWORD *)&a1[*v6] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v33 = v57++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0xFu:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v62 = 0;
          while (1)
          {
            v63 = *v3;
            v64 = *(_QWORD *)&a1[v63];
            if (v64 == -1 || v64 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v65 = v64 + 1;
            v66 = *(char *)(*(_QWORD *)&a1[*v6] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v33 = v62++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0x10u:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v67 = 0;
          while (1)
          {
            v68 = *v3;
            v69 = *(_QWORD *)&a1[v68];
            if (v69 == -1 || v69 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v70 = v69 + 1;
            v71 = *(char *)(*(_QWORD *)&a1[*v6] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v33 = v67++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0x11u:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v72 = 0;
          while (1)
          {
            v73 = *v3;
            v74 = *(_QWORD *)&a1[v73];
            if (v74 == -1 || v74 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v75 = v74 + 1;
            v76 = *(char *)(*(_QWORD *)&a1[*v6] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v33 = v72++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0x12u:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v77 = 0;
          while (1)
          {
            v78 = *v3;
            v79 = *(_QWORD *)&a1[v78];
            if (v79 == -1 || v79 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v80 = v79 + 1;
            v81 = *(char *)(*(_QWORD *)&a1[*v6] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v33 = v77++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0x13u:
          if ((v9 & 7) != 0)
            goto LABEL_219;
          v82 = 0;
          while (1)
          {
            v83 = *v3;
            v84 = *(_QWORD *)&a1[v83];
            if (v84 == -1 || v84 >= *(_QWORD *)&a1[*v4])
              goto LABEL_210;
            v85 = v84 + 1;
            v86 = *(char *)(*(_QWORD *)&a1[*v6] + v84);
            *(_QWORD *)&a1[v83] = v85;
            if (v86 < 0)
            {
              v33 = v82++ > 8;
              if (!v33)
                continue;
            }
            goto LABEL_211;
          }
        case 0x14u:
          if (v15 == 2)
            goto LABEL_175;
          goto LABEL_219;
        default:
LABEL_175:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_219;
          goto LABEL_211;
      }
    }
LABEL_212:
    v2 = v110 != 0;
  }
  if (a1[*v5])
    v104 = 0;
  else
    v104 = v2;
  PBReaderRecallMark();
  return v104;
}

void sub_1897A7F5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A8408(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTileSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const float *v12;
  uint32x4_t v13;
  int8x16_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  int *v21;
  int *v22;
  int *v23;
  int *v24;
  char v25;
  unsigned int v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  id v48;
  void *v49;
  int v50;
  GEOTileSetVersion *v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  void *v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  char v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  char v101;
  unsigned int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  int v113;
  void *v114;
  int v116;
  int *v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (const float *)(a1 + 128);
  v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE4080), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_189CE4090), v14)));
  while (2)
  {
    v16 = 1;
    v17 = 1;
    v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v19 = v15 > 4;
        v20 = v19 | v11;
        v118 = v19 & ~(_BYTE)v11 | v9;
        v119 = v8;
        v121 = v19 | v11 | v118;
        if ((((v19 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        v122 = (v21 == 0) | v20;
        v22 = (int *)MEMORY[0x1E0D82BF0];
        v23 = (int *)MEMORY[0x1E0D82BC8];
        v24 = (int *)MEMORY[0x1E0D82BB8];
        v120 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        v16 = v9;
LABEL_8:
        v17 = v10;
        v18 = v11;
LABEL_10:
        ++v7;
        v9 = v16;
        v10 = v17;
        v11 = v18;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v22) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v23))
  {
    v25 = 0;
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *v22;
      v29 = *(_QWORD *)(v3 + v28);
      if (v29 == -1 || v29 >= *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v29);
      *(_QWORD *)(v3 + v28) = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0)
        goto LABEL_25;
      v25 += 7;
      v31 = v26++ >= 9;
      if (v31)
      {
        v27 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v23) = 1;
LABEL_25:
    v32 = *(unsigned __int8 *)(v3 + *v23);
    if (*(_BYTE *)(v3 + *v23))
      v27 = 0;
LABEL_27:
    if (v32 || (v27 & 7) == 4)
      break;
    v34 = v27 >> 3;
    v35 = v20;
    if ((v122 & 1) == 0)
    {
      v36 = v21;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35)
          goto LABEL_163;
        if ((*(_BYTE *)(a1 + 129) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 24;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_243;
        v110 = (int)(*(_DWORD *)(a1 + 128) << 22) >> 31;
        goto LABEL_217;
      case 2:
        if (!v35)
          goto LABEL_163;
        if ((*(_BYTE *)(a1 + 129) & 0x20) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 56;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_243;
        v110 = (int)(*(_DWORD *)(a1 + 128) << 18) >> 31;
        goto LABEL_217;
      case 3:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        while (2)
        {
          v45 = *v22;
          v46 = *(_QWORD *)(v3 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v46);
            *(_QWORD *)(v3 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              v31 = v43++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_168:
        v107 = 116;
        goto LABEL_210;
      case 5:
        if (!v35 || (*(_BYTE *)(a1 + 129) & 0x80) != 0)
          goto LABEL_163;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_243;
        v51 = objc_alloc_init(GEOTileSetVersion);
        if (!GEOTileSetVersionReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
          goto LABEL_242;
        PBReaderRecallMark();
        -[GEOTileSet _addNoFlagsValidVersion:](a1, v51);
        goto LABEL_162;
      case 6:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v52 = 0;
        v53 = 0;
        v44 = 0;
        while (2)
        {
          v54 = *v22;
          v55 = *(_QWORD *)(v3 + v54);
          if (v55 == -1 || v55 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v55);
            *(_QWORD *)(v3 + v54) = v55 + 1;
            v44 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              v31 = v53++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_172:
        v107 = 108;
        goto LABEL_210;
      case 7:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v57 = 0;
        v58 = 0;
        v44 = 0;
        while (2)
        {
          v59 = *v22;
          v60 = *(_QWORD *)(v3 + v59);
          if (v60 == -1 || v60 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v61 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v60);
            *(_QWORD *)(v3 + v59) = v60 + 1;
            v44 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              v31 = v58++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_176:
        v107 = 112;
        goto LABEL_210;
      case 9:
        if (!v35)
          goto LABEL_163;
        if ((*(_BYTE *)(a1 + 129) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_243;
          v110 = (int)(*(_DWORD *)(a1 + 128) << 19) >> 31;
LABEL_217:
          v7 += v110;
        }
        else
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 48;
LABEL_83:
          v62 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v7;
        }
        goto LABEL_218;
      case 10:
        if (!v35 || (*(_BYTE *)(a1 + 129) & 0x40) != 0)
          goto LABEL_163;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_243;
        v51 = objc_alloc_init(GEOLanguage);
        if (!GEOLanguageReadAllFrom((uint64_t)v51, (void *)v3))
          goto LABEL_242;
        PBReaderRecallMark();
        -[GEOTileSet _addNoFlagsSupportedLanguage:](a1, v51);
        goto LABEL_162;
      case 11:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_DWORD *)(a1 + 128) |= 0x20u;
        while (2)
        {
          v66 = *v22;
          v67 = *(_QWORD *)(v3 + v66);
          if (v67 == -1 || v67 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v68 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v67);
            *(_QWORD *)(v3 + v66) = v67 + 1;
            v65 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              v31 = v64++ >= 9;
              if (v31)
              {
                v65 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v65 = 0;
LABEL_180:
        v108 = v65 != 0;
        v109 = 124;
        goto LABEL_205;
      case 12:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v69 = 0;
        v70 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 128) |= 0x10u;
        while (2)
        {
          v71 = *v22;
          v72 = *(_QWORD *)(v3 + v71);
          if (v72 == -1 || v72 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v72);
            *(_QWORD *)(v3 + v71) = v72 + 1;
            v44 |= (unint64_t)(v73 & 0x7F) << v69;
            if (v73 < 0)
            {
              v69 += 7;
              v31 = v70++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_184:
        v107 = 120;
        goto LABEL_210;
      case 13:
        if (!v35 || (*(_BYTE *)(a1 + 129) & 4) != 0)
          goto LABEL_163;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_243;
        v51 = objc_alloc_init(GEOCountryRegionTuple);
        if (GEOCountryRegionTupleReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOTileSet _addNoFlagsCountryRegionAllowlist:](a1, v51);
LABEL_162:

LABEL_218:
          v20 = v120;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_219;
        }
LABEL_242:

LABEL_243:
        v116 = 0;
        v117 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        v20 = v120;
        v23 = (int *)MEMORY[0x1E0D82BC8];
LABEL_222:
        if ((v118 & 1) != 0)
LABEL_223:
          *(_DWORD *)(a1 + v117[44]) |= 0x100u;
        if (v20 & 1 | ((v116 & 1) == 0))
        {
          *(_DWORD *)(a1 + v117[44]) |= 0x200u;
          *(_DWORD *)(a1 + v117[44]) |= 0x2000u;
          *(_DWORD *)(a1 + v117[44]) |= 0x8000u;
          *(_DWORD *)(a1 + v117[44]) |= 0x1000u;
          *(_DWORD *)(a1 + v117[44]) |= 0x4000u;
          *(_DWORD *)(a1 + v117[44]) |= 0x400u;
          *(_DWORD *)(a1 + v117[44]) |= 0x800u;
        }
        else if (v21)
        {
          while (1)
          {
            v112 = *v21++;
            v111 = v112;
            v113 = 512;
            switch(v112)
            {
              case 0:
                goto LABEL_236;
              case 1:
                goto LABEL_235;
              case 2:
                v113 = 0x2000;
                goto LABEL_235;
              case 3:
              case 4:
              case 6:
              case 7:
              case 8:
              case 11:
              case 12:
                continue;
              case 5:
                v113 = 0x8000;
                goto LABEL_235;
              case 9:
                v113 = 4096;
                goto LABEL_235;
              case 10:
                v113 = 0x4000;
                goto LABEL_235;
              case 13:
                v113 = 1024;
                goto LABEL_235;
              default:
                if (v111 != 20)
                  continue;
                v113 = 2048;
LABEL_235:
                *(_DWORD *)(a1 + v117[44]) |= v113;
                break;
            }
          }
        }
LABEL_236:
        if (v116)
        {
          v3 = *(_BYTE *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0)
            return v3;
LABEL_240:
          v114 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        else
        {
          v3 = 0;
          if ((v20 & 1) != 0)
            goto LABEL_240;
        }
        return v3;
      case 14:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v74 = 0;
        v75 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 128) |= 2u;
        while (2)
        {
          v76 = *v22;
          v77 = *(_QWORD *)(v3 + v76);
          if (v77 == -1 || v77 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v78 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v77);
            *(_QWORD *)(v3 + v76) = v77 + 1;
            v44 |= (unint64_t)(v78 & 0x7F) << v74;
            if (v78 < 0)
            {
              v74 += 7;
              v31 = v75++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_188:
        v107 = 96;
        goto LABEL_210;
      case 15:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v79 = 0;
        v80 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 128) |= 4u;
        while (2)
        {
          v81 = *v22;
          v82 = *(_QWORD *)(v3 + v81);
          if (v82 == -1 || v82 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v83 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v82);
            *(_QWORD *)(v3 + v81) = v82 + 1;
            v44 |= (unint64_t)(v83 & 0x7F) << v79;
            if (v83 < 0)
            {
              v79 += 7;
              v31 = v80++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_192:
        v107 = 100;
        goto LABEL_210;
      case 16:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v84 = 0;
        v85 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 128) |= 8u;
        while (2)
        {
          v86 = *v22;
          v87 = *(_QWORD *)(v3 + v86);
          if (v87 == -1 || v87 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v88 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v87);
            *(_QWORD *)(v3 + v86) = v87 + 1;
            v44 |= (unint64_t)(v88 & 0x7F) << v84;
            if (v88 < 0)
            {
              v84 += 7;
              v31 = v85++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_196:
        v107 = 104;
        goto LABEL_210;
      case 17:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v89 = 0;
        v90 = 0;
        v91 = 0;
        *(_DWORD *)(a1 + 128) |= 0x80u;
        while (2)
        {
          v92 = *v22;
          v93 = *(_QWORD *)(v3 + v92);
          if (v93 == -1 || v93 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v94 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v93);
            *(_QWORD *)(v3 + v92) = v93 + 1;
            v91 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              v31 = v90++ >= 9;
              if (v31)
              {
                v91 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v91 = 0;
LABEL_200:
        v108 = v91 != 0;
        v109 = 126;
        goto LABEL_205;
      case 18:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v95 = 0;
        v96 = 0;
        v97 = 0;
        *(_DWORD *)(a1 + 128) |= 0x40u;
        while (2)
        {
          v98 = *v22;
          v99 = *(_QWORD *)(v3 + v98);
          if (v99 == -1 || v99 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v100 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v99);
            *(_QWORD *)(v3 + v98) = v99 + 1;
            v97 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              v31 = v96++ >= 9;
              if (v31)
              {
                v97 = 0;
                goto LABEL_204;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          v97 = 0;
LABEL_204:
        v108 = v97 != 0;
        v109 = 125;
LABEL_205:
        *(_BYTE *)(a1 + v109) = v108;
        goto LABEL_219;
      case 19:
        if ((v119 & 1) == 0)
          goto LABEL_163;
        v101 = 0;
        v102 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 128) |= 1u;
        while (2)
        {
          v103 = *v22;
          v104 = *(_QWORD *)(v3 + v103);
          if (v104 == -1 || v104 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v23) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v24) + v104);
            *(_QWORD *)(v3 + v103) = v104 + 1;
            v44 |= (unint64_t)(v105 & 0x7F) << v101;
            if (v105 < 0)
            {
              v101 += 7;
              v31 = v102++ >= 9;
              if (v31)
              {
                LODWORD(v44) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v23))
          LODWORD(v44) = 0;
LABEL_209:
        v107 = 92;
LABEL_210:
        *(_DWORD *)(a1 + v107) = v44;
        goto LABEL_219;
      case 20:
        if (!v35 || (*(_BYTE *)(a1 + 129) & 8) != 0)
          goto LABEL_163;
        PBReaderReadString();
        v51 = (GEOTileSetVersion *)objc_claimAutoreleasedReturnValue();
        if (v51)
          -[GEOTileSet _addNoFlagsDeviceSKUAllowlist:](a1, v51);
        goto LABEL_162;
      default:
        if ((v118 & 1) == 0 || (*(_BYTE *)(a1 + 129) & 1) != 0)
        {
LABEL_163:
          v106 = PBReaderSkipValueWithTag();
          v23 = (int *)MEMORY[0x1E0D82BC8];
          v20 = v120;
          if ((v106 & 1) == 0)
          {
            v116 = 0;
LABEL_221:
            v117 = &OBJC_IVAR___GEOTextItemContainer__textItems;
            goto LABEL_222;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v48 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v49 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v48;

          }
          v50 = PBUnknownFieldAdd();
          v20 = v120;
          v23 = (int *)MEMORY[0x1E0D82BC8];
          if (!v50)
          {
            v116 = 0;
            v117 = &OBJC_IVAR___GEOTextItemContainer__textItems;
            goto LABEL_223;
          }
        }
LABEL_219:
        if (!(v121 & 1 | (v7 != 0)))
          goto LABEL_220;
        break;
    }
  }
LABEL_220:
  v116 = 1;
  goto LABEL_221;
}

void sub_1897A9524(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AA918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AAE4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AAF94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AB4CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ABDB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AEF0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTileSetCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v2 = a1[9];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v26;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v26 != v5)
          objc_enumerationMutation(v2);
        -[GEOTileSetVersion readAll:](*(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v25, v31, 16);
    }
    while (v4);
  }

  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v7 = a1[8];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v21 + 1) + 8 * v11++), "readAll:", 1);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    }
    while (v9);
  }

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v12 = a1[4];
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v18;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v18 != v15)
          objc_enumerationMutation(v12);
        objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v16++), "readAll:", 1, (_QWORD)v17);
      }
      while (v14 != v16);
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v17, v29, 16);
    }
    while (v14);
  }

}

unint64_t GEOTileSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTileSetReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTileSetReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTileSetReadAllFrom_initialTag;
  Specified = GEOTileSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOTileSetCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1897AF2C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTileSetReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOTileSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897AF328(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AF8B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTileSetIsDirty(uint64_t a1)
{
  int v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_DWORD *)(a1 + 128);
  if ((v2 & 0x1FE00) != 0)
    return 1;
  if ((v2 & 0x400) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v4 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v5 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v4);
        if (GEOCountryRegionTupleIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_15;
        }
      }
      v3 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_15:

  return v3;
}

os_unfair_lock_s *GEOTileSetIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOTileSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897B0410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B0E90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOTileSetRegionDescription(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1E0CB3940];
  _GEOTileSetRegionDictionaryRepresentation(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("GEOTileSetRegion<%p> %@"), a1, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _GEOTileSetRegionDictionaryRepresentation(unsigned int *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", *a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v3, CFSTR("maxX"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[1]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v4, CFSTR("maxY"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[2]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v5, CFSTR("maxZ"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[3]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v6, CFSTR("minX"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[4]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v7, CFSTR("minY"));

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", a1[5]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v8, CFSTR("minZ"));

  return v2;
}

void _GEOTileSetRegionFromDictionaryRepresentation(void *a1, _DWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a1;
  objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("minX"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2[3] = objc_msgSend(v3, "unsignedIntValue");

  objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("minY"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2[4] = objc_msgSend(v4, "unsignedIntValue");

  objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("maxX"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    *a2 = objc_msgSend(v5, "unsignedIntValue");

  objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("maxY"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2[1] = objc_msgSend(v6, "unsignedIntValue");

  objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("minZ"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2[5] = objc_msgSend(v7, "unsignedIntValue");

  objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("maxZ"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2[2] = objc_msgSend(v8, "unsignedIntValue");

}

BOOL GEOTileSetRegionReadFrom(_DWORD *a1, uint64_t a2)
{
  return GEOTileSetRegionReadAllFrom(a1, a2);
}

uint64_t GEOTileSetRegionWriteTo()
{
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  PBDataWriterWriteUint32Field();
  return PBDataWriterWriteUint32Field();
}

BOOL GEOTileSetRegionEquals(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t GEOTileSetRegionHash()
{
  return PBHashBytes();
}

BOOL GEOTileSetRegionIsValid(void *a1)
{
  _BOOL8 AllFrom;
  _DWORD v4[6];
  uint64_t v5;
  uint64_t v6;

  v5 = objc_msgSend(a1, "position");
  v6 = objc_msgSend(a1, "length");
  AllFrom = GEOTileSetRegionReadAllFrom(v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_1897B195C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileSetVersionReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int *v17;
  _BOOL4 v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void *v45;
  int v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  int v58;
  uint64_t v59;
  char v60;
  int v61;
  int v62;
  void *v63;
  char v65;
  char v66;
  int v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 76);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 72));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 96) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 96) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 96) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v10 | v9;
        v16 = v14 | v10;
        if ((((v14 | v10) | v7) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = v8 != 0;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_101;
        v65 = v15;
        v67 = v18 | v16 | v15;
        v68 = (v17 == 0) | v16;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v66 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (!*(_BYTE *)(v3 + *v21))
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_24;
      v23 += 7;
      v29 = v24++ >= 9;
      if (v29)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_24:
    v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_26:
    if (v30 || (v25 & 7) == 4)
      break;
    v32 = v25 >> 3;
    v33 = v16;
    if ((v68 & 1) == 0)
    {
      v34 = v17;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_82;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        while (1)
        {
          v41 = *v19;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v42);
          *(_QWORD *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0)
            goto LABEL_85;
          v38 += 7;
          v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_87;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_85:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v40) = 0;
LABEL_87:
        v59 = 84;
        goto LABEL_96;
      case 2:
        if (!v33 || (*(_BYTE *)(a1 + 96) & 8) != 0)
          goto LABEL_80;
        if (!PBReaderPlaceMark())
          goto LABEL_120;
        -[GEOTileSetVersion _reserveAvailableTiles:](a1, 1uLL);
        if (!GEOTileSetRegionReadAllFrom((_DWORD *)(*(_QWORD *)(a1 + 24) + 24 * *(_QWORD *)(a1 + 32)), v3))
          goto LABEL_120;
        PBReaderRecallMark();
        v47 = 32;
        goto LABEL_70;
      case 3:
        if ((v7 & 1) == 0)
          goto LABEL_82;
        v48 = 0;
        v49 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 96) |= 2u;
        while (2)
        {
          v50 = *v19;
          v51 = *(_QWORD *)(v3 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v51);
            *(_QWORD *)(v3 + v50) = v51 + 1;
            v40 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v40) = 0;
LABEL_91:
        v59 = 92;
        goto LABEL_96;
      case 4:
        if (!v33 || (*(_BYTE *)(a1 + 96) & 0x10) != 0)
        {
LABEL_80:
          v58 = PBReaderSkipValueWithTag();
          LOBYTE(v16) = v66;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v58 & v67 & 1) == 0)
            goto LABEL_119;
          goto LABEL_98;
        }
        if (!PBReaderPlaceMark()
          || (-[GEOTileSetVersion _reserveGenericTiles:](a1, 1uLL),
              !GEOGenericTileReadAllFrom(*(_QWORD *)(a1 + 48) + 16 * *(_QWORD *)(a1 + 56), v3)))
        {
LABEL_120:
          v20 = 0;
          LOBYTE(v16) = v66;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_100;
        }
        PBReaderRecallMark();
        v47 = 56;
LABEL_70:
        ++*(_QWORD *)(a1 + v47);
        LOBYTE(v16) = v66;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_97;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_82;
        v53 = 0;
        v54 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 96) |= 1u;
        while (2)
        {
          v55 = *v19;
          v56 = *(_QWORD *)(v3 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v56);
            *(_QWORD *)(v3 + v55) = v56 + 1;
            v40 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v29 = v54++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v40) = 0;
LABEL_95:
        v59 = 88;
LABEL_96:
        *(_DWORD *)(a1 + v59) = v40;
        goto LABEL_97;
      default:
        if ((v65 & 1) == 0 || (*(_BYTE *)(a1 + 96) & 4) != 0)
        {
LABEL_82:
          v58 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          LOBYTE(v16) = v66;
          if ((v58 & v67 & 1) == 0)
          {
LABEL_119:
            v20 = v58;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v44 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v45 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v44;

          }
          v46 = PBUnknownFieldAdd();
          LOBYTE(v16) = v66;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v46)
          {
            v20 = 0;
            goto LABEL_102;
          }
LABEL_97:
          if ((v67 & 1) == 0)
            goto LABEL_99;
        }
LABEL_98:
        if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_99;
        break;
    }
  }
LABEL_99:
  v20 = 1;
LABEL_100:
  LOBYTE(v15) = v65;
LABEL_101:
  if ((v15 & 1) != 0)
LABEL_102:
    *(_BYTE *)(a1 + 96) |= 4u;
  if (!(v16 & 1 | ((v20 & 1) == 0)))
  {
    if (!v17)
      goto LABEL_113;
    while (1)
    {
      v62 = *v17++;
      v61 = v62;
      if (v62 == 2)
        break;
      if (v61 == 4)
      {
        v60 = 16;
LABEL_109:
        *(_BYTE *)(a1 + 96) |= v60;
      }
      else if (!v61)
      {
        goto LABEL_113;
      }
    }
    v60 = 8;
    goto LABEL_109;
  }
  *(_BYTE *)(a1 + 96) |= 8u;
  *(_BYTE *)(a1 + 96) |= 0x10u;
LABEL_113:
  if (v20)
  {
    v3 = *(_BYTE *)(v3 + *v21) == 0;
    if ((v16 & 1) == 0)
      return v3;
    goto LABEL_117;
  }
  v3 = 0;
  if ((v16 & 1) != 0)
  {
LABEL_117:
    v63 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1897B2270(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B29B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOTileSetVersionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 76))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOTileSetVersionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 76) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOTileSetVersionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOTileSetVersionReadAllFrom_initialTag;
  Specified = GEOTileSetVersionReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1897B2C08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B2EE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B30F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRUserReadAllFrom(void *a1, void *a2, int a3)
{
  char *v4;
  int *v5;
  int *v6;
  int *v7;
  int *v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  char v19;
  GEOLPRVehicle *v20;
  void *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v29;
  GEOLPRVehicle *v30;
  _BOOL8 v31;
  void *v33;

  v4 = a2;
  objc_sync_enter(v4);
  if (v4)
  {
    v5 = (int *)MEMORY[0x1E0D82BF0];
    v6 = (int *)MEMORY[0x1E0D82BD8];
    v7 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v4[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v4[*MEMORY[0x1E0D82BD8]])
    {
      v8 = (int *)MEMORY[0x1E0D82BB8];
      v33 = a1;
      do
      {
        if (v4[*v7])
          break;
        v9 = 0;
        v10 = 0;
        v11 = 0;
        while (1)
        {
          v12 = *v5;
          v13 = *(_QWORD *)&v4[v12];
          if (v13 == -1 || v13 >= *(_QWORD *)&v4[*v6])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v13);
          *(_QWORD *)&v4[v12] = v13 + 1;
          v11 |= (unint64_t)(v14 & 0x7F) << v9;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v9 += 7;
          if (v10++ >= 9)
          {
            v11 = 0;
            v16 = v4[*v7];
            goto LABEL_15;
          }
        }
        v4[*v7] = 1;
LABEL_13:
        v16 = v4[*v7];
        if (v4[*v7])
          v11 = 0;
LABEL_15:
        if (v16 || (v11 & 7) == 4)
          break;
        if ((v11 >> 3) == 1)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_51;
          if (*(_QWORD *)&v4[*v5] >= *(_QWORD *)&v4[*v6])
          {
            v21 = 0;
            v20 = 0;
LABEL_50:

            goto LABEL_51;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          v21 = 0;
          while (2)
          {
            if (!v4[*v7])
            {
              v22 = 0;
              v23 = 0;
              v24 = 0;
              while (1)
              {
                v25 = *v5;
                v26 = *(_QWORD *)&v4[v25];
                if (v26 == -1 || v26 >= *(_QWORD *)&v4[*v6])
                  break;
                v27 = *(_BYTE *)(*(_QWORD *)&v4[*v8] + v26);
                *(_QWORD *)&v4[v25] = v26 + 1;
                v24 |= (unint64_t)(v27 & 0x7F) << v22;
                if ((v27 & 0x80) == 0)
                  goto LABEL_32;
                v22 += 7;
                if (v23++ > 8)
                  goto LABEL_40;
              }
              v4[*v7] = 1;
LABEL_32:
              if (v4[*v7])
                v24 = 0;
              if ((v24 >> 3) != 2)
              {
                if ((v24 >> 3) == 1)
                {
                  PBReaderReadString();
                  v29 = objc_claimAutoreleasedReturnValue();

                  v19 = 1;
                  v21 = (void *)v29;
                  goto LABEL_41;
                }
LABEL_40:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_50;
                goto LABEL_41;
              }
              if (!PBReaderPlaceMark())
                goto LABEL_50;
              v30 = objc_alloc_init(GEOLPRVehicle);

              if ((GEOLPRVehicleReadAllFrom((uint64_t)v30, v4, a3) & 1) == 0)
              {
                v20 = v30;
                goto LABEL_50;
              }
              PBReaderRecallMark();
              v18 = 1;
              v20 = v30;
LABEL_41:
              if (*(_QWORD *)&v4[*v5] < *(_QWORD *)&v4[*v6])
                continue;
            }
            break;
          }
          if ((v19 & 1) == 0 || (v18 & 1) == 0)
            goto LABEL_50;
          objc_msgSend(v33, "setVehiclesValue:forKey:", v20, v21);
          PBReaderRecallMark();

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_51;
        }
      }
      while (*(_QWORD *)&v4[*v5] < *(_QWORD *)&v4[*v6]);
    }
    v31 = v4[*v7] == 0;
  }
  else
  {
LABEL_51:
    v31 = 0;
  }
  objc_sync_exit(v4);

  return v31;
}

void sub_1897B4410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRUserReadFrom(void *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRUserReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B4474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRUserIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  char v16;
  char v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || *(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
          goto LABEL_51;
        v16 = 0;
        v17 = 0;
        do
        {
          if (a1[*v4])
            break;
          v18 = 0;
          v19 = 0;
          v20 = 0;
          while (1)
          {
            v21 = *v2;
            v22 = *(_QWORD *)&a1[v21];
            if (v22 == -1 || v22 >= *(_QWORD *)&a1[*v3])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v22);
            *(_QWORD *)&a1[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0)
              goto LABEL_32;
            v18 += 7;
            v12 = v19++ >= 9;
            if (v12)
            {
              v20 = 0;
              v24 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          v24 = a1[*v4];
          if (a1[*v4])
            v20 = 0;
LABEL_34:
          if (v24)
            break;
          v25 = v20 & 7;
          if ((v20 >> 3) == 2)
          {
            if (v25 != 2 || (GEOLPRVehicleIsValid(a1) & 1) == 0)
              goto LABEL_51;
            v17 = 1;
          }
          else if ((v20 >> 3) == 1)
          {
            if (v25 != 2)
              goto LABEL_51;
            v16 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_51;
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_51;
          }
        }
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
        if ((v16 & 1) == 0 || (v17 & 1) == 0)
        {
LABEL_51:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_51;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

uint64_t GEOLPRVehicleIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  uint64_t v17;
  BOOL v18;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = 0;
    v6 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_33;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = *v2;
        v11 = *(_QWORD *)&a1[v10];
        if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v6] + v11);
        *(_QWORD *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v7 += 7;
        if (v8++ >= 9)
        {
          v9 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v9 = 0;
LABEL_14:
      v15 = v9 & 7;
      if (v14 || v15 == 4)
        goto LABEL_33;
      switch((v9 >> 3))
      {
        case 1u:
          v17 = 0;
          if (!v5 && v15 == 2)
          {
            v5 = 1;
            goto LABEL_29;
          }
          goto LABEL_39;
        case 2u:
          if (v15 != 2)
            goto LABEL_40;
          goto LABEL_29;
        case 3u:
          if (v15 == 2)
            goto LABEL_29;
          goto LABEL_40;
        case 4u:
          if (v15 != 2)
            goto LABEL_40;
LABEL_29:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_40:
            v17 = 0;
            goto LABEL_39;
          }
LABEL_30:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_33;
          break;
        default:
          if (!PBReaderSkipValueWithTag())
            goto LABEL_40;
          goto LABEL_30;
      }
    }
  }
  v5 = 0;
LABEL_33:
  if (a1[*v4])
    v18 = 1;
  else
    v18 = v5 == 0;
  v17 = !v18;
LABEL_39:
  PBReaderRecallMark();
  return v17;
}

unint64_t GEOLPRVehicleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v24;
  unint64_t v26;
  BOOL v27;
  int *v28;
  int v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  char v36;
  char v37;
  char v38;
  int v39;
  char v40;
  void *v41;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(_BYTE *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1)
    v13 = 0;
  else
    v13 = a3;
  v14 = (int *)MEMORY[0x1E0D82BF0];
  v15 = (int *)MEMORY[0x1E0D82BC8];
  v16 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v14) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v15))
      goto LABEL_66;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *v14;
      v21 = *(_QWORD *)(v3 + v20);
      if (v21 == -1 || v21 >= *(_QWORD *)(v3 + *v6))
        break;
      v22 = *(_BYTE *)(*(_QWORD *)(v3 + *v16) + v21);
      *(_QWORD *)(v3 + v20) = v21 + 1;
      v19 |= (unint64_t)(v22 & 0x7F) << v17;
      if ((v22 & 0x80) == 0)
        goto LABEL_24;
      v17 += 7;
      if (v18++ >= 9)
      {
        v19 = 0;
        v24 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v15) = 1;
LABEL_24:
    v24 = *(unsigned __int8 *)(v3 + *v15);
    if (*(_BYTE *)(v3 + *v15))
      v19 = 0;
LABEL_26:
    if (v24 || (v19 & 7) == 4)
    {
LABEL_66:
      if ((v12 & 1) != 0)
      {
        v38 = 1;
        goto LABEL_76;
      }
      if (v13)
      {
        while (1)
        {
          v39 = *v13++;
          v40 = 2;
          switch(v39)
          {
            case 0:
              goto LABEL_77;
            case 1:
              goto LABEL_73;
            case 2:
              v40 = 4;
              goto LABEL_73;
            case 3:
              v40 = 8;
              goto LABEL_73;
            case 4:
              v40 = 1;
LABEL_73:
              *(_BYTE *)(a1 + 60) |= v40;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_77;
    }
    v26 = v19 >> 3;
    v27 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      v28 = v13;
      do
      {
        v30 = *v28++;
        v29 = v30;
        v27 = v30 != 0;
        if (v30)
          v31 = v29 == (_DWORD)v26;
        else
          v31 = 1;
      }
      while (!v31);
    }
    switch((int)v26)
    {
      case 1:
        if (!v27)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 2) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 24;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v37 = *(_BYTE *)(a1 + 60) << 6;
        goto LABEL_61;
      case 2:
        if (!v27)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 32;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v37 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_61;
      case 3:
        if (!v27)
          goto LABEL_53;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_75;
        v37 = 16 * *(_BYTE *)(a1 + 60);
LABEL_61:
        v8 += v37 >> 7;
        goto LABEL_64;
      case 4:
        if (!v27)
        {
LABEL_53:
          v36 = PBReaderSkipValueWithTag();
          v15 = (int *)MEMORY[0x1E0D82BC8];
          if ((v36 & 1) == 0)
          {
LABEL_74:
            v38 = 0;
            goto LABEL_76;
          }
          goto LABEL_65;
        }
        if ((*(_BYTE *)(a1 + 60) & 1) == 0)
        {
          PBReaderReadString();
          v32 = objc_claimAutoreleasedReturnValue();
          v33 = 16;
LABEL_52:
          v35 = *(void **)(a1 + v33);
          *(_QWORD *)(a1 + v33) = v32;

          v15 = (int *)MEMORY[0x1E0D82BC8];
          --v8;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v8 -= *(_BYTE *)(a1 + 60) & 1;
LABEL_64:
          v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_65:
          if (!(v12 & 1 | (v8 != 0)))
            goto LABEL_66;
          continue;
        }
LABEL_75:
        v38 = 0;
        v15 = (int *)MEMORY[0x1E0D82BC8];
LABEL_76:
        *(_BYTE *)(a1 + 60) |= 2u;
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 8u;
        *(_BYTE *)(a1 + 60) |= 1u;
        if ((v38 & 1) != 0)
        {
LABEL_77:
          v3 = *(_BYTE *)(v3 + *v15) == 0;
          if ((v12 & 1) != 0)
            goto LABEL_78;
        }
        else
        {
          v3 = 0;
          if ((v12 & 1) != 0)
          {
LABEL_78:
            v41 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v34 = PBReaderSkipValueWithTag();
        v15 = (int *)MEMORY[0x1E0D82BC8];
        if (!v34)
          goto LABEL_74;
        goto LABEL_65;
    }
  }
}

void sub_1897B54D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B55BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B5700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B5840(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B5D24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLPRVehicleReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLPRVehicleReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLPRVehicleReadAllFrom_initialTag;
  Specified = GEOLPRVehicleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1897B5EB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRVehicleReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLPRVehicleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B5F10(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B60C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRVehicleIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_BYTE *)(a1 + 60) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1897B63AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOGetSystemMonitorLog()
{
  if (qword_1ECDBCC60 != -1)
    dispatch_once(&qword_1ECDBCC60, &__block_literal_global_115_1);
  return (id)qword_1ECDBCC58;
}

void _GEOSystemMonitorPowerNotification(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  void *v6;
  NSObject *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  dispatch_group_t v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject *v16;
  id *v17;
  NSObject *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  dispatch_group_t v24;
  void *v25;
  NSObject *v26;
  _QWORD v27[2];
  void (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  _QWORD v31[2];
  void (*v32)(uint64_t, int);
  void *v33;
  uint64_t v34;
  uint8_t v35[8];
  uint64_t v36;
  uint64_t v37;
  void *v38;
  NSObject *v39;
  _QWORD *v40;
  _QWORD v41[3];
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  uint8_t buf[8];
  uint64_t v48;
  void (*v49)(uint64_t);
  void *v50;
  _QWORD *v51;
  uint8_t *v52;
  uint64_t block;
  uint64_t p_block;
  uint64_t v55;
  void *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v6 = (void *)MEMORY[0x18D764E2C]();
  switch(a3)
  {
    case -536870144:
      GEOGetSystemMonitorLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1885A9000, v16, OS_LOG_TYPE_DEBUG, "Received kIOMessageSystemHasPoweredOn", buf, 2u);
      }

      +[GEOSystemMonitor sharedInstance](GEOSystemMonitor, "sharedInstance");
      v17 = (id *)objc_claimAutoreleasedReturnValue();
      if (v17)
      {
        *(_QWORD *)v35 = 0;
        v36 = (uint64_t)v35;
        v37 = 0x2020000000;
        LOBYTE(v38) = 0;
        *(_QWORD *)buf = MEMORY[0x1E0C809B0];
        v48 = 3221225472;
        v49 = __34__GEOSystemMonitor__systemDidWake__block_invoke;
        v50 = &unk_1E1C00760;
        v51 = v17;
        v52 = v35;
        geo_isolate_sync();
        if (*(_BYTE *)(v36 + 24))
        {
          GEOGetSystemMonitorLog();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(block) = 0;
            _os_log_impl(&dword_1885A9000, v18, OS_LOG_TYPE_DEBUG, "System did wake. Notifying observers", (uint8_t *)&block, 2u);
          }

          objc_msgSend(v17[3], "systemDidWake");
        }
        _Block_object_dispose(v35, 8);
      }

      break;
    case -536870272:
      GEOGetSystemMonitorLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1885A9000, v19, OS_LOG_TYPE_DEBUG, "Received kIOMessageSystemWillSleep", buf, 2u);
      }

      +[GEOSystemMonitor sharedInstance](GEOSystemMonitor, "sharedInstance");
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = MEMORY[0x1E0C809B0];
      v27[0] = MEMORY[0x1E0C809B0];
      v27[1] = 3221225472;
      v28 = ___GEOSystemMonitorPowerNotification_block_invoke_119;
      v29 = &__block_descriptor_40_e5_v8__0l;
      v30 = a4;
      v22 = v27;
      if (v20)
      {
        block = 0;
        p_block = (uint64_t)&block;
        v55 = 0x2020000000;
        LOBYTE(v56) = 0;
        *(_QWORD *)buf = v21;
        v48 = 3221225472;
        v49 = __37__GEOSystemMonitor__systemWillSleep___block_invoke;
        v50 = &unk_1E1C00760;
        v51 = (_QWORD *)v20;
        v52 = (uint8_t *)&block;
        geo_isolate_sync();
        if (*(_BYTE *)(p_block + 24))
        {
          GEOGetSystemMonitorLog();
          v23 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)v35 = 0;
            _os_log_impl(&dword_1885A9000, v23, OS_LOG_TYPE_DEBUG, "System will sleep. Notifying observers", v35, 2u);
          }

          v24 = dispatch_group_create();
          v25 = *(void **)(v20 + 24);
          *(_QWORD *)v35 = v21;
          v36 = 3221225472;
          v37 = (uint64_t)__37__GEOSystemMonitor__systemWillSleep___block_invoke_13;
          v38 = &unk_1E1C20FC0;
          v26 = v24;
          v39 = v26;
          objc_msgSend(v25, "enumerateObserversWithGroup:visitor:", v26, v35);
          dispatch_group_notify(v26, *(dispatch_queue_t *)(v20 + 8), v22);

        }
        else
        {
          v28((uint64_t)v22);
        }
        _Block_object_dispose(&block, 8);
      }

      break;
    case -536870288:
      GEOGetSystemMonitorLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_1885A9000, v7, OS_LOG_TYPE_DEBUG, "Received kIOMessageCanSystemSleep", buf, 2u);
      }

      +[GEOSystemMonitor sharedInstance](GEOSystemMonitor, "sharedInstance");
      v8 = (_QWORD *)objc_claimAutoreleasedReturnValue();
      v9 = MEMORY[0x1E0C809B0];
      v31[0] = MEMORY[0x1E0C809B0];
      v31[1] = 3221225472;
      v32 = ___GEOSystemMonitorPowerNotification_block_invoke;
      v33 = &__block_descriptor_40_e8_v12__0B8l;
      v34 = a4;
      v10 = v31;
      if (v8)
      {
        v43 = 0;
        v44 = &v43;
        v45 = 0x2020000000;
        v46 = 0;
        *(_QWORD *)buf = v9;
        v48 = 3221225472;
        v49 = __36__GEOSystemMonitor__systemCanSleep___block_invoke;
        v50 = &unk_1E1C00760;
        v51 = v8;
        v52 = (uint8_t *)&v43;
        geo_isolate_sync();
        if (*((_BYTE *)v44 + 24))
        {
          GEOGetSystemMonitorLog();
          v11 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)v35 = 0;
            _os_log_impl(&dword_1885A9000, v11, OS_LOG_TYPE_DEBUG, "System is asking to sleep. Checking with observers", v35, 2u);
          }

          v12 = dispatch_group_create();
          v41[0] = 0;
          v41[1] = v41;
          v41[2] = 0x2020000000;
          v42 = 1;
          v13 = (void *)v8[3];
          *(_QWORD *)v35 = v9;
          v36 = 3221225472;
          v37 = (uint64_t)__36__GEOSystemMonitor__systemCanSleep___block_invoke_10;
          v38 = &unk_1E1C20F98;
          v14 = v12;
          v39 = v14;
          v40 = v41;
          objc_msgSend(v13, "enumerateObserversWithGroup:visitor:", v14, v35);
          v15 = v8[1];
          block = v9;
          p_block = 3221225472;
          v55 = (uint64_t)__36__GEOSystemMonitor__systemCanSleep___block_invoke_3;
          v56 = &unk_1E1C03F50;
          v57 = v10;
          v58 = v41;
          dispatch_group_notify(v14, v15, &block);

          _Block_object_dispose(v41, 8);
        }
        else
        {
          v32((uint64_t)v10, 1);
        }
        _Block_object_dispose(&v43, 8);
      }

      break;
  }
  objc_autoreleasePoolPop(v6);
}

void sub_1897B7084(_Unwind_Exception *a1, int a2)
{
  uint64_t v2;
  id v5;
  NSObject *v6;

  _Block_object_dispose((const void *)(v2 - 144), 8);
  if (a2 == 1)
  {
    v5 = objc_begin_catch(a1);
    GEOGetSystemMonitorLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)(v2 - 144) = 138543362;
      *(_QWORD *)(v2 - 140) = v5;
      _os_log_impl(&dword_1885A9000, v6, OS_LOG_TYPE_FAULT, "Exception raised during system sleep callback: %{public}@", (uint8_t *)(v2 - 144), 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1897B7040);
  }
  _Unwind_Resume(a1);
}

void sub_1897B7984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1897B7DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1897B7F94(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1897B7FF8(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1897B81A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1897B84A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  _Unwind_Resume(exception_object);
}

void sub_1897B8C14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897B8C94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897B8DF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897B8F38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897B9004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id GEOAssetURLForScaleFactor(void *a1, double a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *i;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v3 = a1;
  v4 = (void *)objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = 0;
    v6 = *(_QWORD *)v16;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v8, "hasScaleFactor", (_QWORD)v15) && objc_msgSend(v8, "hasUrl"))
        {
          if (a2 == 3.0 && objc_msgSend(v8, "scaleFactor") == 3
            || a2 == 2.0 && objc_msgSend(v8, "scaleFactor") == 2)
          {
            v12 = objc_alloc(MEMORY[0x1E0C99E98]);
            objc_msgSend(v8, "url");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            v4 = (void *)objc_msgSend(v12, "initWithString:", v13);

            v11 = v3;
            goto LABEL_19;
          }
          if (objc_msgSend(v8, "scaleFactor") == 1)
          {
            v9 = v8;

            v5 = v9;
          }
        }
      }
      v4 = (void *)objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      if (v4)
        continue;
      break;
    }

    if (v5)
    {
      v10 = objc_alloc(MEMORY[0x1E0C99E98]);
      objc_msgSend(v5, "url");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v4 = (void *)objc_msgSend(v10, "initWithString:", v11);
LABEL_19:

      goto LABEL_21;
    }
    v4 = 0;
  }
  else
  {
    v5 = v3;
LABEL_21:

  }
  return v4;
}

uint64_t _geoHasOperatingHours(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  BOOL v24;
  _DWORD *v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  _DWORD *v32;
  int v33;
  int v34;
  int v35;
  BOOL v36;
  _BOOL4 v37;
  void *v38;
  double v39;
  double v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  _DWORD *v48;
  uint64_t v49;
  _DWORD *v50;
  _DWORD *v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v53 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v7 = objc_alloc(MEMORY[0x1E0C99D48]);
    v8 = (void *)objc_msgSend(v7, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8]);
    v9 = v8;
    if (v6)
    {
      objc_msgSend(v8, "timeZone");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v6, "isEqualToTimeZone:", v10);

      if ((v11 & 1) == 0)
        objc_msgSend(v9, "setTimeZone:", v6);
    }
    v12 = objc_msgSend(v9, "ordinalityOfUnit:inUnit:forDate:", 512, 4096, v53);
    v13 = v12 - 1;
    v56 = 0u;
    v57 = 0u;
    if (v12 == 1)
      v13 = 7;
    v52 = v13;
    v54 = 0uLL;
    v55 = 0uLL;
    v14 = v5;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v54, v58, 16);
    if (v15)
    {
      v44 = v15;
      v45 = v9;
      v46 = v6;
      v47 = v5;
      v50 = 0;
      v51 = 0;
      v49 = *(_QWORD *)v55;
      do
      {
        for (i = 0; i != v44; ++i)
        {
          if (*(_QWORD *)v55 != v49)
            objc_enumerationMutation(v14);
          v17 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * i);
          v18 = objc_msgSend(v17, "timeRangesCount", v44);
          v19 = objc_msgSend(v17, "timeRanges");
          v20 = 0;
          v21 = v19 + 12 * v18;
          v22 = (_DWORD *)(v21 - 12);
          v48 = (_DWORD *)(v21 - 8);
          while (v20 < objc_msgSend(v17, "daysCount"))
          {
            v23 = *(int *)(objc_msgSend(v17, "days") + 4 * v20);
            if ((_DWORD)v23)
              v24 = v12 == v23;
            else
              v24 = 1;
            if (v24)
            {
              v25 = (_DWORD *)(v19 + 4);
              v26 = v18;
              if (v18)
              {
                do
                {
                  if (v19)
                  {
                    v27 = *(v25 - 1);
                    v28 = *v25 == 86400 && v27 == 0;
                    if (v28 || v27 != 0)
                    {

                      v6 = v46;
                      v5 = v47;
                      v9 = v45;
                      goto LABEL_58;
                    }
                  }
                  v25 += 3;
                  --v26;
                }
                while (v26);
                v50 = v22;
              }
            }
            else if (v52 == v23 && v18 != 0 && v19 != 0)
            {
              v32 = v51;
              if (*v48 == 86400)
                v32 = v22;
              v51 = v32;
            }
            ++v20;
          }
        }
        v44 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v54, v58, 16);
      }
      while (v44);

      v6 = v46;
      v5 = v47;
      v9 = v45;
      if (v50)
      {
        if (!v51)
        {
          v42 = 1;
          v6 = v46;
          v5 = v47;
          v9 = v45;
          goto LABEL_62;
        }
        v33 = v50[1];
        v34 = *v51;
        v6 = v46;
        v5 = v47;
        v9 = v45;
        if (v33 == 86400 && !v34)
          goto LABEL_67;
        v35 = v51[1];
        v36 = !*v50 && v35 == 86400;
        v37 = v36;
        if (v33 == v34 || *v50 == v35 || v37)
        {
LABEL_67:
          objc_msgSend(v45, "startOfDayForDate:", v53, 0);
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v53, "timeIntervalSinceDate:", v38);
          v40 = v39;

          v6 = v46;
          v5 = v47;
          v9 = v45;
          LODWORD(v41) = v50[1];
          if (v40 < (double)v41)
          {
LABEL_58:
            v42 = 1;
LABEL_62:

            goto LABEL_63;
          }
        }
      }
    }
    else
    {

    }
    v42 = 0;
    goto LABEL_62;
  }
  v42 = 0;
LABEL_63:

  return v42;
}

void sub_1897BB1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;

  _Unwind_Resume(a1);
}

void _geoNormalizedAndViewHourModelsForPDHours(void *a1, void *a2, void *a3, unsigned int a4, unsigned int a5, void *a6)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  _DWORD *v18;
  uint64_t v19;
  void *v20;
  unsigned int v21;
  _DWORD *v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  char *v32;
  int32x2_t *v33;
  __int32 v34;
  int8x8_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  _BYTE *v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  void *v53;
  uint64_t j;
  void *v55;
  uint64_t *k;
  GEOLocalTimeInterval *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  void *v74;
  char v75;
  void *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  void (**v85)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v86;
  char v87;
  uint64_t v88;
  _BYTE *v89;
  void *v90;
  void *v91;
  uint64_t m;
  char **v93;
  char *v94;
  char *v95;
  char **v96;
  id v97;
  void *v98;
  void (**v99)(id, void *, void *);
  id v100;
  id obj;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v106;
  void *v108;
  uint64_t v109;
  void *v110;
  _QWORD v111[3];
  __int16 v112;
  uint64_t v113;
  int v114;
  __int16 v115;
  _QWORD v116[4];
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t *v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  __n128 (*v127)(__n128 *, __n128 *);
  uint64_t (*v128)();
  const char *v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  char *v136;
  char **v137;
  unint64_t v138;
  _BYTE v139[256];
  _BYTE v140[128];
  uint64_t v141;

  v141 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v100 = a2;
  v97 = a3;
  v98 = v9;
  v99 = a6;
  if (objc_msgSend(v9, "count"))
  {
    v136 = (char *)&v136;
    v137 = &v136;
    v138 = 0;
    v132 = 0u;
    v133 = 0u;
    v134 = 0u;
    v135 = 0u;
    obj = v9;
    v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v132, v140, 16);
    if (v10)
    {
      v102 = *(_QWORD *)v133;
      do
      {
        v103 = v10;
        v11 = 0;
        do
        {
          if (*(_QWORD *)v133 != v102)
            objc_enumerationMutation(obj);
          v12 = *(void **)(*((_QWORD *)&v132 + 1) + 8 * v11);
          v109 = objc_msgSend(v12, "daysCount");
          v13 = objc_msgSend(v12, "timeRanges");
          if (v13)
            v14 = objc_msgSend(v12, "timeRangesCount");
          else
            v14 = 0;
          objc_msgSend(v12, "hoursThreshold");
          v15 = objc_claimAutoreleasedReturnValue();
          v16 = (void *)v15;
          v104 = v11;
          if (v15 && (*(_BYTE *)(v15 + 24) & 1) != 0)
          {
            objc_msgSend(v12, "hoursThreshold");
            v18 = (_DWORD *)objc_claimAutoreleasedReturnValue();
            if (v18)
              v17 = v18[4];
            else
              v17 = 0;

          }
          else
          {
            v17 = 0;
          }

          objc_msgSend(v12, "hoursThreshold");
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = (void *)v19;
          if (v19 && (*(_BYTE *)(v19 + 24) & 2) != 0)
          {
            objc_msgSend(v12, "hoursThreshold");
            v22 = (_DWORD *)objc_claimAutoreleasedReturnValue();
            if (v22)
              v21 = v22[5];
            else
              v21 = 0;

          }
          else
          {
            v21 = 0;
          }

          if (a4 <= 1)
            v23 = v21;
          else
            v23 = a4;
          v24 = a5;
          if (a5 <= 1)
            v24 = v17;
          if (v109)
          {
            v25 = 0;
            v26 = (double)v23;
            v27 = (double)v24;
            v108 = v12;
            do
            {
              v28 = objc_msgSend(v12, "days");
              if (v14)
              {
                v29 = 0;
                v30 = *(_DWORD *)(v28 + 4 * v25);
                v31 = v138;
                v32 = v136;
                do
                {
                  v33 = (int32x2_t *)(v13 + 12 * v29);
                  v34 = v33[1].i32[0];
                  v35 = vbsl_s8((int8x8_t)vceq_s32(*v33, (int32x2_t)86400), (int8x8_t)0x1518000000000, (int8x8_t)*v33);
                  if (v30)
                  {
                    v36 = (char *)operator new(0x30uLL);
                    *((_DWORD *)v36 + 4) = v30;
                    *(int8x8_t *)(v36 + 20) = v35;
                    *((_DWORD *)v36 + 7) = v34;
                    *((double *)v36 + 4) = v27;
                    *((double *)v36 + 5) = v26;
                    *(_QWORD *)v36 = v32;
                    *((_QWORD *)v36 + 1) = &v136;
                    *((_QWORD *)v32 + 1) = v36;
                    ++v31;
                    v136 = v36;
                    v138 = v31;
                  }
                  else
                  {
                    v37 = 0;
                    do
                    {
                      v36 = (char *)operator new(0x30uLL);
                      v38 = v37 + 1;
                      *((_DWORD *)v36 + 4) = v37 + 1;
                      *(int8x8_t *)(v36 + 20) = v35;
                      *((_DWORD *)v36 + 7) = v34;
                      *((double *)v36 + 4) = v27;
                      *((double *)v36 + 5) = v26;
                      *(_QWORD *)v36 = v32;
                      *((_QWORD *)v36 + 1) = &v136;
                      *((_QWORD *)v32 + 1) = v36;
                      v39 = v31 + v37 + 1;
                      v37 = v38;
                      v136 = v36;
                      v138 = v39;
                      v32 = v36;
                    }
                    while ((_DWORD)v38 != 7);
                    v31 += v38;
                  }
                  ++v29;
                  v32 = v36;
                }
                while (v29 != v14);
              }
              ++v25;
              v12 = v108;
            }
            while (v25 != v109);
          }
          v11 = v104 + 1;
        }
        while (v104 + 1 != v103);
        v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v132, v140, 16);
      }
      while (v10);
    }

    if (v138)
    {
      std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>((uint64_t)v137, (uint64_t)&v136, v138);
      for (i = 0; i != 256; i += 32)
      {
        v41 = &v139[i];
        *(_QWORD *)v41 = v41;
        *((_QWORD *)v41 + 1) = v41;
        *((_QWORD *)v41 + 2) = 0;
        *((_WORD *)v41 + 12) = 0;
      }
      v42 = (uint64_t)v137;
      v43 = 0.0;
      v44 = 0.0;
      if (v137 != &v136)
      {
        v45 = (uint64_t)v137;
        do
        {
          if (v44 <= *(double *)(v45 + 40))
            v44 = *(double *)(v45 + 40);
          if (v43 <= *(double *)(v45 + 32))
            v43 = *(double *)(v45 + 32);
          v45 = *(_QWORD *)(v45 + 8);
        }
        while ((char **)v45 != &v136);
        do
        {
          v46 = *(int *)(v42 + 16);
          v47 = operator new(0x20uLL);
          v48 = (uint64_t *)&v139[32 * v46];
          v49 = *(_QWORD *)(v42 + 20);
          v47[6] = *(_DWORD *)(v42 + 28);
          *((_QWORD *)v47 + 1) = v48;
          *((_QWORD *)v47 + 2) = v49;
          v50 = *v48;
          *(_QWORD *)v47 = *v48;
          *(_QWORD *)(v50 + 8) = v47;
          *v48 = (uint64_t)v47;
          ++v48[2];
          v51 = *(_DWORD *)(v42 + 20);
          v52 = *(_DWORD *)(v42 + 24);
          if (__PAIR64__(v52, v51) != 0x1518000000000)
          {
            if (v52 == 86400)
              v139[32 * *(int *)(v42 + 16) + 24] = 1;
            if (!v51)
              v139[32 * *(int *)(v42 + 16) + 25] = 1;
          }
          v42 = *(_QWORD *)(v42 + 8);
        }
        while ((char **)v42 != &v136);
      }
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 8);
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      for (j = 1; j != 8; ++j)
      {
        std::list<GEOPDLocalTimeRange>::list(&v124, (uint64_t)&v139[32 * j]);
        LOWORD(v127) = *(_WORD *)&v139[32 * j + 24];
        objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", v126);
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        for (k = v125; k != &v124; k = (uint64_t *)k[1])
        {
          v113 = k[2];
          v114 = *((_DWORD *)k + 6);
          v57 = -[GEOLocalTimeInterval initWithLocalTimeRange:]([GEOLocalTimeInterval alloc], "initWithLocalTimeRange:", &v113);
          objc_msgSend(v55, "addObject:", v57);

        }
        +[GEOPlaceDailyNormalizedHours dailyNormalizedHoursForWeekday:timeIntervals:closingThreshold:openingThreshold:openToMidnight:openFromMidnight:](GEOPlaceDailyNormalizedHours, "dailyNormalizedHoursForWeekday:timeIntervals:closingThreshold:openingThreshold:openToMidnight:openFromMidnight:", j, v55, v127, BYTE1(v127), v43, v44);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v53, "addObject:", v58);

        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(&v124);
        v59 = v100;
      }
      v60 = 0;
      v61 = 2;
      do
      {
        v62 = &v139[v60];
        if (v139[v60 + 56])
        {
          v63 = v60 == 192 ? 1 : v61;
          v64 = &v139[32 * v63];
          if (v64[25])
          {
            v65 = *((_QWORD *)v64 + 1);
            v66 = operator new(0x20uLL);
            v67 = *(_QWORD *)(v65 + 16);
            v66[6] = *(_DWORD *)(v65 + 24);
            *((_QWORD *)v66 + 1) = v62 + 32;
            *((_QWORD *)v66 + 2) = v67;
            v68 = *((_QWORD *)v62 + 4);
            *(_QWORD *)v66 = v68;
            *(_QWORD *)(v68 + 8) = v66;
            *((_QWORD *)v62 + 4) = v66;
            ++*(_QWORD *)&v139[v60 + 48];
            v69 = (uint64_t *)*((_QWORD *)v64 + 1);
            v70 = *v69;
            *(_QWORD *)(v70 + 8) = v69[1];
            *(_QWORD *)v69[1] = v70;
            --*((_QWORD *)v64 + 2);
            operator delete(v69);
          }
        }
        v60 += 32;
        ++v61;
      }
      while (v60 != 224);
      v71 = objc_alloc(MEMORY[0x1E0C99D48]);
      v72 = (void *)objc_msgSend(v71, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8]);
      v73 = v72;
      if (v97)
      {
        objc_msgSend(v72, "timeZone");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        v75 = objc_msgSend(v97, "isEqualToTimeZone:", v74);

        v59 = v100;
        if ((v75 & 1) == 0)
          objc_msgSend(v73, "setTimeZone:", v97);
      }
      objc_msgSend(v73, "components:fromDate:", 540, v59);
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      v77 = objc_msgSend(v76, "weekday");
      objc_msgSend(v73, "startOfDayForDate:", v59);
      v110 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v59, "timeIntervalSinceDate:", v110);
      v79 = v78;
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v106 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      v81 = objc_msgSend(v80, "firstWeekday");

      v124 = 0;
      v125 = &v124;
      v126 = 0x4012000000;
      v127 = __Block_byref_object_copy__101;
      v128 = __Block_byref_object_dispose__101;
      v129 = "";
      v130 = v81;
      v131 = 1;
      v116[0] = MEMORY[0x1E0C809B0];
      v116[1] = 3221225472;
      v116[2] = ___geoNormalizedAndViewHourModelsForPDHours_block_invoke;
      v116[3] = &unk_1E1C21078;
      v121 = &v124;
      v82 = v73;
      v117 = v82;
      v118 = v100;
      v123 = v77;
      v122 = v79;
      v83 = v76;
      v119 = v83;
      v84 = v106;
      v120 = v84;
      v85 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x18D765024](v116);
      v86 = 6;
      do
      {
        v87 = v81 + 1;
        if ((((_BYTE)v81 + 1) & 7u) <= 1uLL)
          v81 = 1;
        else
          v81 = v87 & 7;
        if ((v87 & 7) != 0)
          v88 = (v87 & 7) - 1;
        else
          v88 = 7;
        v89 = &v139[32 * v88];
        std::list<GEOPDLocalTimeRange>::list(&v113, (uint64_t)v89);
        v115 = *((_WORD *)v89 + 12);
        std::list<GEOPDLocalTimeRange>::list(v111, (uint64_t)&v139[32 * v81]);
        v112 = *(_WORD *)&v139[32 * v81 + 24];
        ((void (**)(_QWORD, uint64_t, uint64_t *, _QWORD *))v85)[2](v85, v81, &v113, v111);
        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(v111);
        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(&v113);
        --v86;
      }
      while (v86);
      ((void (**)(_QWORD, _QWORD, _BYTE *, _BYTE *))v85)[2](v85, 0, &v139[32 * v81], v139);
      v90 = (void *)objc_msgSend(v84, "copy");
      v91 = (void *)objc_msgSend(v53, "copy");
      v99[2](v99, v90, v91);

      _Block_object_dispose(&v124, 8);
      for (m = 224; m != -32; m -= 32)
        std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(&v139[m]);
    }
    else
    {
      ((void (*)(void (**)(id, void *, void *), _QWORD))v99[2])(v99, 0);
    }
    if (v138)
    {
      v94 = v136;
      v93 = v137;
      v95 = *v137;
      *((_QWORD *)v95 + 1) = *((_QWORD *)v136 + 1);
      **((_QWORD **)v94 + 1) = v95;
      v138 = 0;
      if (v93 != &v136)
      {
        do
        {
          v96 = (char **)v93[1];
          operator delete(v93);
          v93 = v96;
        }
        while (v96 != &v136);
      }
    }
  }
  else
  {
    v99[2](v99, 0, 0);
  }

}

void sub_1897BBBC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t *a58,uint64_t a59)
{
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;

  if (a59)
  {
    v61 = a57;
    v60 = a58;
    v62 = *a58;
    *(_QWORD *)(v62 + 8) = *(_QWORD *)(a57 + 8);
    **(_QWORD **)(v61 + 8) = v62;
    a59 = 0;
    if (v60 != &a57)
    {
      do
      {
        v63 = (uint64_t *)v60[1];
        operator delete(v60);
        v60 = v63;
      }
      while (v63 != &a57);
    }
  }

  _Unwind_Resume(a1);
}

void ___geoNormalizedAndViewHourModelsForPDHours_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v10;
  unsigned int v11;
  id v12;
  uint64_t v13;
  void *v14;
  unsigned int v15;
  id v16;
  double v17;
  uint64_t v18;
  double v19;
  void *v20;
  unsigned int v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;

  if (*(_QWORD *)(a3 + 16) != *(_QWORD *)(a4 + 16))
    goto LABEL_12;
  v6 = a4;
  v7 = a3;
  while (1)
  {
    v7 = *(_QWORD *)(v7 + 8);
    v6 = *(_QWORD *)(v6 + 8);
    if (v7 == a3 || v6 == a4)
      break;
    if (*(_DWORD *)(v7 + 16) != *(_DWORD *)(v6 + 16) || *(_DWORD *)(v7 + 20) != *(_DWORD *)(v6 + 20))
      goto LABEL_12;
  }
  if (a2)
  {
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 56);
  }
  else
  {
LABEL_12:
    objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:");
    v29 = (id)objc_claimAutoreleasedReturnValue();
    for (i = *(_QWORD *)(a3 + 8); i != a3; i = *(_QWORD *)(i + 8))
    {
      objc_msgSend(*(id *)(a1 + 32), "components:fromDate:", 28, *(_QWORD *)(a1 + 40), v29);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setDay:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 48) - *(int *)(a1 + 80) + objc_msgSend(v10, "day"));
      v11 = *(_DWORD *)(i + 16);
      v12 = v10;
      objc_msgSend(v12, "setHour:", v11 / 0xE10uLL);
      objc_msgSend(v12, "setMinute:", v11 / 0x3C - 60 * (((143165577 * (unint64_t)(v11 / 0x3C)) >> 32) >> 1));
      objc_msgSend(v12, "setSecond:", v11 % 0x3C);

      if (*(_DWORD *)(i + 20) != 86400)
        goto LABEL_16;
      v13 = *(_QWORD *)(i + 8);
      if (v13 == a3)
        goto LABEL_16;
      if (*(_DWORD *)(v13 + 16))
        goto LABEL_16;
      v20 = (void *)objc_msgSend(v12, "copy");
      v21 = *(_DWORD *)(v13 + 20);
      v16 = v20;
      objc_msgSend(v16, "setHour:", v21 / 0xE10uLL);
      objc_msgSend(v16, "setMinute:", v21 / 0x3C - 60 * (((143165577 * (unint64_t)(v21 / 0x3C)) >> 32) >> 1));
      objc_msgSend(v16, "setSecond:", v21 % 0x3C);

      objc_msgSend(v16, "setDay:", objc_msgSend(v16, "day") + 1);
      i = *(_QWORD *)(i + 8);
      if (!v16)
      {
LABEL_16:
        v14 = (void *)objc_msgSend(v12, "copy");
        v15 = *(_DWORD *)(i + 20);
        v16 = v14;
        objc_msgSend(v16, "setHour:", v15 / 0xE10uLL);
        objc_msgSend(v16, "setMinute:", v15 / 0x3C - 60 * (((143165577 * (unint64_t)(v15 / 0x3C)) >> 32) >> 1));
        objc_msgSend(v16, "setSecond:", v15 % 0x3C);

      }
      if (!a2
        && (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 56)
          + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 48))
         % 7uLL == *(_DWORD *)(a1 + 80))
      {
        v18 = *(_QWORD *)(a3 + 8);
        if (v18 != a3)
        {
          v19 = *(double *)(a1 + 72);
          while (1)
          {
            LODWORD(v17) = *(_DWORD *)(v18 + 16);
            v17 = (double)*(unint64_t *)&v17;
            if (v19 >= v17)
            {
              LODWORD(v17) = *(_DWORD *)(v18 + 20);
              v17 = (double)*(unint64_t *)&v17;
              if (v19 <= v17)
                break;
            }
            v18 = *(_QWORD *)(v18 + 8);
            if (v18 == a3)
              goto LABEL_29;
          }
          v22 = objc_msgSend(*(id *)(a1 + 48), "day");
          if (v22 == objc_msgSend(v16, "day") - 7)
          {
            objc_msgSend(v12, "setDay:", objc_msgSend(v12, "day") - 7);
            objc_msgSend(v16, "setDay:", objc_msgSend(v16, "day") - 7);
          }
        }
      }
LABEL_29:
      objc_msgSend(*(id *)(a1 + 32), "dateFromComponents:", v12);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "dateFromComponents:", v16);
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = (void *)v24;
      if (v23 && v24 && objc_msgSend(v23, "compare:", v24) == -1)
      {
        v26 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3588]), "initWithStartDate:endDate:", v23, v25);
        objc_msgSend(v29, "addObject:", v26);

      }
    }
    +[GEOPlaceDailyHours dailyHours:forDays:](GEOPlaceDailyHours, "dailyHours:forDays:", v29, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 48), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 56), v29);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (v27)
      objc_msgSend(*(id *)(a1 + 56), "addObject:", v27);
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    *(_QWORD *)(v28 + 48) = a2;
    *(_QWORD *)(v28 + 56) = 1;

  }
}

void sub_1897BC238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  void *v9;

  _Unwind_Resume(a1);
}

BOOL GEOIsWeekDayInRange(unint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a1 >= a2 && a1 - a2 < a3)
    return 1;
  return a1 + 7 >= a2 && a1 + 7 - a2 < a3;
}

_QWORD *std::list<GEOPDLocalTimeRange>::list(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;

  *a1 = a1;
  a1[1] = a1;
  a1[2] = 0;
  v3 = *(_QWORD *)(a2 + 8);
  if (v3 != a2)
  {
    v5 = 1;
    v6 = a1;
    do
    {
      v7 = operator new(0x20uLL);
      v8 = *(_QWORD *)(v3 + 16);
      v7[6] = *(_DWORD *)(v3 + 24);
      *((_QWORD *)v7 + 1) = a1;
      *((_QWORD *)v7 + 2) = v8;
      *(_QWORD *)v7 = v6;
      *((_QWORD *)v6 + 1) = v7;
      *a1 = v7;
      a1[2] = v5;
      v3 = *(_QWORD *)(v3 + 8);
      ++v5;
      v6 = v7;
    }
    while (v3 != a2);
  }
  return a1;
}

void sub_1897BC36C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  std::__list_imp<std::__list_iterator<LoadItem,void *>>::clear(v1);
  _Unwind_Resume(a1);
}

uint64_t std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t i;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t j;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;

  if (a3 >= 2)
  {
    if (a3 == 2)
    {
      v4 = *(uint64_t **)a2;
      if (*(_DWORD *)(*(_QWORD *)a2 + 20) < *(_DWORD *)(result + 20))
      {
        v5 = *v4;
        *(_QWORD *)(v5 + 8) = v4[1];
        *(_QWORD *)v4[1] = v5;
        v6 = *(_QWORD *)result;
        *(_QWORD *)(v6 + 8) = v4;
        *v4 = v6;
        *(_QWORD *)result = v4;
        v4[1] = result;
        return (uint64_t)v4;
      }
    }
    else
    {
      v8 = a3 >> 1;
      v9 = (a3 >> 1) + 1;
      v10 = result;
      do
      {
        v10 = *(_QWORD *)(v10 + 8);
        --v9;
      }
      while (v9 > 1);
      v11 = std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>(result, v10, a3 >> 1);
      result = std::list<_geoNormalizedAndViewHourModelsForPDHours::DenormalizedTimeRange>::__sort<_geoNormalizedAndViewHourModelsForPDHours::$_0>(v10, a2, a3 - v8);
      v12 = *(_DWORD *)(v11 + 20);
      if (*(_DWORD *)(result + 20) >= v12)
      {
        v14 = *(uint64_t **)(v11 + 8);
        i = result;
        result = v11;
      }
      else
      {
        for (i = *(_QWORD *)(result + 8); i != a2; i = *(_QWORD *)(i + 8))
        {
          if (*(_DWORD *)(i + 20) >= v12)
            goto LABEL_14;
        }
        i = a2;
LABEL_14:
        v15 = *(_QWORD *)i;
        v16 = *(_QWORD *)result;
        *(_QWORD *)(v16 + 8) = *(_QWORD *)(*(_QWORD *)i + 8);
        **(_QWORD **)(v15 + 8) = v16;
        v17 = *(_QWORD *)v11;
        v14 = *(uint64_t **)(v11 + 8);
        *(_QWORD *)(v17 + 8) = result;
        *(_QWORD *)result = v17;
        *(_QWORD *)v11 = v15;
        *(_QWORD *)(v15 + 8) = v11;
      }
      if (v14 != (uint64_t *)i && i != a2)
      {
        v18 = i;
        do
        {
          v19 = *((_DWORD *)v14 + 5);
          if (*(_DWORD *)(i + 20) >= v19)
          {
            v14 = (uint64_t *)v14[1];
          }
          else
          {
            for (j = *(_QWORD *)(i + 8); j != a2; j = *(_QWORD *)(j + 8))
            {
              if (*(_DWORD *)(j + 20) >= v19)
                goto LABEL_25;
            }
            j = a2;
LABEL_25:
            v21 = *(_QWORD *)j;
            v22 = *(_QWORD *)i;
            *(_QWORD *)(v22 + 8) = *(_QWORD *)(*(_QWORD *)j + 8);
            **(_QWORD **)(v21 + 8) = v22;
            if (v18 == i)
              v18 = j;
            v24 = *v14;
            v23 = (uint64_t *)v14[1];
            *(_QWORD *)(v24 + 8) = i;
            *(_QWORD *)i = v24;
            *v14 = v21;
            *(_QWORD *)(v21 + 8) = v14;
            v14 = v23;
            i = j;
          }
        }
        while (v14 != (uint64_t *)v18 && i != a2);
      }
    }
  }
  return result;
}

id _clearedPlaceRequestFromRequest(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v1 = a1;
  objc_msgSend(v1, "clientMetadata");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v2, "hasDeviceExtendedLocation") & 1) != 0
    || (objc_msgSend(v2, "deviceHistoricalLocations"),
        v3 = (void *)objc_claimAutoreleasedReturnValue(),
        v4 = objc_msgSend(v3, "count"),
        v3,
        v4))
  {
    v5 = (void *)objc_msgSend(v1, "copy");
    objc_msgSend(v5, "clientMetadata");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(v6, "copy");
    objc_msgSend(v5, "setClientMetadata:", v7);

    objc_msgSend(v5, "clientMetadata");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "clearLocations");

    if (objc_msgSend(v5, "hasPlaceRequestParameters"))
    {
      objc_msgSend(v5, "placeRequestParameters");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = (void *)objc_msgSend(v9, "copy");
      objc_msgSend(v5, "setPlaceRequestParameters:", v10);

      objc_msgSend(v5, "placeRequestParameters");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "clearLocations");

    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

_QWORD *_clearedPlaceResponseFromResponse(void *a1)
{
  id v1;
  id *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1;
  objc_msgSend(v1, "globalResult");
  v2 = (id *)objc_claimAutoreleasedReturnValue();
  -[GEOPDPlaceGlobalResult searchResult](v2);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (_QWORD *)v3;
  if (v3)
  {
    -[GEOPDSearchResult _readClientResolvedResult](v3);
    v5 = v4[4];

    if (!v5)
    {
      v4 = 0;
      goto LABEL_6;
    }
    v4 = (_QWORD *)objc_msgSend(v1, "copy");
    objc_msgSend(v1, "globalResult");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = (void *)objc_msgSend(v6, "copy");
    objc_msgSend(v4, "setGlobalResult:", v7);

    objc_msgSend(v4, "globalResult");
    v2 = (id *)objc_claimAutoreleasedReturnValue();
    -[GEOPDPlaceGlobalResult searchResult](v2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOPDSearchResult setClientResolvedResult:]((uint64_t)v8, 0);
  }
  else
  {
    v8 = 0;
  }

LABEL_6:
  return v4;
}

uint64_t _GEOSQLiteVirtualTableCreate(sqlite3 *a1, void *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;

  v7 = (void *)MEMORY[0x1E0CB3940];
  v8 = a2;
  objc_msgSend(v8, "name");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "columnDefinitions");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringWithFormat:", CFSTR("CREATE TABLE %@ (%@)"), v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_retainAutorelease(v11);
  v13 = sqlite3_declare_vtab(a1, (const char *)objc_msgSend(v12, "UTF8String"));
  if (!(_DWORD)v13)
  {
    v14 = malloc_type_malloc(0x20uLL, 0x10F0040FD5E28DBuLL);
    *v14 = 0;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v8;
    *a5 = v14;
  }

  return v13;
}

uint64_t _GEOSQLiteVirtualTableBestIndex()
{
  return 0;
}

uint64_t _GEOSQLiteVirtualTableDestroy(void *a1)
{
  free(a1);
  return 0;
}

uint64_t _GEOSQLiteVirtualTableOpen(uint64_t a1, _QWORD *a2)
{
  _DWORD *v4;

  v4 = malloc_type_malloc(0x10uLL, 0x1020040EDED9539uLL);
  *(_QWORD *)v4 = 0;
  v4[2] = 0;
  v4[3] = objc_msgSend(*(id *)(a1 + 24), "rowCount");
  *a2 = v4;
  return 0;
}

uint64_t _GEOSQLiteVirtualTableClose(void *a1)
{
  free(a1);
  return 0;
}

uint64_t _GEOSQLiteVirtualTableFilter(uint64_t a1)
{
  *(_DWORD *)(a1 + 8) = 0;
  return 0;
}

uint64_t _GEOSQLiteVirtualTableNext(uint64_t a1)
{
  ++*(_DWORD *)(a1 + 8);
  return 0;
}

BOOL _GEOSQLiteVirtualTableEOF(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) >= *(_DWORD *)(a1 + 12);
}

uint64_t _GEOSQLiteVirtualTableColumn(unsigned int *a1, uint64_t a2, int a3)
{
  objc_msgSend(*(id *)(*(_QWORD *)a1 + 24), "fetchValueForContext:row:column:", a2, a1[2], a3);
  return 0;
}

uint64_t _GEOSQLiteVirtualTableRowID(uint64_t a1, _QWORD *a2)
{
  *a2 = *(unsigned int *)(a1 + 8);
  return 0;
}

uint64_t _GEOSQLiteVirtualTableRename()
{
  return 0;
}

id GEOGetCompanionExtrasLog_0()
{
  if (qword_1ECDBCC80 != -1)
    dispatch_once(&qword_1ECDBCC80, &__block_literal_global_209);
  return (id)_MergedGlobals_340;
}

void sub_1897C45BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDisplayDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  int v44;
  GEOLocalizedString *v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  void *v52;
  char v53;
  uint64_t v54;
  __int16 v55;
  int v56;
  __int16 v57;
  void *v58;
  int v60;
  int *v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFCFFF9FFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 5) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 3;
        v62 = v15 & ~(_BYTE)v10 | v8;
        v63 = v15 | v10 | v62;
        if ((((v15 | v10) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v64 = (v16 == 0) | v15 | v10;
        v65 = v15 | v10;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v20) || *(_BYTE *)(v3 + *v18))
      goto LABEL_109;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v20))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_109:
      v60 = 1;
      goto LABEL_110;
    }
    v30 = v23 >> 3;
    v31 = v65;
    if ((v64 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_87;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(v3 + *v20))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0)
            goto LABEL_90;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_92;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_90:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_92:
        v54 = 76;
        goto LABEL_97;
      case 2:
        if (!v31)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v55 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v45 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
          goto LABEL_127;
        PBReaderRecallMark();
        v46 = 56;
        goto LABEL_86;
      case 3:
        if (!v31)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v55 = *(_WORD *)(a1 + 84) << 12;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v45 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
          goto LABEL_127;
        PBReaderRecallMark();
        v46 = 24;
        goto LABEL_86;
      case 4:
        if (!v31)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v55 = *(_WORD *)(a1 + 84) << 11;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v45 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v45, (void *)v3))
          goto LABEL_127;
        PBReaderRecallMark();
        v46 = 32;
        goto LABEL_86;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_87;
        v47 = 0;
        v48 = 0;
        v38 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          v49 = *v17;
          v50 = *(_QWORD *)(v3 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v20))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v50 + 1;
            v38 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              v27 = v48++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_96:
        v54 = 80;
LABEL_97:
        *(_DWORD *)(a1 + v54) = v38;
        goto LABEL_108;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 84) & 0x40) != 0)
          goto LABEL_87;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v45 = objc_alloc_init(GEOPDPlace);
        if (!GEOPDPlaceReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
          goto LABEL_127;
        PBReaderRecallMark();
        -[GEORPDisplayDetails _addNoFlagsPlace:](a1, v45);

        goto LABEL_107;
      case 7:
        if (!v31)
          goto LABEL_87;
        if ((*(_WORD *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_128;
          v55 = *(_WORD *)(a1 + 84) << 10;
LABEL_106:
          v6 += v55 >> 15;
LABEL_107:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
LABEL_108:
          if (!(v63 & 1 | (v6 != 0)))
            goto LABEL_109;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_128;
        v45 = objc_alloc_init(GEOTextLink);
        if (GEOTextLinkReadAllFrom((uint64_t)v45, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v46 = 40;
LABEL_86:
          v52 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;

          --v6;
          goto LABEL_107;
        }
LABEL_127:

LABEL_128:
        v60 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_110:
        v61 = &OBJC_IVAR___GEOTileCoordinate__x;
        if ((v62 & 1) != 0)
LABEL_111:
          *(_WORD *)(a1 + v61[887]) |= 4u;
        if (v65 & 1 | ((v60 & 1) == 0))
        {
          *(_WORD *)(a1 + v61[887]) |= 0x80u;
          *(_WORD *)(a1 + v61[887]) |= 8u;
          *(_WORD *)(a1 + v61[887]) |= 0x10u;
          *(_WORD *)(a1 + v61[887]) |= 0x40u;
          *(_WORD *)(a1 + v61[887]) |= 0x20u;
        }
        else if (v16)
        {
          while (1)
          {
            v56 = *v16++;
            v57 = 128;
            switch(v56)
            {
              case 0:
                goto LABEL_121;
              case 2:
                goto LABEL_120;
              case 3:
                v57 = 8;
                goto LABEL_120;
              case 4:
                v57 = 16;
                goto LABEL_120;
              case 6:
                v57 = 64;
                goto LABEL_120;
              case 7:
                v57 = 32;
LABEL_120:
                *(_WORD *)(a1 + v61[887]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_121:
        if (v60)
          v3 = *(_BYTE *)(v3 + *v18) == 0;
        else
          v3 = 0;
        if ((v65 & 1) != 0)
        {
          v58 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v62 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_87:
          v53 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BD8];
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v53 & 1) == 0)
          {
            v60 = 0;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          if (!v44)
          {
            v60 = 0;
            v61 = &OBJC_IVAR___GEOTileCoordinate__x;
            goto LABEL_111;
          }
        }
        goto LABEL_108;
    }
  }
}

void sub_1897C5000(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C5144(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C545C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C5790(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C6458(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDisplayDetailsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(a1[5], "readAll:", 1);
}

unint64_t GEORPDisplayDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPDisplayDetailsReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPDisplayDetailsReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPDisplayDetailsReadAllFrom_initialTag;
  Specified = GEORPDisplayDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPDisplayDetailsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1897C6730(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPDisplayDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPDisplayDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897C6790(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPDisplayDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_45;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_54;
          }
        case 2u:
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
            goto LABEL_57;
          goto LABEL_53;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1))
            goto LABEL_57;
          goto LABEL_53;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_57;
          v22 = 0;
          break;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
            goto LABEL_57;
          goto LABEL_53;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTextLinkIsValid(a1))
            goto LABEL_57;
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_54;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1897C6D84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPDisplayDetailsIsDirty(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_WORD *)(a1 + 84);
  if ((v2 & 0x100) != 0)
    return 1;
  if ((v2 & 0x80) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 56)))
      return 1;
    v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 8) == 0)
    goto LABEL_8;
  if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 24)))
    return 1;
  v2 = *(_WORD *)(a1 + 84);
LABEL_8:
  if ((v2 & 0x50) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEOTextLinkIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if ((GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(*((_QWORD *)&v8 + 1) + 8 * i)) & 1) != 0)
        {
          v3 = 1;
          goto LABEL_26;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_26:

  return v3;
}

os_unfair_lock_s *GEORPDisplayDetailsIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPDisplayDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897C756C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C7AB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  unint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  GEORPFeedbackComponentValue *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  void *v33;
  uint64_t v34;
  _BOOL8 v35;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        v19 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_55;
          v26 = objc_alloc_init(GEORPFeedbackComponentValue);
          if (!GEORPFeedbackComponentValueReadAllFrom((uint64_t)v26, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addValue:", v26, 0, 0);

        }
        else
        {
          if ((_DWORD)v19 == 2)
          {
            v27 = 0;
            v28 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 32) |= 1u;
            while (1)
            {
              v29 = *v6;
              v30 = *(_QWORD *)&v5[v29];
              if (v30 == -1 || v30 >= *(_QWORD *)&v5[*v7])
                break;
              v31 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v30);
              *(_QWORD *)&v5[v29] = v30 + 1;
              v22 |= (unint64_t)(v31 & 0x7F) << v27;
              if ((v31 & 0x80) == 0)
                goto LABEL_48;
              v27 += 7;
              v16 = v28++ >= 9;
              if (v16)
              {
                LODWORD(v22) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_50:
            v34 = 24;
            goto LABEL_51;
          }
          if ((_DWORD)v19 == 1)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
            *(_BYTE *)(a1 + 32) |= 2u;
            while (1)
            {
              v23 = *v6;
              v24 = *(_QWORD *)&v5[v23];
              if (v24 == -1 || v24 >= *(_QWORD *)&v5[*v7])
                break;
              v25 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v24);
              *(_QWORD *)&v5[v23] = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if ((v25 & 0x80) == 0)
                goto LABEL_44;
              v20 += 7;
              v16 = v21++ >= 9;
              if (v16)
              {
                LODWORD(v22) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8])
              LODWORD(v22) = 0;
LABEL_46:
            v34 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v34) = v22;
            continue;
          }
          if (!*(_QWORD *)(a1 + 8))
          {
            v32 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v33 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v32;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_55;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_1897C8F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackComponentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897C8FFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackComponentValueIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((_DWORD)v16 == 2)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v26 = v25 + 1;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
        }
        if ((_DWORD)v16 == 1)
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
              break;
            v20 = v19 + 1;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_46;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEORPFeedbackComponentValueIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEORPFeedbackNotificationIsValid((unsigned __int8 *)a1))
            goto LABEL_48;
          goto LABEL_51;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackOverviewIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackConversationIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapInfoIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPThirdPartyPhotoSharingPreferenceIsValid(a1))
            goto LABEL_51;
          goto LABEL_48;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPhotoAttributionPreferencesIsValid(a1))
            goto LABEL_51;
LABEL_48:
          PBReaderRecallMark();
          goto LABEL_49;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_51:
            PBReaderRecallMark();
            return 0;
          }
LABEL_49:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_50;
          break;
      }
    }
  }
LABEL_50:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1897CA054(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentQueryParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v27;
  unint64_t v29;
  BOOL v30;
  int *v31;
  int v32;
  int v33;
  BOOL v34;
  GEORPPoiEnrichmentQueryParameters *v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  int v40;
  char v41;
  char v42;
  char v43;
  int v44;
  int v45;
  void *v46;
  int v48;
  int *v49;
  char v50;
  char v51;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        v14 = v11 != 0;
        v15 = v14 | v10;
        v50 = v14 & ~(_BYTE)v10 | v9;
        v51 = v14 | v10 | v50;
        if ((((v14 | v10) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v9;
LABEL_8:
        v13 = v10;
LABEL_9:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_65;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_24;
      v20 += 7;
      if (v21++ >= 9)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_24:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_26:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_65:
      v48 = 1;
      goto LABEL_66;
    }
    v29 = v22 >> 3;
    v30 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      v31 = v16;
      do
      {
        v33 = *v31++;
        v32 = v33;
        v30 = v33 != 0;
        if (v33)
          v34 = v32 == (_DWORD)v29;
        else
          v34 = 1;
      }
      while (!v34);
    }
    if ((_DWORD)v29 == 5)
      break;
    if ((_DWORD)v29 == 4)
    {
      if (v30)
      {
        if ((*(_BYTE *)(a1 + 52) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_86;
          v35 = objc_alloc_init(GEORPPoiEnrichmentQueryParameters);
          if (!GEORPPoiEnrichmentQueryParametersReadAllFrom((uint64_t)v35, (void *)v3))
            goto LABEL_85;
          PBReaderRecallMark();
          v36 = 24;
LABEL_49:
          v37 = *(void **)(a1 + v36);
          *(_QWORD *)(a1 + v36) = v35;

          --v8;
LABEL_63:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_86;
        v42 = *(_BYTE *)(a1 + 52) << 6;
LABEL_62:
        v8 += v42 >> 7;
        goto LABEL_63;
      }
    }
    else if ((v50 & 1) != 0 && (*(_BYTE *)(a1 + 52) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v38 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v39 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v38;

      }
      v40 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      if (!v40)
      {
        v48 = 0;
        v49 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        goto LABEL_68;
      }
      goto LABEL_64;
    }
LABEL_56:
    v41 = PBReaderSkipValueWithTag();
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v41 & 1) == 0)
    {
      v48 = 0;
LABEL_66:
      v49 = &OBJC_IVAR___GEOTextItemContainer__textItems;
      goto LABEL_67;
    }
LABEL_64:
    if (!(v51 & 1 | (v8 != 0)))
      goto LABEL_65;
  }
  if (!v30)
    goto LABEL_56;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_86;
    v42 = 32 * *(_BYTE *)(a1 + 52);
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_86;
  v35 = objc_alloc_init(GEORPRapQueryParameters);
  if (GEORPRapQueryParametersReadAllFrom(v35, (void *)v3))
  {
    PBReaderRecallMark();
    v36 = 32;
    goto LABEL_49;
  }
LABEL_85:

LABEL_86:
  v48 = 0;
  v49 = &OBJC_IVAR___GEOTextItemContainer__textItems;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  if ((v50 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v49[136]) |= 1u;
LABEL_69:
  if (v15 & 1 | ((v48 & 1) == 0))
  {
    *(_BYTE *)(a1 + v49[136]) |= 2u;
    *(_BYTE *)(a1 + v49[136]) |= 4u;
    goto LABEL_79;
  }
  if (v16)
  {
    while (1)
    {
      v45 = *v16++;
      v44 = v45;
      if (v45 == 4)
        break;
      if (v44 == 5)
      {
        v43 = 4;
LABEL_75:
        *(_BYTE *)(a1 + v49[136]) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_79;
      }
    }
    v43 = 2;
    goto LABEL_75;
  }
LABEL_79:
  if (v48)
  {
    v3 = *(_BYTE *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0)
      return v3;
LABEL_83:
    v46 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_83;
  }
  return v3;
}

void sub_1897CA6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CACCC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentQueryParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackComponentQueryParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackComponentQueryParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackComponentQueryParametersReadAllFrom_initialTag;
  Specified = GEORPFeedbackComponentQueryParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897CAE80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentQueryParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackComponentQueryParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897CAEE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentQueryParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_30;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_30;
      if ((v8 >> 3) == 5)
        break;
      if ((v8 >> 3) == 4)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPoiEnrichmentQueryParametersIsValid(a1))
          goto LABEL_31;
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_30;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapQueryParametersIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPPoiEnrichmentQueryParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRapQueryParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v16 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v16;
}

void sub_1897CB5B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackComponentQueryParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897CB858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CBAA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CBD2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  unsigned __int8 v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEORPFeedbackNotification *v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  void *v43;
  char v44;
  __int16 v45;
  int v46;
  __int16 v47;
  void *v48;
  int v50;
  char v51;
  char v52;
  char v53;
  BOOL v54;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 84);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 80));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (*(_WORD *)(a1 + 92) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFBFFFFFFFEFFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 4) & 1));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 4;
        v16 = v15 & ~(_BYTE)v10 | v8;
        v17 = v15 | v10;
        v51 = v16;
        v52 = v17 | v16;
        if (((v17 | v7) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v53 = (v18 == 0) | v17;
        v54 = v17;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    v22 = (int *)MEMORY[0x1E0D82BD8];
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) || *(_BYTE *)(v3 + *v20))
      goto LABEL_100;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v22))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v25 = 0;
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_100:
      v50 = 1;
      goto LABEL_101;
    }
    v32 = v25 >> 3;
    v33 = v54;
    if ((v53 & 1) == 0)
    {
      v34 = v18;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_121;
          v38 = objc_alloc_init(GEORPFeedbackNotification);
          if (GEORPFeedbackNotificationReadAllFrom((uint64_t)v38, (void *)v3))
          {
            PBReaderRecallMark();
            v39 = 32;
            goto LABEL_80;
          }
          goto LABEL_120;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_121;
        v45 = *(_WORD *)(a1 + 92) << 13;
        goto LABEL_97;
      case 2:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v45 = *(_WORD *)(a1 + 92) << 12;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v38 = objc_alloc_init(GEORPFeedbackOverview);
        if (!GEORPFeedbackOverviewReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v39 = 40;
        goto LABEL_80;
      case 3:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v45 = *(_WORD *)(a1 + 92) << 14;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v38 = objc_alloc_init(GEORPFeedbackConversation);
        if (!GEORPFeedbackConversationReadAllFrom(v38, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v39 = 24;
        goto LABEL_80;
      case 4:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v45 = *(_WORD *)(a1 + 92) << 10;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v38 = objc_alloc_init(GEORPPoiEnrichment);
        if (!GEORPPoiEnrichmentReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v39 = 56;
        goto LABEL_80;
      case 5:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v45 = *(_WORD *)(a1 + 92) << 9;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v38 = objc_alloc_init(GEORPRapInfo);
        if (!GEORPRapInfoReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
          goto LABEL_120;
        PBReaderRecallMark();
        v39 = 64;
        goto LABEL_80;
      case 6:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v45 = *(_WORD *)(a1 + 92) << 8;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v38 = objc_alloc_init(GEORPThirdPartyPhotoSharingPreference);
        if (!GEORPThirdPartyPhotoSharingPreferenceReadAllFrom((uint64_t)v38, (void *)v3))
          goto LABEL_120;
        PBReaderRecallMark();
        v39 = 72;
        goto LABEL_80;
      case 7:
        if (!v33)
          goto LABEL_81;
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_121;
          v45 = *(_WORD *)(a1 + 92) << 11;
LABEL_97:
          v6 += v45 >> 15;
LABEL_98:
          v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_99:
          if (!(v52 & 1 | (v6 != 0)))
            goto LABEL_100;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_121;
        v38 = objc_alloc_init(GEORPPhotoAttributionPreferences);
        if (GEORPPhotoAttributionPreferencesReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          v39 = 48;
LABEL_80:
          v43 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          --v6;
          goto LABEL_98;
        }
LABEL_120:

LABEL_121:
        v50 = 0;
        v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_101:
        if ((v51 & 1) != 0)
LABEL_102:
          *(_WORD *)(a1 + 92) |= 1u;
        if (v54 || (v50 & 1) == 0)
        {
          *(_WORD *)(a1 + 92) |= 4u;
          *(_WORD *)(a1 + 92) |= 8u;
          *(_WORD *)(a1 + 92) |= 2u;
          *(_WORD *)(a1 + 92) |= 0x20u;
          *(_WORD *)(a1 + 92) |= 0x40u;
          *(_WORD *)(a1 + 92) |= 0x80u;
          *(_WORD *)(a1 + 92) |= 0x10u;
        }
        else if (v18)
        {
          while (1)
          {
            v46 = *v18++;
            v47 = 4;
            switch(v46)
            {
              case 0:
                goto LABEL_114;
              case 1:
                goto LABEL_113;
              case 2:
                v47 = 8;
                goto LABEL_113;
              case 3:
                v47 = 2;
                goto LABEL_113;
              case 4:
                v47 = 32;
                goto LABEL_113;
              case 5:
                v47 = 64;
                goto LABEL_113;
              case 6:
                v47 = 128;
                goto LABEL_113;
              case 7:
                v47 = 16;
LABEL_113:
                *(_WORD *)(a1 + 92) |= v47;
                break;
              default:
                continue;
            }
          }
        }
LABEL_114:
        if (v50)
          v3 = *(_BYTE *)(v3 + *v20) == 0;
        else
          v3 = 0;
        if (v54)
        {
          v48 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v51 & 1) == 0 || (*(_WORD *)(a1 + 92) & 1) != 0)
        {
LABEL_81:
          v44 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if ((v44 & 1) == 0)
          {
            v50 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v20 = (int *)MEMORY[0x1E0D82BC8];
          if (!v42)
          {
            v50 = 0;
            goto LABEL_102;
          }
        }
        goto LABEL_99;
    }
  }
}

void sub_1897CC72C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CC870(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CC9B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CCAF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CCC3C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CCD7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CD724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackComponentValueCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  objc_msgSend(a1[4], "readAll:", 1);
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[3], "readAll:", 1);
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[8], "readAll:", 1);
  objc_msgSend(a1[9], "readAll:", 1);
  return objc_msgSend(a1[6], "readAll:", 1);
}

unint64_t GEORPFeedbackComponentValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 84))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackComponentValueReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 84) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackComponentValueReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackComponentValueReadAllFrom_initialTag;
  Specified = GEORPFeedbackComponentValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackComponentValueCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1897CD94C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackComponentValueReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackComponentValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897CD9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackNotificationIsValid(unsigned __int8 *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;
  _BOOL8 v15;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v6 = a1[*v4];
    if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
      break;
    if (a1[*v4])
    {
      v6 = 1;
      break;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)&a1[v10];
      if (v11 == -1 || v11 >= *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v11);
      *(_QWORD *)&a1[v10] = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v6 = a1[*v4];
    if (a1[*v4])
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      break;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_22;
    }
  }
  v15 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v15;
}

BOOL GEORPFeedbackOverviewIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_47;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_41;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_44;
          }
        case 2u:
          if (v14 == 2)
            goto LABEL_43;
          goto LABEL_47;
        case 3u:
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1))
            goto LABEL_47;
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_47;
          v22 = 0;
          break;
        case 6u:
          if (v14 == 2)
            goto LABEL_43;
          goto LABEL_47;
        default:
LABEL_43:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_47:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_44;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_44:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFeedbackConversationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackConversationMessageIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPRapInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v16 = 0;
          while (1)
          {
            v17 = *v2;
            v18 = *(_QWORD *)&a1[v17];
            if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
              goto LABEL_42;
            v19 = v18 + 1;
            v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
            *(_QWORD *)&a1[v17] = v19;
            if (v20 < 0)
            {
              v21 = v16++ > 8;
              if (!v21)
                continue;
            }
            goto LABEL_43;
          }
        case 2u:
          if (v14 == 2)
            goto LABEL_28;
          goto LABEL_46;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapResponseIsValid(a1))
            goto LABEL_46;
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v22 = 0;
          break;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v23 = *v2;
        v24 = *(_QWORD *)&a1[v23];
        if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
          break;
        v25 = v24 + 1;
        v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
        *(_QWORD *)&a1[v23] = v25;
        if (v26 < 0)
        {
          v21 = v22++ > 8;
          if (!v21)
            continue;
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1897CE474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackComponentValueIsDirty(uint64_t a1)
{
  __int16 v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x104) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if (GEORPFeedbackOverviewIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 2) != 0)
    return 1;
  if ((v2 & 0x20) != 0)
  {
    if ((GEORPPoiEnrichmentIsDirty(*(os_unfair_lock_s **)(a1 + 56)) & 1) != 0)
      return 1;
    v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x40) == 0)
    goto LABEL_13;
  if ((GEORPRapInfoIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) != 0)
    return 1;
  v2 = *(_WORD *)(a1 + 92);
LABEL_13:
  if ((v2 & 0x80) != 0)
    return 1;
  return (v2 & 0x10) != 0 && GEORPPhotoAttributionPreferencesIsDirty(*(_QWORD *)(a1 + 48));
}

os_unfair_lock_s *GEORPFeedbackComponentValueIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackComponentValueIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897CE928(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CED5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackConversationReadAllFrom(_QWORD *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEORPFeedbackConversationMessage *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v19 = objc_alloc_init(GEORPFeedbackConversationMessage);
          if (!GEORPFeedbackConversationMessageReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMessage:", v19, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = (void *)a1[1];
            a1[1] = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_1897CF778(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackConversationReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackConversationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897CF7D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackConversationMessageIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_38;
          goto LABEL_30;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPPostedByIsValid(a1))
            goto LABEL_38;
          goto LABEL_35;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPTimestampIsValid(a1))
            goto LABEL_38;
          goto LABEL_35;
        case 4u:
          if (v14 == 2)
            goto LABEL_30;
          goto LABEL_38;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackSurveyResponseIsValid(a1))
            goto LABEL_38;
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_36;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_38:
            PBReaderRecallMark();
            return 0;
          }
LABEL_36:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_37;
          break;
      }
    }
  }
LABEL_37:
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1897D0220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackConversationMessageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  GEORPPostedBy *v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  int v48;
  char v49;
  void *v50;
  int v52;
  int *v53;
  char v54;
  char v55;
  char v56;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFFFFFEFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ (*(_BYTE *)(a1 + 76) & 1)+ ((*(_BYTE *)(a1 + 76) & 0x10) != 0));
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 > 3;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v54 = v17;
        v55 = v18 | v17;
        if (((v18 | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v56 = (v19 == 0) | v18;
        v57 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v7;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_82;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_82:
      v52 = 1;
      goto LABEL_83;
    }
    v32 = v25 >> 3;
    v33 = v57;
    if ((v56 & 1) == 0)
    {
      v34 = v19;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 56;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v47 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_79;
      case 2:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v47 = 16 * *(_BYTE *)(a1 + 76);
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v43 = objc_alloc_init(GEORPPostedBy);
        if (!GEORPPostedByReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        v44 = 40;
        goto LABEL_58;
      case 3:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_101;
          v47 = 32 * *(_BYTE *)(a1 + 76);
LABEL_79:
          v7 += v47 >> 7;
LABEL_80:
          v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_81:
          if (!(v55 & 1 | (v7 != 0)))
            goto LABEL_82;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v43 = objc_alloc_init(GEORPTimestamp);
        if (GEORPTimestampReadAllFrom((uint64_t)v43, (void *)v3))
        {
          PBReaderRecallMark();
          v44 = 32;
LABEL_58:
          v45 = *(void **)(a1 + v44);
          *(_QWORD *)(a1 + v44) = v43;
LABEL_63:

          --v7;
          goto LABEL_80;
        }
LABEL_100:

LABEL_101:
        v52 = 0;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_83:
        v53 = &OBJC_IVAR___GEOTileCoordinate__x;
        if ((v54 & 1) != 0)
LABEL_84:
          *(_BYTE *)(a1 + v53[926]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(_BYTE *)(a1 + v53[926]) |= 0x20u;
          *(_BYTE *)(a1 + v53[926]) |= 8u;
          *(_BYTE *)(a1 + v53[926]) |= 4u;
          *(_BYTE *)(a1 + v53[926]) |= 2u;
          *(_BYTE *)(a1 + v53[926]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            v48 = *v19++;
            v49 = 32;
            switch(v48)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 2:
                v49 = 8;
                goto LABEL_93;
              case 3:
                v49 = 4;
                goto LABEL_93;
              case 4:
                v49 = 2;
                goto LABEL_93;
              case 5:
                v49 = 16;
LABEL_93:
                *(_BYTE *)(a1 + v53[926]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v52)
          v3 = *(_BYTE *)(v3 + *v21) == 0;
        else
          v3 = 0;
        if (v57)
        {
          v50 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if (!v33)
          goto LABEL_69;
        if ((*(_BYTE *)(a1 + 76) & 2) == 0)
        {
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 24;
LABEL_62:
          v45 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_101;
        v47 = *(_BYTE *)(a1 + 76) << 6;
        goto LABEL_79;
      case 5:
        if (!v33 || (*(_BYTE *)(a1 + 76) & 0x10) != 0)
          goto LABEL_69;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_101;
        v43 = objc_alloc_init(GEORPFeedbackSurveyResponse);
        if (!GEORPFeedbackSurveyResponseReadAllFrom((uint64_t)v43, (void *)v3, v10 & 1))
          goto LABEL_100;
        PBReaderRecallMark();
        -[GEORPFeedbackConversationMessage _addNoFlagsSurveyResponse:](a1, v43);

        goto LABEL_80;
      default:
        if ((v54 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 1) != 0)
        {
LABEL_69:
          v46 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if ((v46 & 1) == 0)
          {
            v52 = 0;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v41 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v40;

          }
          v42 = PBUnknownFieldAdd();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          if (!v42)
          {
            v52 = 0;
            v53 = &OBJC_IVAR___GEOTileCoordinate__x;
            goto LABEL_84;
          }
        }
        goto LABEL_81;
    }
  }
}

void sub_1897D0A70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D0BB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D0CF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D0E38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D19BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackConversationMessageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[5], "readAll:", 1);
  objc_msgSend(a1[4], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEORPFeedbackConversationMessageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackConversationMessageReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackConversationMessageReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackConversationMessageReadAllFrom_initialTag;
  Specified = GEORPFeedbackConversationMessageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackConversationMessageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1897D1C70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackConversationMessageReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackConversationMessageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D1CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPostedByIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_38;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_38;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
        break;
      if ((_DWORD)v16 == 2)
      {
        if (v14 != 2)
          goto LABEL_40;
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_40;
        goto LABEL_37;
      }
      if ((_DWORD)v16 == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_40;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        v23 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_38;
    }
    if (v14 != 2)
      goto LABEL_40;
    goto LABEL_32;
  }
LABEL_38:
  v23 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v23;
}

BOOL GEORPFeedbackSurveyResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_27;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_27;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2)
          goto LABEL_29;
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        v16 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_27;
    }
    if (v14 != 2)
      goto LABEL_29;
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_29;
    goto LABEL_26;
  }
LABEL_27:
  v16 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v16;
}

void sub_1897D2338(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPFeedbackConversationMessageIsDirty(uint64_t a1)
{
  char v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t i;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v2 = *(_BYTE *)(a1 + 76);
  if ((v2 & 0x60) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 8) != 0)
  {
    if (GEORPPostedByIsDirty(*(_QWORD *)(a1 + 40)))
      return 1;
    v2 = *(_BYTE *)(a1 + 76);
  }
  if ((v2 & 0x16) != 0)
    return 1;
  if ((v2 & 0x10) == 0)
    return 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v5 = *(id *)(a1 + 48);
  v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v6 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v5);
        if (GEORPFeedbackSurveyResponseIsDirty(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * i)))
        {
          v3 = 1;
          goto LABEL_20;
        }
      }
      v3 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEORPFeedbackConversationMessageIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackConversationMessageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897D28E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D2CD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D3084(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackIdLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  int v16;
  int v17;
  int *v18;
  int *v19;
  int v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v29;
  int v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  int v55;
  void *v56;
  char v58;
  int v59;
  char v60;
  BOOL v61;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(_BYTE *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_DWORD)v7;
        v16 = v14 | v7;
        v17 = v15 | v8;
        v61 = v16;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = 1;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_80;
        v60 = (v18 == 0) | v16;
        v58 = v15 | v8;
        v59 = (v10 != 0) | v16 | v17;
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(_BYTE *)(v3 + *v21))
      break;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v19;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v29 = v24++ >= 9;
      if (v29)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    v31 = v25 & 7;
    if (v30 || v31 == 4)
      break;
    v33 = v25 >> 3;
    v34 = v61;
    if ((v60 & 1) == 0)
    {
      v35 = v18;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    if ((_DWORD)v33 == 2)
    {
      if (v34 && (*(_BYTE *)(a1 + 68) & 2) == 0)
      {
        if (v31 == 2)
        {
          v20 = PBReaderPlaceMark();
          if (!v20)
            goto LABEL_79;
          while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
          {
            v40 = 0;
            v41 = 0;
            v42 = 0;
            while (1)
            {
              v43 = *v19;
              v44 = *(_QWORD *)(v3 + v43);
              if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
                break;
              v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v44);
              *(_QWORD *)(v3 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v29 = v41++ >= 9;
                if (!v29)
                  continue;
              }
              goto LABEL_57;
            }
            *(_BYTE *)(v3 + *v21) = 1;
LABEL_57:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (1)
          {
            v51 = *v19;
            v52 = *(_QWORD *)(v3 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(v3 + *v6))
              break;
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v29 = v49++ >= 9;
              if (!v29)
                continue;
            }
            goto LABEL_75;
          }
          *(_BYTE *)(v3 + *v21) = 1;
LABEL_75:
          PBRepeatedInt32Add();
        }
LABEL_76:
        if ((v59 & 1) == 0)
          break;
        continue;
      }
    }
    else if ((_DWORD)v33 == 1)
    {
      if (v34 && (*(_BYTE *)(a1 + 68) & 4) == 0)
      {
        PBReaderReadString();
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        if (v39)
          -[GEORPFeedbackIdLookupParameters _addNoFlagsFeedbackId:](a1, v39);

        goto LABEL_76;
      }
    }
    else if ((v58 & 1) != 0 && (*(_BYTE *)(a1 + 68) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v46 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v47 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v46;

      }
      v20 = PBUnknownFieldAdd();
      if (!v20)
        goto LABEL_81;
      goto LABEL_76;
    }
    v20 = PBReaderSkipValueWithTag();
    if ((v20 & v59 & 1) == 0)
      goto LABEL_79;
  }
  while (*(_QWORD *)(v3 + *v19) < *(_QWORD *)(v3 + *v6));
  v20 = 1;
LABEL_79:
  LOBYTE(v17) = v58;
LABEL_80:
  if ((v17 & 1) != 0)
LABEL_81:
    *(_BYTE *)(a1 + 68) |= 1u;
  if (v61 || (v20 & 1) == 0)
  {
    *(_BYTE *)(a1 + 68) |= 4u;
    *(_BYTE *)(a1 + 68) |= 2u;
    goto LABEL_91;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        v55 = *v18++;
        v54 = v55;
        if (v55 == 1)
          break;
        if (v54 == 2)
          goto LABEL_90;
        if (!v54)
          goto LABEL_91;
      }
      LOBYTE(v54) = 4;
LABEL_90:
      *(_BYTE *)(a1 + 68) |= v54;
      continue;
    }
  }
LABEL_91:
  if (v20)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v61)
  {
    v56 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1897D3980(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D4588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackIdLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackIdLookupParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackIdLookupParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackIdLookupParametersReadAllFrom_initialTag;
  Specified = GEORPFeedbackIdLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1897D4710(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackIdLookupParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackIdLookupParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D4770(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  _BOOL8 v26;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_46;
LABEL_32:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v21 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v22 = *v2;
              v23 = *(_QWORD *)&a1[v22];
              if (v23 == -1 || v23 >= *(_QWORD *)&a1[*v3])
                break;
              v24 = v23 + 1;
              v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
              *(_QWORD *)&a1[v22] = v24;
              if (v25 < 0)
              {
                v12 = v21++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_32;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0)
            goto LABEL_46;
          while (1)
          {
            v16 = *v2;
            v17 = *(_QWORD *)&a1[v16];
            if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
              break;
            v18 = v17 + 1;
            v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
            *(_QWORD *)&a1[v16] = v18;
            if (v19 < 0)
            {
              v20 = v14++;
              if (v20 <= 8)
                continue;
            }
            goto LABEL_43;
          }
          a1[*v4] = 1;
        }
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_46:
        PBReaderRecallMark();
        return 0;
      }
LABEL_43:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

void sub_1897D4C84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupParametersIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = (*(_BYTE *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1897D5074(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D536C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupResultReadAllFrom(_QWORD *a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  GEORPFeedbackInfo *v19;
  id v20;
  void *v21;
  _BOOL8 v22;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_29;
          v19 = objc_alloc_init(GEORPFeedbackInfo);
          if (!GEORPFeedbackInfoReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addFeedbackInfo:", v19, 0, 0);

        }
        else
        {
          if (!a1[1])
          {
            v20 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v21 = (void *)a1[1];
            a1[1] = v20;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_29;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_1897D5D08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupResultReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackIdLookupResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D5D68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackIdLookupResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORPFeedbackInfoIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  _BOOL8 v23;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackComponentIsValid(a1))
          goto LABEL_41;
        PBReaderRecallMark();
      }
      else if ((_DWORD)v16 == 2)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
            break;
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8)
            continue;
          goto LABEL_38;
        }
        a1[*v4] = 1;
      }
      else if ((_DWORD)v16 == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
LABEL_38:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1897D6A64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  GEORPFeedbackComponent *v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  int v49;
  int v50;
  char v51;
  void *v52;
  int v54;
  int *v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        v12 = v6;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v12 = v6;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 != 0;
        v56 = v15 & ~(_BYTE)v10 | v7;
        v57 = v15 | v10 | v56;
        if ((((v15 | v10) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v58 = (v16 == 0) | v15 | v10;
        v59 = v15 | v10;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v6;
        v13 = v7;
LABEL_8:
        v14 = v10;
LABEL_10:
        ++v9;
        v6 = v12;
        v7 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v20) || *(_BYTE *)(v3 + *v18))
      goto LABEL_73;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v20))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      v54 = 1;
      goto LABEL_74;
    }
    v30 = v23 >> 3;
    v31 = v59;
    if ((v58 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 5)
      break;
    if ((_DWORD)v30 == 2)
    {
      if ((v8 & 1) == 0)
        goto LABEL_63;
      v39 = 0;
      v40 = 0;
      v41 = 0;
      *(_BYTE *)(a1 + 56) |= 1u;
      while (1)
      {
        v42 = *v17;
        v43 = *(_QWORD *)(v3 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(v3 + *v20))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v43);
        *(_QWORD *)(v3 + v42) = v43 + 1;
        v41 |= (unint64_t)(v44 & 0x7F) << v39;
        if ((v44 & 0x80) == 0)
          goto LABEL_66;
        v39 += 7;
        v27 = v40++ >= 9;
        if (v27)
        {
          LODWORD(v41) = 0;
          goto LABEL_68;
        }
      }
      *(_BYTE *)(v3 + *v18) = 1;
LABEL_66:
      if (*(_BYTE *)(v3 + *v18))
        LODWORD(v41) = 0;
LABEL_68:
      *(_DWORD *)(a1 + 52) = v41;
    }
    else
    {
      if ((_DWORD)v30 == 1)
      {
        if (!v31)
          goto LABEL_63;
        if ((*(_BYTE *)(a1 + 56) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_93;
          v9 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
        }
        else
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v36;

          --v9;
        }
        goto LABEL_71;
      }
      if ((v56 & 1) == 0 || (*(_BYTE *)(a1 + 56) & 2) != 0)
        goto LABEL_63;
      if (!*(_QWORD *)(a1 + 16))
      {
        v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v46 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v45;

      }
      v47 = PBUnknownFieldAdd();
      v18 = (int *)MEMORY[0x1E0D82BC8];
      v20 = (int *)MEMORY[0x1E0D82BD8];
      if (!v47)
      {
        v54 = 0;
        v55 = &OBJC_IVAR___GEOTileCoordinate__x;
        goto LABEL_75;
      }
    }
LABEL_72:
    if (!(v57 & 1 | (v9 != 0)))
      goto LABEL_73;
  }
  if (!v31 || (*(_BYTE *)(a1 + 56) & 4) != 0)
  {
LABEL_63:
    v48 = PBReaderSkipValueWithTag();
    v20 = (int *)MEMORY[0x1E0D82BD8];
    v18 = (int *)MEMORY[0x1E0D82BC8];
    if ((v48 & 1) == 0)
    {
      v54 = 0;
      goto LABEL_74;
    }
    goto LABEL_72;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_93;
  v38 = objc_alloc_init(GEORPFeedbackComponent);
  if (GEORPFeedbackComponentReadAllFrom((uint64_t)v38, (void *)v3, v6 & 1))
  {
    PBReaderRecallMark();
    -[GEORPFeedbackInfo _addNoFlagsFeedbackComponent:](a1, v38);

LABEL_71:
    v18 = (int *)MEMORY[0x1E0D82BC8];
    v20 = (int *)MEMORY[0x1E0D82BD8];
    goto LABEL_72;
  }

LABEL_93:
  v54 = 0;
  v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  v55 = &OBJC_IVAR___GEOTileCoordinate__x;
  if ((v56 & 1) == 0)
    goto LABEL_76;
LABEL_75:
  *(_BYTE *)(a1 + v55[945]) |= 2u;
LABEL_76:
  if (v59 & 1 | ((v54 & 1) == 0))
  {
    *(_BYTE *)(a1 + v55[945]) |= 8u;
    *(_BYTE *)(a1 + v55[945]) |= 4u;
    goto LABEL_86;
  }
  if (v16)
  {
    while (2)
    {
      while (1)
      {
        v50 = *v16++;
        v49 = v50;
        if (v50 == 1)
          break;
        if (v49 == 5)
        {
          v51 = 4;
          goto LABEL_85;
        }
        if (!v49)
          goto LABEL_86;
      }
      v51 = 8;
LABEL_85:
      *(_BYTE *)(a1 + v55[945]) |= v51;
      continue;
    }
  }
LABEL_86:
  if (v54)
    v3 = *(_BYTE *)(v3 + *v18) == 0;
  else
    v3 = 0;
  if ((v59 & 1) != 0)
  {
    v52 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1897D746C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D8070(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORPFeedbackInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEORPFeedbackInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackInfoReadAllFrom_initialTag;
  Specified = GEORPFeedbackInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEORPFeedbackInfoCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897D82FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D835C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D85C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackInfoIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897D8AF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D8E78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackNotificationReadAllFrom(uint64_t a1, void *a2)
{
  unsigned __int8 *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v16;
  BOOL v17;
  id v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      v8 = v3[*v6];
      if (*(_QWORD *)&v3[*v4] >= *(_QWORD *)&v3[*v5])
        break;
      if (v3[*v6])
      {
        v8 = 1;
        break;
      }
      v9 = 0;
      v10 = 0;
      v11 = 0;
      while (1)
      {
        v12 = *v4;
        v13 = *(_QWORD *)&v3[v12];
        if (v13 == -1 || v13 >= *(_QWORD *)&v3[*v5])
          break;
        v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v13);
        *(_QWORD *)&v3[v12] = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0)
          goto LABEL_13;
        v9 += 7;
        if (v10++ >= 9)
        {
          v16 = 0;
          v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      v8 = v3[*v6];
      if (v3[*v6])
        v16 = 0;
      else
        v16 = v11;
LABEL_16:
      if (v8)
        v17 = 1;
      else
        v17 = (v16 & 7) == 4;
      if (v17)
        break;
      if (!*(_QWORD *)(a1 + 8))
      {
        v18 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v19 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v18;

      }
      if ((PBUnknownFieldAdd() & 1) == 0)
        goto LABEL_23;
    }
    v20 = v8 == 0;
  }
  else
  {
LABEL_23:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1897D9468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackNotificationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackNotificationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D94C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D9B60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackOverviewReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  GEORPTimestamp *v47;
  uint64_t v48;
  void *v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  int v58;
  char v59;
  void *v60;
  int v62;
  int *v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 76) & 4) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 2;
        v64 = v15 & ~(_BYTE)v10 | v8;
        v65 = v15 | v10 | v64;
        if ((((v15 | v10) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v66 = (v16 == 0) | v15 | v10;
        v67 = v15 | v10;
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v20) || *(_BYTE *)(v3 + *v18))
      goto LABEL_102;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v20))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_102:
      v62 = 1;
      goto LABEL_103;
    }
    v30 = v23 >> 3;
    v31 = v67;
    if ((v66 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v7 & 1) == 0)
          goto LABEL_80;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 76) |= 2u;
        while (1)
        {
          v39 = *v17;
          v40 = *(_QWORD *)(v3 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(v3 + *v20))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0)
            goto LABEL_83;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_85;
          }
        }
        *(_BYTE *)(v3 + *v18) = 1;
LABEL_83:
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_85:
        v56 = 72;
        goto LABEL_90;
      case 2:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x40) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 48;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_120;
        v57 = 2 * *(_BYTE *)(a1 + 76);
        goto LABEL_99;
      case 3:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_120;
          v57 = 16 * *(_BYTE *)(a1 + 76);
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_120;
        v47 = objc_alloc_init(GEORPTimestamp);
        if (!GEORPTimestampReadAllFrom((uint64_t)v47, (void *)v3))
          goto LABEL_119;
        PBReaderRecallMark();
        v48 = 24;
        goto LABEL_66;
      case 4:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_120;
          v57 = 8 * *(_BYTE *)(a1 + 76);
LABEL_99:
          v6 += v57 >> 7;
LABEL_100:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
LABEL_101:
          if (!(v65 & 1 | (v6 != 0)))
            goto LABEL_102;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_120;
        v47 = objc_alloc_init(GEORPTimestamp);
        if (GEORPTimestampReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v48 = 32;
LABEL_66:
          v49 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
LABEL_79:

          --v6;
          goto LABEL_100;
        }
LABEL_119:

LABEL_120:
        v62 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_103:
        v63 = &OBJC_IVAR___GEOTileCoordinate__x;
        if ((v64 & 1) != 0)
LABEL_104:
          *(_BYTE *)(a1 + v63[954]) |= 4u;
        if (v67 & 1 | ((v62 & 1) == 0))
        {
          *(_BYTE *)(a1 + v63[954]) |= 0x40u;
          *(_BYTE *)(a1 + v63[954]) |= 8u;
          *(_BYTE *)(a1 + v63[954]) |= 0x10u;
          *(_BYTE *)(a1 + v63[954]) |= 0x20u;
        }
        else if (v16)
        {
          while (1)
          {
            v58 = *v16++;
            v59 = 64;
            switch(v58)
            {
              case 0:
                goto LABEL_113;
              case 2:
                goto LABEL_112;
              case 3:
                v59 = 8;
                goto LABEL_112;
              case 4:
                v59 = 16;
                goto LABEL_112;
              case 6:
                v59 = 32;
LABEL_112:
                *(_BYTE *)(a1 + v63[954]) |= v59;
                break;
              default:
                continue;
            }
          }
        }
LABEL_113:
        if (v62)
          v3 = *(_BYTE *)(v3 + *v18) == 0;
        else
          v3 = 0;
        if ((v67 & 1) != 0)
        {
          v60 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 5:
        if ((v7 & 1) == 0)
          goto LABEL_80;
        v50 = 0;
        v51 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (2)
        {
          v52 = *v17;
          v53 = *(_QWORD *)(v3 + v52);
          if (v53 == -1 || v53 >= *(_QWORD *)(v3 + *v20))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v53);
            *(_QWORD *)(v3 + v52) = v53 + 1;
            v38 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v27 = v51++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v38) = 0;
LABEL_89:
        v56 = 68;
LABEL_90:
        *(_DWORD *)(a1 + v56) = v38;
        goto LABEL_101;
      case 6:
        if (!v31)
          goto LABEL_80;
        if ((*(_BYTE *)(a1 + 76) & 0x20) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = 40;
LABEL_78:
          v49 = *(void **)(a1 + v46);
          *(_QWORD *)(a1 + v46) = v45;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_120;
        v57 = 4 * *(_BYTE *)(a1 + 76);
        goto LABEL_99;
      default:
        if ((v64 & 1) == 0 || (*(_BYTE *)(a1 + 76) & 4) != 0)
        {
LABEL_80:
          v55 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BD8];
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v55 & 1) == 0)
          {
            v62 = 0;
            goto LABEL_103;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          if (!v44)
          {
            v62 = 0;
            v63 = &OBJC_IVAR___GEOTileCoordinate__x;
            goto LABEL_104;
          }
        }
        goto LABEL_101;
    }
  }
}

void sub_1897DA4B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DA5F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DA94C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DB594(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackOverviewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackOverviewReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackOverviewReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackOverviewReadAllFrom_initialTag;
  Specified = GEORPFeedbackOverviewReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1897DB74C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackOverviewReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackOverviewReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DB7AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DB9CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackOverviewIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1897DBD98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DC1AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DC474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackQueryParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  int v32;
  int *v34;
  unint64_t v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  BOOL v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  GEORPFeedbackComponentQueryParameters *v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  int v52;
  char v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  int v61;
  char v62;
  void *v63;
  char v65;
  char v66;
  char v67;
  char v68;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &OBJC_IVAR___GEOTextItemContainer__textItems;
  v13 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + (*(_BYTE *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    v14 = 1;
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        v8 = 1;
        goto LABEL_7;
      case -2:
        v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v17 = v13 > 1;
        v18 = v17 & ~(_BYTE)v11 | v9;
        v19 = v17 | v11;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        if ((((v17 | v11) | v8) & 1) != 0)
          v21 = 0;
        else
          v21 = a3;
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_97;
        v65 = v17 & ~(_BYTE)v11 | v9;
        v66 = v19 | v18;
        v68 = (v21 == 0) | v19;
        v22 = (int *)MEMORY[0x1E0D82BC8];
        v23 = (int *)MEMORY[0x1E0D82BB8];
        v67 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        v14 = v9;
LABEL_8:
        v15 = v10;
        v16 = v11;
LABEL_10:
        ++v7;
        v9 = v14;
        v10 = v15;
        v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_BYTE *)(v3 + *v22))
      goto LABEL_94;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v28);
      *(_QWORD *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0)
        goto LABEL_25;
      v24 += 7;
      v30 = v25++ >= 9;
      if (v30)
      {
        v26 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v22) = 1;
LABEL_25:
    v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(_BYTE *)(v3 + *v22))
      v26 = 0;
LABEL_27:
    v32 = v26 & 7;
    if (v31 || v32 == 4)
    {
LABEL_94:
      LODWORD(v14) = 1;
      goto LABEL_95;
    }
    v34 = v22;
    v35 = v26 >> 3;
    v36 = v19;
    if ((v68 & 1) == 0)
    {
      v37 = v21;
      do
      {
        v39 = *v37++;
        v38 = v39;
        v36 = v39 != 0;
        if (v39)
          v40 = v38 == (_DWORD)v35;
        else
          v40 = 1;
      }
      while (!v40);
    }
    if ((_DWORD)v35 == 5)
    {
      if (!v36)
        goto LABEL_74;
      v22 = v34;
      if ((*(_BYTE *)(a1 + 76) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_113;
        v47 = objc_alloc_init(GEORPFeedbackComponentQueryParameters);
        if (!GEORPFeedbackComponentQueryParametersReadAllFrom((uint64_t)v47, (void *)v3, v10 & 1))
          goto LABEL_112;
        PBReaderRecallMark();
        v48 = 48;
LABEL_67:
        v49 = *(void **)(a1 + v48);
        *(_QWORD *)(a1 + v48) = v47;

        --v7;
LABEL_81:
        v19 = v67;
        v23 = (int *)MEMORY[0x1E0D82BB8];
        goto LABEL_92;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_113;
      v54 = 32 * *(_BYTE *)(a1 + 76);
LABEL_80:
      v7 += v54 >> 7;
      goto LABEL_81;
    }
    if ((_DWORD)v35 == 4)
      break;
    if ((_DWORD)v35 == 3)
    {
      if (v36 && (*(_BYTE *)(a1 + 76) & 2) == 0)
      {
        v22 = v34;
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_113;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6))
          {
            if (*(_BYTE *)(v3 + *v34))
              break;
            v41 = 0;
            v42 = 0;
            v43 = 0;
            while (1)
            {
              v44 = *v20;
              v45 = *(_QWORD *)(v3 + v44);
              if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v6))
                break;
              v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v45);
              *(_QWORD *)(v3 + v44) = v45 + 1;
              v43 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                v30 = v42++ >= 9;
                if (!v30)
                  continue;
              }
              goto LABEL_55;
            }
            *(_BYTE *)(v3 + *v34) = 1;
LABEL_55:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v55 = 0;
          v56 = 0;
          v57 = 0;
          v23 = (int *)MEMORY[0x1E0D82BB8];
          while (1)
          {
            v58 = *v20;
            v59 = *(_QWORD *)(v3 + v58);
            if (v59 == -1 || v59 >= *(_QWORD *)(v3 + *v6))
              break;
            v60 = *(_BYTE *)(*(_QWORD *)(v3 + *v23) + v59);
            *(_QWORD *)(v3 + v58) = v59 + 1;
            v57 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v30 = v56++ >= 9;
              if (!v30)
                continue;
            }
            goto LABEL_90;
          }
          *(_BYTE *)(v3 + *v34) = 1;
LABEL_90:
          PBRepeatedInt32Add();
        }
        v19 = v67;
        goto LABEL_92;
      }
    }
    else if ((v65 & 1) != 0 && (*(_BYTE *)(a1 + 76) & 1) == 0)
    {
      if (!*(_QWORD *)(a1 + 16))
      {
        v50 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
        v51 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v50;

      }
      v52 = PBUnknownFieldAdd();
      v19 = v67;
      v22 = v34;
      v23 = (int *)MEMORY[0x1E0D82BB8];
      if (!v52)
      {
        LODWORD(v14) = 0;
        v12 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        goto LABEL_98;
      }
      goto LABEL_92;
    }
LABEL_74:
    v53 = PBReaderSkipValueWithTag();
    v19 = v67;
    v22 = v34;
    v23 = (int *)MEMORY[0x1E0D82BB8];
    if ((v53 & 1) == 0)
    {
      LODWORD(v14) = 0;
LABEL_95:
      v12 = &OBJC_IVAR___GEOTextItemContainer__textItems;
      goto LABEL_96;
    }
LABEL_92:
    if (!(v66 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6))
      goto LABEL_94;
  }
  if (!v36)
    goto LABEL_74;
  v22 = v34;
  if ((*(_BYTE *)(a1 + 76) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_113;
    v54 = 16 * *(_BYTE *)(a1 + 76);
    goto LABEL_80;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_113;
  v47 = objc_alloc_init(GEORPFilter);
  if (GEORPFilterReadAllFrom((uint64_t)v47, (void *)v3))
  {
    PBReaderRecallMark();
    v48 = 56;
    goto LABEL_67;
  }
LABEL_112:

LABEL_113:
  LODWORD(v14) = 0;
  v12 = &OBJC_IVAR___GEOTextItemContainer__textItems;
  v19 = v67;
LABEL_96:
  v18 = v65;
LABEL_97:
  if ((v18 & 1) != 0)
LABEL_98:
    *(_BYTE *)(a1 + v12[141]) |= 1u;
  if (v19 & 1 | ((v14 & 1) == 0))
  {
    *(_BYTE *)(a1 + v12[141]) |= 2u;
    *(_BYTE *)(a1 + v12[141]) |= 8u;
    *(_BYTE *)(a1 + v12[141]) |= 4u;
  }
  else if (v21)
  {
    while (1)
    {
      v61 = *v21++;
      v62 = 2;
      switch(v61)
      {
        case 0:
          goto LABEL_106;
        case 3:
          goto LABEL_105;
        case 4:
          v62 = 8;
          goto LABEL_105;
        case 5:
          v62 = 4;
LABEL_105:
          *(_BYTE *)(a1 + v12[141]) |= v62;
          break;
        default:
          continue;
      }
    }
  }
LABEL_106:
  if ((_DWORD)v14)
  {
    v3 = *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]) == 0;
    if ((v19 & 1) == 0)
      return v3;
LABEL_110:
    v63 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  else
  {
    v3 = 0;
    if ((v19 & 1) != 0)
      goto LABEL_110;
  }
  return v3;
}

void sub_1897DD0B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DD1EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DDB1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackQueryParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackQueryParametersReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 68) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackQueryParametersReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackQueryParametersReadAllFrom_initialTag;
  Specified = GEORPFeedbackQueryParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 56), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1897DDCD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackQueryParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackQueryParametersReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DDD30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_50;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v12 = v7++ >= 9;
        if (v12)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_50;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 5)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackComponentQueryParametersIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if ((_DWORD)v16 == 4)
        break;
      if ((_DWORD)v16 == 3)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark())
            goto LABEL_52;
LABEL_39:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v22 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v23 = *v2;
              v24 = *(_QWORD *)&a1[v23];
              if (v24 == -1 || v24 >= *(_QWORD *)&a1[*v3])
                break;
              v25 = v24 + 1;
              v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
              *(_QWORD *)&a1[v23] = v25;
              if (v26 < 0)
              {
                v12 = v22++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0)
          goto LABEL_52;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
            break;
          v19 = v18 + 1;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v14++;
            if (v21 <= 8)
              continue;
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_50;
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFilterIsValid(a1))
      goto LABEL_52;
    goto LABEL_35;
  }
LABEL_50:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEORPFilterIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_1897DE3D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPFeedbackQueryParametersIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if ((*(_BYTE *)(a1 + 76) & 0x1A) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 76) & 4) != 0)
    return GEORPFeedbackComponentQueryParametersIsDirty(*(_QWORD *)(a1 + 48));
  return 0;
}

os_unfair_lock_s *GEORPFeedbackQueryParametersIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPFeedbackQueryParametersIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897DE734(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DE9F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  int v17;
  unint64_t v19;
  GEORPFeedbackInfo *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  void *v34;
  _BOOL8 v35;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          if (v14 == -1 || v14 >= *(_QWORD *)&v5[*v7])
            break;
          v15 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          v16 = v11++ >= 9;
          if (v16)
          {
            v12 = 0;
            v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v17 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v17 || (v12 & 7) == 4)
          break;
        v19 = v12 >> 3;
        if ((v12 >> 3) == 4)
        {
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 32) |= 2u;
          while (1)
          {
            v24 = *v6;
            v25 = *(_QWORD *)&v5[v24];
            if (v25 == -1 || v25 >= *(_QWORD *)&v5[*v7])
              break;
            v26 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v25);
            *(_QWORD *)&v5[v24] = v25 + 1;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if ((v26 & 0x80) == 0)
              goto LABEL_44;
            v21 += 7;
            v16 = v22++ >= 9;
            if (v16)
            {
              v23 = 0;
              goto LABEL_46;
            }
          }
          v5[*v8] = 1;
LABEL_44:
          if (v5[*v8])
            v23 = 0;
LABEL_46:
          *(_BYTE *)(a1 + 28) = v23 != 0;
        }
        else if ((_DWORD)v19 == 3)
        {
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v30 = *v6;
            v31 = *(_QWORD *)&v5[v30];
            if (v31 == -1 || v31 >= *(_QWORD *)&v5[*v7])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v31);
            *(_QWORD *)&v5[v30] = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
              goto LABEL_48;
            v27 += 7;
            v16 = v28++ >= 9;
            if (v16)
            {
              LODWORD(v29) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8])
            LODWORD(v29) = 0;
LABEL_50:
          *(_DWORD *)(a1 + 24) = v29;
        }
        else if ((_DWORD)v19 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_54;
          v20 = objc_alloc_init(GEORPFeedbackInfo);
          if (!GEORPFeedbackInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addFeedbackInfo:", v20, 0, 0);

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v33 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v34 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v33;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_54;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v35 = v5[*v8] == 0;
  }
  else
  {
LABEL_54:
    v35 = 0;
  }
  objc_sync_exit(v5);

  return v35;
}

void sub_1897DF768(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryResultReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackQueryResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DF7C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackQueryResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  _BOOL8 v28;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_44;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        goto LABEL_44;
      v16 = v8 >> 3;
      if ((v8 >> 3) == 4)
        break;
      if ((_DWORD)v16 == 3)
      {
        if ((v8 & 7) != 0)
          goto LABEL_46;
        v23 = 0;
        while (1)
        {
          v24 = *v2;
          v25 = *(_QWORD *)&a1[v24];
          if (v25 == -1 || v25 >= *(_QWORD *)&a1[*v3])
            goto LABEL_41;
          v26 = v25 + 1;
          v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
          *(_QWORD *)&a1[v24] = v26;
          if (v27 < 0)
          {
            v22 = v23++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_43;
        }
      }
      if ((_DWORD)v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORPFeedbackInfoIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_44;
    }
    if ((v8 & 7) != 0)
      goto LABEL_46;
    v17 = 0;
    while (1)
    {
      v18 = *v2;
      v19 = *(_QWORD *)&a1[v18];
      if (v19 == -1 || v19 >= *(_QWORD *)&a1[*v3])
        break;
      v20 = v19 + 1;
      v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
      *(_QWORD *)&a1[v18] = v20;
      if (v21 < 0)
      {
        v22 = v17++ > 8;
        if (!v22)
          continue;
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1897E053C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSurveyResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  int v42;
  char v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  int v49;
  char v50;
  char v51;
  char v52;
  BOOL v53;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v50 = v15 | v8;
        v17 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v18 = 0;
        else
          v18 = a3;
        v53 = v16;
        v51 = v17;
        v52 = (v18 == 0) | v16;
        v19 = (int *)MEMORY[0x1E0D82BF0];
        v20 = (int *)MEMORY[0x1E0D82BC8];
        v21 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v19) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v20))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v19;
      v26 = *(_QWORD *)(v3 + v25);
      if (v26 == -1 || v26 >= *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v21) + v26);
      *(_QWORD *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v20) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v20);
    if (*(_BYTE *)(v3 + *v20))
      v24 = 0;
LABEL_25:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_59:
      v49 = 1;
      goto LABEL_60;
    }
    v31 = v24 >> 3;
    v32 = v53;
    if ((v52 & 1) == 0)
    {
      v33 = v18;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    if ((_DWORD)v31 == 2)
      break;
    if ((_DWORD)v31 == 1)
    {
      if (!v32)
        goto LABEL_51;
      if ((*(_BYTE *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_77;
        v44 = 32 * *(_BYTE *)(a1 + 52);
        goto LABEL_57;
      }
      PBReaderReadString();
      v37 = objc_claimAutoreleasedReturnValue();
      v38 = 32;
      goto LABEL_44;
    }
    if ((v50 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_51:
      v43 = PBReaderSkipValueWithTag();
      v20 = (int *)MEMORY[0x1E0D82BC8];
      if ((v43 & 1) == 0)
      {
        v49 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v40 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v41 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v40;

    }
    v42 = PBUnknownFieldAdd();
    v20 = (int *)MEMORY[0x1E0D82BC8];
    if (!v42)
    {
      v49 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v51 & 1 | (v10 != 0)))
      goto LABEL_59;
  }
  if (!v32)
    goto LABEL_51;
  if ((*(_BYTE *)(a1 + 52) & 2) == 0)
  {
    PBReaderReadString();
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = 24;
LABEL_44:
    v39 = *(void **)(a1 + v38);
    *(_QWORD *)(a1 + v38) = v37;

    v20 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_58;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v44 = *(_BYTE *)(a1 + 52) << 6;
LABEL_57:
    v10 += v44 >> 7;
    v20 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_58;
  }
LABEL_77:
  v49 = 0;
  v20 = (int *)MEMORY[0x1E0D82BC8];
LABEL_60:
  if ((v50 & 1) == 0)
    goto LABEL_62;
LABEL_61:
  *(_BYTE *)(a1 + 52) |= 1u;
LABEL_62:
  if (v53 || (v49 & 1) == 0)
  {
    *(_BYTE *)(a1 + 52) |= 4u;
    *(_BYTE *)(a1 + 52) |= 2u;
    goto LABEL_71;
  }
  if (v18)
  {
    while (1)
    {
      v46 = *v18++;
      v45 = v46;
      if (v46 == 1)
        break;
      if (v45 == 2)
      {
LABEL_67:
        *(_BYTE *)(a1 + 52) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v49)
    v3 = *(_BYTE *)(v3 + *v20) == 0;
  else
    v3 = 0;
  if (v53)
  {
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1897E0B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E1094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSurveyResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPFeedbackSurveyResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPFeedbackSurveyResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPFeedbackSurveyResponseReadAllFrom_initialTag;
  Specified = GEORPFeedbackSurveyResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897E1220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPFeedbackSurveyResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFeedbackSurveyResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E1280(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E1414(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFeedbackSurveyResponseIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897E16AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E18D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFilterReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  void *v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_32;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            v19 = 0;
LABEL_34:
          *(_QWORD *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v24 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v23;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_1897E203C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPFilterReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPFilterReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E209C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentQueryParametersReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  _BOOL8 v21;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v17;

        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v19 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v20 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v19;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_26;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1897E2998(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPoiEnrichmentQueryParametersReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPoiEnrichmentQueryParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E29F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E301C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPostedByReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  unsigned __int8 v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  int v47;
  char v48;
  char v49;
  int v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  BOOL v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        v12 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 != 0;
        v15 = v14 & ~(_BYTE)v7;
        v16 = v14 | v7;
        v57 = v15 | v8;
        v58 = v16 | v15 | v8;
        if (((v16 | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v59 = (v17 == 0) | v16;
        v60 = v16;
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v7;
        v13 = v8;
LABEL_8:
        ++v10;
        v7 = v12;
        v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_72;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_23:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_25:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_72:
      v55 = 1;
      goto LABEL_73;
    }
    v30 = v23 >> 3;
    v31 = v60;
    if ((v59 & 1) == 0)
    {
      v32 = v17;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    if ((_DWORD)v30 == 3)
    {
      if (v31)
      {
        if ((*(_BYTE *)(a1 + 56) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_92;
          v49 = 32 * *(_BYTE *)(a1 + 56);
          goto LABEL_71;
        }
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v43 = 24;
        goto LABEL_53;
      }
      goto LABEL_60;
    }
    if ((_DWORD)v30 != 2)
    {
      if ((_DWORD)v30 == 1)
      {
        if ((v9 & 1) != 0)
        {
          v36 = 0;
          v37 = 0;
          v38 = 0;
          *(_BYTE *)(a1 + 56) |= 1u;
          while (1)
          {
            v39 = *v18;
            v40 = *(_QWORD *)(v3 + v39);
            if (v40 == -1 || v40 >= *(_QWORD *)(v3 + *v6))
              break;
            v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v40);
            *(_QWORD *)(v3 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if ((v41 & 0x80) == 0)
              goto LABEL_64;
            v36 += 7;
            v27 = v37++ >= 9;
            if (v27)
            {
              LODWORD(v38) = 0;
              goto LABEL_66;
            }
          }
          *(_BYTE *)(v3 + *v19) = 1;
LABEL_64:
          if (*(_BYTE *)(v3 + *v19))
            LODWORD(v38) = 0;
LABEL_66:
          *(_DWORD *)(a1 + 52) = v38;
          goto LABEL_61;
        }
      }
      else if ((v57 & 1) != 0 && (*(_BYTE *)(a1 + 56) & 2) == 0)
      {
        if (!*(_QWORD *)(a1 + 16))
        {
          v45 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v46 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v45;

        }
        v47 = PBUnknownFieldAdd();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v47)
        {
          v55 = 0;
          v56 = &OBJC_IVAR___GEOTileCoordinate__x;
          goto LABEL_74;
        }
        goto LABEL_61;
      }
      goto LABEL_60;
    }
    if (v31)
      break;
LABEL_60:
    v48 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v48 & 1) == 0)
    {
      v55 = 0;
      goto LABEL_73;
    }
LABEL_61:
    if (!(v58 & 1 | (v10 != 0)))
      goto LABEL_72;
  }
  if ((*(_BYTE *)(a1 + 56) & 8) == 0)
  {
    PBReaderReadString();
    v42 = objc_claimAutoreleasedReturnValue();
    v43 = 32;
LABEL_53:
    v44 = *(void **)(a1 + v43);
    *(_QWORD *)(a1 + v43) = v42;

    v19 = (int *)MEMORY[0x1E0D82BC8];
    --v10;
    goto LABEL_61;
  }
  if ((PBReaderSkipValueWithTag() & 1) != 0)
  {
    v49 = 16 * *(_BYTE *)(a1 + 56);
LABEL_71:
    v10 += v49 >> 7;
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_61;
  }
LABEL_92:
  v55 = 0;
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_73:
  v56 = &OBJC_IVAR___GEOTileCoordinate__x;
  if ((v57 & 1) == 0)
    goto LABEL_75;
LABEL_74:
  *(_BYTE *)(a1 + v56[990]) |= 2u;
LABEL_75:
  if (v60 || (v55 & 1) == 0)
  {
    *(_BYTE *)(a1 + v56[990]) |= 8u;
    *(_BYTE *)(a1 + v56[990]) |= 4u;
    goto LABEL_85;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        v51 = *v17++;
        v50 = v51;
        if (v51 == 2)
          break;
        if (v50 == 3)
        {
          v52 = 4;
          goto LABEL_84;
        }
        if (!v50)
          goto LABEL_85;
      }
      v52 = 8;
LABEL_84:
      *(_BYTE *)(a1 + v56[990]) |= v52;
      continue;
    }
  }
LABEL_85:
  if (v55)
    v3 = *(_BYTE *)(v3 + *v19) == 0;
  else
    v3 = 0;
  if (v60)
  {
    v53 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1897E3704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E3D98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPostedByReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPPostedByReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPPostedByReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPPostedByReadAllFrom_initialTag;
  Specified = GEORPPostedByReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897E3F24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPPostedByReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPPostedByReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E3F84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E4140(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPPostedByIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = (*(_BYTE *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897E444C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E4704(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E49D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  int v44;
  uint64_t v45;
  void *v46;
  GEORPRapResponse *v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  char v55;
  int v56;
  int v57;
  char v58;
  void *v59;
  int v61;
  int *v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        v13 = v7;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v63 = v16 & ~(_BYTE)v11 | v8;
        v64 = v9;
        v65 = v16 | v11 | v63;
        if ((((v16 | v11) | v9) & 1) != 0)
          v17 = 0;
        else
          v17 = a3;
        v66 = (v17 == 0) | v16 | v11;
        v67 = v16 | v11;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        v20 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v7;
        v14 = v8;
LABEL_8:
        v15 = v11;
LABEL_10:
        ++v10;
        v7 = v13;
        v8 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_87;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v6))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_87:
      v61 = 1;
      goto LABEL_88;
    }
    v30 = v23 >> 3;
    v31 = v67;
    if ((v66 & 1) == 0)
    {
      v32 = v17;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v64 & 1) == 0)
          goto LABEL_70;
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (1)
        {
          v39 = *v18;
          v40 = *(_QWORD *)(v3 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(v3 + *v6))
            break;
          v41 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v40);
          *(_QWORD *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0)
            goto LABEL_73;
          v36 += 7;
          v27 = v37++ >= 9;
          if (v27)
          {
            v38 = 0;
            goto LABEL_75;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_73:
        if (*(_BYTE *)(v3 + *v19))
          v38 = 0;
LABEL_75:
        *(_BYTE *)(a1 + 56) = v38 != 0;
        goto LABEL_86;
      case 2:
        if (!v31)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v45 = objc_claimAutoreleasedReturnValue();
          v46 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v45;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_107;
        v55 = 16 * *(_BYTE *)(a1 + 60);
        goto LABEL_84;
      case 3:
        if (!v31)
          goto LABEL_70;
        if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_107;
          v55 = 8 * *(_BYTE *)(a1 + 60);
LABEL_84:
          v10 += v55 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_107;
        v47 = objc_alloc_init(GEORPRapResponse);
        if (GEORPRapResponseReadAllFrom((uint64_t)v47, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          v46 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v47;
LABEL_61:

          --v10;
LABEL_85:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_86:
          if (!(v65 & 1 | (v10 != 0)))
            goto LABEL_87;
          continue;
        }

LABEL_107:
        v61 = 0;
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_88:
        v62 = &OBJC_IVAR___GEOTileCoordinate__x;
        if ((v63 & 1) != 0)
LABEL_89:
          *(_BYTE *)(a1 + v62[1000]) |= 4u;
        if (v67 & 1 | ((v61 & 1) == 0))
        {
          *(_BYTE *)(a1 + v62[1000]) |= 8u;
          *(_BYTE *)(a1 + v62[1000]) |= 0x10u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              v57 = *v17++;
              v56 = v57;
              if (v57 == 2)
                break;
              if (v56 == 3)
              {
                v58 = 16;
                goto LABEL_99;
              }
              if (!v56)
                goto LABEL_100;
            }
            v58 = 8;
LABEL_99:
            *(_BYTE *)(a1 + v62[1000]) |= v58;
            continue;
          }
        }
LABEL_100:
        if (v61)
          v3 = *(_BYTE *)(v3 + *v19) == 0;
        else
          v3 = 0;
        if ((v67 & 1) != 0)
        {
          v59 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      case 4:
        if ((v64 & 1) == 0)
          goto LABEL_70;
        v48 = 0;
        v49 = 0;
        v50 = 0;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          v51 = *v18;
          v52 = *(_QWORD *)(v3 + v51);
          if (v52 == -1 || v52 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v52);
            *(_QWORD *)(v3 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v50) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v50) = 0;
LABEL_79:
        *(_DWORD *)(a1 + 52) = v50;
        goto LABEL_86;
      default:
        if ((v63 & 1) == 0 || (*(_BYTE *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          v54 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v54 & 1) == 0)
          {
            v61 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v42 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v43 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v42;

          }
          v44 = PBUnknownFieldAdd();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if (!v44)
          {
            v61 = 0;
            v62 = &OBJC_IVAR___GEOTileCoordinate__x;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_1897E51E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E5B68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPRapInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPRapInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPRapInfoReadAllFrom_initialTag;
  Specified = GEORPRapInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897E5D0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapInfoReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E5D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapResponseIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _BOOL8 v22;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2)
            goto LABEL_46;
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_46;
          v16 = 0;
          break;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPRapNotificationIsValid(a1))
            goto LABEL_46;
          goto LABEL_41;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPDisplayDetailsIsValid(a1))
            goto LABEL_46;
          goto LABEL_41;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEORPUserFormDetailsIsValid(a1))
            goto LABEL_46;
LABEL_41:
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v17 = *v2;
        v18 = *(_QWORD *)&a1[v17];
        if (v18 == -1 || v18 >= *(_QWORD *)&a1[*v3])
          break;
        v19 = v18 + 1;
        v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
        *(_QWORD *)&a1[v17] = v19;
        if (v20 < 0 && v16++ <= 8)
          continue;
        goto LABEL_42;
      }
      a1[*v4] = 1;
LABEL_42:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1897E61FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEORPRapInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(_BYTE *)(a1 + 60) & 0x28) != 0)
    return (os_unfair_lock_s *)1;
  if ((*(_BYTE *)(a1 + 60) & 0x10) != 0)
    return GEORPRapResponseIsDirty(*(os_unfair_lock_s **)(a1 + 32));
  return 0;
}

os_unfair_lock_s *GEORPRapInfoIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    v2 = _GEORPRapInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_1897E65E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E6940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E6BB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  unsigned __int8 v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  BOOL v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  GEOLocalizedString *v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  int v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  int v50;
  int *v51;
  char v52;
  char v53;
  char v54;
  BOOL v55;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(_BYTE *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    v13 = 1;
    v14 = 1;
    v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v16 = v12 != 0;
        v17 = v16 & ~(_BYTE)v11 | v9;
        v18 = v16 | v11;
        v52 = v17;
        v53 = v18 | v17;
        if (((v18 | v7) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v54 = (v19 == 0) | v18;
        v55 = v18;
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v12;
LABEL_7:
        v13 = v9;
LABEL_8:
        v14 = v10;
        v15 = v11;
LABEL_10:
        ++v8;
        v9 = v13;
        v10 = v14;
        v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_66;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      if (v27 == -1 || v27 >= *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v23 += 7;
      if (v24++ >= 9)
      {
        v25 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_27:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_66:
      v50 = 1;
      goto LABEL_67;
    }
    v32 = v25 >> 3;
    v33 = v55;
    if ((v54 & 1) == 0)
    {
      v34 = v19;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 == 1)
    {
      if (!v33)
        goto LABEL_57;
      if ((*(_BYTE *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_85;
        v38 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
          goto LABEL_84;
        PBReaderRecallMark();
        v39 = 32;
LABEL_50:
        v40 = *(void **)(a1 + v39);
        *(_QWORD *)(a1 + v39) = v38;

        --v8;
LABEL_64:
        v21 = (int *)MEMORY[0x1E0D82BC8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        goto LABEL_85;
      v45 = 32 * *(_BYTE *)(a1 + 52);
LABEL_63:
      v8 += v45 >> 7;
      goto LABEL_64;
    }
    if ((v52 & 1) == 0 || (*(_BYTE *)(a1 + 52) & 1) != 0)
    {
LABEL_57:
      v44 = PBReaderSkipValueWithTag();
      v21 = (int *)MEMORY[0x1E0D82BC8];
      if ((v44 & 1) == 0)
      {
        v50 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(_QWORD *)(a1 + 16))
    {
      v41 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
      v42 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v41;

    }
    v43 = PBUnknownFieldAdd();
    v21 = (int *)MEMORY[0x1E0D82BC8];
    if (!v43)
    {
      v50 = 0;
      v51 = &OBJC_IVAR___GEOTileCoordinate__x;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v53 & 1 | (v8 != 0)))
      goto LABEL_66;
  }
  if (!v33)
    goto LABEL_57;
  if ((*(_BYTE *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      goto LABEL_85;
    v45 = *(_BYTE *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_85;
  v38 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    v39 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  v50 = 0;
  v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_67:
  v51 = &OBJC_IVAR___GEOTileCoordinate__x;
  if ((v52 & 1) == 0)
    goto LABEL_69;
LABEL_68:
  *(_BYTE *)(a1 + v51[1009]) |= 1u;
LABEL_69:
  if (v55 || (v50 & 1) == 0)
  {
    *(_BYTE *)(a1 + v51[1009]) |= 4u;
    *(_BYTE *)(a1 + v51[1009]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      v47 = *v19++;
      v46 = v47;
      if (v47 == 1)
        break;
      if (v46 == 2)
      {
LABEL_74:
        *(_BYTE *)(a1 + v51[1009]) |= v46;
      }
      else if (!v46)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v46) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v50)
    v3 = *(_BYTE *)(v3 + *v21) == 0;
  else
    v3 = 0;
  if (v55)
  {
    v48 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_1897E723C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E7800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPRapNotificationReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPRapNotificationReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPRapNotificationReadAllFrom_initialTag;
  Specified = GEORPRapNotificationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897E79B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapNotificationReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapNotificationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E7A18(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapNotificationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  int v14;
  _BOOL8 v16;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v14 = v8 & 7;
      if (v13 || v14 == 4)
        break;
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1897E7D6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEORPRapNotificationIsDirty(uint64_t a1)
{
  char v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v2 = *(_BYTE *)(a1 + 52);
  if ((v2 & 8) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 4) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 32)))
      return 1;
    v2 = *(_BYTE *)(a1 + 52);
  }
  return (v2 & 2) != 0 && GEOLocalizedStringIsDirty(*(_QWORD *)(a1 + 24));
}

os_unfair_lock_s *GEORPRapNotificationIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  _BOOL8 IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPRapNotificationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897E807C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E82C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapQueryParametersReadAllFrom(_QWORD *a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *v17;
  id v18;
  void *v19;
  _BOOL8 v20;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          if (v17)
            objc_msgSend(a1, "addFeedbackId:", v17);

        }
        else
        {
          if (!a1[1])
          {
            v18 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v19 = (void *)a1[1];
            a1[1] = v18;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_28;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_1897E8B28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPRapQueryParametersReadFrom(_QWORD *a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapQueryParametersReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E8B88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E9290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  GEORPRapNotification *v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  char v52;
  void *v53;
  int v55;
  int *v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 60);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 56));
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (vaddv_s16((int16x4_t)(*(_QWORD *)&vshl_u16((uint16x4_t)(*(_QWORD *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(_BYTE *)(a1 + 72) & 2) != 0));
  while (2)
  {
    v12 = 1;
    v13 = 1;
    v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        v7 = 1;
        goto LABEL_7;
      case -2:
        v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v15 = v11 > 2;
        v57 = v15 & ~(_BYTE)v10 | v8;
        v58 = v15 | v10 | v57;
        if ((((v15 | v10) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v59 = (v16 == 0) | v15 | v10;
        v60 = v15 | v10;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = (int *)MEMORY[0x1E0D82BD8];
        break;
      default:
        ++v11;
LABEL_7:
        v12 = v8;
LABEL_8:
        v13 = v9;
        v14 = v10;
LABEL_10:
        ++v6;
        v8 = v12;
        v9 = v13;
        v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v20) || *(_BYTE *)(v3 + *v18))
      goto LABEL_90;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      if (v25 == -1 || v25 >= *(_QWORD *)(v3 + *v20))
        break;
      v26 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0)
        goto LABEL_25;
      v21 += 7;
      v27 = v22++ >= 9;
      if (v27)
      {
        v23 = 0;
        v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_25:
    v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_90:
      v55 = 1;
      goto LABEL_91;
    }
    v30 = v23 >> 3;
    v31 = v60;
    if ((v59 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 0x10) == 0)
        {
          PBReaderReadString();
          v36 = objc_claimAutoreleasedReturnValue();
          v37 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v36;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v50 = 8 * *(_BYTE *)(a1 + 72);
        goto LABEL_87;
      case 2:
        if ((v7 & 1) == 0)
          goto LABEL_73;
        v41 = 0;
        v42 = 0;
        v43 = 0;
        *(_BYTE *)(a1 + 72) |= 1u;
        while (2)
        {
          v44 = *v17;
          v45 = *(_QWORD *)(v3 + v44);
          if (v45 == -1 || v45 >= *(_QWORD *)(v3 + *v20))
          {
            *(_BYTE *)(v3 + *v18) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v45);
            *(_QWORD *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              v27 = v42++ >= 9;
              if (v27)
              {
                LODWORD(v43) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v18))
          LODWORD(v43) = 0;
LABEL_78:
        *(_DWORD *)(a1 + 68) = v43;
        goto LABEL_89;
      case 3:
        if (!v31)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v50 = 16 * *(_BYTE *)(a1 + 72);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v47 = objc_alloc_init(GEORPRapNotification);
        if (!GEORPRapNotificationReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v48 = 32;
        goto LABEL_71;
      case 4:
        if (!v31)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v50 = 32 * *(_BYTE *)(a1 + 72);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v47 = objc_alloc_init(GEORPDisplayDetails);
        if (!GEORPDisplayDetailsReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
          goto LABEL_107;
        PBReaderRecallMark();
        v48 = 24;
        goto LABEL_71;
      case 5:
        if (!v31)
          goto LABEL_73;
        if ((*(_BYTE *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_108;
          v50 = 4 * *(_BYTE *)(a1 + 72);
LABEL_87:
          v6 += v50 >> 7;
LABEL_88:
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
LABEL_89:
          if (!(v58 & 1 | (v6 != 0)))
            goto LABEL_90;
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_108;
        v47 = objc_alloc_init(GEORPUserFormDetails);
        if (GEORPUserFormDetailsReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          v48 = 48;
LABEL_71:
          v37 = *(void **)(a1 + v48);
          *(_QWORD *)(a1 + v48) = v47;
LABEL_72:

          --v6;
          goto LABEL_88;
        }
LABEL_107:

LABEL_108:
        v55 = 0;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_91:
        v56 = &OBJC_IVAR___GEOTileCoordinate__x;
        if ((v57 & 1) != 0)
LABEL_92:
          *(_BYTE *)(a1 + v56[1019]) |= 2u;
        if (v60 & 1 | ((v55 & 1) == 0))
        {
          *(_BYTE *)(a1 + v56[1019]) |= 0x10u;
          *(_BYTE *)(a1 + v56[1019]) |= 8u;
          *(_BYTE *)(a1 + v56[1019]) |= 4u;
          *(_BYTE *)(a1 + v56[1019]) |= 0x20u;
        }
        else if (v16)
        {
          while (1)
          {
            v51 = *v16++;
            v52 = 16;
            switch(v51)
            {
              case 0:
                goto LABEL_101;
              case 1:
                goto LABEL_100;
              case 3:
                v52 = 8;
                goto LABEL_100;
              case 4:
                v52 = 4;
                goto LABEL_100;
              case 5:
                v52 = 32;
LABEL_100:
                *(_BYTE *)(a1 + v56[1019]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v55)
          v3 = *(_BYTE *)(v3 + *v18) == 0;
        else
          v3 = 0;
        if ((v60 & 1) != 0)
        {
          v53 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        if ((v57 & 1) == 0 || (*(_BYTE *)(a1 + 72) & 2) != 0)
        {
LABEL_73:
          v49 = PBReaderSkipValueWithTag();
          v20 = (int *)MEMORY[0x1E0D82BD8];
          v18 = (int *)MEMORY[0x1E0D82BC8];
          if ((v49 & 1) == 0)
          {
            v55 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(_QWORD *)(a1 + 16))
          {
            v38 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v39 = *(void **)(a1 + 16);
            *(_QWORD *)(a1 + 16) = v38;

          }
          v40 = PBUnknownFieldAdd();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v20 = (int *)MEMORY[0x1E0D82BD8];
          if (!v40)
          {
            v55 = 0;
            v56 = &OBJC_IVAR___GEOTileCoordinate__x;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_1897E9D44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E9E88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E9FC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EA8CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 60))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEORPRapResponseReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 60) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEORPRapResponseReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEORPRapResponseReadAllFrom_initialTag;
  Specified = GEORPRapResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
    objc_msgSend(*(id *)(a1 + 48), "readAll:", 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1897EAA94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORPRapResponseReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPRapResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897EAAF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserFormDetailsIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v13;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL8 v21;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
          break;
        v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v13 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v13 || (v8 & 7) == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_33;
        v15 = 0;
        while (1)
        {
          v16 = *v2;
          v17 = *(_QWORD *)&a1[v16];
          if (v17 == -1 || v17 >= *(_QWORD *)&a1[*v3])
            break;
          v18 = v17 + 1;
          v19 = *(char *)(*(_QWORD *)&a1[*v5] + v17);
          *(_QWORD *)&a1[v16] = v18;
          if (v19 < 0 && v15++ <= 8)
            continue;
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        v21 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_1897EAEC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORPRapResponseIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  v2 = *(unsigned __int8 *)(a1 + 72);
  if ((v2 & 0x50) != 0)
    return 1;
  if ((v2 & 8) != 0)
  {
    if ((GEORPRapNotificationIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int8 *)(a1 + 72);
  }
  if ((v2 & 4) != 0)
  {
    if ((GEORPDisplayDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) == 0)
    {
      v2 = *(unsigned __int8 *)(a1 + 72);
      return (v2 >> 5) & 1;
    }
    return 1;
  }
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEORPRapResponseIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEORPRapResponseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897EB2FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EB690(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserFormDetailsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  void *v24;
  _BOOL8 v25;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 20) |= 1u;
          while (1)
          {
            v20 = *v4;
            v21 = *(_QWORD *)&v3[v20];
            if (v21 == -1 || v21 >= *(_QWORD *)&v3[*v5])
              break;
            v22 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v21);
            *(_QWORD *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_32;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6])
            LODWORD(v19) = 0;
LABEL_34:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(_QWORD *)(a1 + 8))
          {
            v23 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
            v24 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = v23;

          }
          if (!PBUnknownFieldAdd())
            goto LABEL_37;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_1897EBFAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORPUserFormDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORPUserFormDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897EC00C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ED7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1897F0494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id GEOGetMapsProxyAuthLog()
{
  if (qword_1ECDBCC90 != -1)
    dispatch_once(&qword_1ECDBCC90, &__block_literal_global_210);
  return (id)_MergedGlobals_341;
}

void sub_1897F0B38(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
}

id _buildRequest(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD v19[4];
  id v20;
  _QWORD v21[4];
  id v22;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (v7
    || (GEOGetURLWithSource(39, 0), (v7 = (id)objc_claimAutoreleasedReturnValue()) != 0)
    || (GEOGetURLWithSource(51, 0), (v7 = (id)objc_claimAutoreleasedReturnValue()) != 0))
  {
    objc_msgSend(v7, "URLByAppendingPathComponent:", v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = objc_msgSend(v10, "count");
    v13 = MEMORY[0x1E0C809B0];
    if (v12)
    {
      objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v10, "count"));
      v21[0] = v13;
      v21[1] = 3221225472;
      v21[2] = ___buildRequest_block_invoke;
      v21[3] = &unk_1E1C07D90;
      v22 = (id)objc_claimAutoreleasedReturnValue();
      v14 = v22;
      objc_msgSend(v10, "enumerateKeysAndObjectsUsingBlock:", v21);
      v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3998]), "initWithURL:resolvingAgainstBaseURL:", v11, 1);
      objc_msgSend(v15, "setQueryItems:", v14);
      objc_msgSend(v15, "URL");
      v16 = objc_claimAutoreleasedReturnValue();

      v11 = (void *)v16;
    }
    objc_msgSend(MEMORY[0x1E0CB37A8], "requestWithURL:", v11);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setHTTPMethod:", CFSTR("GET"));
    v19[0] = v13;
    v19[1] = 3221225472;
    v19[2] = ___buildRequest_block_invoke_2;
    v19[3] = &unk_1E1C07D90;
    v7 = v17;
    v20 = v7;
    objc_msgSend(v9, "enumerateKeysAndObjectsUsingBlock:", v19);

  }
  return v7;
}

id _defaultURLSession()
{
  void *WeakRetained;
  void *v1;

  WeakRetained = objc_loadWeakRetained(&_defaultURLSession__session);
  if (!WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0CB39F8], "ephemeralSessionConfiguration");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "setTimeoutIntervalForResource:", GEOConfigGetDouble(GeoServicesConfig_ClientAuthFeatureFlagsRequestTimeout, (uint64_t)off_1EDF4DE18));
    objc_msgSend(MEMORY[0x1E0CB39F0], "sessionWithConfiguration:", v1);
    WeakRetained = (void *)objc_claimAutoreleasedReturnValue();
    objc_storeWeak(&_defaultURLSession__session, WeakRetained);

  }
  return WeakRetained;
}

__CFString *_responseDescription(void *a1)
{
  id v1;
  uint64_t v2;
  __CFString *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = objc_msgSend(v1, "statusCode");
    objc_msgSend(MEMORY[0x1E0CB37A0], "string");
    v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
    -[__CFString appendFormat:](v3, "appendFormat:", CFSTR("%d: "), v2);
    v13 = v1;
    objc_msgSend(v1, "allHeaderFields");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[__CFString appendString:](v3, "appendString:", CFSTR("{ "));
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v5 = objc_msgSend(&unk_1E1E85AC8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v15;
      v8 = 1;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v15 != v7)
            objc_enumerationMutation(&unk_1E1E85AC8);
          v10 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * i);
          objc_msgSend(v4, "objectForKeyedSubscript:", v10);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          if (v11)
          {
            if ((v8 & 1) == 0)
              -[__CFString appendString:](v3, "appendString:", CFSTR(" / "));
            -[__CFString appendString:](v3, "appendString:", v10);
            -[__CFString appendString:](v3, "appendString:", CFSTR(" = "));
            -[__CFString appendString:](v3, "appendString:", v11);
            v8 = 0;
          }

        }
        v6 = objc_msgSend(&unk_1E1E85AC8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v6);
    }
    -[__CFString appendString:](v3, "appendString:", CFSTR(" }"));

    v1 = v13;
  }
  else
  {
    v3 = CFSTR("<invalid type>");
  }

  return v3;
}

uint64_t _httpStatusCodeSafe(void *a1)
{
  id v1;
  uint64_t v2;
  NSObject *v3;
  objc_class *v4;
  void *v5;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = objc_msgSend(v1, "statusCode");
  }
  else
  {
    if (v1)
    {
      GEOGetMapsProxyAuthLog();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
      {
        v4 = (objc_class *)objc_opt_class();
        NSStringFromClass(v4);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = 138412290;
        v8 = v5;
        _os_log_impl(&dword_1885A9000, v3, OS_LOG_TYPE_FAULT, "Expected response of type NSHTTPURLResponse, got %@", (uint8_t *)&v7, 0xCu);

      }
    }
    v2 = 0;
  }

  return v2;
}

void sub_1897F2454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

BOOL GEOAuthProxyURLIsValid(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  _BOOL4 v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "host");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(v2, "port");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v4 == 0;

    }
    else
    {
      v5 = 1;
    }

  }
  else
  {
    v5 = 1;
  }

  return !v5;
}

void sub_1897F49A0(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void sub_1897F4E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1897F4EA4(_Unwind_Exception *a1)
{
  _geo_isolate_unlock();
  _Unwind_Resume(a1);
}

void ___buildRequest_block_invoke(uint64_t a1, void *a2, void *a3)
{
  objc_class *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v5 = (objc_class *)MEMORY[0x1E0CB39D8];
  v6 = a3;
  v7 = a2;
  v9 = (id)objc_msgSend([v5 alloc], "initWithName:value:", v7, v6);

  v8 = v9;
  if (v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);
    v8 = v9;
  }

}

uint64_t ___buildRequest_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "setValue:forHTTPHeaderField:", a3, a2);
}

BOOL _GEOMapItemIsEqualForWithinDistanceExcludingName(void *a1, void *a2, long double a3)
{
  id v5;
  id v6;
  int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  _BOOL8 v12;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  v5 = a1;
  v6 = a2;
  if (objc_msgSend(v5, "_placeType")
    && objc_msgSend(v6, "_placeType")
    && (v7 = objc_msgSend(v5, "_placeType"), v7 != objc_msgSend(v6, "_placeType"))
    || (objc_msgSend(v5, "coordinate"), fabs(v9 + 180.0) < 0.00000001) && fabs(v8 + 180.0) < 0.00000001
    || (objc_msgSend(v6, "coordinate"), fabs(v11 + 180.0) < 0.00000001) && fabs(v10 + 180.0) < 0.00000001)
  {
    v12 = 0;
  }
  else
  {
    objc_msgSend(v5, "coordinate");
    v15 = v14;
    v17 = v16;
    objc_msgSend(v6, "coordinate");
    v12 = GEOCalculateDistanceRadius(v15, v17, v18, v19, 6367000.0) <= a3;
  }

  return v12;
}

BOOL _GEOMapItemIsEqualForWithinDistance(void *a1, void *a2, long double a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  int v9;
  _BOOL8 IsEqualForWithinDistanceExcludingName;

  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "name");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "name");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "isEqualToString:", v8);

  if (v9)
    IsEqualForWithinDistanceExcludingName = _GEOMapItemIsEqualForWithinDistanceExcludingName(v5, v6, a3);
  else
    IsEqualForWithinDistanceExcludingName = 0;

  return IsEqualForWithinDistanceExcludingName;
}

BOOL GEOMapItemIsEqualToMapItemForPurposeWithinDistance(void *a1, void *a2, uint64_t a3, long double a4)
{
  id v7;
  id v8;
  uint64_t v9;
  _BOOL8 IsEqualForWithinDistance;
  int v11;
  uint64_t v12;
  int v13;
  long double v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char v23;
  _BOOL8 IsEqualForWithinDistanceExcludingName;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  void *v58;
  unint64_t v59;

  v7 = a1;
  v8 = a2;
  if (a3 == 5
    && (objc_msgSend(v7, "_hasResultProviderID") & 1) == 0
    && (objc_msgSend(v8, "_hasResultProviderID") & 1) == 0
    && ((objc_msgSend(v7, "_hasMUID") & 1) != 0 || objc_msgSend(v8, "_hasMUID")))
  {
    v9 = objc_msgSend(v7, "_muid");
    IsEqualForWithinDistance = v9 == objc_msgSend(v8, "_muid");
    goto LABEL_65;
  }
  if (objc_msgSend(v7, "_hasResultProviderID") && objc_msgSend(v8, "_hasResultProviderID"))
  {
    v11 = objc_msgSend(v7, "_resultProviderID");
    if (v11 == objc_msgSend(v8, "_resultProviderID"))
    {
      if (objc_msgSend(v7, "_hasMUID"))
      {
        if (objc_msgSend(v8, "_hasMUID"))
        {
          v12 = objc_msgSend(v7, "_muid");
          if (v12 == objc_msgSend(v8, "_muid"))
          {
            IsEqualForWithinDistance = 1;
            goto LABEL_65;
          }
        }
      }
      if (a3 == 5)
      {
        if ((objc_msgSend(v7, "_hasMUID") & 1) != 0)
          goto LABEL_33;
LABEL_18:
        if ((objc_msgSend(v8, "_hasMUID") & 1) != 0)
        {
LABEL_33:
          IsEqualForWithinDistance = 0;
          goto LABEL_65;
        }
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    if (a3 != 5 || (objc_msgSend(v7, "_hasMUID") & 1) != 0 || (objc_msgSend(v8, "_hasMUID") & 1) != 0)
    {
      if (objc_msgSend(v7, "_placeDisplayType") == 1)
      {
        v13 = objc_msgSend(v7, "_placeDisplayType");
        if (v13 == objc_msgSend(v8, "_placeDisplayType"))
          goto LABEL_33;
      }
      goto LABEL_29;
    }
LABEL_31:
    v15 = v7;
    v16 = v8;
    v14 = a4;
LABEL_32:
    IsEqualForWithinDistance = _GEOMapItemIsEqualForWithinDistance(v15, v16, v14);
    goto LABEL_65;
  }
  if (a3 == 5)
  {
    if (objc_msgSend(v7, "_hasMUID") && !objc_msgSend(v8, "_hasMUID"))
      goto LABEL_33;
    if ((objc_msgSend(v7, "_hasMUID") & 1) == 0)
      goto LABEL_18;
    goto LABEL_31;
  }
LABEL_29:
  switch(a3)
  {
    case 1:
      v17 = v7;
      v18 = v8;
      objc_msgSend(v17, "name");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      if (!objc_msgSend(v19, "length"))
        goto LABEL_46;
      objc_msgSend(v18, "name");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v20, "length"))
      {
        objc_msgSend(v17, "name");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "name");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_msgSend(v21, "isEqualToString:", v22);

        if ((v23 & 1) == 0)
          goto LABEL_63;
      }
      else
      {

LABEL_46:
      }
      objc_msgSend(v17, "coordinate");
      v26 = v25;
      v28 = v27;
      objc_msgSend(v18, "coordinate");
      if (GEOCalculateDistanceRadius(v26, v28, v29, v30, 6367000.0) > 50.0)
        goto LABEL_63;
      v31 = objc_msgSend(v17, "_hasTransit");
      if (v31 != objc_msgSend(v18, "_hasTransit"))
        goto LABEL_63;
      if (!objc_msgSend(v17, "_hasTransit") || !objc_msgSend(v18, "_hasTransit"))
        goto LABEL_55;
      objc_msgSend(v17, "_transitInfo");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "displayName");
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v18, "_transitInfo");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "displayName");
      v35 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v33, "length")
        && objc_msgSend(v35, "length")
        && !objc_msgSend(v33, "isEqualToString:", v35))
      {

        goto LABEL_63;
      }

LABEL_55:
      objc_msgSend(v17, "_roadAccessPoints");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v37 = objc_msgSend(v36, "count");
      objc_msgSend(v18, "_roadAccessPoints");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = objc_msgSend(v38, "count");

      if (v37 != v39)
      {
LABEL_63:
        IsEqualForWithinDistance = 0;
        goto LABEL_64;
      }
      objc_msgSend(v17, "_roadAccessPoints");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      v41 = objc_msgSend(v40, "count");

      if (v41)
      {
        v42 = 0;
        do
        {
          objc_msgSend(v17, "_roadAccessPoints");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v43, "objectAtIndexedSubscript:", v42);
          v44 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v18, "_roadAccessPoints");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v45, "objectAtIndexedSubscript:", v42);
          v46 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v44, "location");
          v47 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v46, "location");
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          v49 = v47;
          objc_msgSend(v49, "lat");
          v51 = v50;
          objc_msgSend(v49, "lng");
          v53 = v52;

          objc_msgSend(v48, "lat");
          v55 = v54;
          objc_msgSend(v48, "lng");
          v57 = GEOCalculateDistanceRadius(v51, v53, v55, v56, 6367000.0);

          IsEqualForWithinDistance = v57 <= 50.0;
          if (v57 > 50.0)
            break;
          ++v42;
          objc_msgSend(v17, "_roadAccessPoints");
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          v59 = objc_msgSend(v58, "count");

        }
        while (v42 < v59);
      }
      else
      {
        IsEqualForWithinDistance = 1;
      }
LABEL_64:

LABEL_65:
      return IsEqualForWithinDistance;
    case 2:
    case 4:
      v14 = 50.0;
      v15 = v7;
      v16 = v8;
      goto LABEL_32;
    case 3:
      v17 = v7;
      v18 = v8;
      if (objc_msgSend(v17, "_placeType") == 10 && objc_msgSend(v18, "_placeType") == 10
        || objc_msgSend(v17, "_placeDisplayType") == 1
        && objc_msgSend(v18, "_placeDisplayType") == 1)
      {
        IsEqualForWithinDistanceExcludingName = _GEOMapItemIsEqualForWithinDistance(v17, v18, 50.0);
      }
      else
      {
        IsEqualForWithinDistanceExcludingName = _GEOMapItemIsEqualForWithinDistanceExcludingName(v17, v18, 50.0);
      }
      IsEqualForWithinDistance = IsEqualForWithinDistanceExcludingName;
      goto LABEL_64;
    case 5:
      goto LABEL_31;
    default:
      goto LABEL_33;
  }
}

BOOL GEOMapItemIsEqualToMapItemForPurpose(void *a1, void *a2, uint64_t a3)
{
  if (a1 && a2)
    return GEOMapItemIsEqualToMapItemForPurposeWithinDistance(a1, a2, a3, 50.0);
  else
    return a1 == a2;
}

uint64_t GEOMapItemHashForPurpose(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1;
  v4 = v3;
  switch(a2)
  {
    case 1:
      if (objc_msgSend(v3, "_hasTransit"))
        v5 = 0x10000;
      else
        v5 = 0;
      objc_msgSend(v4, "_roadAccessPoints");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = objc_msgSend(v6, "hash") ^ v5;
      goto LABEL_14;
    case 2:
    case 4:
      goto LABEL_9;
    case 3:
      if (objc_msgSend(v3, "_placeType") == 10
        || objc_msgSend(v4, "_placeDisplayType") == 1)
      {
        objc_msgSend(v4, "name");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v6, "hash");
        v7 = v8 ^ (int)objc_msgSend(v4, "_placeType");
        goto LABEL_14;
      }
      v7 = (int)objc_msgSend(v4, "_placeType");
      break;
    case 5:
      if (objc_msgSend(v3, "_hasMUID") && objc_msgSend(v4, "_muid"))
      {
        v7 = objc_msgSend(v4, "_muid");
      }
      else
      {
LABEL_9:
        objc_msgSend(v4, "name");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = objc_msgSend(v6, "hash");
LABEL_14:

      }
      break;
    default:
      v7 = 0;
      break;
  }

  return v7;
}

id GEOGetGEOComposedRouteLog_0()
{
  if (qword_1ECDBCCC0 != -1)
    dispatch_once(&qword_1ECDBCCC0, &__block_literal_global_211);
  return (id)_MergedGlobals_342;
}

void _GEOConfigClearExpiredKey(void *a1, uint64_t a2)
{
  id v3;
  GEOConfigClearExpiredKeyRequest *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (_GEODefaultsUseServer)
  {
    v4 = -[GEOConfigClearExpiredKeyRequest initWithTraits:auditToken:throttleToken:]([GEOConfigClearExpiredKeyRequest alloc], "initWithTraits:auditToken:throttleToken:", 0, 0, 0);
    -[GEOConfigClearExpiredKeyRequest setKeyString:](v4, "setKeyString:", v3);
    -[GEOConfigClearExpiredKeyRequest setKeyOptions:](v4, "setKeyOptions:", a2);
    _GEODefaultsServerConnection();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[GEOXPCRequest send:](v4, "send:", v5);

  }
  else
  {
    _GEOConfigProxy();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "configExpiryForOptions:", a2);
    v4 = (GEOConfigClearExpiredKeyRequest *)objc_claimAutoreleasedReturnValue();

    if (-[GEOConfigClearExpiredKeyRequest getConfigKeyIsExpired:](v4, "getConfigKeyIsExpired:", v3))
    {
      j__GEOGetUserDefaultsLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        v10 = 138412290;
        v11 = v3;
        _os_log_impl(&dword_1885A9000, v7, OS_LOG_TYPE_DEBUG, "Clearing value for key in DirectStore: %@", (uint8_t *)&v10, 0xCu);
      }

      _GEOConfigProxy();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "configStoreForOptions:", a2);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v9, "setConfigValue:forKey:options:synchronous:", 0, v3, a2, 1);
      -[GEOConfigClearExpiredKeyRequest clearConfigKeyExpiry:](v4, "clearConfigKeyExpiry:", v3);

    }
  }

}

id GEOGetOfflineRequesterLog()
{
  if (qword_1ECDBCCD0 != -1)
    dispatch_once(&qword_1ECDBCCD0, &__block_literal_global_128_1);
  return (id)_MergedGlobals_343;
}

id offlineServiceQueue()
{
  if (qword_1ECDBCCD8 != -1)
    dispatch_once(&qword_1ECDBCCD8, &__block_literal_global_131_1);
  return (id)qword_1ECDBCCE0;
}

id offlineServiceConnection()
{
  if (qword_1ECDBCCF0 != -1)
    dispatch_once(&qword_1ECDBCCF0, &__block_literal_global_133_1);
  return (id)qword_1ECDBCCE8;
}

void sub_1897F9FD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __offlineServiceQueue_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = geo_dispatch_workloop_create_with_format();
  v1 = (void *)qword_1ECDBCCE0;
  qword_1ECDBCCE0 = v0;

}

uint64_t __offlineServiceConnection_block_invoke()
{
  GEOXPCConnection *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v0 = [GEOXPCConnection alloc];
  offlineServiceQueue();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = -[GEOXPCConnection initServerConnectionFor:debugIdentifier:queue:creationBlock:reconnectBlock:eventHandler:](v0, "initServerConnectionFor:debugIdentifier:queue:creationBlock:reconnectBlock:eventHandler:", 0, CFSTR("offline.server"), v1, &__block_literal_global_138_0, 0, &__block_literal_global_141_0);
  v3 = (void *)qword_1ECDBCCE8;
  qword_1ECDBCCE8 = v2;

  return objc_msgSend((id)qword_1ECDBCCE8, "setReconnectAutomatically:", 1);
}

xpc_connection_t __offlineServiceConnection_block_invoke_2(uint64_t a1, NSObject *a2)
{
  return xpc_connection_create("com.apple.GeoServices.MapsOfflineServices", a2);
}

void __offlineServiceConnection_block_invoke_3(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  NSObject *v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (MEMORY[0x18D765A14]() != MEMORY[0x1E0C81310])
  {
    v3 = (void *)MEMORY[0x18D765864](v2);
    GEOGetOfflineRequesterLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v5 = 136315138;
      v6 = v3;
      _os_log_impl(&dword_1885A9000, v4, OS_LOG_TYPE_ERROR, "Offline service sent unexpected message: %s", (uint8_t *)&v5, 0xCu);
    }

    free(v3);
  }

}

void sub_1897FAA54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1897FB0E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1897FB254(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897FB318(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897FB4E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1897FB628(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897FB738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897FBA40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1897FBAE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897FBB80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1897FBBFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1897FC770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSFRequestAppClipInstallCommandClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  SearchFoundationLibrary();
  result = objc_getClass("SFRequestAppClipInstallCommand");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECDBCD08 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__getSFCallCommandClass_block_invoke(v3);
  }
  return result;
}

Class __getSFCallCommandClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  SearchFoundationLibrary();
  result = objc_getClass("SFCallCommand");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECDBCD10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__getSFBeginMapsRoutingCommandClass_block_invoke(v3);
  }
  return result;
}

Class __getSFBeginMapsRoutingCommandClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  SearchFoundationLibrary();
  result = objc_getClass("SFBeginMapsRoutingCommand");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECDBCD18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__GEOGetGEODaemonLog_block_invoke_1(v3);
  }
  return result;
}

void sub_1897FCE00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1897FD070(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1897FD7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1897FE2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189804FC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookedSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  const __int16 *v10;
  uint16x4_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int *v16;
  GEORideBookingIntentResponseFailure *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  BOOL v105;
  uint64_t v106;
  __int16 v107;
  char v108;
  int v109;
  __int16 v110;
  void *v111;
  int v113;
  char v114;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = (const __int16 *)(a1 + 72);
  v11 = (uint16x4_t)vld1_dup_s16(v10);
  v12 = *(_QWORD *)&vshl_u16(v11, (uint16x4_t)0xFFF7FFF5FFF6FFF4) & 0xFF81FF81FF81FF81;
  LOWORD(v12) = vaddv_s16((int16x4_t)v12);
  v13 = v12;
  while (1)
  {
    v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  v15 = v9 | (v13 > 2);
  if (((v15 | v8) & 1) != 0)
    v16 = 0;
  else
    v16 = a3;
  LODWORD(v17) = v15;
  v114 = (v16 == 0) | v15;
  v18 = (int *)MEMORY[0x1E0D82BF0];
  v19 = (int *)MEMORY[0x1E0D82BC8];
  v20 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_175;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v18;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_24;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_24:
    v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v23 = 0;
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_175:
      if ((v17 & 1) != 0)
      {
        v108 = 1;
        goto LABEL_184;
      }
      if (v16)
      {
        while (1)
        {
          v109 = *v16++;
          v110 = 1024;
          switch(v109)
          {
            case 7:
              goto LABEL_182;
            case 8:
              v110 = 4096;
              goto LABEL_182;
            case 9:
              v110 = 2048;
              goto LABEL_182;
            case 13:
              v110 = 512;
LABEL_182:
              *(_WORD *)(a1 + 72) |= v110;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_185;
    }
    v31 = v23 >> 3;
    v32 = (char)v17;
    if ((v114 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + 72) |= 2u;
        while (1)
        {
          v40 = *v18;
          v41 = *(_QWORD *)(v3 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(v3 + *v6))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v41);
          *(_QWORD *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_130;
          v37 += 7;
          v28 = v38++ >= 9;
          if (v28)
          {
            v39 = 0;
            goto LABEL_132;
          }
        }
        *(_BYTE *)(v3 + *v19) = 1;
LABEL_130:
        if (*(_BYTE *)(v3 + *v19))
          v39 = 0;
LABEL_132:
        v105 = v39 != 0;
        v106 = 64;
        goto LABEL_161;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_WORD *)(a1 + 72) |= 4u;
        while (2)
        {
          v48 = *v18;
          v49 = *(_QWORD *)(v3 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v49);
            *(_QWORD *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v28 = v46++ >= 9;
              if (v28)
              {
                v47 = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v47 = 0;
LABEL_136:
        v105 = v47 != 0;
        v106 = 65;
        goto LABEL_161;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        *(_WORD *)(a1 + 72) |= 8u;
        while (2)
        {
          v55 = *v18;
          v56 = *(_QWORD *)(v3 + v55);
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v56);
            *(_QWORD *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              v28 = v53++ >= 9;
              if (v28)
              {
                v54 = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v54 = 0;
LABEL_140:
        v105 = v54 != 0;
        v106 = 66;
        goto LABEL_161;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v59 = 0;
        v60 = 0;
        v61 = 0;
        *(_WORD *)(a1 + 72) |= 0x100u;
        while (2)
        {
          v62 = *v18;
          v63 = *(_QWORD *)(v3 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v63);
            *(_QWORD *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v28 = v60++ >= 9;
              if (v28)
              {
                v61 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v61 = 0;
LABEL_144:
        v105 = v61 != 0;
        v106 = 71;
        goto LABEL_161;
      case 5:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v66 = 0;
        v67 = 0;
        v68 = 0;
        *(_WORD *)(a1 + 72) |= 0x40u;
        while (2)
        {
          v69 = *v18;
          v70 = *(_QWORD *)(v3 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v70);
            *(_QWORD *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v28 = v67++ >= 9;
              if (v28)
              {
                v68 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v68 = 0;
LABEL_148:
        v105 = v68 != 0;
        v106 = 69;
        goto LABEL_161;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v73 = 0;
        v74 = 0;
        v75 = 0;
        *(_WORD *)(a1 + 72) |= 0x80u;
        while (2)
        {
          v76 = *v18;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              v28 = v74++ >= 9;
              if (v28)
              {
                v75 = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v75 = 0;
LABEL_152:
        v105 = v75 != 0;
        v106 = 70;
        goto LABEL_161;
      case 7:
        if (!v32)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + 72) & 0x400) == 0)
        {
          PBReaderReadString();
          v80 = objc_claimAutoreleasedReturnValue();
          v81 = 24;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_190;
        v107 = 32 * *(_WORD *)(a1 + 72);
        goto LABEL_172;
      case 8:
        if (!v32)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + 72) & 0x1000) == 0)
        {
          PBReaderReadString();
          v80 = objc_claimAutoreleasedReturnValue();
          v81 = 40;
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_190;
        v107 = 8 * *(_WORD *)(a1 + 72);
        goto LABEL_172;
      case 9:
        if (!v32)
          goto LABEL_127;
        if ((*(_WORD *)(a1 + 72) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_190:
            v108 = 0;
            goto LABEL_192;
          }
          v107 = 16 * *(_WORD *)(a1 + 72);
LABEL_172:
          v7 += v107 >> 15;
        }
        else
        {
          PBReaderReadString();
          v80 = objc_claimAutoreleasedReturnValue();
          v81 = 32;
LABEL_97:
          v82 = *(void **)(a1 + v81);
          *(_QWORD *)(a1 + v81) = v80;

          --v7;
        }
        goto LABEL_173;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_WORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          v86 = *v18;
          v87 = *(_QWORD *)(v3 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v28 = v84++ >= 9;
              if (v28)
              {
                v85 = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v85 = 0;
LABEL_156:
        v105 = v85 != 0;
        v106 = 67;
        goto LABEL_161;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v90 = 0;
        v91 = 0;
        v92 = 0;
        *(_WORD *)(a1 + 72) |= 0x20u;
        while (2)
        {
          v93 = *v18;
          v94 = *(_QWORD *)(v3 + v93);
          v95 = v94 + 1;
          if (v94 == -1 || v95 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v96 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v94);
            *(_QWORD *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              v28 = v91++ >= 9;
              if (v28)
              {
                v92 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          v92 = 0;
LABEL_160:
        v105 = v92 != 0;
        v106 = 68;
LABEL_161:
        *(_BYTE *)(a1 + v106) = v105;
        goto LABEL_174;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_127;
        v97 = 0;
        v98 = 0;
        v99 = 0;
        *(_WORD *)(a1 + 72) |= 1u;
        while (2)
        {
          v100 = *v18;
          v101 = *(_QWORD *)(v3 + v100);
          v102 = v101 + 1;
          if (v101 == -1 || v102 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v19) = 1;
          }
          else
          {
            v103 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v101);
            *(_QWORD *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              v28 = v98++ >= 9;
              if (v28)
              {
                LODWORD(v99) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v19))
          LODWORD(v99) = 0;
LABEL_165:
        *(_DWORD *)(a1 + 60) = v99;
        goto LABEL_174;
      case 13:
        if (!v32 || (*(_WORD *)(a1 + 72) & 0x200) != 0)
        {
LABEL_127:
          v104 = PBReaderSkipValueWithTag();
          v19 = (int *)MEMORY[0x1E0D82BC8];
          if ((v104 & 1) == 0)
          {
LABEL_183:
            v108 = 0;
            goto LABEL_184;
          }
          goto LABEL_174;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_190;
        v113 = (int)v17;
        v17 = objc_alloc_init(GEORideBookingIntentResponseFailure);
        if (GEORideBookingIntentResponseFailureReadAllFrom((uint64_t)v17, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventRideBookedSession _addNoFlagsIntentResponseFailure:](a1, v17);

          LODWORD(v17) = v113;
LABEL_173:
          v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_174:
          if (!(v17 & 1 | (v7 != 0)))
            goto LABEL_175;
          continue;
        }

        v108 = 0;
        LOBYTE(v17) = v113;
LABEL_192:
        v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_184:
        *(_WORD *)(a1 + 72) |= 0x400u;
        *(_WORD *)(a1 + 72) |= 0x1000u;
        *(_WORD *)(a1 + 72) |= 0x800u;
        *(_WORD *)(a1 + 72) |= 0x200u;
        if ((v108 & 1) != 0)
        {
LABEL_185:
          v3 = *(_BYTE *)(v3 + *v19) == 0;
          if ((v17 & 1) != 0)
            goto LABEL_186;
        }
        else
        {
          v3 = 0;
          if ((v17 & 1) != 0)
          {
LABEL_186:
            v111 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v44 = PBReaderSkipValueWithTag();
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (!v44)
          goto LABEL_183;
        goto LABEL_174;
    }
  }
}

void sub_189805C9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189805DD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898061B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898071A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventRideBookedSessionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOLogMsgEventRideBookedSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventRideBookedSessionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventRideBookedSessionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventRideBookedSessionReadAllFrom_initialTag;
  Specified = GEOLogMsgEventRideBookedSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventRideBookedSessionCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18980742C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookedSessionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventRideBookedSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18980748C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookedSessionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  int v62;
  _BOOL8 v63;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v17 = 0;
          while (1)
          {
            v18 = *v2;
            v19 = *(_QWORD *)&a1[v18];
            v20 = v19 + 1;
            if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
            *(_QWORD *)&a1[v18] = v20;
            if (v21 < 0)
            {
              v22 = v17++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v23 = 0;
          while (1)
          {
            v24 = *v2;
            v25 = *(_QWORD *)&a1[v24];
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v27 = *(char *)(*(_QWORD *)&a1[*v5] + v25);
            *(_QWORD *)&a1[v24] = v26;
            if (v27 < 0)
            {
              v22 = v23++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v28 = 0;
          while (1)
          {
            v29 = *v2;
            v30 = *(_QWORD *)&a1[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v32 = *(char *)(*(_QWORD *)&a1[*v5] + v30);
            *(_QWORD *)&a1[v29] = v31;
            if (v32 < 0)
            {
              v22 = v28++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 4u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v33 = 0;
          while (1)
          {
            v34 = *v2;
            v35 = *(_QWORD *)&a1[v34];
            v36 = v35 + 1;
            if (v35 == -1 || v36 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v37 = *(char *)(*(_QWORD *)&a1[*v5] + v35);
            *(_QWORD *)&a1[v34] = v36;
            if (v37 < 0)
            {
              v22 = v33++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 5u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v38 = 0;
          while (1)
          {
            v39 = *v2;
            v40 = *(_QWORD *)&a1[v39];
            v41 = v40 + 1;
            if (v40 == -1 || v41 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v42 = *(char *)(*(_QWORD *)&a1[*v5] + v40);
            *(_QWORD *)&a1[v39] = v41;
            if (v42 < 0)
            {
              v22 = v38++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 6u:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v43 = 0;
          while (1)
          {
            v44 = *v2;
            v45 = *(_QWORD *)&a1[v44];
            v46 = v45 + 1;
            if (v45 == -1 || v46 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v47 = *(char *)(*(_QWORD *)&a1[*v5] + v45);
            *(_QWORD *)&a1[v44] = v46;
            if (v47 < 0)
            {
              v22 = v43++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 7u:
          if (v15 == 2)
            goto LABEL_72;
          goto LABEL_107;
        case 8u:
          if (v15 == 2)
            goto LABEL_72;
          goto LABEL_107;
        case 9u:
          if (v15 == 2)
            goto LABEL_72;
          goto LABEL_107;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v48 = 0;
          while (1)
          {
            v49 = *v2;
            v50 = *(_QWORD *)&a1[v49];
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v52 = *(char *)(*(_QWORD *)&a1[*v5] + v50);
            *(_QWORD *)&a1[v49] = v51;
            if (v52 < 0)
            {
              v22 = v48++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v53 = 0;
          while (1)
          {
            v54 = *v2;
            v55 = *(_QWORD *)&a1[v54];
            v56 = v55 + 1;
            if (v55 == -1 || v56 > *(_QWORD *)&a1[*v3])
              goto LABEL_98;
            v57 = *(char *)(*(_QWORD *)&a1[*v5] + v55);
            *(_QWORD *)&a1[v54] = v56;
            if (v57 < 0)
            {
              v22 = v53++ > 8;
              if (!v22)
                continue;
            }
            goto LABEL_99;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_107;
          v58 = 0;
          break;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORideBookingIntentResponseFailureIsValid(a1))
            goto LABEL_107;
          PBReaderRecallMark();
          continue;
        default:
LABEL_72:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_107:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v59 = *v2;
        v60 = *(_QWORD *)&a1[v59];
        v61 = v60 + 1;
        if (v60 == -1 || v61 > *(_QWORD *)&a1[*v3])
          break;
        v62 = *(char *)(*(_QWORD *)&a1[*v5] + v60);
        *(_QWORD *)&a1[v59] = v61;
        if (v62 < 0)
        {
          v22 = v58++ > 8;
          if (!v22)
            continue;
        }
        goto LABEL_99;
      }
LABEL_98:
      a1[*v4] = 1;
LABEL_99:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEORideBookingIntentResponseFailureIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BOOL8 v27;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (a1[*v4])
        goto LABEL_39;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      if (v14 || (v8 & 7) == 4)
        goto LABEL_39;
      if ((v8 >> 3) == 2)
        break;
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0)
          goto LABEL_41;
        v16 = 0;
        while (1)
        {
          v17 = *v2;
          v18 = *(_QWORD *)&a1[v17];
          v19 = v18 + 1;
          if (v18 == -1 || v19 > *(_QWORD *)&a1[*v3])
            break;
          v20 = *(char *)(*(_QWORD *)&a1[*v5] + v18);
          *(_QWORD *)&a1[v17] = v19;
          if (v20 < 0)
          {
            v21 = v16++ > 8;
            if (!v21)
              continue;
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
        goto LABEL_39;
    }
    if ((v8 & 7) != 0)
      goto LABEL_41;
    v22 = 0;
    while (1)
    {
      v23 = *v2;
      v24 = *(_QWORD *)&a1[v23];
      v25 = v24 + 1;
      if (v24 == -1 || v25 > *(_QWORD *)&a1[*v3])
        goto LABEL_36;
      v26 = *(char *)(*(_QWORD *)&a1[*v5] + v24);
      *(_QWORD *)&a1[v23] = v25;
      if (v26 < 0)
      {
        v21 = v22++ > 8;
        if (!v21)
          continue;
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_189807F74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookedSessionIsDirty(uint64_t a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = (*(_WORD *)(a1 + 72) & 0x3E00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189808680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189808FD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookingSessionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const float *v11;
  uint32x4_t v12;
  int8x16_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  BOOL v30;
  int v31;
  unint64_t v33;
  BOOL v34;
  int *v35;
  int v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  char v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  GEOLatLng *v124;
  char v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  char v138;
  uint64_t v139;
  BOOL v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  char v144;
  int v145;
  int v146;
  int v147;
  void *v148;
  GEOLatLng *v150;
  char v151;
  char v152;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 108);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 104));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const float *)(a1 + 140);
  v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE48F0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_189CE4900), v13)));
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 5;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v152 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v151 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (*(_QWORD *)(v3 + *v20) < *(_QWORD *)(v3 + *v6) && !*(_BYTE *)(v3 + *v21))
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    while (1)
    {
      v26 = *v20;
      v27 = *(_QWORD *)(v3 + v26);
      v28 = v27 + 1;
      if (v27 == -1 || v28 > *(_QWORD *)(v3 + *v6))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v27);
      *(_QWORD *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0)
        goto LABEL_23;
      v23 += 7;
      v30 = v24++ >= 9;
      if (v30)
      {
        v25 = 0;
        v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v25 = 0;
LABEL_25:
    if (v31 || (v25 & 7) == 4)
      break;
    v33 = v25 >> 3;
    v34 = v18;
    if ((v152 & 1) == 0)
    {
      v35 = v19;
      do
      {
        v37 = *v35++;
        v36 = v37;
        v34 = v37 != 0;
        if (v37)
          v38 = v36 == (_DWORD)v33;
        else
          v38 = 1;
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34)
          goto LABEL_187;
        if ((*(_BYTE *)(a1 + 142) & 0x20) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 80;
          goto LABEL_162;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_287;
        v142 = (int)(*(_DWORD *)(a1 + 140) << 10) >> 31;
        goto LABEL_255;
      case 2:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v42 = 0;
        v43 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 140) |= 8u;
        while (2)
        {
          v45 = *v20;
          v46 = *(_QWORD *)(v3 + v45);
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v46);
            *(_QWORD *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              v30 = v43++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v44) = 0;
LABEL_192:
        v139 = 116;
        goto LABEL_242;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v49 = 0;
        v50 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 140) |= 0x10u;
        while (2)
        {
          v51 = *v20;
          v52 = *(_QWORD *)(v3 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v52);
            *(_QWORD *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v44) = 0;
LABEL_196:
        v139 = 120;
        goto LABEL_242;
      case 4:
        if (!v34)
          goto LABEL_187;
        if ((*(_BYTE *)(a1 + 142) & 8) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 64;
          goto LABEL_162;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_287;
        v142 = (int)(*(_DWORD *)(a1 + 140) << 12) >> 31;
        goto LABEL_255;
      case 5:
        if (!v34)
          goto LABEL_187;
        if ((*(_BYTE *)(a1 + 142) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_287;
          v142 = (int)(*(_DWORD *)(a1 + 140) << 13) >> 31;
          goto LABEL_255;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_287;
        v150 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v150, (void *)v3))
          goto LABEL_286;
        PBReaderRecallMark();
        v55 = 56;
        goto LABEL_71;
      case 6:
        if (!v34)
          goto LABEL_187;
        if ((*(_BYTE *)(a1 + 141) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_287;
          v142 = (int)(*(_DWORD *)(a1 + 140) << 16) >> 31;
LABEL_255:
          v7 += v142;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_287;
          v150 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v150, (void *)v3))
            goto LABEL_286;
          PBReaderRecallMark();
          v55 = 16;
LABEL_71:
          v56 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v150;
LABEL_163:

          --v7;
        }
        goto LABEL_256;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_DWORD *)(a1 + 140) |= 0x100u;
        while (2)
        {
          v60 = *v20;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v30 = v58++ >= 9;
              if (v30)
              {
                v59 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v59 = 0;
LABEL_200:
        v140 = v59 != 0;
        v141 = 133;
        goto LABEL_237;
      case 8:
        if (!v34)
          goto LABEL_187;
        if ((*(_BYTE *)(a1 + 142) & 0x40) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 88;
          goto LABEL_162;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_287;
        v142 = (int)(*(_DWORD *)(a1 + 140) << 9) >> 31;
        goto LABEL_255;
      case 9:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        *(_DWORD *)(a1 + 140) |= 1u;
        v64 = *v20;
        v65 = *(_QWORD *)(v3 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v66 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v65);
          *(_QWORD *)(v3 + v64) = v65 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v66 = 0;
        }
        v143 = 24;
        goto LABEL_261;
      case 10:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v67 = 0;
        v68 = 0;
        v69 = 0;
        *(_DWORD *)(a1 + 140) |= 0x800u;
        while (2)
        {
          v70 = *v20;
          v71 = *(_QWORD *)(v3 + v70);
          v72 = v71 + 1;
          if (v71 == -1 || v72 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v73 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v71);
            *(_QWORD *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              v30 = v68++ >= 9;
              if (v30)
              {
                v69 = 0;
                goto LABEL_204;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v69 = 0;
LABEL_204:
        v140 = v69 != 0;
        v141 = 136;
        goto LABEL_237;
      case 11:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v74 = 0;
        v75 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 140) |= 0x20u;
        while (2)
        {
          v76 = *v20;
          v77 = *(_QWORD *)(v3 + v76);
          v78 = v77 + 1;
          if (v77 == -1 || v78 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v79 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v77);
            *(_QWORD *)(v3 + v76) = v78;
            v44 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              v30 = v75++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_208;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v44) = 0;
LABEL_208:
        v139 = 124;
        goto LABEL_242;
      case 12:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v80 = 0;
        v81 = 0;
        v82 = 0;
        *(_DWORD *)(a1 + 140) |= 0x2000u;
        while (2)
        {
          v83 = *v20;
          v84 = *(_QWORD *)(v3 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v84);
            *(_QWORD *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              v30 = v81++ >= 9;
              if (v30)
              {
                v82 = 0;
                goto LABEL_212;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v82 = 0;
LABEL_212:
        v140 = v82 != 0;
        v141 = 138;
        goto LABEL_237;
      case 13:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v87 = 0;
        v88 = 0;
        v89 = 0;
        *(_DWORD *)(a1 + 140) |= 0x1000u;
        while (2)
        {
          v90 = *v20;
          v91 = *(_QWORD *)(v3 + v90);
          v92 = v91 + 1;
          if (v91 == -1 || v92 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v93 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v91);
            *(_QWORD *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              v30 = v88++ >= 9;
              if (v30)
              {
                v89 = 0;
                goto LABEL_216;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v89 = 0;
LABEL_216:
        v140 = v89 != 0;
        v141 = 137;
        goto LABEL_237;
      case 14:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        *(_DWORD *)(a1 + 140) |= 2u;
        v94 = *v20;
        v95 = *(_QWORD *)(v3 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFF7 && v95 + 8 <= *(_QWORD *)(v3 + *v6))
        {
          v66 = *(_QWORD *)(*(_QWORD *)(v3 + *v22) + v95);
          *(_QWORD *)(v3 + v94) = v95 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v21) = 1;
          v66 = 0;
        }
        v143 = 32;
LABEL_261:
        *(_QWORD *)(a1 + v143) = v66;
        goto LABEL_262;
      case 15:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v96 = 0;
        v97 = 0;
        v98 = 0;
        *(_DWORD *)(a1 + 140) |= 0x200u;
        while (2)
        {
          v99 = *v20;
          v100 = *(_QWORD *)(v3 + v99);
          v101 = v100 + 1;
          if (v100 == -1 || v101 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v100);
            *(_QWORD *)(v3 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              v30 = v97++ >= 9;
              if (v30)
              {
                v98 = 0;
                goto LABEL_220;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v98 = 0;
LABEL_220:
        v140 = v98 != 0;
        v141 = 134;
        goto LABEL_237;
      case 16:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v103 = 0;
        v104 = 0;
        v105 = 0;
        *(_DWORD *)(a1 + 140) |= 4u;
        while (2)
        {
          v106 = *v20;
          v107 = *(_QWORD *)(v3 + v106);
          v108 = v107 + 1;
          if (v107 == -1 || v108 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v109 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v107);
            *(_QWORD *)(v3 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              v30 = v104++ >= 9;
              if (v30)
              {
                v105 = 0;
                goto LABEL_224;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v105 = 0;
LABEL_224:
        *(_QWORD *)(a1 + 96) = v105;
        goto LABEL_262;
      case 17:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_DWORD *)(a1 + 140) |= 0x4000u;
        while (2)
        {
          v113 = *v20;
          v114 = *(_QWORD *)(v3 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v114);
            *(_QWORD *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              v30 = v111++ >= 9;
              if (v30)
              {
                v112 = 0;
                goto LABEL_228;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v112 = 0;
LABEL_228:
        v140 = v112 != 0;
        v141 = 139;
        goto LABEL_237;
      case 18:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v117 = 0;
        v118 = 0;
        v119 = 0;
        *(_DWORD *)(a1 + 140) |= 0x400u;
        while (2)
        {
          v120 = *v20;
          v121 = *(_QWORD *)(v3 + v120);
          v122 = v121 + 1;
          if (v121 == -1 || v122 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v121);
            *(_QWORD *)(v3 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              v30 = v118++ >= 9;
              if (v30)
              {
                v119 = 0;
                goto LABEL_232;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v119 = 0;
LABEL_232:
        v140 = v119 != 0;
        v141 = 135;
        goto LABEL_237;
      case 19:
        if (!v34 || (*(_BYTE *)(a1 + 142) & 1) != 0)
          goto LABEL_187;
        PBReaderReadString();
        v124 = (GEOLatLng *)objc_claimAutoreleasedReturnValue();
        if (!v124)
          goto LABEL_186;
        v150 = v124;
        -[GEOLogMsgEventRideBookingSession _addNoFlagsErrorMessage:](a1, v124);
        goto LABEL_185;
      case 20:
        if (!v34)
          goto LABEL_187;
        if ((*(_BYTE *)(a1 + 142) & 0x10) == 0)
        {
          PBReaderReadString();
          v39 = objc_claimAutoreleasedReturnValue();
          v40 = 72;
LABEL_162:
          v56 = *(void **)(a1 + v40);
          *(_QWORD *)(a1 + v40) = v39;
          goto LABEL_163;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_287;
        v142 = (int)(*(_DWORD *)(a1 + 140) << 11) >> 31;
        goto LABEL_255;
      case 21:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v125 = 0;
        v126 = 0;
        v127 = 0;
        *(_DWORD *)(a1 + 140) |= 0x80u;
        while (2)
        {
          v128 = *v20;
          v129 = *(_QWORD *)(v3 + v128);
          v130 = v129 + 1;
          if (v129 == -1 || v130 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v131 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v129);
            *(_QWORD *)(v3 + v128) = v130;
            v127 |= (unint64_t)(v131 & 0x7F) << v125;
            if (v131 < 0)
            {
              v125 += 7;
              v30 = v126++ >= 9;
              if (v30)
              {
                v127 = 0;
                goto LABEL_236;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v127 = 0;
LABEL_236:
        v140 = v127 != 0;
        v141 = 132;
LABEL_237:
        *(_BYTE *)(a1 + v141) = v140;
        goto LABEL_262;
      case 22:
        if ((v8 & 1) == 0)
          goto LABEL_187;
        v132 = 0;
        v133 = 0;
        v44 = 0;
        *(_DWORD *)(a1 + 140) |= 0x40u;
        while (2)
        {
          v134 = *v20;
          v135 = *(_QWORD *)(v3 + v134);
          v136 = v135 + 1;
          if (v135 == -1 || v136 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v137 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v135);
            *(_QWORD *)(v3 + v134) = v136;
            v44 |= (unint64_t)(v137 & 0x7F) << v132;
            if (v137 < 0)
            {
              v132 += 7;
              v30 = v133++ >= 9;
              if (v30)
              {
                LODWORD(v44) = 0;
                goto LABEL_241;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v44) = 0;
LABEL_241:
        v139 = 128;
LABEL_242:
        *(_DWORD *)(a1 + v139) = v44;
        goto LABEL_262;
      case 23:
        if (!v34 || (*(_BYTE *)(a1 + 142) & 2) != 0)
        {
LABEL_187:
          v138 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v151;
          if ((v138 & 1) == 0)
          {
LABEL_279:
            v144 = 0;
            goto LABEL_280;
          }
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_287;
          v150 = objc_alloc_init(GEORideBookingIntentResponseFailure);
          if (!GEORideBookingIntentResponseFailureReadAllFrom((uint64_t)v150, (void *)v3))
          {
LABEL_286:

LABEL_287:
            v144 = 0;
            v18 = v151;
            v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_280:
            *(_DWORD *)(a1 + 140) |= 0x200000u;
            *(_DWORD *)(a1 + 140) |= 0x80000u;
            *(_DWORD *)(a1 + 140) |= 0x40000u;
            *(_DWORD *)(a1 + 140) |= 0x8000u;
            *(_DWORD *)(a1 + 140) |= 0x400000u;
            *(_DWORD *)(a1 + 140) |= 0x10000u;
            *(_DWORD *)(a1 + 140) |= 0x100000u;
            *(_DWORD *)(a1 + 140) |= 0x20000u;
            if ((v144 & 1) != 0)
              goto LABEL_281;
            v3 = 0;
            if ((v18 & 1) != 0)
              goto LABEL_282;
            return v3;
          }
          PBReaderRecallMark();
          -[GEOLogMsgEventRideBookingSession _addNoFlagsIntentResponseFailure:](a1, v150);
LABEL_185:
          v124 = v150;
LABEL_186:

LABEL_256:
          v18 = v151;
          v21 = (int *)MEMORY[0x1E0D82BC8];
        }
LABEL_262:
        if (!(v18 & 1 | (v7 != 0)))
          goto LABEL_263;
        break;
      default:
        v41 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v151;
        if (!v41)
          goto LABEL_279;
        goto LABEL_262;
    }
  }
LABEL_263:
  if ((v18 & 1) != 0)
  {
    v144 = 1;
    goto LABEL_280;
  }
  if (!v19)
    goto LABEL_281;
  while (2)
  {
    while (1)
    {
      v146 = *v19++;
      v145 = v146;
      if (v146 <= 18)
        break;
      switch(v145)
      {
        case 19:
          v147 = 0x10000;
          goto LABEL_278;
        case 20:
          v147 = 0x100000;
LABEL_278:
          *(_DWORD *)(a1 + 140) |= v147;
          break;
        case 23:
          v147 = 0x20000;
          goto LABEL_278;
      }
    }
    v147 = 0x200000;
    switch(v145)
    {
      case 0:
        break;
      case 1:
        goto LABEL_278;
      case 4:
        v147 = 0x80000;
        goto LABEL_278;
      case 5:
        v147 = 0x40000;
        goto LABEL_278;
      case 6:
        v147 = 0x8000;
        goto LABEL_278;
      case 8:
        v147 = 0x400000;
        goto LABEL_278;
      default:
        continue;
    }
    break;
  }
LABEL_281:
  v3 = *(_BYTE *)(v3 + *v21) == 0;
  if ((v18 & 1) != 0)
  {
LABEL_282:
    v148 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18980A6B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980A7FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980A940(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980AB0C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980B154(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980B488(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980B800(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980D14C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventRideBookingSessionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1[7], "readAll:", 1);
  objc_msgSend(a1[2], "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = a1[6];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOLogMsgEventRideBookingSessionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 108))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOLogMsgEventRideBookingSessionReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 108) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOLogMsgEventRideBookingSessionReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOLogMsgEventRideBookingSessionReadAllFrom_initialTag;
  Specified = GEOLogMsgEventRideBookingSessionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOLogMsgEventRideBookingSessionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18980D3FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventRideBookingSessionReadFrom(uint64_t a1, void *a2)
{
  id v3;
  unint64_t AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEOLogMsgEventRideBookingSessionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18980D45C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookingSessionIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  _BOOL8 v87;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14])
        v8 = 0;
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4)
        break;
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2)
            goto LABEL_151;
          goto LABEL_124;
        case 2u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v21 = 0;
          while (1)
          {
            v22 = *v2;
            v23 = *(_QWORD *)&a1[v22];
            v24 = v23 + 1;
            if (v23 == -1 || v24 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v25 = *(char *)(*(_QWORD *)&a1[*v5] + v23);
            *(_QWORD *)&a1[v22] = v24;
            if (v25 < 0)
            {
              v26 = v21++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 3u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v27 = 0;
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0)
            {
              v26 = v27++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 4u:
          if (v16 == 2)
            goto LABEL_124;
          goto LABEL_151;
        case 5u:
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
            goto LABEL_151;
          goto LABEL_147;
        case 7u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v32 = 0;
          while (1)
          {
            v33 = *v2;
            v34 = *(_QWORD *)&a1[v33];
            v35 = v34 + 1;
            if (v34 == -1 || v35 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
            *(_QWORD *)&a1[v33] = v35;
            if (v36 < 0)
            {
              v26 = v32++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 8u:
          if (v16 == 2)
            goto LABEL_124;
          goto LABEL_151;
        case 9u:
        case 0xEu:
          if (v16 != 1)
            goto LABEL_151;
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7)
            goto LABEL_143;
          v20 = v19 + 8;
          if (v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_143;
          *(_QWORD *)&a1[v18] = v20;
          continue;
        case 0xAu:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v37 = 0;
          while (1)
          {
            v38 = *v2;
            v39 = *(_QWORD *)&a1[v38];
            v40 = v39 + 1;
            if (v39 == -1 || v40 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v41 = *(char *)(*(_QWORD *)&a1[*v5] + v39);
            *(_QWORD *)&a1[v38] = v40;
            if (v41 < 0)
            {
              v26 = v37++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0xBu:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v42 = 0;
          while (1)
          {
            v43 = *v2;
            v44 = *(_QWORD *)&a1[v43];
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
            *(_QWORD *)&a1[v43] = v45;
            if (v46 < 0)
            {
              v26 = v42++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0xCu:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v47 = 0;
          while (1)
          {
            v48 = *v2;
            v49 = *(_QWORD *)&a1[v48];
            v50 = v49 + 1;
            if (v49 == -1 || v50 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v51 = *(char *)(*(_QWORD *)&a1[*v5] + v49);
            *(_QWORD *)&a1[v48] = v50;
            if (v51 < 0)
            {
              v26 = v47++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0xDu:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v52 = 0;
          while (1)
          {
            v53 = *v2;
            v54 = *(_QWORD *)&a1[v53];
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v56 = *(char *)(*(_QWORD *)&a1[*v5] + v54);
            *(_QWORD *)&a1[v53] = v55;
            if (v56 < 0)
            {
              v26 = v52++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0xFu:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v57 = 0;
          while (1)
          {
            v58 = *v2;
            v59 = *(_QWORD *)&a1[v58];
            v60 = v59 + 1;
            if (v59 == -1 || v60 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v61 = *(char *)(*(_QWORD *)&a1[*v5] + v59);
            *(_QWORD *)&a1[v58] = v60;
            if (v61 < 0)
            {
              v26 = v57++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0x10u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v62 = 0;
          while (1)
          {
            v63 = *v2;
            v64 = *(_QWORD *)&a1[v63];
            v65 = v64 + 1;
            if (v64 == -1 || v65 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v66 = *(char *)(*(_QWORD *)&a1[*v5] + v64);
            *(_QWORD *)&a1[v63] = v65;
            if (v66 < 0)
            {
              v26 = v62++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0x11u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v67 = 0;
          while (1)
          {
            v68 = *v2;
            v69 = *(_QWORD *)&a1[v68];
            v70 = v69 + 1;
            if (v69 == -1 || v70 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v71 = *(char *)(*(_QWORD *)&a1[*v5] + v69);
            *(_QWORD *)&a1[v68] = v70;
            if (v71 < 0)
            {
              v26 = v67++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0x12u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v72 = 0;
          while (1)
          {
            v73 = *v2;
            v74 = *(_QWORD *)&a1[v73];
            v75 = v74 + 1;
            if (v74 == -1 || v75 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v76 = *(char *)(*(_QWORD *)&a1[*v5] + v74);
            *(_QWORD *)&a1[v73] = v75;
            if (v76 < 0)
            {
              v26 = v72++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0x13u:
          if (v16 == 2)
            goto LABEL_124;
          goto LABEL_151;
        case 0x14u:
          if (v16 == 2)
            goto LABEL_124;
          goto LABEL_151;
        case 0x15u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v77 = 0;
          while (1)
          {
            v78 = *v2;
            v79 = *(_QWORD *)&a1[v78];
            v80 = v79 + 1;
            if (v79 == -1 || v80 > *(_QWORD *)&a1[*v3])
              goto LABEL_142;
            v81 = *(char *)(*(_QWORD *)&a1[*v5] + v79);
            *(_QWORD *)&a1[v78] = v80;
            if (v81 < 0)
            {
              v26 = v77++ > 8;
              if (!v26)
                continue;
            }
            goto LABEL_148;
          }
        case 0x16u:
          if ((v8 & 7) != 0)
            goto LABEL_151;
          v82 = 0;
          break;
        case 0x17u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORideBookingIntentResponseFailureIsValid(a1))
            goto LABEL_151;
LABEL_147:
          PBReaderRecallMark();
          continue;
        default:
LABEL_124:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
LABEL_151:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        v83 = *v2;
        v84 = *(_QWORD *)&a1[v83];
        v85 = v84 + 1;
        if (v84 == -1 || v85 > *(_QWORD *)&a1[*v3])
          break;
        v86 = *(char *)(*(_QWORD *)&a1[*v5] + v84);
        *(_QWORD *)&a1[v83] = v85;
        if (v86 < 0)
        {
          v26 = v82++ > 8;
          if (!v26)
            continue;
        }
        goto LABEL_148;
      }
LABEL_142:
      v14 = *v4;
LABEL_143:
      a1[v14] = 1;
LABEL_148:
      ;
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v87 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v87;
}

void sub_18980E08C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRideBookingSessionIsDirty(os_unfair_lock_s *a1)
{
  _BOOL8 v2;

  if (!a1)
    return 0;
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 28);
  v2 = (a1[35]._os_unfair_lock_opaque & 0xFF8000) != 0;
  os_unfair_lock_unlock(a1 + 28);
  return v2;
}

void sub_18980EB80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORideBookingIntentResponseFailureReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _BOOL8 v33;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          v27 = 0;
          v28 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 1u;
          while (1)
          {
            v29 = *v4;
            v30 = *(_QWORD *)&v3[v29];
            v31 = v30 + 1;
            if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
              break;
            v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
            *(_QWORD *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__failure;
              goto LABEL_40;
            }
            v27 += 7;
            v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__failure;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__failure;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
              goto LABEL_48;
            continue;
          }
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 16) |= 2u;
          while (1)
          {
            v21 = *v4;
            v22 = *(_QWORD *)&v3[v21];
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__intent;
              goto LABEL_39;
            }
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v22);
            *(_QWORD *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              break;
            v18 += 7;
            v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__intent;
              goto LABEL_42;
            }
          }
          v26 = &OBJC_IVAR___GEORideBookingIntentResponseFailure__intent;
        }
LABEL_40:
        if (v3[*v6])
          LODWORD(v20) = 0;
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_1898106CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORideBookingIntentResponseFailureReadFrom(uint64_t a1, void *a2)
{
  id v3;
  _BOOL8 AllFrom;

  v3 = a2;
  objc_sync_enter(v3);
  AllFrom = GEORideBookingIntentResponseFailureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18981072C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189810B40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189810BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_189810CB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189810D28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189810D80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189810E84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189810F6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_189811038(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18981110C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1898111E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1898112B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18981138C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189811468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_189811538(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1898115EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1898116C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1898117C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1898118CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1898119D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_189811A84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189811B58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_189811C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_189811D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_189811E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_189811FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_1898120A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_18981217C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18981225C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189812304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1898123AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_189812454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1898125CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void sub_18981283C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1898128D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_189812A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_189812B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_189812BE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189812D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_189812E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_189812EF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18981303C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<std::vector<zilch::GeoCoordinates> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_189813098(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18981312C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1898131D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GEOFetchTransitCoverageForMapRect(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  GEOTileKeyList *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  id v40;
  unint64_t v41;
  BOOL v42;
  signed int v43;
  char v44;
  uint64_t v45;
  unsigned int v46;
  unint64_t v47;
  __int128 v48;
  signed int v49;
  int v50;
  signed int obj;
  GEOTileKeyList *obja;
  unint64_t v53;
  void *v54;
  NSObject *queue;
  id v57;
  GEOTileKeyList *v58;
  _QWORD v59[4];
  id v60;
  id v61;
  id v62;
  unint64_t *v63;
  __int128 *v64;
  _QWORD *v65;
  double v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _QWORD v71[4];
  _QWORD block[4];
  GEOTileKeyList *v73;
  _QWORD v74[4];
  GEOTileKeyList *v75;
  _BYTE v76[128];
  unint64_t v77;
  unint64_t *v78;
  uint64_t v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  queue = a1;
  v57 = a2;
  if (!queue)
  {
    queue = MEMORY[0x1E0C80D38];
    v10 = MEMORY[0x1E0C80D38];
  }
  +[GEOResourceManifestManager modernManager](GEOResourceManifestManager, "modernManager");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "activeTileGroup");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "activeTileSetForTileType:scale:", 48, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    v14 = objc_msgSend(v13, "minimumZoomLevelInRect:", a3, a4, a5, a6);
    v15 = (double)(1 << v14) * 0.0000000037252903;
    LODWORD(v16) = vcvtmd_s64_f64(a3 * v15);
    v49 = vcvtmd_s64_f64((a4 + a6) * v15);
    v50 = vcvtmd_s64_f64((a3 + a5) * v15);
    v53 = v16;
    obj = vcvtmd_s64_f64(a4 * v15);
    v17 = (v50 - (uint64_t)(int)v16) * (v49 - (uint64_t)obj);
    if (v57 && v17 >= 0xC9)
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __GEOFetchTransitCoverageForMapRect_block_invoke_2;
      block[3] = &unk_1E1C05D48;
      v73 = (GEOTileKeyList *)v57;
      dispatch_async(queue, block);
      v18 = v73;
    }
    else
    {
      v19 = v13;
      v58 = -[GEOTileKeyList initWithCapacity:]([GEOTileKeyList alloc], "initWithCapacity:", v17);
      if ((int)v53 <= v50)
      {
        v41 = (unint64_t)(v14 & 0x3F) << 40;
        do
        {
          if (obj <= v49)
          {
            v43 = obj;
            do
            {
              v77 = 0;
              v78 = 0;
              v44 = objc_msgSend(v13, "size");
              v45 = objc_msgSend(v13, "scale");
              v46 = objc_msgSend(v13, "style");
              *(_QWORD *)((char *)&v81 + 1) = (v53 << 46) | v41;
              LOBYTE(v81) = 2;
              if (v46 <= 0x19 && ((1 << v46) & 0x200101C) != 0)
                v47 = 128;
              else
                v47 = (unint64_t)(v46 == 26) << 7;
              *((_QWORD *)&v48 + 1) = (v53 >> 18) | ((unint64_t)(v43 & 0x3FFFFFF) << 8) | ((unint64_t)(v46 & 0x3FFF) << 34) | ((unint64_t)(v44 & 0xF) << 48) | (v45 << 52);
              *(_QWORD *)&v48 = v53 << 46;
              v77 = v47 | v81 & 0xFFFFFFFFFFFFFF7FLL;
              v78 = (unint64_t *)(v48 >> 56);
              -[GEOTileKeyList addKey:](v58, "addKey:", &v77);
              ++v43;
            }
            while (v49 + 1 != v43);
          }
          v42 = (_DWORD)v53 == v50;
          v53 = (v53 + 1);
        }
        while (!v42);
      }
      v20 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "UUIDString");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "stringWithFormat:", CFSTR("<%s:%@>"), "GEOFetchTransitCoverageForMapRect", v22);
      v54 = (void *)objc_claimAutoreleasedReturnValue();

      +[GEOTileLoader modernLoader](GEOTileLoader, "modernLoader");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "openForClient:", v54);

      *(_QWORD *)&v81 = 0;
      *((_QWORD *)&v81 + 1) = &v81;
      v82 = 0x2020000000;
      v83 = -1;
      v77 = 0;
      v78 = &v77;
      v79 = 0x2020000000;
      v80 = 0;
      v71[0] = 0;
      v71[1] = v71;
      v71[2] = 0x2020000000;
      v71[3] = 0;
      v24 = (void *)-[GEOTileKeyList copy](v58, "copy");
      v69 = 0u;
      v70 = 0u;
      v67 = 0u;
      v68 = 0u;
      obja = v58;
      v25 = -[GEOTileKeyList countByEnumeratingWithState:objects:count:](obja, "countByEnumeratingWithState:objects:count:", &v67, v76, 16);
      if (v25)
      {
        v26 = *(_QWORD *)v68;
        do
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v68 != v26)
              objc_enumerationMutation(obja);
            v28 = *(_QWORD *)(*((_QWORD *)&v67 + 1) + 8 * i);
            v29 = GEOMapRectForGEOTileKey(v28);
            v31 = v30;
            v33 = v32;
            v35 = v34;
            +[GEOTileLoader modernLoader](GEOTileLoader, "modernLoader");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            GEOMapRectIntersection(a3, a4, a5, a6, v29, v31, v33, v35);
            v59[0] = MEMORY[0x1E0C809B0];
            v59[1] = 3221225472;
            v39 = v37 / a5 * (v38 / a6);
            v59[2] = __GEOFetchTransitCoverageForMapRect_block_invoke_3;
            v59[3] = &unk_1E1C21C08;
            v60 = v24;
            v40 = v54;
            v61 = v40;
            v63 = &v77;
            v62 = v57;
            v64 = &v81;
            v65 = v71;
            v66 = v39;
            objc_msgSend(v36, "loadKey:priority:forClient:options:reason:callbackQ:beginNetwork:callback:", v28, 2147483646, v40, 3, 4, queue, 0, v59);

            v13 = v19;
          }
          v25 = -[GEOTileKeyList countByEnumeratingWithState:objects:count:](obja, "countByEnumeratingWithState:objects:count:", &v67, v76, 16);
        }
        while (v25);
      }

      _Block_object_dispose(v71, 8);
      _Block_object_dispose(&v77, 8);
      _Block_object_dispose(&v81, 8);

      v18 = obja;
    }
    goto LABEL_18;
  }
  if (v57)
  {
    v74[0] = MEMORY[0x1E0C809B0];
    v74[1] = 3221225472;
    v74[2] = __GEOFetchTransitCoverageForMapRect_block_invoke;
    v74[3] = &unk_1E1C05D48;
    v75 = (GEOTileKeyList *)v57;
    dispatch_async(queue, v74);
    v18 = v75;
LABEL_18:

  }
}

void sub_1898138C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;

  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v42 - 224), 8);
  _Block_object_dispose((const void *)(v42 - 192), 8);

  _Unwind_Resume(a1);
}

void sub_189813A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_189813BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void GEOFetchTransitCoverageForCoordinate(void *a1, void *a2, double a3, double a4)
{
  NSObject *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  char v16;
  char v17;
  uint64_t v18;
  unsigned int v19;
  double v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  _QWORD v30[4];
  id v31;
  id v32;
  _QWORD block[4];
  id v34;
  _QWORD v35[2];
  _QWORD v36[3];

  v36[2] = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  if (!v7)
  {
    v7 = MEMORY[0x1E0C80D38];
    v9 = MEMORY[0x1E0C80D38];
  }
  +[GEOResourceManifestManager modernManager](GEOResourceManifestManager, "modernManager");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "activeTileGroup");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "activeTileSetForTileType:scale:", 48, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    v13 = GEOTilePointForCoordinate(a3, a4, 20.0);
    v15 = v14;
    v16 = objc_msgSend(v12, "maximumZoomLevelForMapPoint:");
    v17 = objc_msgSend(v12, "size");
    v18 = objc_msgSend(v12, "scale");
    v19 = objc_msgSend(v12, "style");
    v20 = (double)(1 << v16) * 0.0000000037252903;
    v21 = vcvtmd_s64_f64(v13 * v20) | 0x3E30000000000000;
    *(_QWORD *)((char *)v36 + 1) = (v21 << 46) | ((unint64_t)(v16 & 0x3F) << 40);
    LOBYTE(v36[0]) = 2;
    *((_QWORD *)&v23 + 1) = ((unint64_t)(vcvtmd_s64_f64(v15 * v20) & 0x3FFFFFF) << 8) | (v21 >> 18) | ((unint64_t)(v19 & 0x3FFF) << 34) | ((unint64_t)(v17 & 0xF) << 48) | (v18 << 52);
    *(_QWORD *)&v23 = v21 << 46;
    v22 = v23 >> 56;
    if (v19 <= 0x19 && ((1 << v19) & 0x200101C) != 0)
      v24 = 128;
    else
      v24 = (unint64_t)(v19 == 26) << 7;
    v35[0] = v24 | v36[0] & 0xFFFFFFFFFFFFFF7FLL;
    v35[1] = v22;
    objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "UUIDString");
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    +[GEOTileLoader modernLoader](GEOTileLoader, "modernLoader");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "openForClient:", v26);

    +[GEOTileLoader modernLoader](GEOTileLoader, "modernLoader");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v30[0] = MEMORY[0x1E0C809B0];
    v30[1] = 3221225472;
    v30[2] = __GEOFetchTransitCoverageForCoordinate_block_invoke_2;
    v30[3] = &unk_1E1C21C30;
    v29 = v26;
    v31 = v29;
    v32 = v8;
    objc_msgSend(v28, "loadKey:priority:forClient:options:reason:callbackQ:beginNetwork:callback:", v35, 2147483646, v29, 3, 4, v7, 0, v30);

  }
  else if (v8)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __GEOFetchTransitCoverageForCoordinate_block_invoke;
    block[3] = &unk_1E1C05D48;
    v34 = v8;
    dispatch_async(v7, block);

  }
}

void sub_189813F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_18981409C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void GEOFetchHybridCoverageForMapRect(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v3 = a1;
  v4 = a2;
  if (!v3)
  {
    v3 = (id)MEMORY[0x1E0C80D38];
    v5 = MEMORY[0x1E0C80D38];
  }
  v8 = v3;
  v9 = v4;
  v6 = v3;
  v7 = v4;
  geo_dispatch_async_qos();

}

void sub_1898141BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1898144EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_189814574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoConstraintsReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  _BOOL8 v43;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)&v3[*v5])
            break;
          v14 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v16 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v16 || (v10 & 7) == 4)
          break;
        switch((v10 >> 3))
        {
          case 1u:
            PBReaderReadString();
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            if (v18)
              -[GEOPDPhotoConstraints addMediaTypes:](a1, v18);

            continue;
          case 2u:
            v19 = 0;
            v20 = 0;
            v21 = 0;
            *(_BYTE *)(a1 + 40) |= 8u;
            while (2)
            {
              v22 = *v4;
              v23 = *(_QWORD *)&v3[v22];
              v24 = v23 + 1;
              if (v23 == -1 || v24 > *(_QWORD *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                v25 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
                *(_QWORD *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  v15 = v20++ >= 9;
                  if (v15)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_52;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6])
              LODWORD(v21) = 0;
LABEL_52:
            *(_DWORD *)(a1 + 36) = v21;
            continue;
          case 3u:
            v26 = 0;
            v27 = 0;
            v28 = 0;
            *(_BYTE *)(a1 + 40) |= 1u;
            while (1)
            {
              v29 = *v4;
              v30 = *(_QWORD *)&v3[v29];
              v31 = v30 + 1;
              if (v30 == -1 || v31 > *(_QWORD *)&v3[*v5])
                break;
              v32 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v30);
              *(_QWORD *)&v3[v29] = v31;
              v28 |= (unint64_t)(v32 & 0x7F) << v26;
              if ((v32 & 0x80) == 0)
                goto LABEL_54;
              v26 += 7;
              v15 = v27++ >= 9;
              if (v15)
              {
                v28 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6])
              v28 = 0;
LABEL_56:
            v42 = 8;
            goto LABEL_61;
          case 4u:
            v33 = 0;
            v34 = 0;
            v28 = 0;
            *(_BYTE *)(a1 + 40) |= 2u;
            break;
          case 5u:
            *(_BYTE *)(a1 + 40) |= 4u;
            v39 = *v4;
            v40 = *(_QWORD *)&v3[v39];
            if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(_QWORD *)&v3[*v5])
            {
              v41 = *(_DWORD *)(*(_QWORD *)&v3[*v7] + v40);
              *(_QWORD *)&v3[v39] = v40 + 4;
            }
            else
            {
              v3[*v6] = 1;
              v41 = 0;
            }
            *(_DWORD *)(a1 + 32) = v41;
            continue;
          default:
            if (!PBReaderSkipValueWithTag())
              goto LABEL_66;
            continue;
        }
        while (1)
        {
          v35 = *v4;
          v36 = *(_QWORD *)&v3[v35];
          v37 = v36 + 1;
          if (v36 == -1 || v37 > *(_QWORD *)&v3[*v5])
            break;
          v38 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v36);
          *(_QWORD *)&v3[v35] = v37;
          v28 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0)
            goto LABEL_58;
          v33 += 7;
          v15 = v34++ >= 9;
          if (v15)
          {
            v28 = 0;
            goto LABEL_60;
          }
        }
        v3[*v6] = 1;
LABEL_58:
        if (v3[*v6])
          v28 = 0;
LABEL_60:
        v42 = 24;
LABEL_61:
        *(_QWORD *)(a1 + v42) = v28;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_66:
    v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_18981512C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  char *v5;
  int *v6;
  int *v7;
  int *v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v18;
  GEOPDPlaceQuestionnairePlaceInfo *v20;
  _BOOL8 v21;

  v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    v6 = (int *)MEMORY[0x1E0D82BF0];
    v7 = (int *)MEMORY[0x1E0D82BD8];
    v8 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v5[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v5[*MEMORY[0x1E0D82BD8]])
    {
      v9 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v5[*v8])
          break;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v6;
          v14 = *(_QWORD *)&v5[v13];
          v15 = v14 + 1;
          if (v14 == -1 || v15 > *(_QWORD *)&v5[*v7])
            break;
          v16 = *(_BYTE *)(*(_QWORD *)&v5[*v9] + v14);
          *(_QWORD *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0)
            goto LABEL_13;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        v18 = v5[*v8];
        if (v5[*v8])
          v12 = 0;
LABEL_15:
        if (v18 || (v12 & 7) == 4)
          break;
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v20 = objc_alloc_init(GEOPDPlaceQuestionnairePlaceInfo);
          if (!GEOPDPlaceQuestionnairePlaceInfoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceQuestionnaireLookupParameters addPlaceInfo:](a1, v20);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v5[*v6] < *(_QWORD *)&v5[*v7]);
    }
    v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_189816060(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireLookupParametersIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  char v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  int v25;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v33;
  _BOOL8 v34;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
    v5 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (a1[*v4])
        break;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(_QWORD *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
          break;
        v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
        *(_QWORD *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0)
          goto LABEL_12;
        v6 += 7;
        v13 = v7++ >= 9;
        if (v13)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4])
        v8 = 0;
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4)
        break;
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_64;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_22:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v2;
            v21 = *(_QWORD *)&a1[v20];
            v22 = v21 + 1;
            if (v21 == -1 || v22 > *(_QWORD *)&a1[*v3])
              break;
            v23 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v21);
            *(_QWORD *)&a1[v20] = v22;
            v19 |= (unint64_t)(v23 & 0x7F) << v17;
            if ((v23 & 0x80) == 0)
              goto LABEL_32;
            v17 += 7;
            v13 = v18++ >= 9;
            if (v13)
            {
              v19 = 0;
              v24 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          v24 = a1[*v4];
          if (a1[*v4])
            v19 = 0;
LABEL_34:
          v25 = v19 & 7;
          if (v24 || v25 == 4)
            break;
          switch((v19 >> 3))
          {
            case 1u:
              if (v25 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
                goto LABEL_63;
              PBReaderRecallMark();
              continue;
            case 2u:
              if (v25 == 2)
                goto LABEL_46;
              goto LABEL_63;
            case 3u:
              if (v25 == 2)
                goto LABEL_46;
              goto LABEL_63;
            case 4u:
              if ((v19 & 7) != 0)
                goto LABEL_63;
              v27 = 0;
              break;
            default:
LABEL_46:
              if ((PBReaderSkipValueWithTag() & 1) != 0)
                continue;
LABEL_63:
              PBReaderRecallMark();
              goto LABEL_64;
          }
          while (1)
          {
            v28 = *v2;
            v29 = *(_QWORD *)&a1[v28];
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)&a1[*v3])
              break;
            v31 = *(char *)(*(_QWORD *)&a1[*v5] + v29);
            *(_QWORD *)&a1[v28] = v30;
            if (v31 < 0 && v27++ <= 8)
              continue;
            goto LABEL_22;
          }
          a1[*v4] = 1;
        }
        v33 = a1[*v4];
        PBReaderRecallMark();
        if (v33)
        {
LABEL_64:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_64;
      }
    }
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
  }
  v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

void sub_189816A90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceQuestionnairePlaceInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  int *v20;
  char v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  int v29;
  unint64_t v31;
  BOOL v32;
  int *v33;
  int v34;
  int v35;
  BOOL v36;
  GEOPDMapsIdentifier *v37;
  void *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  void *v55;
  char v57;
  char v58;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 44);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 40));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v8])
    {
      case -3:
        v7 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v7) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v58 = (v16 == 0) | v15;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v20 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v8;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v18))
      goto LABEL_74;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    while (1)
    {
      v24 = *v17;
      v25 = *(_QWORD *)(v3 + v24);
      v26 = v25 + 1;
      if (v25 == -1 || v26 > *(_QWORD *)(v3 + *v6))
        break;
      v27 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v25);
      *(_QWORD *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0)
        goto LABEL_23;
      v21 += 7;
      v28 = v22++ >= 9;
      if (v28)
      {
        v23 = 0;
        v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v23 = 0;
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_74:
      if ((v15 & 1) != 0)
      {
        v52 = 1;
        goto LABEL_85;
      }
      if (v16)
      {
        while (1)
        {
          v53 = *v16++;
          v54 = 8;
          switch(v53)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              v54 = 4;
              goto LABEL_80;
            case 3:
              v54 = 2;
LABEL_80:
              *(_BYTE *)(a1 + v20[285]) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    v31 = v23 >> 3;
    v32 = v15;
    if ((v58 & 1) == 0)
    {
      v33 = v16;
      do
      {
        v35 = *v33++;
        v34 = v35;
        v32 = v35 != 0;
        if (v35)
          v36 = v34 == (_DWORD)v31;
        else
          v36 = 1;
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + v20[285]) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_82;
          v37 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            v38 = *(void **)(a1 + 32);
            *(_QWORD *)(a1 + 32) = v37;

            --v8;
            v20 = &OBJC_IVAR___GEOTextItemContainer__textItems;
            goto LABEL_72;
          }

          v52 = 0;
          v20 = &OBJC_IVAR___GEOTextItemContainer__textItems;
          goto LABEL_84;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v51 = 16 * *(_BYTE *)(a1 + v20[285]);
        goto LABEL_71;
      case 2:
        if (!v32)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + v20[285]) & 4) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 24;
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_82;
        v51 = 32 * *(_BYTE *)(a1 + v20[285]);
        goto LABEL_71;
      case 3:
        if (!v32)
          goto LABEL_59;
        if ((*(_BYTE *)(a1 + v20[285]) & 2) == 0)
        {
          PBReaderReadString();
          v40 = objc_claimAutoreleasedReturnValue();
          v41 = 16;
LABEL_50:
          v42 = *(void **)(a1 + v41);
          *(_QWORD *)(a1 + v41) = v40;

          --v8;
LABEL_72:
          v15 = v57;
          v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_73:
          if (!(v15 & 1 | (v8 != 0)))
            goto LABEL_74;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v51 = *(_BYTE *)(a1 + v20[285]) << 6;
LABEL_71:
          v8 += v51 >> 7;
          goto LABEL_72;
        }
LABEL_82:
        v52 = 0;
LABEL_84:
        v15 = v57;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_85:
        *(_BYTE *)(a1 + v20[285]) |= 8u;
        *(_BYTE *)(a1 + v20[285]) |= 4u;
        *(_BYTE *)(a1 + v20[285]) |= 2u;
        if ((v52 & 1) != 0)
        {
LABEL_86:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_87;
        }
        else
        {
          v3 = 0;
          if ((v15 & 1) != 0)
          {
LABEL_87:
            v55 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 4:
        if ((v7 & 1) != 0)
        {
          v43 = 0;
          v44 = 0;
          v45 = 0;
          *(_BYTE *)(a1 + v20[285]) |= 1u;
          while (1)
          {
            v46 = *v17;
            v47 = *(_QWORD *)(v3 + v46);
            v48 = v47 + 1;
            if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v6))
              break;
            v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v47);
            *(_QWORD *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if ((v49 & 0x80) == 0)
              goto LABEL_62;
            v43 += 7;
            v28 = v44++ >= 9;
            if (v28)
            {
              v45 = 0;
              goto LABEL_64;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_62:
          if (*(_BYTE *)(v3 + *v18))
            v45 = 0;
LABEL_64:
          *(_BYTE *)(a1 + 52) = v45 != 0;
        }
        else
        {
LABEL_59:
          v50 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v57;
          if ((v50 & 1) == 0)
          {
LABEL_81:
            v52 = 0;
            goto LABEL_85;
          }
        }
        goto LABEL_73;
      default:
        v39 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v57;
        if (!v39)
          goto LABEL_81;
        goto LABEL_73;
    }
  }
}

void sub_189817368(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189817450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceQuestionnairePlaceInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 44))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceQuestionnairePlaceInfoReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 44) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceQuestionnairePlaceInfoReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceQuestionnairePlaceInfoReadAllFrom_initialTag;
  Specified = GEOPDPlaceQuestionnairePlaceInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    objc_msgSend(*(id *)(a1 + 32), "readAll:", 1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898175F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898177A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981795C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189817CE8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceQuestionnaireResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  const __int16 *v11;
  uint16x4_t v12;
  int16x4_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  int *v19;
  int *v20;
  int *v21;
  int *v22;
  int *v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  BOOL v31;
  int v32;
  unint64_t v34;
  BOOL v35;
  int *v36;
  int v37;
  int v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  int v47;
  GEOPDScorecardLayout *v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  void *v78;
  char v79;
  BOOL v80;
  uint64_t v81;
  __int16 v82;
  char v83;
  int v84;
  __int16 v85;
  void *v86;
  char v88;
  char v89;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (const __int16 *)(a1 + 68);
  v12 = (uint16x4_t)vld1_dup_s16(v11);
  v13 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFF9FFFBFFF8FFFALL), (int8x8_t)0x1000100010001);
  v13.i16[0] = vaddv_s16(v13);
  v14 = v13.i32[0];
  while (2)
  {
    v15 = 1;
    v16 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v17 = v14 > 2;
        v18 = v10 | v17;
        if ((((v10 | v17) | v8) & 1) != 0)
          v19 = 0;
        else
          v19 = a3;
        v89 = (v19 == 0) | v18;
        v20 = (int *)MEMORY[0x1E0D82BF0];
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v22 = (int *)MEMORY[0x1E0D82BB8];
        v23 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        v88 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        v15 = v9;
        v16 = v10;
LABEL_8:
        ++v7;
        v9 = v15;
        v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v20) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v21))
      goto LABEL_133;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *v20;
      v28 = *(_QWORD *)(v3 + v27);
      v29 = v28 + 1;
      if (v28 == -1 || v29 > *(_QWORD *)(v3 + *v6))
        break;
      v30 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v28);
      *(_QWORD *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0)
        goto LABEL_23;
      v24 += 7;
      v31 = v25++ >= 9;
      if (v31)
      {
        v26 = 0;
        v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v21) = 1;
LABEL_23:
    v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(_BYTE *)(v3 + *v21))
      v26 = 0;
LABEL_25:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_133:
      if ((v18 & 1) != 0)
      {
        v83 = 1;
        goto LABEL_145;
      }
      if (v19)
      {
        while (1)
        {
          v84 = *v19++;
          v85 = 256;
          switch(v84)
          {
            case 0:
              goto LABEL_146;
            case 2:
              goto LABEL_140;
            case 3:
              v85 = 64;
              goto LABEL_140;
            case 5:
              v85 = 32;
              goto LABEL_140;
            case 9:
              v85 = 128;
LABEL_140:
              *(_WORD *)(a1 + v23[289]) |= v85;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_146;
    }
    v34 = v26 >> 3;
    v35 = v18;
    if ((v89 & 1) == 0)
    {
      v36 = v19;
      do
      {
        v38 = *v36++;
        v37 = v38;
        v35 = v38 != 0;
        if (v38)
          v39 = v37 == (_DWORD)v34;
        else
          v39 = 1;
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0)
          goto LABEL_101;
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + v23[289]) |= 1u;
        while (1)
        {
          v43 = *v20;
          v44 = *(_QWORD *)(v3 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(v3 + *v6))
            break;
          v46 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v44);
          *(_QWORD *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0)
            goto LABEL_104;
          v40 += 7;
          v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_106;
          }
        }
        *(_BYTE *)(v3 + *v21) = 1;
LABEL_104:
        if (*(_BYTE *)(v3 + *v21))
          LODWORD(v42) = 0;
LABEL_106:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_132;
      case 2:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + v23[289]) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_142;
          v82 = *(_WORD *)(a1 + v23[289]) << 7;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v48 = objc_alloc_init(GEOPDScorecardLayout);
        if (!GEOPDScorecardLayoutReadAllFrom((uint64_t)v48, (void *)v3, v9 & 1))
          goto LABEL_143;
        PBReaderRecallMark();
        v49 = 40;
        goto LABEL_99;
      case 3:
        if (!v35)
          goto LABEL_101;
        if ((*(_WORD *)(a1 + v23[289]) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_142;
          v82 = *(_WORD *)(a1 + v23[289]) << 9;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v48 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_143;
        PBReaderRecallMark();
        v49 = 24;
        goto LABEL_99;
      case 4:
        if ((v8 & 1) == 0)
          goto LABEL_101;
        v50 = 0;
        v51 = 0;
        v52 = 0;
        *(_WORD *)(a1 + v23[289]) |= 8u;
        while (2)
        {
          v53 = *v20;
          v54 = *(_QWORD *)(v3 + v53);
          v55 = v54 + 1;
          if (v54 == -1 || v55 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v56 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v54);
            *(_QWORD *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              v31 = v51++ >= 9;
              if (v31)
              {
                v52 = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v52 = 0;
LABEL_110:
        v80 = v52 != 0;
        v81 = 66;
        goto LABEL_123;
      case 5:
        if (!v35 || (*(_WORD *)(a1 + v23[289]) & 0x20) != 0)
          goto LABEL_101;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v48 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v48, (void *)v3))
          goto LABEL_143;
        PBReaderRecallMark();
        -[GEOPDPlaceQuestionnaireResult _addNoFlagsHistoricalMapsId:](a1, v48);

        goto LABEL_100;
      case 6:
        if ((v8 & 1) == 0)
          goto LABEL_101;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        *(_WORD *)(a1 + v23[289]) |= 0x10u;
        while (2)
        {
          v60 = *v20;
          v61 = *(_QWORD *)(v3 + v60);
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v63 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v61);
            *(_QWORD *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              v31 = v58++ >= 9;
              if (v31)
              {
                v59 = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v59 = 0;
LABEL_114:
        v80 = v59 != 0;
        v81 = 67;
        goto LABEL_123;
      case 7:
        if ((v8 & 1) == 0)
          goto LABEL_101;
        v64 = 0;
        v65 = 0;
        v66 = 0;
        *(_WORD *)(a1 + v23[289]) |= 2u;
        while (2)
        {
          v67 = *v20;
          v68 = *(_QWORD *)(v3 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v70 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v68);
            *(_QWORD *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              v31 = v65++ >= 9;
              if (v31)
              {
                v66 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v66 = 0;
LABEL_118:
        v80 = v66 != 0;
        v81 = 64;
        goto LABEL_123;
      case 8:
        if ((v8 & 1) == 0)
          goto LABEL_101;
        v71 = 0;
        v72 = 0;
        v73 = 0;
        *(_WORD *)(a1 + v23[289]) |= 4u;
        while (2)
        {
          v74 = *v20;
          v75 = *(_QWORD *)(v3 + v74);
          v76 = v75 + 1;
          if (v75 == -1 || v76 > *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v21) = 1;
          }
          else
          {
            v77 = *(_BYTE *)(*(_QWORD *)(v3 + *v22) + v75);
            *(_QWORD *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              v31 = v72++ >= 9;
              if (v31)
              {
                v73 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v21))
          v73 = 0;
LABEL_122:
        v80 = v73 != 0;
        v81 = 65;
LABEL_123:
        *(_BYTE *)(a1 + v81) = v80;
        goto LABEL_132;
      case 9:
        if (!v35)
        {
LABEL_101:
          v79 = PBReaderSkipValueWithTag();
          v21 = (int *)MEMORY[0x1E0D82BC8];
          v18 = v88;
          if ((v79 & 1) == 0)
          {
LABEL_141:
            v83 = 0;
            goto LABEL_145;
          }
LABEL_132:
          if (!(v18 & 1 | (v7 != 0)))
            goto LABEL_133;
          continue;
        }
        if ((*(_WORD *)(a1 + v23[289]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_142:
            v83 = 0;
            goto LABEL_144;
          }
          v82 = *(_WORD *)(a1 + v23[289]) << 8;
LABEL_130:
          v7 += v82 >> 15;
          goto LABEL_131;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_142;
        v48 = objc_alloc_init(GEOPDPhotoConstraints);
        if (GEOPDPhotoConstraintsReadAllFrom((uint64_t)v48, (void *)v3))
        {
          PBReaderRecallMark();
          v49 = 32;
LABEL_99:
          v78 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          --v7;
LABEL_100:
          v23 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_131:
          v18 = v88;
          v21 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_132;
        }
LABEL_143:

        v83 = 0;
        v23 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_144:
        v18 = v88;
        v21 = (int *)MEMORY[0x1E0D82BC8];
LABEL_145:
        *(_WORD *)(a1 + v23[289]) |= 0x100u;
        *(_WORD *)(a1 + v23[289]) |= 0x40u;
        *(_WORD *)(a1 + v23[289]) |= 0x20u;
        *(_WORD *)(a1 + v23[289]) |= 0x80u;
        if ((v83 & 1) != 0)
        {
LABEL_146:
          v3 = *(_BYTE *)(v3 + *v21) == 0;
          if ((v18 & 1) != 0)
            goto LABEL_147;
        }
        else
        {
          v3 = 0;
          if ((v18 & 1) != 0)
          {
LABEL_147:
            v86 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      default:
        v47 = PBReaderSkipValueWithTag();
        v21 = (int *)MEMORY[0x1E0D82BC8];
        v18 = v88;
        if (!v47)
          goto LABEL_141;
        goto LABEL_132;
    }
  }
}

void sub_1898187BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898188DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189818B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189819290(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceQuestionnaireResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  -[GEOPDScorecardLayout readAll:](*(_QWORD *)(a1 + 40), 1);
  objc_msgSend(*(id *)(a1 + 24), "readAll:", 1);
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v2 = *(id *)(a1 + 16);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6++), "readAll:", 1, (_QWORD)v7);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

unint64_t GEOPDPlaceQuestionnaireResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDPlaceQuestionnaireResultReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 52) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDPlaceQuestionnaireResultReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDPlaceQuestionnaireResultReadAllFrom_initialTag;
  Specified = GEOPDPlaceQuestionnaireResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDPlaceQuestionnaireResultCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18981A25C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceQuestionnaireResultIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  BOOL v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  int v31;
  char v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  int v41;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  char v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  int v72;
  int v73;
  BOOL v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  int v94;
  _BOOL8 v95;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
  {
LABEL_182:
    v95 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v95;
  }
  v5 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (a1[*v4])
      goto LABEL_182;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      v11 = v10 + 1;
      if (v10 == -1 || v11 > *(_QWORD *)&a1[*v3])
        break;
      v12 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v13 = v7++ >= 9;
      if (v13)
      {
        v8 = 0;
        v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v14 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v15 = v8 & 7;
    if (v14 || v15 == 4)
      goto LABEL_182;
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v17 = 0;
        while (1)
        {
          v18 = *v2;
          v19 = *(_QWORD *)&a1[v18];
          v20 = v19 + 1;
          if (v19 == -1 || v20 > *(_QWORD *)&a1[*v3])
            goto LABEL_121;
          v21 = *(char *)(*(_QWORD *)&a1[*v5] + v19);
          *(_QWORD *)&a1[v18] = v20;
          if (v21 < 0)
          {
            v22 = v17++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_181;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_185;
        objc_msgSend(a1, "position", 0, 0);
        objc_msgSend(a1, "length");
LABEL_36:
        if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3] || a1[*v4])
          goto LABEL_179;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        while (1)
        {
          v26 = *v2;
          v27 = *(_QWORD *)&a1[v26];
          v28 = v27 + 1;
          if (v27 == -1 || v28 > *(_QWORD *)&a1[*v3])
            break;
          v29 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v27);
          *(_QWORD *)&a1[v26] = v28;
          v25 |= (unint64_t)(v29 & 0x7F) << v23;
          if ((v29 & 0x80) == 0)
            goto LABEL_46;
          v23 += 7;
          v13 = v24++ >= 9;
          if (v13)
          {
            v25 = 0;
            v30 = a1[*v4];
            goto LABEL_48;
          }
        }
        a1[*v4] = 1;
LABEL_46:
        v30 = a1[*v4];
        if (a1[*v4])
          v25 = 0;
LABEL_48:
        v31 = v25 & 7;
        if (v30 || v31 == 4)
        {
LABEL_179:
          v94 = a1[*v4];
          PBReaderRecallMark();
          if (v94)
            goto LABEL_185;
LABEL_180:
          PBReaderRecallMark();
LABEL_181:
          if (*(_QWORD *)&a1[*v2] >= *(_QWORD *)&a1[*v3])
            goto LABEL_182;
          continue;
        }
        if ((v25 >> 3) != 2)
        {
          if ((v25 >> 3) == 1 && v31 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_184;
          goto LABEL_36;
        }
        if (v31 == 2 && PBReaderPlaceMark())
        {
          objc_msgSend(a1, "position");
          objc_msgSend(a1, "length");
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
          {
            v33 = 0;
            v34 = 0;
            v35 = 0;
            while (1)
            {
              v36 = *v2;
              v37 = *(_QWORD *)&a1[v36];
              v38 = v37 + 1;
              if (v37 == -1 || v38 > *(_QWORD *)&a1[*v3])
                break;
              v39 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v37);
              *(_QWORD *)&a1[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if ((v39 & 0x80) == 0)
                goto LABEL_69;
              v33 += 7;
              v13 = v34++ >= 9;
              if (v13)
              {
                v35 = 0;
                v40 = a1[*v4];
                goto LABEL_71;
              }
            }
            a1[*v4] = 1;
LABEL_69:
            v40 = a1[*v4];
            if (a1[*v4])
              v35 = 0;
LABEL_71:
            v41 = v35 & 7;
            if (v40 || v41 == 4)
              break;
            if ((v35 >> 3) == 2)
            {
              if (v41 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
                goto LABEL_183;
              PBReaderRecallMark();
            }
            else if ((v35 >> 3) == 1 && v41 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_183:
              PBReaderRecallMark();
              goto LABEL_184;
            }
          }
          v43 = a1[*v4];
          PBReaderRecallMark();
          if (!v43)
          {
            PBReaderRecallMark();
            goto LABEL_36;
          }
        }
LABEL_184:
        PBReaderRecallMark();
LABEL_185:
        PBReaderRecallMark();
        return 0;
      case 3u:
      case 5u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          goto LABEL_180;
        goto LABEL_185;
      case 4u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v44 = 0;
        while (1)
        {
          v45 = *v2;
          v46 = *(_QWORD *)&a1[v45];
          v47 = v46 + 1;
          if (v46 == -1 || v47 > *(_QWORD *)&a1[*v3])
            goto LABEL_121;
          v48 = *(char *)(*(_QWORD *)&a1[*v5] + v46);
          *(_QWORD *)&a1[v45] = v47;
          if (v48 < 0)
          {
            v22 = v44++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_181;
        }
      case 6u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v49 = 0;
        while (1)
        {
          v50 = *v2;
          v51 = *(_QWORD *)&a1[v50];
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)&a1[*v3])
            goto LABEL_121;
          v53 = *(char *)(*(_QWORD *)&a1[*v5] + v51);
          *(_QWORD *)&a1[v50] = v52;
          if (v53 < 0)
          {
            v22 = v49++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_181;
        }
      case 7u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v54 = 0;
        while (1)
        {
          v55 = *v2;
          v56 = *(_QWORD *)&a1[v55];
          v57 = v56 + 1;
          if (v56 == -1 || v57 > *(_QWORD *)&a1[*v3])
            goto LABEL_121;
          v58 = *(char *)(*(_QWORD *)&a1[*v5] + v56);
          *(_QWORD *)&a1[v55] = v57;
          if (v58 < 0)
          {
            v22 = v54++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_181;
        }
      case 8u:
        if ((v8 & 7) != 0)
          goto LABEL_185;
        v59 = 0;
        while (1)
        {
          v60 = *v2;
          v61 = *(_QWORD *)&a1[v60];
          v62 = v61 + 1;
          if (v61 == -1 || v62 > *(_QWORD *)&a1[*v3])
            break;
          v63 = *(char *)(*(_QWORD *)&a1[*v5] + v61);
          *(_QWORD *)&a1[v60] = v62;
          if (v63 < 0)
          {
            v22 = v59++ > 8;
            if (!v22)
              continue;
          }
          goto LABEL_181;
        }
LABEL_121:
        a1[*v4] = 1;
        goto LABEL_181;
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark())
          goto LABEL_185;
        objc_msgSend(a1, "position");
        objc_msgSend(a1, "length");
LABEL_125:
        while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
        {
          v64 = 0;
          v65 = 0;
          v66 = 0;
          while (2)
          {
            v67 = *v2;
            v68 = *(_QWORD *)&a1[v67];
            v69 = v68 + 1;
            if (v68 == -1 || v69 > *(_QWORD *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              v70 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v68);
              *(_QWORD *)&a1[v67] = v69;
              v66 |= (unint64_t)(v70 & 0x7F) << v64;
              if (v70 < 0)
              {
                v64 += 7;
                v13 = v65++ >= 9;
                if (v13)
                {
                  v66 = 0;
                  v71 = *v4;
                  v72 = a1[v71];
                  goto LABEL_137;
                }
                continue;
              }
            }
            break;
          }
          v71 = *v4;
          v72 = a1[v71];
          if (a1[v71])
            v66 = 0;
LABEL_137:
          v73 = v66 & 7;
          if (v72)
            v74 = 1;
          else
            v74 = v73 == 4;
          if (!v74)
          {
            switch((v66 >> 3))
            {
              case 1u:
                if (v73 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
                  goto LABEL_184;
                continue;
              case 2u:
                if ((v66 & 7) != 0)
                  goto LABEL_184;
                v75 = 0;
                while (1)
                {
                  v76 = *v2;
                  v77 = *(_QWORD *)&a1[v76];
                  v78 = v77 + 1;
                  if (v77 == -1 || v78 > *(_QWORD *)&a1[*v3])
                    goto LABEL_171;
                  v79 = *(char *)(*(_QWORD *)&a1[*v5] + v77);
                  *(_QWORD *)&a1[v76] = v78;
                  if (v79 < 0)
                  {
                    v22 = v75++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_125;
                }
              case 3u:
                if ((v66 & 7) != 0)
                  goto LABEL_184;
                v80 = 0;
                while (1)
                {
                  v81 = *v2;
                  v82 = *(_QWORD *)&a1[v81];
                  v83 = v82 + 1;
                  if (v82 == -1 || v83 > *(_QWORD *)&a1[*v3])
                    goto LABEL_171;
                  v84 = *(char *)(*(_QWORD *)&a1[*v5] + v82);
                  *(_QWORD *)&a1[v81] = v83;
                  if (v84 < 0)
                  {
                    v22 = v80++ > 8;
                    if (!v22)
                      continue;
                  }
                  goto LABEL_125;
                }
              case 4u:
                if ((v66 & 7) != 0)
                  goto LABEL_184;
                v85 = 0;
                break;
              case 5u:
                if (v73 != 5)
                  goto LABEL_184;
                v90 = *v2;
                v91 = *(_QWORD *)&a1[v90];
                if (v91 > 0xFFFFFFFFFFFFFFFBLL)
                  goto LABEL_172;
                v92 = v91 + 4;
                if (v92 > *(_QWORD *)&a1[*v3])
                  goto LABEL_172;
                *(_QWORD *)&a1[v90] = v92;
                continue;
              default:
                if (!PBReaderSkipValueWithTag())
                  goto LABEL_184;
                continue;
            }
            while (1)
            {
              v86 = *v2;
              v87 = *(_QWORD *)&a1[v86];
              v88 = v87 + 1;
              if (v87 == -1 || v88 > *(_QWORD *)&a1[*v3])
                break;
              v89 = *(char *)(*(_QWORD *)&a1[*v5] + v87);
              *(_QWORD *)&a1[v86] = v88;
              if (v89 < 0)
              {
                v22 = v85++ > 8;
                if (!v22)
                  continue;
              }
              goto LABEL_125;
            }
LABEL_171:
            v71 = *v4;
LABEL_172:
            a1[v71] = 1;
            continue;
          }
          break;
        }
        v93 = a1[*v4];
        PBReaderRecallMark();
        if (!v93)
          goto LABEL_180;
        goto LABEL_185;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_185;
        goto LABEL_181;
    }
  }
}

void sub_18981AE64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceQuestionnaireResultIsDirty(uint64_t a1)
{
  unsigned int v2;

  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v2 = *(unsigned __int16 *)(a1 + 68);
  if ((v2 & 0x200) != 0)
    return 1;
  if ((v2 & 0x100) != 0)
  {
    if ((GEOPDScorecardLayoutIsDirty(*(os_unfair_lock_s **)(a1 + 40)) & 1) != 0)
      return 1;
    v2 = *(unsigned __int16 *)(a1 + 68);
  }
  if ((v2 & 0x60) != 0)
    return 1;
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEOPDPlaceQuestionnaireResultIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDPlaceQuestionnaireResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18981B3A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981BD98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRatingCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  GEOLocalizedString *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  int v45;
  int v46;
  void *v47;
  BOOL v49;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v17 = 1;
        v49 = v17;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      if (v15)
      {
        v44 = 1;
        goto LABEL_72;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            v46 = *v16++;
            v45 = v46;
            if (v46 != 1 && v45 != 2)
              break;
            *(_BYTE *)(a1 + v21[298]) |= v45;
          }
        }
        while (v45);
      }
      goto LABEL_73;
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v49)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 != 1)
    {
      v41 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
        goto LABEL_68;
      goto LABEL_55;
    }
    if (v33)
    {
      if ((*(_BYTE *)(a1 + v21[298]) & 1) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_69:
          v44 = 0;
          goto LABEL_71;
        }
        v9 -= *(_BYTE *)(a1 + v21[298]) & 1;
      }
      else
      {
        PBReaderReadString();
        v38 = objc_claimAutoreleasedReturnValue();
        v39 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v38;

        --v9;
      }
      goto LABEL_54;
    }
LABEL_50:
    v42 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
LABEL_68:
      v44 = 0;
      goto LABEL_72;
    }
LABEL_55:
    if (v9)
      v43 = 1;
    else
      v43 = v15;
    if ((v43 & 1) == 0)
      goto LABEL_59;
  }
  if (!v33 || (*(_BYTE *)(a1 + v21[298]) & 2) != 0)
    goto LABEL_50;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_69;
  v40 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDRatingCategory _addNoFlagsLocalizedName:](a1, v40);

    v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_54:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_55;
  }

  v44 = 0;
  v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_71:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_72:
  *(_BYTE *)(a1 + v21[298]) |= 1u;
  *(_BYTE *)(a1 + v21[298]) |= 2u;
  if ((v44 & 1) != 0)
  {
LABEL_73:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (!v15)
      return v3;
    goto LABEL_74;
  }
  v3 = 0;
  if (v15)
  {
LABEL_74:
    v47 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = 0;

  }
  return v3;
}

void sub_18981C2AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981C73C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRatingCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * v5++), "readAll:", 1, (_QWORD)v6);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDRatingCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDRatingCategoryReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDRatingCategoryReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDRatingCategoryReadAllFrom_initialTag;
  Specified = GEOPDRatingCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDRatingCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18981C9C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981CBDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDRatingCategoryIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 2) == 0)
    return 0;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v3 = *(id *)(a1 + 24);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v3);
        if (GEOLocalizedStringIsDirty(*(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * i)))
        {
          v2 = 1;
          goto LABEL_15;
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_15:

  return v2;
}

void sub_18981CF44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981D20C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDScorecardLayoutReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  int *v16;
  BOOL v17;
  int *v18;
  int *v19;
  int *v20;
  int *v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v30;
  unint64_t v32;
  _BOOL4 v33;
  int *v34;
  int v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  GEOPDRatingCategory *v40;
  int v41;
  char v42;
  char v43;
  char v44;
  char v45;
  int v46;
  int v47;
  void *v48;
  BOOL v50;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 36);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 32));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(_BYTE *)(a1 + 44) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v9])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v10 & 1 | v11;
        v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1)
          v16 = 0;
        else
          v16 = a3;
        v17 = v16 == 0;
        v18 = (int *)MEMORY[0x1E0D82BF0];
        v19 = (int *)MEMORY[0x1E0D82BC8];
        if (v14)
          v17 = 1;
        v50 = v17;
        v20 = (int *)MEMORY[0x1E0D82BB8];
        v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v7;
        v13 = v10;
LABEL_8:
        ++v9;
        v7 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(_QWORD *)(v3 + *v18) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v19))
      goto LABEL_59;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = *v18;
      v26 = *(_QWORD *)(v3 + v25);
      v27 = v26 + 1;
      if (v26 == -1 || v27 > *(_QWORD *)(v3 + *v6))
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v3 + *v20) + v26);
      *(_QWORD *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0)
        goto LABEL_25;
      v22 += 7;
      if (v23++ >= 9)
      {
        v24 = 0;
        v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v19) = 1;
LABEL_25:
    v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(_BYTE *)(v3 + *v19))
      v24 = 0;
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_59:
      if (v15)
      {
        v44 = 1;
        goto LABEL_74;
      }
      if (!v16)
        goto LABEL_75;
      while (1)
      {
        v47 = *v16++;
        v46 = v47;
        if (v47 == 1)
          break;
        if (v46 == 2)
        {
          v45 = 1;
LABEL_65:
          *(_BYTE *)(a1 + v21[303]) |= v45;
        }
        else if (!v46)
        {
          goto LABEL_75;
        }
      }
      v45 = 2;
      goto LABEL_65;
    }
    v32 = v24 >> 3;
    v33 = v15;
    if (!v50)
    {
      v34 = v16;
      do
      {
        v36 = *v34++;
        v35 = v36;
        v33 = v36 != 0;
        if (v36)
          v37 = v35 == (_DWORD)v32;
        else
          v37 = 1;
      }
      while (!v37);
    }
    if ((_DWORD)v32 == 2)
      break;
    if ((_DWORD)v32 != 1)
    {
      v41 = PBReaderSkipValueWithTag();
      v19 = (int *)MEMORY[0x1E0D82BC8];
      if (!v41)
        goto LABEL_70;
      goto LABEL_55;
    }
    if (v33)
    {
      if ((*(_BYTE *)(a1 + v21[303]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_71:
          v44 = 0;
          goto LABEL_73;
        }
        v9 += *(unsigned __int8 *)(a1 + v21[303]) << 30 >> 31;
      }
      else
      {
        PBReaderReadString();
        v38 = objc_claimAutoreleasedReturnValue();
        v39 = *(void **)(a1 + 24);
        *(_QWORD *)(a1 + 24) = v38;

        --v9;
      }
      goto LABEL_54;
    }
LABEL_50:
    v42 = PBReaderSkipValueWithTag();
    v19 = (int *)MEMORY[0x1E0D82BC8];
    if ((v42 & 1) == 0)
    {
LABEL_70:
      v44 = 0;
      goto LABEL_74;
    }
LABEL_55:
    if (v9)
      v43 = 1;
    else
      v43 = v15;
    if ((v43 & 1) == 0)
      goto LABEL_59;
  }
  if (!v33 || (*(_BYTE *)(a1 + v21[303]) & 1) != 0)
    goto LABEL_50;
  if ((PBReaderPlaceMark() & 1) == 0)
    goto LABEL_71;
  v40 = objc_alloc_init(GEOPDRatingCategory);
  if (GEOPDRatingCategoryReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDScorecardLayout _addNoFlagsRatingCategory:](a1, v40);

    v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_54:
    v19 = (int *)MEMORY[0x1E0D82BC8];
    goto LABEL_55;
  }

  v44 = 0;
  v21 = &OBJC_IVAR___GEOTextItemContainer__textItems;
LABEL_73:
  v19 = (int *)MEMORY[0x1E0D82BC8];
LABEL_74:
  *(_BYTE *)(a1 + v21[303]) |= 2u;
  *(_BYTE *)(a1 + v21[303]) |= 1u;
  if ((v44 & 1) != 0)
  {
LABEL_75:
    v3 = *(_BYTE *)(v3 + *v19) == 0;
    if (v15)
      goto LABEL_76;
  }
  else
  {
    v3 = 0;
    if (v15)
    {
LABEL_76:
      v48 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = 0;

    }
  }
  return v3;
}

void sub_18981D79C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981DC2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDScorecardLayoutCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        -[GEOPDRatingCategory readAll:](*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

unint64_t GEOPDScorecardLayoutReadAllFrom(uint64_t a1, void *a2, int a3)
{
  unint64_t Specified;
  id v8;
  int *v9;
  uint8_t v10[16];

  if (*(_DWORD *)(a1 + 36))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPDScorecardLayoutReadAllFrom can only be called once per object"));
    return 0;
  }
  if ((unint64_t)objc_msgSend(a2, "position") >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = objc_msgSend(v8, "position");
  *(_DWORD *)(a1 + 36) = objc_msgSend(v8, "length");
  if (a3)
    v9 = (int *)&GEOPDScorecardLayoutReadAllFrom_recursiveTag;
  else
    v9 = (int *)&GEOPDScorecardLayoutReadAllFrom_initialTag;
  Specified = GEOPDScorecardLayoutReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
    _GEOPDScorecardLayoutCallReadAllRecursiveWithoutSynchronized(a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18981DEB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981E0CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDScorecardLayoutIsDirty(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t i;
  os_unfair_lock_s *v6;
  char IsDirty;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(_BYTE *)(a1 + 44) & 7) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 44) & 1) == 0)
    return 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v3 = *(id *)(a1 + 16);
  v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v3);
        v6 = *(os_unfair_lock_s **)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          IsDirty = _GEOPDRatingCategoryIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 10);
          if ((IsDirty & 1) != 0)
          {
            v2 = 1;
            goto LABEL_16;
          }
        }
      }
      v2 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDScorecardLayoutIsDirty(os_unfair_lock_s *result)
{
  os_unfair_lock_s *v1;
  uint64_t IsDirty;

  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    IsDirty = _GEOPDScorecardLayoutIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18981E4C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981F388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_189820214(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchReferenceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  int *v15;
  BOOL v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  _BOOL4 v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  int v52;
  int v53;
  char v54;
  void *v55;
  BOOL v57;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  v15 = (int *)MEMORY[0x1E0D82BF0];
  if (v12)
    v16 = 1;
  else
    v16 = v14 == 0;
  v57 = v16;
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v15) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_86;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v15;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v25 = v20++ >= 9;
      if (v25)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        v51 = 1;
        goto LABEL_97;
      }
      if (!v14)
      {
LABEL_98:
        v3 = *(_BYTE *)(v3 + *v17) == 0;
        if (!v13)
          return v3;
LABEL_99:
        v55 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        v53 = *v14++;
        v52 = v53;
        if (v53 == 1)
          break;
        if (v52 == 2)
        {
          v54 = 8;
LABEL_95:
          *(_BYTE *)(a1 + 60) |= v54;
        }
        else if (!v52)
        {
          goto LABEL_98;
        }
      }
      v54 = 4;
      goto LABEL_95;
    }
    v28 = v21 >> 3;
    v29 = v13;
    if (!v57)
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_96;
        v49 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_81;
      case 2:
        if (!v29)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 40;
LABEL_49:
          v36 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          --v9;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v49 = 16 * *(_BYTE *)(a1 + 60);
LABEL_81:
          v9 += v49 >> 7;
LABEL_82:
          if (v9)
            v50 = 1;
          else
            v50 = v13;
          if ((v50 & 1) == 0)
            goto LABEL_86;
          continue;
        }
LABEL_96:
        v51 = 0;
LABEL_97:
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v51 & 1) != 0)
          goto LABEL_98;
        v3 = 0;
        if (v13)
          goto LABEL_99;
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v40 = *v15;
          v41 = *(_QWORD *)(v3 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v41);
            *(_QWORD *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              v25 = v38++ >= 9;
              if (v25)
              {
                v39 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v39 = 0;
LABEL_71:
        v48 = 32;
        goto LABEL_76;
      case 4:
        if ((v8 & 1) != 0)
        {
          v43 = 0;
          v44 = 0;
          v39 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          while (1)
          {
            v45 = *v15;
            v46 = *(_QWORD *)(v3 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(v3 + *v6))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v46);
            *(_QWORD *)(v3 + v45) = v46 + 1;
            v39 |= (unint64_t)(v47 & 0x7F) << v43;
            if ((v47 & 0x80) == 0)
              goto LABEL_73;
            v43 += 7;
            v25 = v44++ >= 9;
            if (v25)
            {
              v39 = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v17))
            v39 = 0;
LABEL_75:
          v48 = 16;
LABEL_76:
          *(_QWORD *)(a1 + v48) = v39;
        }
        else
        {
LABEL_66:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_96;
        }
        goto LABEL_82;
      default:
        if (!PBReaderSkipValueWithTag())
          goto LABEL_96;
        goto LABEL_82;
    }
  }
}

void sub_189820858(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189820B84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchReferenceReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineDataBatchReferenceReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 52) = objc_msgSend(v6, "length");
      Specified = GEOPBOfflineDataBatchReferenceReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataBatchReferenceReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189820CF8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189820EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189821064(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189821438(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  void *v36;
  int v37;
  void *v38;
  int *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  GEOMapRegion *v64;
  void *v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_93;
        v67 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v66 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_93;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_93:
      if ((v15 & 1) != 0)
      {
        v59 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          v60 = *v16++;
          v61 = 4;
          switch(v60)
          {
            case 0:
              goto LABEL_103;
            case 1:
              goto LABEL_102;
            case 2:
              v61 = 8;
              goto LABEL_102;
            case 3:
              v61 = 2;
LABEL_102:
              *(_BYTE *)(a1 + 76) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_103;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v67 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 76) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_108;
          v64 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v64, (void *)v3))
          {
            PBReaderRecallMark();
            v36 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v64;

            --v7;
            goto LABEL_90;
          }

          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v7 += *(unsigned __int8 *)(a1 + 76) << 29 >> 31;
        goto LABEL_90;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 8) != 0)
          goto LABEL_72;
        PBReaderReadString();
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        if (v38)
        {
          v65 = v38;
          -[GEOPBOfflineDataBatchesRequest _addNoFlagsSupportedLanguage:](a1, v38);
          v38 = v65;
        }

        goto LABEL_90;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 2) != 0)
          goto LABEL_72;
        if (v28 != 2)
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          while (1)
          {
            v56 = *v17;
            v57 = *(_QWORD *)(v3 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
              break;
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v57);
            *(_QWORD *)(v3 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v26 = v54++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_89;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_89:
          PBRepeatedInt32Add();
LABEL_90:
          v15 = v66;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_91;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            v39 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v40 = 0;
            v41 = 0;
            v42 = 0;
            while (1)
            {
              v43 = *v17;
              v44 = *(_QWORD *)(v3 + v43);
              if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
                break;
              v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
              *(_QWORD *)(v3 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v26 = v41++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_63;
            }
            *(_BYTE *)(v3 + *v39) = 1;
LABEL_63:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v66;
LABEL_91:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_93;
          continue;
        }
LABEL_108:
        v59 = 0;
        v15 = v66;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 8u;
        *(_BYTE *)(a1 + 76) |= 2u;
        if ((v59 & 1) != 0)
        {
LABEL_103:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_104;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_104:
        v62 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_BYTE *)(a1 + 76) |= 1u;
          while (1)
          {
            v49 = *v17;
            v50 = *(_QWORD *)(v3 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if ((v51 & 0x80) == 0)
              goto LABEL_75;
            v46 += 7;
            v26 = v47++ >= 9;
            if (v26)
            {
              v48 = 0;
              goto LABEL_77;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_75:
          if (*(_BYTE *)(v3 + *v18))
            v48 = 0;
LABEL_77:
          *(_QWORD *)(a1 + 40) = v48;
        }
        else
        {
LABEL_72:
          v52 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v66;
          if ((v52 & 1) == 0)
          {
LABEL_106:
            v59 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_91;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v66;
        if (!v37)
          goto LABEL_106;
        goto LABEL_91;
    }
  }
}

void sub_189821C8C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189821FC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189822EF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesRequestReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineDataBatchesRequestReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 68) = objc_msgSend(v6, "length");
      Specified = GEOPBOfflineDataBatchesRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataBatchesRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189823068(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982363C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189823A78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189824EE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189825568(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesSizeRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  BOOL v26;
  int v27;
  int v28;
  unint64_t v30;
  BOOL v31;
  int *v32;
  int v33;
  int v34;
  BOOL v35;
  void *v36;
  int v37;
  void *v38;
  int *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  int v60;
  char v61;
  void *v62;
  GEOMapRegion *v64;
  void *v65;
  char v66;
  char v67;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 68);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 64));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    v12 = 1;
    v13 = 1;
    switch(a3[v7])
    {
      case -3:
        v8 = 1;
        goto LABEL_6;
      case -2:
        v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        v14 = v11 > 1;
        v15 = v10 | v14;
        if ((((v10 | v14) | v8) & 1) != 0)
          v16 = 0;
        else
          v16 = a3;
        v17 = (int *)MEMORY[0x1E0D82BF0];
        v18 = (int *)MEMORY[0x1E0D82BC8];
        if (*(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(v3 + *v6))
          goto LABEL_93;
        v67 = (v16 == 0) | v15;
        v19 = (int *)MEMORY[0x1E0D82BB8];
        v66 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        v12 = v9;
        v13 = v10;
LABEL_8:
        ++v7;
        v9 = v12;
        v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_BYTE *)(v3 + *v18))
      goto LABEL_93;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    while (1)
    {
      v23 = *v17;
      v24 = *(_QWORD *)(v3 + v23);
      if (v24 == -1 || v24 >= *(_QWORD *)(v3 + *v6))
        break;
      v25 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v24);
      *(_QWORD *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0)
        goto LABEL_23;
      v20 += 7;
      v26 = v21++ >= 9;
      if (v26)
      {
        v22 = 0;
        v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(_BYTE *)(v3 + *v18) = 1;
LABEL_23:
    v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(_BYTE *)(v3 + *v18))
      v22 = 0;
LABEL_25:
    v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_93:
      if ((v15 & 1) != 0)
      {
        v59 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          v60 = *v16++;
          v61 = 4;
          switch(v60)
          {
            case 0:
              goto LABEL_103;
            case 1:
              goto LABEL_102;
            case 2:
              v61 = 8;
              goto LABEL_102;
            case 3:
              v61 = 2;
LABEL_102:
              *(_BYTE *)(a1 + 76) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_103;
    }
    v30 = v22 >> 3;
    v31 = v15;
    if ((v67 & 1) == 0)
    {
      v32 = v16;
      do
      {
        v34 = *v32++;
        v33 = v34;
        v31 = v34 != 0;
        if (v34)
          v35 = v33 == (_DWORD)v30;
        else
          v35 = 1;
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31)
          goto LABEL_72;
        if ((*(_BYTE *)(a1 + 76) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_108;
          v64 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v64, (void *)v3))
          {
            PBReaderRecallMark();
            v36 = *(void **)(a1 + 48);
            *(_QWORD *)(a1 + 48) = v64;

            --v7;
            goto LABEL_90;
          }

          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_108;
        v7 += *(unsigned __int8 *)(a1 + 76) << 29 >> 31;
        goto LABEL_90;
      case 2:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 8) != 0)
          goto LABEL_72;
        PBReaderReadString();
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        if (v38)
        {
          v65 = v38;
          -[GEOPBOfflineDataBatchesSizeRequest _addNoFlagsSupportedLanguage:](a1, v38);
          v38 = v65;
        }

        goto LABEL_90;
      case 3:
        if (!v31 || (*(_BYTE *)(a1 + 76) & 2) != 0)
          goto LABEL_72;
        if (v28 != 2)
        {
          v53 = 0;
          v54 = 0;
          v55 = 0;
          while (1)
          {
            v56 = *v17;
            v57 = *(_QWORD *)(v3 + v56);
            if (v57 == -1 || v57 >= *(_QWORD *)(v3 + *v6))
              break;
            v58 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v57);
            *(_QWORD *)(v3 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v26 = v54++ >= 9;
              if (!v26)
                continue;
            }
            goto LABEL_89;
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_89:
          PBRepeatedInt32Add();
LABEL_90:
          v15 = v66;
          v18 = (int *)MEMORY[0x1E0D82BC8];
          goto LABEL_91;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            v39 = (int *)MEMORY[0x1E0D82BC8];
            if (*(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + (int)*MEMORY[0x1E0D82BC8]))
              break;
            v40 = 0;
            v41 = 0;
            v42 = 0;
            while (1)
            {
              v43 = *v17;
              v44 = *(_QWORD *)(v3 + v43);
              if (v44 == -1 || v44 >= *(_QWORD *)(v3 + *v6))
                break;
              v45 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v44);
              *(_QWORD *)(v3 + v43) = v44 + 1;
              v42 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v26 = v41++ >= 9;
                if (!v26)
                  continue;
              }
              goto LABEL_63;
            }
            *(_BYTE *)(v3 + *v39) = 1;
LABEL_63:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v66;
LABEL_91:
          if (!(v15 & 1 | (v7 != 0)) || *(_QWORD *)(v3 + *v17) >= *(_QWORD *)(v3 + *v6))
            goto LABEL_93;
          continue;
        }
LABEL_108:
        v59 = 0;
        v15 = v66;
        v18 = (int *)MEMORY[0x1E0D82BC8];
LABEL_95:
        *(_BYTE *)(a1 + 76) |= 4u;
        *(_BYTE *)(a1 + 76) |= 8u;
        *(_BYTE *)(a1 + 76) |= 2u;
        if ((v59 & 1) != 0)
        {
LABEL_103:
          v3 = *(_BYTE *)(v3 + *v18) == 0;
          if ((v15 & 1) != 0)
            goto LABEL_104;
          return v3;
        }
        v3 = 0;
        if ((v15 & 1) == 0)
          return v3;
LABEL_104:
        v62 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = 0;

        return v3;
      case 4:
        if ((v8 & 1) != 0)
        {
          v46 = 0;
          v47 = 0;
          v48 = 0;
          *(_BYTE *)(a1 + 76) |= 1u;
          while (1)
          {
            v49 = *v17;
            v50 = *(_QWORD *)(v3 + v49);
            if (v50 == -1 || v50 >= *(_QWORD *)(v3 + *v6))
              break;
            v51 = *(_BYTE *)(*(_QWORD *)(v3 + *v19) + v50);
            *(_QWORD *)(v3 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if ((v51 & 0x80) == 0)
              goto LABEL_75;
            v46 += 7;
            v26 = v47++ >= 9;
            if (v26)
            {
              v48 = 0;
              goto LABEL_77;
            }
          }
          *(_BYTE *)(v3 + *v18) = 1;
LABEL_75:
          if (*(_BYTE *)(v3 + *v18))
            v48 = 0;
LABEL_77:
          *(_QWORD *)(a1 + 40) = v48;
        }
        else
        {
LABEL_72:
          v52 = PBReaderSkipValueWithTag();
          v18 = (int *)MEMORY[0x1E0D82BC8];
          v15 = v66;
          if ((v52 & 1) == 0)
          {
LABEL_106:
            v59 = 0;
            goto LABEL_95;
          }
        }
        goto LABEL_91;
      default:
        v37 = PBReaderSkipValueWithTag();
        v18 = (int *)MEMORY[0x1E0D82BC8];
        v15 = v66;
        if (!v37)
          goto LABEL_106;
        goto LABEL_91;
    }
  }
}

void sub_189825DBC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898260F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189826A40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataBatchesSizeRequestReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 68))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineDataBatchesSizeRequestReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 68) = objc_msgSend(v6, "length");
      Specified = GEOPBOfflineDataBatchesSizeRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOPBOfflineDataBatchesSizeRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189826BB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982718C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898275C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189828464(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataKeyValueReferenceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3;
  int *v6;
  char v7;
  char v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;
  int *v14;
  BOOL v15;
  int *v16;
  int *v17;
  int *v18;
  char v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  int v26;
  unint64_t v28;
  _BOOL4 v29;
  int *v30;
  int v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  void *v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  int v54;
  int v55;
  char v56;
  void *v57;
  BOOL v59;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 52);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 48));
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3)
      break;
    v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  v12 = v7 & 1 | v10;
  v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1)
    v14 = 0;
  else
    v14 = a3;
  if (v12)
    v15 = 1;
  else
    v15 = v14 == 0;
  v59 = v15;
  v16 = (int *)MEMORY[0x1E0D82BF0];
  v17 = (int *)MEMORY[0x1E0D82BC8];
  v18 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_QWORD *)(v3 + *v16) >= *(_QWORD *)(v3 + *v6) || *(_BYTE *)(v3 + *v17))
      goto LABEL_86;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    while (1)
    {
      v22 = *v16;
      v23 = *(_QWORD *)(v3 + v22);
      if (v23 == -1 || v23 >= *(_QWORD *)(v3 + *v6))
        break;
      v24 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v23);
      *(_QWORD *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0)
        goto LABEL_27;
      v19 += 7;
      v25 = v20++ >= 9;
      if (v25)
      {
        v21 = 0;
        v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(_BYTE *)(v3 + *v17) = 1;
LABEL_27:
    v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(_BYTE *)(v3 + *v17))
      v21 = 0;
LABEL_29:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        v53 = 1;
        goto LABEL_97;
      }
      if (!v14)
        goto LABEL_98;
      while (1)
      {
        v55 = *v14++;
        v54 = v55;
        if (v55 == 1)
          break;
        if (v54 == 2)
        {
          v56 = 8;
LABEL_95:
          *(_BYTE *)(a1 + 60) |= v56;
        }
        else if (!v54)
        {
          goto LABEL_98;
        }
      }
      v56 = 4;
      goto LABEL_95;
    }
    v28 = v21 >> 3;
    v29 = v13;
    if (!v59)
    {
      v30 = v14;
      do
      {
        v32 = *v30++;
        v31 = v32;
        v29 = v32 != 0;
        if (v32)
          v33 = v31 == (_DWORD)v28;
        else
          v33 = 1;
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 4) == 0)
        {
          PBReaderReadData();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_103;
        v51 = 32 * *(_BYTE *)(a1 + 60);
        goto LABEL_81;
      case 2:
        if (!v29)
          goto LABEL_66;
        if ((*(_BYTE *)(a1 + 60) & 8) == 0)
        {
          PBReaderReadString();
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = 24;
LABEL_49:
          v37 = *(void **)(a1 + v35);
          *(_QWORD *)(a1 + v35) = v34;

          v17 = (int *)MEMORY[0x1E0D82BC8];
          --v9;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) != 0)
        {
          v51 = 16 * *(_BYTE *)(a1 + 60);
LABEL_81:
          v9 += v51 >> 7;
          v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_82:
          if (v9)
            v52 = 1;
          else
            v52 = v13;
          if ((v52 & 1) == 0)
            goto LABEL_86;
          continue;
        }
LABEL_103:
        v53 = 0;
        v17 = (int *)MEMORY[0x1E0D82BC8];
LABEL_97:
        *(_BYTE *)(a1 + 60) |= 4u;
        *(_BYTE *)(a1 + 60) |= 8u;
        if ((v53 & 1) != 0)
        {
LABEL_98:
          v3 = *(_BYTE *)(v3 + *v17) == 0;
          if (v13)
            goto LABEL_99;
        }
        else
        {
          v3 = 0;
          if (v13)
          {
LABEL_99:
            v57 = *(void **)(a1 + 8);
            *(_QWORD *)(a1 + 8) = 0;

          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0)
          goto LABEL_66;
        v38 = 0;
        v39 = 0;
        v40 = 0;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          v41 = *v16;
          v42 = *(_QWORD *)(v3 + v41);
          if (v42 == -1 || v42 >= *(_QWORD *)(v3 + *v6))
          {
            *(_BYTE *)(v3 + *v17) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v42);
            *(_QWORD *)(v3 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v25 = v39++ >= 9;
              if (v25)
              {
                v40 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v17))
          v40 = 0;
LABEL_71:
        v50 = 40;
        goto LABEL_76;
      case 4:
        if ((v8 & 1) != 0)
        {
          v44 = 0;
          v45 = 0;
          v40 = 0;
          *(_BYTE *)(a1 + 60) |= 1u;
          while (1)
          {
            v46 = *v16;
            v47 = *(_QWORD *)(v3 + v46);
            if (v47 == -1 || v47 >= *(_QWORD *)(v3 + *v6))
              break;
            v48 = *(_BYTE *)(*(_QWORD *)(v3 + *v18) + v47);
            *(_QWORD *)(v3 + v46) = v47 + 1;
            v40 |= (unint64_t)(v48 & 0x7F) << v44;
            if ((v48 & 0x80) == 0)
              goto LABEL_73;
            v44 += 7;
            v25 = v45++ >= 9;
            if (v25)
            {
              v40 = 0;
              goto LABEL_75;
            }
          }
          *(_BYTE *)(v3 + *v17) = 1;
LABEL_73:
          if (*(_BYTE *)(v3 + *v17))
            v40 = 0;
LABEL_75:
          v50 = 32;
LABEL_76:
          *(_QWORD *)(a1 + v50) = v40;
        }
        else
        {
LABEL_66:
          v49 = PBReaderSkipValueWithTag();
          v17 = (int *)MEMORY[0x1E0D82BC8];
          if ((v49 & 1) == 0)
          {
LABEL_96:
            v53 = 0;
            goto LABEL_97;
          }
        }
        goto LABEL_82;
      default:
        v36 = PBReaderSkipValueWithTag();
        v17 = (int *)MEMORY[0x1E0D82BC8];
        if (!v36)
          goto LABEL_96;
        goto LABEL_82;
    }
  }
}

void sub_1898291FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898292C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBOfflineDataKeyValueReferenceReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t Specified;
  id v6;
  uint8_t v7[16];

  if (*(_DWORD *)(a1 + 52))
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("GEOPBOfflineDataKeyValueReferenceReadAllFrom can only be called once per object"));
  }
  else
  {
    if (!((unint64_t)objc_msgSend(a2, "position") >> 32)
      && !((unint64_t)objc_msgSend(a2, "length") >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
      v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 48) = objc_msgSend(v6, "position");
      *(_DWORD *)(a1 + 52) = objc_msgSend(v6, "length");
      Specified = GEOPBOfflineDataKeyValueReferenceReadSpecified(a1, (unint64_t)v6, GEOPBOfflineDataKeyValueReferenceReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_fault_impl(&dword_1885A9000, MEMORY[0x1E0C81028], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189829440(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898295F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898297A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineDataLayerBatchesReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  GEOPBOfflineDataBatchReference *v17;
  _BOOL8 v18;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_31;
          v17 = objc_alloc_init(GEOPBOfflineDataBatchReference);
          if (!GEOPBOfflineDataBatchReferenceReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_31;
          }
          PBReaderRecallMark();
          -[GEOPBOfflineDataLayerBatches addBatchReference:](a1, v17);

        }
        else if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark()
            || (GEOPBOfflineDataLayerVersionReadAllFrom(a1 + 8, (uint64_t)v3) & 1) == 0)
          {
            goto LABEL_31;
          }
          PBReaderRecallMark();
          *(_BYTE *)(a1 + 40) |= 1u;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_189829F44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPBOfflineDataLayerVersionIsValid(void *a1)
{
  uint64_t AllFrom;
  _QWORD v4[5];

  v4[3] = objc_msgSend(a1, "position");
  v4[4] = objc_msgSend(a1, "length");
  memset(v4, 0, 24);
  AllFrom = GEOPBOfflineDataLayerVersionReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

uint64_t GEOPBOfflineDataLayerVersionWriteTo(uint64_t result)
{
  uint64_t v1;
  char v2;

  v1 = result;
  v2 = *(_BYTE *)(result + 16);
  if ((v2 & 1) != 0)
  {
    result = PBDataWriterWriteInt32Field();
    v2 = *(_BYTE *)(v1 + 16);
  }
  if ((v2 & 2) != 0)
    return PBDataWriterWriteUint64Field();
  return result;
}

void sub_18982A970(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id _GEOPBOfflineDataLayerVersionDictionaryRepresentation(int *a1)
{
  void *v2;
  char v3;
  uint64_t v4;
  __CFString *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *((_BYTE *)a1 + 16);
  if ((v3 & 1) != 0)
  {
    v4 = *a1;
    if (v4 >= 0x15)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), *a1);
      v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v5 = off_1E1C21D80[v4];
    }
    objc_msgSend(v2, "setObject:forKey:", v5, CFSTR("layer"));

    v3 = *((_BYTE *)a1 + 16);
  }
  if ((v3 & 2) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", *((_QWORD *)a1 + 1));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKey:", v6, CFSTR("version"));

  }
  return v2;
}

void _GEOPBOfflineDataLayerVersionFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  int v6;
  id v7;

  v3 = a1;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("layer"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 16) |= 1u;
    v5 = v4;
    if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_UNKNOWN")) & 1) != 0)
    {
      v6 = 0;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_FARPOINT_METADATA")) & 1) != 0)
    {
      v6 = 1;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING")) & 1) != 0)
    {
      v6 = 2;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_POI_SEARCH_AND_PLACES")) & 1) != 0)
    {
      v6 = 3;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_VECTOR_PARSEC_INDEX")) & 1) != 0)
    {
      v6 = 4;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_REVGEO")) & 1) != 0)
    {
      v6 = 5;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_VECTOR_PARSEC_DATA")) & 1) != 0)
    {
      v6 = 6;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_GEO_SEARCH")) & 1) != 0)
    {
      v6 = 7;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_SEARCH_STATIC_CONTENT")) & 1) != 0)
    {
      v6 = 8;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_VECTOR_TILE")) & 1) != 0)
    {
      v6 = 9;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_BROWSE_AND_CATEGORY_SEARCH")) & 1) != 0)
    {
      v6 = 10;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_VECTOR_ASSET")) & 1) != 0)
    {
      v6 = 11;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_SEARCH_ML_MODELS")) & 1) != 0)
    {
      v6 = 12;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V2")) & 1) != 0)
    {
      v6 = 13;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V2_TRANSIT")) & 1) != 0)
    {
      v6 = 14;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V2_TRAFFIC_INCIDENTS")) & 1) != 0)
    {
      v6 = 15;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_GEO_SEARCH_V2")) & 1) != 0)
    {
      v6 = 16;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V3")) & 1) != 0)
    {
      v6 = 17;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V3_METADATA")) & 1) != 0)
    {
      v6 = 18;
    }
    else if ((objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V3_TRANSIT")) & 1) != 0)
    {
      v6 = 19;
    }
    else if (objc_msgSend(v5, "isEqualToString:", CFSTR("LAYER_ROUTING_V3_TRAFFIC_INCIDENTS")))
    {
      v6 = 20;
    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_49;
    v6 = objc_msgSend(v4, "intValue");
  }
  *(_DWORD *)a2 = v6;
LABEL_49:

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("version"));
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    *(_BYTE *)(a2 + 16) |= 2u;
    *(_QWORD *)(a2 + 8) = objc_msgSend(v7, "unsignedLongLongValue");
  }

}

uint64_t GEOPBOfflineDataLayerVersionReadAllFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = 0;
        v24 = 0;
        v25 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            break;
          v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
          *(_QWORD *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0)
            goto LABEL_41;
          v23 += 7;
          v14 = v24++ >= 9;
          if (v14)
          {
            v25 = 0;
            goto LABEL_43;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + *v5))
          v25 = 0;
LABEL_43:
        *(_QWORD *)(a1 + 8) = v25;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_37;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_39;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_37:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_39:
        *(_DWORD *)a1 = v19;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL GEOPBOfflineTileMetadataReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  GEOPBTileStyleZoomAvailability *v17;
  _BOOL8 v18;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        if (v15 || (v10 & 7) == 4)
          break;
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0)
            goto LABEL_27;
          v17 = objc_alloc_init(GEOPBTileStyleZoomAvailability);
          if (!GEOPBTileStyleZoomAvailabilityReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPBOfflineTileMetadata addTileStyleAvailability:](a1, v17);

        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v18 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    v18 = 0;
  }
  objc_sync_exit(v3);

  return v18;
}

void sub_18982C9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBOfflineTileMetadataIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  int v13;
  int v14;
  BOOL v15;
  char v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  BOOL v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  _BOOL8 v48;

  objc_msgSend(a1, "position");
  objc_msgSend(a1, "length");
  v2 = (int *)MEMORY[0x1E0D82BF0];
  v3 = (int *)MEMORY[0x1E0D82BD8];
  v4 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)&a1[*MEMORY[0x1E0D82BF0]] >= *(_QWORD *)&a1[*MEMORY[0x1E0D82BD8]])
    goto LABEL_83;
  v5 = (int *)MEMORY[0x1E0D82BB8];
  do
  {
    if (a1[*v4])
      break;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *v2;
      v10 = *(_QWORD *)&a1[v9];
      if (v10 == -1 || v10 >= *(_QWORD *)&a1[*v3])
        break;
      v11 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v10);
      *(_QWORD *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0)
        goto LABEL_12;
      v6 += 7;
      v12 = v7++ >= 9;
      if (v12)
      {
        v8 = 0;
        v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    v13 = a1[*v4];
    if (a1[*v4])
      v8 = 0;
LABEL_14:
    v14 = v8 & 7;
    if (v13)
      v15 = 1;
    else
      v15 = v14 == 4;
    if (v15)
      break;
    if ((v8 >> 3) != 1)
    {
      if ((PBReaderSkipValueWithTag() & 1) != 0)
        continue;
LABEL_85:
      PBReaderRecallMark();
      return 0;
    }
    if (v14 != 2 || !PBReaderPlaceMark())
      goto LABEL_85;
    objc_msgSend(a1, "position", 0, 0);
    objc_msgSend(a1, "length");
LABEL_22:
    while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3] && !a1[*v4])
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
      while (1)
      {
        v19 = *v2;
        v20 = *(_QWORD *)&a1[v19];
        if (v20 == -1 || v20 >= *(_QWORD *)&a1[*v3])
          break;
        v21 = *(_BYTE *)(*(_QWORD *)&a1[*v5] + v20);
        *(_QWORD *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0)
          goto LABEL_32;
        v16 += 7;
        v12 = v17++ >= 9;
        if (v12)
        {
          v18 = 0;
          v22 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      v22 = a1[*v4];
      if (a1[*v4])
        v18 = 0;
LABEL_34:
      v23 = v18 & 7;
      if (v22 || v23 == 4)
        break;
      v25 = v18 >> 3;
      if ((v18 >> 3) == 3)
      {
        if ((v18 & 7) != 0)
          goto LABEL_84;
        v32 = 0;
        while (1)
        {
          v33 = *v2;
          v34 = *(_QWORD *)&a1[v33];
          if (v34 == -1 || v34 >= *(_QWORD *)&a1[*v3])
            goto LABEL_64;
          v35 = v34 + 1;
          v36 = *(char *)(*(_QWORD *)&a1[*v5] + v34);
          *(_QWORD *)&a1[v33] = v35;
          if (v36 < 0)
          {
            v31 = v32++ > 8;
            if (!v31)
              continue;
          }
          goto LABEL_22;
        }
      }
      if ((_DWORD)v25 == 2)
      {
        if (v23 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_84:
            PBReaderRecallMark();
            goto LABEL_85;
          }
LABEL_68:
          while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3])
          {
            v42 = a1[*v4];
            if (a1[*v4])
              break;
            while (1)
            {
              v43 = *v2;
              v44 = *(_QWORD *)&a1[v43];
              if (v44 == -1 || v44 >= *(_QWORD *)&a1[*v3])
                break;
              v45 = v44 + 1;
              v46 = *(char *)(*(_QWORD *)&a1[*v5] + v44);
              *(_QWORD *)&a1[v43] = v45;
              if (v46 < 0)
              {
                v12 = v42++ >= 9;
                if (!v12)
                  continue;
              }
              goto LABEL_68;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v18 & 7) != 0)
            goto LABEL_84;
          while (1)
          {
            v37 = *v2;
            v38 = *(_QWORD *)&a1[v37];
            if (v38 == -1 || v38 >= *(_QWORD *)&a1[*v3])
              break;
            v39 = v38 + 1;
            v40 = *(char *)(*(_QWORD *)&a1[*v5] + v38);
            *(_QWORD *)&a1[v37] = v39;
            if (v40 < 0)
            {
              v41 = v23++;
              if (v41 <= 8)
                continue;
            }
            goto LABEL_22;
          }
LABEL_64:
          a1[*v4] = 1;
        }
      }
      else
      {
        if ((_DWORD)v25 == 1)
        {
          if ((v18 & 7) != 0)
            goto LABEL_84;
          v26 = 0;
          while (1)
          {
            v27 = *v2;
            v28 = *(_QWORD *)&a1[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&a1[*v3])
              goto LABEL_64;
            v29 = v28 + 1;
            v30 = *(char *)(*(_QWORD *)&a1[*v5] + v28);
            *(_QWORD *)&a1[v27] = v29;
            if (v30 < 0)
            {
              v31 = v26++ > 8;
              if (!v31)
                continue;
            }
            goto LABEL_22;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_84;
      }
    }
    v47 = a1[*v4];
    PBReaderRecallMark();
    if (v47)
      goto LABEL_85;
    PBReaderRecallMark();
  }
  while (*(_QWORD *)&a1[*v2] < *(_QWORD *)&a1[*v3]);
LABEL_83:
  v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPBTileStyleZoomAvailabilityReadAllFrom(uint64_t a1, void *a2)
{
  char *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  _BOOL8 v43;

  v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E0D82BF0];
    v5 = (int *)MEMORY[0x1E0D82BD8];
    v6 = (int *)MEMORY[0x1E0D82BC8];
    if (*(_QWORD *)&v3[*MEMORY[0x1E0D82BF0]] < *(_QWORD *)&v3[*MEMORY[0x1E0D82BD8]])
    {
      v7 = (int *)MEMORY[0x1E0D82BB8];
      do
      {
        if (v3[*v6])
          break;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v4;
          v12 = *(_QWORD *)&v3[v11];
          if (v12 == -1 || v12 >= *(_QWORD *)&v3[*v5])
            break;
          v13 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v12);
          *(_QWORD *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_13;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        v15 = v3[*v6];
        if (v3[*v6])
          v10 = 0;
LABEL_15:
        v16 = v10 & 7;
        if (v15 || v16 == 4)
          break;
        v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          v25 = 0;
          v26 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v27 = *v4;
            v28 = *(_QWORD *)&v3[v27];
            if (v28 == -1 || v28 >= *(_QWORD *)&v3[*v5])
              break;
            v29 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v28);
            *(_QWORD *)&v3[v27] = v28 + 1;
            v21 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0)
              goto LABEL_56;
            v25 += 7;
            v14 = v26++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_58;
            }
          }
          v3[*v6] = 1;
LABEL_56:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_58:
          v36 = 32;
        }
        else
        {
          if ((_DWORD)v18 == 2)
          {
            if (v16 == 2)
            {
              if (!PBReaderPlaceMark())
                goto LABEL_73;
              while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5] && !v3[*v6])
              {
                v30 = 0;
                v31 = 0;
                v32 = 0;
                while (1)
                {
                  v33 = *v4;
                  v34 = *(_QWORD *)&v3[v33];
                  if (v34 == -1 || v34 >= *(_QWORD *)&v3[*v5])
                    break;
                  v35 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v34);
                  *(_QWORD *)&v3[v33] = v34 + 1;
                  v32 |= (unint64_t)(v35 & 0x7F) << v30;
                  if (v35 < 0)
                  {
                    v30 += 7;
                    v14 = v31++ >= 9;
                    if (!v14)
                      continue;
                  }
                  goto LABEL_48;
                }
                v3[*v6] = 1;
LABEL_48:
                PBRepeatedUInt32Add();
              }
              PBReaderRecallMark();
            }
            else
            {
              v37 = 0;
              v38 = 0;
              v39 = 0;
              while (1)
              {
                v40 = *v4;
                v41 = *(_QWORD *)&v3[v40];
                if (v41 == -1 || v41 >= *(_QWORD *)&v3[*v5])
                  break;
                v42 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v41);
                *(_QWORD *)&v3[v40] = v41 + 1;
                v39 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  v14 = v38++ >= 9;
                  if (!v14)
                    continue;
                }
                goto LABEL_71;
              }
              v3[*v6] = 1;
LABEL_71:
              PBRepeatedUInt32Add();
            }
            continue;
          }
          if ((_DWORD)v18 != 1)
          {
            if (!PBReaderSkipValueWithTag())
              goto LABEL_73;
            continue;
          }
          v19 = 0;
          v20 = 0;
          v21 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v22 = *v4;
            v23 = *(_QWORD *)&v3[v22];
            if (v23 == -1 || v23 >= *(_QWORD *)&v3[*v5])
              break;
            v24 = *(_BYTE *)(*(_QWORD *)&v3[*v7] + v23);
            *(_QWORD *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_52;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_54;
            }
          }
          v3[*v6] = 1;
LABEL_52:
          if (v3[*v6])
            LODWORD(v21) = 0;
LABEL_54:
          v36 = 36;
        }
        *(_DWORD *)(a1 + v36) = v21;
      }
      while (*(_QWORD *)&v3[*v4] < *(_QWORD *)&v3[*v5]);
    }
    v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_73:
    v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_18982DF08(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982F304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18982F3B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18982F6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18982F98C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18982FC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Block_object_dispose((const void *)(v33 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_189830BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_189830EEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

BOOL GEOAlwaysUseV2PreambleForRequestKind(int a1)
{
  return a1 == 2560;
}

id GEOProtocolBufferRequestHeader(int a1, int a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;

  v6 = (void *)MEMORY[0x18D764E2C]();
  v7 = objc_alloc_init(MEMORY[0x1E0D82B98]);
  writeARPCPreamble(v7, a1, a2);
  objc_msgSend(v7, "writeBigEndianFixed32:", a3);
  objc_msgSend(v7, "immutableData");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v6);
  return v8;
}

id GEOProtocolBufferRequestPreamble(int a1, int a2)
{
  void *v4;
  id v5;
  void *v6;

  v4 = (void *)MEMORY[0x18D764E2C]();
  v5 = objc_alloc_init(MEMORY[0x1E0D82B98]);
  writeARPCPreamble(v5, a1, a2);
  objc_msgSend(v5, "immutableData");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v4);
  return v6;
}

void sub_189832078(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOETARequestReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  int *v6;
  int *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint32x4_t v14;
  int8x16_t v15;
  uint64x2_t v16;
  int32x2_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int *v23;
  int *v24;
  int *v25;
  int *v26;
  char v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  int v35;
  unint64_t v37;
  BOOL v38;
  int *v39;
  int v40;
  int v41;
  BOOL v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  GEOWaypoint *v50;
  id v51;
  void *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  char v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  void *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  char v123;
  char v124;
  uint64_t v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  void *v132;
  int v134;
  char v135;
  char v136;
  char v137;
  char v138;

  v3 = a2;
  if (!a2)
    return v3;
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 296));
  v6 = (int *)MEMORY[0x1E0D82BD8];
  *(_QWORD *)(v3 + (int)*MEMORY[0x1E0D82BD8]) = *(unsigned int *)(a1 + 292);
  objc_msgSend((id)v3, "seekToOffset:", *(unsigned int *)(a1 + 288));
  v7 = v6;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = *(_QWORD *)(a1 + 320);
  v14 = (uint32x4_t)vdupq_n_s32(v13);
  v15.i64[0] = 0x100000001;
  v15.i64[1] = 0x100000001;
  v16 = (uint64x2_t)vdupq_n_s64(v13);
  v17 = vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v16, (uint64x2_t)xmmword_189CD7C00)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v16, (uint64x2_t)xmmword_189CE4E40)), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v16, (uint64x2_t)xmmword_189CE4E50)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFF3FFFFFFE2), (int8x8_t)0x100000001)));
  v18 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CE4E10), v15), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CE4E20), v15)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_189CE4E30), v15)))+ ((v13 >> 39) & 1)+ ((v13 >> 40) & 1)+ ((v13 >> 18) & 1)+ ((v13 >> 36) & 1)+ ((v13 >> 17) & 1)+ (BYTE3(v13) & 1)+ ((v13 >> 14) & 1)+ vadd_s32(v17, vdup_lane_s32(v17, 1)).u32[0]+ (v13 >> 31);
  while (2)
  {
    v19 = 1;
    v20 = 1;
    v21 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v18;
        goto LABEL_8;
      case -3:
        v9 = 1;
        goto LABEL_7;
      case -2:
        v20 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        v22 = v18 > 0x14;
        v135 = v22 & ~(_BYTE)v12 | v10;
        v136 = v22 | v12 | v135;
        if ((((v22 | v12) | v9) & 1) != 0)
          v23 = 0;
        else
          v23 = a3;
        v137 = (v23 == 0) | v22 | v12;
        v138 = v22 | v12;
        v24 = (int *)MEMORY[0x1E0D82BF0];
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        break;
      default:
        ++v18;
LABEL_7:
        v19 = v10;
LABEL_8:
        v20 = v11;
        v21 = v12;
LABEL_10:
        ++v8;
        v10 = v19;
        v11 = v20;
        v12 = v21;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(_QWORD *)(v3 + *v24) >= *(_QWORD *)(v3 + *v7) || *(_BYTE *)(v3 + *v25))
      goto LABEL_372;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    while (1)
    {
      v30 = *v24;
      v31 = *(_QWORD *)(v3 + v30);
      v32 = v31 + 1;
      if (v31 == -1 || v32 > *(_QWORD *)(v3 + *v7))
        break;
      v33 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v31);
      *(_QWORD *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0)
        goto LABEL_25;
      v27 += 7;
      v34 = v28++ >= 9;
      if (v34)
      {
        v29 = 0;
        v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(_BYTE *)(v3 + *v25) = 1;
LABEL_25:
    v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(_BYTE *)(v3 + *v25))
      v29 = 0;
LABEL_27:
    if (v35 || (v29 & 7) == 4)
    {
LABEL_372:
      v134 = 1;
      goto LABEL_373;
    }
    v37 = v29 >> 3;
    v38 = v138;
    if ((v137 & 1) == 0)
    {
      v39 = v23;
      do
      {
        v41 = *v39++;
        v40 = v41;
        v38 = v41 != 0;
        if (v41)
          v42 = v40 == (_DWORD)v37;
        else
          v42 = 1;
      }
      while (!v42);
    }
    switch((int)v37)
    {
      case 1:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v43 = 0;
        v44 = 0;
        v45 = 0;
        *(_QWORD *)(a1 + 320) |= 0x10uLL;
        while (1)
        {
          v46 = *v24;
          v47 = *(_QWORD *)(v3 + v46);
          v48 = v47 + 1;
          if (v47 == -1 || v48 > *(_QWORD *)(v3 + *v7))
            break;
          v49 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v47);
          *(_QWORD *)(v3 + v46) = v48;
          v45 |= (unint64_t)(v49 & 0x7F) << v43;
          if ((v49 & 0x80) == 0)
            goto LABEL_287;
          v43 += 7;
          v34 = v44++ >= 9;
          if (v34)
          {
            LODWORD(v45) = 0;
            goto LABEL_289;
          }
        }
        *(_BYTE *)(v3 + *v25) = 1;
LABEL_287:
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v45) = 0;
LABEL_289:
        v125 = 304;
        goto LABEL_369;
      case 2:
        if ((v9 & 1) == 0)
          goto LABEL_282;
        if (!PBReaderPlaceMark() || (GEOTimepointReadAllFrom(a1 + 24, v3) & 1) == 0)
          goto LABEL_394;
        PBReaderRecallMark();
        v54 = *(_QWORD *)(a1 + 320) | 1;
        goto LABEL_102;
      case 3:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 323) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 34;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOWaypoint);
        if (!GEOWaypointReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 184;
        goto LABEL_249;
      case 4:
        if (!v38 || (*(_BYTE *)(a1 + 322) & 0x20) != 0)
          goto LABEL_282;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOWaypoint);
        if (!GEOWaypointReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        -[GEOETARequest _addNoFlagsDestination:](a1, v50);
        goto LABEL_259;
      case 5:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        *(_QWORD *)(a1 + 320) |= 0x100uLL;
        while (2)
        {
          v59 = *v24;
          v60 = *(_QWORD *)(v3 + v59);
          v61 = v60 + 1;
          if (v60 == -1 || v61 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v60);
            *(_QWORD *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              v34 = v57++ >= 9;
              if (v34)
              {
                v58 = 0;
                goto LABEL_293;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v58 = 0;
LABEL_293:
        v126 = v58 != 0;
        v127 = 314;
        goto LABEL_322;
      case 6:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v63 = 0;
        v64 = 0;
        v65 = 0;
        *(_QWORD *)(a1 + 320) |= 0x40uLL;
        while (2)
        {
          v66 = *v24;
          v67 = *(_QWORD *)(v3 + v66);
          v68 = v67 + 1;
          if (v67 == -1 || v68 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v69 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v67);
            *(_QWORD *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              v34 = v64++ >= 9;
              if (v34)
              {
                v65 = 0;
                goto LABEL_297;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v65 = 0;
LABEL_297:
        v126 = v65 != 0;
        v127 = 312;
        goto LABEL_322;
      case 7:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v70 = 0;
        v71 = 0;
        v72 = 0;
        *(_QWORD *)(a1 + 320) |= 0x80uLL;
        while (2)
        {
          v73 = *v24;
          v74 = *(_QWORD *)(v3 + v73);
          v75 = v74 + 1;
          if (v74 == -1 || v75 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v76 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v74);
            *(_QWORD *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              v34 = v71++ >= 9;
              if (v34)
              {
                v72 = 0;
                goto LABEL_301;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v72 = 0;
LABEL_301:
        v126 = v72 != 0;
        v127 = 313;
        goto LABEL_322;
      case 8:
        if ((v9 & 1) == 0)
          goto LABEL_282;
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((_QWORD *)(a1 + 48), v3) & 1) == 0)
          goto LABEL_394;
        PBReaderRecallMark();
        v54 = *(_QWORD *)(a1 + 320) | 2;
LABEL_102:
        *(_QWORD *)(a1 + 320) = v54;
        goto LABEL_362;
      case 9:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v77 = 0;
        v78 = 0;
        v45 = 0;
        *(_QWORD *)(a1 + 320) |= 0x20uLL;
        while (2)
        {
          v79 = *v24;
          v80 = *(_QWORD *)(v3 + v79);
          v81 = v80 + 1;
          if (v80 == -1 || v81 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v82 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v80);
            *(_QWORD *)(v3 + v79) = v81;
            v45 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              v34 = v78++ >= 9;
              if (v34)
              {
                LODWORD(v45) = 0;
                goto LABEL_305;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v45) = 0;
LABEL_305:
        v125 = 308;
        goto LABEL_369;
      case 10:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 321) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 48;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOAdditionalEnabledMarkets);
        if (!GEOAdditionalEnabledMarketsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 72;
        goto LABEL_249;
      case 11:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 323) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 38;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 152;
        goto LABEL_249;
      case 12:
        if (!v38 || (*(_BYTE *)(a1 + 322) & 0x10) != 0)
          goto LABEL_282;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        -[GEOETARequest _addNoFlagsDestinationWaypointTyped:](a1, v50);
        goto LABEL_259;
      case 13:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 322) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 47;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 80;
        goto LABEL_249;
      case 14:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 324) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 24;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 272;
        goto LABEL_249;
      case 15:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 325) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 23;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 280;
        goto LABEL_249;
      case 16:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v83 = 0;
        v84 = 0;
        v85 = 0;
        *(_QWORD *)(a1 + 320) |= 0x1000uLL;
        while (2)
        {
          v86 = *v24;
          v87 = *(_QWORD *)(v3 + v86);
          v88 = v87 + 1;
          if (v87 == -1 || v88 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v89 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v87);
            *(_QWORD *)(v3 + v86) = v88;
            v85 |= (unint64_t)(v89 & 0x7F) << v83;
            if (v89 < 0)
            {
              v83 += 7;
              v34 = v84++ >= 9;
              if (v34)
              {
                v85 = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v85 = 0;
LABEL_309:
        v126 = v85 != 0;
        v127 = 318;
        goto LABEL_322;
      case 17:
LABEL_53:
        if ((v135 & 1) == 0 || (*(_BYTE *)(a1 + 321) & 0x20) != 0)
          goto LABEL_284;
        if (!*(_QWORD *)(a1 + 16))
        {
          v51 = objc_alloc_init(MEMORY[0x1E0D82BB0]);
          v52 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v51;

        }
        v53 = PBUnknownFieldAdd();
        v25 = (int *)MEMORY[0x1E0D82BC8];
        v7 = (int *)MEMORY[0x1E0D82BD8];
        v26 = (int *)MEMORY[0x1E0D82BB8];
        if (v53)
          goto LABEL_363;
        v134 = 0;
        goto LABEL_374;
      case 18:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 322) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 45;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOCommonOptions);
        if (!GEOCommonOptionsReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 96;
        goto LABEL_249;
      case 19:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 324) & 0x10) == 0)
        {
          PBReaderReadData();
          v90 = objc_claimAutoreleasedReturnValue();
          v91 = 248;
          goto LABEL_206;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_394;
        v128 = *(_QWORD *)(a1 + 320) << 27;
        goto LABEL_361;
      case 20:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 323) & 4) == 0)
        {
          PBReaderReadData();
          v90 = objc_claimAutoreleasedReturnValue();
          v91 = 160;
          goto LABEL_206;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_394;
        v128 = *(_QWORD *)(a1 + 320) << 37;
        goto LABEL_361;
      case 21:
        if (!v38 || (*(_BYTE *)(a1 + 323) & 8) != 0)
          goto LABEL_282;
        PBReaderReadData();
        v50 = (GEOWaypoint *)objc_claimAutoreleasedReturnValue();
        if (v50)
          -[GEOETARequest _addNoFlagsOriginalRouteZilchPoints:](a1, v50);
        goto LABEL_259;
      case 22:
        if (!v38 || (*(_BYTE *)(a1 + 322) & 0x40) != 0)
          goto LABEL_282;
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        -[GEOETARequest _addNoFlagsDeviceHistoricalLocation:](a1, v50);
        goto LABEL_259;
      case 23:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 322) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 46;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOClientCapabilities);
        if (!GEOClientCapabilitiesReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 88;
        goto LABEL_249;
      case 24:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 323) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 39;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 144;
        goto LABEL_249;
      case 25:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 321) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 49;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOPDABClientDatasetMetadata);
        if (!GEOPDABClientDatasetMetadataReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 64;
        goto LABEL_249;
      case 26:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v92 = 0;
        v93 = 0;
        v94 = 0;
        *(_QWORD *)(a1 + 320) |= 0x400uLL;
        while (2)
        {
          v95 = *v24;
          v96 = *(_QWORD *)(v3 + v95);
          v97 = v96 + 1;
          if (v96 == -1 || v97 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v98 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v96);
            *(_QWORD *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              v34 = v93++ >= 9;
              if (v34)
              {
                v94 = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v94 = 0;
LABEL_313:
        v126 = v94 != 0;
        v127 = 316;
        goto LABEL_322;
      case 27:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v99 = 0;
        v100 = 0;
        v101 = 0;
        *(_QWORD *)(a1 + 320) |= 0x800uLL;
        while (2)
        {
          v102 = *v24;
          v103 = *(_QWORD *)(v3 + v102);
          v104 = v103 + 1;
          if (v103 == -1 || v104 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v105 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v103);
            *(_QWORD *)(v3 + v102) = v104;
            v101 |= (unint64_t)(v105 & 0x7F) << v99;
            if (v105 < 0)
            {
              v99 += 7;
              v34 = v100++ >= 9;
              if (v34)
              {
                v101 = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v101 = 0;
LABEL_317:
        v126 = v101 != 0;
        v127 = 317;
        goto LABEL_322;
      case 28:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 323) & 0x80) == 0)
        {
          PBReaderReadString();
          v90 = objc_claimAutoreleasedReturnValue();
          v91 = 200;
          goto LABEL_206;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_394;
        v128 = *(_QWORD *)(a1 + 320) << 32;
        goto LABEL_361;
      case 29:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 324) & 4) == 0)
        {
          PBReaderReadString();
          v90 = objc_claimAutoreleasedReturnValue();
          v91 = 224;
LABEL_206:
          v106 = *(void **)(a1 + v91);
          *(_QWORD *)(a1 + v91) = v90;
          goto LABEL_250;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          goto LABEL_394;
        v128 = *(_QWORD *)(a1 + 320) << 29;
        goto LABEL_361;
      case 30:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        *(_QWORD *)(a1 + 320) |= 4uLL;
        v107 = *v24;
        v108 = *(_QWORD *)(v3 + v107);
        if (v108 <= 0xFFFFFFFFFFFFFFF7 && v108 + 8 <= *(_QWORD *)(v3 + *v7))
        {
          v109 = *(_QWORD *)(*(_QWORD *)(v3 + *v26) + v108);
          *(_QWORD *)(v3 + v107) = v108 + 8;
        }
        else
        {
          *(_BYTE *)(v3 + *v25) = 1;
          v109 = 0;
        }
        *(_QWORD *)(a1 + 240) = v109;
        goto LABEL_363;
      case 31:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 322) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 44;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOCyclingOptions);
        if (!GEOCyclingOptionsReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 104;
        goto LABEL_249;
      case 32:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 323) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 35;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOOriginalWaypointRoute);
        if (!GEOOriginalWaypointRouteReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 176;
        goto LABEL_249;
      case 33:
        if ((v9 & 1) == 0)
          goto LABEL_284;
        v110 = 0;
        v111 = 0;
        v112 = 0;
        *(_QWORD *)(a1 + 320) |= 0x200uLL;
        while (2)
        {
          v113 = *v24;
          v114 = *(_QWORD *)(v3 + v113);
          v115 = v114 + 1;
          if (v114 == -1 || v115 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v116 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v114);
            *(_QWORD *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              v34 = v111++ >= 9;
              if (v34)
              {
                v112 = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          v112 = 0;
LABEL_321:
        v126 = v112 != 0;
        v127 = 315;
LABEL_322:
        *(_BYTE *)(a1 + v127) = v126;
        goto LABEL_363;
      case 34:
        if (!v38 || (*(_BYTE *)(a1 + 322) & 0x80) != 0)
        {
LABEL_282:
          v123 = PBReaderSkipValueWithTag();
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          if ((v123 & 1) == 0)
            goto LABEL_392;
          goto LABEL_363;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOWaypointTyped);
        if (!GEOWaypointTypedReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        -[GEOETARequest _addNoFlagsIntermediateWaypointTyped:](a1, v50);
LABEL_259:

        goto LABEL_362;
      case 35:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 324) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 30;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEORecentLocationHistory);
        if (!GEORecentLocationHistoryReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 216;
        goto LABEL_249;
      case 36:
        if (!v38)
          goto LABEL_284;
        if ((*(_BYTE *)(a1 + 324) & 1) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 31;
          goto LABEL_361;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOPrivacyMetadata);
        if (!GEOPrivacyMetadataReadAllFrom((uint64_t)v50, (void *)v3))
          goto LABEL_393;
        PBReaderRecallMark();
        v55 = 208;
        goto LABEL_249;
      case 37:
        if (!v38)
        {
LABEL_284:
          v124 = PBReaderSkipValueWithTag();
          v26 = (int *)MEMORY[0x1E0D82BB8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v25 = (int *)MEMORY[0x1E0D82BC8];
          if ((v124 & 1) == 0)
          {
LABEL_392:
            v134 = 0;
            goto LABEL_373;
          }
LABEL_363:
          if (!(v136 & 1 | (v8 != 0)))
            goto LABEL_372;
          continue;
        }
        if ((*(_BYTE *)(a1 + 323) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            goto LABEL_394;
          v128 = *(_QWORD *)(a1 + 320) << 33;
LABEL_361:
          v8 += v128 >> 63;
LABEL_362:
          v25 = (int *)MEMORY[0x1E0D82BC8];
          v7 = (int *)MEMORY[0x1E0D82BD8];
          v26 = (int *)MEMORY[0x1E0D82BB8];
          goto LABEL_363;
        }
        if ((PBReaderPlaceMark() & 1) == 0)
          goto LABEL_394;
        v50 = objc_alloc_init(GEOPathComputationOptions);
        if (GEOPathComputationOptionsReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          v55 = 192;
LABEL_249:
          v106 = *(void **)(a1 + v55);
          *(_QWORD *)(a1 + v55) = v50;
LABEL_250:

          --v8;
          goto LABEL_362;
        }
LABEL_393:

LABEL_394:
        v134 = 0;
        v25 = (int *)MEMORY[0x1E0D82BC8];
LABEL_373:
        if ((v135 & 1) != 0)
LABEL_374:
          *(_QWORD *)(a1 + 320) |= 0x2000uLL;
        if (v138 & 1 | ((v134 & 1) == 0))
        {
          *(_QWORD *)(a1 + 320) |= 0x1FFFFFFC000uLL;
          goto LABEL_386;
        }
        if (v23)
        {
          while (1)
          {
            do
            {
LABEL_378:
              v130 = *v23++;
              v129 = v130;
            }
            while (v130 <= 99);
            switch(v129)
            {
              case 'd':
                v131 = 0x800000000;
                break;
              case 'e':
                v131 = 0x2000000000;
                break;
              case 'f':
                v131 = 0x4000000000;
                break;
              default:
                goto LABEL_378;
            }
            *(_QWORD *)(a1 + 320) |= v131;
          }
        }
LABEL_386:
        if (v134)
          v3 = *(_BYTE *)(v3 + *v25) == 0;
        else
          v3 = 0;
        if ((v138 & 1) != 0)
        {
          v132 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = 0;

        }
        return v3;
      default:
        switch((int)v37)
        {
          case 'd':
            if (!v38 || (*(_BYTE *)(a1 + 324) & 8) != 0)
              goto LABEL_282;
            if ((PBReaderPlaceMark() & 1) == 0)
              goto LABEL_394;
            v50 = objc_alloc_init(GEOGeoServiceTag);
            if (!GEOGeoServiceTagReadAllFrom((uint64_t)v50, (void *)v3))
              goto LABEL_393;
            PBReaderRecallMark();
            -[GEOETARequest _addNoFlagsServiceTag:](a1, v50);
            goto LABEL_259;
          case 'e':
            if (!v38 || (*(_BYTE *)(a1 + 324) & 0x20) != 0)
              goto LABEL_282;
            PBReaderReadData();
            v50 = (GEOWaypoint *)objc_claimAutoreleasedReturnValue();
            if (v50)
              -[GEOETARequest _addNoFlagsTrafficApiResponses:](a1, v50);
            goto LABEL_259;
          case 'f':
            if (!v38 || (*(_BYTE *)(a1 + 324) & 0x40) != 0)
              goto LABEL_282;
            PBReaderReadString();
            v50 = (GEOWaypoint *)objc_claimAutoreleasedReturnValue();
            if (v50)
              -[GEOETARequest _addNoFlagsTrafficSnapshotIds:](a1, v50);
            goto LABEL_259;
          case 'g':
            if ((v9 & 1) == 0)
              goto LABEL_284;
            v117 = 0;
            v118 = 0;
            v45 = 0;
            *(_QWORD *)(a1 + 320) |= 8uLL;
            break;
          default:
            goto LABEL_53;
        }
        while (2)
        {
          v119 = *v24;
          v120 = *(_QWORD *)(v3 + v119);
          v121 = v120 + 1;
          if (v120 == -1 || v121 > *(_QWORD *)(v3 + *v7))
          {
            *(_BYTE *)(v3 + *v25) = 1;
          }
          else
          {
            v122 = *(_BYTE *)(*(_QWORD *)(v3 + *v26) + v120);
            *(_QWORD *)(v3 + v119) = v121;
            v45 |= (unint64_t)(v122 & 0x7F) << v117;
            if (v122 < 0)
            {
              v117 += 7;
              v34 = v118++ >= 9;
              if (v34)
              {
                LODWORD(v45) = 0;
                goto LABEL_368;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(v3 + *v25))
          LODWORD(v45) = 0;
LABEL_368:
        v125 = 300;
LABEL_369:
        *(_DWORD *)(a1 + v125) = v45;
        goto LABEL_363;
    }
  }
}

